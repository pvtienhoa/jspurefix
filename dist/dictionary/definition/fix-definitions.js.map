{"version":3,"file":"fix-definitions.js","sourceRoot":"","sources":["../../../src/dictionary/definition/fix-definitions.ts"],"names":[],"mappings":"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","sourcesContent":["import { INumericKeyed } from '../../collections/collection'\r\nimport { Dictionary } from '../../collections'\r\nimport { ComponentFieldDefinition } from './component-field-definition'\r\nimport { MessageDefinition } from './message-definition'\r\nimport { SimpleFieldDefinition } from './simple-field-definition'\r\nimport { FixDefinitionSource, FixVersion } from '../fix-versions'\r\nimport { CategorySimpleSet } from './category-simple-set'\r\nimport { ContainedFieldSet } from '../contained'\r\n\r\nexport class FixDefinitions {\r\n  public readonly simple: Dictionary<SimpleFieldDefinition> = new Dictionary<SimpleFieldDefinition>()\r\n  public readonly component: Dictionary<ComponentFieldDefinition> = new Dictionary<ComponentFieldDefinition>()\r\n  public readonly message: Dictionary<MessageDefinition> = new Dictionary<MessageDefinition>()\r\n  public readonly tagToSimple: INumericKeyed<SimpleFieldDefinition> = {}\r\n  public readonly categorySimple: Dictionary<CategorySimpleSet> = new Dictionary<CategorySimpleSet>()\r\n\r\n  constructor (public readonly source: FixDefinitionSource, public readonly version: FixVersion) {\r\n  }\r\n\r\n  public containedSet (type: string): ContainedFieldSet {\r\n    return this.message.get(type) || this.component.get(type)\r\n  }\r\n\r\n  public addMessage (message: MessageDefinition): void {\r\n    const messages = this.message\r\n    messages.addUpdate(message.name, message)\r\n    if (message.msgType && message.msgType !== message.name) {\r\n      messages.addUpdate(message.msgType, message)\r\n    }\r\n    if (message.abbreviation) {\r\n      if (message.abbreviation !== message.name) {\r\n        messages.addUpdate(message.abbreviation, message)\r\n      }\r\n    }\r\n  }\r\n\r\n  public addComponentFieldDef (field: ComponentFieldDefinition): void {\r\n    this.component.addUpdate(field.name, field)\r\n  }\r\n\r\n  public getSimple (name: string, cat?: string): SimpleFieldDefinition {\r\n    let sf: SimpleFieldDefinition = null\r\n    if (cat) {\r\n      let category: CategorySimpleSet = this.categorySimple.get(cat)\r\n      if (category) {\r\n        sf = category.simple.get(name)\r\n      }\r\n    }\r\n    if (!sf) {\r\n      sf = this.simple.get(name)\r\n    }\r\n    return sf\r\n  }\r\n\r\n  public addSimpleAlias (from: string, to: string): void {\r\n    const simple = this.simple.get(from)\r\n    if (simple) {\r\n      this.simple.addUpdate(to, simple)\r\n    }\r\n  }\r\n\r\n  public addSimpleFieldDef (field: SimpleFieldDefinition, typeName: string = null): void {\r\n    this.assignCategory(field)\r\n    const simple = this.simple\r\n    simple.addUpdate(field.num, field)\r\n    simple.addUpdate(field.name, field)\r\n    this.tagToSimple[field.tag] = field\r\n    if (field.abbreviation && field.abbreviation !== field.name) {\r\n      if (!simple.containsKey(field.abbreviation)) {\r\n        simple.addUpdate(field.abbreviation, field)\r\n      }\r\n    }\r\n    if (typeName && typeName !== field.name && field.name && field.type) {\r\n      simple.addUpdate(typeName, field)\r\n    }\r\n  }\r\n\r\n  private assignCategory (field: SimpleFieldDefinition) {\r\n    if (field.baseCategory && field.baseCategoryAbbreviation) {\r\n      let category: CategorySimpleSet = this.categorySimple.get(field.baseCategory)\r\n      if (!category) {\r\n        category = new CategorySimpleSet(field.baseCategory)\r\n        this.categorySimple.add(field.baseCategory, category)\r\n      }\r\n      category.simple.addUpdate(field.baseCategoryAbbreviation, field)\r\n    }\r\n  }\r\n}\r\n"]}