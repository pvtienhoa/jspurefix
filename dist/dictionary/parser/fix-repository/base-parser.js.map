{"version":3,"file":"base-parser.js","sourceRoot":"","sources":["../../../../src/dictionary/parser/fix-repository/base-parser.ts"],"names":[],"mappings":";;AAIA,MAAsB,UAAU;IAI9B,YAAuC,MAA2B,EAAkB,IAAY;QAAzD,WAAM,GAAN,MAAM,CAAqB;QAAkB,SAAI,GAAJ,IAAI,CAAQ;QAHzF,SAAI,GAAmB,EAAE,CAAA;IAIhC,CAAC;IAEM,KAAK,CAAE,IAAY,EAAE,CAAS,EAAE,CAAS;QAC9C,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IACrB,CAAC;IAEM,KAAK,CAAE,IAAY,EAAE,IAAY;QACtC,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;YACtB,OAAM;SACP;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAA;IAC5C,CAAC;IAEM,IAAI,CAAE,IAAY,EAAE,IAAc;QACvC,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;YAC3B,OAAM;SACP;QACD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAA;IACnB,CAAC;CACF;AAzBD,gCAyBC","sourcesContent":["import { ILooseObject } from '../../../collections/collection'\r\nimport { ISaxNode } from '../../dict-primitive'\r\nimport { RepositoryXmlParser } from './repository-xml-parser'\r\n\r\nexport abstract class BaseParser {\r\n  public data: ILooseObject[] = []\r\n  public current: ILooseObject\r\n\r\n  protected constructor (public readonly parser: RepositoryXmlParser, public readonly name: string) {\r\n  }\r\n\r\n  public value (line: number, n: string, v: string): void {\r\n    this.current[n] = v\r\n  }\r\n\r\n  public close (line: number, node: string): void {\r\n    if (node !== this.name) {\r\n      return\r\n    }\r\n\r\n    this.data[this.data.length] = this.current\r\n  }\r\n\r\n  public open (line: number, node: ISaxNode): void {\r\n    if (node.name !== this.name) {\r\n      return\r\n    }\r\n    this.current = {}\r\n  }\r\n}\r\n"]}