{"version":3,"file":"acceptor.js","sourceRoot":"","sources":["../../../src/transport/fixml/acceptor.ts"],"names":[],"mappings":";;;;;;;;;;AAGA,kCAAsC;AAGtC,SAAgB,QAAQ,CAAE,MAAoB,EAAE,cAA8B;IAC5E,OAAO,IAAI,OAAO,CAAM,CAAO,MAAM,EAAE,MAAM,EAAE,EAAE;QAC/C,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;QACnD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;QACxB,MAAM,QAAQ,GAAgB,IAAI,mBAAY,CAAC,MAAM,CAAC,CAAA;QACtD,QAAQ,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAe,EAAE,EAAE;YAC3C,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAA;YACrC,MAAM,eAAe,GAAG,cAAc,CAAC,MAAM,CAAC,CAAA;YAC9C,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC/B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;gBACnB,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE;oBAClB,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAA;oBAC/B,MAAM,EAAE,CAAA;gBACV,CAAC,CAAC,CAAA;YACJ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAQ,EAAE,EAAE;gBACpB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;gBACf,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;gBACpB,MAAM,CAAC,CAAC,CAAC,CAAA;YACX,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QACF,QAAQ,CAAC,MAAM,EAAE,CAAA;IACnB,CAAC,CAAA,CAAC,CAAA;AACJ,CAAC;AAtBD,4BAsBC","sourcesContent":["import { IJsFixConfig } from '../../config'\r\nimport { FixAcceptor } from '../fix-acceptor'\r\nimport { MsgTransport } from '../msg-transport'\r\nimport { HttpAcceptor } from '../http'\r\nimport { MakeFixSession } from '../make-fixl-session'\r\n\r\nexport function acceptor (config: IJsFixConfig, sessionFactory: MakeFixSession): Promise<any> {\r\n  return new Promise<any>(async (accept, reject) => {\r\n    const logger = config.logFactory.logger('acceptor')\r\n    logger.info('starting.')\r\n    const acceptor: FixAcceptor = new HttpAcceptor(config)\r\n    acceptor.on('transport', (t: MsgTransport) => {\r\n      logger.info('creates new transport.')\r\n      const acceptorSession = sessionFactory(config)\r\n      acceptorSession.run(t).then(() => {\r\n        logger.info('ends')\r\n        acceptor.close(() => {\r\n          logger.info('acceptor closed.')\r\n          accept()\r\n        })\r\n      }).catch((e: Error) => {\r\n        logger.error(e)\r\n        logger.info(e.stack)\r\n        reject(e)\r\n      })\r\n    })\r\n    acceptor.listen()\r\n  })\r\n}\r\n"]}