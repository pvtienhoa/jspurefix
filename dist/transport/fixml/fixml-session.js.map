{"version":3,"file":"fixml-session.js","sourceRoot":"","sources":["../../../src/transport/fixml/fixml-session.ts"],"names":[],"mappings":";;AACA,4DAAmD;AAEnD,sDAAyE;AACzE,2CAAyC;AACzC,gDAA2C;AAE3C,MAAsB,YAAa,SAAQ,wBAAU;IAEnD,YAAuC,MAAoB;QACzD,KAAK,CAAC,MAAM,CAAC,CAAA;QADwB,WAAM,GAAN,MAAM,CAAc;QAEzD,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAA;QAClC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAA;QACjC,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAA;IACpC,CAAC;IAES,KAAK,CAAE,OAAe,EAAE,IAAa;QAE7C,QAAQ,OAAO,EAAE;YACf,KAAK,SAAS,CAAC;YACf,KAAK,SAAS,CAAC,CAAC;gBACd,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;gBAChC,MAAK;aACN;YAED,OAAO,CAAC,CAAC;gBACP,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;gBACnC,MAAK;aACN;SACF;IACH,CAAC;IAES,YAAY,CAAE,OAAe,EAAE,IAAa;QACpD,QAAQ,OAAO,EAAE;YACf,KAAK,SAAS,CAAC,CAAC;gBACd,MAAM,OAAO,GAAW,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;gBACnD,QAAQ,OAAO,EAAE;oBACf,KAAK,sBAAe,CAAC,SAAS,CAAC,CAAC;wBAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;wBACpB,MAAK;qBACN;oBAED,KAAK,sBAAe,CAAC,UAAU,CAAC,CAAC;wBAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;wBACrB,MAAK;qBACN;iBACF;gBACD,MAAK;aACN;YAED,KAAK,SAAS,CAAC,CAAC;gBACd,MAAM,UAAU,GAAW,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;gBACtD,QAAQ,UAAU,EAAE;oBAClB,KAAK,iBAAU,CAAC,QAAQ,CAAC,CAAC;wBACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;wBACpB,MAAK;qBACN;oBAED,KAAK,iBAAU,CAAC,WAAW,CAAC,CAAC;wBAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;wBACrB,MAAK;qBACN;iBACF;gBACD,MAAK;aACN;SACF;IACH,CAAC;IAEO,SAAS,CAAE,IAAa;QAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAA;QACjC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAA;QAC/B,KAAK,CAAC,KAAK,GAAG,gCAAY,CAAC,YAAY,CAAA;QACvC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAM,CAAC,YAAY,CAAC,CAAA;QACrD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,KAAK,GAAW,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;YACjD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAA;SAC7D;QACD,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAA;QACvC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IACpB,CAAC;CACF;AAzED,oCAyEC","sourcesContent":["import { MsgView } from '../../buffer'\r\nimport { SessionState } from '../fix-session-state'\r\nimport { IJsFixConfig } from '../../config'\r\nimport { UserRequestType, UserStatus } from '../../types/FIXML50SP2/enum'\r\nimport { MsgTag } from '../../types/enum'\r\nimport { FixSession } from '../fix-session'\r\n\r\nexport abstract class FixmlSession extends FixSession {\r\n\r\n  protected constructor (public readonly config: IJsFixConfig) {\r\n    super(config)\r\n    this.requestLogoutType = 'UserReq'\r\n    this.requestLogonType = 'UserReq'\r\n    this.respondLogoutType = 'UserRsp'\r\n  }\r\n\r\n  protected onMsg (msgType: string, view: MsgView): void {\r\n\r\n    switch (msgType) {\r\n      case 'UserReq':\r\n      case 'UserRsp': {\r\n        this.onSessionMsg(msgType, view)\r\n        break\r\n      }\r\n\r\n      default: {\r\n        this.checkForwardMsg(msgType, view)\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  protected onSessionMsg (msgType: string, view: MsgView): void {\r\n    switch (msgType) {\r\n      case 'UserReq': {\r\n        const reqType: number = view.getTyped('UserReqTyp')\r\n        switch (reqType) {\r\n          case UserRequestType.LogOnUser: {\r\n            this.peerLogon(view)\r\n            break\r\n          }\r\n\r\n          case UserRequestType.LogOffUser: {\r\n            this.peerLogout(view)\r\n            break\r\n          }\r\n        }\r\n        break\r\n      }\r\n\r\n      case 'UserRsp': {\r\n        const userStatus: number = view.getTyped('UserStatus')\r\n        switch (userStatus) {\r\n          case UserStatus.LoggedIn: {\r\n            this.peerLogon(view)\r\n            break\r\n          }\r\n\r\n          case UserStatus.NotLoggedIn: {\r\n            this.peerLogout(view)\r\n            break\r\n          }\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  private peerLogon (view: MsgView) {\r\n    const logger = this.sessionLogger\r\n    const state = this.sessionState\r\n    state.state = SessionState.PeerLoggedOn\r\n    state.peerCompId = view.getTyped(MsgTag.SenderCompID)\r\n    if (this.acceptor) {\r\n      const reqId: string = view.getString('UserReqID')\r\n      this.send('UserRsp', this.config.factory.logon(reqId, true))\r\n    }\r\n    logger.info(`system ready, inform app`)\r\n    this.onReady(view)\r\n  }\r\n}\r\n"]}