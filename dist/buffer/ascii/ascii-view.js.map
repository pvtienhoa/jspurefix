{"version":3,"file":"ascii-view.js","sourceRoot":"","sources":["../../../src/buffer/ascii/ascii-view.ts"],"names":[],"mappings":"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","sourcesContent":["import { SimpleFieldDefinition } from '../../dictionary'\r\nimport { SegmentDescription } from '../segment-description'\r\nimport { Structure } from '../structure'\r\nimport { TagType } from '../tags'\r\nimport { MsgView } from '../msg-view'\r\nimport { ElasticBuffer } from '../elastic-buffer'\r\nimport { ITimeFormatter } from './itime-formatter'\r\nimport { TimeFormatter } from './time-formatter'\r\nimport { TagPos } from '../tag-pos'\r\nimport { MsgTag } from '../../types/enum'\r\n\r\nexport class AsciiView extends MsgView {\r\n  private readonly timeFormatter: ITimeFormatter = new TimeFormatter(this.buffer)\r\n  constructor (public readonly segment: SegmentDescription,\r\n               public readonly buffer: ElasticBuffer,\r\n               public readonly structure: Structure,\r\n               public readonly ptr: number,\r\n               public readonly delimiter: number,\r\n               public readonly writeDelimiter: number) {\r\n\r\n    super(segment, structure)\r\n  }\r\n\r\n  // if the view is to be kept beyond the event on which it arrives, must be cloned\r\n  public clone (): MsgView {\r\n    const structure = this.structure\r\n    const buffer = this.buffer.clone()\r\n    const segment = this.segment\r\n    const delimiter = this.delimiter\r\n    const writeDelimiter = this.writeDelimiter\r\n    if (structure) {\r\n      return new AsciiView(segment, buffer, new Structure(structure.tags.clone(), structure.segments), this.ptr, delimiter, writeDelimiter)\r\n    }\r\n    return new AsciiView(segment, buffer, null, this.ptr, delimiter, writeDelimiter)\r\n  }\r\n\r\n  public checksum (): number {\r\n    const t = this.getPosition(MsgTag.CheckSum)\r\n    const structure = this.structure\r\n    const prev = structure.tags.tagPos[t - 1]\r\n    const tp = prev.start + prev.len + 1\r\n    let cs = this.buffer.sum(tp)\r\n    const delimiter = this.delimiter\r\n    const writeDelimiter = this.writeDelimiter\r\n    if (writeDelimiter !== delimiter) {\r\n      const changes = structure.tags.nextTagPos - 1\r\n      cs -= changes * writeDelimiter\r\n      cs += changes * delimiter\r\n    }\r\n    return cs % 256\r\n  }\r\n\r\n  protected toTyped (field: SimpleFieldDefinition): any {\r\n    const position: number = this.getPosition(field.tag)\r\n    if (position >= 0) {\r\n      switch (field.tagType) {\r\n        case TagType.String : {\r\n          return this.stringAtPosition(position)\r\n        }\r\n\r\n        case TagType.Float: {\r\n          return this.getNumber(position, true)\r\n        }\r\n\r\n        case TagType.Int:\r\n        case TagType.Length: {\r\n          return this.getNumber(position)\r\n        }\r\n\r\n        case TagType.Boolean: {\r\n          return this.getBoolean(field.tag)\r\n        }\r\n\r\n        case TagType.UtcTimestamp: {\r\n          return this.getDateTime(field.tag, true)\r\n        }\r\n\r\n        case TagType.UtcTimeOnly: {\r\n          return this.getTime(field.tag, true)\r\n        }\r\n\r\n        case TagType.UtcDateOnly: {\r\n          return this.getDate(field.tag, true)\r\n        }\r\n\r\n        case TagType.LocalDate: {\r\n          return this.getDate(field.tag, true)\r\n        }\r\n\r\n        case TagType.RawData: {\r\n          return this.getBuffer(position)\r\n        }\r\n\r\n        default: {\r\n          return this.stringAtPosition(position)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  protected create (singleton: SegmentDescription): MsgView {\r\n    return new AsciiView(singleton,\r\n      this.buffer,\r\n      this.structure,\r\n      this.ptr,\r\n      this.delimiter,\r\n      this.writeDelimiter)\r\n  }\r\n\r\n  protected stringAtPosition (position: number): string {\r\n    const tags = this.structure.tags\r\n    if (position < 0 || position >= tags.nextTagPos) {\r\n      return null\r\n    }\r\n    const tag: TagPos = tags.tagPos[position]\r\n    return this.buffer.getString(tag.start, tag.start + tag.len)\r\n  }\r\n\r\n  private getBuffer (position: number): Buffer {\r\n    const tag: TagPos = this.structure.tags.tagPos[position]\r\n    return this.buffer.getBuffer(tag.start, tag.start + tag.len)\r\n  }\r\n\r\n  private getNumber (position: number, isFloat: boolean = false): number {\r\n    const buffer = this.buffer\r\n    const tag: TagPos = this.structure.tags.tagPos[position]\r\n    if (isFloat) {\r\n      return buffer.getFloat(tag.start, tag.start + tag.len - 1)\r\n    } else {\r\n      return buffer.getWholeNumber(tag.start, tag.start + tag.len - 1)\r\n    }\r\n  }\r\n\r\n  private getTime (tag: number, useUtc: boolean): Date {\r\n    const formatter = this.timeFormatter\r\n    const position: number = this.getPosition(tag)\r\n    const tagPos: TagPos = this.structure.tags.tagPos[position]\r\n    if (position < 0) {\r\n      return null\r\n    }\r\n    if (useUtc) {\r\n      return formatter.getUtcTime(tagPos.start)\r\n    } else {\r\n      return formatter.getLocalTime(tagPos.start)\r\n    }\r\n  }\r\n\r\n  private getDate (tag: number, useUtc: boolean): Date {\r\n    const formatter = this.timeFormatter\r\n    const position: number = this.getPosition(tag)\r\n    if (position < 0) {\r\n      return null\r\n    }\r\n    const tagPos: TagPos = this.structure.tags.tagPos[position]\r\n    // (SendingTime) = 20150417-01:00:08.201\r\n    if (tagPos.len < 8) {\r\n      return null\r\n    }\r\n    if (useUtc) {\r\n      return formatter.getUtcDate(tagPos.start)\r\n    } else {\r\n      return formatter.getLocalDate(tagPos.start)\r\n    }\r\n  }\r\n\r\n  private getDateTime (tag: number, useUtc: boolean): Date {\r\n    const position: number = this.getPosition(tag)\r\n    const tagPos: TagPos = this.structure.tags.tagPos[position]\r\n    const formatter = this.timeFormatter\r\n    if (position < 0) {\r\n      return null\r\n    }\r\n        // (SendingTime) = 20150417-01:00:08.201\r\n    if (tagPos.len < 8) {\r\n      return null\r\n    }\r\n\r\n    if (useUtc) {\r\n      return formatter.getUtcTimestamp(tagPos.start, tagPos.start + tagPos.len)\r\n    } else {\r\n      return formatter.getLocalTimestamp(tagPos.start, tagPos.start + tagPos.len)\r\n    }\r\n  }\r\n\r\n  private getBoolean (tag: number): boolean {\r\n    const position: number = this.getPosition(tag)\r\n    if (position < 0) {\r\n      return null\r\n    }\r\n    const tagPos: TagPos = this.structure.tags.tagPos[position]\r\n    return this.buffer.getBoolean(tagPos.start)\r\n  }\r\n}\r\n"]}