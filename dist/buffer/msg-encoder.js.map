{"version":3,"file":"msg-encoder.js","sourceRoot":"","sources":["../../src/buffer/msg-encoder.ts"],"names":[],"mappings":";;AAEA,iCAAgC;AAEhC,MAAsB,UAAW,SAAQ,MAAM,CAAC,YAAY;IAC1D,YAAuC,WAA2B;QAChE,KAAK,EAAE,CAAA;QAD8B,gBAAW,GAAX,WAAW,CAAgB;IAElE,CAAC;IAEM,MAAM,CAAE,CAAe,EAAE,IAAY;QAC1C,MAAM,GAAG,GAAsB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACzG,IAAI,CAAC,GAAG,EAAE;YACR,OAAM;SACP;QACD,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;IACxB,CAAC;CAGF;AAdD,gCAcC","sourcesContent":["import { ILooseObject } from '../collections/collection'\r\nimport { ContainedFieldSet, FixDefinitions } from '../dictionary'\r\nimport * as events from 'events'\r\n\r\nexport abstract class MsgEncoder extends events.EventEmitter {\r\n  protected constructor (public readonly definitions: FixDefinitions) {\r\n    super()\r\n  }\r\n\r\n  public encode (o: ILooseObject, name: string): void {\r\n    const set: ContainedFieldSet = this.definitions.message.get(name) || this.definitions.component.get(name)\r\n    if (!set) {\r\n      return\r\n    }\r\n    this.encodeSet(o, set)\r\n  }\r\n\r\n  public abstract encodeSet (o: ILooseObject, set: ContainedFieldSet): void\r\n}\r\n"]}