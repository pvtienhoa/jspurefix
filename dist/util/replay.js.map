{"version":3,"file":"replay.js","sourceRoot":"","sources":["../../src/util/replay.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,4CAA4E;AAC5E,sCAAuC;AAEvC,SAAsB,aAAa,CAAE,WAA2B,EAC5B,kBAAuC,EACvC,UAAkB,EAClB,SAAiB;;QACnD,OAAO,IAAI,OAAO,CAAY,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;YAC/C,MAAM,GAAG,GAAc,EAAE,CAAA;YACzB,MAAM,MAAM,GAAG,IAAI,oBAAW,CAAC,IAAI,EAAE,WAAW,EAAE,kBAAkB,EAAE,SAAS,CAAC,CAAA;YAChF,MAAM,SAAS,GAAiB,IAAI,wBAAY,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,sBAAU,CAAC,UAAU,CAAC,CAAC,CAAA;YACvF,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,OAAe,EAAE,CAAU,EAAE,EAAE;gBAE3D,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAA;YACrB,CAAC,CAAC,CAAA;YACF,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;gBAChC,MAAM,CAAC,GAAG,CAAC,CAAA;YACb,CAAC,CAAC,CAAA;YACF,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;gBACnC,MAAM,CAAC,CAAC,CAAC,CAAA;YACX,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC;CAAA;AAnBD,sCAmBC","sourcesContent":["import { MsgView } from '../buffer'\r\nimport { FixDefinitions } from '../dictionary'\r\nimport { ISessionDescription, MsgTransport, FileDuplex } from '../transport'\r\nimport { JsFixConfig } from '../config'\r\n\r\nexport async function replayFixFile (definitions: FixDefinitions,\r\n                                    sessionDescription: ISessionDescription,\r\n                                    replayFile: string,\r\n                                    delimiter: number): Promise<MsgView[]> {\r\n  return new Promise<MsgView[]>((accept, reject) => {\r\n    const arr: MsgView[] = []\r\n    const config = new JsFixConfig(null, definitions, sessionDescription, delimiter)\r\n    const transport: MsgTransport = new MsgTransport(1, config, new FileDuplex(replayFile))\r\n    transport.receiver.on('msg', (msgType: string, m: MsgView) => {\r\n      // note must clone if a view is to be saved after this call\r\n      arr.push(m.clone())\r\n    })\r\n    transport.receiver.on('end', () => {\r\n      accept(arr)\r\n    })\r\n    transport.receiver.on('error', (e) => {\r\n      reject(e)\r\n    })\r\n  })\r\n}\r\n"]}