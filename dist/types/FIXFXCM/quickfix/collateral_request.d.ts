/// <reference types="node" />
import { IParties } from './set/parties';
import { ICollateralRequestNoExecs } from './set/collateral_request_no_execs';
import { ICollateralRequestNoTrades } from './set/collateral_request_no_trades';
import { IInstrument } from './set/instrument';
import { IFinancingDetails } from './set/financing_details';
import { IInstrumentLeg } from './set/instrument_leg';
import { ICollateralRequestNoUnderlyings } from './set/collateral_request_no_underlyings';
import { ITrdRegTimestamps } from './set/trd_reg_timestamps';
import { ICollateralRequestNoMiscFees } from './set/collateral_request_no_misc_fees';
import { ISpreadOrBenchmarkCurveData } from './set/spread_or_benchmark_curve_data';
import { IStipulations } from './set/stipulations';
export interface ICollateralRequest {
    CollReqID: string;
    CollAsgnReason: number;
    TransactTime: Date;
    ExpireTime?: Date;
    Parties?: IParties;
    Account?: string;
    AccountType?: number;
    ClOrdID?: string;
    OrderID?: string;
    SecondaryOrderID?: string;
    SecondaryClOrdID?: string;
    NoExecs?: ICollateralRequestNoExecs[];
    NoTrades?: ICollateralRequestNoTrades[];
    Instrument?: IInstrument;
    FinancingDetails?: IFinancingDetails;
    SettlDate?: Date;
    Quantity?: number;
    QtyType?: number;
    Currency?: number;
    NoLegs?: number;
    InstrumentLeg?: IInstrumentLeg;
    NoUnderlyings?: ICollateralRequestNoUnderlyings[];
    MarginExcess?: number;
    TotalNetValue?: number;
    CashOutstanding?: number;
    TrdRegTimestamps?: ITrdRegTimestamps;
    Side?: string;
    NoMiscFees?: ICollateralRequestNoMiscFees[];
    Price?: number;
    PriceType?: number;
    AccruedInterestAmt?: number;
    EndAccruedInterestAmt?: number;
    StartCash?: number;
    EndCash?: number;
    SpreadOrBenchmarkCurveData?: ISpreadOrBenchmarkCurveData;
    Stipulations?: IStipulations;
    TradingSessionID?: string;
    TradingSessionSubID?: string;
    SettlSessID?: string;
    SettlSessSubID?: string;
    ClearingBusinessDate?: Date;
    Text?: string;
    EncodedTextLen?: number;
    EncodedText?: Buffer;
}
