{"version":3,"file":"msg_tag.js","sourceRoot":"","sources":["../../../src/types/enum/msg_tag.ts"],"names":[],"mappings":"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","sourcesContent":["export enum MsgTag {\r\n/*\r\n**********************************************************\r\n* Account mnemonic as agreed between buy and sell sides, *\r\n* e.g. broker and institution or investor/intermediary   *\r\n* and fund manager.                                      *\r\n**********************************************************\r\n*/\r\n  Account = 1,\r\n/*\r\n*************************************************\r\n* Unique identifier of advertisement message.   *\r\n* (Prior to FIX 4.1 this field was of type int) *\r\n*************************************************\r\n*/\r\n  AdvId = 2,\r\n/*\r\n*****************************************************\r\n* Reference identifier used with CANCEL and REPLACE *\r\n* transaction types.                                *\r\n* (Prior to FIX 4.1 this field was of type int)     *\r\n*****************************************************\r\n*/\r\n  AdvRefID = 3,\r\n/*\r\n*************************************\r\n* Broker's side of advertised trade *\r\n*************************************\r\n*/\r\n  AdvSide = 4,\r\n/*\r\n*****************************************************\r\n* Identifies advertisement message transaction type *\r\n*****************************************************\r\n*/\r\n  AdvTransType = 5,\r\n/*\r\n**********************************************************\r\n* Calculated average price of all fills on this order.   *\r\n* For Fixed Income trades AvgPx is always expressed as   *\r\n* percent-of-par, regardless of the PriceType (423) of   *\r\n* LastPx (31). I.e., AvgPx will contain an average of    *\r\n* percent-of-par values (see LastParPx (669)) for issues *\r\n* traded in Yield, Spread or Discount.                   *\r\n**********************************************************\r\n*/\r\n  AvgPx = 6,\r\n/*\r\n***********************************************************\r\n* Message sequence number of first message in range to be *\r\n* resent                                                  *\r\n***********************************************************\r\n*/\r\n  BeginSeqNo = 7,\r\n/*\r\n****************************************************\r\n* Identifies beginning of new message and protocol *\r\n* version. ALWAYS FIRST FIELD IN MESSAGE. (Always  *\r\n* unencrypted)                                     *\r\n* Valid values:                                    *\r\n* FIXT.1.1                                         *\r\n****************************************************\r\n*/\r\n  BeginString = 8,\r\n/*\r\n*****************************************************\r\n* Message length, in bytes, forward to the CheckSum *\r\n* field. ALWAYS SECOND FIELD IN MESSAGE. (Always    *\r\n* unencrypted)                                      *\r\n*****************************************************\r\n*/\r\n  BodyLength = 9,\r\n/*\r\n*********************************************************\r\n* Three byte, simple checksum (see Volume 2: \"Checksum  *\r\n* Calculation\" for description). ALWAYS LAST FIELD IN   *\r\n* MESSAGE; i.e. serves, with the trailing <SOH>, as the *\r\n* end-of-message delimiter. Always defined as three     *\r\n* characters. (Always unencrypted)                      *\r\n*********************************************************\r\n*/\r\n  CheckSum = 10,\r\n/*\r\n***********************************************************\r\n* Unique identifier for Order as assigned by the buy-side *\r\n* (institution, broker, intermediary etc.) (identified by *\r\n* SenderCompID (49) or OnBehalfOfCompID (5) as            *\r\n* appropriate). Uniqueness must be guaranteed within a    *\r\n* single trading day. Firms, particularly those which     *\r\n* electronically submit multi-day orders, trade globally  *\r\n* or throughout market close periods, should ensure       *\r\n* uniqueness across days, for example by embedding a date *\r\n* within the ClOrdID field.                               *\r\n***********************************************************\r\n*/\r\n  ClOrdID = 11,\r\n/*\r\n****************************************************\r\n* Commission. Note if CommType (13) is percentage, *\r\n* Commission of 5% should be represented as .05.   *\r\n****************************************************\r\n*/\r\n  Commission = 12,\r\n/*\r\n*******************\r\n* Commission type *\r\n*******************\r\n*/\r\n  CommType = 13,\r\n/*\r\n**************************************************\r\n* Total quantity (e.g. number of shares) filled. *\r\n* (Prior to FIX 4.2 this field was of type int)  *\r\n**************************************************\r\n*/\r\n  CumQty = 14,\r\n/*\r\n*********************************************************\r\n* Identifies currency used for price. Absence of this   *\r\n* field is interpreted as the default for the security. *\r\n* It is recommended that systems provide the currency   *\r\n* value whenever possible. See \"Appendix 6-A: Valid     *\r\n* Currency Codes\" for information on obtaining valid    *\r\n* values.                                               *\r\n*********************************************************\r\n*/\r\n  Currency = 15,\r\n/*\r\n**********************************************************\r\n* Message sequence number of last message in range to be *\r\n* resent. If request is for a single message BeginSeqNo  *\r\n* (7) = EndSeqNo. If request is for all messages         *\r\n* subsequent to a particular message, EndSeqNo = \"0\"     *\r\n* (representing infinity).                               *\r\n**********************************************************\r\n*/\r\n  EndSeqNo = 16,\r\n/*\r\n***********************************************************\r\n* Unique identifier of execution message as assigned by   *\r\n* sell-side (broker, exchange, ECN) (will be 0 (zero) for *\r\n* ExecType (150)=I (Order Status)).                       *\r\n* Uniqueness must be guaranteed within a single trading   *\r\n* day or the life of a multi-day order. Firms which       *\r\n* accept multi-day orders should consider embedding a     *\r\n* date within the ExecID field to assure uniqueness       *\r\n* across days.                                            *\r\n* (Prior to FIX 4.1 this field was of type int).          *\r\n***********************************************************\r\n*/\r\n  ExecID = 17,\r\n/*\r\n***********************************************************\r\n* Instructions for order handling on exchange trading     *\r\n* floor. If more than one instruction is applicable to an *\r\n* order, this field can contain multiple instructions     *\r\n* separated by space. *** SOME VALUES HAVE BEEN REPLACED  *\r\n* - See \"Replaced Features and Supported Approach\" ***    *\r\n* (see Volume : \"Glossary\" for value definitions)         *\r\n***********************************************************\r\n*/\r\n  ExecInst = 18,\r\n/*\r\n**********************************************************\r\n* Reference identifier used with Trade, Trade Cancel and *\r\n* Trade Correct execution types.                         *\r\n* (Prior to FIX 4.1 this field was of type int)          *\r\n**********************************************************\r\n*/\r\n  ExecRefID = 19,\r\n/*\r\n***********************************************************\r\n* Instructions for order handling on Broker trading floor *\r\n***********************************************************\r\n*/\r\n  HandlInst = 21,\r\n/*\r\n**********************************************************\r\n* Identifies class or source of the SecurityID (48)      *\r\n* value. Required if SecurityID is specified.            *\r\n* 100+ are reserved for private security identifications *\r\n**********************************************************\r\n*/\r\n  SecurityIDSource = 22,\r\n/*\r\n*************************************************\r\n* Unique identifier of IOI message.             *\r\n* (Prior to FIX 4.1 this field was of type int) *\r\n*************************************************\r\n*/\r\n  IOIID = 23,\r\n/*\r\n**********************************\r\n* Relative quality of indication *\r\n**********************************\r\n*/\r\n  IOIQltyInd = 25,\r\n/*\r\n******************************************************\r\n* Reference identifier used with CANCEL and REPLACE, *\r\n* transaction types.                                 *\r\n* (Prior to FIX 4.1 this field was of type int)      *\r\n******************************************************\r\n*/\r\n  IOIRefID = 26,\r\n/*\r\n*******************************************************\r\n* Quantity (e.g. number of shares) in numeric form or *\r\n* relative size.                                      *\r\n*******************************************************\r\n*/\r\n  IOIQty = 27,\r\n/*\r\n*******************************************\r\n* Identifies IOI message transaction type *\r\n*******************************************\r\n*/\r\n  IOITransType = 28,\r\n/*\r\n**************************************\r\n* Broker capacity in order execution *\r\n**************************************\r\n*/\r\n  LastCapacity = 29,\r\n/*\r\n**********************************************************\r\n* Market of execution for last fill, or an indication of *\r\n* the market where an order was routed                   *\r\n* Valid values:                                          *\r\n* See \"Appendix 6-C\"                                     *\r\n**********************************************************\r\n*/\r\n  LastMkt = 30,\r\n/*\r\n******************************\r\n* Price of this (last) fill. *\r\n******************************\r\n*/\r\n  LastPx = 31,\r\n/*\r\n***********************************************************\r\n* Quantity (e.g. shares) bought/sold on this (last) fill. *\r\n* (Prior to FIX 4.2 this field was of type int)           *\r\n***********************************************************\r\n*/\r\n  LastQty = 32,\r\n/*\r\n*******************************************\r\n* Identifies number of lines of text body *\r\n*******************************************\r\n*/\r\n  NoLinesOfText = 33,\r\n/*\r\n************************************\r\n* Integer message sequence number. *\r\n************************************\r\n*/\r\n  MsgSeqNum = 34,\r\n/*\r\n***********************************************************\r\n* Defines message type ALWAYS THIRD FIELD IN MESSAGE.     *\r\n* (Always unencrypted)                                    *\r\n* Note: A \"U\" as the first character in the MsgType field *\r\n* (i.e. U, U2, etc) indicates that the message format is  *\r\n* privately defined between the sender and receiver.      *\r\n* *** Note the use of lower case letters ***              *\r\n***********************************************************\r\n*/\r\n  MsgType = 35,\r\n/*\r\n***********************\r\n* New sequence number *\r\n***********************\r\n*/\r\n  NewSeqNo = 36,\r\n/*\r\n**********************************************************\r\n* Unique identifier for Order as assigned by sell-side   *\r\n* (broker, exchange, ECN). Uniqueness must be guaranteed *\r\n* within a single trading day. Firms which accept        *\r\n* multi-day orders should consider embedding a date      *\r\n* within the OrderID field to assure uniqueness across   *\r\n* days.                                                  *\r\n**********************************************************\r\n*/\r\n  OrderID = 37,\r\n/*\r\n**********************************************************\r\n* Quantity ordered. This represents the number of shares *\r\n* for equities or par, face or nominal value for FI      *\r\n* instruments.                                           *\r\n* (Prior to FIX 4.2 this field was of type int)          *\r\n**********************************************************\r\n*/\r\n  OrderQty = 38,\r\n/*\r\n********************************************************\r\n* Identifies current status of order. *** SOME VALUES  *\r\n* HAVE BEEN REPLACED - See \"Replaced Features and      *\r\n* Supported Approach\" *** (see Volume : \"Glossary\" for *\r\n* value definitions)                                   *\r\n********************************************************\r\n*/\r\n  OrdStatus = 39,\r\n/*\r\n********************************************************\r\n* Order type. *** SOME VALUES ARE NO LONGER USED - See *\r\n* \"Deprecated (Phased-out) Features and Supported      *\r\n* Approach\" *** (see Volume : \"Glossary\" for value     *\r\n* definitions)                                         *\r\n********************************************************\r\n*/\r\n  OrdType = 40,\r\n/*\r\n**********************************************************\r\n* ClOrdID (11) of the previous order (NOT the initial    *\r\n* order of the day) as assigned by the institution, used *\r\n* to identify the previous order in cancel and           *\r\n* cancel/replace requests.                               *\r\n**********************************************************\r\n*/\r\n  OrigClOrdID = 41,\r\n/*\r\n********************************************************\r\n* Time of message origination (always expressed in UTC *\r\n* (Universal Time Coordinated, also known as \"GMT\"))   *\r\n********************************************************\r\n*/\r\n  OrigTime = 42,\r\n/*\r\n**********************************************************\r\n* Indicates possible retransmission of message with this *\r\n* sequence number                                        *\r\n**********************************************************\r\n*/\r\n  PossDupFlag = 43,\r\n/*\r\n***********************************************\r\n* Price per unit of quantity (e.g. per share) *\r\n***********************************************\r\n*/\r\n  Price = 44,\r\n/*\r\n*************************************\r\n* Reference message sequence number *\r\n*************************************\r\n*/\r\n  RefSeqNum = 45,\r\n/*\r\n***********************************************************\r\n* Security identifier value of SecurityIDSource (22) type *\r\n* (e.g. CUSIP, SEDOL, ISIN, etc). Requires                *\r\n* SecurityIDSource.                                       *\r\n***********************************************************\r\n*/\r\n  SecurityID = 48,\r\n/*\r\n*********************************************************\r\n* Assigned value used to identify firm sending message. *\r\n*********************************************************\r\n*/\r\n  SenderCompID = 49,\r\n/*\r\n****************************************************\r\n* Assigned value used to identify specific message *\r\n* originator (desk, trader, etc.)                  *\r\n****************************************************\r\n*/\r\n  SenderSubID = 50,\r\n/*\r\n*********************************************************\r\n* Time of message transmission (always expressed in UTC *\r\n* (Universal Time Coordinated, also known as \"GMT\")     *\r\n*********************************************************\r\n*/\r\n  SendingTime = 52,\r\n/*\r\n**************************************************\r\n* Overall/total quantity (e.g. number of shares) *\r\n* (Prior to FIX 4.2 this field was of type int)  *\r\n**************************************************\r\n*/\r\n  Quantity = 53,\r\n/*\r\n****************************************************\r\n* Side of order (see Volume : \"Glossary\" for value *\r\n* definitions)                                     *\r\n****************************************************\r\n*/\r\n  Side = 54,\r\n/*\r\n***********************************************************\r\n* Ticker symbol. Common, \"human understood\"               *\r\n* representation of the security. SecurityID (48) value   *\r\n* can be specified if no symbol exists (e.g. non-exchange *\r\n* traded Collective Investment Vehicles)                  *\r\n* Use \"[N/A]\" for products which do not have a symbol.    *\r\n***********************************************************\r\n*/\r\n  Symbol = 55,\r\n/*\r\n***************************************************\r\n* Assigned value used to identify receiving firm. *\r\n***************************************************\r\n*/\r\n  TargetCompID = 56,\r\n/*\r\n**********************************************************\r\n* Assigned value used to identify specific individual or *\r\n* unit intended to receive message. \"ADMIN\" reserved for *\r\n* administrative messages not intended for a specific    *\r\n* user.                                                  *\r\n**********************************************************\r\n*/\r\n  TargetSubID = 57,\r\n/*\r\n*******************************************************\r\n* Free format text string                             *\r\n* (Note: this field does not have a specified maximum *\r\n* length)                                             *\r\n*******************************************************\r\n*/\r\n  Text = 58,\r\n/*\r\n***********************************************************\r\n* Specifies how long the order remains in effect. Absence *\r\n* of this field is interpreted as DAY. NOTE not           *\r\n* applicable to CIV Orders. (see Volume : \"Glossary\" for  *\r\n* value definitions)                                      *\r\n***********************************************************\r\n*/\r\n  TimeInForce = 59,\r\n/*\r\n**********************************************************\r\n* Timestamp when the business transaction represented by *\r\n* the message occurred.                                  *\r\n**********************************************************\r\n*/\r\n  TransactTime = 60,\r\n/*\r\n****************\r\n* Urgency flag *\r\n****************\r\n*/\r\n  Urgency = 61,\r\n/*\r\n***********************************************************\r\n* Indicates expiration time of indication message (always *\r\n* expressed in UTC (Universal Time Coordinated, also      *\r\n* known as \"GMT\")                                         *\r\n***********************************************************\r\n*/\r\n  ValidUntilTime = 62,\r\n/*\r\n***********************************************************\r\n* Indicates order settlement period. If present,          *\r\n* SettlDate (64) overrides this field. If both SettlType  *\r\n* (63) and SettDate (64) are omitted, the default for     *\r\n* SettlType (63) is 0 (Regular)                           *\r\n* Regular is defined as the default settlement period for *\r\n* the particular security on the exchange of execution.   *\r\n* In Fixed Income the contents of this field may          *\r\n* influence the instrument definition if the SecurityID   *\r\n* (48) is ambiguous. In the US an active Treasury         *\r\n* offering may be re-opened, and for a time one CUSIP     *\r\n* will apply to both the current and \"when-issued\"        *\r\n* securities. Supplying a value of \"7\" clarifies the      *\r\n* instrument description; any other value or the absence  *\r\n* of this field should cause the respondent to default to *\r\n* the active issue.                                       *\r\n* Additionally the following patterns may be uses as well *\r\n* as enum values                                          *\r\n* Dx = FX tenor expression for \"days\", e.g. \"D5\", where   *\r\n* \"x\" is any integer > 0                                  *\r\n* Mx = FX tenor expression for \"months\", e.g. \"M3\", where *\r\n* \"x\" is any integer > 0                                  *\r\n* Wx = FX tenor expression for \"weeks\", e.g. \"W13\", where *\r\n* \"x\" is any integer > 0                                  *\r\n* Yx = FX tenor expression for \"years\", e.g. \"Y1\", where  *\r\n* \"x\" is any integer > 0                                  *\r\n* Noted that for FX the tenors expressed using Dx, Mx,    *\r\n* Wx, and Yx values do not denote business days, but      *\r\n* calendar days.                                          *\r\n***********************************************************\r\n*/\r\n  SettlType = 63,\r\n/*\r\n*********************************************************\r\n* Specific date of trade settlement (SettlementDate) in *\r\n* YYYYMMDD format.                                      *\r\n* If present, this field overrides SettlType (63). This *\r\n* field is required if the value of SettlType (63) is 6 *\r\n* (Future) or 8 (Sellers Option). This field must be    *\r\n* omitted if the value of SettlType (63) is 7 (When and *\r\n* If Issued)                                            *\r\n* (expressed in local time at place of settlement)      *\r\n*********************************************************\r\n*/\r\n  SettlDate = 64,\r\n/*\r\n**********************************************************\r\n* Additional information about the security (e.g.        *\r\n* preferred, warrants, etc.). Note also see SecurityType *\r\n* (167).                                                 *\r\n* As defined in the NYSE Stock and bond Symbol Directory *\r\n* and in the AMEX Fitch Directory.                       *\r\n**********************************************************\r\n*/\r\n  SymbolSfx = 65,\r\n/*\r\n**********************************************************\r\n* Unique identifier for list as assigned by institution, *\r\n* used to associate multiple individual orders.          *\r\n* Uniqueness must be guaranteed within a single trading  *\r\n* day. Firms which generate multi-day orders should      *\r\n* consider embedding a date within the ListID field to   *\r\n* assure uniqueness across days.                         *\r\n**********************************************************\r\n*/\r\n  ListID = 66,\r\n/*\r\n**********************************************************\r\n* Sequence of individual order within list (i.e.         *\r\n* ListSeqNo of TotNoOrders (68), 2 of 25, 3 of 25, . . . *\r\n* )                                                      *\r\n**********************************************************\r\n*/\r\n  ListSeqNo = 67,\r\n/*\r\n***********************************************************\r\n* Total number of list order entries across all messages. *\r\n* Should be the sum of all NoOrders (73) in each message  *\r\n* that has repeating list order entries related to the    *\r\n* same ListID (66). Used to support fragmentation.        *\r\n* (Prior to FIX 4.2 this field was named \"ListNoOrds\")    *\r\n***********************************************************\r\n*/\r\n  TotNoOrders = 68,\r\n/*\r\n*********************************************************\r\n* Free format text message containing list handling and *\r\n* execution instructions.                               *\r\n*********************************************************\r\n*/\r\n  ListExecInst = 69,\r\n/*\r\n*************************************************\r\n* Unique identifier for allocation message.     *\r\n* (Prior to FIX 4.1 this field was of type int) *\r\n*************************************************\r\n*/\r\n  AllocID = 70,\r\n/*\r\n**********************************************************\r\n* Identifies allocation transaction type *** SOME VALUES *\r\n* HAVE BEEN REPLACED - See \"Replaced Features and        *\r\n* Supported Approach\" ***                                *\r\n**********************************************************\r\n*/\r\n  AllocTransType = 71,\r\n/*\r\n*******************************************************\r\n* Reference identifier to be used with AllocTransType *\r\n* (71) = Replace or Cancel.                           *\r\n* (Prior to FIX 4.1 this field was of type int)       *\r\n*******************************************************\r\n*/\r\n  RefAllocID = 72,\r\n/*\r\n*********************************************************\r\n* Indicates number of orders to be combined for average *\r\n* pricing and allocation.                               *\r\n*********************************************************\r\n*/\r\n  NoOrders = 73,\r\n/*\r\n***********************************************************\r\n* Indicates number of decimal places to be used for       *\r\n* average pricing. Absence of this field indicates that   *\r\n* default precision arranged by the broker/institution is *\r\n* to be used.                                             *\r\n***********************************************************\r\n*/\r\n  AvgPxPrecision = 74,\r\n/*\r\n*********************************************************\r\n* Indicates date of trade referenced in this message in *\r\n* YYYYMMDD format. Absence of this field indicates      *\r\n* current day (expressed in local time at place of      *\r\n* trade).                                               *\r\n*********************************************************\r\n*/\r\n  TradeDate = 75,\r\n/*\r\n***********************************************************\r\n* Indicates whether the resulting start after a trade  *\r\n* should be an opening start or closing start. Used *\r\n* for omnibus accounting - where accounts are held on a   *\r\n* gross basis instead of being netted together.           *\r\n***********************************************************\r\n*/\r\n  PositionEffect = 77,\r\n/*\r\n**********************************************************\r\n* Number of repeating AllocAccount (79)/AllocPrice (366) *\r\n* entries.                                               *\r\n**********************************************************\r\n*/\r\n  NoAllocs = 78,\r\n/*\r\n************************\r\n* Sub-account mnemonic *\r\n************************\r\n*/\r\n  AllocAccount = 79,\r\n/*\r\n****************************************************\r\n* Quantity to be allocated to specific sub-account *\r\n* (Prior to FIX 4.2 this field was of type int)    *\r\n****************************************************\r\n*/\r\n  AllocQty = 80,\r\n/*\r\n**********************************************************\r\n* Processing code for sub-account. Absence of this field *\r\n* in AllocAccount (79) / AllocPrice (366) /AllocQty (80) *\r\n* / ProcessCode instance indicates regular trade.        *\r\n**********************************************************\r\n*/\r\n  ProcessCode = 81,\r\n/*\r\n******************************************\r\n* Total number of reports within series. *\r\n******************************************\r\n*/\r\n  NoRpts = 82,\r\n/*\r\n*********************************************************\r\n* Sequence number of message within report series. Used *\r\n* to carry reporting sequence number of the fill as     *\r\n* represented on the Trade Report Side.                 *\r\n*********************************************************\r\n*/\r\n  RptSeq = 83,\r\n/*\r\n*************************************************\r\n* Total quantity canceled for this order.       *\r\n* (Prior to FIX 4.2 this field was of type int) *\r\n*************************************************\r\n*/\r\n  CxlQty = 84,\r\n/*\r\n*********************************************************\r\n* Number of delivery instruction fields in repeating    *\r\n* group.                                                *\r\n* Note this field was removed in FIX 4.1 and reinstated *\r\n* in FIX 4.4.                                           *\r\n*********************************************************\r\n*/\r\n  NoDlvyInst = 85,\r\n/*\r\n************************************\r\n* Identifies status of allocation. *\r\n************************************\r\n*/\r\n  AllocStatus = 87,\r\n/*\r\n************************************\r\n* Identifies reason for rejection. *\r\n************************************\r\n*/\r\n  AllocRejCode = 88,\r\n/*\r\n************************\r\n* Electronic signature *\r\n************************\r\n*/\r\n  Signature = 89,\r\n/*\r\n*******************************\r\n* Length of encrypted message *\r\n*******************************\r\n*/\r\n  SecureDataLen = 90,\r\n/*\r\n********************************\r\n* Actual encrypted data stream *\r\n********************************\r\n*/\r\n  SecureData = 91,\r\n/*\r\n**************************************\r\n* Number of bytes in signature field *\r\n**************************************\r\n*/\r\n  SignatureLength = 93,\r\n/*\r\n***********************\r\n* Email message type. *\r\n***********************\r\n*/\r\n  EmailType = 94,\r\n/*\r\n**************************************\r\n* Number of bytes in raw data field. *\r\n**************************************\r\n*/\r\n  RawDataLength = 95,\r\n/*\r\n***************************************************\r\n* Unformatted raw data, can include bitmaps, word *\r\n* processor documents, etc.                       *\r\n***************************************************\r\n*/\r\n  RawData = 96,\r\n/*\r\n***********************************************************\r\n* Indicates that message may contain information that has *\r\n* been sent under another sequence number.                *\r\n***********************************************************\r\n*/\r\n  PossResend = 97,\r\n/*\r\n*************************\r\n* Method of encryption. *\r\n*************************\r\n*/\r\n  EncryptMethod = 98,\r\n/*\r\n***********************************************\r\n* Price per unit of quantity (e.g. per share) *\r\n***********************************************\r\n*/\r\n  StopPx = 99,\r\n/*\r\n********************************************************\r\n* Execution destination as defined by institution when *\r\n* order is entered.                                    *\r\n* Valid values:                                        *\r\n* See \"Appendix 6-C\"                                   *\r\n********************************************************\r\n*/\r\n  ExDestination = 100,\r\n/*\r\n*************************************************\r\n* Code to identify reason for cancel rejection. *\r\n*************************************************\r\n*/\r\n  CxlRejReason = 102,\r\n/*\r\n***********************************************************\r\n* Code to identify reason for order rejection. Note:      *\r\n* Values 3, 4, and 5 will be used when rejecting an order *\r\n* due to pre-allocation information errors.               *\r\n***********************************************************\r\n*/\r\n  OrdRejReason = 103,\r\n/*\r\n*********************************************************\r\n* Code to qualify IOI use. (see Volume : \"Glossary\" for *\r\n* value definitions)                                    *\r\n*********************************************************\r\n*/\r\n  IOIQualifier = 104,\r\n/*\r\n***********************************************************\r\n* Name of security issuer (e.g. International Business    *\r\n* Machines, GNMA).                                        *\r\n* see also Volume 7: \"PRODUCT: FIXED INCOME - Euro Issuer *\r\n* Values\"                                                 *\r\n***********************************************************\r\n*/\r\n  Issuer = 106,\r\n/*\r\n**********************************************************\r\n* Can be used to provide an optional textual description *\r\n* for a financial instrument.                            *\r\n**********************************************************\r\n*/\r\n  SecurityDesc = 107,\r\n/*\r\n********************************\r\n* Heartbeat interval (seconds) *\r\n********************************\r\n*/\r\n  HeartBtInt = 108,\r\n/*\r\n*************************************************\r\n* Minimum quantity of an order to be executed.  *\r\n* (Prior to FIX 4.2 this field was of type int) *\r\n*************************************************\r\n*/\r\n  MinQty = 110,\r\n/*\r\n***********************************************************\r\n* The quantity to be displayed . Required for reserve     *\r\n* orders. On orders specifies the qty to be displayed, on *\r\n* execution reports the currently displayed quantity.     *\r\n***********************************************************\r\n*/\r\n  MaxFloor = 111,\r\n/*\r\n*****************************************************\r\n* Identifier included in Test Request message to be *\r\n* returned in resulting Heartbeat                   *\r\n*****************************************************\r\n*/\r\n  TestReqID = 112,\r\n/*\r\n******************************************************\r\n* Identifies party of trade responsible for exchange *\r\n* reporting.                                         *\r\n******************************************************\r\n*/\r\n  ReportToExch = 113,\r\n/*\r\n**********************************************************\r\n* Indicates whether the broker is to locate the stock in *\r\n* conjunction with a short sell order.                   *\r\n**********************************************************\r\n*/\r\n  LocateReqd = 114,\r\n/*\r\n***********************************************************\r\n* Assigned value used to identify firm originating        *\r\n* message if the message was delivered by a third party   *\r\n* i.e. the third party firm identifier would be delivered *\r\n* in the SenderCompID field and the firm originating the  *\r\n* message in this field.                                  *\r\n***********************************************************\r\n*/\r\n  OnBehalfOfCompID = 115,\r\n/*\r\n*********************************************************\r\n* Assigned value used to identify specific message      *\r\n* originator (i.e. trader) if the message was delivered *\r\n* by a third party                                      *\r\n*********************************************************\r\n*/\r\n  OnBehalfOfSubID = 116,\r\n/*\r\n*******************************\r\n* Unique identifier for quote *\r\n*******************************\r\n*/\r\n  QuoteID = 117,\r\n/*\r\n***********************************************************\r\n* Total amount due as the result of the transaction (e.g. *\r\n* for Buy order - principal + commission + fees) reported *\r\n* in currency of execution.                               *\r\n***********************************************************\r\n*/\r\n  NetMoney = 118,\r\n/*\r\n*****************************************************\r\n* Total amount due expressed in settlement currency *\r\n* (includes the effect of the forex transaction)    *\r\n*****************************************************\r\n*/\r\n  SettlCurrAmt = 119,\r\n/*\r\n*********************************************\r\n* Currency code of settlement denomination. *\r\n*********************************************\r\n*/\r\n  SettlCurrency = 120,\r\n/*\r\n*********************************************************\r\n* Indicates request for forex accommodation trade to be *\r\n* executed along with security transaction.             *\r\n*********************************************************\r\n*/\r\n  ForexReq = 121,\r\n/*\r\n***********************************************************\r\n* Original time of message transmission (always expressed *\r\n* in UTC (Universal Time Coordinated, also known as       *\r\n* \"GMT\") when transmitting orders as the result of a      *\r\n* resend request.                                         *\r\n***********************************************************\r\n*/\r\n  OrigSendingTime = 122,\r\n/*\r\n**********************************************************\r\n* Indicates that the Sequence Reset message is replacing *\r\n* administrative or application messages which will not  *\r\n* be resent.                                             *\r\n**********************************************************\r\n*/\r\n  GapFillFlag = 123,\r\n/*\r\n******************************************************\r\n* No of execution repeating group entries to follow. *\r\n******************************************************\r\n*/\r\n  NoExecs = 124,\r\n/*\r\n***********************************************************\r\n* Time/Date of order expiration (always expressed in UTC  *\r\n* (Universal Time Coordinated, also known as \"GMT\")       *\r\n* The meaning of expiration is specific to the context    *\r\n* where the field is used.                                *\r\n* For orders, this is the expiration time of a Good Til   *\r\n* Date TimeInForce.                                       *\r\n* For Quotes - this is the expiration of the quote.       *\r\n* Expiration time is provided across the quote message    *\r\n* dialog to control the length of time of the overall     *\r\n* quoting process.                                        *\r\n* For collateral requests, this is the time by which      *\r\n* collateral must be assigned.                            *\r\n* For collateral assignments, this is the time by which a *\r\n* response to the assignment is expected.                 *\r\n***********************************************************\r\n*/\r\n  ExpireTime = 126,\r\n/*\r\n***********************************\r\n* Reason for execution rejection. *\r\n***********************************\r\n*/\r\n  DKReason = 127,\r\n/*\r\n**********************************************************\r\n* Assigned value used to identify the firm targeted to   *\r\n* receive the message if the message is delivered by a   *\r\n* third party i.e. the third party firm identifier would *\r\n* be delivered in the TargetCompID (56) field and the    *\r\n* ultimate receiver firm ID in this field.               *\r\n**********************************************************\r\n*/\r\n  DeliverToCompID = 128,\r\n/*\r\n**********************************************************\r\n* Assigned value used to identify specific message       *\r\n* recipient (i.e. trader) if the message is delivered by *\r\n* a third party                                          *\r\n**********************************************************\r\n*/\r\n  DeliverToSubID = 129,\r\n/*\r\n**********************************************************\r\n* Indicates that IOI is the result of an existing agency *\r\n* order or a facilitation start resulting from an     *\r\n* agency order, not from principal trading or order      *\r\n* solicitation activity.                                 *\r\n**********************************************************\r\n*/\r\n  IOINaturalFlag = 130,\r\n/*\r\n***************************************\r\n* Unique identifier for quote request *\r\n***************************************\r\n*/\r\n  QuoteReqID = 131,\r\n/*\r\n******************\r\n* Bid price/rate *\r\n******************\r\n*/\r\n  BidPx = 132,\r\n/*\r\n********************\r\n* Offer price/rate *\r\n********************\r\n*/\r\n  OfferPx = 133,\r\n/*\r\n*************************************************\r\n* Quantity of bid                               *\r\n* (Prior to FIX 4.2 this field was of type int) *\r\n*************************************************\r\n*/\r\n  BidSize = 134,\r\n/*\r\n*************************************************\r\n* Quantity of offer                             *\r\n* (Prior to FIX 4.2 this field was of type int) *\r\n*************************************************\r\n*/\r\n  OfferSize = 135,\r\n/*\r\n****************************************************\r\n* Number of repeating groups of miscellaneous fees *\r\n****************************************************\r\n*/\r\n  NoMiscFees = 136,\r\n/*\r\n***************************\r\n* Miscellaneous fee value *\r\n***************************\r\n*/\r\n  MiscFeeAmt = 137,\r\n/*\r\n*********************************\r\n* Currency of miscellaneous fee *\r\n*********************************\r\n*/\r\n  MiscFeeCurr = 138,\r\n/*\r\n****************************************\r\n* Indicates type of miscellaneous fee. *\r\n****************************************\r\n*/\r\n  MiscFeeType = 139,\r\n/*\r\n***************************************\r\n* Previous closing price of security. *\r\n***************************************\r\n*/\r\n  PrevClosePx = 140,\r\n/*\r\n***********************************************************\r\n* Indicates that the both sides of the FIX session should *\r\n* reset sequence numbers.                                 *\r\n***********************************************************\r\n*/\r\n  ResetSeqNumFlag = 141,\r\n/*\r\n**********************************************************\r\n* Assigned value used to identify specific message       *\r\n* originator's location (i.e. geographic location and/or *\r\n* desk, trader)                                          *\r\n**********************************************************\r\n*/\r\n  SenderLocationID = 142,\r\n/*\r\n***********************************************************\r\n* Assigned value used to identify specific message        *\r\n* destination's location (i.e. geographic location and/or *\r\n* desk, trader)                                           *\r\n***********************************************************\r\n*/\r\n  TargetLocationID = 143,\r\n/*\r\n**********************************************************\r\n* Assigned value used to identify specific message       *\r\n* originator's location (i.e. geographic location and/or *\r\n* desk, trader) if the message was delivered by a third  *\r\n* party                                                  *\r\n**********************************************************\r\n*/\r\n  OnBehalfOfLocationID = 144,\r\n/*\r\n*********************************************************\r\n* Assigned value used to identify specific message      *\r\n* recipient's location (i.e. geographic location and/or *\r\n* desk, trader) if the message was delivered by a third *\r\n* party                                                 *\r\n*********************************************************\r\n*/\r\n  DeliverToLocationID = 145,\r\n/*\r\n********************************************************\r\n* Specifies the number of repeating symbols specified. *\r\n********************************************************\r\n*/\r\n  NoRelatedSym = 146,\r\n/*\r\n***********************************\r\n* The subject of an Email message *\r\n***********************************\r\n*/\r\n  Subject = 147,\r\n/*\r\n**********************************\r\n* The headline of a News message *\r\n**********************************\r\n*/\r\n  Headline = 148,\r\n/*\r\n**********************************************************\r\n* A URI (Uniform Resource Identifier) or URL (Uniform    *\r\n* Resource Locator) link to additional information (i.e. *\r\n* http://www.XYZ.com/research.html)                      *\r\n* See \"Appendix 6-B FIX Fields Based Upon Other          *\r\n* Standards\"                                             *\r\n**********************************************************\r\n*/\r\n  URLLink = 149,\r\n/*\r\n**********************************************************\r\n* Describes the specific ExecutionRpt (i.e. Pending      *\r\n* Cancel) while OrdStatus (39) will always identify the  *\r\n* current order status (i.e. Partially Filled) *** SOME  *\r\n* VALUES HAVE BEEN REPLACED - See \"Replaced Features and *\r\n* Supported Approach\" ***                                *\r\n**********************************************************\r\n*/\r\n  ExecType = 150,\r\n/*\r\n**********************************************************\r\n* Quantity open for further execution. If the OrdStatus  *\r\n* (39) is Canceled, DoneForTheDay, Expired, Calculated,  *\r\n* or Rejected (in which case the order is no longer      *\r\n* active) then LeavesQty could be 0, otherwise LeavesQty *\r\n* = OrderQty (38) - CumQty (14).                         *\r\n* (Prior to FIX 4.2 this field was of type int)          *\r\n**********************************************************\r\n*/\r\n  LeavesQty = 151,\r\n/*\r\n**********************************************************\r\n* Specifies the approximate order quantity desired in    *\r\n* total monetary units vs. as tradeable units (e.g.      *\r\n* number of shares). The broker or fund manager (for CIV *\r\n* orders) would be responsible for converting and        *\r\n* calculating a tradeable unit (e.g. share) quantity     *\r\n* (OrderQty (38)) based upon this amount to be used for  *\r\n* the actual order and subsequent messages.              *\r\n**********************************************************\r\n*/\r\n  CashOrderQty = 152,\r\n/*\r\n*********************************************************\r\n* AvgPx (6) for a specific AllocAccount (79)            *\r\n* For Fixed Income this is always expressed as \"percent *\r\n* of par\" price type.                                   *\r\n*********************************************************\r\n*/\r\n  AllocAvgPx = 153,\r\n/*\r\n*************************************************\r\n* NetMoney (8) for a specific AllocAccount (79) *\r\n*************************************************\r\n*/\r\n  AllocNetMoney = 154,\r\n/*\r\n**********************************************************\r\n* Foreign exchange rate used to compute SettlCurrAmt (9) *\r\n* from Currency (5) to SettlCurrency (20)                *\r\n**********************************************************\r\n*/\r\n  SettlCurrFxRate = 155,\r\n/*\r\n***********************************************************\r\n* Specifies whether or not SettlCurrFxRate (55) should be *\r\n* multiplied or divided.                                  *\r\n***********************************************************\r\n*/\r\n  SettlCurrFxRateCalc = 156,\r\n/*\r\n********************************************************\r\n* Number of Days of Interest for convertible bonds and *\r\n* fixed income. Note value may be negative.            *\r\n********************************************************\r\n*/\r\n  NumDaysInterest = 157,\r\n/*\r\n***********************************************************\r\n* The amount the buyer compensates the seller for the     *\r\n* portion of the next coupon interest payment the seller  *\r\n* has earned but will not receive from the issuer because *\r\n* the issuer will send the next coupon payment to the     *\r\n* buyer. Accrued Interest Rate is the annualized Accrued  *\r\n* Interest amount divided by the purchase price of the    *\r\n* bond.                                                   *\r\n***********************************************************\r\n*/\r\n  AccruedInterestRate = 158,\r\n/*\r\n********************************************************\r\n* Amount of Accrued Interest for convertible bonds and *\r\n* fixed income                                         *\r\n********************************************************\r\n*/\r\n  AccruedInterestAmt = 159,\r\n/*\r\n*****************************************************\r\n* Indicates mode used for Settlement Instructions   *\r\n* message. *** SOME VALUES HAVE BEEN REPLACED - See *\r\n* \"Replaced Features and Supported Approach\" ***    *\r\n*****************************************************\r\n*/\r\n  SettlInstMode = 160,\r\n/*\r\n*******************************************************\r\n* Free format text related to a specific AllocAccount *\r\n* (79).                                               *\r\n*******************************************************\r\n*/\r\n  AllocText = 161,\r\n/*\r\n*************************************************\r\n* Unique identifier for Settlement Instruction. *\r\n*************************************************\r\n*/\r\n  SettlInstID = 162,\r\n/*\r\n****************************************************\r\n* Settlement Instructions message transaction type *\r\n****************************************************\r\n*/\r\n  SettlInstTransType = 163,\r\n/*\r\n***********************************************************\r\n* Unique identifier for an email thread (new and chain of *\r\n* replies)                                                *\r\n***********************************************************\r\n*/\r\n  EmailThreadID = 164,\r\n/*\r\n***********************************************\r\n* Indicates source of Settlement Instructions *\r\n***********************************************\r\n*/\r\n  SettlInstSource = 165,\r\n/*\r\n**********************************************************\r\n* Indicates type of security. Security type enumerations *\r\n* are grouped by Product(460) field value. NOTE:         *\r\n* Additional values may be used by mutual agreement of   *\r\n* the counterparties.                                    *\r\n**********************************************************\r\n*/\r\n  SecurityType = 167,\r\n/*\r\n**********************************************************\r\n* Time the details within the message should take effect *\r\n* (always expressed in UTC (Universal Time Coordinated,  *\r\n* also known as \"GMT\")                                   *\r\n**********************************************************\r\n*/\r\n  EffectiveTime = 168,\r\n/*\r\n*****************************************************\r\n* Identifies the Standing Instruction database used *\r\n*****************************************************\r\n*/\r\n  StandInstDbType = 169,\r\n/*\r\n***********************************************************\r\n* Name of the Standing Instruction database represented   *\r\n* with StandInstDbType (169) (i.e. the Global Custodian's *\r\n* name).                                                  *\r\n***********************************************************\r\n*/\r\n  StandInstDbName = 170,\r\n/*\r\n*******************************************************\r\n* Unique identifier used on the Standing Instructions *\r\n* database for the Standing Instructions to be        *\r\n* referenced.                                         *\r\n*******************************************************\r\n*/\r\n  StandInstDbID = 171,\r\n/*\r\n*********************************\r\n* Identifies type of settlement *\r\n*********************************\r\n*/\r\n  SettlDeliveryType = 172,\r\n/*\r\n**********************\r\n* Bid F/X spot rate. *\r\n**********************\r\n*/\r\n  BidSpotRate = 188,\r\n/*\r\n*******************************************************\r\n* Bid F/X forward points added to spot rate. May be a *\r\n* negative value.                                     *\r\n*******************************************************\r\n*/\r\n  BidForwardPoints = 189,\r\n/*\r\n************************\r\n* Offer F/X spot rate. *\r\n************************\r\n*/\r\n  OfferSpotRate = 190,\r\n/*\r\n*********************************************************\r\n* Offer F/X forward points added to spot rate. May be a *\r\n* negative value.                                       *\r\n*********************************************************\r\n*/\r\n  OfferForwardPoints = 191,\r\n/*\r\n*********************************************************\r\n* OrderQty (38) of the future part of a F/X swap order. *\r\n*********************************************************\r\n*/\r\n  OrderQty2 = 192,\r\n/*\r\n*********************************************************\r\n* SettDate (64) of the future part of a F/X swap order. *\r\n*********************************************************\r\n*/\r\n  SettlDate2 = 193,\r\n/*\r\n******************\r\n* F/X spot rate. *\r\n******************\r\n*/\r\n  LastSpotRate = 194,\r\n/*\r\n***********************************************************\r\n* F/X forward points added to LastSpotRate (94). May be a *\r\n* negative value. Expressed in decimal form. For example, *\r\n* 61.99 points is expressed and sent as 0.006199          *\r\n***********************************************************\r\n*/\r\n  LastForwardPoints = 195,\r\n/*\r\n**********************************************************\r\n* Can be used to link two different Allocation messages  *\r\n* (each with unique AllocID (70)) together, i.e. for F/X *\r\n* \"Netting\" or \"Swaps\". Should be unique.                *\r\n**********************************************************\r\n*/\r\n  AllocLinkID = 196,\r\n/*\r\n**************************************************\r\n* Identifies the type of Allocation linkage when *\r\n* AllocLinkID (96) is used.                      *\r\n**************************************************\r\n*/\r\n  AllocLinkType = 197,\r\n/*\r\n***********************************************************\r\n* Assigned by the party which accepts the order. Can be   *\r\n* used to provide the OrderID (37) used by an exchange or *\r\n* executing system.                                       *\r\n***********************************************************\r\n*/\r\n  SecondaryOrderID = 198,\r\n/*\r\n*****************************************************\r\n* Number of repeating groups of IOIQualifiers (04). *\r\n*****************************************************\r\n*/\r\n  NoIOIQualifiers = 199,\r\n/*\r\n***********************************************************\r\n* Can be used with standardized derivatives vs. the       *\r\n* MaturityDate (54) field.  Month and Year of the         *\r\n* maturity (used for standardized futures and options).   *\r\n* Format:                                                 *\r\n* YYYYMM (e.g. 199903)                                    *\r\n* YYYYMMDD (e.g. 20030323)                                *\r\n* YYYYMMwN (e.g. 200303w) for week                        *\r\n* A specific date or can be appended to the               *\r\n* MaturityMonthYear. For instance, if multiple standard   *\r\n* products exist that mature in the same Year and Month,  *\r\n* but actually mature at a different time, a value can be *\r\n* appended, such as \"w\" or \"w2\" to indicate week  as      *\r\n* opposed to week 2 expiration. Likewise, the date (0-3)  *\r\n* can be appended to indicate a specific expiration       *\r\n* (maturity date).                                        *\r\n***********************************************************\r\n*/\r\n  MaturityMonthYear = 200,\r\n/*\r\n*********************************************************\r\n* Indicates whether an option contract is a put or call *\r\n*********************************************************\r\n*/\r\n  PutOrCall = 201,\r\n/*\r\n*******************************\r\n* Strike Price for an Option. *\r\n*******************************\r\n*/\r\n  StrikePrice = 202,\r\n/*\r\n*************************************************\r\n* Used for derivative products, such as options *\r\n*************************************************\r\n*/\r\n  CoveredOrUncovered = 203,\r\n/*\r\n***********************************************************\r\n* Provided to support versioning of option contracts as a *\r\n* result of corporate actions or events. Use of this      *\r\n* field is defined by counterparty agreement or market    *\r\n* conventions.                                            *\r\n***********************************************************\r\n*/\r\n  OptAttribute = 206,\r\n/*\r\n********************************************\r\n* Market used to help identify a security. *\r\n* Valid values:                            *\r\n* See \"Appendix 6-C\"                       *\r\n********************************************\r\n*/\r\n  SecurityExchange = 207,\r\n/*\r\n***********************************************************\r\n* Indicates whether or not details should be communicated *\r\n* to BrokerOfCredit (i.e. step-in broker).                *\r\n***********************************************************\r\n*/\r\n  NotifyBrokerOfCredit = 208,\r\n/*\r\n********************************************************\r\n* Indicates how the receiver (i.e. third party) of     *\r\n* Allocation message should handle/process the account *\r\n* details.                                             *\r\n********************************************************\r\n*/\r\n  AllocHandlInst = 209,\r\n/*\r\n**********************************************************\r\n* Maximum quantity (e.g. number of shares) within an     *\r\n* order to be shown to other customers (i.e. sent via an *\r\n* IOI).                                                  *\r\n* (Prior to FIX 4.2 this field was of type int)          *\r\n**********************************************************\r\n*/\r\n  MaxShow = 210,\r\n/*\r\n**********************************************************\r\n* Amount (signed) added to the peg for a pegged order in *\r\n* the context of the PegOffsetType (836)                 *\r\n* (Prior to FIX 4.4 this field was of type PriceOffset)  *\r\n**********************************************************\r\n*/\r\n  PegOffsetValue = 211,\r\n/*\r\n*************************************\r\n* Length of the XmlData data block. *\r\n*************************************\r\n*/\r\n  XmlDataLen = 212,\r\n/*\r\n***********************************************************\r\n* Actual XML data stream (e.g. FIXML). See approriate XML *\r\n* reference (e.g. FIXML). Note: may contain embedded SOH  *\r\n* characters.                                             *\r\n***********************************************************\r\n*/\r\n  XmlData = 213,\r\n/*\r\n***********************************************************\r\n* Reference identifier for the SettlInstID (162) with     *\r\n* Cancel and Replace SettlInstTransType (163) transaction *\r\n* types.                                                  *\r\n***********************************************************\r\n*/\r\n  SettlInstRefID = 214,\r\n/*\r\n*******************************************************\r\n* Number of repeating groups of RoutingID (217) and   *\r\n* RoutingType (216) values.                           *\r\n* See Volume 3: \"Pre-Trade Message Targeting/Routing\" *\r\n*******************************************************\r\n*/\r\n  NoRoutingIDs = 215,\r\n/*\r\n****************************************************\r\n* Indicates the type of RoutingID (217) specified. *\r\n****************************************************\r\n*/\r\n  RoutingType = 216,\r\n/*\r\n******************************************************\r\n* Assigned value used to identify a specific routing *\r\n* destination.                                       *\r\n******************************************************\r\n*/\r\n  RoutingID = 217,\r\n/*\r\n*********************************************************\r\n* For Fixed Income. Either Swap Spread or Spread to     *\r\n* Benchmark depending upon the order type.              *\r\n* Spread to Benchmark: Basis points relative to a       *\r\n* benchmark. To be expressed as \"count of basis points\" *\r\n* (vs. an absolute value). E.g. High Grade Corporate    *\r\n* Bonds may express price as basis points relative to   *\r\n* benchmark (the BenchmarkCurveName (22) field). Note:  *\r\n* Basis points can be negative.                         *\r\n* Swap Spread: Target spread for a swap.                *\r\n*********************************************************\r\n*/\r\n  Spread = 218,\r\n/*\r\n***********************************************************\r\n* Identifies currency used for benchmark curve. See       *\r\n* \"Appendix 6-A: Valid Currency Codes\" for information on *\r\n* obtaining valid values.                                 *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\r\n***********************************************************\r\n*/\r\n  BenchmarkCurveCurrency = 220,\r\n/*\r\n**********************************************************\r\n* Name of benchmark curve.                               *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  BenchmarkCurveName = 221,\r\n/*\r\n***********************************************************\r\n* Point on benchmark curve. Free form values: e.g. \"Y\",   *\r\n* \"7Y\", \"INTERPOLATED\".                                   *\r\n* Sample values:                                          *\r\n* M = combination of a number between 1-12 and a \"M\" for  *\r\n* month                                                   *\r\n* Y = combination of number between 1-100 and a \"Y\" for   *\r\n* year}                                                   *\r\n* 10Y-OLD = see above, then add \"-OLD\" when appropriate   *\r\n* INTERPOLATED = the point is mathematically derived      *\r\n* 2/2031 5 3/8 = the point is stated via a combination of *\r\n* maturity month / year and coupon                        *\r\n* See Fixed Income-specific documentation at              *\r\n* http://www.fixprotocol.org for additional values.       *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\r\n***********************************************************\r\n*/\r\n  BenchmarkCurvePoint = 222,\r\n/*\r\n***********************************************************\r\n* The rate of interest that, when multiplied by the       *\r\n* principal, par value, or face value of a bond, provides *\r\n* the currency amount of the periodic interest payment.   *\r\n* The coupon is always cited, along with maturity, in any *\r\n* quotation of a bond's price.                            *\r\n***********************************************************\r\n*/\r\n  CouponRate = 223,\r\n/*\r\n**********************************************************\r\n* Date interest is to be paid. Used in identifying       *\r\n* Corporate Bond issues.                                 *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n* (prior to FIX 4.4 field was of type UTCDate)           *\r\n**********************************************************\r\n*/\r\n  CouponPaymentDate = 224,\r\n/*\r\n**********************************************************\r\n* The date on which a bond or stock offering is issued.  *\r\n* It may or may not be the same as the effective date    *\r\n* (\"Dated Date\") or the date on which interest begins to *\r\n* accrue (\"Interest Accrual Date\")                       *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n* (prior to FIX 4.4 field was of type UTCDate)           *\r\n**********************************************************\r\n*/\r\n  IssueDate = 225,\r\n/*\r\n**********************************************************\r\n* Number of business days before repurchase of a repo.   *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  RepurchaseTerm = 226,\r\n/*\r\n*********************************************************\r\n* Percent of par at which a Repo will be repaid.        *\r\n* Represented as a percent, e.g. .9525 represents 95-/4 *\r\n* percent of par. (Note tag # was reserved in FIX 4.1,  *\r\n* added in FIX 4.3)                                     *\r\n*********************************************************\r\n*/\r\n  RepurchaseRate = 227,\r\n/*\r\n***********************************************************\r\n* For Fixed Income: Amorization Factor for deriving       *\r\n* Current face from Original face for ABS or MBS          *\r\n* securities, note the fraction may be greater than,      *\r\n* equal to or less than . In TIPS securities this is the  *\r\n* Inflation index.                                        *\r\n* Qty * Factor * Price = Gross Trade Amount               *\r\n* For Derivatives: Contract Value Factor by which price   *\r\n* must be adjusted to determine the true nominal value of *\r\n* one futures/options contract.                           *\r\n* (Qty * Price) * Factor = Nominal Value                  *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\r\n***********************************************************\r\n*/\r\n  Factor = 228,\r\n/*\r\n***********************************************************\r\n* Used with Fixed Income for Muncipal New Issue Market.   *\r\n* Agreement in principal between counter-parties prior to *\r\n* actual trade date.                                      *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\r\n* (prior to FIX 4.4 field was of type UTCDate)            *\r\n***********************************************************\r\n*/\r\n  TradeOriginationDate = 229,\r\n/*\r\n***********************************************************\r\n* The date when a distribution of interest is deducted    *\r\n* from a securities assets or set aside for payment to    *\r\n* bondholders. On the ex-date, the securities price drops *\r\n* by the amount of the distribution (plus or minus any    *\r\n* market activity).                                       *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\r\n* (prior to FIX 4.4 field was of type UTCDate)            *\r\n***********************************************************\r\n*/\r\n  ExDate = 230,\r\n/*\r\n***********************************************************\r\n* Specifies the ratio or multiply factor to convert from  *\r\n* \"nominal\" units (e.g. contracts) to total units (e.g.   *\r\n* shares) (e.g. 1.0, 100, 1000, etc). Applicable For      *\r\n* Fixed Income, Convertible Bonds, Derivatives, etc.      *\r\n* In general quantities for all calsses should be         *\r\n* expressed in the basic unit of the instrument, e.g.     *\r\n* shares for equities, norminal or par amount for bonds,  *\r\n* currency for foreign exchange. When quantity is         *\r\n* expressed in contracts, e.g. financing transactions and *\r\n* bond trade reporting, ContractMutliplier should contain *\r\n* the number of units in one contract and can be omitted  *\r\n* if the multiplier is the default amount for the         *\r\n* instrument, i.e. 1,000 par of bonds, 1,000,000 par for  *\r\n* financing transactions.                                 *\r\n***********************************************************\r\n*/\r\n  ContractMultiplier = 231,\r\n/*\r\n***********************************************************\r\n* Number of stipulation entries                           *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3). *\r\n***********************************************************\r\n*/\r\n  NoStipulations = 232,\r\n/*\r\n**********************************************************\r\n* For Fixed Income.                                      *\r\n* Type of Stipulation.                                   *\r\n* Other types may be used by mutual agreement of the     *\r\n* counterparties.                                        *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  StipulationType = 233,\r\n/*\r\n***********************************************************\r\n* For Fixed Income. Value of stipulation.                 *\r\n* The expression can be an absolute single value or a     *\r\n* combination of values and logical operators:            *\r\n* < value                                                 *\r\n* > value                                                 *\r\n* <= value                                                *\r\n* >= value                                                *\r\n* value                                                   *\r\n* value - value2                                          *\r\n* value OR value2                                         *\r\n* value AND value2                                        *\r\n* YES                                                     *\r\n* NO                                                      *\r\n* Bargain conditions recognized by the London Stock       *\r\n* Exchange - to be used when StipulationType is \"BGNCON\". *\r\n* CD = Special cum Dividend                               *\r\n* XD = Special ex Dividend                                *\r\n* CC = Special cum Coupon                                 *\r\n* XC = Special ex Coupon                                  *\r\n* CB = Special cum Bonus                                  *\r\n* XB = Special ex Bonus                                   *\r\n* CR = Special cum Rights                                 *\r\n* XR = Special ex Rights                                  *\r\n* CP = Special cum Capital Repayments                     *\r\n* XP = Special ex Capital Repayments                      *\r\n* CS = Cash Settlement                                    *\r\n* SP = Special Price                                      *\r\n* TR = Report for European Equity Market Securities in    *\r\n* accordance with Chapter 8 of the Rules.                 *\r\n* GD = Guaranteed Delivery                                *\r\n* Values for StipulationType = \"PXSOURCE\":                *\r\n* BB GENERIC                                              *\r\n* BB FAIRVALUE                                            *\r\n* BROKERTEC                                               *\r\n* ESPEED                                                  *\r\n* GOVPX                                                   *\r\n* HILLIARD FARBER                                         *\r\n* ICAP                                                    *\r\n* TRADEWEB                                                *\r\n* TULLETT LIBERTY                                         *\r\n* If a particular side of the market is wanted append     *\r\n* /BID /OFFER or /MID.                                    *\r\n* plus appropriate combinations of the above and other    *\r\n* expressions by mutual agreement of the counterparties.  *\r\n* Examples: \">=60\", \".25\", \"ORANGE OR CONTRACOSTA\", etc.  *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\r\n***********************************************************\r\n*/\r\n  StipulationValue = 234,\r\n/*\r\n*******************************************************\r\n* Type of yield. (Note tag # was reserved in FIX 4.1, *\r\n* added in FIX 4.3)                                   *\r\n*******************************************************\r\n*/\r\n  YieldType = 235,\r\n/*\r\n**********************************************************\r\n* Yield percentage.                                      *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  Yield = 236,\r\n/*\r\n***********************************************************\r\n* The price at which the securities are distributed to    *\r\n* the different members of an underwriting group for the  *\r\n* primary market in Municipals, total gross underwriter's *\r\n* spread.                                                 *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\r\n***********************************************************\r\n*/\r\n  TotalTakedown = 237,\r\n/*\r\n**********************************************************\r\n* Provides the reduction in price for the secondary      *\r\n* market in Muncipals.                                   *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  Concession = 238,\r\n/*\r\n**********************************************************\r\n* Identifies the collateral used in the transaction.     *\r\n* Valid values: see SecurityType (167) field (Note tag # *\r\n* was reserved in FIX 4.1, added in FIX 4.3)             *\r\n**********************************************************\r\n*/\r\n  RepoCollateralSecurityType = 239,\r\n/*\r\n*********************************************************\r\n* Return of investor's principal in a security. Bond    *\r\n* redemption can occur before maturity date.(Note tag # *\r\n* was reserved in FIX 4.1, added in FIX 4.3) (prior to  *\r\n* FIX 4.4 field was of type UTCDate)                    *\r\n*********************************************************\r\n*/\r\n  RedemptionDate = 240,\r\n/*\r\n**********************************************************\r\n* Underlying security's CouponPaymentDate.               *\r\n* See CouponPaymentDate (224) field for description      *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n* (prior to FIX 4.4 field was of type UTCDate)           *\r\n**********************************************************\r\n*/\r\n  UnderlyingCouponPaymentDate = 241,\r\n/*\r\n**********************************************************\r\n* Underlying security's IssueDate.                       *\r\n* See IssueDate (225) field for description              *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n* (prior to FIX 4.4 field was of type UTCDate)           *\r\n**********************************************************\r\n*/\r\n  UnderlyingIssueDate = 242,\r\n/*\r\n**********************************************************\r\n* Underlying security's RepoCollateralSecurityType. See  *\r\n* RepoCollateralSecurityType (239) field for             *\r\n* description.(Note tag # was reserved in FIX 4.1, added *\r\n* in FIX 4.3)                                            *\r\n**********************************************************\r\n*/\r\n  UnderlyingRepoCollateralSecurityType = 243,\r\n/*\r\n**********************************************************\r\n* Underlying security's RepurchaseTerm. See              *\r\n* RepurchaseTerm (226) field for description (Note tag # *\r\n* was reserved in FIX 4.1, added in FIX 4.3)             *\r\n**********************************************************\r\n*/\r\n  UnderlyingRepurchaseTerm = 244,\r\n/*\r\n**********************************************************\r\n* Underlying security's RepurchaseRate. See              *\r\n* RepurchaseRate (227) field for description (Note tag # *\r\n* was reserved in FIX 4.1, added in FIX 4.3)             *\r\n**********************************************************\r\n*/\r\n  UnderlyingRepurchaseRate = 245,\r\n/*\r\n**********************************************************\r\n* Underlying security's Factor.                          *\r\n* See Factor (228) field for description                 *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  UnderlyingFactor = 246,\r\n/*\r\n**********************************************************\r\n* Underlying security's RedemptionDate. See              *\r\n* RedemptionDate (240) field for description (Note tag # *\r\n* was reserved in FIX 4.1, added in FIX 4.3) (prior to   *\r\n* FIX 4.4 field was of type UTCDate)                     *\r\n**********************************************************\r\n*/\r\n  UnderlyingRedemptionDate = 247,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual leg security's        *\r\n* CouponPaymentDate.                                     *\r\n* See CouponPaymentDate (224) field for description      *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n* (prior to FIX 4.4 field was of type UTCDate)           *\r\n**********************************************************\r\n*/\r\n  LegCouponPaymentDate = 248,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual leg security's        *\r\n* IssueDate.                                             *\r\n* See IssueDate (225) field for description              *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n* (prior to FIX 4.4 field was of type UTCDate)           *\r\n**********************************************************\r\n*/\r\n  LegIssueDate = 249,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual leg security's        *\r\n* RepoCollateralSecurityType. See                        *\r\n* RepoCollateralSecurityType (239) field for description *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  LegRepoCollateralSecurityType = 250,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual leg security's        *\r\n* RepurchaseTerm. See RepurchaseTerm (226) field for     *\r\n* description (Note tag # was reserved in FIX 4.1, added *\r\n* in FIX 4.3)                                            *\r\n**********************************************************\r\n*/\r\n  LegRepurchaseTerm = 251,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual leg security's        *\r\n* RepurchaseRate. See RepurchaseRate (227) field for     *\r\n* description (Note tag # was reserved in FIX 4.1, added *\r\n* in FIX 4.3)                                            *\r\n**********************************************************\r\n*/\r\n  LegRepurchaseRate = 252,\r\n/*\r\n***********************************************************\r\n* Multileg instrument's individual leg security's Factor. *\r\n* See Factor (228) field for description                  *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\r\n***********************************************************\r\n*/\r\n  LegFactor = 253,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual leg security's        *\r\n* RedemptionDate. See RedemptionDate (240) field for     *\r\n* description (Note tag # was reserved in FIX 4.1, added *\r\n* in FIX 4.3) (prior to FIX 4.4 field was of type        *\r\n* UTCDate)                                               *\r\n**********************************************************\r\n*/\r\n  LegRedemptionDate = 254,\r\n/*\r\n***********************************************************\r\n* An evaluation of a company's ability to repay           *\r\n* obligations or its likelihood of not defaulting. These  *\r\n* evaluation are provided by Credit Rating Agencies, i.e. *\r\n* S&P, Moody's.                                           *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\r\n***********************************************************\r\n*/\r\n  CreditRating = 255,\r\n/*\r\n**********************************************************\r\n* Underlying security's CreditRating.                    *\r\n* See CreditRating (255) field for description           *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  UnderlyingCreditRating = 256,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual leg security's        *\r\n* CreditRating.                                          *\r\n* See CreditRating (255) field for description           *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  LegCreditRating = 257,\r\n/*\r\n***********************************************************\r\n* Driver and part of trade in the event that the Security *\r\n* Master file was wrong at the point of entry(Note tag #  *\r\n* was reserved in FIX 4.1, added in FIX 4.3)              *\r\n***********************************************************\r\n*/\r\n  TradedFlatSwitch = 258,\r\n/*\r\n**********************************************************\r\n* BasisFeatureDate allows requesting firms within fixed  *\r\n* income the ability to request an alternative           *\r\n* yield-to-worst, -maturity, -extended or other call.    *\r\n* This flows through the confirm process.                *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n* (prior to FIX 4.4 field was of type UTCDate)           *\r\n**********************************************************\r\n*/\r\n  BasisFeatureDate = 259,\r\n/*\r\n**********************************************************\r\n* Price for BasisFeatureDate.                            *\r\n* See BasisFeatureDate (259)                             *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  BasisFeaturePrice = 260,\r\n/*\r\n*********************************************\r\n* Unique identifier for Market Data Request *\r\n*********************************************\r\n*/\r\n  MDReqID = 262,\r\n/*\r\n*****************************\r\n* Subscription Request Type *\r\n*****************************\r\n*/\r\n  SubscriptionRequestType = 263,\r\n/*\r\n***********************************************************\r\n* Depth of market for Book Snapshot / Incremental updates *\r\n* 0 - full book depth                                     *\r\n* 1 - top of book                                         *\r\n* 2 and above - book depth (number of levels)             *\r\n***********************************************************\r\n*/\r\n  MarketDepth = 264,\r\n/*\r\n*********************************************\r\n* Specifies the type of Market Data update. *\r\n*********************************************\r\n*/\r\n  MDUpdateType = 265,\r\n/*\r\n***************************************************\r\n* Specifies whether or not book entries should be *\r\n* aggregated. (Not specified) = broker option     *\r\n***************************************************\r\n*/\r\n  AggregatedBook = 266,\r\n/*\r\n*************************************************\r\n* Number of MDEntryType (269) fields requested. *\r\n*************************************************\r\n*/\r\n  NoMDEntryTypes = 267,\r\n/*\r\n*********************************************\r\n* Number of entries in Market Data message. *\r\n*********************************************\r\n*/\r\n  NoMDEntries = 268,\r\n/*\r\n***************************\r\n* Type Market Data entry. *\r\n***************************\r\n*/\r\n  MDEntryType = 269,\r\n/*\r\n***********************************\r\n* Price of the Market Data Entry. *\r\n***********************************\r\n*/\r\n  MDEntryPx = 270,\r\n/*\r\n*****************************************************\r\n* Quantity or volume represented by the Market Data *\r\n* Entry.                                            *\r\n*****************************************************\r\n*/\r\n  MDEntrySize = 271,\r\n/*\r\n************************************************\r\n* Date of Market Data Entry.                   *\r\n* (prior to FIX 4.4 field was of type UTCDate) *\r\n************************************************\r\n*/\r\n  MDEntryDate = 272,\r\n/*\r\n******************************\r\n* Time of Market Data Entry. *\r\n******************************\r\n*/\r\n  MDEntryTime = 273,\r\n/*\r\n****************************\r\n* Direction of the \"tick\". *\r\n****************************\r\n*/\r\n  TickDirection = 274,\r\n/*\r\n*********************************\r\n* Market posting quote / trade. *\r\n* Valid values:                 *\r\n* See \"Appendix 6-C\"            *\r\n*********************************\r\n*/\r\n  MDMkt = 275,\r\n/*\r\n**********************************************************\r\n* Space-delimited list of conditions describing a quote. *\r\n**********************************************************\r\n*/\r\n  QuoteCondition = 276,\r\n/*\r\n*********************************************************\r\n* Space-delimited list of conditions describing a trade *\r\n*********************************************************\r\n*/\r\n  TradeCondition = 277,\r\n/*\r\n****************************************\r\n* Unique Market Data Entry identifier. *\r\n****************************************\r\n*/\r\n  MDEntryID = 278,\r\n/*\r\n**************************************\r\n* Type of Market Data update action. *\r\n**************************************\r\n*/\r\n  MDUpdateAction = 279,\r\n/*\r\n*****************************************\r\n* Refers to a previous MDEntryID (278). *\r\n*****************************************\r\n*/\r\n  MDEntryRefID = 280,\r\n/*\r\n******************************************************\r\n* Reason for the rejection of a Market Data request. *\r\n******************************************************\r\n*/\r\n  MDReqRejReason = 281,\r\n/*\r\n*************************************\r\n* Originator of a Market Data Entry *\r\n*************************************\r\n*/\r\n  MDEntryOriginator = 282,\r\n/*\r\n***********************************************\r\n* Identification of a Market Maker's location *\r\n***********************************************\r\n*/\r\n  LocationID = 283,\r\n/*\r\n*******************************************\r\n* Identification of a Market Maker's desk *\r\n*******************************************\r\n*/\r\n  DeskID = 284,\r\n/*\r\n************************\r\n* Reason for deletion. *\r\n************************\r\n*/\r\n  DeleteReason = 285,\r\n/*\r\n***********************************************************\r\n* Flag that identifies a market data entry. (Prior to FIX *\r\n* 4.3 this field was of type char)                        *\r\n***********************************************************\r\n*/\r\n  OpenCloseSettlFlag = 286,\r\n/*\r\n*******************************************************\r\n* Specifies the number of days that may elapse before *\r\n* delivery of the security                            *\r\n*******************************************************\r\n*/\r\n  SellerDays = 287,\r\n/*\r\n***************************\r\n* Buying party in a trade *\r\n***************************\r\n*/\r\n  MDEntryBuyer = 288,\r\n/*\r\n****************************\r\n* Selling party in a trade *\r\n****************************\r\n*/\r\n  MDEntrySeller = 289,\r\n/*\r\n**********************************************************\r\n* Display start of a bid or offer, numbered from most *\r\n* competitive to least competitive, per market side,     *\r\n* beginning with .                                       *\r\n**********************************************************\r\n*/\r\n  MDEntryPositionNo = 290,\r\n/*\r\n********************************************************\r\n* Identifies a firm's or a security's financial status *\r\n********************************************************\r\n*/\r\n  FinancialStatus = 291,\r\n/*\r\n********************************************\r\n* Identifies the type of Corporate Action. *\r\n********************************************\r\n*/\r\n  CorporateAction = 292,\r\n/*\r\n*********************\r\n* Default Bid Size. *\r\n*********************\r\n*/\r\n  DefBidSize = 293,\r\n/*\r\n***********************\r\n* Default Offer Size. *\r\n***********************\r\n*/\r\n  DefOfferSize = 294,\r\n/*\r\n***********************************************\r\n* The number of quote entries for a QuoteSet. *\r\n***********************************************\r\n*/\r\n  NoQuoteEntries = 295,\r\n/*\r\n************************************************\r\n* The number of sets of quotes in the message. *\r\n************************************************\r\n*/\r\n  NoQuoteSets = 296,\r\n/*\r\n*******************************************************\r\n* Identifies the status of the quote acknowledgement. *\r\n*******************************************************\r\n*/\r\n  QuoteStatus = 297,\r\n/*\r\n****************************************\r\n* Identifies the type of quote cancel. *\r\n****************************************\r\n*/\r\n  QuoteCancelType = 298,\r\n/*\r\n***********************************************************\r\n* Unique identifier for a quote. The QuoteEntryID stays   *\r\n* with the quote as a static identifier even if the quote *\r\n* is updated.                                             *\r\n***********************************************************\r\n*/\r\n  QuoteEntryID = 299,\r\n/*\r\n******************************\r\n* Reason Quote was rejected: *\r\n******************************\r\n*/\r\n  QuoteRejectReason = 300,\r\n/*\r\n***********************************************************\r\n* Level of Response requested from receiver of quote      *\r\n* messages. A default value should be bilaterally agreed. *\r\n***********************************************************\r\n*/\r\n  QuoteResponseLevel = 301,\r\n/*\r\n********************************\r\n* Unique id for the Quote Set. *\r\n********************************\r\n*/\r\n  QuoteSetID = 302,\r\n/*\r\n*******************************************************\r\n* Indicates the type of Quote Request being generated *\r\n*******************************************************\r\n*/\r\n  QuoteRequestType = 303,\r\n/*\r\n*********************************************\r\n* Total number of quotes for the quote set. *\r\n*********************************************\r\n*/\r\n  TotNoQuoteEntries = 304,\r\n/*\r\n*************************************************\r\n* Underlying security's SecurityIDSource.       *\r\n* Valid values: see SecurityIDSource (22) field *\r\n*************************************************\r\n*/\r\n  UnderlyingSecurityIDSource = 305,\r\n/*\r\n*****************************************\r\n* Underlying security's Issuer.         *\r\n* See Issuer (06) field for description *\r\n*****************************************\r\n*/\r\n  UnderlyingIssuer = 306,\r\n/*\r\n*******************************************\r\n* Description of the Underlying security. *\r\n* See SecurityDesc(107).                  *\r\n*******************************************\r\n*/\r\n  UnderlyingSecurityDesc = 307,\r\n/*\r\n**********************************************************\r\n* Underlying security's SecurityExchange. Can be used to *\r\n* identify the underlying security.                      *\r\n* Valid values: see SecurityExchange (207)               *\r\n**********************************************************\r\n*/\r\n  UnderlyingSecurityExchange = 308,\r\n/*\r\n*********************************************\r\n* Underlying security's SecurityID.         *\r\n* See SecurityID (48) field for description *\r\n*********************************************\r\n*/\r\n  UnderlyingSecurityID = 309,\r\n/*\r\n***********************************************************\r\n* Underlying security's SecurityType.                     *\r\n* Valid values: see SecurityType (167) field              *\r\n* (see below for details concerning this fields use in    *\r\n* conjunction with SecurityType=REPO)                     *\r\n* The following applies when used in conjunction with     *\r\n* SecurityType=REPO                                       *\r\n* Represents the general or specific type of security     *\r\n* that underlies a financing agreement                    *\r\n* Valid values for SecurityType=REPO:                     *\r\n* If bonds of a particular issuer or country are wanted   *\r\n* in an Order or are in the basket of an Execution and    *\r\n* the SecurityType is not granular enough, include the    *\r\n* UnderlyingIssuer (306), UnderlyingCountryOfIssue (592), *\r\n* UnderlyingProgram, UnderlyingRegType and/or <           *\r\n* UnderlyingStipulations > block e.g.:                    *\r\n***********************************************************\r\n*/\r\n  UnderlyingSecurityType = 310,\r\n/*\r\n*****************************************\r\n* Underlying security's Symbol.         *\r\n* See Symbol (55) field for description *\r\n*****************************************\r\n*/\r\n  UnderlyingSymbol = 311,\r\n/*\r\n********************************************\r\n* Underlying security's SymbolSfx.         *\r\n* See SymbolSfx (65) field for description *\r\n********************************************\r\n*/\r\n  UnderlyingSymbolSfx = 312,\r\n/*\r\n********************************************************\r\n* Underlying security's MaturityMonthYear. Can be used *\r\n* with standardized derivatives vs. the                *\r\n* UnderlyingMaturityDate (542) field.                  *\r\n* See MaturityMonthYear (200) field for description    *\r\n********************************************************\r\n*/\r\n  UnderlyingMaturityMonthYear = 313,\r\n/*\r\n*****************************************************\r\n* Put or call indicator of the underlying security. *\r\n* See PutOrCall(201).                               *\r\n*****************************************************\r\n*/\r\n  UnderlyingPutOrCall = 315,\r\n/*\r\n***********************************************\r\n* Underlying security's StrikePrice.          *\r\n* See StrikePrice (202) field for description *\r\n***********************************************\r\n*/\r\n  UnderlyingStrikePrice = 316,\r\n/*\r\n************************************************\r\n* Underlying security's OptAttribute.          *\r\n* See OptAttribute (206) field for description *\r\n************************************************\r\n*/\r\n  UnderlyingOptAttribute = 317,\r\n/*\r\n***********************************************************\r\n* Underlying security's Currency.                         *\r\n* See Currency (5) field for description and valid values *\r\n***********************************************************\r\n*/\r\n  UnderlyingCurrency = 318,\r\n/*\r\n***********************************************\r\n* Unique ID of a Security Definition Request. *\r\n***********************************************\r\n*/\r\n  SecurityReqID = 320,\r\n/*\r\n****************************************\r\n* Type of Security Definition Request. *\r\n****************************************\r\n*/\r\n  SecurityRequestType = 321,\r\n/*\r\n***********************************************\r\n* Unique ID of a Security Definition message. *\r\n***********************************************\r\n*/\r\n  SecurityResponseID = 322,\r\n/*\r\n*************************************************\r\n* Type of Security Definition message response. *\r\n*************************************************\r\n*/\r\n  SecurityResponseType = 323,\r\n/*\r\n***************************************************\r\n* Unique ID of a Security Status Request message. *\r\n***************************************************\r\n*/\r\n  SecurityStatusReqID = 324,\r\n/*\r\n*******************************************************\r\n* Indicates whether or not message is being sent as a *\r\n* result of a subscription request or not.            *\r\n*******************************************************\r\n*/\r\n  UnsolicitedIndicator = 325,\r\n/*\r\n***************************************************\r\n* Identifies the trading status applicable to the *\r\n* transaction.                                    *\r\n***************************************************\r\n*/\r\n  SecurityTradingStatus = 326,\r\n/*\r\n*******************************************************\r\n* Denotes the reason for the Opening Delay or Trading *\r\n* Halt.                                               *\r\n*******************************************************\r\n*/\r\n  HaltReason = 327,\r\n/*\r\n*******************************************************\r\n* Indicates whether or not the halt was due to Common *\r\n* Stock trading being halted.                         *\r\n*******************************************************\r\n*/\r\n  InViewOfCommon = 328,\r\n/*\r\n****************************************************\r\n* Indicates whether or not the halt was due to the *\r\n* Related Security being halted.                   *\r\n****************************************************\r\n*/\r\n  DueToRelated = 329,\r\n/*\r\n********************\r\n* Quantity bought. *\r\n********************\r\n*/\r\n  BuyVolume = 330,\r\n/*\r\n******************\r\n* Quantity sold. *\r\n******************\r\n*/\r\n  SellVolume = 331,\r\n/*\r\n*********************************************************\r\n* Represents an indication of the high end of the price *\r\n* range for a security prior to the open or reopen      *\r\n*********************************************************\r\n*/\r\n  HighPx = 332,\r\n/*\r\n********************************************************\r\n* Represents an indication of the low end of the price *\r\n* range for a security prior to the open or reopen     *\r\n********************************************************\r\n*/\r\n  LowPx = 333,\r\n/*\r\n**************************************\r\n* Identifies the type of adjustment. *\r\n**************************************\r\n*/\r\n  Adjustment = 334,\r\n/*\r\n**************************************************\r\n* Unique ID of a Trading Session Status message. *\r\n**************************************************\r\n*/\r\n  TradSesReqID = 335,\r\n/*\r\n***********************************************************\r\n* Identifier for Trading Session                          *\r\n* A trading session spans an extended period of time that *\r\n* can also be expressed informally in terms of the        *\r\n* trading day. Usage is determined by market or           *\r\n* counterparties.                                         *\r\n* To specify good for session where session spans more    *\r\n* than one calendar day, use TimeInForce = Day in         *\r\n* conjunction with TradingSessionID.                      *\r\n* Bilaterally agreed values of data type \"String\" that    *\r\n* start with a character can be used for backward         *\r\n* compatibility.                                          *\r\n***********************************************************\r\n*/\r\n  TradingSessionID = 336,\r\n/*\r\n******************************************************\r\n* Identifies the trader (e.g. \"badge number\") of the *\r\n* ContraBroker.                                      *\r\n******************************************************\r\n*/\r\n  ContraTrader = 337,\r\n/*\r\n*********************\r\n* Method of trading *\r\n*********************\r\n*/\r\n  TradSesMethod = 338,\r\n/*\r\n************************\r\n* Trading Session Mode *\r\n************************\r\n*/\r\n  TradSesMode = 339,\r\n/*\r\n*********************************\r\n* State of the trading session. *\r\n*********************************\r\n*/\r\n  TradSesStatus = 340,\r\n/*\r\n****************************************\r\n* Starting time of the trading session *\r\n****************************************\r\n*/\r\n  TradSesStartTime = 341,\r\n/*\r\n**********************************************\r\n* Time of the opening of the trading session *\r\n**********************************************\r\n*/\r\n  TradSesOpenTime = 342,\r\n/*\r\n*************************************************\r\n* Time of the pre-closed of the trading session *\r\n*************************************************\r\n*/\r\n  TradSesPreCloseTime = 343,\r\n/*\r\n***************************************\r\n* Closing time of the trading session *\r\n***************************************\r\n*/\r\n  TradSesCloseTime = 344,\r\n/*\r\n***********************************\r\n* End time of the trading session *\r\n***********************************\r\n*/\r\n  TradSesEndTime = 345,\r\n/*\r\n***********************************\r\n* Number of orders in the market. *\r\n***********************************\r\n*/\r\n  NumberOfOrders = 346,\r\n/*\r\n*****************************************************\r\n* Type of message encoding (non-ASCII (non-English) *\r\n* characters) used in a message's \"Encoded\" fields. *\r\n*****************************************************\r\n*/\r\n  MessageEncoding = 347,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedIssuer (349) field.                    *\r\n*************************************************\r\n*/\r\n  EncodedIssuerLen = 348,\r\n/*\r\n********************************************************\r\n* Encoded (non-ASCII characters) representation of the *\r\n* Issuer field in the encoded format specified via the *\r\n* MessageEncoding (347) field. If used, the ASCII      *\r\n* (English) representation should also be specified in *\r\n* the Issuer field.                                    *\r\n********************************************************\r\n*/\r\n  EncodedIssuer = 349,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedSecurityDesc (351) field.              *\r\n*************************************************\r\n*/\r\n  EncodedSecurityDescLen = 350,\r\n/*\r\n***********************************************************\r\n* Encoded (non-ASCII characters) representation of the    *\r\n* SecurityDesc (107) field in the encoded format          *\r\n* specified via the MessageEncoding (347) field. If used, *\r\n* the ASCII (English) representation should also be       *\r\n* specified in the SecurityDesc field.                    *\r\n***********************************************************\r\n*/\r\n  EncodedSecurityDesc = 351,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedListExecInst (353) field.              *\r\n*************************************************\r\n*/\r\n  EncodedListExecInstLen = 352,\r\n/*\r\n***********************************************************\r\n* Encoded (non-ASCII characters) representation of the    *\r\n* ListExecInst (69) field in the encoded format specified *\r\n* via the MessageEncoding (347) field. If used, the ASCII *\r\n* (English) representation should also be specified in    *\r\n* the ListExecInst field.                                 *\r\n***********************************************************\r\n*/\r\n  EncodedListExecInst = 353,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedText (355) field.                      *\r\n*************************************************\r\n*/\r\n  EncodedTextLen = 354,\r\n/*\r\n***********************************************************\r\n* Encoded (non-ASCII characters) representation of the    *\r\n* Text (58) field in the encoded format specified via the *\r\n* MessageEncoding (347) field. If used, the ASCII         *\r\n* (English) representation should also be specified in    *\r\n* the Text field.                                         *\r\n***********************************************************\r\n*/\r\n  EncodedText = 355,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedSubject (357) field.                   *\r\n*************************************************\r\n*/\r\n  EncodedSubjectLen = 356,\r\n/*\r\n***********************************************************\r\n* Encoded (non-ASCII characters) representation of the    *\r\n* Subject (147) field in the encoded format specified via *\r\n* the MessageEncoding (347) field. If used, the ASCII     *\r\n* (English) representation should also be specified in    *\r\n* the Subject field.                                      *\r\n***********************************************************\r\n*/\r\n  EncodedSubject = 357,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedHeadline (359) field.                  *\r\n*************************************************\r\n*/\r\n  EncodedHeadlineLen = 358,\r\n/*\r\n***********************************************************\r\n* Encoded (non-ASCII characters) representation of the    *\r\n* Headline (148) field in the encoded format specified    *\r\n* via the MessageEncoding (347) field. If used, the ASCII *\r\n* (English) representation should also be specified in    *\r\n* the Headline field.                                     *\r\n***********************************************************\r\n*/\r\n  EncodedHeadline = 359,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedAllocText (361) field.                 *\r\n*************************************************\r\n*/\r\n  EncodedAllocTextLen = 360,\r\n/*\r\n***********************************************************\r\n* Encoded (non-ASCII characters) representation of the    *\r\n* AllocText (161) field in the encoded format specified   *\r\n* via the MessageEncoding (347) field. If used, the ASCII *\r\n* (English) representation should also be specified in    *\r\n* the AllocText field.                                    *\r\n***********************************************************\r\n*/\r\n  EncodedAllocText = 361,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedUnderlyingIssuer (363) field.          *\r\n*************************************************\r\n*/\r\n  EncodedUnderlyingIssuerLen = 362,\r\n/*\r\n***********************************************************\r\n* Encoded (non-ASCII characters) representation of the    *\r\n* UnderlyingIssuer (306) field in the encoded format      *\r\n* specified via the MessageEncoding (347) field. If used, *\r\n* the ASCII (English) representation should also be       *\r\n* specified in the UnderlyingIssuer field.                *\r\n***********************************************************\r\n*/\r\n  EncodedUnderlyingIssuer = 363,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedUnderlyingSecurityDesc (365) field.    *\r\n*************************************************\r\n*/\r\n  EncodedUnderlyingSecurityDescLen = 364,\r\n/*\r\n***********************************************************\r\n* Encoded (non-ASCII characters) representation of the    *\r\n* UnderlyingSecurityDesc (307) field in the encoded       *\r\n* format specified via the MessageEncoding (347) field.   *\r\n* If used, the ASCII (English) representation should also *\r\n* be specified in the UnderlyingSecurityeDesc field.      *\r\n***********************************************************\r\n*/\r\n  EncodedUnderlyingSecurityDesc = 365,\r\n/*\r\n***********************************************************\r\n* Executed price for an AllocAccount (79) entry used when *\r\n* using \"executed price\" vs. \"average price\" allocations  *\r\n* (e.g. Japan).                                           *\r\n***********************************************************\r\n*/\r\n  AllocPrice = 366,\r\n/*\r\n*********************************************************\r\n* Indicates expiration time of this particular QuoteSet *\r\n* (always expressed in UTC (Universal Time Coordinated, *\r\n* also known as \"GMT\")                                  *\r\n*********************************************************\r\n*/\r\n  QuoteSetValidUntilTime = 367,\r\n/*\r\n************************************\r\n* Reason Quote Entry was rejected: *\r\n************************************\r\n*/\r\n  QuoteEntryRejectReason = 368,\r\n/*\r\n***********************************************************\r\n* The last MsgSeqNum (34) value received by the FIX       *\r\n* engine and processed by downstream application, such as *\r\n* trading engine or order routing system. Can be          *\r\n* specified on every message sent. Useful for detecting a *\r\n* backlog with a counterparty.                            *\r\n***********************************************************\r\n*/\r\n  LastMsgSeqNumProcessed = 369,\r\n/*\r\n*****************************************************\r\n* The tag number of the FIX field being referenced. *\r\n*****************************************************\r\n*/\r\n  RefTagID = 371,\r\n/*\r\n*********************************************************\r\n* The MsgType (35) of the FIX message being referenced. *\r\n*********************************************************\r\n*/\r\n  RefMsgType = 372,\r\n/*\r\n******************************************************\r\n* Code to identify reason for a session-level Reject *\r\n* message.                                           *\r\n******************************************************\r\n*/\r\n  SessionRejectReason = 373,\r\n/*\r\n********************************************\r\n* Identifies the Bid Request message type. *\r\n********************************************\r\n*/\r\n  BidRequestTransType = 374,\r\n/*\r\n********************************************************\r\n* Identifies contra broker. Standard NASD market-maker *\r\n* mnemonic is preferred.                               *\r\n********************************************************\r\n*/\r\n  ContraBroker = 375,\r\n/*\r\n********************************************************\r\n* ID used to represent this transaction for compliance *\r\n* purposes (e.g. OATS reporting).                      *\r\n********************************************************\r\n*/\r\n  ComplianceID = 376,\r\n/*\r\n*****************************************************\r\n* Indicates whether or not the order was solicited. *\r\n*****************************************************\r\n*/\r\n  SolicitedFlag = 377,\r\n/*\r\n**********************************************************\r\n* Code to identify reason for an ExecutionRpt message    *\r\n* sent with ExecType=Restated or used when communicating *\r\n* an unsolicited cancel.                                 *\r\n**********************************************************\r\n*/\r\n  ExecRestatementReason = 378,\r\n/*\r\n*****************************************************\r\n* The value of the business-level \"ID\" field on the *\r\n* message being referenced.                         *\r\n*****************************************************\r\n*/\r\n  BusinessRejectRefID = 379,\r\n/*\r\n*********************************************************\r\n* Code to identify reason for a Business Message Reject *\r\n* message.                                              *\r\n*********************************************************\r\n*/\r\n  BusinessRejectReason = 380,\r\n/*\r\n*********************************************************\r\n* Total amount traded (i.e. quantity * price) expressed *\r\n* in units of currency. For FX Futures this is used to  *\r\n* express the notional value of a fill when quantity    *\r\n* fields are expressed in terms of contract size (i.e.  *\r\n* quantity * price * contract size).                    *\r\n*********************************************************\r\n*/\r\n  GrossTradeAmt = 381,\r\n/*\r\n*********************************************\r\n* The number of ContraBroker (375) entries. *\r\n*********************************************\r\n*/\r\n  NoContraBrokers = 382,\r\n/*\r\n***********************************************************\r\n* Maximum number of bytes supported for a single message. *\r\n***********************************************************\r\n*/\r\n  MaxMessageSize = 383,\r\n/*\r\n***********************************************\r\n* Number of MsgTypes (35) in repeating group. *\r\n***********************************************\r\n*/\r\n  NoMsgTypes = 384,\r\n/*\r\n********************************************\r\n* Specifies the direction of the messsage. *\r\n********************************************\r\n*/\r\n  MsgDirection = 385,\r\n/*\r\n*********************************************************\r\n* Number of TradingSessionIDs (336) in repeating group. *\r\n*********************************************************\r\n*/\r\n  NoTradingSessions = 386,\r\n/*\r\n***********************************\r\n* Total volume (quantity) traded. *\r\n***********************************\r\n*/\r\n  TotalVolumeTraded = 387,\r\n/*\r\n**********************************************************\r\n* Code to identify the price a DiscretionOffsetValue     *\r\n* (389) is related to and should be mathematically added *\r\n* to.                                                    *\r\n**********************************************************\r\n*/\r\n  DiscretionInst = 388,\r\n/*\r\n*********************************************************\r\n* Amount (signed) added to the \"related to\" price       *\r\n* specified via DiscretionInst (388), in the context of *\r\n* DiscretionOffsetType (842)                            *\r\n* (Prior to FIX 4.4 this field was of type PriceOffset) *\r\n*********************************************************\r\n*/\r\n  DiscretionOffsetValue = 389,\r\n/*\r\n*********************************************************\r\n* Unique identifier for Bid Response as assigned by     *\r\n* sell-side (broker, exchange, ECN). Uniqueness must be *\r\n* guaranteed within a single trading day.               *\r\n*********************************************************\r\n*/\r\n  BidID = 390,\r\n/*\r\n*******************************************************\r\n* Unique identifier for a Bid Request as assigned by  *\r\n* institution. Uniqueness must be guaranteed within a *\r\n* single trading day.                                 *\r\n*******************************************************\r\n*/\r\n  ClientBidID = 391,\r\n/*\r\n************************************\r\n* Descriptive name for list order. *\r\n************************************\r\n*/\r\n  ListName = 392,\r\n/*\r\n******************************************\r\n* Total number of securities.            *\r\n* (Prior to FIX 4.4 this field was named *\r\n* TotalNumSecurities)                    *\r\n******************************************\r\n*/\r\n  TotNoRelatedSym = 393,\r\n/*\r\n*********************************************\r\n* Code to identify the type of Bid Request. *\r\n*********************************************\r\n*/\r\n  BidType = 394,\r\n/*\r\n****************************\r\n* Total number of tickets. *\r\n****************************\r\n*/\r\n  NumTickets = 395,\r\n/*\r\n***********************\r\n* Amounts in currency *\r\n***********************\r\n*/\r\n  SideValue1 = 396,\r\n/*\r\n***********************\r\n* Amounts in currency *\r\n***********************\r\n*/\r\n  SideValue2 = 397,\r\n/*\r\n******************************************\r\n* Number of BidDescriptor (400) entries. *\r\n******************************************\r\n*/\r\n  NoBidDescriptors = 398,\r\n/*\r\n*****************************************************\r\n* Code to identify the type of BidDescriptor (400). *\r\n*****************************************************\r\n*/\r\n  BidDescriptorType = 399,\r\n/*\r\n*******************************************\r\n* BidDescriptor value. Usage depends upon *\r\n* BidDescriptorTyp (399).                 *\r\n* If BidDescriptorType = 1                *\r\n* Industrials etc - Free text             *\r\n* If BidDescriptorType = 2                *\r\n* \"FR\" etc - ISO Country Codes            *\r\n* If BidDescriptorType = 3                *\r\n* FT00, FT250, STOX - Free text           *\r\n*******************************************\r\n*/\r\n  BidDescriptor = 400,\r\n/*\r\n***********************************************************\r\n* Code to identify which \"SideValue\" the value refers to. *\r\n* SideValue1 and SideValue2 are used as opposed to Buy or *\r\n* Sell so that the basket can be quoted either way as Buy *\r\n* or Sell.                                                *\r\n***********************************************************\r\n*/\r\n  SideValueInd = 401,\r\n/*\r\n**************************************************\r\n* Liquidity indicator or lower limit if          *\r\n* TotalNumSecurities (393) > 1. Represented as a *\r\n* percentage.                                    *\r\n**************************************************\r\n*/\r\n  LiquidityPctLow = 402,\r\n/*\r\n***********************************************************\r\n* Upper liquidity indicator if TotalNumSecurities (393) > *\r\n* 1. Represented as a percentage.                         *\r\n***********************************************************\r\n*/\r\n  LiquidityPctHigh = 403,\r\n/*\r\n*******************************************\r\n* Value between LiquidityPctLow (402) and *\r\n* LiquidityPctHigh (403) in Currency      *\r\n*******************************************\r\n*/\r\n  LiquidityValue = 404,\r\n/*\r\n*********************************************************\r\n* Eg Used in EFP trades 2% (EFP - Exchange for Physical *\r\n* ). Represented as a percentage.                       *\r\n*********************************************************\r\n*/\r\n  EFPTrackingError = 405,\r\n/*\r\n**********************\r\n* Used in EFP trades *\r\n**********************\r\n*/\r\n  FairValue = 406,\r\n/*\r\n****************************************************\r\n* Used in EFP trades. Represented as a percentage. *\r\n****************************************************\r\n*/\r\n  OutsideIndexPct = 407,\r\n/*\r\n**********************\r\n* Used in EFP trades *\r\n**********************\r\n*/\r\n  ValueOfFutures = 408,\r\n/*\r\n*****************************************************\r\n* Code to identify the type of liquidity indicator. *\r\n*****************************************************\r\n*/\r\n  LiquidityIndType = 409,\r\n/*\r\n**********************************************************\r\n* Overall weighted average liquidity expressed as a % of *\r\n* average daily volume. Represented as a percentage.     *\r\n**********************************************************\r\n*/\r\n  WtAverageLiquidity = 410,\r\n/*\r\n******************************************************\r\n* Indicates whether or not to exchange for phsyical. *\r\n******************************************************\r\n*/\r\n  ExchangeForPhysical = 411,\r\n/*\r\n*******************************\r\n* Value of stocks in Currency *\r\n*******************************\r\n*/\r\n  OutMainCntryUIndex = 412,\r\n/*\r\n***************************************************\r\n* Percentage of program that crosses in Currency. *\r\n* Represented as a percentage.                    *\r\n***************************************************\r\n*/\r\n  CrossPercent = 413,\r\n/*\r\n******************************************************\r\n* Code to identify the desired frequency of progress *\r\n* reports.                                           *\r\n******************************************************\r\n*/\r\n  ProgRptReqs = 414,\r\n/*\r\n**********************************************************\r\n* Time in minutes between each ListStatus report sent by *\r\n* SellSide. Zero means don't send status.                *\r\n**********************************************************\r\n*/\r\n  ProgPeriodInterval = 415,\r\n/*\r\n********************************************************\r\n* Code to represent whether value is net (inclusive of *\r\n* tax) or gross.                                       *\r\n********************************************************\r\n*/\r\n  IncTaxInd = 416,\r\n/*\r\n*****************************************************\r\n* Indicates the total number of bidders on the list *\r\n*****************************************************\r\n*/\r\n  NumBidders = 417,\r\n/*\r\n*******************************************************\r\n* Code to represent the type of trade.                *\r\n* (Prior to FIX 4.4 this field was named \"TradeType\") *\r\n*******************************************************\r\n*/\r\n  BidTradeType = 418,\r\n/*\r\n*******************************************\r\n* Code to represent the basis price type. *\r\n*******************************************\r\n*/\r\n  BasisPxType = 419,\r\n/*\r\n*****************************************\r\n* Indicates the number of list entries. *\r\n*****************************************\r\n*/\r\n  NoBidComponents = 420,\r\n/*\r\n*****************************\r\n* ISO Country Code in field *\r\n*****************************\r\n*/\r\n  Country = 421,\r\n/*\r\n*********************************************************\r\n* Total number of strike price entries across all       *\r\n* messages. Should be the sum of all NoStrikes (428) in *\r\n* each message that has repeating strike price entries  *\r\n* related to the same ListID (66). Used to support      *\r\n* fragmentation.                                        *\r\n*********************************************************\r\n*/\r\n  TotNoStrikes = 422,\r\n/*\r\n***********************************************************\r\n* Code to represent the price type.                       *\r\n* (For Financing transactions PriceType implies the \"repo *\r\n* type\" - Fixed or Floating - 9 (Yield) or 6 (Spread)     *\r\n* respectively - and Price (44) gives the corresponding   *\r\n* \"repo rate\".                                            *\r\n* See Volume : \"Glossary\" for further value definitions)  *\r\n***********************************************************\r\n*/\r\n  PriceType = 423,\r\n/*\r\n*******************************************************\r\n* For GT orders, the OrderQty (38) less all quantity  *\r\n* (adjusted for stock splits) that traded on previous *\r\n* days. DayOrderQty (424) = OrderQty - (CumQty (14) - *\r\n* DayCumQty (425))                                    *\r\n*******************************************************\r\n*/\r\n  DayOrderQty = 424,\r\n/*\r\n*************************************************\r\n* Quantity on a GT order that has traded today. *\r\n*************************************************\r\n*/\r\n  DayCumQty = 425,\r\n/*\r\n*********************************************************\r\n* The average price for quantity on a GT order that has *\r\n* traded today.                                         *\r\n*********************************************************\r\n*/\r\n  DayAvgPx = 426,\r\n/*\r\n********************************************************\r\n* Code to identify whether to book out executions on a *\r\n* part-filled GT order on the day of execution or to   *\r\n* accumulate.                                          *\r\n********************************************************\r\n*/\r\n  GTBookingInst = 427,\r\n/*\r\n****************************************\r\n* Number of list strike price entries. *\r\n****************************************\r\n*/\r\n  NoStrikes = 428,\r\n/*\r\n**************************************\r\n* Code to represent the status type. *\r\n**************************************\r\n*/\r\n  ListStatusType = 429,\r\n/*\r\n********************************************************\r\n* Code to represent whether value is net (inclusive of *\r\n* tax) or gross.                                       *\r\n********************************************************\r\n*/\r\n  NetGrossInd = 430,\r\n/*\r\n*************************************************\r\n* Code to represent the status of a list order. *\r\n*************************************************\r\n*/\r\n  ListOrderStatus = 431,\r\n/*\r\n***********************************************************\r\n* Date of order expiration (last day the order can        *\r\n* trade), always expressed in terms of the local market   *\r\n* date. The time at which the order expires is determined *\r\n* by the local market's business practices                *\r\n***********************************************************\r\n*/\r\n  ExpireDate = 432,\r\n/*\r\n*********************************************\r\n* Identifies the type of ListExecInst (69). *\r\n*********************************************\r\n*/\r\n  ListExecInstType = 433,\r\n/*\r\n**********************************************************\r\n* Identifies the type of request that a Cancel Reject is *\r\n* in response to.                                        *\r\n**********************************************************\r\n*/\r\n  CxlRejResponseTo = 434,\r\n/*\r\n**********************************************\r\n* Underlying security's CouponRate.          *\r\n* See CouponRate (223) field for description *\r\n**********************************************\r\n*/\r\n  UnderlyingCouponRate = 435,\r\n/*\r\n******************************************************\r\n* Underlying security's ContractMultiplier.          *\r\n* See ContractMultiplier (231) field for description *\r\n******************************************************\r\n*/\r\n  UnderlyingContractMultiplier = 436,\r\n/*\r\n************************************************\r\n* Quantity traded with the ContraBroker (375). *\r\n************************************************\r\n*/\r\n  ContraTradeQty = 437,\r\n/*\r\n*********************************************************\r\n* Identifes the time of the trade with the ContraBroker *\r\n* (375). (always expressed in UTC (Universal Time       *\r\n* Coordinated, also known as \"GMT\")                     *\r\n*********************************************************\r\n*/\r\n  ContraTradeTime = 438,\r\n/*\r\n*********************************************************\r\n* Number of Securites between LiquidityPctLow (402) and *\r\n* LiquidityPctHigh (403) in Currency.                   *\r\n*********************************************************\r\n*/\r\n  LiquidityNumSecurities = 441,\r\n/*\r\n********************************************************\r\n* Used to indicate what an Execution Report represents *\r\n* (e.g. used with multi-leg securities, such as option *\r\n* strategies, spreads, etc.).                          *\r\n********************************************************\r\n*/\r\n  MultiLegReportingType = 442,\r\n/*\r\n*******************************************************\r\n* The time at which current market prices are used to *\r\n* determine the value of a basket.                    *\r\n*******************************************************\r\n*/\r\n  StrikeTime = 443,\r\n/*\r\n***************************************************\r\n* Free format text string related to List Status. *\r\n***************************************************\r\n*/\r\n  ListStatusText = 444,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedListStatusText (446) field.            *\r\n*************************************************\r\n*/\r\n  EncodedListStatusTextLen = 445,\r\n/*\r\n***********************************************************\r\n* Encoded (non-ASCII characters) representation of the    *\r\n* ListStatusText (444) field in the encoded format        *\r\n* specified via the MessageEncoding (347) field. If used, *\r\n* the ASCII (English) representation should also be       *\r\n* specified in the ListStatusText field.                  *\r\n***********************************************************\r\n*/\r\n  EncodedListStatusText = 446,\r\n/*\r\n**********************************************************\r\n* Identifies class or source of the PartyID (448) value. *\r\n* Required if PartyID is specified. Note: applicable     *\r\n* values depend upon PartyRole (452) specified.          *\r\n* See \"Appendix 6-G - Use of <Parties> Component Block\"  *\r\n**********************************************************\r\n*/\r\n  PartyIDSource = 447,\r\n/*\r\n*********************************************************\r\n* Party identifier/code. See PartyIDSource (447) and    *\r\n* PartyRole (452).                                      *\r\n* See \"Appendix 6-G - Use of <Parties> Component Block\" *\r\n*********************************************************\r\n*/\r\n  PartyID = 448,\r\n/*\r\n*********************************************************\r\n* Net change from previous day's closing price vs. last *\r\n* traded price.                                         *\r\n*********************************************************\r\n*/\r\n  NetChgPrevDay = 451,\r\n/*\r\n*********************************************************\r\n* Identifies the type or role of the PartyID (448)      *\r\n* specified.                                            *\r\n* See \"Appendix 6-G - Use of <Parties> Component Block\" *\r\n* (see Volume : \"Glossary\" for value definitions)       *\r\n*********************************************************\r\n*/\r\n  PartyRole = 452,\r\n/*\r\n*****************************************************\r\n* Number of PartyID (448), PartyIDSource (447), and *\r\n* PartyRole (452) entries                           *\r\n*****************************************************\r\n*/\r\n  NoPartyIDs = 453,\r\n/*\r\n******************************************\r\n* Number of SecurityAltID (455) entries. *\r\n******************************************\r\n*/\r\n  NoSecurityAltID = 454,\r\n/*\r\n*********************************************************\r\n* Alternate Security identifier value for this security *\r\n* of SecurityAltIDSource (456) type (e.g. CUSIP, SEDOL, *\r\n* ISIN, etc). Requires SecurityAltIDSource.             *\r\n*********************************************************\r\n*/\r\n  SecurityAltID = 455,\r\n/*\r\n*********************************************************\r\n* Identifies class or source of the SecurityAltID (455) *\r\n* value. Required if SecurityAltID is specified.        *\r\n* Valid values:                                         *\r\n* Same valid values as the SecurityIDSource (22) field  *\r\n*********************************************************\r\n*/\r\n  SecurityAltIDSource = 456,\r\n/*\r\n****************************************************\r\n* Number of UnderlyingSecurityAltID (458) entries. *\r\n****************************************************\r\n*/\r\n  NoUnderlyingSecurityAltID = 457,\r\n/*\r\n***********************************************************\r\n* Alternate Security identifier value for this underlying *\r\n* security of UnderlyingSecurityAltIDSource (459) type    *\r\n* (e.g. CUSIP, SEDOL, ISIN, etc). Requires                *\r\n* UnderlyingSecurityAltIDSource.                          *\r\n***********************************************************\r\n*/\r\n  UnderlyingSecurityAltID = 458,\r\n/*\r\n********************************************************\r\n* Identifies class or source of the                    *\r\n* UnderlyingSecurityAltID (458) value. Required if     *\r\n* UnderlyingSecurityAltID is specified.                *\r\n* Valid values:                                        *\r\n* Same valid values as the SecurityIDSource (22) field *\r\n********************************************************\r\n*/\r\n  UnderlyingSecurityAltIDSource = 459,\r\n/*\r\n***************************************************\r\n* Indicates the type of product the security is   *\r\n* associated with. See also the CFICode (461) and *\r\n* SecurityType (167) fields.                      *\r\n***************************************************\r\n*/\r\n  Product = 460,\r\n/*\r\n***********************************************************\r\n* Indicates the type of security using ISO 10962          *\r\n* standard, Classification of Financial Instruments (CFI  *\r\n* code) values. ISO 10962 is maintained by ANNA           *\r\n* (Association of National Numbering Agencies) acting as  *\r\n* Registration Authority. See \"Appendix 6-B FIX Fields    *\r\n* Based Upon Other Standards\". See also the Product (460) *\r\n* and SecurityType (167) fields. It is recommended that   *\r\n* CFICode be used instead of SecurityType (167) for       *\r\n* non-Fixed Income instruments.                           *\r\n* A subset of possible values applicable to FIX usage are *\r\n* identified in \"Appendix 6-D CFICode Usage - ISO 10962   *\r\n* Classification of Financial Instruments (CFI code)\"     *\r\n***********************************************************\r\n*/\r\n  CFICode = 461,\r\n/*\r\n****************************************\r\n* Underlying security's Product.       *\r\n* Valid values: see Product(460) field *\r\n****************************************\r\n*/\r\n  UnderlyingProduct = 462,\r\n/*\r\n*****************************************\r\n* Underlying security's CFICode.        *\r\n* Valid values: see CFICode (461) field *\r\n*****************************************\r\n*/\r\n  UnderlyingCFICode = 463,\r\n/*\r\n*********************************************************\r\n* Indicates whether or not this FIX Session is a \"test\" *\r\n* vs. \"production\" connection. Useful for preventing    *\r\n* \"accidents\".                                          *\r\n*********************************************************\r\n*/\r\n  TestMessageIndicator = 464,\r\n/*\r\n***********************************************************\r\n* Common reference passed to a post-trade booking process *\r\n* (e.g. industry matching utility).                       *\r\n***********************************************************\r\n*/\r\n  BookingRefID = 466,\r\n/*\r\n********************************************************\r\n* Unique identifier for a specific NoAllocs (78)       *\r\n* repeating group instance (e.g. for an AllocAccount). *\r\n********************************************************\r\n*/\r\n  IndividualAllocID = 467,\r\n/*\r\n***********************************************************\r\n* Specifies which direction to round For CIV - indicates  *\r\n* whether or not the quantity of shares/units is to be    *\r\n* rounded and in which direction where CashOrdQty (152)   *\r\n* or (for CIV only) OrderPercent (516) are specified on   *\r\n* an order.                                               *\r\n* The default is for rounding to be at the discretion of  *\r\n* the executing broker or fund manager.                   *\r\n* e.g. for an order specifying CashOrdQty or OrderPercent *\r\n* if the calculated number of shares/units was 325.76 and *\r\n* RoundingModulus (469) was 0 - \"round down\" would give   *\r\n* 320 units, 1 - \"round up\" would give 330 units and      *\r\n* \"round to nearest\" would give 320 units.                *\r\n***********************************************************\r\n*/\r\n  RoundingDirection = 468,\r\n/*\r\n***********************************************************\r\n* For CIV - a float value indicating the value to which   *\r\n* rounding is required.                                   *\r\n* i.e. 0 means round to a multiple of 0 units/shares; 0.5 *\r\n* means round to a multiple of 0.5 units/shares.          *\r\n* The default, if RoundingDirection (468) is specified    *\r\n* without RoundingModulus, is to round to a whole         *\r\n* unit/share.                                             *\r\n***********************************************************\r\n*/\r\n  RoundingModulus = 469,\r\n/*\r\n**********************************************************\r\n* ISO Country code of instrument issue (e.g. the country *\r\n* portion typically used in ISIN). Can be used in        *\r\n* conjunction with non-ISIN SecurityID (48) (e.g. CUSIP  *\r\n* for Municipal Bonds without ISIN) to provide           *\r\n* uniqueness.                                            *\r\n**********************************************************\r\n*/\r\n  CountryOfIssue = 470,\r\n/*\r\n***************************************************\r\n* A two-character state or province abbreviation. *\r\n***************************************************\r\n*/\r\n  StateOrProvinceOfIssue = 471,\r\n/*\r\n*********************************************************\r\n* Identifies the locale. For Municipal Security Issuers *\r\n* other than state or province. Refer to                *\r\n* http://www.atmos.albany.edu/cgi/stagrep-cgi           *\r\n* Reference the IATA city codes for values.             *\r\n* Note IATA (International Air Transport Association)   *\r\n* maintains the codes at www.iata.org.                  *\r\n*********************************************************\r\n*/\r\n  LocaleOfIssue = 472,\r\n/*\r\n********************************************************\r\n* The number of registration details on a Registration *\r\n* Instructions message                                 *\r\n********************************************************\r\n*/\r\n  NoRegistDtls = 473,\r\n/*\r\n***************************************************\r\n* Set of Correspondence address details, possibly *\r\n* including phone, fax, etc.                      *\r\n***************************************************\r\n*/\r\n  MailingDtls = 474,\r\n/*\r\n*********************************************************\r\n* The ISO 366 Country code (2 character) identifying    *\r\n* which country the beneficial investor is resident for *\r\n* tax purposes.                                         *\r\n*********************************************************\r\n*/\r\n  InvestorCountryOfResidence = 475,\r\n/*\r\n**********************************************************\r\n* \"Settlement Payment Reference\" - A free format Payment *\r\n* reference to assist with reconciliation, e.g. a Client *\r\n* and/or Order ID number.                                *\r\n**********************************************************\r\n*/\r\n  PaymentRef = 476,\r\n/*\r\n******************************************************\r\n* A code identifying the payment method for a        *\r\n* (fractional) distribution.                         *\r\n* 13 through 998 are reserved for future use         *\r\n* Values above 1000 are available for use by private *\r\n* agreement among counterparties                     *\r\n******************************************************\r\n*/\r\n  DistribPaymentMethod = 477,\r\n/*\r\n********************************************************\r\n* Specifies currency to be used for Cash Distributions *\r\n* see \"Appendix 6-A Valid Currency Codes\".             *\r\n********************************************************\r\n*/\r\n  CashDistribCurr = 478,\r\n/*\r\n***********************************************************\r\n* Specifies currency to be use for Commission (12) if the *\r\n* Commission currency is different from the Deal Currency *\r\n* - see \"Appendix 6-A; Valid Currency Codes\".             *\r\n***********************************************************\r\n*/\r\n  CommCurrency = 479,\r\n/*\r\n******************************************************\r\n* For CIV - A one character code identifying whether *\r\n* Cancellation rights/Cooling off period applies.    *\r\n******************************************************\r\n*/\r\n  CancellationRights = 480,\r\n/*\r\n*****************************************************\r\n* A one character code identifying Money laundering *\r\n* status.                                           *\r\n*****************************************************\r\n*/\r\n  MoneyLaunderingStatus = 481,\r\n/*\r\n***************************************************\r\n* Free format text to specify mailing instruction *\r\n* requirements, e.g. \"no third party mailings\".   *\r\n***************************************************\r\n*/\r\n  MailingInst = 482,\r\n/*\r\n**********************************************************\r\n* For CIV A date and time stamp to indicate the time a   *\r\n* CIV order was booked by the fund manager.              *\r\n* For derivatives a date and time stamp to indicate when *\r\n* this order was booked with the agent prior to          *\r\n* submission to the VMU. Indicates the time at which the *\r\n* order was finalized between the buyer and seller prior *\r\n* to submission.                                         *\r\n**********************************************************\r\n*/\r\n  TransBkdTime = 483,\r\n/*\r\n*********************************************************\r\n* For CIV - Identifies how the execution price LastPx   *\r\n* (31) was calculated from the fund unit/share price(s) *\r\n* calculated at the fund valuation point.               *\r\n*********************************************************\r\n*/\r\n  ExecPriceType = 484,\r\n/*\r\n******************************************************\r\n* For CIV the amount or percentage by which the fund *\r\n* unit/share price was adjusted, as indicated by     *\r\n* ExecPriceType (484)                                *\r\n******************************************************\r\n*/\r\n  ExecPriceAdjustment = 485,\r\n/*\r\n********************************************************\r\n* The date of birth applicable to the individual, e.g. *\r\n* required to open some types of tax-exempt account.   *\r\n********************************************************\r\n*/\r\n  DateOfBirth = 486,\r\n/*\r\n****************************************************\r\n* Identifies Trade Report message transaction type *\r\n* (Prior to FIX 4.4 this field was of type char)   *\r\n****************************************************\r\n*/\r\n  TradeReportTransType = 487,\r\n/*\r\n***********************************************************\r\n* The name of the payment card holder as specified on the *\r\n* card being used for payment.                            *\r\n***********************************************************\r\n*/\r\n  CardHolderName = 488,\r\n/*\r\n***********************************************************\r\n* The number of the payment card as specified on the card *\r\n* being used for payment.                                 *\r\n***********************************************************\r\n*/\r\n  CardNumber = 489,\r\n/*\r\n***********************************************************\r\n* The expiry date of the payment card as specified on the *\r\n* card being used for payment.                            *\r\n***********************************************************\r\n*/\r\n  CardExpDate = 490,\r\n/*\r\n********************************************************\r\n* The issue number of the payment card as specified on *\r\n* the card being used for payment. This is only        *\r\n* applicable to certain types of card.                 *\r\n********************************************************\r\n*/\r\n  CardIssNum = 491,\r\n/*\r\n********************************************************\r\n* A code identifying the Settlement payment method. 16 *\r\n* through 998 are reserved for future use              *\r\n* Values above 1000 are available for use by private   *\r\n* agreement among counterparties                       *\r\n********************************************************\r\n*/\r\n  PaymentMethod = 492,\r\n/*\r\n***********************************************************\r\n* For CIV - a fund manager-defined code identifying which *\r\n* of the fund manager's account types is required.        *\r\n***********************************************************\r\n*/\r\n  RegistAcctType = 493,\r\n/*\r\n***********************************************************\r\n* Free format text defining the designation to be         *\r\n* associated with a holding on the register. Used to      *\r\n* identify assets of a specific underlying investor using *\r\n* a common registration, e.g. a broker's nominee or       *\r\n* street name.                                            *\r\n***********************************************************\r\n*/\r\n  Designation = 494,\r\n/*\r\n***********************************************************\r\n* For CIV - a code identifying the type of tax exempt     *\r\n* account in which purchased shares/units are to be held. *\r\n* 30 - 998 are reserved for future use by recognized      *\r\n* taxation authorities                                    *\r\n* 999=Other                                               *\r\n* values above 1000 are available for use by private      *\r\n* agreement among counterparties                          *\r\n***********************************************************\r\n*/\r\n  TaxAdvantageType = 495,\r\n/*\r\n************************************************\r\n* Text indicating reason(s) why a Registration *\r\n* Instruction has been rejected.               *\r\n************************************************\r\n*/\r\n  RegistRejReasonText = 496,\r\n/*\r\n***********************************************************\r\n* A one character code identifying whether the Fund based *\r\n* renewal commission is to be waived.                     *\r\n***********************************************************\r\n*/\r\n  FundRenewWaiv = 497,\r\n/*\r\n******************************************************\r\n* Name of local agent bank if for cash distributions *\r\n******************************************************\r\n*/\r\n  CashDistribAgentName = 498,\r\n/*\r\n*********************************************************\r\n* BIC (Bank Identification Code--Swift managed) code of *\r\n* agent bank for cash distributions                     *\r\n*********************************************************\r\n*/\r\n  CashDistribAgentCode = 499,\r\n/*\r\n***************************************************\r\n* Account number at agent bank for distributions. *\r\n***************************************************\r\n*/\r\n  CashDistribAgentAcctNumber = 500,\r\n/*\r\n************************************************\r\n* Free format Payment reference to assist with *\r\n* reconciliation of distributions.             *\r\n************************************************\r\n*/\r\n  CashDistribPayRef = 501,\r\n/*\r\n****************************************************\r\n* Name of account at agent bank for distributions. *\r\n****************************************************\r\n*/\r\n  CashDistribAgentAcctName = 502,\r\n/*\r\n*******************************************************\r\n* The start date of the card as specified on the card *\r\n* being used for payment.                             *\r\n*******************************************************\r\n*/\r\n  CardStartDate = 503,\r\n/*\r\n**********************************************************\r\n* The date written on a cheque or date payment should be *\r\n* submitted to the relevant clearing system.             *\r\n**********************************************************\r\n*/\r\n  PaymentDate = 504,\r\n/*\r\n****************************************************\r\n* Identifies sender of a payment, e.g. the payment *\r\n* remitter or a customer reference number.         *\r\n****************************************************\r\n*/\r\n  PaymentRemitterID = 505,\r\n/*\r\n*********************************************************\r\n* Registration status as returned by the broker or (for *\r\n* CIV) the fund manager:                                *\r\n*********************************************************\r\n*/\r\n  RegistStatus = 506,\r\n/*\r\n****************************************************\r\n* Reason(s) why Registration Instructions has been *\r\n* rejected.                                        *\r\n* The reason may be further amplified in the       *\r\n* RegistRejReasonCode field.                       *\r\n* Possible values of reason code include:          *\r\n****************************************************\r\n*/\r\n  RegistRejReasonCode = 507,\r\n/*\r\n**********************************************************\r\n* Reference identifier for the RegistID (53) with Cancel *\r\n* and Replace RegistTransType (54) transaction types.    *\r\n**********************************************************\r\n*/\r\n  RegistRefID = 508,\r\n/*\r\n**********************************************************\r\n* Set of Registration name and address details, possibly *\r\n* including phone, fax etc.                              *\r\n**********************************************************\r\n*/\r\n  RegistDtls = 509,\r\n/*\r\n************************************************\r\n* The number of Distribution Instructions on a *\r\n* Registration Instructions message            *\r\n************************************************\r\n*/\r\n  NoDistribInsts = 510,\r\n/*\r\n***********************************************************\r\n* Email address relating to Registration name and address *\r\n* details                                                 *\r\n***********************************************************\r\n*/\r\n  RegistEmail = 511,\r\n/*\r\n*************************************************\r\n* The amount of each distribution to go to this *\r\n* beneficiary, expressed as a percentage        *\r\n*************************************************\r\n*/\r\n  DistribPercentage = 512,\r\n/*\r\n****************************************************\r\n* Unique identifier of the registration details as *\r\n* assigned by institution or intermediary.         *\r\n****************************************************\r\n*/\r\n  RegistID = 513,\r\n/*\r\n*********************************************************\r\n* Identifies Registration Instructions transaction type *\r\n*********************************************************\r\n*/\r\n  RegistTransType = 514,\r\n/*\r\n********************************************************\r\n* For CIV - a date and time stamp to indicate the fund *\r\n* valuation point with respect to which a order was    *\r\n* priced by the fund manager.                          *\r\n********************************************************\r\n*/\r\n  ExecValuationPoint = 515,\r\n/*\r\n*********************************************************\r\n* For CIV specifies the approximate order quantity      *\r\n* desired. For a CIV Sale it specifies percentage of    *\r\n* investor's total holding to be sold. For a CIV        *\r\n* switch/exchange it specifies percentage of investor's *\r\n* cash realised from sales to be re-invested. The       *\r\n* executing broker, intermediary or fund manager is     *\r\n* responsible for converting and calculating OrderQty   *\r\n* (38) in shares/units for subsequent messages.         *\r\n*********************************************************\r\n*/\r\n  OrderPercent = 516,\r\n/*\r\n**************************************************\r\n* The relationship between Registration parties. *\r\n**************************************************\r\n*/\r\n  OwnershipType = 517,\r\n/*\r\n*********************************************************\r\n* The number of Contract Amount details on an Execution *\r\n* Report message                                        *\r\n*********************************************************\r\n*/\r\n  NoContAmts = 518,\r\n/*\r\n**********************************************************\r\n* Type of ContAmtValue (520).                            *\r\n* NOTE That Commission Amount / % in Contract Amounts is *\r\n* the commission actually charged, rather than the       *\r\n* commission instructions given in Fields 2/3.           *\r\n**********************************************************\r\n*/\r\n  ContAmtType = 519,\r\n/*\r\n********************************************************\r\n* Value of Contract Amount, e.g. a financial amount or *\r\n* percentage as indicated by ContAmtType (519).        *\r\n********************************************************\r\n*/\r\n  ContAmtValue = 520,\r\n/*\r\n***********************************************************\r\n* Specifies currency for the Contract amount if different *\r\n* from the Deal Currency - see \"Appendix 6-A; Valid       *\r\n* Currency Codes\".                                        *\r\n***********************************************************\r\n*/\r\n  ContAmtCurr = 521,\r\n/*\r\n*********************************\r\n* Identifies the type of owner. *\r\n*********************************\r\n*/\r\n  OwnerType = 522,\r\n/*\r\n**********************************************************\r\n* Sub-identifier (e.g. Clearing Account for PartyRole    *\r\n* (452)=Clearing Firm, Locate ID # for                   *\r\n* PartyRole=Locate/Lending Firm, etc). Not required when *\r\n* using PartyID (448), PartyIDSource (447), and          *\r\n* PartyRole.                                             *\r\n**********************************************************\r\n*/\r\n  PartySubID = 523,\r\n/*\r\n**************************************************\r\n* PartyID value within a nested repeating group. *\r\n* Same values as PartyID (448)                   *\r\n**************************************************\r\n*/\r\n  NestedPartyID = 524,\r\n/*\r\n********************************************************\r\n* PartyIDSource value within a nested repeating group. *\r\n* Same values as PartyIDSource (447)                   *\r\n********************************************************\r\n*/\r\n  NestedPartyIDSource = 525,\r\n/*\r\n***********************************************************\r\n* Assigned by the party which originates the order. Can   *\r\n* be used to provide the ClOrdID (11) used by an exchange *\r\n* or executing system.                                    *\r\n***********************************************************\r\n*/\r\n  SecondaryClOrdID = 526,\r\n/*\r\n**********************************************************\r\n* Assigned by the party which accepts the order. Can be  *\r\n* used to provide the ExecID (17) used by an exchange or *\r\n* executing system.                                      *\r\n**********************************************************\r\n*/\r\n  SecondaryExecID = 527,\r\n/*\r\n**********************************************************\r\n* Designates the capacity of the firm placing the order. *\r\n* (as of FIX 4.3, this field replaced Rule80A (tag 47)   *\r\n* --used in conjunction with OrderRestrictions (529)     *\r\n* field)                                                 *\r\n* (see Volume : \"Glossary\" for value definitions)        *\r\n**********************************************************\r\n*/\r\n  OrderCapacity = 528,\r\n/*\r\n***********************************************************\r\n* Restrictions associated with an order. If more than one *\r\n* restriction is applicable to an order, this field can   *\r\n* contain multiple instructions separated by space.       *\r\n***********************************************************\r\n*/\r\n  OrderRestrictions = 529,\r\n/*\r\n*************************************************\r\n* Specifies scope of Order Mass Cancel Request. *\r\n*************************************************\r\n*/\r\n  MassCancelRequestType = 530,\r\n/*\r\n********************************************************\r\n* Specifies the action taken by counterparty order     *\r\n* handling system as a result of the Order Mass Cancel *\r\n* Request                                              *\r\n********************************************************\r\n*/\r\n  MassCancelResponse = 531,\r\n/*\r\n*************************************************\r\n* Reason Order Mass Cancel Request was rejected *\r\n*************************************************\r\n*/\r\n  MassCancelRejectReason = 532,\r\n/*\r\n*************************************************\r\n* Total number of orders affected by either the *\r\n* OrderMassActionRequest(MsgType=CA) or         *\r\n* OrderMassCancelRequest(MsgType=Q).            *\r\n*************************************************\r\n*/\r\n  TotalAffectedOrders = 533,\r\n/*\r\n*******************************************************\r\n* Number of affected orders in the repeating group of *\r\n* order ids.                                          *\r\n*******************************************************\r\n*/\r\n  NoAffectedOrders = 534,\r\n/*\r\n******************************************************\r\n* OrderID (37) of an order affected by a mass cancel *\r\n* request.                                           *\r\n******************************************************\r\n*/\r\n  AffectedOrderID = 535,\r\n/*\r\n*********************************************************\r\n* SecondaryOrderID (198) of an order affected by a mass *\r\n* cancel request.                                       *\r\n*********************************************************\r\n*/\r\n  AffectedSecondaryOrderID = 536,\r\n/*\r\n***********************************************************\r\n* Identifies the type of quote.                           *\r\n* An indicative quote is used to inform a counterparty of *\r\n* a market. An indicative quote does not result directly  *\r\n* in a trade.                                             *\r\n* A tradeable quote is submitted to a market and will     *\r\n* result directly in a trade against other orders and     *\r\n* quotes in a market.                                     *\r\n* A restricted tradeable quote is submitted to a market   *\r\n* and within a certain restriction (possibly based upon   *\r\n* price or quantity) will automatically trade against     *\r\n* orders. Order that do not comply with restrictions are  *\r\n* sent to the quote issuer who can choose to accept or    *\r\n* decline the order.                                      *\r\n* A counter quote is used in the negotiation model. See   *\r\n* Volume 7 - Product: Fixed Income for example usage.     *\r\n***********************************************************\r\n*/\r\n  QuoteType = 537,\r\n/*\r\n****************************************************\r\n* PartyRole value within a nested repeating group. *\r\n* Same values as PartyRole (452)                   *\r\n****************************************************\r\n*/\r\n  NestedPartyRole = 538,\r\n/*\r\n******************************************************\r\n* Number of NestedPartyID (524), NestedPartyIDSource *\r\n* (525), and NestedPartyRole (538) entries           *\r\n******************************************************\r\n*/\r\n  NoNestedPartyIDs = 539,\r\n/*\r\n**********************************************************\r\n* Total Amount of Accrued Interest for convertible bonds *\r\n* and fixed income                                       *\r\n**********************************************************\r\n*/\r\n  TotalAccruedInterestAmt = 540,\r\n/*\r\n*********************\r\n* Date of maturity. *\r\n*********************\r\n*/\r\n  MaturityDate = 541,\r\n/*\r\n************************************************\r\n* Underlying security's maturity date.         *\r\n* See MaturityDate (541) field for description *\r\n************************************************\r\n*/\r\n  UnderlyingMaturityDate = 542,\r\n/*\r\n**********************************************************\r\n* Values may include BIC for the depository or custodian *\r\n* who maintain ownership records, the ISO country code   *\r\n* for the location of the record, or the value \"ZZ\" to   *\r\n* specify physical ownership of the security (e.g. stock *\r\n* certificate).                                          *\r\n**********************************************************\r\n*/\r\n  InstrRegistry = 543,\r\n/*\r\n***********************************************************\r\n* Identifies whether an order is a margin order or a      *\r\n* non-margin order. This is primarily used when sending   *\r\n* orders to Japanese exchanges to indicate sell margin or *\r\n* buy to cover. The same tag could be assigned also by    *\r\n* buy-side to indicate the intent to sell or buy margin   *\r\n* and the sell-side to accept or reject (base on some     *\r\n* validation criteria) the margin request.                *\r\n***********************************************************\r\n*/\r\n  CashMargin = 544,\r\n/*\r\n*****************************************************\r\n* PartySubID value within a nested repeating group. *\r\n* Same values as PartySubID (523)                   *\r\n*****************************************************\r\n*/\r\n  NestedPartySubID = 545,\r\n/*\r\n**************************************************\r\n* Specifies the market scope of the market data. *\r\n**************************************************\r\n*/\r\n  Scope = 546,\r\n/*\r\n**************************************************\r\n* Defines how a server handles distribution of a *\r\n* truncated book. Defaults to broker option.     *\r\n**************************************************\r\n*/\r\n  MDImplicitDelete = 547,\r\n/*\r\n*********************************************************\r\n* Identifier for a cross order. Must be unique during a *\r\n* given trading day. Recommend that firms use the order *\r\n* date as part of the CrossID for Good Till Cancel (GT) *\r\n* orders.                                               *\r\n*********************************************************\r\n*/\r\n  CrossID = 548,\r\n/*\r\n*********************************************\r\n* Type of cross being submitted to a market *\r\n*********************************************\r\n*/\r\n  CrossType = 549,\r\n/*\r\n***********************************************************\r\n* Indicates if one side or the other of a cross order     *\r\n* should be prioritized.                                  *\r\n* The definition of prioritization is left to the market. *\r\n* In some markets prioritization means which side of the  *\r\n* cross order is applied to the market first. In other    *\r\n* markets - prioritization may mean that the prioritized  *\r\n* side is fully executed (sometimes referred to as the    *\r\n* side being protected).                                  *\r\n***********************************************************\r\n*/\r\n  CrossPrioritization = 550,\r\n/*\r\n***********************************************************\r\n* CrossID of the previous cross order (NOT the initial    *\r\n* cross order of the day) as assigned by the institution, *\r\n* used to identify the previous cross order in Cross      *\r\n* Cancel and Cross Cancel/Replace Requests.               *\r\n***********************************************************\r\n*/\r\n  OrigCrossID = 551,\r\n/*\r\n*********************************************\r\n* Number of Side repeating group instances. *\r\n*********************************************\r\n*/\r\n  NoSides = 552,\r\n/*\r\n***********************\r\n* Userid or username. *\r\n***********************\r\n*/\r\n  Username = 553,\r\n/*\r\n***************************\r\n* Password or passphrase. *\r\n***************************\r\n*/\r\n  Password = 554,\r\n/*\r\n******************************************************\r\n* Number of InstrumentLeg repeating group instances. *\r\n******************************************************\r\n*/\r\n  NoLegs = 555,\r\n/*\r\n********************************************************\r\n* Currency associated with a particular Leg's quantity *\r\n********************************************************\r\n*/\r\n  LegCurrency = 556,\r\n/*\r\n**********************************************************\r\n* Used to support fragmentation. Indicates total number  *\r\n* of security types when multiple Security Type messages *\r\n* are used to return results.                            *\r\n**********************************************************\r\n*/\r\n  TotNoSecurityTypes = 557,\r\n/*\r\n******************************************************\r\n* Number of Security Type repeating group instances. *\r\n******************************************************\r\n*/\r\n  NoSecurityTypes = 558,\r\n/*\r\n*********************************************************\r\n* Identifies the type/criteria of Security List Request *\r\n*********************************************************\r\n*/\r\n  SecurityListRequestType = 559,\r\n/*\r\n******************************************************\r\n* The results returned to a Security Request message *\r\n******************************************************\r\n*/\r\n  SecurityRequestResult = 560,\r\n/*\r\n**************************************\r\n* The trading lot size of a security *\r\n**************************************\r\n*/\r\n  RoundLot = 561,\r\n/*\r\n*********************************************\r\n* The minimum trading volume for a security *\r\n*********************************************\r\n*/\r\n  MinTradeVol = 562,\r\n/*\r\n*********************************************************\r\n* Indicates the method of execution reporting requested *\r\n* by issuer of the order.                               *\r\n*********************************************************\r\n*/\r\n  MultiLegRptTypeReq = 563,\r\n/*\r\n*************************************************\r\n* PositionEffect for leg of a multileg          *\r\n* See PositionEffect (77) field for description *\r\n*************************************************\r\n*/\r\n  LegPositionEffect = 564,\r\n/*\r\n******************************************************\r\n* CoveredOrUncovered for leg of a multileg           *\r\n* See CoveredOrUncovered (203) field for description *\r\n******************************************************\r\n*/\r\n  LegCoveredOrUncovered = 565,\r\n/*\r\n****************************************\r\n* Price for leg of a multileg          *\r\n* See Price (44) field for description *\r\n****************************************\r\n*/\r\n  LegPrice = 566,\r\n/*\r\n*********************************************************\r\n* Indicates the reason a Trading Session Status Request *\r\n* was rejected.                                         *\r\n*********************************************************\r\n*/\r\n  TradSesStatusRejReason = 567,\r\n/*\r\n***********************************\r\n* Trade Capture Report Request ID *\r\n***********************************\r\n*/\r\n  TradeRequestID = 568,\r\n/*\r\n*********************************\r\n* Type of Trade Capture Report. *\r\n*********************************\r\n*/\r\n  TradeRequestType = 569,\r\n/*\r\n********************************************************\r\n* Indicates if the trade capture report was previously *\r\n* reported to the counterparty                         *\r\n********************************************************\r\n*/\r\n  PreviouslyReported = 570,\r\n/*\r\n*********************************************\r\n* Unique identifier of trade capture report *\r\n*********************************************\r\n*/\r\n  TradeReportID = 571,\r\n/*\r\n*****************************************************\r\n* Reference identifier used with CANCEL and REPLACE *\r\n* transaction types.                                *\r\n*****************************************************\r\n*/\r\n  TradeReportRefID = 572,\r\n/*\r\n********************************************************\r\n* The status of this trade with respect to matching or *\r\n* comparison.                                          *\r\n********************************************************\r\n*/\r\n  MatchStatus = 573,\r\n/*\r\n*********************************************************\r\n* The point in the matching process at which this trade *\r\n* was matched.                                          *\r\n*********************************************************\r\n*/\r\n  MatchType = 574,\r\n/*\r\n***********************************************************\r\n* This trade is to be treated as an odd lot               *\r\n* If this field is not specified, the default will be \"N\" *\r\n***********************************************************\r\n*/\r\n  OddLot = 575,\r\n/*\r\n***********************************\r\n* Number of clearing instructions *\r\n***********************************\r\n*/\r\n  NoClearingInstructions = 576,\r\n/*\r\n********************************************************\r\n* Eligibility of this trade for clearing and central   *\r\n* counterparty processing                              *\r\n* values above 4000 are reserved for agreement between *\r\n* parties                                              *\r\n********************************************************\r\n*/\r\n  ClearingInstruction = 577,\r\n/*\r\n***********************************************************\r\n* Type of input device or system from which the trade was *\r\n* entered.                                                *\r\n***********************************************************\r\n*/\r\n  TradeInputSource = 578,\r\n/*\r\n******************************************************\r\n* Specific device number, terminal number or station *\r\n* where trade was entered                            *\r\n******************************************************\r\n*/\r\n  TradeInputDevice = 579,\r\n/*\r\n************************************************\r\n* Number of Date fields provided in date range *\r\n************************************************\r\n*/\r\n  NoDates = 580,\r\n/*\r\n********************************************\r\n* Type of account associated with an order *\r\n********************************************\r\n*/\r\n  AccountType = 581,\r\n/*\r\n***********************************************************\r\n* Capacity of customer placing the order                  *\r\n* Primarily used by futures exchanges to indicate the     *\r\n* CTICode (customer type indicator) as required by the US *\r\n* CFTC (Commodity Futures Trading Commission).            *\r\n***********************************************************\r\n*/\r\n  CustOrderCapacity = 582,\r\n/*\r\n***********************************************************\r\n* Permits order originators to tie together groups of     *\r\n* orders in which trades resulting from orders are        *\r\n* associated for a specific purpose, for example the      *\r\n* calculation of average execution price for a customer   *\r\n* or to associate lists submitted to a broker as waves of *\r\n* a larger program trade.                                 *\r\n***********************************************************\r\n*/\r\n  ClOrdLinkID = 583,\r\n/*\r\n******************************************************\r\n* Value assigned by issuer of Mass Status Request to *\r\n* uniquely identify the request                      *\r\n******************************************************\r\n*/\r\n  MassStatusReqID = 584,\r\n/*\r\n****************************\r\n* Mass Status Request Type *\r\n****************************\r\n*/\r\n  MassStatusReqType = 585,\r\n/*\r\n***********************************************************\r\n* The most recent (or current) modification TransactTime  *\r\n* (tag 60) reported on an Execution Report for the order. *\r\n* The OrigOrdModTime is provided as an optional field on  *\r\n* Order Cancel Request and Order Cancel Replace Requests  *\r\n* to identify that the state of the order has not changed *\r\n* since the request was issued. The use of this approach  *\r\n* is not recommended.                                     *\r\n***********************************************************\r\n*/\r\n  OrigOrdModTime = 586,\r\n/*\r\n*************************************\r\n* Refer to values for SettlType[63] *\r\n*************************************\r\n*/\r\n  LegSettlType = 587,\r\n/*\r\n******************************************\r\n* Refer to description for SettlDate[64] *\r\n******************************************\r\n*/\r\n  LegSettlDate = 588,\r\n/*\r\n*********************************************************\r\n* Indicates whether or not automatic booking can occur. *\r\n*********************************************************\r\n*/\r\n  DayBookingInst = 589,\r\n/*\r\n***********************************************\r\n* Indicates what constitutes a bookable unit. *\r\n***********************************************\r\n*/\r\n  BookingUnit = 590,\r\n/*\r\n******************************************\r\n* Indicates the method of preallocation. *\r\n******************************************\r\n*/\r\n  PreallocMethod = 591,\r\n/*\r\n**************************************************\r\n* Underlying security's CountryOfIssue.          *\r\n* See CountryOfIssue (470) field for description *\r\n**************************************************\r\n*/\r\n  UnderlyingCountryOfIssue = 592,\r\n/*\r\n**********************************************************\r\n* Underlying security's StateOrProvinceOfIssue.          *\r\n* See StateOrProvinceOfIssue (471) field for description *\r\n**********************************************************\r\n*/\r\n  UnderlyingStateOrProvinceOfIssue = 593,\r\n/*\r\n*************************************************\r\n* Underlying security's LocaleOfIssue.          *\r\n* See LocaleOfIssue (472) field for description *\r\n*************************************************\r\n*/\r\n  UnderlyingLocaleOfIssue = 594,\r\n/*\r\n*************************************************\r\n* Underlying security's InstrRegistry.          *\r\n* See InstrRegistry (543) field for description *\r\n*************************************************\r\n*/\r\n  UnderlyingInstrRegistry = 595,\r\n/*\r\n***************************************************\r\n* Multileg instrument's individual leg security's *\r\n* CountryOfIssue.                                 *\r\n* See CountryOfIssue (470) field for description  *\r\n***************************************************\r\n*/\r\n  LegCountryOfIssue = 596,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual leg security's        *\r\n* StateOrProvinceOfIssue.                                *\r\n* See StateOrProvinceOfIssue (471) field for description *\r\n**********************************************************\r\n*/\r\n  LegStateOrProvinceOfIssue = 597,\r\n/*\r\n***************************************************\r\n* Multileg instrument's individual leg security's *\r\n* LocaleOfIssue.                                  *\r\n* See LocaleOfIssue (472) field for description   *\r\n***************************************************\r\n*/\r\n  LegLocaleOfIssue = 598,\r\n/*\r\n***************************************************\r\n* Multileg instrument's individual leg security's *\r\n* InstrRegistry.                                  *\r\n* See InstrRegistry (543) field for description   *\r\n***************************************************\r\n*/\r\n  LegInstrRegistry = 599,\r\n/*\r\n*******************************************************\r\n* Multileg instrument's individual security's Symbol. *\r\n* See Symbol (55) field for description               *\r\n*******************************************************\r\n*/\r\n  LegSymbol = 600,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual security's SymbolSfx. *\r\n* See SymbolSfx (65) field for description               *\r\n**********************************************************\r\n*/\r\n  LegSymbolSfx = 601,\r\n/*\r\n***********************************************************\r\n* Multileg instrument's individual security's SecurityID. *\r\n* See SecurityID (48) field for description               *\r\n***********************************************************\r\n*/\r\n  LegSecurityID = 602,\r\n/*\r\n***************************************************\r\n* Multileg instrument's individual security's     *\r\n* SecurityIDSource.                               *\r\n* See SecurityIDSource (22) field for description *\r\n***************************************************\r\n*/\r\n  LegSecurityIDSource = 603,\r\n/*\r\n***************************************************\r\n* Multileg instrument's individual security's     *\r\n* NoSecurityAltID.                                *\r\n* See NoSecurityAltID (454) field for description *\r\n***************************************************\r\n*/\r\n  NoLegSecurityAltID = 604,\r\n/*\r\n*************************************************\r\n* Multileg instrument's individual security's   *\r\n* SecurityAltID.                                *\r\n* See SecurityAltID (455) field for description *\r\n*************************************************\r\n*/\r\n  LegSecurityAltID = 605,\r\n/*\r\n*******************************************************\r\n* Multileg instrument's individual security's         *\r\n* SecurityAltIDSource.                                *\r\n* See SecurityAltIDSource (456) field for description *\r\n*******************************************************\r\n*/\r\n  LegSecurityAltIDSource = 606,\r\n/*\r\n********************************************************\r\n* Multileg instrument's individual security's Product. *\r\n* See Product (460) field for description              *\r\n********************************************************\r\n*/\r\n  LegProduct = 607,\r\n/*\r\n********************************************************\r\n* Multileg instrument's individual security's CFICode. *\r\n* See CFICode (461) field for description              *\r\n********************************************************\r\n*/\r\n  LegCFICode = 608,\r\n/*\r\n********************************************\r\n* Refer to definition of SecurityType(167) *\r\n********************************************\r\n*/\r\n  LegSecurityType = 609,\r\n/*\r\n*****************************************************\r\n* Multileg instrument's individual security's       *\r\n* MaturityMonthYear.                                *\r\n* See MaturityMonthYear (200) field for description *\r\n*****************************************************\r\n*/\r\n  LegMaturityMonthYear = 610,\r\n/*\r\n***********************************************\r\n* Multileg instrument's individual security's *\r\n* MaturityDate.                               *\r\n* See MaturityDate (54) field for description *\r\n***********************************************\r\n*/\r\n  LegMaturityDate = 611,\r\n/*\r\n***********************************************\r\n* Multileg instrument's individual security's *\r\n* StrikePrice.                                *\r\n* See StrikePrice (202) field for description *\r\n***********************************************\r\n*/\r\n  LegStrikePrice = 612,\r\n/*\r\n************************************************\r\n* Multileg instrument's individual security's  *\r\n* OptAttribute.                                *\r\n* See OptAttribute (206) field for description *\r\n************************************************\r\n*/\r\n  LegOptAttribute = 613,\r\n/*\r\n*****************************************************\r\n* Multileg instrument's individual security's       *\r\n* ContractMultiplier.                               *\r\n* See ContractMultiplier (23) field for description *\r\n*****************************************************\r\n*/\r\n  LegContractMultiplier = 614,\r\n/*\r\n***********************************************************\r\n* Multileg instrument's individual security's CouponRate. *\r\n* See CouponRate (223) field for description              *\r\n***********************************************************\r\n*/\r\n  LegCouponRate = 615,\r\n/*\r\n****************************************************\r\n* Multileg instrument's individual security's      *\r\n* SecurityExchange.                                *\r\n* See SecurityExchange (207) field for description *\r\n****************************************************\r\n*/\r\n  LegSecurityExchange = 616,\r\n/*\r\n*******************************************************\r\n* Multileg instrument's individual security's Issuer. *\r\n* See Issuer (106) field for description              *\r\n*******************************************************\r\n*/\r\n  LegIssuer = 617,\r\n/*\r\n****************************************************\r\n* Multileg instrument's individual security's      *\r\n* EncodedIssuerLen.                                *\r\n* See EncodedIssuerLen (348) field for description *\r\n****************************************************\r\n*/\r\n  EncodedLegIssuerLen = 618,\r\n/*\r\n*************************************************\r\n* Multileg instrument's individual security's   *\r\n* EncodedIssuer.                                *\r\n* See EncodedIssuer (349) field for description *\r\n*************************************************\r\n*/\r\n  EncodedLegIssuer = 619,\r\n/*\r\n**************************************************\r\n* Description of a leg of a multileg instrument. *\r\n* See SecurityDesc(107).                         *\r\n**************************************************\r\n*/\r\n  LegSecurityDesc = 620,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual security's            *\r\n* EncodedSecurityDescLen.                                *\r\n* See EncodedSecurityDescLen (350) field for description *\r\n**********************************************************\r\n*/\r\n  EncodedLegSecurityDescLen = 621,\r\n/*\r\n******************************************************\r\n* Multileg instrument's individual security's        *\r\n* EncodedSecurityDesc.                               *\r\n* See EncodedSecurityDesc (35) field for description *\r\n******************************************************\r\n*/\r\n  EncodedLegSecurityDesc = 622,\r\n/*\r\n**********************************************************\r\n* The ratio of quantity for this individual leg relative *\r\n* to the entire multileg security.                       *\r\n**********************************************************\r\n*/\r\n  LegRatioQty = 623,\r\n/*\r\n********************************************************\r\n* The side of this individual leg (multileg security). *\r\n* See Side (54) field for description and values       *\r\n********************************************************\r\n*/\r\n  LegSide = 624,\r\n/*\r\n**********************************************************\r\n* Optional market assigned sub identifier for a trading  *\r\n* phase within a trading session. Usage is determined by *\r\n* market or counterparties. Used by US based futures     *\r\n* markets to identify exchange specific execution time   *\r\n* bracket codes as required by US market regulations.    *\r\n* Bilaterally agreed values of data type \"String\" that   *\r\n* start with a character can be used for backward        *\r\n* compatibility                                          *\r\n**********************************************************\r\n*/\r\n  TradingSessionSubID = 625,\r\n/*\r\n***********************************************************\r\n* Describes the specific type or purpose of an Allocation *\r\n* message (i.e. \"Buyside Calculated\")                     *\r\n* (see Volume : \"Glossary\" for value definitions)         *\r\n* *** SOME VALUES HAVE BEEN REPLACED - See \"Replaced      *\r\n* Features and Supported Approach\" ***                    *\r\n***********************************************************\r\n*/\r\n  AllocType = 626,\r\n/*\r\n***************************************************\r\n* Number of HopCompID entries in repeating group. *\r\n***************************************************\r\n*/\r\n  NoHops = 627,\r\n/*\r\n***********************************************************\r\n* Assigned value used to identify the third party firm    *\r\n* which delivered a specific message either from the firm *\r\n* which originated the message or from another third      *\r\n* party (if multiple \"hops\" are performed). It is         *\r\n* recommended that this value be the SenderCompID (49) of *\r\n* the third party.                                        *\r\n* Applicable when messages are                            *\r\n* communicated/re-distributed via third parties which     *\r\n* function as service bureaus or \"hubs\". Only applicable  *\r\n* if OnBehalfOfCompID (115) is being used.                *\r\n***********************************************************\r\n*/\r\n  HopCompID = 628,\r\n/*\r\n**********************************************************\r\n* Time that HopCompID (628) sent the message. It is      *\r\n* recommended that this value be the SendingTime (52) of *\r\n* the message sent by the third party.                   *\r\n* Applicable when messages are                           *\r\n* communicated/re-distributed via third parties which    *\r\n* function as service bureaus or \"hubs\". Only applicable *\r\n* if OnBehalfOfCompID (115) is being used.               *\r\n**********************************************************\r\n*/\r\n  HopSendingTime = 629,\r\n/*\r\n**********************************************************\r\n* Reference identifier assigned by HopCompID (628)       *\r\n* associated with the message sent. It is recommended    *\r\n* that this value be the MsgSeqNum (34) of the message   *\r\n* sent by the third party.                               *\r\n* Applicable when messages are                           *\r\n* communicated/re-distributed via third parties which    *\r\n* function as service bureaus or \"hubs\". Only applicable *\r\n* if OnBehalfOfCompID (115) is being used.               *\r\n**********************************************************\r\n*/\r\n  HopRefID = 630,\r\n/*\r\n******************\r\n* Mid price/rate *\r\n******************\r\n*/\r\n  MidPx = 631,\r\n/*\r\n*************\r\n* Bid yield *\r\n*************\r\n*/\r\n  BidYield = 632,\r\n/*\r\n*************\r\n* Mid yield *\r\n*************\r\n*/\r\n  MidYield = 633,\r\n/*\r\n***************\r\n* Offer yield *\r\n***************\r\n*/\r\n  OfferYield = 634,\r\n/*\r\n********************************************************\r\n* Indicates type of fee being assessed of the customer *\r\n* for trade executions at an exchange. Applicable for  *\r\n* futures markets only at this time.                   *\r\n* (Values source CBOT, CME, NYBOT, and NYMEX):         *\r\n********************************************************\r\n*/\r\n  ClearingFeeIndicator = 635,\r\n/*\r\n***********************************************************\r\n* Indicates if the order is currently being worked.       *\r\n* Applicable only for OrdStatus = \"New\". For open outcry  *\r\n* markets this indicates that the order is being worked   *\r\n* in the crowd. For electronic markets it indicates that  *\r\n* the order has transitioned from a contingent order to a *\r\n* market order.                                           *\r\n***********************************************************\r\n*/\r\n  WorkingIndicator = 636,\r\n/*\r\n****************************************************\r\n* Execution price assigned to a leg of a multileg  *\r\n* instrument.                                      *\r\n* See LastPx (31) field for description and values *\r\n****************************************************\r\n*/\r\n  LegLastPx = 637,\r\n/*\r\n********************************************************\r\n* Indicates if a Cancel/Replace has caused an order to *\r\n* lose book priority.                                  *\r\n********************************************************\r\n*/\r\n  PriorityIndicator = 638,\r\n/*\r\n********************************\r\n* Amount of price improvement. *\r\n********************************\r\n*/\r\n  PriceImprovement = 639,\r\n/*\r\n*************************************************\r\n* Price of the future part of a F/X swap order. *\r\n* See Price (44) for description.               *\r\n*************************************************\r\n*/\r\n  Price2 = 640,\r\n/*\r\n*******************************************************\r\n* F/X forward points of the future part of a F/X swap *\r\n* order added to LastSpotRate (94). May be a negative *\r\n* value.                                              *\r\n*******************************************************\r\n*/\r\n  LastForwardPoints2 = 641,\r\n/*\r\n***********************************************************\r\n* Bid F/X forward points of the future portion of a F/X   *\r\n* swap quote added to spot rate. May be a negative value. *\r\n***********************************************************\r\n*/\r\n  BidForwardPoints2 = 642,\r\n/*\r\n***********************************************************\r\n* Offer F/X forward points of the future portion of a F/X *\r\n* swap quote added to spot rate. May be a negative value. *\r\n***********************************************************\r\n*/\r\n  OfferForwardPoints2 = 643,\r\n/*\r\n*****************************************************\r\n* RFQ Request ID - used to identify an RFQ Request. *\r\n*****************************************************\r\n*/\r\n  RFQReqID = 644,\r\n/*\r\n*********************************************\r\n* Used to indicate the best bid in a market *\r\n*********************************************\r\n*/\r\n  MktBidPx = 645,\r\n/*\r\n***********************************************\r\n* Used to indicate the best offer in a market *\r\n***********************************************\r\n*/\r\n  MktOfferPx = 646,\r\n/*\r\n***********************************************************\r\n* Used to indicate a minimum quantity for a bid. If this  *\r\n* field is used the BidSize (134) field is interpreted as *\r\n* the maximum bid size                                    *\r\n***********************************************************\r\n*/\r\n  MinBidSize = 647,\r\n/*\r\n********************************************************\r\n* Used to indicate a minimum quantity for an offer. If *\r\n* this field is used the OfferSize (135) field is      *\r\n* interpreted as the maximum offer size.               *\r\n********************************************************\r\n*/\r\n  MinOfferSize = 648,\r\n/*\r\n***********************************************\r\n* Unique identifier for Quote Status Request. *\r\n***********************************************\r\n*/\r\n  QuoteStatusReqID = 649,\r\n/*\r\n********************************************************\r\n* Indicates that this message is to serve as the final *\r\n* and legal confirmation.                              *\r\n********************************************************\r\n*/\r\n  LegalConfirm = 650,\r\n/*\r\n*********************************************************\r\n* The calculated or traded price for the underlying     *\r\n* instrument that corresponds to a derivative. Used for *\r\n* transactions that include the cash instrument and the *\r\n* derivative.                                           *\r\n*********************************************************\r\n*/\r\n  UnderlyingLastPx = 651,\r\n/*\r\n*********************************************************\r\n* The calculated or traded quantity for the underlying  *\r\n* instrument that corresponds to a derivative. Used for *\r\n* transactions that include the cash instrument and the *\r\n* derivative.                                           *\r\n*********************************************************\r\n*/\r\n  UnderlyingLastQty = 652,\r\n/*\r\n****************************************\r\n* Unique indicator for a specific leg. *\r\n****************************************\r\n*/\r\n  LegRefID = 654,\r\n/*\r\n***********************************************\r\n* Unique indicator for a specific leg for the *\r\n* ContraBroker (375).                         *\r\n***********************************************\r\n*/\r\n  ContraLegRefID = 655,\r\n/*\r\n*************************************************\r\n* Foreign exchange rate used to compute the bid *\r\n* \"SettlCurrAmt\" (119) from Currency (15) to    *\r\n* SettlCurrency (120)                           *\r\n*************************************************\r\n*/\r\n  SettlCurrBidFxRate = 656,\r\n/*\r\n***************************************************\r\n* Foreign exchange rate used to compute the offer *\r\n* \"SettlCurrAmt\" (119) from Currency (15) to      *\r\n* SettlCurrency (120)                             *\r\n***************************************************\r\n*/\r\n  SettlCurrOfferFxRate = 657,\r\n/*\r\n******************************\r\n* Reason Quote was rejected: *\r\n******************************\r\n*/\r\n  QuoteRequestRejectReason = 658,\r\n/*\r\n*******************************************************\r\n* ID within repeating group of sides which is used to *\r\n* represent this transaction for compliance purposes  *\r\n* (e.g. OATS reporting).                              *\r\n*******************************************************\r\n*/\r\n  SideComplianceID = 659,\r\n/*\r\n*********************************************************\r\n* Used to identify the source of the Account (1) code.  *\r\n* This is especially useful if the account is a new     *\r\n* account that the Respondent may not have setup yet in *\r\n* their system.                                         *\r\n*********************************************************\r\n*/\r\n  AcctIDSource = 660,\r\n/*\r\n********************************************************\r\n* Used to identify the source of the AllocAccount (79) *\r\n* code.                                                *\r\n* See AcctIDSource (660) for valid values.             *\r\n********************************************************\r\n*/\r\n  AllocAcctIDSource = 661,\r\n/*\r\n*****************************************\r\n* Specifies the price of the benchmark. *\r\n*****************************************\r\n*/\r\n  BenchmarkPrice = 662,\r\n/*\r\n********************************************\r\n* Identifies type of BenchmarkPrice (662). *\r\n* See PriceType (423) for valid values.    *\r\n********************************************\r\n*/\r\n  BenchmarkPriceType = 663,\r\n/*\r\n**************************************\r\n* Message reference for Confirmation *\r\n**************************************\r\n*/\r\n  ConfirmID = 664,\r\n/*\r\n**********************************************\r\n* Identifies the status of the Confirmation. *\r\n**********************************************\r\n*/\r\n  ConfirmStatus = 665,\r\n/*\r\n*************************************************\r\n* Identifies the Confirmation transaction type. *\r\n*************************************************\r\n*/\r\n  ConfirmTransType = 666,\r\n/*\r\n***********************************************************\r\n* Specifies when the contract (i.e. MBS/TBA) will settle. *\r\n***********************************************************\r\n*/\r\n  ContractSettlMonth = 667,\r\n/*\r\n************************************\r\n* Identifies the form of delivery. *\r\n************************************\r\n*/\r\n  DeliveryForm = 668,\r\n/*\r\n***********************************************************\r\n* Last price expressed in percent-of-par. Conditionally   *\r\n* required for Fixed Income trades when LastPx (31) is    *\r\n* expressed in Yield, Spread, Discount or any other type. *\r\n* Usage: Execution Report and Allocation Report repeating *\r\n* executions block (from sellside).                       *\r\n***********************************************************\r\n*/\r\n  LastParPx = 669,\r\n/*\r\n*************************************\r\n* Number of Allocations for the leg *\r\n*************************************\r\n*/\r\n  NoLegAllocs = 670,\r\n/*\r\n***********************************************************\r\n* Allocation Account for the leg                          *\r\n* See AllocAccount (79) for description and valid values. *\r\n***********************************************************\r\n*/\r\n  LegAllocAccount = 671,\r\n/*\r\n*********************************************************\r\n* Reference for the individual allocation ticket        *\r\n* See IndividualAllocID (467) for description and valid *\r\n* values.                                               *\r\n*********************************************************\r\n*/\r\n  LegIndividualAllocID = 672,\r\n/*\r\n*******************************************************\r\n* Leg allocation quantity.                            *\r\n* See AllocQty (80) for description and valid values. *\r\n*******************************************************\r\n*/\r\n  LegAllocQty = 673,\r\n/*\r\n*********************************************************\r\n* The source of the LegAllocAccount (671)               *\r\n* See AllocAcctIDSource (661) for description and valid *\r\n* values.                                               *\r\n*********************************************************\r\n*/\r\n  LegAllocAcctIDSource = 674,\r\n/*\r\n***********************************************************\r\n* Identifies settlement currency for the Leg.             *\r\n* See SettlCurrency (20) for description and valid values *\r\n***********************************************************\r\n*/\r\n  LegSettlCurrency = 675,\r\n/*\r\n********************************************************\r\n* LegBenchmarkPrice (679) currency                     *\r\n* See BenchmarkCurveCurrency (220) for description and *\r\n* valid values.                                        *\r\n********************************************************\r\n*/\r\n  LegBenchmarkCurveCurrency = 676,\r\n/*\r\n*********************************************************\r\n* Name of the Leg Benchmark Curve.                      *\r\n* See BenchmarkCurveName (22) for description and valid *\r\n* values.                                               *\r\n*********************************************************\r\n*/\r\n  LegBenchmarkCurveName = 677,\r\n/*\r\n***********************************************************\r\n* Identifies the point on the Leg Benchmark Curve.        *\r\n* See BenchmarkCurvePoint (222) for description and valid *\r\n* values.                                                 *\r\n***********************************************************\r\n*/\r\n  LegBenchmarkCurvePoint = 678,\r\n/*\r\n*********************************************************\r\n* Used to identify the price of the benchmark security. *\r\n* See BenchmarkPrice (662) for description and valid    *\r\n* values.                                               *\r\n*********************************************************\r\n*/\r\n  LegBenchmarkPrice = 679,\r\n/*\r\n**********************************************************\r\n* The price type of the LegBenchmarkPrice.               *\r\n* See BenchmarkPriceType (663) for description and valid *\r\n* values.                                                *\r\n**********************************************************\r\n*/\r\n  LegBenchmarkPriceType = 680,\r\n/*\r\n****************************************************\r\n* Bid price of this leg.                           *\r\n* See BidPx (32) for description and valid values. *\r\n****************************************************\r\n*/\r\n  LegBidPx = 681,\r\n/*\r\n****************************************************\r\n* Leg-specific IOI quantity.                       *\r\n* See IOIQty (27) for description and valid values *\r\n****************************************************\r\n*/\r\n  LegIOIQty = 682,\r\n/*\r\n*************************************\r\n* Number of leg stipulation entries *\r\n*************************************\r\n*/\r\n  NoLegStipulations = 683,\r\n/*\r\n******************************************************\r\n* Offer price of this leg.                           *\r\n* See OfferPx (133) for description and valid values *\r\n******************************************************\r\n*/\r\n  LegOfferPx = 684,\r\n/*\r\n******************************************************\r\n* Quantity ordered of this leg.                      *\r\n* See OrderQty (38) for description and valid values *\r\n******************************************************\r\n*/\r\n  LegOrderQty = 685,\r\n/*\r\n**********************************************************\r\n* The price type of the LegBidPx (681) and/or LegOfferPx *\r\n* (684).                                                 *\r\n* See PriceType (423) for description and valid values   *\r\n**********************************************************\r\n*/\r\n  LegPriceType = 686,\r\n/*\r\n******************************************************\r\n* Quantity of this leg, e.g. in Quote dialog.        *\r\n* See Quantity (53) for description and valid values *\r\n******************************************************\r\n*/\r\n  LegQty = 687,\r\n/*\r\n*******************************************************\r\n* For Fixed Income, type of Stipulation for this leg. *\r\n* See StipulationType (233) for description and valid *\r\n* values                                              *\r\n*******************************************************\r\n*/\r\n  LegStipulationType = 688,\r\n/*\r\n********************************************************\r\n* For Fixed Income, value of stipulation.              *\r\n* See StipulationValue (234) for description and valid *\r\n* values                                               *\r\n********************************************************\r\n*/\r\n  LegStipulationValue = 689,\r\n/*\r\n*******************************************************\r\n* For Fixed Income, used instead of LegQty (687) or   *\r\n* LegOrderQty (685) to requests the respondent to     *\r\n* calculate the quantity based on the quantity on the *\r\n* opposite side of the swap.                          *\r\n*******************************************************\r\n*/\r\n  LegSwapType = 690,\r\n/*\r\n************************************************\r\n* For Fixed Income, identifies MBS / ABS pool. *\r\n************************************************\r\n*/\r\n  Pool = 691,\r\n/*\r\n**********************************************************\r\n* Code to represent price type requested in Quote.       *\r\n* If the Quote Request is for a Swap values 1-8 apply to *\r\n* all legs.                                              *\r\n**********************************************************\r\n*/\r\n  QuotePriceType = 692,\r\n/*\r\n****************************************\r\n* Message reference for Quote Response *\r\n****************************************\r\n*/\r\n  QuoteRespID = 693,\r\n/*\r\n******************************************\r\n* Identifies the type of Quote Response. *\r\n******************************************\r\n*/\r\n  QuoteRespType = 694,\r\n/*\r\n****************************************************\r\n* Code to qualify Quote use                        *\r\n* See IOIQualifier (104) for description and valid *\r\n* values.                                          *\r\n****************************************************\r\n*/\r\n  QuoteQualifier = 695,\r\n/*\r\n***********************************************************\r\n* Date to which the yield has been calculated (i.e.       *\r\n* maturity, par call or current call, pre-refunded date). *\r\n***********************************************************\r\n*/\r\n  YieldRedemptionDate = 696,\r\n/*\r\n*************************************************\r\n* Price to which the yield has been calculated. *\r\n*************************************************\r\n*/\r\n  YieldRedemptionPrice = 697,\r\n/*\r\n*********************************************************\r\n* The price type of the YieldRedemptionPrice (697)      *\r\n* See PriceType (423) for description and valid values. *\r\n*********************************************************\r\n*/\r\n  YieldRedemptionPriceType = 698,\r\n/*\r\n***********************************************************\r\n* The identifier of the benchmark security, e.g. Treasury *\r\n* against Corporate bond.                                 *\r\n* See SecurityID (tag 48) for description and valid       *\r\n* values.                                                 *\r\n***********************************************************\r\n*/\r\n  BenchmarkSecurityID = 699,\r\n/*\r\n*****************************************************\r\n* Indicates a trade that reverses a previous trade. *\r\n*****************************************************\r\n*/\r\n  ReversalIndicator = 700,\r\n/*\r\n*****************************************************\r\n* Include as needed to clarify yield irregularities *\r\n* associated with date, e.g. when it falls on a     *\r\n* non-business day.                                 *\r\n*****************************************************\r\n*/\r\n  YieldCalcDate = 701,\r\n/*\r\n*******************************\r\n* Number of start entries. *\r\n*******************************\r\n*/\r\n  NoPositions = 702,\r\n/*\r\n*******************************************************\r\n* Used to identify the type of quantity that is being *\r\n* returned.                                           *\r\n*******************************************************\r\n*/\r\n  PosType = 703,\r\n/*\r\n*****************\r\n* Long Quantity *\r\n*****************\r\n*/\r\n  LongQty = 704,\r\n/*\r\n******************\r\n* Short Quantity *\r\n******************\r\n*/\r\n  ShortQty = 705,\r\n/*\r\n****************************\r\n* Status of this start. *\r\n****************************\r\n*/\r\n  PosQtyStatus = 706,\r\n/*\r\n***************************\r\n* Type of Position amount *\r\n***************************\r\n*/\r\n  PosAmtType = 707,\r\n/*\r\n*******************\r\n* Position amount *\r\n*******************\r\n*/\r\n  PosAmt = 708,\r\n/*\r\n***********************************************\r\n* Identifies the type of start transaction *\r\n***********************************************\r\n*/\r\n  PosTransType = 709,\r\n/*\r\n**********************************************************\r\n* Unique identifier for the start maintenance request *\r\n* as assigned by the submitter                           *\r\n**********************************************************\r\n*/\r\n  PosReqID = 710,\r\n/*\r\n********************************************************\r\n* Number of underlying legs that make up the security. *\r\n********************************************************\r\n*/\r\n  NoUnderlyings = 711,\r\n/*\r\n***************************************\r\n* Maintenance Action to be performed. *\r\n***************************************\r\n*/\r\n  PosMaintAction = 712,\r\n/*\r\n***********************************************************\r\n* Reference to the PosReqID (710) of a previous           *\r\n* maintenance request that is being replaced or canceled. *\r\n***********************************************************\r\n*/\r\n  OrigPosReqRefID = 713,\r\n/*\r\n*********************************************************\r\n* Reference to a PosMaintRptID (721) from a previous    *\r\n* Position Maintenance Report that is being replaced or *\r\n* canceled.                                             *\r\n*********************************************************\r\n*/\r\n  PosMaintRptRefID = 714,\r\n/*\r\n****************************************************\r\n* The \"Clearing Business Date\" referred to by this *\r\n* maintenance request.                             *\r\n****************************************************\r\n*/\r\n  ClearingBusinessDate = 715,\r\n/*\r\n********************************************\r\n* Identifies a specific settlement session *\r\n********************************************\r\n*/\r\n  SettlSessID = 716,\r\n/*\r\n************************************************\r\n* SubID value associated with SettlSessID(716) *\r\n************************************************\r\n*/\r\n  SettlSessSubID = 717,\r\n/*\r\n**********************************************************\r\n* Type of adjustment to be applied, used for PCS and PAJ *\r\n**********************************************************\r\n*/\r\n  AdjustmentType = 718,\r\n/*\r\n****************************************************\r\n* Used to indicate when a contrary instruction for *\r\n* exercise or abandonment is being submitted       *\r\n****************************************************\r\n*/\r\n  ContraryInstructionIndicator = 719,\r\n/*\r\n*****************************************************\r\n* Indicates if requesting a rollover of prior day's *\r\n* spread submissions.                               *\r\n*****************************************************\r\n*/\r\n  PriorSpreadIndicator = 720,\r\n/*\r\n**********************************************\r\n* Unique identifier for this start report *\r\n**********************************************\r\n*/\r\n  PosMaintRptID = 721,\r\n/*\r\n******************************************\r\n* Status of Position Maintenance Request *\r\n******************************************\r\n*/\r\n  PosMaintStatus = 722,\r\n/*\r\n********************************************************\r\n* Result of Position Maintenance Request.              *\r\n* 4000+ Reserved and available for bi-laterally agreed *\r\n* upon user-defined values                             *\r\n********************************************************\r\n*/\r\n  PosMaintResult = 723,\r\n/*\r\n******************************************************\r\n* Used to specify the type of start request being *\r\n* made.                                              *\r\n******************************************************\r\n*/\r\n  PosReqType = 724,\r\n/*\r\n********************************************************\r\n* Identifies how the response to the request should be *\r\n* transmitted.                                         *\r\n* Details specified via ResponseDestination (726).     *\r\n********************************************************\r\n*/\r\n  ResponseTransportType = 725,\r\n/*\r\n***********************************************************\r\n* URI (Uniform Resource Identifier) for details) or other *\r\n* pre-arranged value. Used in conjunction with            *\r\n* ResponseTransportType (725) value of Out-of-Band to     *\r\n* identify the out-of-band destination.                   *\r\n* See \"Appendix 6-B FIX Fields Based Upon Other           *\r\n* Standards\"                                              *\r\n***********************************************************\r\n*/\r\n  ResponseDestination = 726,\r\n/*\r\n****************************************************\r\n* Total number of Position Reports being returned. *\r\n****************************************************\r\n*/\r\n  TotalNumPosReports = 727,\r\n/*\r\n********************************************************\r\n* Result of Request for Position                       *\r\n* 4000+ Reserved and available for bi-laterally agreed *\r\n* upon user-defined values                             *\r\n********************************************************\r\n*/\r\n  PosReqResult = 728,\r\n/*\r\n***********************************\r\n* Status of Request for Positions *\r\n***********************************\r\n*/\r\n  PosReqStatus = 729,\r\n/*\r\n********************\r\n* Settlement price *\r\n********************\r\n*/\r\n  SettlPrice = 730,\r\n/*\r\n****************************\r\n* Type of settlement price *\r\n****************************\r\n*/\r\n  SettlPriceType = 731,\r\n/*\r\n**********************************************\r\n* Underlying security's SettlPrice.          *\r\n* See SettlPrice (730) field for description *\r\n**********************************************\r\n*/\r\n  UnderlyingSettlPrice = 732,\r\n/*\r\n**************************************************\r\n* Underlying security's SettlPriceType.          *\r\n* See SettlPriceType (731) field for description *\r\n**************************************************\r\n*/\r\n  UnderlyingSettlPriceType = 733,\r\n/*\r\n*****************************\r\n* Previous settlement price *\r\n*****************************\r\n*/\r\n  PriorSettlPrice = 734,\r\n/*\r\n********************************************************\r\n* Number of repeating groups of QuoteQualifiers (695). *\r\n********************************************************\r\n*/\r\n  NoQuoteQualifiers = 735,\r\n/*\r\n***********************************************************\r\n* Currency code of settlement denomination for a specific *\r\n* AllocAccount (79).                                      *\r\n***********************************************************\r\n*/\r\n  AllocSettlCurrency = 736,\r\n/*\r\n********************************************************\r\n* Total amount due expressed in settlement currency    *\r\n* (includes the effect of the forex transaction) for a *\r\n* specific AllocAccount (79).                          *\r\n********************************************************\r\n*/\r\n  AllocSettlCurrAmt = 737,\r\n/*\r\n***************************************************\r\n* Amount of interest (i.e. lump-sum) at maturity. *\r\n***************************************************\r\n*/\r\n  InterestAtMaturity = 738,\r\n/*\r\n***********************************************************\r\n* The effective date of a new securities issue determined *\r\n* by its underwriters. Often but not always the same as   *\r\n* the Issue Date and the Interest Accrual Date            *\r\n***********************************************************\r\n*/\r\n  LegDatedDate = 739,\r\n/*\r\n*****************************************************\r\n* For Fixed Income, identifies MBS / ABS pool for a *\r\n* specific leg of a multi-leg instrument.           *\r\n* See Pool (691) for description and valid values.  *\r\n*****************************************************\r\n*/\r\n  LegPool = 740,\r\n/*\r\n*********************************************************\r\n* Amount of interest (i.e. lump-sum) at maturity at the *\r\n* account-level.                                        *\r\n*********************************************************\r\n*/\r\n  AllocInterestAtMaturity = 741,\r\n/*\r\n********************************************************\r\n* Amount of Accrued Interest for convertible bonds and *\r\n* fixed income at the allocation-level.                *\r\n********************************************************\r\n*/\r\n  AllocAccruedInterestAmt = 742,\r\n/*\r\n*********************\r\n* Date of delivery. *\r\n*********************\r\n*/\r\n  DeliveryDate = 743,\r\n/*\r\n******************************************************\r\n* Method by which short positions are assigned to an *\r\n* exercise notice during exercise and assignment     *\r\n* processing                                         *\r\n******************************************************\r\n*/\r\n  AssignmentMethod = 744,\r\n/*\r\n*****************************************************\r\n* Quantity Increment used in performing assignment. *\r\n*****************************************************\r\n*/\r\n  AssignmentUnit = 745,\r\n/*\r\n***************************************************\r\n* Open interest that was eligible for assignment. *\r\n***************************************************\r\n*/\r\n  OpenInterest = 746,\r\n/*\r\n*****************************************************\r\n* Exercise Method used to in performing assignment. *\r\n*****************************************************\r\n*/\r\n  ExerciseMethod = 747,\r\n/*\r\n*******************************************\r\n* Total number of trade reports returned. *\r\n*******************************************\r\n*/\r\n  TotNumTradeReports = 748,\r\n/*\r\n***************************\r\n* Result of Trade Request *\r\n***************************\r\n*/\r\n  TradeRequestResult = 749,\r\n/*\r\n****************************\r\n* Status of Trade Request. *\r\n****************************\r\n*/\r\n  TradeRequestStatus = 750,\r\n/*\r\n*******************************************************\r\n* Reason Trade Capture Request was rejected.          *\r\n* 100+ Reserved and available for bi-laterally agreed *\r\n* upon user-defined values                            *\r\n*******************************************************\r\n*/\r\n  TradeReportRejectReason = 751,\r\n/*\r\n********************************************************\r\n* Used to indicate if the side being reported on Trade *\r\n* Capture Report represents a leg of a multileg        *\r\n* instrument or a single security.                     *\r\n********************************************************\r\n*/\r\n  SideMultiLegReportingType = 752,\r\n/*\r\n**************************************\r\n* Number of start amount entries. *\r\n**************************************\r\n*/\r\n  NoPosAmt = 753,\r\n/*\r\n*********************************************************\r\n* Identifies whether or not an allocation has been      *\r\n* automatically accepted on behalf of the Carry Firm by *\r\n* the Clearing House.                                   *\r\n*********************************************************\r\n*/\r\n  AutoAcceptIndicator = 754,\r\n/*\r\n****************************************************\r\n* Unique identifier for Allocation Report message. *\r\n****************************************************\r\n*/\r\n  AllocReportID = 755,\r\n/*\r\n********************************************************\r\n* Number of Nested2PartyID (757), Nested2PartyIDSource *\r\n* (758), and Nested2PartyRole (759) entries            *\r\n********************************************************\r\n*/\r\n  NoNested2PartyIDs = 756,\r\n/*\r\n***************************************************\r\n* PartyID value within a \"second instance\" Nested *\r\n* repeating group.                                *\r\n* Same values as PartyID (448)                    *\r\n***************************************************\r\n*/\r\n  Nested2PartyID = 757,\r\n/*\r\n*********************************************************\r\n* PartyIDSource value within a \"second instance\" Nested *\r\n* repeating group.                                      *\r\n* Same values as PartyIDSource (447)                    *\r\n*********************************************************\r\n*/\r\n  Nested2PartyIDSource = 758,\r\n/*\r\n*****************************************************\r\n* PartyRole value within a \"second instance\" Nested *\r\n* repeating group.                                  *\r\n* Same values as PartyRole (452)                    *\r\n*****************************************************\r\n*/\r\n  Nested2PartyRole = 759,\r\n/*\r\n******************************************************\r\n* PartySubID value within a \"second instance\" Nested *\r\n* repeating group.                                   *\r\n* Same values as PartySubID (523)                    *\r\n******************************************************\r\n*/\r\n  Nested2PartySubID = 760,\r\n/*\r\n*********************************************************\r\n* Identifies class or source of the BenchmarkSecurityID *\r\n* (699) value. Required if BenchmarkSecurityID is       *\r\n* specified.                                            *\r\n* Same values as the SecurityIDSource (22) field        *\r\n*********************************************************\r\n*/\r\n  BenchmarkSecurityIDSource = 761,\r\n/*\r\n***********************************************************\r\n* Sub-type qualification/identification of the            *\r\n* SecurityType. As an example for                         *\r\n* SecurityType(167)=\"REPO\", the SecuritySubType=\"General  *\r\n* Collateral\" can be used to further specify the type of  *\r\n* REPO.                                                   *\r\n* If SecuritySubType is used then SecurityType is         *\r\n* required.                                               *\r\n* For SecurityType=\"MLEG\" a name of the option or futures *\r\n* strategy name can be specified, such as \"Calendar\",     *\r\n* \"Vertical\", \"Butterfly\".                                *\r\n***********************************************************\r\n*/\r\n  SecuritySubType = 762,\r\n/*\r\n***************************************************\r\n* Underlying security's SecuritySubType.          *\r\n* See SecuritySubType (762) field for description *\r\n***************************************************\r\n*/\r\n  UnderlyingSecuritySubType = 763,\r\n/*\r\n***************************************************\r\n* SecuritySubType of the leg instrument.          *\r\n* See SecuritySubType (762) field for description *\r\n***************************************************\r\n*/\r\n  LegSecuritySubType = 764,\r\n/*\r\n**********************************************************\r\n* The maximum percentage that execution of one side of a *\r\n* program trade can exceed execution of the other.       *\r\n**********************************************************\r\n*/\r\n  AllowableOneSidednessPct = 765,\r\n/*\r\n******************************************************\r\n* The maximum amount that execution of one side of a *\r\n* program trade can exceed execution of the other.   *\r\n******************************************************\r\n*/\r\n  AllowableOneSidednessValue = 766,\r\n/*\r\n*********************************************************\r\n* The currency that AllowableOneSidednessValue (766) is *\r\n* expressed in if AllowableOneSidednessValue is used.   *\r\n*********************************************************\r\n*/\r\n  AllowableOneSidednessCurr = 767,\r\n/*\r\n*******************************************\r\n* Number of TrdRegTimestamp (769) entries *\r\n*******************************************\r\n*/\r\n  NoTrdRegTimestamps = 768,\r\n/*\r\n**********************************************************\r\n* Traded / Regulatory timestamp value. Use to store time *\r\n* information required by government regulators or self  *\r\n* regulatory organizations (such as an exchange or       *\r\n* clearing house).                                       *\r\n**********************************************************\r\n*/\r\n  TrdRegTimestamp = 769,\r\n/*\r\n*******************************************************\r\n* Traded / Regulatory timestamp type.                 *\r\n* Note of Applicability: values are required in US    *\r\n* futures markets by the CFTC to support computerized *\r\n* trade reconstruction.                               *\r\n* (see Volume : \"Glossary\" for value definitions)     *\r\n*******************************************************\r\n*/\r\n  TrdRegTimestampType = 770,\r\n/*\r\n*********************************************************\r\n* Text which identifies the \"origin\" (i.e. system which *\r\n* was used to generate the time stamp) for the Traded / *\r\n* Regulatory timestamp value.                           *\r\n*********************************************************\r\n*/\r\n  TrdRegTimestampOrigin = 771,\r\n/*\r\n*********************************************************\r\n* Reference identifier to be used with ConfirmTransType *\r\n* (666) = Replace or Cancel                             *\r\n*********************************************************\r\n*/\r\n  ConfirmRefID = 772,\r\n/*\r\n***********************************************************\r\n* Identifies the type of Confirmation message being sent. *\r\n***********************************************************\r\n*/\r\n  ConfirmType = 773,\r\n/*\r\n*******************************************************\r\n* Identifies the reason for rejecting a Confirmation. *\r\n*******************************************************\r\n*/\r\n  ConfirmRejReason = 774,\r\n/*\r\n**********************************************************\r\n* Method for booking out this order. Used when notifying *\r\n* a broker that an order to be settled by that broker is *\r\n* to be booked out as an OTC derivative (e.g. CFD or     *\r\n* similar).                                              *\r\n**********************************************************\r\n*/\r\n  BookingType = 775,\r\n/*\r\n*************************************************\r\n* Identified reason for rejecting an individual *\r\n* AllocAccount (79) detail.                     *\r\n* Same values as AllocRejCode (88)              *\r\n*************************************************\r\n*/\r\n  IndividualAllocRejCode = 776,\r\n/*\r\n*********************************************************\r\n* Unique identifier for Settlement Instruction message. *\r\n*********************************************************\r\n*/\r\n  SettlInstMsgID = 777,\r\n/*\r\n******************************************************\r\n* Number of settlement instructions within repeating *\r\n* group.                                             *\r\n******************************************************\r\n*/\r\n  NoSettlInst = 778,\r\n/*\r\n*********************************************************\r\n* Timestamp of last update to data item (or creation if *\r\n* no updates made since creation).                      *\r\n*********************************************************\r\n*/\r\n  LastUpdateTime = 779,\r\n/*\r\n*********************************************************\r\n* Used to indicate whether settlement instructions are  *\r\n* provided on an allocation instruction message, and if *\r\n* not, how they are to be derived.                      *\r\n*********************************************************\r\n*/\r\n  AllocSettlInstType = 780,\r\n/*\r\n***********************************************************\r\n* Number of SettlPartyID (782), SettlPartyIDSource (783), *\r\n* and SettlPartyRole (784) entries                        *\r\n***********************************************************\r\n*/\r\n  NoSettlPartyIDs = 781,\r\n/*\r\n********************************************************\r\n* PartyID value within a settlement parties component. *\r\n* Nested repeating group.                              *\r\n* Same values as PartyID (448)                         *\r\n********************************************************\r\n*/\r\n  SettlPartyID = 782,\r\n/*\r\n***************************************************\r\n* PartyIDSource value within a settlement parties *\r\n* component.                                      *\r\n* Same values as PartyIDSource (447)              *\r\n***************************************************\r\n*/\r\n  SettlPartyIDSource = 783,\r\n/*\r\n**********************************************************\r\n* PartyRole value within a settlement parties component. *\r\n* Same values as PartyRole (452)                         *\r\n**********************************************************\r\n*/\r\n  SettlPartyRole = 784,\r\n/*\r\n***********************************************************\r\n* PartySubID value within a settlement parties component. *\r\n* Same values as PartySubID (523)                         *\r\n***********************************************************\r\n*/\r\n  SettlPartySubID = 785,\r\n/*\r\n****************************************\r\n* Type of SettlPartySubID (785) value. *\r\n* Same values as PartySubIDType (803)  *\r\n****************************************\r\n*/\r\n  SettlPartySubIDType = 786,\r\n/*\r\n***********************************************************\r\n* Used to indicate whether a delivery instruction is used *\r\n* for securities or cash settlement.                      *\r\n***********************************************************\r\n*/\r\n  DlvyInstType = 787,\r\n/*\r\n**********************************\r\n* Type of financing termination. *\r\n**********************************\r\n*/\r\n  TerminationType = 788,\r\n/*\r\n*************************************************\r\n* Next expected MsgSeqNum value to be received. *\r\n*************************************************\r\n*/\r\n  NextExpectedMsgSeqNum = 789,\r\n/*\r\n*****************************************************\r\n* Can be used to uniquely identify a specific Order *\r\n* Status Request message.                           *\r\n*****************************************************\r\n*/\r\n  OrdStatusReqID = 790,\r\n/*\r\n*******************************************************\r\n* Unique ID of settlement instruction request message *\r\n*******************************************************\r\n*/\r\n  SettlInstReqID = 791,\r\n/*\r\n****************************************************\r\n* Identifies reason for rejection (of a settlement *\r\n* instruction request message).                    *\r\n****************************************************\r\n*/\r\n  SettlInstReqRejCode = 792,\r\n/*\r\n**********************************************************\r\n* Secondary allocation identifier. Unlike the AllocID    *\r\n* (70), this can be shared across a number of allocation *\r\n* instruction or allocation report messages, thereby     *\r\n* making it possible to pass an identifier for an        *\r\n* original allocation message on multiple messages (e.g. *\r\n* from one party to a second to a third, across cancel   *\r\n* and replace messages etc.).                            *\r\n**********************************************************\r\n*/\r\n  SecondaryAllocID = 793,\r\n/*\r\n***********************************************************\r\n* Describes the specific type or purpose of an Allocation *\r\n* Report message                                          *\r\n***********************************************************\r\n*/\r\n  AllocReportType = 794,\r\n/*\r\n***********************************************************\r\n* Reference identifier to be used with AllocTransType (7) *\r\n* = Replace or Cancel                                     *\r\n***********************************************************\r\n*/\r\n  AllocReportRefID = 795,\r\n/*\r\n****************************************************\r\n* Reason for cancelling or replacing an Allocation *\r\n* Instruction or Allocation Report message         *\r\n****************************************************\r\n*/\r\n  AllocCancReplaceReason = 796,\r\n/*\r\n***********************************************************\r\n* Indicates whether or not this message is a drop copy of *\r\n* another message.                                        *\r\n***********************************************************\r\n*/\r\n  CopyMsgIndicator = 797,\r\n/*\r\n***********************************************************\r\n* Type of account associated with a confirmation or other *\r\n* trade-level message                                     *\r\n***********************************************************\r\n*/\r\n  AllocAccountType = 798,\r\n/*\r\n**************************************\r\n* Average price for a specific order *\r\n**************************************\r\n*/\r\n  OrderAvgPx = 799,\r\n/*\r\n**********************************************************\r\n* Quantity of the order that is being booked out as part *\r\n* of an Allocation Instruction or Allocation Report      *\r\n* message                                                *\r\n**********************************************************\r\n*/\r\n  OrderBookingQty = 800,\r\n/*\r\n***********************************************************\r\n* Number of SettlPartySubID (785) and SettlPartySubIDType *\r\n* (786) entries                                           *\r\n***********************************************************\r\n*/\r\n  NoSettlPartySubIDs = 801,\r\n/*\r\n******************************************************\r\n* Number of PartySubID (523)and PartySubIDType (803) *\r\n* entries                                            *\r\n******************************************************\r\n*/\r\n  NoPartySubIDs = 802,\r\n/*\r\n**********************************************************\r\n* Type of PartySubID (523) value                         *\r\n* 4000+ = Reserved and available for bi-laterally agreed *\r\n* upon user defined values                               *\r\n**********************************************************\r\n*/\r\n  PartySubIDType = 803,\r\n/*\r\n****************************************\r\n* Number of NestedPartySubID (545) and *\r\n* NestedPartySubIDType (805) entries   *\r\n****************************************\r\n*/\r\n  NoNestedPartySubIDs = 804,\r\n/*\r\n*****************************************\r\n* Type of NestedPartySubID (545) value. *\r\n* Same values as PartySubIDType (803)   *\r\n*****************************************\r\n*/\r\n  NestedPartySubIDType = 805,\r\n/*\r\n***********************************************************\r\n* Number of Nested2PartySubID (760) and                   *\r\n* Nested2PartySubIDType (807) entries. Second instance of *\r\n* <NestedParties>.                                        *\r\n***********************************************************\r\n*/\r\n  NoNested2PartySubIDs = 806,\r\n/*\r\n**********************************************************\r\n* Type of Nested2PartySubID (760) value. Second instance *\r\n* of <NestedParties>.                                    *\r\n* Same values as PartySubIDType (803)                    *\r\n**********************************************************\r\n*/\r\n  Nested2PartySubIDType = 807,\r\n/*\r\n***********************************************************\r\n* Response to allocation to be communicated to a          *\r\n* counterparty through an intermediary, i.e. clearing     *\r\n* house. Used in conjunction with AllocType = \"Request to *\r\n* Intermediary\" and AllocReportType = \"Request to         *\r\n* Intermediary\"                                           *\r\n***********************************************************\r\n*/\r\n  AllocIntermedReqType = 808,\r\n/*\r\n******************************************************\r\n* Number of Usernames to which this this response is *\r\n* directed                                           *\r\n******************************************************\r\n*/\r\n  NoUsernames = 809,\r\n/*\r\n************************************************\r\n* Underlying price associate with a derivative *\r\n* instrument.                                  *\r\n************************************************\r\n*/\r\n  UnderlyingPx = 810,\r\n/*\r\n**********************************************************\r\n* The rate of change in the price of a derivative with   *\r\n* respect to the movement in the price of the underlying *\r\n* instrument(s) upon which the derivative instrument     *\r\n* price is based.                                        *\r\n* This value is normally between -1.0 and 1.0.           *\r\n**********************************************************\r\n*/\r\n  PriceDelta = 811,\r\n/*\r\n**********************************************************\r\n* Used to specify the maximum number of application      *\r\n* messages that can be queued bedore a corrective action *\r\n* needs to take place to resolve the queuing issue.      *\r\n**********************************************************\r\n*/\r\n  ApplQueueMax = 812,\r\n/*\r\n***********************************************************\r\n* Current number of application messages that were queued *\r\n* at the time that the message was created by the         *\r\n* counterparty.                                           *\r\n***********************************************************\r\n*/\r\n  ApplQueueDepth = 813,\r\n/*\r\n********************************************************\r\n* Resolution taken when ApplQueueDepth (813) exceeds   *\r\n* ApplQueueMax (812) or system specified maximum queue *\r\n* size.                                                *\r\n********************************************************\r\n*/\r\n  ApplQueueResolution = 814,\r\n/*\r\n**********************************************************\r\n* Action to take to resolve an application message queue *\r\n* (backlog).                                             *\r\n**********************************************************\r\n*/\r\n  ApplQueueAction = 815,\r\n/*\r\n*********************************************\r\n* Number of alternative market data sources *\r\n*********************************************\r\n*/\r\n  NoAltMDSource = 816,\r\n/*\r\n**********************************************************\r\n* Session layer source for market data                   *\r\n* (For the standard FIX session layer, this would be the *\r\n* TargetCompID (56) where market data can be obtained).  *\r\n**********************************************************\r\n*/\r\n  AltMDSourceID = 817,\r\n/*\r\n******************************************************\r\n* Secondary trade report identifier - can be used to *\r\n* associate an additional identifier with a trade.   *\r\n******************************************************\r\n*/\r\n  SecondaryTradeReportID = 818,\r\n/*\r\n*****************************\r\n* Average Pricing Indicator *\r\n*****************************\r\n*/\r\n  AvgPxIndicator = 819,\r\n/*\r\n********************************************************\r\n* Used to link a group of trades together. Useful for  *\r\n* linking a group of trades together for average price *\r\n* calculations.                                        *\r\n********************************************************\r\n*/\r\n  TradeLinkID = 820,\r\n/*\r\n******************************************************\r\n* Specific device number, terminal number or station *\r\n* where order was entered                            *\r\n******************************************************\r\n*/\r\n  OrderInputDevice = 821,\r\n/*\r\n******************************************************\r\n* Trading Session in which the underlying instrument *\r\n* trades                                             *\r\n******************************************************\r\n*/\r\n  UnderlyingTradingSessionID = 822,\r\n/*\r\n**********************************************************\r\n* Trading Session sub identifier in which the underlying *\r\n* instrument trades                                      *\r\n**********************************************************\r\n*/\r\n  UnderlyingTradingSessionSubID = 823,\r\n/*\r\n**********************************************************\r\n* Reference to the leg of a multileg instrument to which *\r\n* this trade refers                                      *\r\n**********************************************************\r\n*/\r\n  TradeLegRefID = 824,\r\n/*\r\n*********************************************************\r\n* Used to report any exchange rules that apply to this  *\r\n* trade.                                                *\r\n* Primarily intended for US futures markets. Certain    *\r\n* trading practices are permitted by the CFTC, such as  *\r\n* large lot trading, block trading, all or none trades. *\r\n* If the rules are used, the exchanges are required to  *\r\n* indicate these rules on the trade.                    *\r\n*********************************************************\r\n*/\r\n  ExchangeRule = 825,\r\n/*\r\n***********************************************\r\n* Identifies how the trade is to be allocated *\r\n***********************************************\r\n*/\r\n  TradeAllocIndicator = 826,\r\n/*\r\n***********************************************************\r\n* Part of trading cycle when an instrument expires. Field *\r\n* is applicable for derivatives.                          *\r\n***********************************************************\r\n*/\r\n  ExpirationCycle = 827,\r\n/*\r\n******************\r\n* Type of Trade: *\r\n******************\r\n*/\r\n  TrdType = 828,\r\n/*\r\n*******************************************\r\n* Further qualification to the trade type *\r\n*******************************************\r\n*/\r\n  TrdSubType = 829,\r\n/*\r\n*************************************\r\n* Reason trade is being transferred *\r\n*************************************\r\n*/\r\n  TransferReason = 830,\r\n/*\r\n**********************************************************\r\n* Total Number of Assignment Reports being returned to a *\r\n* firm                                                   *\r\n**********************************************************\r\n*/\r\n  TotNumAssignmentReports = 832,\r\n/*\r\n***********************************************\r\n* Unique identifier for the Assignment Report *\r\n***********************************************\r\n*/\r\n  AsgnRptID = 833,\r\n/*\r\n***********************************************************\r\n* Amount that a start has to be in the money before it *\r\n* is exercised.                                           *\r\n***********************************************************\r\n*/\r\n  ThresholdAmount = 834,\r\n/*\r\n*********************************************\r\n* Describes whether peg is static or floats *\r\n*********************************************\r\n*/\r\n  PegMoveType = 835,\r\n/*\r\n****************************\r\n* Type of Peg Offset value *\r\n****************************\r\n*/\r\n  PegOffsetType = 836,\r\n/*\r\n*********************\r\n* Type of Peg Limit *\r\n*********************\r\n*/\r\n  PegLimitType = 837,\r\n/*\r\n***********************************************************\r\n* If the calculated peg price is not a valid tick price,  *\r\n* specifies whether to round the price to be more or less *\r\n* aggressive                                              *\r\n***********************************************************\r\n*/\r\n  PegRoundDirection = 838,\r\n/*\r\n**********************************************\r\n* The price the order is currently pegged at *\r\n**********************************************\r\n*/\r\n  PeggedPrice = 839,\r\n/*\r\n************************\r\n* The scope of the peg *\r\n************************\r\n*/\r\n  PegScope = 840,\r\n/*\r\n*****************************************************\r\n* Describes whether discretionay price is static or *\r\n* floats                                            *\r\n*****************************************************\r\n*/\r\n  DiscretionMoveType = 841,\r\n/*\r\n***********************************\r\n* Type of Discretion Offset value *\r\n***********************************\r\n*/\r\n  DiscretionOffsetType = 842,\r\n/*\r\n****************************\r\n* Type of Discretion Limit *\r\n****************************\r\n*/\r\n  DiscretionLimitType = 843,\r\n/*\r\n**********************************************************\r\n* If the calculated discretionary price is not a valid   *\r\n* tick price, specifies whether to round the price to be *\r\n* more or less aggressive                                *\r\n**********************************************************\r\n*/\r\n  DiscretionRoundDirection = 844,\r\n/*\r\n************************************************\r\n* The current discretionary price of the order *\r\n************************************************\r\n*/\r\n  DiscretionPrice = 845,\r\n/*\r\n*******************************\r\n* The scope of the discretion *\r\n*******************************\r\n*/\r\n  DiscretionScope = 846,\r\n/*\r\n**********************************************************\r\n* The target strategy of the order                       *\r\n* 1000+ = Reserved and available for bi-laterally agreed *\r\n* upon user defined values                               *\r\n**********************************************************\r\n*/\r\n  TargetStrategy = 847,\r\n/*\r\n***********************************************\r\n* Field to allow further specification of the *\r\n* TargetStrategy - usage to be agreed between *\r\n* counterparties                              *\r\n***********************************************\r\n*/\r\n  TargetStrategyParameters = 848,\r\n/*\r\n***********************************************************\r\n* For a TargetStrategy=Participate order specifies the    *\r\n* target particpation rate. For other order types this is *\r\n* a volume limit (i.e. do not be more than this percent   *\r\n* of the market volume)                                   *\r\n***********************************************************\r\n*/\r\n  ParticipationRate = 849,\r\n/*\r\n*****************************************************\r\n* For communication of the performance of the order *\r\n* versus the target strategy                        *\r\n*****************************************************\r\n*/\r\n  TargetStrategyPerformance = 850,\r\n/*\r\n***********************************************************\r\n* Indicator to identify whether this fill was a result of *\r\n* a liquidity provider providing or liquidity taker       *\r\n* taking the liquidity. Applicable only for OrdStatus of  *\r\n* Partial or Filled.                                      *\r\n***********************************************************\r\n*/\r\n  LastLiquidityInd = 851,\r\n/*\r\n********************************************************\r\n* Indicates if a trade should be reported via a market *\r\n* reporting service.                                   *\r\n********************************************************\r\n*/\r\n  PublishTrdIndicator = 852,\r\n/*\r\n**************************\r\n* Reason for short sale. *\r\n**************************\r\n*/\r\n  ShortSaleReason = 853,\r\n/*\r\n***************************************************\r\n* Type of quantity specified in a quantity field: *\r\n***************************************************\r\n*/\r\n  QtyType = 854,\r\n/*\r\n********************************************************\r\n* Additional TrdType(828) assigned to a trade by trade *\r\n* match system.                                        *\r\n********************************************************\r\n*/\r\n  SecondaryTrdType = 855,\r\n/*\r\n************************\r\n* Type of Trade Report *\r\n************************\r\n*/\r\n  TradeReportType = 856,\r\n/*\r\n**********************************************************\r\n* Indicates how the orders being booked and allocated by *\r\n* an Allocation Instruction or Allocation Report message *\r\n* are identified, i.e. by explicit definition in the     *\r\n* NoOrders group or not.                                 *\r\n**********************************************************\r\n*/\r\n  AllocNoOrdersType = 857,\r\n/*\r\n*******************************************************\r\n* Commission to be shared with a third party, e.g. as *\r\n* part of a directed brokerage commission sharing     *\r\n* arrangement.                                        *\r\n*******************************************************\r\n*/\r\n  SharedCommission = 858,\r\n/*\r\n********************************************************\r\n* Unique identifier for a Confirmation Request message *\r\n********************************************************\r\n*/\r\n  ConfirmReqID = 859,\r\n/*\r\n*********************************************************\r\n* Used to express average price as percent of par (used *\r\n* where AvgPx field is expressed in some other way)     *\r\n*********************************************************\r\n*/\r\n  AvgParPx = 860,\r\n/*\r\n*********************************************************\r\n* Reported price (used to differentiate from AvgPx on a *\r\n* confirmation of a marked-up or marked-down principal  *\r\n* trade)                                                *\r\n*********************************************************\r\n*/\r\n  ReportedPx = 861,\r\n/*\r\n**********************************************\r\n* Number of repeating OrderCapacity entries. *\r\n**********************************************\r\n*/\r\n  NoCapacities = 862,\r\n/*\r\n**********************************************************\r\n* Quantity executed under a specific OrderCapacity (e.g. *\r\n* quantity executed as agent, quantity executed as       *\r\n* principal)                                             *\r\n**********************************************************\r\n*/\r\n  OrderCapacityQty = 863,\r\n/*\r\n******************************************\r\n* Number of repeating EventType entries. *\r\n******************************************\r\n*/\r\n  NoEvents = 864,\r\n/*\r\n***************************************\r\n* Code to represent the type of event *\r\n***************************************\r\n*/\r\n  EventType = 865,\r\n/*\r\n*****************\r\n* Date of event *\r\n*****************\r\n*/\r\n  EventDate = 866,\r\n/*\r\n********************************************************\r\n* Predetermined price of issue at event, if applicable *\r\n********************************************************\r\n*/\r\n  EventPx = 867,\r\n/*\r\n**********************************\r\n* Comments related to the event. *\r\n**********************************\r\n*/\r\n  EventText = 868,\r\n/*\r\n************************************************\r\n* Percent at risk due to lowest possible call. *\r\n************************************************\r\n*/\r\n  PctAtRisk = 869,\r\n/*\r\n************************************************\r\n* Number of repeating InstrAttribType entries. *\r\n************************************************\r\n*/\r\n  NoInstrAttrib = 870,\r\n/*\r\n******************************************************\r\n* Code to represent the type of instrument attribute *\r\n******************************************************\r\n*/\r\n  InstrAttribType = 871,\r\n/*\r\n***********************************************************\r\n* Attribute value appropriate to the InstrAttribType (87) *\r\n* field.                                                  *\r\n***********************************************************\r\n*/\r\n  InstrAttribValue = 872,\r\n/*\r\n***********************************************************\r\n* The effective date of a new securities issue determined *\r\n* by its underwriters. Often but not always the same as   *\r\n* the Issue Date and the Interest Accrual Date            *\r\n***********************************************************\r\n*/\r\n  DatedDate = 873,\r\n/*\r\n***********************************************************\r\n* The start date used for calculating accrued interest on *\r\n* debt instruments which are being sold between interest  *\r\n* payment dates. Often but not always the same as the     *\r\n* Issue Date and the Dated Date                           *\r\n***********************************************************\r\n*/\r\n  InterestAccrualDate = 874,\r\n/*\r\n********************************************************\r\n* The program under which a commercial paper is issued *\r\n********************************************************\r\n*/\r\n  CPProgram = 875,\r\n/*\r\n********************************************************\r\n* The registration type of a commercial paper issuance *\r\n********************************************************\r\n*/\r\n  CPRegType = 876,\r\n/*\r\n***********************************************************\r\n* The program under which the underlying commercial paper *\r\n* is issued                                               *\r\n***********************************************************\r\n*/\r\n  UnderlyingCPProgram = 877,\r\n/*\r\n******************************************************\r\n* The registration type of the underlying commercial *\r\n* paper issuance                                     *\r\n******************************************************\r\n*/\r\n  UnderlyingCPRegType = 878,\r\n/*\r\n********************************************************\r\n* Unit amount of the underlying security (par, shares, *\r\n* currency, etc.)                                      *\r\n********************************************************\r\n*/\r\n  UnderlyingQty = 879,\r\n/*\r\n********************************************************\r\n* Identifier assigned to a trade by a matching system. *\r\n********************************************************\r\n*/\r\n  TrdMatchID = 880,\r\n/*\r\n*********************************************************\r\n* Used to refer to a previous SecondaryTradeReportRefID *\r\n* when amending the transaction (cancel, replace,       *\r\n* release, or reversal).                                *\r\n*********************************************************\r\n*/\r\n  SecondaryTradeReportRefID = 881,\r\n/*\r\n*********************************************************\r\n* Price (percent-of-par or per unit) of the underlying  *\r\n* security or basket. \"Dirty\" means it includes accrued *\r\n* interest                                              *\r\n*********************************************************\r\n*/\r\n  UnderlyingDirtyPrice = 882,\r\n/*\r\n********************************************************\r\n* Price (percent-of-par or per unit) of the underlying *\r\n* security or basket at the end of the agreement.      *\r\n********************************************************\r\n*/\r\n  UnderlyingEndPrice = 883,\r\n/*\r\n*******************************************************\r\n* Currency value attributed to this collateral at the *\r\n* start of the agreement                              *\r\n*******************************************************\r\n*/\r\n  UnderlyingStartValue = 884,\r\n/*\r\n**********************************************************\r\n* Currency value currently attributed to this collateral *\r\n**********************************************************\r\n*/\r\n  UnderlyingCurrentValue = 885,\r\n/*\r\n***********************************************************\r\n* Currency value attributed to this collateral at the end *\r\n* of the agreement                                        *\r\n***********************************************************\r\n*/\r\n  UnderlyingEndValue = 886,\r\n/*\r\n********************************************\r\n* Number of underlying stipulation entries *\r\n********************************************\r\n*/\r\n  NoUnderlyingStips = 887,\r\n/*\r\n****************************************\r\n* Type of stipulation.                 *\r\n* Same values as StipulationType (233) *\r\n****************************************\r\n*/\r\n  UnderlyingStipType = 888,\r\n/*\r\n*****************************************\r\n* Value of stipulation.                 *\r\n* Same values as StipulationValue (234) *\r\n*****************************************\r\n*/\r\n  UnderlyingStipValue = 889,\r\n/*\r\n***********************************************************\r\n* Net Money at maturity if Zero Coupon and maturity value *\r\n* is different from par value                             *\r\n***********************************************************\r\n*/\r\n  MaturityNetMoney = 890,\r\n/*\r\n*********************************************\r\n* Defines the unit for a miscellaneous fee. *\r\n*********************************************\r\n*/\r\n  MiscFeeBasis = 891,\r\n/*\r\n**********************************************************\r\n* Total number of NoAlloc entries across all messages.   *\r\n* Should be the sum of all NoAllocs in each message that *\r\n* has repeating NoAlloc entries related to the same      *\r\n* AllocID or AllocReportID. Used to support              *\r\n* fragmentation.                                         *\r\n**********************************************************\r\n*/\r\n  TotNoAllocs = 892,\r\n/*\r\n********************************************************\r\n* Indicates whether this message is the last in a      *\r\n* sequence of messages for those messages that support *\r\n* fragmentation, such as Allocation Instruction, Mass  *\r\n* Quote, Security List, Derivative Security List       *\r\n********************************************************\r\n*/\r\n  LastFragment = 893,\r\n/*\r\n*********************************\r\n* Collateral Request Identifier *\r\n*********************************\r\n*/\r\n  CollReqID = 894,\r\n/*\r\n************************************\r\n* Reason for Collateral Assignment *\r\n************************************\r\n*/\r\n  CollAsgnReason = 895,\r\n/*\r\n**********************************\r\n* Collateral inquiry qualifiers: *\r\n**********************************\r\n*/\r\n  CollInquiryQualifier = 896,\r\n/*\r\n****************************************\r\n* Number of trades in repeating group. *\r\n****************************************\r\n*/\r\n  NoTrades = 897,\r\n/*\r\n*********************************************************\r\n* The fraction of the cash consideration that must be   *\r\n* collateralized, expressed as a percent. A MarginRatio *\r\n* of 02% indicates that the value of the collateral     *\r\n* (after deducting for \"haircut\") must exceed the cash  *\r\n* consideration by 2%.                                  *\r\n*********************************************************\r\n*/\r\n  MarginRatio = 898,\r\n/*\r\n*******************************************************\r\n* Excess margin amount (deficit if value is negative) *\r\n*******************************************************\r\n*/\r\n  MarginExcess = 899,\r\n/*\r\n***********************************************************\r\n* TotalNetValue is determined as follows:                 *\r\n* At the initial collateral assignment TotalNetValue is   *\r\n* the sum of (UnderlyingStartValue * (1-haircut)).        *\r\n* In a collateral substitution TotalNetValue is the sum   *\r\n* of (UnderlyingCurrentValue * (1-haircut)).              *\r\n* For listed derivatives clearing margin management, this *\r\n* is the collateral value which equals (Market value *    *\r\n* haircut)                                                *\r\n***********************************************************\r\n*/\r\n  TotalNetValue = 900,\r\n/*\r\n******************************************\r\n* Starting consideration less repayments *\r\n******************************************\r\n*/\r\n  CashOutstanding = 901,\r\n/*\r\n************************************\r\n* Collateral Assignment Identifier *\r\n************************************\r\n*/\r\n  CollAsgnID = 902,\r\n/*\r\n******************************************\r\n* Collateral Assignment Transaction Type *\r\n******************************************\r\n*/\r\n  CollAsgnTransType = 903,\r\n/*\r\n**********************************\r\n* Collateral Response Identifier *\r\n**********************************\r\n*/\r\n  CollRespID = 904,\r\n/*\r\n***************************************\r\n* Collateral Assignment Response Type *\r\n***************************************\r\n*/\r\n  CollAsgnRespType = 905,\r\n/*\r\n***************************************\r\n* Collateral Assignment Reject Reason *\r\n***************************************\r\n*/\r\n  CollAsgnRejectReason = 906,\r\n/*\r\n***********************************************************\r\n* Collateral Assignment Identifier to which a transaction *\r\n* refers                                                  *\r\n***********************************************************\r\n*/\r\n  CollAsgnRefID = 907,\r\n/*\r\n********************************\r\n* Collateral Report Identifier *\r\n********************************\r\n*/\r\n  CollRptID = 908,\r\n/*\r\n*********************************\r\n* Collateral Inquiry Identifier *\r\n*********************************\r\n*/\r\n  CollInquiryID = 909,\r\n/*\r\n*********************\r\n* Collateral Status *\r\n*********************\r\n*/\r\n  CollStatus = 910,\r\n/*\r\n*****************************************************\r\n* Total number of reports returned in response to a *\r\n* request.                                          *\r\n*****************************************************\r\n*/\r\n  TotNumReports = 911,\r\n/*\r\n********************************************************\r\n* Indicates whether this message is that last report   *\r\n* message in response to a request, such as Order Mass *\r\n* Status Request.                                      *\r\n********************************************************\r\n*/\r\n  LastRptRequested = 912,\r\n/*\r\n*********************************************************\r\n* The full name of the base standard agreement, annexes *\r\n* and amendments in place between the principals        *\r\n* applicable to a financing transaction.                *\r\n*********************************************************\r\n*/\r\n  AgreementDesc = 913,\r\n/*\r\n***********************************************************\r\n* A common reference to the applicable standing agreement *\r\n* between the counterparties to a financing transaction.  *\r\n***********************************************************\r\n*/\r\n  AgreementID = 914,\r\n/*\r\n****************************************************\r\n* A reference to the date the underlying agreement *\r\n* specified by AgreementID and AgreementDesc was   *\r\n* executed.                                        *\r\n****************************************************\r\n*/\r\n  AgreementDate = 915,\r\n/*\r\n***********************************************************\r\n* Start date of a financing deal, i.e. the date the buyer *\r\n* pays the seller cash and takes control of the           *\r\n* collateral                                              *\r\n***********************************************************\r\n*/\r\n  StartDate = 916,\r\n/*\r\n**********************************************************\r\n* End date of a financing deal, i.e. the date the seller *\r\n* reimburses the buyer and takes back control of the     *\r\n* collateral                                             *\r\n**********************************************************\r\n*/\r\n  EndDate = 917,\r\n/*\r\n***********************************************************\r\n* Contractual currency forming the basis of a financing   *\r\n* agreement and associated transactions. Usually, but not *\r\n* always, the same as the trade currency.                 *\r\n***********************************************************\r\n*/\r\n  AgreementCurrency = 918,\r\n/*\r\n*********************************\r\n* Identifies type of settlement *\r\n*********************************\r\n*/\r\n  DeliveryType = 919,\r\n/*\r\n*****************************************************\r\n* Accrued Interest Amount applicable to a financing *\r\n* transaction on the End Date.                      *\r\n*****************************************************\r\n*/\r\n  EndAccruedInterestAmt = 920,\r\n/*\r\n**********************************************************\r\n* Starting dirty cash consideration of a financing deal, *\r\n* i.e. paid to the seller on the Start Date.             *\r\n**********************************************************\r\n*/\r\n  StartCash = 921,\r\n/*\r\n********************************************************\r\n* Ending dirty cash consideration of a financing deal. *\r\n* i.e. reimbursed to the buyer on the End Date.        *\r\n********************************************************\r\n*/\r\n  EndCash = 922,\r\n/*\r\n*****************************************\r\n* Unique identifier for a User Request. *\r\n*****************************************\r\n*/\r\n  UserRequestID = 923,\r\n/*\r\n***********************************************************\r\n* Indicates the action required by a User Request Message *\r\n***********************************************************\r\n*/\r\n  UserRequestType = 924,\r\n/*\r\n******************************\r\n* New Password or passphrase *\r\n******************************\r\n*/\r\n  NewPassword = 925,\r\n/*\r\n**********************************\r\n* Indicates the status of a user *\r\n**********************************\r\n*/\r\n  UserStatus = 926,\r\n/*\r\n*****************************************************\r\n* A text description associated with a user status. *\r\n*****************************************************\r\n*/\r\n  UserStatusText = 927,\r\n/*\r\n************************************************\r\n* Indicates the status of a network connection *\r\n************************************************\r\n*/\r\n  StatusValue = 928,\r\n/*\r\n********************************************************\r\n* A text description associated with a network status. *\r\n********************************************************\r\n*/\r\n  StatusText = 929,\r\n/*\r\n*******************************************\r\n* Assigned value used to identify a firm. *\r\n*******************************************\r\n*/\r\n  RefCompID = 930,\r\n/*\r\n*****************************************************\r\n* Assigned value used to identify specific elements *\r\n* within a firm.                                    *\r\n*****************************************************\r\n*/\r\n  RefSubID = 931,\r\n/*\r\n*********************************************\r\n* Unique identifier for a network response. *\r\n*********************************************\r\n*/\r\n  NetworkResponseID = 932,\r\n/*\r\n*********************************************\r\n* Unique identifier for a network resquest. *\r\n*********************************************\r\n*/\r\n  NetworkRequestID = 933,\r\n/*\r\n*******************************************************\r\n* Identifier of the previous Network Response message *\r\n* sent to a counterparty, used to allow incremental   *\r\n* updates.                                            *\r\n*******************************************************\r\n*/\r\n  LastNetworkResponseID = 934,\r\n/*\r\n**********************************************************\r\n* Indicates the type and level of details required for a *\r\n* Network Status Request Message                         *\r\n* Boolean logic applies EG If you want to subscribe for  *\r\n* changes to certain id's then UserRequestType =0 (8+2), *\r\n* Snapshot for certain ID's = 9 (8+1)                    *\r\n**********************************************************\r\n*/\r\n  NetworkRequestType = 935,\r\n/*\r\n**************************************************\r\n* Number of CompID entries in a repeating group. *\r\n**************************************************\r\n*/\r\n  NoCompIDs = 936,\r\n/*\r\n***************************************************\r\n* Indicates the type of Network Response Message. *\r\n***************************************************\r\n*/\r\n  NetworkStatusResponseType = 937,\r\n/*\r\n*********************************************************\r\n* Number of CollInquiryQualifier entries in a repeating *\r\n* group.                                                *\r\n*********************************************************\r\n*/\r\n  NoCollInquiryQualifier = 938,\r\n/*\r\n***********************\r\n* Trade Report Status *\r\n***********************\r\n*/\r\n  TrdRptStatus = 939,\r\n/*\r\n*************************************************\r\n* Identifies the status of the ConfirmationAck. *\r\n*************************************************\r\n*/\r\n  AffirmStatus = 940,\r\n/*\r\n*******************************************************\r\n* Currency in which the strike price of an underlying *\r\n* instrument is denominated                           *\r\n*******************************************************\r\n*/\r\n  UnderlyingStrikeCurrency = 941,\r\n/*\r\n**********************************************************\r\n* Currency in which the strike price of a instrument leg *\r\n* of a multileg instrument is denominated                *\r\n**********************************************************\r\n*/\r\n  LegStrikeCurrency = 942,\r\n/*\r\n**********************************************************\r\n* A code that represents a time interval in which a fill *\r\n* or trade occurred.                                     *\r\n* Required for US futures markets.                       *\r\n**********************************************************\r\n*/\r\n  TimeBracket = 943,\r\n/*\r\n**********************************************************\r\n* Action proposed for an Underlying Instrument instance. *\r\n**********************************************************\r\n*/\r\n  CollAction = 944,\r\n/*\r\n********************************\r\n* Status of Collateral Inquiry *\r\n********************************\r\n*/\r\n  CollInquiryStatus = 945,\r\n/*\r\n********************************************************\r\n* Result returned in response to Collateral Inquiry    *\r\n* 4000+ Reserved and available for bi-laterally agreed *\r\n* upon user-defined values                             *\r\n********************************************************\r\n*/\r\n  CollInquiryResult = 946,\r\n/*\r\n*****************************************************\r\n* Currency in which the StrikePrice is denominated. *\r\n*****************************************************\r\n*/\r\n  StrikeCurrency = 947,\r\n/*\r\n********************************************************\r\n* Number of Nested3PartyID (949), Nested3PartyIDSource *\r\n* (950), and Nested3PartyRole (95) entries             *\r\n********************************************************\r\n*/\r\n  NoNested3PartyIDs = 948,\r\n/*\r\n**************************************************\r\n* PartyID value within a \"third instance\" Nested *\r\n* repeating group.                               *\r\n* Same values as PartyID (448)                   *\r\n**************************************************\r\n*/\r\n  Nested3PartyID = 949,\r\n/*\r\n********************************************************\r\n* PartyIDSource value within a \"third instance\" Nested *\r\n* repeating group.                                     *\r\n* Same values as PartyIDSource (447)                   *\r\n********************************************************\r\n*/\r\n  Nested3PartyIDSource = 950,\r\n/*\r\n****************************************************\r\n* PartyRole value within a \"third instance\" Nested *\r\n* repeating group.                                 *\r\n* Same values as PartyRole (452)                   *\r\n****************************************************\r\n*/\r\n  Nested3PartyRole = 951,\r\n/*\r\n**********************************************\r\n* Number of Nested3PartySubIDs (953) entries *\r\n**********************************************\r\n*/\r\n  NoNested3PartySubIDs = 952,\r\n/*\r\n*****************************************************\r\n* PartySubID value within a \"third instance\" Nested *\r\n* repeating group.                                  *\r\n* Same values as PartySubID (523)                   *\r\n*****************************************************\r\n*/\r\n  Nested3PartySubID = 953,\r\n/*\r\n*********************************************************\r\n* PartySubIDType value within a \"third instance\" Nested *\r\n* repeating group.                                      *\r\n* Same values as PartySubIDType (803)                   *\r\n*********************************************************\r\n*/\r\n  Nested3PartySubIDType = 954,\r\n/*\r\n***********************************************************\r\n* Specifies when the contract (i.e. MBS/TBA) will settle. *\r\n***********************************************************\r\n*/\r\n  LegContractSettlMonth = 955,\r\n/*\r\n***********************************************************\r\n* The start date used for calculating accrued interest on *\r\n* debt instruments which are being sold between interest  *\r\n* payment dates. Often but not always the same as the     *\r\n* Issue Date and the Dated Date                           *\r\n***********************************************************\r\n*/\r\n  LegInterestAccrualDate = 956,\r\n/*\r\n*******************************************\r\n* Indicates number of strategy parameters *\r\n*******************************************\r\n*/\r\n  NoStrategyParameters = 957,\r\n/*\r\n*********************\r\n* Name of parameter *\r\n*********************\r\n*/\r\n  StrategyParameterName = 958,\r\n/*\r\n*****************************\r\n* Datatype of the parameter *\r\n*****************************\r\n*/\r\n  StrategyParameterType = 959,\r\n/*\r\n**************************\r\n* Value of the parameter *\r\n**************************\r\n*/\r\n  StrategyParameterValue = 960,\r\n/*\r\n*********************************************************\r\n* Host assigned entity ID that can be used to reference *\r\n* all components of a cross; sides + strategy + legs.   *\r\n* Used as the primary key with which to refer to the    *\r\n* Cross Order for cancellation and replace. The         *\r\n* HostCrossID will also be used to link together        *\r\n* components of the Cross Order. For example, each      *\r\n* individual Execution Report associated with the order *\r\n* will carry HostCrossID in order to tie back to the    *\r\n* original cross order.                                 *\r\n*********************************************************\r\n*/\r\n  HostCrossID = 961,\r\n/*\r\n**********************************************************\r\n* Indicates how long the order as specified in the side  *\r\n* stays in effect. SideTimeInForce allows a two-sided    *\r\n* cross order to specify order behavior separately for   *\r\n* each side. Absence of this field indicates that        *\r\n* TimeInForce should be referenced. SideTimeInForce will *\r\n* override TimeInForce if both are provided.             *\r\n**********************************************************\r\n*/\r\n  SideTimeInForce = 962,\r\n/*\r\n*************************************************\r\n* Unique identifier for the Market Data Report. *\r\n*************************************************\r\n*/\r\n  MDReportID = 963,\r\n/*\r\n***************************************\r\n* Identifies a Security List message. *\r\n***************************************\r\n*/\r\n  SecurityReportID = 964,\r\n/*\r\n**********************************************************\r\n* Used for derivatives. Denotes the current state of the *\r\n* Instrument.                                            *\r\n**********************************************************\r\n*/\r\n  SecurityStatus = 965,\r\n/*\r\n**********************************************************\r\n* Indicator to determine if instrument is settle on open *\r\n**********************************************************\r\n*/\r\n  SettleOnOpenFlag = 966,\r\n/*\r\n**********************************************************\r\n* Used for derivatives. Multiplier applied to the strike *\r\n* price for the purpose of calculating the settlement    *\r\n* value.                                                 *\r\n**********************************************************\r\n*/\r\n  StrikeMultiplier = 967,\r\n/*\r\n**********************************************************\r\n* Used for derivatives. The number of shares/units for   *\r\n* the financial instrument involved in the option trade. *\r\n**********************************************************\r\n*/\r\n  StrikeValue = 968,\r\n/*\r\n******************************************************\r\n* Minimum price increase for a given exchange-traded *\r\n* Instrument                                         *\r\n******************************************************\r\n*/\r\n  MinPriceIncrement = 969,\r\n/*\r\n*******************************************************\r\n* Position Limit for a given exchange-traded product. *\r\n*******************************************************\r\n*/\r\n  PositionLimit = 970,\r\n/*\r\n********************************************************\r\n* Position Limit in the near-term contract for a given *\r\n* exchange-traded product.                             *\r\n********************************************************\r\n*/\r\n  NTPositionLimit = 971,\r\n/*\r\n****************************************************\r\n* Percent of the Strike Price that this underlying *\r\n* represents.                                      *\r\n****************************************************\r\n*/\r\n  UnderlyingAllocationPercent = 972,\r\n/*\r\n*********************************************************\r\n* Cash amount associated with the underlying component. *\r\n*********************************************************\r\n*/\r\n  UnderlyingCashAmount = 973,\r\n/*\r\n***********************************************************\r\n* Used for derivatives that deliver into cash underlying. *\r\n***********************************************************\r\n*/\r\n  UnderlyingCashType = 974,\r\n/*\r\n********************************************************\r\n* Indicates order settlement period for the underlying *\r\n* instrument.                                          *\r\n********************************************************\r\n*/\r\n  UnderlyingSettlementType = 975,\r\n/*\r\n**********************************************************\r\n* Date associated to the quantity that is being reported *\r\n* for the start.                                      *\r\n**********************************************************\r\n*/\r\n  QuantityDate = 976,\r\n/*\r\n*******************************************************\r\n* Unique identifier for the Contrary Intention report *\r\n*******************************************************\r\n*/\r\n  ContIntRptID = 977,\r\n/*\r\n**********************************************************\r\n* Indicates if the contrary intention was received after *\r\n* the exchange imposed cutoff time                       *\r\n**********************************************************\r\n*/\r\n  LateIndicator = 978,\r\n/*\r\n************************************\r\n* Source of the contrary intention *\r\n************************************\r\n*/\r\n  InputSource = 979,\r\n  SecurityUpdateAction = 980,\r\n/*\r\n************************************\r\n* Number of Expiration Qty entries *\r\n************************************\r\n*/\r\n  NoExpiration = 981,\r\n/*\r\n****************************\r\n* Expiration Quantity type *\r\n****************************\r\n*/\r\n  ExpirationQtyType = 982,\r\n/*\r\n***********************************************************\r\n* Expiration Quantity associated with the Expiration Type *\r\n***********************************************************\r\n*/\r\n  ExpQty = 983,\r\n/*\r\n*********************************************************\r\n* Total number of occurrences of Amount to pay in order *\r\n* to receive the underlying instrument                  *\r\n*********************************************************\r\n*/\r\n  NoUnderlyingAmounts = 984,\r\n/*\r\n****************************************************\r\n* Amount to pay in order to receive the underlying *\r\n* instrument                                       *\r\n****************************************************\r\n*/\r\n  UnderlyingPayAmount = 985,\r\n/*\r\n********************************************************\r\n* Amount to collect in order to deliver the underlying *\r\n* instrument                                           *\r\n********************************************************\r\n*/\r\n  UnderlyingCollectAmount = 986,\r\n/*\r\n***********************************************************\r\n* Date the underlying instrument will settle. Used for    *\r\n* derivatives that deliver into more than one underlying  *\r\n* instrument. Settlement dates can vary across underlying *\r\n* instruments.                                            *\r\n***********************************************************\r\n*/\r\n  UnderlyingSettlementDate = 987,\r\n/*\r\n***********************************************************\r\n* Settlement status of the underlying instrument. Used    *\r\n* for derivatives that deliver into more than one         *\r\n* underlying instrument. Settlement can be delayed for an *\r\n* underlying instrument.                                  *\r\n***********************************************************\r\n*/\r\n  UnderlyingSettlementStatus = 988,\r\n/*\r\n***********************************************************\r\n* Will allow the intermediary to specify an allocation ID *\r\n* generated by their system.                              *\r\n***********************************************************\r\n*/\r\n  SecondaryIndividualAllocID = 989,\r\n/*\r\n**********************************************************\r\n* Additional attribute to store the Trade ID of the Leg. *\r\n**********************************************************\r\n*/\r\n  LegReportID = 990,\r\n/*\r\n********************************************************\r\n* Specifies average price rounded to quoted precision. *\r\n********************************************************\r\n*/\r\n  RndPx = 991,\r\n/*\r\n***********************************************\r\n* Identifies whether the allocation is to be  *\r\n* sub-allocated or allocated to a third party *\r\n***********************************************\r\n*/\r\n  IndividualAllocType = 992,\r\n/*\r\n*************************************************\r\n* Capacity of customer in the allocation block. *\r\n*************************************************\r\n*/\r\n  AllocCustomerCapacity = 993,\r\n/*\r\n**********************************************************\r\n* The Tier the trade was matched by the clearing system. *\r\n**********************************************************\r\n*/\r\n  TierCode = 994,\r\n/*\r\n***********************************************************\r\n* The unit of measure of the underlying commodity upon    *\r\n* which the contract is based. Two groups of units of     *\r\n* measure enumerations are supported.                     *\r\n* Fixed Magnitude UOMs are primarily used in energy       *\r\n* derivatives and specify a magnitude (such as, MM, Kilo, *\r\n* M, etc.) and the dimension (such as, watt hours, BTU's) *\r\n* to produce standard fixed measures (such as MWh -       *\r\n* Megawatt-hours, MMBtu - One million BTUs).              *\r\n* The second group, Variable Quantity UOMs, specifies the *\r\n* dimension as a single unit without a magnitude (or more *\r\n* accurately a magnitude of one) and uses the             *\r\n* UnitOfMeasureQty(1147) field to define the quantity of  *\r\n* units per contract. Variable Quantity UOMs are used for *\r\n* both commodities (such as lbs of lean cattle, bushels   *\r\n* of corn, ounces of gold) and financial futures.         *\r\n* Examples:                                               *\r\n* For lean cattle futures contracts, a UnitOfMeasure of   *\r\n* 'lbs' with a UnitOfMeasureQty(1147) of 40,000, means    *\r\n* each lean cattle futures contract represents 40,000 lbs *\r\n* of lean cattle.                                         *\r\n* For Eurodollars futures contracts, a UnitOfMeasure of   *\r\n* USD with a UnitOfMeasureQty(1147) of 1,000,000, means a *\r\n* Eurodollar futures contract represents 1,000,000 USD.   *\r\n* For gold futures contracts, a UnitOfMeasure is oz_tr    *\r\n* (Troy ounce) with a UnitOfMeasureQty(1147) of 1,000,    *\r\n* means each gold futures contract represents 1,000 troy  *\r\n* ounces of gold.                                         *\r\n***********************************************************\r\n*/\r\n  UnitOfMeasure = 996,\r\n/*\r\n***********************************************************\r\n* Unit of time associated with the contract.              *\r\n* NOTE: Additional values may be used by mutual agreement *\r\n* of the counterparties                                   *\r\n***********************************************************\r\n*/\r\n  TimeUnit = 997,\r\n/*\r\n********************************************\r\n* Refer to defintion of UnitOfMeasure(996) *\r\n********************************************\r\n*/\r\n  UnderlyingUnitOfMeasure = 998,\r\n/*\r\n********************************************\r\n* Refer to defintion of UnitOfMeasure(996) *\r\n********************************************\r\n*/\r\n  LegUnitOfMeasure = 999,\r\n/*\r\n*********************\r\n* Same as TimeUnit. *\r\n*********************\r\n*/\r\n  UnderlyingTimeUnit = 1000,\r\n/*\r\n*********************\r\n* Same as TimeUnit. *\r\n*********************\r\n*/\r\n  LegTimeUnit = 1001,\r\n/*\r\n*********************************************************\r\n* Specifies the method under which a trade quantity was *\r\n* allocated.                                            *\r\n*********************************************************\r\n*/\r\n  AllocMethod = 1002,\r\n/*\r\n*********************************************************\r\n* The unique ID assigned to the trade entity once it is *\r\n* received or matched by the exchange or central        *\r\n* counterparty.                                         *\r\n*********************************************************\r\n*/\r\n  TradeID = 1003,\r\n/*\r\n*********************************************************\r\n* Used on a multi-sided trade to designate the ReportID *\r\n*********************************************************\r\n*/\r\n  SideTradeReportID = 1005,\r\n/*\r\n*******************************************************\r\n* Used on a multi-sided trade to convey order routing *\r\n* information                                         *\r\n*******************************************************\r\n*/\r\n  SideFillStationCd = 1006,\r\n/*\r\n****************************************************\r\n* Used on a multi-sided trade to convey reason for *\r\n* execution                                        *\r\n****************************************************\r\n*/\r\n  SideReasonCd = 1007,\r\n/*\r\n******************************************************\r\n* Used on a multi-sided trade to specify the type of *\r\n* trade for a given side. Same values as TrdSubType  *\r\n* (829).                                             *\r\n******************************************************\r\n*/\r\n  SideTrdSubTyp = 1008,\r\n/*\r\n*********************************************************\r\n* Used to indicate the quantity on one of a multi-sided *\r\n* Trade Capture Report                                  *\r\n*********************************************************\r\n*/\r\n  SideLastQty = 1009,\r\n/*\r\n***********************************************************\r\n* Used to identify the event or source which gave rise to *\r\n* a message.                                              *\r\n* Valid values will be based on an exchange's             *\r\n* implementation.                                         *\r\n* Example values are:                                     *\r\n* \"MQM\" (originated at Firm Back Office)                  *\r\n* \"Clear\" (originated in Clearing System)                 *\r\n* \"Reg\" (static data generated via Register request)      *\r\n***********************************************************\r\n*/\r\n  MessageEventSource = 1011,\r\n/*\r\n*********************************************************\r\n* Will be used in a multi-sided message.                *\r\n* Traded Regulatory timestamp value Use to store time   *\r\n* information required by government regulators or self *\r\n* regulatory organizations such as an exchange or       *\r\n* clearing house                                        *\r\n*********************************************************\r\n*/\r\n  SideTrdRegTimestamp = 1012,\r\n/*\r\n*******************************\r\n* Same as TrdRegTimeStampType *\r\n*******************************\r\n*/\r\n  SideTrdRegTimestampType = 1013,\r\n/*\r\n**********************************************************\r\n* Same as TrdRegTimestampOrigin                          *\r\n* Text which identifies the origin i.e. system which was *\r\n* used to generate the time stamp for the Traded         *\r\n* Regulatory timestamp value                             *\r\n**********************************************************\r\n*/\r\n  SideTrdRegTimestampSrc = 1014,\r\n/*\r\n******************************************************\r\n* Used to indicate that a floor-trade was originally *\r\n* submitted \"as of\" a specific trade date which is   *\r\n* earlier than its clearing date.                    *\r\n******************************************************\r\n*/\r\n  AsOfIndicator = 1015,\r\n/*\r\n*********************************************************\r\n* Indicates number of SideTimestamps contained in group *\r\n*********************************************************\r\n*/\r\n  NoSideTrdRegTS = 1016,\r\n/*\r\n**********************************************************\r\n* Expresses the risk of an option leg                    *\r\n* Value must be between -1 and 1.                        *\r\n* A Call Option will require a ratio value between 0 and *\r\n* 1                                                      *\r\n* A Put Option will require a ratio value between -1 and *\r\n* 0                                                      *\r\n**********************************************************\r\n*/\r\n  LegOptionRatio = 1017,\r\n/*\r\n*******************************************************\r\n* Identifies the number of parties identified with an *\r\n* instrument                                          *\r\n*******************************************************\r\n*/\r\n  NoInstrumentParties = 1018,\r\n/*\r\n******************************************************\r\n* PartyID value within an instrument party repeating *\r\n* group. Same values as PartyID (448)                *\r\n******************************************************\r\n*/\r\n  InstrumentPartyID = 1019,\r\n/*\r\n**************************************\r\n* Used to report volume with a trade *\r\n**************************************\r\n*/\r\n  TradeVolume = 1020,\r\n/*\r\n********************************************************\r\n* Describes the type of book for which the feed is     *\r\n* intended. Used when multiple feeds are provided over *\r\n* the same connection                                  *\r\n********************************************************\r\n*/\r\n  MDBookType = 1021,\r\n/*\r\n**********************************************************\r\n* Describes a class of service for a given data feed, ie *\r\n* Regular and Market Maker, Bandwidth Intensive or       *\r\n* Bandwidth Conservative                                 *\r\n**********************************************************\r\n*/\r\n  MDFeedType = 1022,\r\n/*\r\n**********************************************************\r\n* Integer to convey the level of a bid or offer at a     *\r\n* given price level. This is in contrast to              *\r\n* MDEntryPositionNo which is used to convey the start *\r\n* of an order within a Price level                       *\r\n**********************************************************\r\n*/\r\n  MDPriceLevel = 1023,\r\n/*\r\n*******************************************************\r\n* Used to describe the origin of an entry in the book *\r\n*******************************************************\r\n*/\r\n  MDOriginType = 1024,\r\n/*\r\n******************************************************\r\n* Indicates the first trade price of the day/session *\r\n******************************************************\r\n*/\r\n  FirstPx = 1025,\r\n/*\r\n*********************************\r\n* The spot rate for an FX entry *\r\n*********************************\r\n*/\r\n  MDEntrySpotRate = 1026,\r\n/*\r\n***********************************************************\r\n* Used for an F/X entry. The forward points to be added   *\r\n* to or subtracted from the spot rate to get the \"all-in\" *\r\n* rate in MDEntryPx. Expressed in decimal form. For       *\r\n* example, 61.99 points is expressed and sent as 0.006199 *\r\n***********************************************************\r\n*/\r\n  MDEntryForwardPoints = 1027,\r\n/*\r\n**********************************************************\r\n* Indicates if the order was initially received manually *\r\n* (as opposed to electronically)                         *\r\n**********************************************************\r\n*/\r\n  ManualOrderIndicator = 1028,\r\n/*\r\n*******************************************************\r\n* Indicates if the customer directed this order to a  *\r\n* specific execution venue \"Y\" or not \"N\".            *\r\n* A default of \"N\" customer did not direct this order *\r\n* should be used in the case where the information is *\r\n* both missing and essential.                         *\r\n*******************************************************\r\n*/\r\n  CustDirectedOrder = 1029,\r\n/*\r\n********************************************************\r\n* Identifies the Broker / Dealer Department that first *\r\n* took the order.                                      *\r\n********************************************************\r\n*/\r\n  ReceivedDeptID = 1030,\r\n/*\r\n**********************************************************\r\n* Codes that apply special information that the Broker / *\r\n* Dealer needs to report, as specified by the customer.  *\r\n* NOTE: This field and its values have no bearing on the *\r\n* ExecInst and TimeInForce fields. These values should   *\r\n* not be used instead of ExecInst or TimeInForce. This   *\r\n* field and its values are intended for compliance       *\r\n* reporting only.                                        *\r\n* Valid values are grouped by                            *\r\n* OrderHandlingInstSource(1032).                         *\r\n**********************************************************\r\n*/\r\n  CustOrderHandlingInst = 1031,\r\n/*\r\n***********************************************************\r\n* Identifies the class or source of the                   *\r\n* \"OrderHandlingInst\" values. Scope of this will apply to *\r\n* both CustOrderHandlingInst and DeskOrderHandlingInst    *\r\n* fields.                                                 *\r\n* Required if CustOrderHandlingInst and/or                *\r\n* DeskOrderHandlingInst is specified.                     *\r\n***********************************************************\r\n*/\r\n  OrderHandlingInstSource = 1032,\r\n/*\r\n******************************************************\r\n* Type of trading desk.  Valid values are grouped by *\r\n* DeskTypeSource(1034).                              *\r\n******************************************************\r\n*/\r\n  DeskType = 1033,\r\n/*\r\n****************************************************\r\n* Identifies the class or source of DeskType(1033) *\r\n* values. Required if DeskType(1033) is specified. *\r\n****************************************************\r\n*/\r\n  DeskTypeSource = 1034,\r\n/*\r\n**********************************************************\r\n* Codes that apply special information that the Broker / *\r\n* Dealer needs to report.                                *\r\n* NOTE: This field and its values have no bearing on the *\r\n* ExecInst and TimeInForce fields. These values should   *\r\n* not be used instead of ExecInst or TimeInForce. This   *\r\n* field and its values are intended for compliance       *\r\n* reporting only.                                        *\r\n* Valid values are grouped by                            *\r\n* OrderHandlingInstSource(1032).                         *\r\n**********************************************************\r\n*/\r\n  DeskOrderHandlingInst = 1035,\r\n/*\r\n*********************************************************\r\n* The status of this execution acknowledgement message. *\r\n*********************************************************\r\n*/\r\n  ExecAckStatus = 1036,\r\n/*\r\n**************************************************\r\n* Indicates the underlying start amount to be *\r\n* delivered                                      *\r\n**************************************************\r\n*/\r\n  UnderlyingDeliveryAmount = 1037,\r\n/*\r\n*************************************************\r\n* Maximum notional value for a capped financial *\r\n* instrument                                    *\r\n*************************************************\r\n*/\r\n  UnderlyingCapValue = 1038,\r\n  UnderlyingSettlMethod = 1039,\r\n/*\r\n**********************************************************\r\n* Used to carry an internal trade entity ID which may or *\r\n* may not be reported to the firm                        *\r\n**********************************************************\r\n*/\r\n  SecondaryTradeID = 1040,\r\n/*\r\n***********************************************************\r\n* The ID assigned to a trade by the Firm to track a trade *\r\n* within the Firm system. This ID can be assigned either  *\r\n* before or after submission to the exchange or central   *\r\n* counterpary                                             *\r\n***********************************************************\r\n*/\r\n  FirmTradeID = 1041,\r\n/*\r\n***********************************************************\r\n* Used to carry an internal firm assigned ID which may or *\r\n* may not be reported to the exchange or central          *\r\n* counterpary                                             *\r\n***********************************************************\r\n*/\r\n  SecondaryFirmTradeID = 1042,\r\n/*\r\n*********************************************************\r\n* conveys how the collateral should be/has been applied *\r\n*********************************************************\r\n*/\r\n  CollApplType = 1043,\r\n/*\r\n***************************************************\r\n* Unit amount of the underlying security (shares) *\r\n* adjusted for pending corporate action not yet   *\r\n* allocated.                                      *\r\n***************************************************\r\n*/\r\n  UnderlyingAdjustedQuantity = 1044,\r\n/*\r\n******************************************************\r\n* Foreign exchange rate used to compute              *\r\n* UnderlyingCurrentValue(885) (or market value) from *\r\n* UnderlyingCurrency(318) to Currency(15).           *\r\n******************************************************\r\n*/\r\n  UnderlyingFXRate = 1045,\r\n/*\r\n**********************************************************\r\n* Specifies whether the UnderlyingFxRate(1045) should be *\r\n* multiplied or divided.                                 *\r\n**********************************************************\r\n*/\r\n  UnderlyingFXRateCalc = 1046,\r\n/*\r\n***********************************************************\r\n* Indicates whether the resulting start after a trade  *\r\n* should be an opening start or closing start. Used *\r\n* for omnibus accounting - where accounts are held on a   *\r\n* gross basis instead of being netted together.           *\r\n***********************************************************\r\n*/\r\n  AllocPositionEffect = 1047,\r\n/*\r\n************************************************\r\n* Identifies role of dealer; Agent, Principal, *\r\n* RisklessPrincipal                            *\r\n************************************************\r\n*/\r\n  DealingCapacity = 1048,\r\n/*\r\n***********************************************\r\n* Method under which assignment was conducted *\r\n***********************************************\r\n*/\r\n  InstrmtAssignmentMethod = 1049,\r\n/*\r\n***********************************************************\r\n* PartyIDSource value within an instrument partyrepeating *\r\n* group.                                                  *\r\n* Same values as PartyIDSource (447)                      *\r\n***********************************************************\r\n*/\r\n  InstrumentPartyIDSource = 1050,\r\n/*\r\n******************************************************\r\n* PartyRole value within an instrument partyepeating *\r\n* group.                                             *\r\n* Same values as PartyRole (452)                     *\r\n******************************************************\r\n*/\r\n  InstrumentPartyRole = 1051,\r\n/*\r\n*********************************************\r\n* Number of InstrumentPartySubID (1053) and *\r\n* InstrumentPartySubIDType (1054) entries   *\r\n*********************************************\r\n*/\r\n  NoInstrumentPartySubIDs = 1052,\r\n/*\r\n*********************************************************\r\n* PartySubID value within an instrument party repeating *\r\n* group.                                                *\r\n* Same values as PartySubID (523)                       *\r\n*********************************************************\r\n*/\r\n  InstrumentPartySubID = 1053,\r\n/*\r\n**********************************************\r\n* Type of InstrumentPartySubID (1053) value. *\r\n* Same values as PartySubIDType (803)        *\r\n**********************************************\r\n*/\r\n  InstrumentPartySubIDType = 1054,\r\n/*\r\n************************************************\r\n* The Currency in which the start Amount is *\r\n* denominated                                  *\r\n************************************************\r\n*/\r\n  PositionCurrency = 1055,\r\n/*\r\n*********************************************************\r\n* Used for the calculated quantity of the other side of *\r\n* the currency trade. Can be derived from LastQty and   *\r\n* LastPx.                                               *\r\n*********************************************************\r\n*/\r\n  CalculatedCcyLastQty = 1056,\r\n/*\r\n******************************************************\r\n* Used to identify whether the order initiator is an *\r\n* aggressor or not in the trade.                     *\r\n******************************************************\r\n*/\r\n  AggressorIndicator = 1057,\r\n/*\r\n*******************************************************\r\n* Identifies the number of parties identified with an *\r\n* underlying instrument                               *\r\n*******************************************************\r\n*/\r\n  NoUndlyInstrumentParties = 1058,\r\n/*\r\n*******************************************************\r\n* PartyID value within an underlying instrument party *\r\n* repeating group.                                    *\r\n* Same values as PartyID (448)                        *\r\n*******************************************************\r\n*/\r\n  UnderlyingInstrumentPartyID = 1059,\r\n/*\r\n*******************************************************\r\n* PartyIDSource value within an underlying instrument *\r\n* partyrepeating group.                               *\r\n* Same values as PartyIDSource (447)                  *\r\n*******************************************************\r\n*/\r\n  UnderlyingInstrumentPartyIDSource = 1060,\r\n/*\r\n***************************************************\r\n* PartyRole value within an underlying instrument *\r\n* partyepeating group.                            *\r\n* Same values as PartyRole (452)                  *\r\n***************************************************\r\n*/\r\n  UnderlyingInstrumentPartyRole = 1061,\r\n/*\r\n********************************************************\r\n* Number of Underlying InstrumentPartySubID (1053) and *\r\n* InstrumentPartySubIDType (1054) entries              *\r\n********************************************************\r\n*/\r\n  NoUndlyInstrumentPartySubIDs = 1062,\r\n/*\r\n**********************************************************\r\n* PartySubID value within an underlying instrument party *\r\n* repeating group.                                       *\r\n* Same values as PartySubID (523)                        *\r\n**********************************************************\r\n*/\r\n  UnderlyingInstrumentPartySubID = 1063,\r\n/*\r\n*********************************************************\r\n* Type of underlying InstrumentPartySubID (1053) value. *\r\n* Same values as PartySubIDType (803)                   *\r\n*********************************************************\r\n*/\r\n  UnderlyingInstrumentPartySubIDType = 1064,\r\n/*\r\n***********************************************************\r\n* The bid FX Swap points for an FX Swap. It is the \"far   *\r\n* bid forward points - near offer forward point\". Value   *\r\n* can be negative. Expressed in decimal form. For         *\r\n* example, 61.99 points is expressed and sent as 0.006199 *\r\n***********************************************************\r\n*/\r\n  BidSwapPoints = 1065,\r\n/*\r\n***********************************************************\r\n* The offer FX Swap points for an FX Swap. It is the \"far *\r\n* offer forward points - near bid forward points\". Value  *\r\n* can be negative. Expressed in decimal form. For         *\r\n* example, 61.99 points is expressed and sent as 0.006199 *\r\n***********************************************************\r\n*/\r\n  OfferSwapPoints = 1066,\r\n/*\r\n***********************************************************\r\n* The bid FX forward points for the leg of an FX Swap.    *\r\n* Value can be negative. Expressed in decimal form. For   *\r\n* example, 61.99 points is expressed and sent as 0.006199 *\r\n***********************************************************\r\n*/\r\n  LegBidForwardPoints = 1067,\r\n/*\r\n***********************************************************\r\n* The offer FX forward points for the leg of an FX Swap.  *\r\n* Value can be negative. Expressed in decimal form. For   *\r\n* example, 61.99 points is expressed and sent as 0.006199 *\r\n***********************************************************\r\n*/\r\n  LegOfferForwardPoints = 1068,\r\n/*\r\n**********************************************************\r\n* For FX Swap, this is used to express the differential  *\r\n* between the far leg's bid/offer and the near leg's     *\r\n* bid/offer. Value can be negative. Expressed in decimal *\r\n* form. For example, 61.99 points is expressed and sent  *\r\n* as 0.006199                                            *\r\n**********************************************************\r\n*/\r\n  SwapPoints = 1069,\r\n/*\r\n**************************************\r\n* Identifies market data quote type. *\r\n**************************************\r\n*/\r\n  MDQuoteType = 1070,\r\n/*\r\n********************************************************\r\n* For FX Swap, this is used to express the last market *\r\n* event for the differential between the far leg's     *\r\n* bid/offer and the near leg's bid/offer in a fill or  *\r\n* partial fill. Value can be negative. Expressed in    *\r\n* decimal form. For example, 61.99 points is expressed *\r\n* and sent as 0.006199                                 *\r\n********************************************************\r\n*/\r\n  LastSwapPoints = 1071,\r\n/*\r\n**********************************************************\r\n* The gross trade amount for this side of the trade. See *\r\n* also GrossTradeAmt (381) for additional definition.    *\r\n**********************************************************\r\n*/\r\n  SideGrossTradeAmt = 1072,\r\n/*\r\n***********************************************************\r\n* The forward points for this leg's fill event. Value can *\r\n* be negative. Expressed in decimal form. For example,    *\r\n* 61.99 points is expressed and sent as 0.006199          *\r\n***********************************************************\r\n*/\r\n  LegLastForwardPoints = 1073,\r\n/*\r\n*********************************************************\r\n* Used for the calculated quantity of the other side of *\r\n* the currency for this leg. Can be derived from LegQty *\r\n* and LegLastPx.                                        *\r\n*********************************************************\r\n*/\r\n  LegCalculatedCcyLastQty = 1074,\r\n/*\r\n**********************************************************\r\n* The gross trade amount of the leg. For FX Futures this *\r\n* is used to express the notional value of a fill when   *\r\n* LegLastQty and other quantity fields are express in    *\r\n* terms of contract size.                                *\r\n**********************************************************\r\n*/\r\n  LegGrossTradeAmt = 1075,\r\n/*\r\n*******************************************************\r\n* Time of security's maturity expressed in local time *\r\n* with offset to UTC specified                        *\r\n*******************************************************\r\n*/\r\n  MaturityTime = 1079,\r\n/*\r\n****************************************************\r\n* The ID reference to the order being hit or taken *\r\n****************************************************\r\n*/\r\n  RefOrderID = 1080,\r\n/*\r\n******************************************************\r\n* Used to specify what identifier, provided in order *\r\n* depth market data, to use when hitting (taking) a  *\r\n* specific order.                                    *\r\n******************************************************\r\n*/\r\n  RefOrderIDSource = 1081,\r\n/*\r\n***********************************************************\r\n* Used for reserve orders when DisplayQty applies to the  *\r\n* primary execution market (e.g.an ECN) and another       *\r\n* quantity is to be shown at other markets (e.g. the      *\r\n* exchange). On orders specifies the qty to be displayed, *\r\n* on execution reports the currently displayed quantity.  *\r\n***********************************************************\r\n*/\r\n  SecondaryDisplayQty = 1082,\r\n/*\r\n************************************************\r\n* Instructs when to refresh DisplayQty (1138). *\r\n************************************************\r\n*/\r\n  DisplayWhen = 1083,\r\n/*\r\n**********************************************************\r\n* Defines what value to use in DisplayQty (1138). If not *\r\n* specified the default DisplayMethod is \"1\"             *\r\n**********************************************************\r\n*/\r\n  DisplayMethod = 1084,\r\n/*\r\n****************************************************\r\n* Defines the lower quantity limit to a randomized *\r\n* refresh of DisplayQty.                           *\r\n****************************************************\r\n*/\r\n  DisplayLowQty = 1085,\r\n/*\r\n****************************************************\r\n* Defines the upper quantity limit to a randomized *\r\n* refresh of DisplayQty.                           *\r\n****************************************************\r\n*/\r\n  DisplayHighQty = 1086,\r\n/*\r\n***********************************************************\r\n* Defines the minimum increment to be used when           *\r\n* calculating a random refresh of DisplayQty. A user      *\r\n* specifies this when he wants a larger increment than    *\r\n* the standard provided by the market (e.g. the round lot *\r\n* size).                                                  *\r\n***********************************************************\r\n*/\r\n  DisplayMinIncr = 1087,\r\n/*\r\n****************************************************\r\n* Defines the quantity used to refresh DisplayQty. *\r\n****************************************************\r\n*/\r\n  RefreshQty = 1088,\r\n/*\r\n**********************************************************\r\n* Allows orders to specify a minimum quantity that       *\r\n* applies to every execution (one execution could be for *\r\n* multiple counter-orders). The order may still fill     *\r\n* against smaller orders, but the cumulative quantity of *\r\n* the execution must be in multiples of the              *\r\n* MatchIncrement.                                        *\r\n**********************************************************\r\n*/\r\n  MatchIncrement = 1089,\r\n/*\r\n**********************************************************\r\n* Allows an order to specify a maximum number of price   *\r\n* levels to trade through. Only valid for aggressive     *\r\n* orders and during continuous (autoexecution) trading   *\r\n* sessions. Property lost when order is put on book. A   *\r\n* partially filled order is assigned last trade price as *\r\n* limit price. Non-filled order behaves as ordinary      *\r\n* Market or Limit.                                       *\r\n**********************************************************\r\n*/\r\n  MaxPriceLevels = 1090,\r\n/*\r\n***********************************************************\r\n* Allows trader to explicitly request anonymity or        *\r\n* disclosure in pre-trade market data feeds. Anonymity is *\r\n* relevant in markets where counterparties are regularly  *\r\n* disclosed in order depth feeds. Disclosure is relevant  *\r\n* when counterparties are not normally visible.           *\r\n***********************************************************\r\n*/\r\n  PreTradeAnonymity = 1091,\r\n/*\r\n*****************************************************\r\n* Defines the type of price protection the customer *\r\n* requires on their order.                          *\r\n*****************************************************\r\n*/\r\n  PriceProtectionScope = 1092,\r\n/*\r\n***********************************************\r\n* Defines the lot type assigned to the order. *\r\n***********************************************\r\n*/\r\n  LotType = 1093,\r\n/*\r\n****************************\r\n* Defines the type of peg. *\r\n****************************\r\n*/\r\n  PegPriceType = 1094,\r\n/*\r\n***********************************************************\r\n* The value of the reference price that the order is      *\r\n* pegged to. PeggedRefPrice + PegOffsetValue (211) =      *\r\n* PeggedPrice (839) unless the limit price (44, Price) is *\r\n* breached. The values may not be exact due to rounding.  *\r\n***********************************************************\r\n*/\r\n  PeggedRefPrice = 1095,\r\n/*\r\n*********************************************************\r\n* Defines the identity of the security off whose prices *\r\n* the order will peg. Same values as SecurityIDSource   *\r\n* (22)                                                  *\r\n*********************************************************\r\n*/\r\n  PegSecurityIDSource = 1096,\r\n/*\r\n*********************************************************\r\n* Defines the identity of the security off whose prices *\r\n* the order will peg.                                   *\r\n*********************************************************\r\n*/\r\n  PegSecurityID = 1097,\r\n/*\r\n*********************************************************\r\n* Defines the common, 'human understood' representation *\r\n* of the security off whose prices the order will Peg.  *\r\n*********************************************************\r\n*/\r\n  PegSymbol = 1098,\r\n/*\r\n*********************************************************\r\n* Security description of the security off whose prices *\r\n* the order will Peg.                                   *\r\n*********************************************************\r\n*/\r\n  PegSecurityDesc = 1099,\r\n/*\r\n********************************************************\r\n* Defines when the trigger will hit, i.e. the action   *\r\n* specified by the trigger instructions will come into *\r\n* effect.                                              *\r\n********************************************************\r\n*/\r\n  TriggerType = 1100,\r\n/*\r\n*******************************************************\r\n* Defines the type of action to take when the trigger *\r\n* hits.                                               *\r\n*******************************************************\r\n*/\r\n  TriggerAction = 1101,\r\n/*\r\n**********************************************\r\n* The price at which the trigger should hit. *\r\n**********************************************\r\n*/\r\n  TriggerPrice = 1102,\r\n/*\r\n*********************************************************\r\n* Defines the common, 'human understood' representation *\r\n* of the security whose prices will be tracked by the   *\r\n* trigger logic.                                        *\r\n*********************************************************\r\n*/\r\n  TriggerSymbol = 1103,\r\n/*\r\n**********************************************************\r\n* Defines the identity of the security whose prices will *\r\n* be tracked by the trigger logic.                       *\r\n**********************************************************\r\n*/\r\n  TriggerSecurityID = 1104,\r\n/*\r\n**********************************************************\r\n* Defines the identity of the security whose prices will *\r\n* be tracked by the trigger logic. Same values as        *\r\n* SecurityIDSource (22).                                 *\r\n**********************************************************\r\n*/\r\n  TriggerSecurityIDSource = 1105,\r\n/*\r\n**********************************************************\r\n* Defines the security description of the security whose *\r\n* prices will be tracked by the trigger logic.           *\r\n**********************************************************\r\n*/\r\n  TriggerSecurityDesc = 1106,\r\n/*\r\n******************************************************\r\n* The type of price that the trigger is compared to. *\r\n******************************************************\r\n*/\r\n  TriggerPriceType = 1107,\r\n/*\r\n*****************************************************\r\n* Defines the type of price protection the customer *\r\n* requires on their order.                          *\r\n*****************************************************\r\n*/\r\n  TriggerPriceTypeScope = 1108,\r\n/*\r\n*****************************************************\r\n* The side from which the trigger price is reached. *\r\n*****************************************************\r\n*/\r\n  TriggerPriceDirection = 1109,\r\n/*\r\n**********************************************************\r\n* The Price that the order should have after the trigger *\r\n* has hit. Could be applicable for any trigger type, but *\r\n* must be specified for Trigger Type 1.                  *\r\n**********************************************************\r\n*/\r\n  TriggerNewPrice = 1110,\r\n/*\r\n***********************************************************\r\n* The OrdType the order should have after the trigger has *\r\n* hit. Required to express orders that change from Limit  *\r\n* to Market. Other values from OrdType (40) may be used   *\r\n* if appropriate and bilaterally agreed upon.             *\r\n***********************************************************\r\n*/\r\n  TriggerOrderType = 1111,\r\n/*\r\n********************************************************\r\n* The Quantity the order should have after the trigger *\r\n* has hit.                                             *\r\n********************************************************\r\n*/\r\n  TriggerNewQty = 1112,\r\n/*\r\n**********************************************************\r\n* Defines the trading session at which the order will be *\r\n* activated.                                             *\r\n**********************************************************\r\n*/\r\n  TriggerTradingSessionID = 1113,\r\n/*\r\n********************************************************\r\n* Defines the subordinate trading session at which the *\r\n* order will be activated.                             *\r\n********************************************************\r\n*/\r\n  TriggerTradingSessionSubID = 1114,\r\n/*\r\n********************************************************\r\n* Defines the type of interest behind a trade (fill or *\r\n* partial fill).                                       *\r\n********************************************************\r\n*/\r\n  OrderCategory = 1115,\r\n/*\r\n***********************************************************\r\n* Number of RootPartyID (1117), RootPartyIDSource (1118), *\r\n* and RootPartyRole (1119) entries                        *\r\n***********************************************************\r\n*/\r\n  NoRootPartyIDs = 1116,\r\n/*\r\n*******************************************************\r\n* PartyID value within a root parties component. Same *\r\n* values as PartyID (448)                             *\r\n*******************************************************\r\n*/\r\n  RootPartyID = 1117,\r\n/*\r\n********************************************************\r\n* PartyIDSource value within a root parties component. *\r\n* Same values as PartyIDSource (447)                   *\r\n********************************************************\r\n*/\r\n  RootPartyIDSource = 1118,\r\n/*\r\n*********************************************************\r\n* PartyRole value within a root parties component. Same *\r\n* values as PartyRole (452)                             *\r\n*********************************************************\r\n*/\r\n  RootPartyRole = 1119,\r\n/*\r\n**********************************************************\r\n* Number of RootPartySubID (1121) and RootPartySubIDType *\r\n* (1122) entries                                         *\r\n**********************************************************\r\n*/\r\n  NoRootPartySubIDs = 1120,\r\n/*\r\n**********************************************************\r\n* PartySubID value within a root parties component. Same *\r\n* values as PartySubID (523)                             *\r\n**********************************************************\r\n*/\r\n  RootPartySubID = 1121,\r\n/*\r\n*******************************************************\r\n* Type of RootPartySubID (1121) value. Same values as *\r\n* PartySubIDType (803)                                *\r\n*******************************************************\r\n*/\r\n  RootPartySubIDType = 1122,\r\n/*\r\n****************************************************\r\n* Specified how the Trade Capture Report should be *\r\n* handled by the Respondent.                       *\r\n****************************************************\r\n*/\r\n  TradeHandlingInstr = 1123,\r\n/*\r\n**********************************************************\r\n* Optionally used with TradeHandlingInstr = 0 to relay   *\r\n* the trade handling instruction used when reporting the *\r\n* trade to the marketplace. Same values as               *\r\n* TradeHandlingInstr (1123)                              *\r\n**********************************************************\r\n*/\r\n  OrigTradeHandlingInstr = 1124,\r\n/*\r\n******************************************************\r\n* Used to preserve original trade date when original *\r\n* trade is being referenced in a subsequent trade    *\r\n* transaction such as a transfer                     *\r\n******************************************************\r\n*/\r\n  OrigTradeDate = 1125,\r\n/*\r\n**********************************************************\r\n* Used to preserve original trade id when original trade *\r\n* is being referenced in a subsequent trade transaction  *\r\n* such as a transfer                                     *\r\n**********************************************************\r\n*/\r\n  OrigTradeID = 1126,\r\n/*\r\n******************************************************\r\n* Used to preserve original secondary trade id when  *\r\n* original trade is being referenced in a subsequent *\r\n* trade transaction such as a transfer               *\r\n******************************************************\r\n*/\r\n  OrigSecondaryTradeID = 1127,\r\n/*\r\n***********************************************************\r\n* Specifies the service pack release being applied at     *\r\n* message level. Enumerated field with values assigned at *\r\n* time of service pack release                            *\r\n***********************************************************\r\n*/\r\n  ApplVerID = 1128,\r\n/*\r\n***********************************************************\r\n* Specifies a custom extension to a message being applied *\r\n* at the message level. Enumerated field                  *\r\n***********************************************************\r\n*/\r\n  CstmApplVerID = 1129,\r\n/*\r\n*********************************************************\r\n* Specifies the service pack release being applied to a *\r\n* message at the session level. Enumerated field with   *\r\n* values assigned at time of service pack release. Uses *\r\n* same values as ApplVerID                              *\r\n*********************************************************\r\n*/\r\n  RefApplVerID = 1130,\r\n/*\r\n***********************************************************\r\n* Specifies a custom extension to a message being applied *\r\n* at the session level.                                   *\r\n***********************************************************\r\n*/\r\n  RefCstmApplVerID = 1131,\r\n/*\r\n********************************************************\r\n* Transact time in the local date-time stamp with a TZ *\r\n* offset to UTC identified                             *\r\n********************************************************\r\n*/\r\n  TZTransactTime = 1132,\r\n/*\r\n**********************************\r\n* The ID source of ExDestination *\r\n**********************************\r\n*/\r\n  ExDestinationIDSource = 1133,\r\n/*\r\n*********************************************************\r\n* Indicates that the reported price that is different   *\r\n* from the market price. The price difference should be *\r\n* stated by using field 828 TrdType and, if required,   *\r\n* field 829 TrdSubType                                  *\r\n*********************************************************\r\n*/\r\n  ReportedPxDiff = 1134,\r\n/*\r\n**********************************************************\r\n* Indicates the system or medium on which the report has *\r\n* been published                                         *\r\n**********************************************************\r\n*/\r\n  RptSys = 1135,\r\n/*\r\n***************************************************\r\n* ClearingFeeIndicator(635) for Allocation, see   *\r\n* ClearingFeeIndicator(635) for permitted values. *\r\n***************************************************\r\n*/\r\n  AllocClearingFeeIndicator = 1136,\r\n/*\r\n********************************************************\r\n* Specifies the service pack release being applied, by *\r\n* default, to message at the session level. Enumerated *\r\n* field with values assigned at time of service pack   *\r\n* release. Uses same values as ApplVerID               *\r\n********************************************************\r\n*/\r\n  DefaultApplVerID = 1137,\r\n/*\r\n***********************************************************\r\n* The quantity to be displayed . Required for reserve     *\r\n* orders. On orders specifies the qty to be displayed, on *\r\n* execution reports the currently displayed quantity.     *\r\n***********************************************************\r\n*/\r\n  DisplayQty = 1138,\r\n/*\r\n************************************************\r\n* Free format text string related to exchange. *\r\n************************************************\r\n*/\r\n  ExchangeSpecialInstructions = 1139,\r\n/*\r\n**********************************************************\r\n* The maximum order quantity that can be submitted for a *\r\n* security.                                              *\r\n**********************************************************\r\n*/\r\n  MaxTradeVol = 1140,\r\n/*\r\n**********************************************************\r\n* The number of feed types and corresponding book depths *\r\n* associated with a security                             *\r\n**********************************************************\r\n*/\r\n  NoMDFeedTypes = 1141,\r\n/*\r\n*****************************************************\r\n* The types of algorithm used to match orders in a  *\r\n* specific security. Possilbe value types are FIFO, *\r\n* Allocation, Pro-rata, Lead Market Maker, Currency *\r\n* Calender.                                         *\r\n*****************************************************\r\n*/\r\n  MatchAlgorithm = 1142,\r\n/*\r\n********************************************************\r\n* The maximum price variation of an execution from one *\r\n* event to the next for a given security.              *\r\n********************************************************\r\n*/\r\n  MaxPriceVariation = 1143,\r\n/*\r\n***********************************************************\r\n* Indicates that an implied market should be created for  *\r\n* either the legs of a multi-leg instrument (Implied-in)  *\r\n* or for the multi-leg instrument based on the existence  *\r\n* of the legs (Implied-out). Determination as to whether  *\r\n* implied markets should be created is generally done at  *\r\n* the level of the multi-leg instrument. Commonly used in *\r\n* listed derivatives.                                     *\r\n***********************************************************\r\n*/\r\n  ImpliedMarketIndicator = 1144,\r\n/*\r\n**********************************************************\r\n* Specific time of event. To be used in combination with *\r\n* EventDate [866]                                        *\r\n**********************************************************\r\n*/\r\n  EventTime = 1145,\r\n/*\r\n*********************************************************\r\n* Minimum price increment amount associated with the    *\r\n* MinPriceIncrement ( tag 969). For listed derivatives, *\r\n* the value can be calculated by multiplying            *\r\n* MinPriceIncrement by ContractValueFactor(231).        *\r\n*********************************************************\r\n*/\r\n  MinPriceIncrementAmount = 1146,\r\n/*\r\n*********************************************************\r\n* Used to indicate the quantity of the underlying       *\r\n* commodity unit of measure on which the contract is    *\r\n* based, such as, 2500 lbs of lean cattle, 1000 barrels *\r\n* of crude oil, 1000 bushels of corn, etc.              *\r\n* UnitOfMeasureQty is required for UnitOfMeasure(996)   *\r\n* Variable Quantity UOMs enumerations. Refer to the     *\r\n* definition of UnitOfMeasure(996) for more information *\r\n* on the use of UnitOfMeasureQty.                       *\r\n*********************************************************\r\n*/\r\n  UnitOfMeasureQty = 1147,\r\n/*\r\n***********************************************************\r\n* Allowable low limit price for the trading day. A key    *\r\n* parameter in validating order price. Used as the lower  *\r\n* band for validating order prices. Orders submitted with *\r\n* prices below the lower limit will be rejected           *\r\n***********************************************************\r\n*/\r\n  LowLimitPrice = 1148,\r\n/*\r\n***********************************************************\r\n* Allowable high limit price for the trading day. A key   *\r\n* parameter in validating order price. Used as the upper  *\r\n* band for validating order prices. Orders submitted with *\r\n* prices above the upper limit will be rejected           *\r\n***********************************************************\r\n*/\r\n  HighLimitPrice = 1149,\r\n/*\r\n**********************************************************\r\n* Reference price for the current trading price range    *\r\n* usually representing the mid price between the         *\r\n* HighLimitPrice and LowLimitPrice. The value may be the *\r\n* settlement price or closing price of the prior trading *\r\n* day.                                                   *\r\n**********************************************************\r\n*/\r\n  TradingReferencePrice = 1150,\r\n/*\r\n*********************************************************\r\n* An exchange specific name assigned to a group of      *\r\n* related securities which may be concurrently affected *\r\n* by market events and actions.                         *\r\n*********************************************************\r\n*/\r\n  SecurityGroup = 1151,\r\n/*\r\n**********************************************************\r\n* Allow sequencing of Legs for a Strategy to be captured *\r\n**********************************************************\r\n*/\r\n  LegNumber = 1152,\r\n/*\r\n***********************************************************\r\n* Settlement cycle in which the settlement obligation was *\r\n* generated                                               *\r\n***********************************************************\r\n*/\r\n  SettlementCycleNo = 1153,\r\n/*\r\n******************************************************\r\n* Used to identify the trading currency on the Trade *\r\n* Capture Report Side                                *\r\n******************************************************\r\n*/\r\n  SideCurrency = 1154,\r\n/*\r\n*********************************************************\r\n* Used to identify the settlement currency on the Trade *\r\n* Capture Report Side                                   *\r\n*********************************************************\r\n*/\r\n  SideSettlCurrency = 1155,\r\n/*\r\n************************************************\r\n* The extension pack number associated with an *\r\n* application message.                         *\r\n************************************************\r\n*/\r\n  ApplExtID = 1156,\r\n/*\r\n**************************\r\n* Net flow of Currency 1 *\r\n**************************\r\n*/\r\n  CcyAmt = 1157,\r\n/*\r\n***************************************\r\n* Used to group Each Settlement Party *\r\n***************************************\r\n*/\r\n  NoSettlDetails = 1158,\r\n/*\r\n*********************************************************\r\n* Used to identify the reporting mode of the settlement *\r\n* obligation which is either preliminary or final       *\r\n*********************************************************\r\n*/\r\n  SettlObligMode = 1159,\r\n/*\r\n*******************************************************\r\n* Message identifier for Settlement Obligation Report *\r\n*******************************************************\r\n*/\r\n  SettlObligMsgID = 1160,\r\n/*\r\n**********************************************\r\n* Unique ID for this settlement instruction. *\r\n**********************************************\r\n*/\r\n  SettlObligID = 1161,\r\n/*\r\n**********************************************************\r\n* Transaction Type - required except where SettlInstMode *\r\n* is 5=Reject SSI request                                *\r\n**********************************************************\r\n*/\r\n  SettlObligTransType = 1162,\r\n/*\r\n**********************************************************\r\n* Required where SettlInstTransType is Cancel or Replace *\r\n**********************************************************\r\n*/\r\n  SettlObligRefID = 1163,\r\n/*\r\n********************************************************\r\n* Used to identify whether these delivery instructions *\r\n* are for the buyside or the sellside.                 *\r\n********************************************************\r\n*/\r\n  SettlObligSource = 1164,\r\n/*\r\n************************************\r\n* Number of settlement obligations *\r\n************************************\r\n*/\r\n  NoSettlOblig = 1165,\r\n/*\r\n******************************************\r\n* Unique identifier for a quote message. *\r\n******************************************\r\n*/\r\n  QuoteMsgID = 1166,\r\n/*\r\n**********************************************************\r\n* Identifies the status of an individual quote. See also *\r\n* QuoteStatus(297) which is used for single Quotes.      *\r\n**********************************************************\r\n*/\r\n  QuoteEntryStatus = 1167,\r\n/*\r\n*******************************************\r\n* Specifies the number of canceled quotes *\r\n*******************************************\r\n*/\r\n  TotNoCxldQuotes = 1168,\r\n/*\r\n*******************************************\r\n* Specifies the number of accepted quotes *\r\n*******************************************\r\n*/\r\n  TotNoAccQuotes = 1169,\r\n/*\r\n*******************************************\r\n* Specifies the number of rejected quotes *\r\n*******************************************\r\n*/\r\n  TotNoRejQuotes = 1170,\r\n/*\r\n**********************************************************\r\n* Specifies whether a quote is public, i.e. available to *\r\n* the market, or private, i.e. available to a specified  *\r\n* counterparty only.                                     *\r\n**********************************************************\r\n*/\r\n  PrivateQuote = 1171,\r\n/*\r\n************************************************\r\n* Specifies the type of respondents requested. *\r\n************************************************\r\n*/\r\n  RespondentType = 1172,\r\n/*\r\n***********************************************************\r\n* Describes a class of sub book, e.g. for the separation  *\r\n* of various lot types. The Sub Book Type indicates that  *\r\n* the following Market Data Entries belong to a           *\r\n* non-integrated Sub Book. Whenever provided the Sub Book *\r\n* must be used together with MDPriceLevel and             *\r\n* MDEntryPositionNo in order to sort the order properly.  *\r\n* Values are bilaterally agreed.                          *\r\n***********************************************************\r\n*/\r\n  MDSubBookType = 1173,\r\n/*\r\n********************************************************\r\n* Identifies an event related to a                     *\r\n* SecurityTradingStatus(326). An event occurs and is   *\r\n* gone, it is not a state that applies for a period of *\r\n* time.                                                *\r\n********************************************************\r\n*/\r\n  SecurityTradingEvent = 1174,\r\n/*\r\n**********************************************************\r\n* Number of statistics indicator repeating group entries *\r\n**********************************************************\r\n*/\r\n  NoStatsIndicators = 1175,\r\n/*\r\n**********************\r\n* Type of statistics *\r\n**********************\r\n*/\r\n  StatsType = 1176,\r\n/*\r\n*********************************************************\r\n* The number of secondary sizes specifies in this entry *\r\n*********************************************************\r\n*/\r\n  NoOfSecSizes = 1177,\r\n/*\r\n*****************************************\r\n* Specifies the type of secondary size. *\r\n*****************************************\r\n*/\r\n  MDSecSizeType = 1178,\r\n/*\r\n***********************************************************\r\n* A part of the MDEntrySize(271) that represents          *\r\n* secondary interest as specified by MDSecSizeType(1178). *\r\n***********************************************************\r\n*/\r\n  MDSecSize = 1179,\r\n/*\r\n*********************************************************\r\n* Identifies the application with which a message is    *\r\n* associated. Used only if application sequencing is in *\r\n* effect.                                               *\r\n*********************************************************\r\n*/\r\n  ApplID = 1180,\r\n/*\r\n***********************************************************\r\n* Data sequence number to be used when FIX session is not *\r\n* in effect                                               *\r\n***********************************************************\r\n*/\r\n  ApplSeqNum = 1181,\r\n/*\r\n***************************************************\r\n* Beginning range of application sequence numbers *\r\n***************************************************\r\n*/\r\n  ApplBegSeqNum = 1182,\r\n/*\r\n************************************************\r\n* Ending range of application sequence numbers *\r\n************************************************\r\n*/\r\n  ApplEndSeqNum = 1183,\r\n/*\r\n*****************************************\r\n* Lenght of the SecurityXML data block. *\r\n*****************************************\r\n*/\r\n  SecurityXMLLen = 1184,\r\n/*\r\n**********************************************************\r\n* Actual XML data stream describing a security, normally *\r\n* FpML.                                                  *\r\n**********************************************************\r\n*/\r\n  SecurityXML = 1185,\r\n/*\r\n***********************************************************\r\n* The schema used to validate the contents of SecurityXML *\r\n***********************************************************\r\n*/\r\n  SecurityXMLSchema = 1186,\r\n/*\r\n***********************************************************\r\n* Set by the sender to tell the receiver to perform an    *\r\n* immediate refresh of the book due to disruptions in the *\r\n* accompanying real-time feed                             *\r\n* 'Y' - Mandatory refresh by all participants             *\r\n* 'N' - Process as required                               *\r\n***********************************************************\r\n*/\r\n  RefreshIndicator = 1187,\r\n/*\r\n*******************************************************\r\n* Annualized volatility for option model calculations *\r\n*******************************************************\r\n*/\r\n  Volatility = 1188,\r\n/*\r\n***********************************************************\r\n* Time to expiration in years calculated as the number of *\r\n* days remaining to expiration divided by 365 days per    *\r\n* year.                                                   *\r\n***********************************************************\r\n*/\r\n  TimeToExpiration = 1189,\r\n/*\r\n********************************************************\r\n* Interest rate. Usually some form of short term rate. *\r\n********************************************************\r\n*/\r\n  RiskFreeRate = 1190,\r\n/*\r\n**********************************************************\r\n* Used to express the UOM of the price if different from *\r\n* the contract. In futures, this can be different for    *\r\n* cross-rate products in which the price is quoted in    *\r\n* units differently from the contract                    *\r\n**********************************************************\r\n*/\r\n  PriceUnitOfMeasure = 1191,\r\n/*\r\n***********************************************************\r\n* Used to express the UOM Quantity of the price if        *\r\n* different from the contract. In futures, this can be    *\r\n* different for physically delivered products in which    *\r\n* price is quoted in a unit size different from the       *\r\n* contract, i.e. a Cattle Future contract has a UOMQty of *\r\n* 40,000 and a PriceUOMQty of 100.                        *\r\n***********************************************************\r\n*/\r\n  PriceUnitOfMeasureQty = 1192,\r\n/*\r\n*******************************************************\r\n* Settlement method for a contract. Can be used as an *\r\n* alternative to CFI Code value                       *\r\n*******************************************************\r\n*/\r\n  SettlMethod = 1193,\r\n/*\r\n**********************************************\r\n* Type of exercise of a derivatives security *\r\n**********************************************\r\n*/\r\n  ExerciseStyle = 1194,\r\n/*\r\n***********************************************************\r\n* Cash amount indicating the pay out associated with an   *\r\n* option. For binary options this is a fixed amount.      *\r\n* Conditionally required if OptPayoutType(1482) is set to *\r\n* binary.                                                 *\r\n***********************************************************\r\n*/\r\n  OptPayoutAmount = 1195,\r\n/*\r\n******************************\r\n* Method for price quotation *\r\n******************************\r\n*/\r\n  PriceQuoteMethod = 1196,\r\n/*\r\n***************************************************\r\n* Specifies the type of valuation method applied. *\r\n***************************************************\r\n*/\r\n  ValuationMethod = 1197,\r\n/*\r\n********************************************************\r\n* Indicates whether instruments are pre-listed only or *\r\n* can also be defined via user request                 *\r\n********************************************************\r\n*/\r\n  ListMethod = 1198,\r\n/*\r\n******************************************************\r\n* Used to express the ceiling price of a capped call *\r\n******************************************************\r\n*/\r\n  CapPrice = 1199,\r\n/*\r\n***************************************************\r\n* Used to express the floor price of a capped put *\r\n***************************************************\r\n*/\r\n  FloorPrice = 1200,\r\n/*\r\n***********************************************************\r\n* Number of strike rule entries. This block specifies the *\r\n* rules for determining how new strikes should be listed  *\r\n* within the stated price range of the underlying         *\r\n* instrument                                              *\r\n***********************************************************\r\n*/\r\n  NoStrikeRules = 1201,\r\n/*\r\n*********************************************************\r\n* Starting price for the range to which the             *\r\n* StrikeIncrement applies. Price refers to the price of *\r\n* the underlying                                        *\r\n*********************************************************\r\n*/\r\n  StartStrikePxRange = 1202,\r\n/*\r\n**********************************************************\r\n* Ending price of the range to which the StrikeIncrement *\r\n* applies. Price refers to the price of the underlying   *\r\n**********************************************************\r\n*/\r\n  EndStrikePxRange = 1203,\r\n/*\r\n*****************************************************\r\n* Value by which strike price should be incremented *\r\n* within the specified price range.                 *\r\n*****************************************************\r\n*/\r\n  StrikeIncrement = 1204,\r\n/*\r\n********************************************************\r\n* Number of tick rules. This block specifies the rules *\r\n* for determining how a security ticks, i.e. the price *\r\n* increments at which it can be quoted and traded,     *\r\n* depending on the current price of the security       *\r\n********************************************************\r\n*/\r\n  NoTickRules = 1205,\r\n/*\r\n*****************************************************\r\n* Starting price range for specified tick increment *\r\n*****************************************************\r\n*/\r\n  StartTickPriceRange = 1206,\r\n/*\r\n*******************************************************\r\n* Ending price range for the specified tick increment *\r\n*******************************************************\r\n*/\r\n  EndTickPriceRange = 1207,\r\n/*\r\n********************************************************\r\n* Tick increment for stated price range. Specifies the *\r\n* valid price increments at which a security can be    *\r\n* quoted and traded                                    *\r\n********************************************************\r\n*/\r\n  TickIncrement = 1208,\r\n/*\r\n**************************************************\r\n* Specifies the type of tick rule which is being *\r\n* described                                      *\r\n**************************************************\r\n*/\r\n  TickRuleType = 1209,\r\n/*\r\n******************************************************\r\n* Code to represent the type of instrument attribute *\r\n******************************************************\r\n*/\r\n  NestedInstrAttribType = 1210,\r\n/*\r\n**************************************\r\n* Attribute value appropriate to the *\r\n* NestedInstrAttribType field        *\r\n**************************************\r\n*/\r\n  NestedInstrAttribValue = 1211,\r\n/*\r\n*******************************************************\r\n* Time of security's maturity expressed in local time *\r\n* with offset to UTC specified                        *\r\n*******************************************************\r\n*/\r\n  LegMaturityTime = 1212,\r\n/*\r\n*******************************************************\r\n* Time of security's maturity expressed in local time *\r\n* with offset to UTC specified                        *\r\n*******************************************************\r\n*/\r\n  UnderlyingMaturityTime = 1213,\r\n/*\r\n**************************************\r\n* Refer to definition for Symbol(55) *\r\n**************************************\r\n*/\r\n  DerivativeSymbol = 1214,\r\n/*\r\n*****************************************\r\n* Refer to definition for SymbolSfx(65) *\r\n*****************************************\r\n*/\r\n  DerivativeSymbolSfx = 1215,\r\n/*\r\n******************************************\r\n* Refer to definition for SecurityID(48) *\r\n******************************************\r\n*/\r\n  DerivativeSecurityID = 1216,\r\n/*\r\n************************************************\r\n* Refer to definition for SecurityIDSoruce(22) *\r\n************************************************\r\n*/\r\n  DerivativeSecurityIDSource = 1217,\r\n/*\r\n************************************************\r\n* Refer to definition for NoSecurityAltID(454) *\r\n************************************************\r\n*/\r\n  NoDerivativeSecurityAltID = 1218,\r\n/*\r\n**********************************************\r\n* Refer to definition for SecurityAltID(455) *\r\n**********************************************\r\n*/\r\n  DerivativeSecurityAltID = 1219,\r\n/*\r\n****************************************************\r\n* Refer to definition for SecurityAltIDSource(456) *\r\n****************************************************\r\n*/\r\n  DerivativeSecurityAltIDSource = 1220,\r\n/*\r\n**********************************************\r\n* Refer to definition of LowLimitPrice(1148) *\r\n**********************************************\r\n*/\r\n  SecondaryLowLimitPrice = 1221,\r\n/*\r\n***********************************************************\r\n* Allows maturity rule to be referenced via an identifier *\r\n* so that rules do not need to be explicitly enumerated   *\r\n***********************************************************\r\n*/\r\n  MaturityRuleID = 1222,\r\n/*\r\n*********************************************************\r\n* Allows strike rule to be referenced via an identifier *\r\n* so that rules do not need to be explicitly enumerated *\r\n*********************************************************\r\n*/\r\n  StrikeRuleID = 1223,\r\n/*\r\n*************************************************\r\n* Refer to definition of UnitOfMeasureQty(1147) *\r\n*************************************************\r\n*/\r\n  LegUnitOfMeasureQty = 1224,\r\n/*\r\n*********************************************************\r\n* Cash amount indicating the pay out associated with an *\r\n* option. For binary options this is a fixed amount     *\r\n*********************************************************\r\n*/\r\n  DerivativeOptPayAmount = 1225,\r\n/*\r\n**************************************************\r\n* Ending maturity month year for an option class *\r\n**************************************************\r\n*/\r\n  EndMaturityMonthYear = 1226,\r\n/*\r\n******************************************************\r\n* Identifies an entire suite of products for a given *\r\n* market. In Futures this may be \"interest rates\",   *\r\n* \"agricultural\", \"equity indexes\", etc.             *\r\n******************************************************\r\n*/\r\n  ProductComplex = 1227,\r\n/*\r\n*********************************\r\n* Refer to ProductComplex(1227) *\r\n*********************************\r\n*/\r\n  DerivativeProductComplex = 1228,\r\n/*\r\n*********************************************************\r\n* Increment between successive maturities for an option *\r\n* class                                                 *\r\n*********************************************************\r\n*/\r\n  MaturityMonthYearIncrement = 1229,\r\n/*\r\n***********************************************\r\n* Refer to definition of HighLimitPrice(1149) *\r\n***********************************************\r\n*/\r\n  SecondaryHighLimitPrice = 1230,\r\n/*\r\n***********************************************************\r\n* Minimum lot size allowed based on lot type specified in *\r\n* LotType(1093)                                           *\r\n***********************************************************\r\n*/\r\n  MinLotSize = 1231,\r\n/*\r\n************************************\r\n* Number of execution instructions *\r\n************************************\r\n*/\r\n  NoExecInstRules = 1232,\r\n/*\r\n****************************\r\n* Number of Lot Type Rules *\r\n****************************\r\n*/\r\n  NoLotTypeRules = 1234,\r\n/*\r\n*************************\r\n* Number of Match Rules *\r\n*************************\r\n*/\r\n  NoMatchRules = 1235,\r\n/*\r\n*******************************************************\r\n* Number of maturity rules in MarurityRules component *\r\n* block                                               *\r\n*******************************************************\r\n*/\r\n  NoMaturityRules = 1236,\r\n/*\r\n*************************\r\n* Number of order types *\r\n*************************\r\n*/\r\n  NoOrdTypeRules = 1237,\r\n/*\r\n**************************************\r\n* Number of time in force techniques *\r\n**************************************\r\n*/\r\n  NoTimeInForceRules = 1239,\r\n/*\r\n*******************************************************\r\n* Refer to definition for TradingReferencePrice(1150) *\r\n*******************************************************\r\n*/\r\n  SecondaryTradingReferencePrice = 1240,\r\n/*\r\n****************************************************\r\n* Starting maturity month year for an option class *\r\n****************************************************\r\n*/\r\n  StartMaturityMonthYear = 1241,\r\n/*\r\n*****************************************************\r\n* Used to indicate if a product or group of product *\r\n* supports the creation of flexible securities      *\r\n*****************************************************\r\n*/\r\n  FlexProductEligibilityIndicator = 1242,\r\n/*\r\n**************************************************\r\n* Refer to FlexProductEligibilityIndicator(1242) *\r\n**************************************************\r\n*/\r\n  DerivFlexProductEligibilityIndicator = 1243,\r\n/*\r\n**********************************************************\r\n* Used to indicate a derivatives security that can be    *\r\n* defined using flexible terms. The terms commonly       *\r\n* permitted to be defined by market participants are     *\r\n* expiration date and strike price. FlexibleIndicator is *\r\n* an alternative CFICode(461) Standard/Non-standard      *\r\n* attribute.                                             *\r\n**********************************************************\r\n*/\r\n  FlexibleIndicator = 1244,\r\n/*\r\n******************************************************\r\n* Used when the trading currency can differ from the *\r\n* price currency                                     *\r\n******************************************************\r\n*/\r\n  TradingCurrency = 1245,\r\n  DerivativeProduct = 1246,\r\n  DerivativeSecurityGroup = 1247,\r\n  DerivativeCFICode = 1248,\r\n  DerivativeSecurityType = 1249,\r\n  DerivativeSecuritySubType = 1250,\r\n  DerivativeMaturityMonthYear = 1251,\r\n  DerivativeMaturityDate = 1252,\r\n  DerivativeMaturityTime = 1253,\r\n  DerivativeSettleOnOpenFlag = 1254,\r\n  DerivativeInstrmtAssignmentMethod = 1255,\r\n  DerivativeSecurityStatus = 1256,\r\n  DerivativeInstrRegistry = 1257,\r\n  DerivativeCountryOfIssue = 1258,\r\n  DerivativeStateOrProvinceOfIssue = 1259,\r\n  DerivativeLocaleOfIssue = 1260,\r\n  DerivativeStrikePrice = 1261,\r\n  DerivativeStrikeCurrency = 1262,\r\n  DerivativeStrikeMultiplier = 1263,\r\n  DerivativeStrikeValue = 1264,\r\n  DerivativeOptAttribute = 1265,\r\n  DerivativeContractMultiplier = 1266,\r\n  DerivativeMinPriceIncrement = 1267,\r\n  DerivativeMinPriceIncrementAmount = 1268,\r\n  DerivativeUnitOfMeasure = 1269,\r\n  DerivativeUnitOfMeasureQty = 1270,\r\n  DerivativeTimeUnit = 1271,\r\n  DerivativeSecurityExchange = 1272,\r\n  DerivativePositionLimit = 1273,\r\n  DerivativeNTPositionLimit = 1274,\r\n  DerivativeIssuer = 1275,\r\n  DerivativeIssueDate = 1276,\r\n  DerivativeEncodedIssuerLen = 1277,\r\n  DerivativeEncodedIssuer = 1278,\r\n  DerivativeSecurityDesc = 1279,\r\n  DerivativeEncodedSecurityDescLen = 1280,\r\n  DerivativeEncodedSecurityDesc = 1281,\r\n/*\r\n********************************************\r\n* Refer to definition SecurityXMLLen(1184) *\r\n********************************************\r\n*/\r\n  DerivativeSecurityXMLLen = 1282,\r\n/*\r\n********************************************\r\n* Refer to definition of SecurityXML(1185) *\r\n********************************************\r\n*/\r\n  DerivativeSecurityXML = 1283,\r\n/*\r\n**************************************************\r\n* Refer to definition of SecurityXMLSchema(1186) *\r\n**************************************************\r\n*/\r\n  DerivativeSecurityXMLSchema = 1284,\r\n  DerivativeContractSettlMonth = 1285,\r\n  NoDerivativeEvents = 1286,\r\n  DerivativeEventType = 1287,\r\n  DerivativeEventDate = 1288,\r\n  DerivativeEventTime = 1289,\r\n  DerivativeEventPx = 1290,\r\n  DerivativeEventText = 1291,\r\n/*\r\n*****************************************\r\n* Refer to definition of NoParties(453) *\r\n*****************************************\r\n*/\r\n  NoDerivativeInstrumentParties = 1292,\r\n/*\r\n***************************************\r\n* Refer to definition of PartyID(448) *\r\n***************************************\r\n*/\r\n  DerivativeInstrumentPartyID = 1293,\r\n/*\r\n*********************************************\r\n* Refer to definition of PartyIDSource(447) *\r\n*********************************************\r\n*/\r\n  DerivativeInstrumentPartyIDSource = 1294,\r\n/*\r\n*****************************************\r\n* REfer to definition of PartyRole(452) *\r\n*****************************************\r\n*/\r\n  DerivativeInstrumentPartyRole = 1295,\r\n/*\r\n**********************************************\r\n* Refer to definition for NoPartySubIDs(802) *\r\n**********************************************\r\n*/\r\n  NoDerivativeInstrumentPartySubIDs = 1296,\r\n/*\r\n*******************************************\r\n* Refer to definition for PartySubID(523) *\r\n*******************************************\r\n*/\r\n  DerivativeInstrumentPartySubID = 1297,\r\n/*\r\n***********************************************\r\n* Refer to definition for PartySubIDType(803) *\r\n***********************************************\r\n*/\r\n  DerivativeInstrumentPartySubIDType = 1298,\r\n/*\r\n**********************************************\r\n* Type of exercise of a derivatives security *\r\n**********************************************\r\n*/\r\n  DerivativeExerciseStyle = 1299,\r\n/*\r\n*********************************\r\n* Identifies the market segment *\r\n*********************************\r\n*/\r\n  MarketSegmentID = 1300,\r\n/*\r\n*************************\r\n* Identifies the Market *\r\n*************************\r\n*/\r\n  MarketID = 1301,\r\n/*\r\n*********************************************************\r\n* Unit of measure for the Maturity Month Year Increment *\r\n*********************************************************\r\n*/\r\n  MaturityMonthYearIncrementUnits = 1302,\r\n/*\r\n**********************************************************\r\n* Format used to generate the MaturityMonthYear for each *\r\n* option                                                 *\r\n**********************************************************\r\n*/\r\n  MaturityMonthYearFormat = 1303,\r\n/*\r\n*****************************************\r\n* Expiration Style for an option class: *\r\n*****************************************\r\n*/\r\n  StrikeExerciseStyle = 1304,\r\n/*\r\n****************************************************\r\n* Describes the how the price limits are expressed *\r\n****************************************************\r\n*/\r\n  SecondaryPriceLimitType = 1305,\r\n/*\r\n****************************************************\r\n* Describes the how the price limits are expressed *\r\n****************************************************\r\n*/\r\n  PriceLimitType = 1306,\r\n/*\r\n***********************************************************\r\n* Indicates execution instructions that are valid for the *\r\n* specified market segment                                *\r\n***********************************************************\r\n*/\r\n  ExecInstValue = 1308,\r\n/*\r\n***********************************************************\r\n* Allows trading rules to be expressed by trading session *\r\n***********************************************************\r\n*/\r\n  NoTradingSessionRules = 1309,\r\n/*\r\n*****************************************************\r\n* Number of Market Segments on which a security may *\r\n* trade.                                            *\r\n*****************************************************\r\n*/\r\n  NoMarketSegments = 1310,\r\n  NoDerivativeInstrAttrib = 1311,\r\n  NoNestedInstrAttrib = 1312,\r\n/*\r\n***********************************************\r\n* Refer to definition of InstrAttribType(871) *\r\n***********************************************\r\n*/\r\n  DerivativeInstrAttribType = 1313,\r\n/*\r\n************************************************\r\n* Refer to definition of InstrAttribValue(872) *\r\n************************************************\r\n*/\r\n  DerivativeInstrAttribValue = 1314,\r\n/*\r\n****************************************************\r\n* Refer to definition for PriceUnitOfMeasure(1191) *\r\n****************************************************\r\n*/\r\n  DerivativePriceUnitOfMeasure = 1315,\r\n/*\r\n******************************************************\r\n* Refer to definition of PriceUnitOfMeasureQty(1192) *\r\n******************************************************\r\n*/\r\n  DerivativePriceUnitOfMeasureQty = 1316,\r\n/*\r\n********************************************\r\n* Refer to definition of SettlMethod(1193) *\r\n********************************************\r\n*/\r\n  DerivativeSettlMethod = 1317,\r\n/*\r\n*************************************************\r\n* Refer to definition of PriceQuoteMethod(1196) *\r\n*************************************************\r\n*/\r\n  DerivativePriceQuoteMethod = 1318,\r\n/*\r\n*************************************************\r\n* Refer to definition of ValuationMethod(1197). *\r\n*************************************************\r\n*/\r\n  DerivativeValuationMethod = 1319,\r\n/*\r\n********************************************************\r\n* Indicates whether instruments are pre-listed only or *\r\n* can also be defined via user request                 *\r\n********************************************************\r\n*/\r\n  DerivativeListMethod = 1320,\r\n/*\r\n*****************************************\r\n* Refer to definition of CapPrice(1199) *\r\n*****************************************\r\n*/\r\n  DerivativeCapPrice = 1321,\r\n/*\r\n*******************************************\r\n* Refer to definition of FloorPrice(1200) *\r\n*******************************************\r\n*/\r\n  DerivativeFloorPrice = 1322,\r\n/*\r\n****************************************************\r\n* Indicates whether an Option is for a put or call *\r\n****************************************************\r\n*/\r\n  DerivativePutOrCall = 1323,\r\n/*\r\n**********************************************************\r\n* If provided, then Instrument occurrence has explicitly *\r\n* changed                                                *\r\n**********************************************************\r\n*/\r\n  ListUpdateAction = 1324,\r\n/*\r\n*********************************************\r\n* Reference to a parent Market Segment. See *\r\n* MarketSegmentID(1300)                     *\r\n*********************************************\r\n*/\r\n  ParentMktSegmID = 1325,\r\n/*\r\n*******************************\r\n* Trading Session description *\r\n*******************************\r\n*/\r\n  TradingSessionDesc = 1326,\r\n/*\r\n********************************************************\r\n* Specifies the action taken for the specified trading *\r\n* sessions.                                            *\r\n********************************************************\r\n*/\r\n  TradSesUpdateAction = 1327,\r\n/*\r\n****************************************************\r\n* Those will be used by Firms to send a reason for *\r\n* rejecting a trade in an allocate claim model.    *\r\n****************************************************\r\n*/\r\n  RejectText = 1328,\r\n/*\r\n**********************************************************\r\n* This is a multiplier that Clearing (Fee system) will   *\r\n* use to calculate fees and will be sent to the firms on *\r\n* their confirms.                                        *\r\n**********************************************************\r\n*/\r\n  FeeMultiplier = 1329,\r\n/*\r\n**************************************\r\n* Refer to definition for Symbol(55) *\r\n**************************************\r\n*/\r\n  UnderlyingLegSymbol = 1330,\r\n/*\r\n*****************************************\r\n* Refer to definition for SymbolSfx(65) *\r\n*****************************************\r\n*/\r\n  UnderlyingLegSymbolSfx = 1331,\r\n/*\r\n******************************************\r\n* Refer to definition for SecurityID(48) *\r\n******************************************\r\n*/\r\n  UnderlyingLegSecurityID = 1332,\r\n/*\r\n************************************************\r\n* Refer to definition for SecurityIDSource(22) *\r\n************************************************\r\n*/\r\n  UnderlyingLegSecurityIDSource = 1333,\r\n/*\r\n************************************************\r\n* Refer to definition for NoSecurityAltID(454) *\r\n************************************************\r\n*/\r\n  NoUnderlyingLegSecurityAltID = 1334,\r\n/*\r\n**********************************************\r\n* Refer to definition for SecurityAltID(455) *\r\n**********************************************\r\n*/\r\n  UnderlyingLegSecurityAltID = 1335,\r\n/*\r\n****************************************************\r\n* Refer to definition for SecurityAltIDSource(456) *\r\n****************************************************\r\n*/\r\n  UnderlyingLegSecurityAltIDSource = 1336,\r\n/*\r\n*********************************************\r\n* Refer to definition for SecurityType(167) *\r\n*********************************************\r\n*/\r\n  UnderlyingLegSecurityType = 1337,\r\n/*\r\n************************************************\r\n* Refer to definition for SecuritySubType(762) *\r\n************************************************\r\n*/\r\n  UnderlyingLegSecuritySubType = 1338,\r\n/*\r\n**************************************************\r\n* Refer to definition for MaturityMonthYear(200) *\r\n**************************************************\r\n*/\r\n  UnderlyingLegMaturityMonthYear = 1339,\r\n/*\r\n********************************************\r\n* Refer to definition for StrikePrice(202) *\r\n********************************************\r\n*/\r\n  UnderlyingLegStrikePrice = 1340,\r\n/*\r\n*************************************************\r\n* Refer to definition for SecurityExchange(207) *\r\n*************************************************\r\n*/\r\n  UnderlyingLegSecurityExchange = 1341,\r\n/*\r\n***********************************************************\r\n* Number of Underlyings, Identifies the Underlying of the *\r\n* Leg                                                     *\r\n***********************************************************\r\n*/\r\n  NoOfLegUnderlyings = 1342,\r\n/*\r\n******************************************\r\n* Refer to definition for PutOrCall(201) *\r\n******************************************\r\n*/\r\n  UnderlyingLegPutOrCall = 1343,\r\n/*\r\n****************************************\r\n* Refer to definition for CFICode(461) *\r\n****************************************\r\n*/\r\n  UnderlyingLegCFICode = 1344,\r\n/*\r\n*********************\r\n* Date of maturity. *\r\n*********************\r\n*/\r\n  UnderlyingLegMaturityDate = 1345,\r\n/*\r\n*********************************\r\n* Unique identifier for request *\r\n*********************************\r\n*/\r\n  ApplReqID = 1346,\r\n/*\r\n***************************************************\r\n* Type of Application Message Request being made. *\r\n***************************************************\r\n*/\r\n  ApplReqType = 1347,\r\n/*\r\n******************************************************\r\n* Used to indicate the type of acknowledgement being *\r\n* sent.                                              *\r\n******************************************************\r\n*/\r\n  ApplResponseType = 1348,\r\n/*\r\n******************************************************\r\n* Total number of messages included in transmission. *\r\n******************************************************\r\n*/\r\n  ApplTotalMessageCount = 1349,\r\n/*\r\n**************************************************\r\n* Application sequence number of last message in *\r\n* transmission                                   *\r\n**************************************************\r\n*/\r\n  ApplLastSeqNum = 1350,\r\n/*\r\n**************************************************\r\n* Specifies number of application id occurrences *\r\n**************************************************\r\n*/\r\n  NoApplIDs = 1351,\r\n/*\r\n**********************************************************\r\n* Used to indicate that a message is being sent in       *\r\n* response to an Application Message Request. It is      *\r\n* possible for both ApplResendFlag and PossDupFlag to be *\r\n* set on the same message if the Sender's cache size is  *\r\n* greater than zero and the message is being resent due  *\r\n* to a session level resend request                      *\r\n**********************************************************\r\n*/\r\n  ApplResendFlag = 1352,\r\n/*\r\n*****************************************************\r\n* Identifier for the Applicaton Message Request Ack *\r\n*****************************************************\r\n*/\r\n  ApplResponseID = 1353,\r\n/*\r\n**********************************************************\r\n* Used to return an error code or text associated with a *\r\n* response to an Application Request.                    *\r\n**********************************************************\r\n*/\r\n  ApplResponseError = 1354,\r\n/*\r\n********************************************************\r\n* Reference to the unique application identifier which *\r\n* corresponds to ApplID(1180) from the Application     *\r\n* Sequence Group component                             *\r\n********************************************************\r\n*/\r\n  RefApplID = 1355,\r\n/*\r\n*************************************************\r\n* Identifier for the Application Sequence Reset *\r\n*************************************************\r\n*/\r\n  ApplReportID = 1356,\r\n/*\r\n**************************************************\r\n* Application sequence number of last message in *\r\n* transmission.                                  *\r\n**************************************************\r\n*/\r\n  RefApplLastSeqNum = 1357,\r\n/*\r\n*****************************************\r\n* Refer to definition of PutOrCall(201) *\r\n*****************************************\r\n*/\r\n  LegPutOrCall = 1358,\r\n/*\r\n**********************************************************\r\n* Total number of fill entries across all messages.      *\r\n* Should be the sum of all NoFills(1362) in each message *\r\n* that has repeating list of fill entries related to the *\r\n* same ExecID(17). Used to support fragmentation.        *\r\n**********************************************************\r\n*/\r\n  TotNoFills = 1361,\r\n  NoFills = 1362,\r\n/*\r\n*********************************************************\r\n* Refer to ExecID(17). Used when multiple partial fills *\r\n* are reported in single Execution Report. ExecID and   *\r\n* FillExecID should not overlap,                        *\r\n*********************************************************\r\n*/\r\n  FillExecID = 1363,\r\n/*\r\n***************************************\r\n* Price of Fill. Refer to LastPx(31). *\r\n***************************************\r\n*/\r\n  FillPx = 1364,\r\n/*\r\n*******************************************\r\n* Quantity of Fill. Refer to LastQty(32). *\r\n*******************************************\r\n*/\r\n  FillQty = 1365,\r\n/*\r\n******************************************************\r\n* The AllocID(70) of an individual leg of a multileg *\r\n* order.                                             *\r\n******************************************************\r\n*/\r\n  LegAllocID = 1366,\r\n/*\r\n****************************************************\r\n* Identifies settlement currency for the leg level *\r\n* allocation.                                      *\r\n****************************************************\r\n*/\r\n  LegAllocSettlCurrency = 1367,\r\n/*\r\n***********************************************************\r\n* Identifies an event related to a TradSesStatus(340). An *\r\n* event occurs and is gone, it is not a state that        *\r\n* applies for a period of time.                           *\r\n***********************************************************\r\n*/\r\n  TradSesEvent = 1368,\r\n/*\r\n**********************************************************\r\n* Unique identifier of Order Mass Cancel Report or Order *\r\n* Mass Action Report message as assigned by sell-side    *\r\n* (broker, exchange, ECN)                                *\r\n**********************************************************\r\n*/\r\n  MassActionReportID = 1369,\r\n/*\r\n***********************************************************\r\n* Number of not affected orders in the repeating group of *\r\n* order ids.                                              *\r\n***********************************************************\r\n*/\r\n  NoNotAffectedOrders = 1370,\r\n/*\r\n*********************************************************\r\n* OrderID(37) of an order not affected by a mass cancel *\r\n* request.                                              *\r\n*********************************************************\r\n*/\r\n  NotAffectedOrderID = 1371,\r\n/*\r\n**********************************************************\r\n* ClOrdID(11) of the previous order (NOT the initial     *\r\n* order of the day) as assigned by the institution, used *\r\n* to identify the previous order in cancel and           *\r\n* cancel/replace requests.                               *\r\n**********************************************************\r\n*/\r\n  NotAffOrigClOrdID = 1372,\r\n/*\r\n******************************************\r\n* Specifies the type of action requested *\r\n******************************************\r\n*/\r\n  MassActionType = 1373,\r\n/*\r\n*************************************************\r\n* Specifies scope of Order Mass Action Request. *\r\n*************************************************\r\n*/\r\n  MassActionScope = 1374,\r\n/*\r\n********************************************************\r\n* Specifies the action taken by counterparty order     *\r\n* handling system as a result of the action type       *\r\n* indicated in MassActionType of the Order Mass Action *\r\n* Request.                                             *\r\n********************************************************\r\n*/\r\n  MassActionResponse = 1375,\r\n/*\r\n*************************************************\r\n* Reason Order Mass Action Request was rejected *\r\n*************************************************\r\n*/\r\n  MassActionRejectReason = 1376,\r\n/*\r\n*****************************************\r\n* Specifies the type of multileg order. *\r\n*****************************************\r\n*/\r\n  MultilegModel = 1377,\r\n/*\r\n***********************************************************\r\n* Code to represent how the multileg price is to be       *\r\n* interpreted when applied to the legs.                   *\r\n* (See Volume : \"Glossary\" for further value definitions) *\r\n***********************************************************\r\n*/\r\n  MultilegPriceMethod = 1378,\r\n/*\r\n**************************************************\r\n* Specifies the volatility of an instrument leg. *\r\n**************************************************\r\n*/\r\n  LegVolatility = 1379,\r\n/*\r\n**********************************************************\r\n* The continuously-compounded annualized dividend yield  *\r\n* of the underlying(s) of an option. Used as a parameter *\r\n* to theoretical option pricing models.                  *\r\n**********************************************************\r\n*/\r\n  DividendYield = 1380,\r\n/*\r\n************************************************\r\n* Refer to definition for DividendYield(1380). *\r\n************************************************\r\n*/\r\n  LegDividendYield = 1381,\r\n/*\r\n**********************************************************\r\n* Specifies the currency ratio between the currency used *\r\n* for a multileg price and the currency used by the      *\r\n* outright book defined by the leg. Example: Multileg    *\r\n* quoted in EUR, outright leg in USD and 1 EUR = 0,7 USD *\r\n* then CurrencyRatio = 0.7                               *\r\n**********************************************************\r\n*/\r\n  CurrencyRatio = 1382,\r\n/*\r\n**********************************************************\r\n* Specifies the currency ratio between the currency used *\r\n* for a multileg price and the currency used by the      *\r\n* outright book defined by the leg. Example: Multileg    *\r\n* quoted in EUR, outright leg in USD and 1 EUR = 0,7 USD *\r\n* then LegCurrencyRatio = 0.7                            *\r\n**********************************************************\r\n*/\r\n  LegCurrencyRatio = 1383,\r\n/*\r\n*******************************\r\n* Refer to ExecInst(18)       *\r\n* Same values as ExecInst(18) *\r\n*******************************\r\n*/\r\n  LegExecInst = 1384,\r\n/*\r\n************************************\r\n* Defines the type of contingency. *\r\n************************************\r\n*/\r\n  ContingencyType = 1385,\r\n/*\r\n***********************************************************\r\n* Identifies the reason for rejection of a New Order List *\r\n* message. Note that OrdRejReason(103) is used if the     *\r\n* rejection is based on properties of an individual order *\r\n* part of the List.                                       *\r\n***********************************************************\r\n*/\r\n  ListRejectReason = 1386,\r\n/*\r\n****************************************\r\n* Number of trade reporting indicators *\r\n****************************************\r\n*/\r\n  NoTrdRepIndicators = 1387,\r\n/*\r\n**********************************************************\r\n* Identifies the type of party for trade reporting. Same *\r\n* values as PartyRole(452).                              *\r\n**********************************************************\r\n*/\r\n  TrdRepPartyRole = 1388,\r\n/*\r\n***********************************************************\r\n* Specifies whether the trade should be reported (or not) *\r\n* to parties of the provided TrdRepPartyRole(1388). Used  *\r\n* to override standard reporting behavior by the receiver *\r\n* of the trade report and thereby complements the         *\r\n* PublTrdIndicator( tag1390).                             *\r\n***********************************************************\r\n*/\r\n  TrdRepIndicator = 1389,\r\n/*\r\n**********************************************************\r\n* Indicates if a trade should be reported via a market   *\r\n* reporting service. The indicator governs all reporting *\r\n* services of the recipient. Replaces                    *\r\n* PublishTrdIndicator(852).                              *\r\n**********************************************************\r\n*/\r\n  TradePublishIndicator = 1390,\r\n/*\r\n********************************************\r\n* Refer to definition of OptAttribute(206) *\r\n********************************************\r\n*/\r\n  UnderlyingLegOptAttribute = 1391,\r\n/*\r\n********************************************\r\n* Refer to definition of SecurityDesc(107) *\r\n********************************************\r\n*/\r\n  UnderlyingLegSecurityDesc = 1392,\r\n/*\r\n*****************************************************\r\n* Unique ID of a Market Definition Request message. *\r\n*****************************************************\r\n*/\r\n  MarketReqID = 1393,\r\n/*\r\n*****************************************\r\n* Market Definition message identifier. *\r\n*****************************************\r\n*/\r\n  MarketReportID = 1394,\r\n/*\r\n************************************************\r\n* Specifies the action taken for the specified *\r\n* MarketID(1301) + MarketSegmentID(1300).      *\r\n************************************************\r\n*/\r\n  MarketUpdateAction = 1395,\r\n/*\r\n*****************************************\r\n* Description or name of Market Segment *\r\n*****************************************\r\n*/\r\n  MarketSegmentDesc = 1396,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedMktSegmDesc(1324) field.               *\r\n*************************************************\r\n*/\r\n  EncodedMktSegmDescLen = 1397,\r\n/*\r\n**********************************************************\r\n* Encoded (non-ASCII characters) representation of the   *\r\n* MarketSegmDesc(1396) field in the encoded format       *\r\n* specified via the MessageEncoding(347) field. If used, *\r\n* the ASCII (English) representation should also be      *\r\n* specified in the MarketSegmDesc field.                 *\r\n**********************************************************\r\n*/\r\n  EncodedMktSegmDesc = 1398,\r\n/*\r\n******************************************************\r\n* Used to specify a new application sequence number. *\r\n******************************************************\r\n*/\r\n  ApplNewSeqNum = 1399,\r\n/*\r\n***********************************************************\r\n* Enumeration defining the encryption method used to      *\r\n* encrypt password fields.                                *\r\n* At this time there are no encryption methods defined by *\r\n* FPL.                                                    *\r\n***********************************************************\r\n*/\r\n  EncryptedPasswordMethod = 1400,\r\n/*\r\n***********************************************\r\n* Length of the EncryptedPassword(1402) field *\r\n***********************************************\r\n*/\r\n  EncryptedPasswordLen = 1401,\r\n/*\r\n***********************************************************\r\n* Encrypted password - encrypted via the method specified *\r\n* in the field EncryptedPasswordMethod(1400)              *\r\n***********************************************************\r\n*/\r\n  EncryptedPassword = 1402,\r\n/*\r\n**************************************************\r\n* Length of the EncryptedNewPassword(1404) field *\r\n**************************************************\r\n*/\r\n  EncryptedNewPasswordLen = 1403,\r\n/*\r\n********************************************************\r\n* Encrypted new password - encrypted via the method    *\r\n* specified in the field EncryptedPasswordMethod(1400) *\r\n********************************************************\r\n*/\r\n  EncryptedNewPassword = 1404,\r\n/*\r\n*******************************************************\r\n* Time of security's maturity expressed in local time *\r\n* with offset to UTC specified                        *\r\n*******************************************************\r\n*/\r\n  UnderlyingLegMaturityTime = 1405,\r\n/*\r\n************************************************\r\n* The extension pack number associated with an *\r\n* application message.                         *\r\n************************************************\r\n*/\r\n  RefApplExtID = 1406,\r\n/*\r\n***********************************************************\r\n* The extension pack number that is the default for a FIX *\r\n* session.                                                *\r\n***********************************************************\r\n*/\r\n  DefaultApplExtID = 1407,\r\n/*\r\n*********************************************************\r\n* The default custom application version ID that is the *\r\n* default for a session.                                *\r\n*********************************************************\r\n*/\r\n  DefaultCstmApplVerID = 1408,\r\n/*\r\n***************************\r\n* Status of a FIX session *\r\n***************************\r\n*/\r\n  SessionStatus = 1409,\r\n  DefaultVerIndicator = 1410,\r\n/*\r\n**********************************************\r\n* Refer to definition of PartySubIDType(803) *\r\n**********************************************\r\n*/\r\n  Nested4PartySubIDType = 1411,\r\n/*\r\n******************************************\r\n* Refer to definition of PartySubID(523) *\r\n******************************************\r\n*/\r\n  Nested4PartySubID = 1412,\r\n/*\r\n*********************************************\r\n* Refer to definition of NoPartySubIDs(802) *\r\n*********************************************\r\n*/\r\n  NoNested4PartySubIDs = 1413,\r\n/*\r\n******************************************\r\n* Refer to definition of NoPartyIDs(453) *\r\n******************************************\r\n*/\r\n  NoNested4PartyIDs = 1414,\r\n/*\r\n***************************************\r\n* Refer to definition of PartyID(448) *\r\n***************************************\r\n*/\r\n  Nested4PartyID = 1415,\r\n/*\r\n*********************************************\r\n* Refer to definition of PartyIDSource(447) *\r\n*********************************************\r\n*/\r\n  Nested4PartyIDSource = 1416,\r\n/*\r\n*****************************************\r\n* Refer to definition of PartyRole(452) *\r\n*****************************************\r\n*/\r\n  Nested4PartyRole = 1417,\r\n/*\r\n****************************************\r\n* Fill quantity for the leg instrument *\r\n****************************************\r\n*/\r\n  LegLastQty = 1418,\r\n/*\r\n**********************************************\r\n* Type of exercise of a derivatives security *\r\n**********************************************\r\n*/\r\n  UnderlyingExerciseStyle = 1419,\r\n/*\r\n**********************************************\r\n* Type of exercise of a derivatives security *\r\n**********************************************\r\n*/\r\n  LegExerciseStyle = 1420,\r\n/*\r\n****************************************************\r\n* Refer to definition for PriceUnitOfMeasure(1191) *\r\n****************************************************\r\n*/\r\n  LegPriceUnitOfMeasure = 1421,\r\n/*\r\n******************************************************\r\n* Refer to definition of PriceUnitOfMeasureQty(1192) *\r\n******************************************************\r\n*/\r\n  LegPriceUnitOfMeasureQty = 1422,\r\n/*\r\n*************************************************\r\n* Refer to definition of UnitOfMeasureQty(1147) *\r\n*************************************************\r\n*/\r\n  UnderlyingUnitOfMeasureQty = 1423,\r\n/*\r\n****************************************************\r\n* Refer to definition for PriceUnitOfMeasure(1191) *\r\n****************************************************\r\n*/\r\n  UnderlyingPriceUnitOfMeasure = 1424,\r\n/*\r\n******************************************************\r\n* Refer to definition of PriceUnitOfMeasureQty(1192) *\r\n******************************************************\r\n*/\r\n  UnderlyingPriceUnitOfMeasureQty = 1425,\r\n/*\r\n******************\r\n* Type of report *\r\n******************\r\n*/\r\n  ApplReportType = 1426,\r\n/*\r\n***********************************************************\r\n* When reporting trades, used to reference the identifier *\r\n* of the execution (ExecID) being reported if different   *\r\n* ExecIDs were assigned to each side of the trade.        *\r\n***********************************************************\r\n*/\r\n  SideExecID = 1427,\r\n/*\r\n**********************************************************\r\n* Time lapsed from order entry until match, based on the *\r\n* unit of time specified in OrderDelayUnit.  Default is  *\r\n* seconds if OrderDelayUnit is not specified. Value = 0, *\r\n* indicates the aggressor (the initiating side of the    *\r\n* trade).                                                *\r\n**********************************************************\r\n*/\r\n  OrderDelay = 1428,\r\n/*\r\n********************************************************\r\n* Time unit in which the OrderDelay(1428) is expressed *\r\n********************************************************\r\n*/\r\n  OrderDelayUnit = 1429,\r\n/*\r\n***********************************************************\r\n* Identifies the type of venue where a trade was executed *\r\n***********************************************************\r\n*/\r\n  VenueType = 1430,\r\n/*\r\n****************************************\r\n* The reason for updating the RefOrdID *\r\n****************************************\r\n*/\r\n  RefOrdIDReason = 1431,\r\n/*\r\n***********************************************************\r\n* The customer capacity for this trade at the time of the *\r\n* order/execution.                                        *\r\n* Primarily used by futures exchanges to indicate the     *\r\n* CTICode (customer type indicator) as required by the US *\r\n* CFTC (Commodity Futures Trading Commission).            *\r\n***********************************************************\r\n*/\r\n  OrigCustOrderCapacity = 1432,\r\n/*\r\n******************************************************\r\n* Used to reference a previously submitted ApplReqID *\r\n* (1346) from within a subsequent                    *\r\n* ApplicationMessageRequest(MsgType=BW)              *\r\n******************************************************\r\n*/\r\n  RefApplReqID = 1433,\r\n/*\r\n******************************\r\n* Type of pricing model used *\r\n******************************\r\n*/\r\n  ModelType = 1434,\r\n/*\r\n***********************************************************\r\n* Indicates the type of multiplier being applied to the   *\r\n* contract. Can be optionally used to further define what *\r\n* unit ContractMultiplier(tag 231) is expressed in.       *\r\n***********************************************************\r\n*/\r\n  ContractMultiplierUnit = 1435,\r\n/*\r\n***********************************************************\r\n* \"Indicates the type of multiplier being applied to the  *\r\n* contract. Can be optionally used to further define what *\r\n* unit LegContractMultiplier(tag 614) is expressed in.    *\r\n***********************************************************\r\n*/\r\n  LegContractMultiplierUnit = 1436,\r\n/*\r\n***********************************************************\r\n* Indicates the type of multiplier being applied to the   *\r\n* contract. Can be optionally used to further define what *\r\n* unit UndlyContractMultiplier(tag 436) is expressed in.  *\r\n***********************************************************\r\n*/\r\n  UnderlyingContractMultiplierUnit = 1437,\r\n/*\r\n***********************************************************\r\n* Indicates the type of multiplier being applied to the   *\r\n* contract. Can be optionally used to further define what *\r\n* unit DerivativeContractMultiplier(tag 1266)is expressed *\r\n* in.                                                     *\r\n***********************************************************\r\n*/\r\n  DerivativeContractMultiplierUnit = 1438,\r\n/*\r\n*********************************************************\r\n* The industry standard flow schedule by which          *\r\n* electricity or natural gas is traded. Schedules exist *\r\n* by regions and on-peak and off-peak status, such as   *\r\n* \"Western Peak\".                                       *\r\n*********************************************************\r\n*/\r\n  FlowScheduleType = 1439,\r\n/*\r\n*********************************************************\r\n* The industry standard flow schedule by which          *\r\n* electricity or natural gas is traded. Schedules exist *\r\n* by regions and on-peak and off-peak status, such as   *\r\n* \"Western Peak\".                                       *\r\n*********************************************************\r\n*/\r\n  LegFlowScheduleType = 1440,\r\n/*\r\n*********************************************************\r\n* The industry standard flow schedule by which          *\r\n* electricity or natural gas is traded. Schedules exist *\r\n* by regions and on-peak and off-peak status, such as   *\r\n* \"Western Peak\".                                       *\r\n*********************************************************\r\n*/\r\n  UnderlyingFlowScheduleType = 1441,\r\n/*\r\n*********************************************************\r\n* The industry standard flow schedule by which          *\r\n* electricity or natural gas is traded. Schedules exist *\r\n* by regions and on-peak and off-peak status, such as   *\r\n* \"Western Peak\".                                       *\r\n*********************************************************\r\n*/\r\n  DerivativeFlowScheduleType = 1442,\r\n/*\r\n***********************************************************\r\n* Indicator to identify whether this fill was a result of *\r\n* a liquidity provider providing or liquidity taker       *\r\n* taking the liquidity. Applicable only for OrdStatus of  *\r\n* Partial or Filled                                       *\r\n***********************************************************\r\n*/\r\n  FillLiquidityInd = 1443,\r\n/*\r\n***********************************************************\r\n* Indicator to identify whether this fill was a result of *\r\n* a liquidity provider providing or liquidity taker       *\r\n* taking the liquidity. Applicable only for OrdStatus of  *\r\n* Partial or Filled.                                      *\r\n***********************************************************\r\n*/\r\n  SideLiquidityInd = 1444,\r\n/*\r\n*******************************************\r\n* Number of rate sources being specified. *\r\n*******************************************\r\n*/\r\n  NoRateSources = 1445,\r\n/*\r\n***********************************************************\r\n* Identifies the source of rate information.              *\r\n* For FX, the reference source to be used for the FX spot *\r\n* rate.                                                   *\r\n***********************************************************\r\n*/\r\n  RateSource = 1446,\r\n/*\r\n****************************************************\r\n* Indicates whether the rate source specified is a *\r\n* primary or secondary source.                     *\r\n****************************************************\r\n*/\r\n  RateSourceType = 1447,\r\n/*\r\n**********************************************************\r\n* Identifies the reference \"page\" from the rate source.  *\r\n* For FX, the reference page to the spot rate to be used *\r\n* for the reference FX spot rate.                        *\r\n**********************************************************\r\n*/\r\n  ReferencePage = 1448,\r\n/*\r\n*********************************************************\r\n* A category of CDS credit even in which the underlying *\r\n* bond experiences a restructuring.                     *\r\n* Used to define a CDS instrument.                      *\r\n*********************************************************\r\n*/\r\n  RestructuringType = 1449,\r\n/*\r\n********************************************************\r\n* Specifies which issue (underlying bond) will receive *\r\n* payment priority in the event of a default.          *\r\n* Used to define a CDS instrument.                     *\r\n********************************************************\r\n*/\r\n  Seniority = 1450,\r\n/*\r\n**********************************************************\r\n* Indicates the notional percentage of the deal that is  *\r\n* still outstanding based on the remaining components of *\r\n* the index.                                             *\r\n* Used to calculate the true value of a CDS trade or     *\r\n* start.                                              *\r\n**********************************************************\r\n*/\r\n  NotionalPercentageOutstanding = 1451,\r\n/*\r\n***************************************************\r\n* Used to reflect the Original value prior to the *\r\n* application of a credit event. See              *\r\n* NotionalPercentageOutstanding(1451).            *\r\n***************************************************\r\n*/\r\n  OriginalNotionalPercentageOutstanding = 1452,\r\n/*\r\n*******************************\r\n* See RestructuringType(1449) *\r\n*******************************\r\n*/\r\n  UnderlyingRestructuringType = 1453,\r\n/*\r\n***********************\r\n* See Seniority(1450) *\r\n***********************\r\n*/\r\n  UnderlyingSeniority = 1454,\r\n/*\r\n*******************************************\r\n* See NotionalPercentageOutstanding(1451) *\r\n*******************************************\r\n*/\r\n  UnderlyingNotionalPercentageOutstanding = 1455,\r\n/*\r\n***************************************************\r\n* See OriginalNotionalPercentageOutstanding(1452) *\r\n***************************************************\r\n*/\r\n  UnderlyingOriginalNotionalPercentageOutstanding = 1456,\r\n/*\r\n***********************************************************\r\n* Lower bound percentage of the loss that the tranche can *\r\n* endure.                                                 *\r\n***********************************************************\r\n*/\r\n  AttachmentPoint = 1457,\r\n/*\r\n******************************************************\r\n* Upper bound percentage of the loss the tranche can *\r\n* endure.                                            *\r\n******************************************************\r\n*/\r\n  DetachmentPoint = 1458,\r\n/*\r\n******************************\r\n* See AttachmentPoint(1457). *\r\n******************************\r\n*/\r\n  UnderlyingAttachmentPoint = 1459,\r\n/*\r\n******************************\r\n* See DetachmentPoint(1458). *\r\n******************************\r\n*/\r\n  UnderlyingDetachmentPoint = 1460,\r\n/*\r\n***********************************************************\r\n* Identifies the number of target parties identified in a *\r\n* mass action.                                            *\r\n***********************************************************\r\n*/\r\n  NoTargetPartyIDs = 1461,\r\n/*\r\n*********************************************************\r\n* PartyID value within an target party repeating group. *\r\n*********************************************************\r\n*/\r\n  TargetPartyID = 1462,\r\n/*\r\n********************************************************\r\n* PartyIDSource value within an target party repeating *\r\n* group.                                               *\r\n* Same values as PartyIDSource (447)                   *\r\n********************************************************\r\n*/\r\n  TargetPartyIDSource = 1463,\r\n/*\r\n***********************************************************\r\n* PartyRole value within an target party repeating group. *\r\n* Same values as PartyRole (452)                          *\r\n***********************************************************\r\n*/\r\n  TargetPartyRole = 1464,\r\n/*\r\n***********************************************\r\n* Specifies an identifier for a Security List *\r\n***********************************************\r\n*/\r\n  SecurityListID = 1465,\r\n/*\r\n***********************************************************\r\n* Specifies a reference from one Security List to         *\r\n* another. Used to support a hierarchy of Security Lists. *\r\n***********************************************************\r\n*/\r\n  SecurityListRefID = 1466,\r\n/*\r\n*******************************************************\r\n* Specifies a description or name of a Security List. *\r\n*******************************************************\r\n*/\r\n  SecurityListDesc = 1467,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedSecurityListDesc (tbd) field.          *\r\n*************************************************\r\n*/\r\n  EncodedSecurityListDescLen = 1468,\r\n/*\r\n***********************************************************\r\n* Encoded (non-ASCII characters) representation of the    *\r\n* SecurityListDesc (1467) field in the encoded format     *\r\n* specified via the MessageEncoding (347) field. If used, *\r\n* the ASCII (English) representation should also be       *\r\n* specified in the SecurityListDesc field.                *\r\n***********************************************************\r\n*/\r\n  EncodedSecurityListDesc = 1469,\r\n/*\r\n**************************************\r\n* Specifies a type of Security List. *\r\n**************************************\r\n*/\r\n  SecurityListType = 1470,\r\n/*\r\n*******************************************************\r\n* Specifies a specific source for a SecurityListType. *\r\n* Relevant when a certain type can be provided from   *\r\n* various sources.                                    *\r\n*******************************************************\r\n*/\r\n  SecurityListTypeSource = 1471,\r\n/*\r\n****************************************\r\n* Unique identifier for a News message *\r\n****************************************\r\n*/\r\n  NewsID = 1472,\r\n/*\r\n****************************\r\n* Category of news mesage. *\r\n****************************\r\n*/\r\n  NewsCategory = 1473,\r\n/*\r\n***************************************************\r\n* The national language in which the news item is *\r\n* provided.                                       *\r\n***************************************************\r\n*/\r\n  LanguageCode = 1474,\r\n/*\r\n**********************************\r\n* Number of News reference items *\r\n**********************************\r\n*/\r\n  NoNewsRefIDs = 1475,\r\n/*\r\n***************************************************\r\n* Reference to another News message identified by *\r\n* NewsID(1474).                                   *\r\n***************************************************\r\n*/\r\n  NewsRefID = 1476,\r\n/*\r\n***********************************************************\r\n* Type of reference to another News Message item. Defines *\r\n* if the referenced news item is a replacement, is in a   *\r\n* different language, or is complimentary.                *\r\n***********************************************************\r\n*/\r\n  NewsRefType = 1477,\r\n/*\r\n***********************************************************\r\n* Specifies how the strike price is determined at the     *\r\n* point of option exercise. The strike may be fixed       *\r\n* throughout the life of the option, set at expiration to *\r\n* the value of the underlying, set to the average value   *\r\n* of the underlying , or set to the optimal value of the  *\r\n* underlying.                                             *\r\n* Conditionally, required if value is other than \"fixed\". *\r\n***********************************************************\r\n*/\r\n  StrikePriceDeterminationMethod = 1478,\r\n/*\r\n********************************************************\r\n* Specifies the boundary condition to be used for the  *\r\n* strike price relative to the underlying price at the *\r\n* point of option exercise.                            *\r\n********************************************************\r\n*/\r\n  StrikePriceBoundaryMethod = 1479,\r\n/*\r\n**********************************************************\r\n* Used in combination with StrikePriceBoundaryMethod to  *\r\n* specify the percentage of the strike price in relation *\r\n* to the  underlying price. The percentage is generally  *\r\n* 100 or greater for puts and 100 or less for calls.     *\r\n**********************************************************\r\n*/\r\n  StrikePriceBoundaryPrecision = 1480,\r\n/*\r\n***********************************************************\r\n* Specifies how the underlying price is determined at the *\r\n* point of option exercise. The underlying price may be   *\r\n* set to the current settlement price, set to a special   *\r\n* reference, set to the optimal value of the underlying   *\r\n* during the defined period (\"Look-back\") or set to the   *\r\n* average value of the underlying during the defined      *\r\n* period (\"Asian option\").                                *\r\n***********************************************************\r\n*/\r\n  UnderlyingPriceDeterminationMethod = 1481,\r\n/*\r\n*********************************************************\r\n* Indicates the type of payout that will result from an *\r\n* in-the-money option.                                  *\r\n*********************************************************\r\n*/\r\n  OptPayoutType = 1482,\r\n/*\r\n****************************************\r\n* Number of complex event occurrences. *\r\n****************************************\r\n*/\r\n  NoComplexEvents = 1483,\r\n/*\r\n*****************************************\r\n* Identifies the type of complex event. *\r\n*****************************************\r\n*/\r\n  ComplexEventType = 1484,\r\n/*\r\n*********************************************************\r\n* Cash amount indicating the pay out associated with an *\r\n* event. For binary options this is a fixed amount.     *\r\n*********************************************************\r\n*/\r\n  ComplexOptPayoutAmount = 1485,\r\n/*\r\n**********************************************************\r\n* Specifies the price at which the complex event takes   *\r\n* effect. Impact of the event price is determined by the *\r\n* ComplexEventType(1484).                                *\r\n**********************************************************\r\n*/\r\n  ComplexEventPrice = 1486,\r\n/*\r\n*******************************************************\r\n* Specifies the boundary condition to be used for the *\r\n* event price relative to the underlying price at the *\r\n* point the complex event outcome takes effect as     *\r\n* determined by the ComplexEventPriceTimeType.        *\r\n*******************************************************\r\n*/\r\n  ComplexEventPriceBoundaryMethod = 1487,\r\n/*\r\n********************************************************\r\n* Used in combination with                             *\r\n* ComplexEventPriceBoundaryMethod to specify the       *\r\n* percentage of the strike price in relation to the    *\r\n* underlying price. The percentage is generally 100 or *\r\n* greater for puts and 100 or less for calls.          *\r\n********************************************************\r\n*/\r\n  ComplexEventPriceBoundaryPrecision = 1488,\r\n/*\r\n**********************************************************\r\n* Specifies when the complex event outcome takes effect. *\r\n* The outcome of a complex event is a payout or barrier  *\r\n* action as specified by the ComplexEventType.           *\r\n**********************************************************\r\n*/\r\n  ComplexEventPriceTimeType = 1489,\r\n/*\r\n***********************************************************\r\n* Specifies the condition between complex events when     *\r\n* more than one event is specified.                       *\r\n* Multiple barrier events would use an \"or\" condition     *\r\n* since only one can be effective at a given time. A set  *\r\n* of digital range events would use an \"and\" condition    *\r\n* since both conditions must be in effect for a payout to *\r\n* result.                                                 *\r\n***********************************************************\r\n*/\r\n  ComplexEventCondition = 1490,\r\n/*\r\n********************************************************\r\n* Number of complex event date occurrences for a given *\r\n* complex event.                                       *\r\n********************************************************\r\n*/\r\n  NoComplexEventDates = 1491,\r\n/*\r\n***********************************************************\r\n* Specifies the start date of the date range on which a   *\r\n* complex event is effective. The start date will be set  *\r\n* equal to the end date for single day events such as     *\r\n* Bermuda options                                         *\r\n* ComplexEventStartDate must always be less than or equal *\r\n* to ComplexEventEndDate.                                 *\r\n***********************************************************\r\n*/\r\n  ComplexEventStartDate = 1492,\r\n/*\r\n**********************************************************\r\n* Specifies the end date of the date range on which a    *\r\n* complex event is effective. The start date will be set *\r\n* equal to the end date for single day events such as    *\r\n* Bermuda options                                        *\r\n* ComplexEventEndDate must always be greater than or     *\r\n* equal to ComplexEventStartDate.                        *\r\n**********************************************************\r\n*/\r\n  ComplexEventEndDate = 1493,\r\n/*\r\n********************************************************\r\n* Number of complex event time occurrences for a given *\r\n* complex event date                                   *\r\n* The default in case of an absence of time fields is  *\r\n* 00:00:00-23:59:59.                                   *\r\n********************************************************\r\n*/\r\n  NoComplexEventTimes = 1494,\r\n/*\r\n***********************************************************\r\n* Specifies the start time of the time range on which a   *\r\n* complex event date is effective.                        *\r\n* ComplexEventStartTime must always be less than or equal *\r\n* to ComplexEventEndTime.                                 *\r\n***********************************************************\r\n*/\r\n  ComplexEventStartTime = 1495,\r\n/*\r\n*******************************************************\r\n* Specifies the end time of the time range on which a *\r\n* complex event date is effective.                    *\r\n* ComplexEventEndTime must always be greater than or  *\r\n* equal to ComplexEventStartTime.                     *\r\n*******************************************************\r\n*/\r\n  ComplexEventEndTime = 1496,\r\n/*\r\n*******************************************************\r\n* Unique identifier for the stream assignment request *\r\n* provided by the requester.                          *\r\n*******************************************************\r\n*/\r\n  StreamAsgnReqID = 1497,\r\n/*\r\n**************************************\r\n* Type of stream assignment request. *\r\n**************************************\r\n*/\r\n  StreamAsgnReqType = 1498,\r\n/*\r\n**********************************\r\n* Number of assignment requests. *\r\n**********************************\r\n*/\r\n  NoAsgnReqs = 1499,\r\n/*\r\n***********************************************\r\n* The identifier or name of the price stream. *\r\n***********************************************\r\n*/\r\n  MDStreamID = 1500,\r\n/*\r\n*****************************************************\r\n* Unique identifier of the stream assignment report *\r\n* provided by the respondent.                       *\r\n*****************************************************\r\n*/\r\n  StreamAsgnRptID = 1501,\r\n/*\r\n*****************************************************\r\n* Reason code for stream assignment request reject. *\r\n*****************************************************\r\n*/\r\n  StreamAsgnRejReason = 1502,\r\n/*\r\n****************************\r\n* Type of acknowledgement. *\r\n****************************\r\n*/\r\n  StreamAsgnAckType = 1503,\r\n/*\r\n************************\r\n* See TransactTime(60) *\r\n************************\r\n*/\r\n  RelSymTransactTime = 1504,\r\n/*\r\n*******************************************************\r\n* The type of assignment being affected in the Stream *\r\n* Assignment Report.                                  *\r\n*******************************************************\r\n*/\r\n  StreamAsgnType = 1617\r\n\r\n}\r\n"]}