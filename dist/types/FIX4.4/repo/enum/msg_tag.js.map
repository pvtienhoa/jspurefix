{"version":3,"file":"msg_tag.js","sourceRoot":"","sources":["../../../../../src/types/FIX4.4/repo/enum/msg_tag.ts"],"names":[],"mappings":"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","sourcesContent":["export enum MsgTag {\r\n/*\r\n***************************************************************\r\n* Account mnemonic as agreed between buy and sell sides, e.g. *\r\n* broker and institution or investor/intermediary and fund    *\r\n* manager.                                                    *\r\n***************************************************************\r\n*/\r\n  Account = 1,\r\n/*\r\n*************************************************\r\n* Unique identifier of advertisement message.   *\r\n* (Prior to FIX 4.1 this field was of type int) *\r\n*************************************************\r\n*/\r\n  AdvId = 2,\r\n/*\r\n*****************************************************\r\n* Reference identifier used with CANCEL and REPLACE *\r\n* transaction types.                                *\r\n* (Prior to FIX 4.1 this field was of type int)     *\r\n*****************************************************\r\n*/\r\n  AdvRefID = 3,\r\n/*\r\n*************************************\r\n* Broker's side of advertised trade *\r\n*************************************\r\n*/\r\n  AdvSide = 4,\r\n/*\r\n*****************************************************\r\n* Identifies advertisement message transaction type *\r\n*****************************************************\r\n*/\r\n  AdvTransType = 5,\r\n/*\r\n***************************************************************\r\n* Calculated average price of all fills on this order.        *\r\n* For Fixed Income trades AvgPx is always expressed as        *\r\n* percent-of-par, regardless of the PriceType (423) of LastPx *\r\n* (3). I.e., AvgPx will contain an average of percent-of-par  *\r\n* values (see LastParPx (669)) for issues traded in Yield,    *\r\n* Spread or Discount.                                         *\r\n***************************************************************\r\n*/\r\n  AvgPx = 6,\r\n/*\r\n***********************************************************\r\n* Message sequence number of first message in range to be *\r\n* resent                                                  *\r\n***********************************************************\r\n*/\r\n  BeginSeqNo = 7,\r\n/*\r\n*************************************************************\r\n* Identifies beginning of new message and protocol version. *\r\n* ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted)       *\r\n*************************************************************\r\n*/\r\n  BeginString = 8,\r\n/*\r\n************************************************************\r\n* Message length, in bytes, forward to the CheckSum field. *\r\n* ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)     *\r\n************************************************************\r\n*/\r\n  BodyLength = 9,\r\n/*\r\n****************************************************************\r\n* Three byte, simple checksum (see Volume 2: \"Checksum         *\r\n* Calculation\" for description). ALWAYS LAST FIELD IN MESSAGE; *\r\n* i.e. serves, with the trailing <SOH>, as the end-of-message  *\r\n* delimiter. Always defined as three characters. (Always       *\r\n* unencrypted)                                                 *\r\n****************************************************************\r\n*/\r\n  CheckSum = 10,\r\n/*\r\n***************************************************************\r\n* Unique identifier for Order as assigned by the buy-side     *\r\n* (institution, broker, intermediary etc.) (identified by     *\r\n* SenderCompID (49) or OnBehalfOfCompID (5) as appropriate).  *\r\n* Uniqueness must be guaranteed within a single trading day.  *\r\n* Firms, particularly those which electronically submit       *\r\n* multi-day orders, trade globally or throughout market close *\r\n* periods, should ensure uniqueness across days, for example  *\r\n* by embedding a date within the ClOrdID field.               *\r\n***************************************************************\r\n*/\r\n  ClOrdID = 11,\r\n/*\r\n**************************************************************\r\n* Commission. Note if CommType (3) is percentage, Commission *\r\n* of 5% should be represented as .05.                        *\r\n**************************************************************\r\n*/\r\n  Commission = 12,\r\n/*\r\n*******************\r\n* Commission type *\r\n*******************\r\n*/\r\n  CommType = 13,\r\n/*\r\n**************************************************\r\n* Total quantity (e.g. number of shares) filled. *\r\n* (Prior to FIX 4.2 this field was of type int)  *\r\n**************************************************\r\n*/\r\n  CumQty = 14,\r\n/*\r\n****************************************************************\r\n* Identifies currency used for price. Absence of this field is *\r\n* interpreted as the default for the security. It is           *\r\n* recommended that systems provide the currency value whenever *\r\n* possible. See \"Appendix 6-A: Valid Currency Codes\" for       *\r\n* information on obtaining valid values.                       *\r\n****************************************************************\r\n*/\r\n  Currency = 15,\r\n/*\r\n***************************************************************\r\n* Message sequence number of last message in range to be      *\r\n* resent. If request is for a single message BeginSeqNo (7) = *\r\n* EndSeqNo. If request is for all messages subsequent to a    *\r\n* particular message, EndSeqNo = \"0\" (representing infinity). *\r\n***************************************************************\r\n*/\r\n  EndSeqNo = 16,\r\n/*\r\n***************************************************************\r\n* Unique identifier of execution message as assigned by       *\r\n* sell-side (broker, exchange, ECN) (will be 0 (zero) for     *\r\n* ExecType (50) =I (Order Status)). Uniqueness must be        *\r\n* guaranteed within a single trading day or the life of a     *\r\n* multi-day order. Firms which accept multi-day orders should *\r\n* consider embedding a date within the ExecID field to assure *\r\n* uniqueness across days. (Prior to FIX 4.1 this field was of *\r\n* type int)                                                   *\r\n***************************************************************\r\n*/\r\n  ExecID = 17,\r\n/*\r\n****************************************************************\r\n* Instructions for order handling on exchange trading floor.   *\r\n* If more than one instruction is applicable to an order, this *\r\n* field can contain multiple instructions separated by space.  *\r\n****************************************************************\r\n*/\r\n  ExecInst = 18,\r\n/*\r\n*********************************************************\r\n* Reference identifier used with Trade Cancel and Trade *\r\n* Correct execution types.                              *\r\n* (Prior to FIX 4.1 this field was of type int)         *\r\n*********************************************************\r\n*/\r\n  ExecRefID = 19,\r\n/*\r\n***********************************************************\r\n* Instructions for order handling on Broker trading floor *\r\n***********************************************************\r\n*/\r\n  HandlInst = 21,\r\n/*\r\n************************************************************\r\n* Identifies class or source of the SecurityID (48) value. *\r\n* Required if SecurityID is specified.                     *\r\n************************************************************\r\n*/\r\n  SecurityIDSource = 22,\r\n/*\r\n*************************************************\r\n* Unique identifier of IOI message.             *\r\n* (Prior to FIX 4.1 this field was of type int) *\r\n*************************************************\r\n*/\r\n  IOIID = 23,\r\n/*\r\n**********************************\r\n* Relative quality of indication *\r\n**********************************\r\n*/\r\n  IOIQltyInd = 25,\r\n/*\r\n******************************************************\r\n* Reference identifier used with CANCEL and REPLACE, *\r\n* transaction types.                                 *\r\n* (Prior to FIX 4.1 this field was of type int)      *\r\n******************************************************\r\n*/\r\n  IOIRefID = 26,\r\n/*\r\n****************************************************************\r\n* Quantity (e.g. number of shares) in numeric form or relative *\r\n* size.                                                        *\r\n****************************************************************\r\n*/\r\n  IOIQty = 27,\r\n/*\r\n*******************************************\r\n* Identifies IOI message transaction type *\r\n*******************************************\r\n*/\r\n  IOITransType = 28,\r\n/*\r\n**************************************\r\n* Broker capacity in order execution *\r\n**************************************\r\n*/\r\n  LastCapacity = 29,\r\n/*\r\n**************************************************************\r\n* Market of execution for last fill, or an indication of the *\r\n* market where an order was routed                           *\r\n* Valid values:                                              *\r\n* See \"Appendix 6-C\"                                         *\r\n**************************************************************\r\n*/\r\n  LastMkt = 30,\r\n/*\r\n******************************\r\n* Price of this (last) fill. *\r\n******************************\r\n*/\r\n  LastPx = 31,\r\n/*\r\n***********************************************************\r\n* Quantity (e.g. shares) bought/sold on this (last) fill. *\r\n* (Prior to FIX 4.2 this field was of type int)           *\r\n***********************************************************\r\n*/\r\n  LastQty = 32,\r\n/*\r\n*******************************************\r\n* Identifies number of lines of text body *\r\n*******************************************\r\n*/\r\n  NoLinesOfText = 33,\r\n/*\r\n***********************************\r\n* Integer message sequence number *\r\n***********************************\r\n*/\r\n  MsgSeqNum = 34,\r\n/*\r\n***************************************************************\r\n* Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always *\r\n* unencrypted)                                                *\r\n* Note: A \"U\" as the first character in the MsgType field     *\r\n* (i.e. U, U2, etc) indicates that the message format is      *\r\n* privately defined between the sender and receiver.          *\r\n***************************************************************\r\n*/\r\n  MsgType = 35,\r\n/*\r\n***********************\r\n* New sequence number *\r\n***********************\r\n*/\r\n  NewSeqNo = 36,\r\n/*\r\n**************************************************************\r\n* Unique identifier for Order as assigned by sell-side       *\r\n* (broker, exchange, ECN). Uniqueness must be guaranteed     *\r\n* within a single trading day. Firms which accept multi-day  *\r\n* orders should consider embedding a date within the OrderID *\r\n* field to assure uniqueness across days.                    *\r\n**************************************************************\r\n*/\r\n  OrderID = 37,\r\n/*\r\n**************************************************************\r\n* Quantity ordered. This represents the number of shares for *\r\n* equities or par, face or nominal value for FI instruments. *\r\n* (Prior to FIX 4.2 this field was of type int)              *\r\n**************************************************************\r\n*/\r\n  OrderQty = 38,\r\n/*\r\n***************************************************************\r\n* Identifies current status of order.                         *\r\n* *** SOME VALUES HAVE BEEN REPLACED - See \"Replaced Features *\r\n* and Supported Approach\" ***                                 *\r\n* (see Volume : \"Glossary\" for value definitions)             *\r\n***************************************************************\r\n*/\r\n  OrdStatus = 39,\r\n/*\r\n********************************************************\r\n* Order type                                           *\r\n* *** SOME VALUES ARE NO LONGER USED - See \"Deprecated *\r\n* (Phased-out) Features and Supported Approach\" ***    *\r\n* (see Volume : \"Glossary\" for value definitions)      *\r\n********************************************************\r\n*/\r\n  OrdType = 40,\r\n/*\r\n**************************************************************\r\n* ClOrdID () of the previous order (NOT the initial order of *\r\n* the day) as assigned by the institution, used to identify  *\r\n* the previous order in cancel and cancel/replace requests.  *\r\n**************************************************************\r\n*/\r\n  OrigClOrdID = 41,\r\n/*\r\n********************************************************\r\n* Time of message origination (always expressed in UTC *\r\n* (Universal Time Coordinated, also known as \"GMT\"))   *\r\n********************************************************\r\n*/\r\n  OrigTime = 42,\r\n/*\r\n**********************************************************\r\n* Indicates possible retransmission of message with this *\r\n* sequence number                                        *\r\n**********************************************************\r\n*/\r\n  PossDupFlag = 43,\r\n/*\r\n***********************************************\r\n* Price per unit of quantity (e.g. per share) *\r\n***********************************************\r\n*/\r\n  Price = 44,\r\n/*\r\n*************************************\r\n* Reference message sequence number *\r\n*************************************\r\n*/\r\n  RefSeqNum = 45,\r\n/*\r\n**************************************************************\r\n* Security identifier value of SecurityIDSource (22) type    *\r\n* (e.g. CUSIP, SEDOL, ISIN, etc). Requires SecurityIDSource. *\r\n**************************************************************\r\n*/\r\n  SecurityID = 48,\r\n/*\r\n*********************************************************\r\n* Assigned value used to identify firm sending message. *\r\n*********************************************************\r\n*/\r\n  SenderCompID = 49,\r\n/*\r\n***************************************************************\r\n* Assigned value used to identify specific message originator *\r\n* (desk, trader, etc.)                                        *\r\n***************************************************************\r\n*/\r\n  SenderSubID = 50,\r\n/*\r\n*********************************************************\r\n* Time of message transmission (always expressed in UTC *\r\n* (Universal Time Coordinated, also known as \"GMT\")     *\r\n*********************************************************\r\n*/\r\n  SendingTime = 52,\r\n/*\r\n**************************************************\r\n* Overall/total quantity (e.g. number of shares) *\r\n* (Prior to FIX 4.2 this field was of type int)  *\r\n**************************************************\r\n*/\r\n  Quantity = 53,\r\n/*\r\n*****************\r\n* Side of order *\r\n*****************\r\n*/\r\n  Side = 54,\r\n/*\r\n***************************************************************\r\n* Ticker symbol. Common, \"human understood\" representation of *\r\n* the security. SecurityID (48) value can be specified if no  *\r\n* symbol exists (e.g. non-exchange traded Collective          *\r\n* Investment Vehicles)                                        *\r\n* Use \"[N/A]\" for products which do not have a symbol.        *\r\n***************************************************************\r\n*/\r\n  Symbol = 55,\r\n/*\r\n***************************************************\r\n* Assigned value used to identify receiving firm. *\r\n***************************************************\r\n*/\r\n  TargetCompID = 56,\r\n/*\r\n***************************************************************\r\n* Assigned value used to identify specific individual or unit *\r\n* intended to receive message. \"ADMIN\" reserved for           *\r\n* administrative messages not intended for a specific user.   *\r\n***************************************************************\r\n*/\r\n  TargetSubID = 57,\r\n/*\r\n***************************************************************\r\n* Free format text string                                     *\r\n* (Note: this field does not have a specified maximum length) *\r\n***************************************************************\r\n*/\r\n  Text = 58,\r\n/*\r\n**************************************************************\r\n* Specifies how long the order remains in effect. Absence of *\r\n* this field is interpreted as DAY.                          *\r\n**************************************************************\r\n*/\r\n  TimeInForce = 59,\r\n/*\r\n******************************************************\r\n* Time of execution/order creation (expressed in UTC *\r\n* (Universal Time Coordinated, also known as \"GMT\")  *\r\n******************************************************\r\n*/\r\n  TransactTime = 60,\r\n/*\r\n****************\r\n* Urgency flag *\r\n****************\r\n*/\r\n  Urgency = 61,\r\n/*\r\n***************************************************************\r\n* Indicates expiration time of indication message (always     *\r\n* expressed in UTC (Universal Time Coordinated, also known as *\r\n* \"GMT\")                                                      *\r\n***************************************************************\r\n*/\r\n  ValidUntilTime = 62,\r\n/*\r\n****************************************************************\r\n* Indicates order settlement period. If present, SettlDate     *\r\n* (64) overrides this field. If both SettlType (63) and        *\r\n* SettDate (64) are omitted, the default for SettlType (63) is *\r\n* 0 (Regular)                                                  *\r\n* Regular is defined as the default settlement period for the  *\r\n* particular security on the exchange of execution.            *\r\n* In Fixed Income the contents of this field may influence the *\r\n* instrument definition if the SecurityID (48) is ambiguous.   *\r\n* In the US an active Treasury offering may be re-opened, and  *\r\n* for a time one CUSIP will apply to both the current and      *\r\n* \"when-issued\" securities. Supplying a value of \"7\" clarifies *\r\n* the instrument description; any other value or the absence   *\r\n* of this field should cause the respondent to default to the  *\r\n* active issue.                                                *\r\n****************************************************************\r\n*/\r\n  SettlType = 63,\r\n/*\r\n***************************************************************\r\n* Specific date of trade settlement (SettlementDate) in       *\r\n* YYYYMMDD format.                                            *\r\n* If present, this field overrides SettlType (63). This field *\r\n* is required if the value of SettlType (63) is 6 (Future) or *\r\n* 8 (Sellers Option). This field must be omitted if the value *\r\n* of SettlType (63) is 7 (When and If Issued)                 *\r\n* (expressed in local time at place of settlement)            *\r\n***************************************************************\r\n*/\r\n  SettlDate = 64,\r\n/*\r\n**************************************************************\r\n* Additional information about the security (e.g. preferred, *\r\n* warrants, etc.). Note also see SecurityType (67).          *\r\n* Valid values:                                              *\r\n* As defined in the NYSE Stock and bond Symbol Directory and *\r\n* in the AMEX Fitch Directory                                *\r\n* Fixed Income use:                                          *\r\n* WI = \"When Issued\" for a security to be reissued under an  *\r\n* old CUSIP or ISIN                                          *\r\n* CD = a EUCP with lump-sum interest rather than discount    *\r\n* price                                                      *\r\n**************************************************************\r\n*/\r\n  SymbolSfx = 65,\r\n/*\r\n****************************************************************\r\n* Unique identifier for list as assigned by institution, used  *\r\n* to associate multiple individual orders. Uniqueness must be  *\r\n* guaranteed within a single trading day. Firms which generate *\r\n* multi-day orders should consider embedding a date within the *\r\n* ListID field to assure uniqueness across days.               *\r\n****************************************************************\r\n*/\r\n  ListID = 66,\r\n/*\r\n***************************************************************\r\n* Sequence of individual order within list (i.e. ListSeqNo of *\r\n* TotNoOrders (68), 2 of 25, 3 of 25, . . . )                 *\r\n***************************************************************\r\n*/\r\n  ListSeqNo = 67,\r\n/*\r\n***************************************************************\r\n* Total number of list order entries across all messages.     *\r\n* Should be the sum of all NoOrders (73) in each message that *\r\n* has repeating list order entries related to the same ListID *\r\n* (66). Used to support fragmentation.                        *\r\n* (Prior to FIX 4.2 this field was named \"ListNoOrds\")        *\r\n***************************************************************\r\n*/\r\n  TotNoOrders = 68,\r\n/*\r\n*********************************************************\r\n* Free format text message containing list handling and *\r\n* execution instructions.                               *\r\n*********************************************************\r\n*/\r\n  ListExecInst = 69,\r\n/*\r\n*************************************************\r\n* Unique identifier for allocation message.     *\r\n* (Prior to FIX 4.1 this field was of type int) *\r\n*************************************************\r\n*/\r\n  AllocID = 70,\r\n/*\r\n***************************************************************\r\n* Identifies allocation transaction type                      *\r\n* *** SOME VALUES HAVE BEEN REPLACED - See \"Replaced Features *\r\n* and Supported Approach\" ***                                 *\r\n***************************************************************\r\n*/\r\n  AllocTransType = 71,\r\n/*\r\n***********************************************************\r\n* Reference identifier to be used with AllocTransType (7) *\r\n* =Replace or Cancel.                                     *\r\n* (Prior to FIX 4.1 this field was of type int)           *\r\n***********************************************************\r\n*/\r\n  RefAllocID = 72,\r\n/*\r\n*********************************************************\r\n* Indicates number of orders to be combined for average *\r\n* pricing and allocation.                               *\r\n*********************************************************\r\n*/\r\n  NoOrders = 73,\r\n/*\r\n***************************************************************\r\n* Indicates number of decimal places to be used for average   *\r\n* pricing. Absence of this field indicates that default       *\r\n* precision arranged by the broker/institution is to be used. *\r\n***************************************************************\r\n*/\r\n  AvgPxPrecision = 74,\r\n/*\r\n****************************************************************\r\n* Indicates date of trade referenced in this message in        *\r\n* YYYYMMDD format. Absence of this field indicates current day *\r\n* (expressed in local time at place of trade).                 *\r\n****************************************************************\r\n*/\r\n  TradeDate = 75,\r\n/*\r\n***************************************************************\r\n* Indicates whether the resulting position after a trade      *\r\n* should be an opening position or closing position. Used for *\r\n* omnibus accounting - where accounts are held on a gross     *\r\n* basis instead of being netted together.                     *\r\n***************************************************************\r\n*/\r\n  PositionEffect = 77,\r\n/*\r\n**********************************************************\r\n* Number of repeating AllocAccount (79)/AllocPrice (366) *\r\n* entries.                                               *\r\n**********************************************************\r\n*/\r\n  NoAllocs = 78,\r\n/*\r\n************************\r\n* Sub-account mnemonic *\r\n************************\r\n*/\r\n  AllocAccount = 79,\r\n/*\r\n****************************************************\r\n* Quantity to be allocated to specific sub-account *\r\n* (Prior to FIX 4.2 this field was of type int)    *\r\n****************************************************\r\n*/\r\n  AllocQty = 80,\r\n/*\r\n*************************************************************\r\n* Processing code for sub-account. Absence of this field in *\r\n* AllocAccount (79) / AllocPrice (366) /AllocQty (80) /     *\r\n* ProcessCode instance indicates regular trade.             *\r\n*************************************************************\r\n*/\r\n  ProcessCode = 81,\r\n/*\r\n******************************************\r\n* Total number of reports within series. *\r\n******************************************\r\n*/\r\n  NoRpts = 82,\r\n/*\r\n****************************************************\r\n* Sequence number of message within report series. *\r\n****************************************************\r\n*/\r\n  RptSeq = 83,\r\n/*\r\n*************************************************\r\n* Total quantity canceled for this order.       *\r\n* (Prior to FIX 4.2 this field was of type int) *\r\n*************************************************\r\n*/\r\n  CxlQty = 84,\r\n/*\r\n****************************************************************\r\n* Number of delivery instruction fields in repeating group.    *\r\n* Note this field was removed in FIX 4.1 and reinstated in FIX *\r\n* 4.4.                                                         *\r\n****************************************************************\r\n*/\r\n  NoDlvyInst = 85,\r\n/*\r\n***********************************\r\n* Identifies status of allocation *\r\n***********************************\r\n*/\r\n  AllocStatus = 87,\r\n/*\r\n***********************************\r\n* Identifies reason for rejection *\r\n***********************************\r\n*/\r\n  AllocRejCode = 88,\r\n/*\r\n************************\r\n* Electronic signature *\r\n************************\r\n*/\r\n  Signature = 89,\r\n/*\r\n*******************************\r\n* Length of encrypted message *\r\n*******************************\r\n*/\r\n  SecureDataLen = 90,\r\n/*\r\n********************************\r\n* Actual encrypted data stream *\r\n********************************\r\n*/\r\n  SecureData = 91,\r\n/*\r\n***************************************\r\n* Number of bytes in signature field. *\r\n***************************************\r\n*/\r\n  SignatureLength = 93,\r\n/*\r\n**********************\r\n* Email message type *\r\n**********************\r\n*/\r\n  EmailType = 94,\r\n/*\r\n**************************************\r\n* Number of bytes in raw data field. *\r\n**************************************\r\n*/\r\n  RawDataLength = 95,\r\n/*\r\n*************************************************************\r\n* Unformatted raw data, can include bitmaps, word processor *\r\n* documents, etc.                                           *\r\n*************************************************************\r\n*/\r\n  RawData = 96,\r\n/*\r\n****************************************************************\r\n* Indicates that message may contain information that has been *\r\n* sent under another sequence number.                          *\r\n****************************************************************\r\n*/\r\n  PossResend = 97,\r\n/*\r\n************************\r\n* Method of encryption *\r\n************************\r\n*/\r\n  EncryptMethod = 98,\r\n/*\r\n***********************************************\r\n* Price per unit of quantity (e.g. per share) *\r\n***********************************************\r\n*/\r\n  StopPx = 99,\r\n/*\r\n**************************************************************\r\n* Execution destination as defined by institution when order *\r\n* is entered.                                                *\r\n* Valid values:                                              *\r\n* See \"Appendix 6-C\"                                         *\r\n**************************************************************\r\n*/\r\n  ExDestination = 100,\r\n/*\r\n************************************************\r\n* Code to identify reason for cancel rejection *\r\n************************************************\r\n*/\r\n  CxlRejReason = 102,\r\n/*\r\n************************************************\r\n* Code to identify reason for order rejection. *\r\n************************************************\r\n*/\r\n  OrdRejReason = 103,\r\n/*\r\n***************************\r\n* Code to qualify IOI use *\r\n***************************\r\n*/\r\n  IOIQualifier = 104,\r\n/*\r\n***********************************************************\r\n* Name of security issuer (e.g. International Business    *\r\n* Machines, GNMA).                                        *\r\n* see also Volume 7: \"PRODUCT: FIXED INCOME - Euro Issuer *\r\n* Values\"                                                 *\r\n***********************************************************\r\n*/\r\n  Issuer = 106,\r\n/*\r\n*************************\r\n* Security description. *\r\n*************************\r\n*/\r\n  SecurityDesc = 107,\r\n/*\r\n********************************\r\n* Heartbeat interval (seconds) *\r\n********************************\r\n*/\r\n  HeartBtInt = 108,\r\n/*\r\n*************************************************\r\n* Minimum quantity of an order to be executed.  *\r\n* (Prior to FIX 4.2 this field was of type int) *\r\n*************************************************\r\n*/\r\n  MinQty = 110,\r\n/*\r\n***************************************************************\r\n* Maximum quantity (e.g. number of shares) within an order to *\r\n* be shown on the exchange floor at any given time.           *\r\n* (Prior to FIX 4.2 this field was of type int)               *\r\n***************************************************************\r\n*/\r\n  MaxFloor = 111,\r\n/*\r\n**************************************************************\r\n* Identifier included in Test Request message to be returned *\r\n* in resulting Heartbeat                                     *\r\n**************************************************************\r\n*/\r\n  TestReqID = 112,\r\n/*\r\n******************************************************\r\n* Identifies party of trade responsible for exchange *\r\n* reporting.                                         *\r\n******************************************************\r\n*/\r\n  ReportToExch = 113,\r\n/*\r\n**********************************************************\r\n* Indicates whether the broker is to locate the stock in *\r\n* conjunction with a short sell order.                   *\r\n**********************************************************\r\n*/\r\n  LocateReqd = 114,\r\n/*\r\n****************************************************************\r\n* Assigned value used to identify firm originating message if  *\r\n* the message was delivered by a third party i.e. the third    *\r\n* party firm identifier would be delivered in the SenderCompID *\r\n* field and the firm originating the message in this field.    *\r\n****************************************************************\r\n*/\r\n  OnBehalfOfCompID = 115,\r\n/*\r\n***************************************************************\r\n* Assigned value used to identify specific message originator *\r\n* (i.e. trader) if the message was delivered by a third party *\r\n***************************************************************\r\n*/\r\n  OnBehalfOfSubID = 116,\r\n/*\r\n*******************************\r\n* Unique identifier for quote *\r\n*******************************\r\n*/\r\n  QuoteID = 117,\r\n/*\r\n***************************************************************\r\n* Total amount due as the result of the transaction (e.g. for *\r\n* Buy order - principal + commission + fees) reported in      *\r\n* currency of execution.                                      *\r\n***************************************************************\r\n*/\r\n  NetMoney = 118,\r\n/*\r\n***************************************************************\r\n* Total amount due expressed in settlement currency (includes *\r\n* the effect of the forex transaction)                        *\r\n***************************************************************\r\n*/\r\n  SettlCurrAmt = 119,\r\n/*\r\n*********************************************\r\n* Currency code of settlement denomination. *\r\n*********************************************\r\n*/\r\n  SettlCurrency = 120,\r\n/*\r\n*********************************************************\r\n* Indicates request for forex accommodation trade to be *\r\n* executed along with security transaction.             *\r\n*********************************************************\r\n*/\r\n  ForexReq = 121,\r\n/*\r\n**************************************************************\r\n* Original time of message transmission (always expressed in *\r\n* UTC (Universal Time Coordinated, also known as \"GMT\") when *\r\n* transmitting orders as the result of a resend request.     *\r\n**************************************************************\r\n*/\r\n  OrigSendingTime = 122,\r\n/*\r\n************************************************************\r\n* Indicates that the Sequence Reset message is replacing   *\r\n* administrative or application messages which will not be *\r\n* resent.                                                  *\r\n************************************************************\r\n*/\r\n  GapFillFlag = 123,\r\n/*\r\n******************************************************\r\n* No of execution repeating group entries to follow. *\r\n******************************************************\r\n*/\r\n  NoExecs = 124,\r\n/*\r\n***************************************************************\r\n* Time/Date of order expiration (always expressed in UTC      *\r\n* (Universal Time Coordinated, also known as \"GMT\")           *\r\n* The meaning of expiration is specific to the context where  *\r\n* the field is used.                                          *\r\n* For orders, this is the expiration time of a Good Til Date  *\r\n* TimeInForce.                                                *\r\n* For Quotes - this is the expiration of the quote.           *\r\n* Expiration time is provided across the quote message dialog *\r\n* to control the length of time of the overall quoting        *\r\n* process.                                                    *\r\n* For collateral requests, this is the time by which          *\r\n* collateral must be assigned.                                *\r\n* For collateral assignments, this is the time by which a     *\r\n* response to the assignment is expected.                     *\r\n***************************************************************\r\n*/\r\n  ExpireTime = 126,\r\n/*\r\n**********************************\r\n* Reason for execution rejection *\r\n**********************************\r\n*/\r\n  DKReason = 127,\r\n/*\r\n****************************************************************\r\n* Assigned value used to identify the firm targeted to receive *\r\n* the message if the message is delivered by a third party     *\r\n* i.e. the third party firm identifier would be delivered in   *\r\n* the TargetCompID (56) field and the ultimate receiver firm   *\r\n* ID in this field.                                            *\r\n****************************************************************\r\n*/\r\n  DeliverToCompID = 128,\r\n/*\r\n**************************************************************\r\n* Assigned value used to identify specific message recipient *\r\n* (i.e. trader) if the message is delivered by a third party *\r\n**************************************************************\r\n*/\r\n  DeliverToSubID = 129,\r\n/*\r\n****************************************************************\r\n* Indicates that IOI is the result of an existing agency order *\r\n* or a facilitation position resulting from an agency order,   *\r\n* not from principal trading or order solicitation activity.   *\r\n****************************************************************\r\n*/\r\n  IOINaturalFlag = 130,\r\n/*\r\n***************************************\r\n* Unique identifier for quote request *\r\n***************************************\r\n*/\r\n  QuoteReqID = 131,\r\n/*\r\n******************\r\n* Bid price/rate *\r\n******************\r\n*/\r\n  BidPx = 132,\r\n/*\r\n********************\r\n* Offer price/rate *\r\n********************\r\n*/\r\n  OfferPx = 133,\r\n/*\r\n*************************************************\r\n* Quantity of bid                               *\r\n* (Prior to FIX 4.2 this field was of type int) *\r\n*************************************************\r\n*/\r\n  BidSize = 134,\r\n/*\r\n*************************************************\r\n* Quantity of offer                             *\r\n* (Prior to FIX 4.2 this field was of type int) *\r\n*************************************************\r\n*/\r\n  OfferSize = 135,\r\n/*\r\n****************************************************\r\n* Number of repeating groups of miscellaneous fees *\r\n****************************************************\r\n*/\r\n  NoMiscFees = 136,\r\n/*\r\n***************************\r\n* Miscellaneous fee value *\r\n***************************\r\n*/\r\n  MiscFeeAmt = 137,\r\n/*\r\n*********************************\r\n* Currency of miscellaneous fee *\r\n*********************************\r\n*/\r\n  MiscFeeCurr = 138,\r\n/*\r\n***************************************\r\n* Indicates type of miscellaneous fee *\r\n***************************************\r\n*/\r\n  MiscFeeType = 139,\r\n/*\r\n***************************************\r\n* Previous closing price of security. *\r\n***************************************\r\n*/\r\n  PrevClosePx = 140,\r\n/*\r\n***********************************************************\r\n* Indicates that the both sides of the FIX session should *\r\n* reset sequence numbers.                                 *\r\n***********************************************************\r\n*/\r\n  ResetSeqNumFlag = 141,\r\n/*\r\n****************************************************************\r\n* Assigned value used to identify specific message             *\r\n* originator\u0019s location (i.e. geographic location and/or desk, *\r\n* trader)                                                      *\r\n****************************************************************\r\n*/\r\n  SenderLocationID = 142,\r\n/*\r\n***********************************************************\r\n* Assigned value used to identify specific message        *\r\n* destination\u0019s location (i.e. geographic location and/or *\r\n* desk, trader)                                           *\r\n***********************************************************\r\n*/\r\n  TargetLocationID = 143,\r\n/*\r\n****************************************************************\r\n* Assigned value used to identify specific message             *\r\n* originator\u0019s location (i.e. geographic location and/or desk, *\r\n* trader) if the message was delivered by a third party        *\r\n****************************************************************\r\n*/\r\n  OnBehalfOfLocationID = 144,\r\n/*\r\n****************************************************************\r\n* Assigned value used to identify specific message recipient\u0019s *\r\n* location (i.e. geographic location and/or desk, trader) if   *\r\n* the message was delivered by a third party                   *\r\n****************************************************************\r\n*/\r\n  DeliverToLocationID = 145,\r\n/*\r\n********************************************************\r\n* Specifies the number of repeating symbols specified. *\r\n********************************************************\r\n*/\r\n  NoRelatedSym = 146,\r\n/*\r\n***********************************\r\n* The subject of an Email message *\r\n***********************************\r\n*/\r\n  Subject = 147,\r\n/*\r\n**********************************\r\n* The headline of a News message *\r\n**********************************\r\n*/\r\n  Headline = 148,\r\n/*\r\n****************************************************************\r\n* A URI (Uniform Resource Identifier) or URL (Uniform Resource *\r\n* Locator) link to additional information (i.e.                *\r\n* http://www.XYZ.com/research.html)                            *\r\n* See \"Appendix 6-B FIX Fields Based Upon Other Standards\"     *\r\n****************************************************************\r\n*/\r\n  URLLink = 149,\r\n/*\r\n***************************************************************\r\n* Describes the specific ExecutionRpt (i.e. Pending Cancel)   *\r\n* while OrdStatus (39) will always identify the current order *\r\n* status (i.e. Partially Filled)                              *\r\n* *** SOME VALUES HAVE BEEN REPLACED - See \"Replaced Features *\r\n* and Supported Approach\" ***                                 *\r\n***************************************************************\r\n*/\r\n  ExecType = 150,\r\n/*\r\n****************************************************************\r\n* Quantity open for further execution. If the OrdStatus (39)   *\r\n* is Canceled, DoneForTheDay, Expired, Calculated, or Rejected *\r\n* (in which case the order is no longer active) then LeavesQty *\r\n* could be 0, otherwise LeavesQty = OrderQty (38) \u0013 CumQty     *\r\n* (4).                                                         *\r\n* (Prior to FIX 4.2 this field was of type int)                *\r\n****************************************************************\r\n*/\r\n  LeavesQty = 151,\r\n/*\r\n**************************************************************\r\n* Specifies the approximate order quantity desired in total  *\r\n* monetary units vs. as tradeable units (e.g. number of      *\r\n* shares). The broker or fund manager (for CIV orders) would *\r\n* be responsible for converting and calculating a tradeable  *\r\n* unit (e.g. share) quantity (OrderQty (38)) based upon this *\r\n* amount to be used for the actual order and subsequent      *\r\n* messages.                                                  *\r\n**************************************************************\r\n*/\r\n  CashOrderQty = 152,\r\n/*\r\n************************************************************\r\n* AvgPx (6) for a specific AllocAccount (79)               *\r\n* For Fixed Income this is always expressed as \"percent of *\r\n* par\" price type.                                         *\r\n************************************************************\r\n*/\r\n  AllocAvgPx = 153,\r\n/*\r\n*************************************************\r\n* NetMoney (8) for a specific AllocAccount (79) *\r\n*************************************************\r\n*/\r\n  AllocNetMoney = 154,\r\n/*\r\n***************************************************************\r\n* Foreign exchange rate used to compute SettlCurrAmt (9) from *\r\n* Currency (5) to SettlCurrency (20)                          *\r\n***************************************************************\r\n*/\r\n  SettlCurrFxRate = 155,\r\n/*\r\n***********************************************************\r\n* Specifies whether or not SettlCurrFxRate (55) should be *\r\n* multiplied or divided                                   *\r\n***********************************************************\r\n*/\r\n  SettlCurrFxRateCalc = 156,\r\n/*\r\n**************************************************************\r\n* Number of Days of Interest for convertible bonds and fixed *\r\n* income. Note value may be negative.                        *\r\n**************************************************************\r\n*/\r\n  NumDaysInterest = 157,\r\n/*\r\n****************************************************************\r\n* The amount the buyer compensates the seller for the portion  *\r\n* of the next coupon interest payment the seller has earned    *\r\n* but will not receive from the issuer because the issuer will *\r\n* send the next coupon payment to the buyer. Accrued Interest  *\r\n* Rate is the annualized Accrued Interest amount divided by    *\r\n* the purchase price of the bond.                              *\r\n****************************************************************\r\n*/\r\n  AccruedInterestRate = 158,\r\n/*\r\n**************************************************************\r\n* Amount of Accrued Interest for convertible bonds and fixed *\r\n* income                                                     *\r\n**************************************************************\r\n*/\r\n  AccruedInterestAmt = 159,\r\n/*\r\n***************************************************************\r\n* Indicates mode used for Settlement Instructions message.    *\r\n* *** SOME VALUES HAVE BEEN REPLACED - See \"Replaced Features *\r\n* and Supported Approach\" ***                                 *\r\n***************************************************************\r\n*/\r\n  SettlInstMode = 160,\r\n/*\r\n*************************************************************\r\n* Free format text related to a specific AllocAccount (79). *\r\n*************************************************************\r\n*/\r\n  AllocText = 161,\r\n/*\r\n*************************************************\r\n* Unique identifier for Settlement Instruction. *\r\n*************************************************\r\n*/\r\n  SettlInstID = 162,\r\n/*\r\n****************************************************\r\n* Settlement Instructions message transaction type *\r\n****************************************************\r\n*/\r\n  SettlInstTransType = 163,\r\n/*\r\n***********************************************************\r\n* Unique identifier for an email thread (new and chain of *\r\n* replies)                                                *\r\n***********************************************************\r\n*/\r\n  EmailThreadID = 164,\r\n/*\r\n***********************************************\r\n* Indicates source of Settlement Instructions *\r\n***********************************************\r\n*/\r\n  SettlInstSource = 165,\r\n/*\r\n***************************************************************\r\n* Indicates type of security. See also the Product (460) and  *\r\n* CFICode (46) fields. It is recommended that CFICode be used *\r\n* instead of SecurityType for non-Fixed Income instruments.   *\r\n* Example values (grouped by Product field value) (Note:      *\r\n* additional values may be used by mutual agreement of the    *\r\n* counterparties):                                            *\r\n* * Identify the Issuer in the \"Issuer\" field(06)             *\r\n* *** REPLACED values - See \"Replaced Features and Supported  *\r\n* Approach\" ***                                               *\r\n* NOTE: Additional values may be used by mutual agreement of  *\r\n* the counterparties)                                         *\r\n***************************************************************\r\n*/\r\n  SecurityType = 167,\r\n/*\r\n**************************************************************\r\n* Time the details within the message should take effect     *\r\n* (always expressed in UTC (Universal Time Coordinated, also *\r\n* known as \"GMT\")                                            *\r\n**************************************************************\r\n*/\r\n  EffectiveTime = 168,\r\n/*\r\n*****************************************************\r\n* Identifies the Standing Instruction database used *\r\n*****************************************************\r\n*/\r\n  StandInstDbType = 169,\r\n/*\r\n**************************************************************\r\n* Name of the Standing Instruction database represented with *\r\n* StandInstDbType (69) (i.e. the Global Custodian\u0019s name).   *\r\n**************************************************************\r\n*/\r\n  StandInstDbName = 170,\r\n/*\r\n****************************************************************\r\n* Unique identifier used on the Standing Instructions database *\r\n* for the Standing Instructions to be referenced.              *\r\n****************************************************************\r\n*/\r\n  StandInstDbID = 171,\r\n/*\r\n*********************************\r\n* Identifies type of settlement *\r\n*********************************\r\n*/\r\n  SettlDeliveryType = 172,\r\n/*\r\n**********************\r\n* Bid F/X spot rate. *\r\n**********************\r\n*/\r\n  BidSpotRate = 188,\r\n/*\r\n****************************************************************\r\n* Bid F/X forward points added to spot rate. May be a negative *\r\n* value.                                                       *\r\n****************************************************************\r\n*/\r\n  BidForwardPoints = 189,\r\n/*\r\n************************\r\n* Offer F/X spot rate. *\r\n************************\r\n*/\r\n  OfferSpotRate = 190,\r\n/*\r\n*********************************************************\r\n* Offer F/X forward points added to spot rate. May be a *\r\n* negative value.                                       *\r\n*********************************************************\r\n*/\r\n  OfferForwardPoints = 191,\r\n/*\r\n*********************************************************\r\n* OrderQty (38) of the future part of a F/X swap order. *\r\n*********************************************************\r\n*/\r\n  OrderQty2 = 192,\r\n/*\r\n*********************************************************\r\n* SettDate (64) of the future part of a F/X swap order. *\r\n*********************************************************\r\n*/\r\n  SettlDate2 = 193,\r\n/*\r\n******************\r\n* F/X spot rate. *\r\n******************\r\n*/\r\n  LastSpotRate = 194,\r\n/*\r\n***********************************************************\r\n* F/X forward points added to LastSpotRate (94). May be a *\r\n* negative value.                                         *\r\n***********************************************************\r\n*/\r\n  LastForwardPoints = 195,\r\n/*\r\n***************************************************************\r\n* Can be used to link two different Allocation messages (each *\r\n* with unique AllocID (70)) together, i.e. for F/X \"Netting\"  *\r\n* or \"Swaps\". Should be unique.                               *\r\n***************************************************************\r\n*/\r\n  AllocLinkID = 196,\r\n/*\r\n**************************************************************\r\n* Identifies the type of Allocation linkage when AllocLinkID *\r\n* (96) is used.                                              *\r\n**************************************************************\r\n*/\r\n  AllocLinkType = 197,\r\n/*\r\n****************************************************************\r\n* Assigned by the party which accepts the order. Can be used   *\r\n* to provide the OrderID (37) used by an exchange or executing *\r\n* system.                                                      *\r\n****************************************************************\r\n*/\r\n  SecondaryOrderID = 198,\r\n/*\r\n*****************************************************\r\n* Number of repeating groups of IOIQualifiers (04). *\r\n*****************************************************\r\n*/\r\n  NoIOIQualifiers = 199,\r\n/*\r\n****************************************************************\r\n* Can be used with standardized derivatives vs. the            *\r\n* MaturityDate (54) field. Month and Year of the maturity      *\r\n* (used for standardized futures and options).                 *\r\n* Format:                                                      *\r\n* YYYYMM (i.e. 199903)                                         *\r\n* YYYYMMDD (20030323)                                          *\r\n* YYYYMMwN (200303w) for week                                  *\r\n* A specific date or can be appended to the MaturityMonthYear. *\r\n* For instance, if multiple standard products exist that       *\r\n* mature in the same Year and Month, but actually mature at a  *\r\n* different time, a value can be appended, such as \"w\" or \"w2\" *\r\n* to indicate week as opposed to week 2 expiration. Likewise,  *\r\n* the date (0-3) can be appended to indicate a specific        *\r\n* expiration (maturity date).                                  *\r\n****************************************************************\r\n*/\r\n  MaturityMonthYear = 200,\r\n/*\r\n****************************************************\r\n* Indicates whether an Option is for a put or call *\r\n****************************************************\r\n*/\r\n  PutOrCall = 201,\r\n/*\r\n*******************************\r\n* Strike Price for an Option. *\r\n*******************************\r\n*/\r\n  StrikePrice = 202,\r\n/*\r\n*************************************************\r\n* Used for derivative products, such as options *\r\n*************************************************\r\n*/\r\n  CoveredOrUncovered = 203,\r\n/*\r\n****************************************************************\r\n* Can be used for SecurityType (67) =OPT to identify a         *\r\n* particular security.                                         *\r\n* Valid values vary by SecurityExchange:                       *\r\n* *** REPLACED values - See \"Replaced Features and Supported   *\r\n* Approach\" ***                                                *\r\n* For Exchange: MONEP (Paris)                                  *\r\n* L = Long (a.k.a. \"American\")                                 *\r\n* S = Short (a.k.a. \"European\")                                *\r\n* For Exchanges: DTB (Frankfurt), HKSE (Hong Kong), and SOFFEX *\r\n* (Zurich)                                                     *\r\n* 0-9 = single digit \"version\" number assigned by exchange     *\r\n* following capital adjustments (0=current, =prior, 2=prior to *\r\n* , etc).                                                      *\r\n****************************************************************\r\n*/\r\n  OptAttribute = 206,\r\n/*\r\n********************************************\r\n* Market used to help identify a security. *\r\n* Valid values:                            *\r\n* See \"Appendix 6-C\"                       *\r\n********************************************\r\n*/\r\n  SecurityExchange = 207,\r\n/*\r\n**************************************************************\r\n* Indicates whether or not details should be communicated to *\r\n* BrokerOfCredit (i.e. step-in broker).                      *\r\n**************************************************************\r\n*/\r\n  NotifyBrokerOfCredit = 208,\r\n/*\r\n***************************************************************\r\n* Indicates how the receiver (i.e. third party) of Allocation *\r\n* message should handle/process the account details           *\r\n***************************************************************\r\n*/\r\n  AllocHandlInst = 209,\r\n/*\r\n***************************************************************\r\n* Maximum quantity (e.g. number of shares) within an order to *\r\n* be shown to other customers (i.e. sent via an IOI).         *\r\n* (Prior to FIX 4.2 this field was of type int)               *\r\n***************************************************************\r\n*/\r\n  MaxShow = 210,\r\n/*\r\n**************************************************************\r\n* Amount (signed) added to the peg for a pegged order in the *\r\n* context of the PegOffsetType (836)                         *\r\n* (Prior to FIX 4.4 this field was of type PriceOffset)      *\r\n**************************************************************\r\n*/\r\n  PegOffsetValue = 211,\r\n/*\r\n*************************************\r\n* Length of the XmlData data block. *\r\n*************************************\r\n*/\r\n  XmlDataLen = 212,\r\n/*\r\n***********************************************************\r\n* Actual XML data stream (e.g. FIXML). See approriate XML *\r\n* reference (e.g. FIXML). Note: may contain embedded SOH  *\r\n* characters.                                             *\r\n***********************************************************\r\n*/\r\n  XmlData = 213,\r\n/*\r\n*************************************************************\r\n* Reference identifier for the SettlInstID (62) with Cancel *\r\n* and Replace SettlInstTransType (63) transaction types.    *\r\n*************************************************************\r\n*/\r\n  SettlInstRefID = 214,\r\n/*\r\n****************************************************************\r\n* Number of repeating groups of RoutingID (27) and RoutingType *\r\n* (26) values.                                                 *\r\n* See Volume 3: \"Pre-Trade Message Targeting/Routing\"          *\r\n****************************************************************\r\n*/\r\n  NoRoutingIDs = 215,\r\n/*\r\n**************************************************\r\n* Indicates the type of RoutingID (27) specified *\r\n**************************************************\r\n*/\r\n  RoutingType = 216,\r\n/*\r\n******************************************************\r\n* Assigned value used to identify a specific routing *\r\n* destination.                                       *\r\n******************************************************\r\n*/\r\n  RoutingID = 217,\r\n/*\r\n****************************************************************\r\n* For Fixed Income. Either Swap Spread or Spread to Benchmark  *\r\n* depending upon the order type.                               *\r\n* Spread to Benchmark: Basis points relative to a benchmark.   *\r\n* To be expressed as \"count of basis points\" (vs. an absolute  *\r\n* value). E.g. High Grade Corporate Bonds may express price as *\r\n* basis points relative to benchmark (the BenchmarkCurveName   *\r\n* (22) field). Note: Basis points can be negative.             *\r\n* Swap Spread: Target spread for a swap.                       *\r\n****************************************************************\r\n*/\r\n  Spread = 218,\r\n/*\r\n***************************************************************\r\n* Identifies currency used for benchmark curve. See \"Appendix *\r\n* 6-A: Valid Currency Codes\" for information on obtaining     *\r\n* valid values.                                               *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)      *\r\n***************************************************************\r\n*/\r\n  BenchmarkCurveCurrency = 220,\r\n/*\r\n****************************\r\n* Name of benchmark curve. *\r\n****************************\r\n*/\r\n  BenchmarkCurveName = 221,\r\n/*\r\n****************************************************************\r\n* Point on benchmark curve. Free form values: e.g. \"Y\", \"7Y\",  *\r\n* \"INTERPOLATED\".                                              *\r\n* Sample values:                                               *\r\n* M = combination of a number between 1-12 and a \"M\" for month *\r\n* Y = combination of number between 1-100 and a \"Y\" for year}  *\r\n* 10Y-OLD = see above, then add \"-OLD\" when appropriate        *\r\n* INTERPOLATED = the point is mathematically derived           *\r\n* 2/2031 5 3/8 = the point is stated via a combination of      *\r\n* maturity month / year and coupon                             *\r\n* See Fixed Income-specific documentation at                   *\r\n* http://www.fixprotocol.org for additional values.            *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n****************************************************************\r\n*/\r\n  BenchmarkCurvePoint = 222,\r\n/*\r\n****************************************************************\r\n* The rate of interest that, when multiplied by the principal, *\r\n* par value, or face value of a bond, provides the currency    *\r\n* amount of the periodic interest payment. The coupon is       *\r\n* always cited, along with maturity, in any quotation of a     *\r\n* bond's price.                                                *\r\n****************************************************************\r\n*/\r\n  CouponRate = 223,\r\n/*\r\n**************************************************************\r\n* Date interest is to be paid. Used in identifying Corporate *\r\n* Bond issues.                                               *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)     *\r\n* (prior to FIX 4.4 field was of type UTCDate)               *\r\n**************************************************************\r\n*/\r\n  CouponPaymentDate = 224,\r\n/*\r\n****************************************************************\r\n* The date on which a bond or stock offering is issued. It may *\r\n* or may not be the same as the effective date (\"Dated Date\")  *\r\n* or the date on which interest begins to accrue (\"Interest    *\r\n* Accrual Date\")                                               *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n* (prior to FIX 4.4 field was of type UTCDate)                 *\r\n****************************************************************\r\n*/\r\n  IssueDate = 225,\r\n/*\r\n****************************************************************\r\n* *** DEPRECATED FIELD - See \"Deprecated (Phased-out) Features *\r\n* and Supported Approach\" ***                                  *\r\n* Number of business days before repurchase of a repo.         *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n****************************************************************\r\n*/\r\n  RepurchaseTerm = 226,\r\n/*\r\n****************************************************************\r\n* *** DEPRECATED FIELD - See \"Deprecated (Phased-out) Features *\r\n* and Supported Approach\" ***                                  *\r\n* Percent of par at which a Repo will be repaid. Represented   *\r\n* as a percent, e.g. .9525 represents 95-/4 percent of par.    *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n****************************************************************\r\n*/\r\n  RepurchaseRate = 227,\r\n/*\r\n***************************************************************\r\n* For Fixed Income: Amorization Factor for deriving Current   *\r\n* face from Original face for ABS or MBS securities, note the *\r\n* fraction may be greater than, equal to or less than . In    *\r\n* TIPS securities this is the Inflation index.                *\r\n* Qty * Factor * Price = Gross Trade Amount                   *\r\n* For Derivatives: Contract Value Factor by which price must  *\r\n* be adjusted to determine the true nominal value of one      *\r\n* futures/options contract.                                   *\r\n* (Qty * Price) * Factor = Nominal Value                      *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)      *\r\n***************************************************************\r\n*/\r\n  Factor = 228,\r\n/*\r\n***********************************************************\r\n* Used with Fixed Income for Muncipal New Issue Market.   *\r\n* Agreement in principal between counter-parties prior to *\r\n* actual trade date.                                      *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\r\n* (prior to FIX 4.4 field was of type UTCDate)            *\r\n***********************************************************\r\n*/\r\n  TradeOriginationDate = 229,\r\n/*\r\n***************************************************************\r\n* The date when a distribution of interest is deducted from a *\r\n* securities assets or set aside for payment to bondholders.  *\r\n* On the ex-date, the securities price drops by the amount of *\r\n* the distribution (plus or minus any market activity).       *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)      *\r\n* (prior to FIX 4.4 field was of type UTCDate)                *\r\n***************************************************************\r\n*/\r\n  ExDate = 230,\r\n/*\r\n****************************************************************\r\n* Specifies the ratio or multiply factor to convert from       *\r\n* \"nominal\" units (e.g. contracts) to total units (e.g.        *\r\n* shares) (e.g. 1.0, 100, 1000, etc). Applicable For Fixed     *\r\n* Income, Convertible Bonds, Derivatives, etc.                 *\r\n* In general quantities for all calsses should be expressed in *\r\n* the basic unit of the instrument, e.g. shares for equities,  *\r\n* norminal or par amount for bonds, currency for foreign       *\r\n* exchange. When quantity is expressed in contracts, e.g.      *\r\n* financing transactions and bond trade reporting,             *\r\n* ContractMutliplier should contain the number of units in one *\r\n* contract and can be omitted if the multiplier is the default *\r\n* amount for the instrument, i.e. 1,000 par of bonds,          *\r\n* 1,000,000 par for financing transactions.                    *\r\n****************************************************************\r\n*/\r\n  ContractMultiplier = 231,\r\n/*\r\n***********************************************************\r\n* Number of stipulation entries                           *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3). *\r\n***********************************************************\r\n*/\r\n  NoStipulations = 232,\r\n/*\r\n***********************\r\n* Type of Stipulation *\r\n***********************\r\n*/\r\n  StipulationType = 233,\r\n/*\r\n**********************************************************\r\n* For Fixed Income. Value of stipulation.                *\r\n* The expression can be an absolute single value or a    *\r\n* combination of values and logical operators:           *\r\n* < value                                                *\r\n* > value                                                *\r\n* <= value                                               *\r\n* >= value                                               *\r\n* value                                                  *\r\n* value \u0013 value2                                         *\r\n* value OR value2                                        *\r\n* value AND value2                                       *\r\n* YES                                                    *\r\n* NO                                                     *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  StipulationValue = 234,\r\n/*\r\n*****************\r\n* Type of yield *\r\n*****************\r\n*/\r\n  YieldType = 235,\r\n/*\r\n**********************************************************\r\n* Yield percentage.                                      *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  Yield = 236,\r\n/*\r\n**************************************************************\r\n* The price at which the securities are distributed to the   *\r\n* different members of an underwriting group for the primary *\r\n* market in Municipals, total gross underwriter's spread.    *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)     *\r\n**************************************************************\r\n*/\r\n  TotalTakedown = 237,\r\n/*\r\n***************************************************************\r\n* Provides the reduction in price for the secondary market in *\r\n* Muncipals.                                                  *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)      *\r\n***************************************************************\r\n*/\r\n  Concession = 238,\r\n/*\r\n****************************************************************\r\n* *** DEPRECATED FIELD - See \"Deprecated (Phased-out) Features *\r\n* and Supported Approach\" ***                                  *\r\n* Identifies the collateral used in the transaction.           *\r\n* Valid values: see SecurityType (67) field                    *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n****************************************************************\r\n*/\r\n  RepoCollateralSecurityType = 239,\r\n/*\r\n****************************************************************\r\n* *** DEPRECATED FIELD - See \"Deprecated (Phased-out) Features *\r\n* and Supported Approach\" ***                                  *\r\n* Return of investor's principal in a security. Bond           *\r\n* redemption can occur before maturity date.                   *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n* (prior to FIX 4.4 field was of type UTCDate)                 *\r\n****************************************************************\r\n*/\r\n  RedemptionDate = 240,\r\n/*\r\n**********************************************************\r\n* Underlying security\u0019s CouponPaymentDate.               *\r\n* See CouponPaymentDate (224) field for description      *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n* (prior to FIX 4.4 field was of type UTCDate)           *\r\n**********************************************************\r\n*/\r\n  UnderlyingCouponPaymentDate = 241,\r\n/*\r\n**********************************************************\r\n* Underlying security\u0019s IssueDate.                       *\r\n* See IssueDate (225) field for description              *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n* (prior to FIX 4.4 field was of type UTCDate)           *\r\n**********************************************************\r\n*/\r\n  UnderlyingIssueDate = 242,\r\n/*\r\n****************************************************************\r\n* *** DEPRECATED FIELD - See \"Deprecated (Phased-out) Features *\r\n* and Supported Approach\" ***                                  *\r\n* Underlying security\u0019s RepoCollateralSecurityType.            *\r\n* See RepoCollateralSecurityType (239) field for description   *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n****************************************************************\r\n*/\r\n  UnderlyingRepoCollateralSecurityType = 243,\r\n/*\r\n****************************************************************\r\n* *** DEPRECATED FIELD - See \"Deprecated (Phased-out) Features *\r\n* and Supported Approach\" ***                                  *\r\n* Underlying security\u0019s RepurchaseTerm.                        *\r\n* See RepurchaseTerm (226) field for description               *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n****************************************************************\r\n*/\r\n  UnderlyingRepurchaseTerm = 244,\r\n/*\r\n****************************************************************\r\n* *** DEPRECATED FIELD - See \"Deprecated (Phased-out) Features *\r\n* and Supported Approach\" ***                                  *\r\n* Underlying security\u0019s RepurchaseRate.                        *\r\n* See RepurchaseRate (227) field for description               *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n****************************************************************\r\n*/\r\n  UnderlyingRepurchaseRate = 245,\r\n/*\r\n**********************************************************\r\n* Underlying security\u0019s Factor.                          *\r\n* See Factor (228) field for description                 *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  UnderlyingFactor = 246,\r\n/*\r\n****************************************************************\r\n* *** DEPRECATED FIELD - See \"Deprecated (Phased-out) Features *\r\n* and Supported Approach\" ***                                  *\r\n* Underlying security\u0019s RedemptionDate.                        *\r\n* See RedemptionDate (240) field for description               *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n* (prior to FIX 4.4 field was of type UTCDate)                 *\r\n****************************************************************\r\n*/\r\n  UnderlyingRedemptionDate = 247,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual leg security\u0019s        *\r\n* CouponPaymentDate.                                     *\r\n* See CouponPaymentDate (224) field for description      *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n* (prior to FIX 4.4 field was of type UTCDate)           *\r\n**********************************************************\r\n*/\r\n  LegCouponPaymentDate = 248,\r\n/*\r\n**************************************************************\r\n* Multileg instrument's individual leg security\u0019s IssueDate. *\r\n* See IssueDate (225) field for description                  *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)     *\r\n* (prior to FIX 4.4 field was of type UTCDate)               *\r\n**************************************************************\r\n*/\r\n  LegIssueDate = 249,\r\n/*\r\n****************************************************************\r\n* *** DEPRECATED FIELD - See \"Deprecated (Phased-out) Features *\r\n* and Supported Approach\" ***                                  *\r\n* Multileg instrument's individual leg security\u0019s              *\r\n* RepoCollateralSecurityType.                                  *\r\n* See RepoCollateralSecurityType (239) field for description   *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n****************************************************************\r\n*/\r\n  LegRepoCollateralSecurityType = 250,\r\n/*\r\n****************************************************************\r\n* *** DEPRECATED FIELD - See \"Deprecated (Phased-out) Features *\r\n* and Supported Approach\" ***                                  *\r\n* Multileg instrument's individual leg security's              *\r\n* RepurchaseTerm.                                              *\r\n* See RepurchaseTerm (226) field for description               *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n****************************************************************\r\n*/\r\n  LegRepurchaseTerm = 251,\r\n/*\r\n****************************************************************\r\n* *** DEPRECATED FIELD - See \"Deprecated (Phased-out) Features *\r\n* and Supported Approach\" ***                                  *\r\n* Multileg instrument's individual leg security\u0019s              *\r\n* RepurchaseRate.                                              *\r\n* See RepurchaseRate (227) field for description               *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n****************************************************************\r\n*/\r\n  LegRepurchaseRate = 252,\r\n/*\r\n***********************************************************\r\n* Multileg instrument's individual leg security\u0019s Factor. *\r\n* See Factor (228) field for description                  *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\r\n***********************************************************\r\n*/\r\n  LegFactor = 253,\r\n/*\r\n****************************************************************\r\n* *** DEPRECATED FIELD - See \"Deprecated (Phased-out) Features *\r\n* and Supported Approach\" ***                                  *\r\n* Multileg instrument's individual leg security\u0019s              *\r\n* RedemptionDate.                                              *\r\n* See RedemptionDate (240) field for description               *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n* (prior to FIX 4.4 field was of type UTCDate)                 *\r\n****************************************************************\r\n*/\r\n  LegRedemptionDate = 254,\r\n/*\r\n****************************************************************\r\n* An evaluation of a company's ability to repay obligations or *\r\n* its likelihood of not defaulting. These evaluation are       *\r\n* provided by Credit Rating Agencies, i.e. S&P, Moody's.       *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n****************************************************************\r\n*/\r\n  CreditRating = 255,\r\n/*\r\n**********************************************************\r\n* Underlying security\u0019s CreditRating.                    *\r\n* See CreditRating (255) field for description           *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  UnderlyingCreditRating = 256,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual leg security\u0019s        *\r\n* CreditRating.                                          *\r\n* See CreditRating (255) field for description           *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  LegCreditRating = 257,\r\n/*\r\n***********************************************************\r\n* Driver and part of trade in the event that the Security *\r\n* Master file was wrong at the point of entry             *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\r\n***********************************************************\r\n*/\r\n  TradedFlatSwitch = 258,\r\n/*\r\n****************************************************************\r\n* BasisFeatureDate allows requesting firms within fixed income *\r\n* the ability to request an alternative yield-to-worst,        *\r\n* -maturity, -extended or other call. This flows through the   *\r\n* confirm process.                                             *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\r\n* (prior to FIX 4.4 field was of type UTCDate)                 *\r\n****************************************************************\r\n*/\r\n  BasisFeatureDate = 259,\r\n/*\r\n**********************************************************\r\n* Price for BasisFeatureDate.                            *\r\n* See BasisFeatureDate (259)                             *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\n  BasisFeaturePrice = 260,\r\n/*\r\n*********************************************\r\n* Unique identifier for Market Data Request *\r\n*********************************************\r\n*/\r\n  MDReqID = 262,\r\n/*\r\n*****************************\r\n* Subscription Request Type *\r\n*****************************\r\n*/\r\n  SubscriptionRequestType = 263,\r\n/*\r\n*************************************\r\n* Depth of market for Book Snapshot *\r\n*************************************\r\n*/\r\n  MarketDepth = 264,\r\n/*\r\n********************************************\r\n* Specifies the type of Market Data update *\r\n********************************************\r\n*/\r\n  MDUpdateType = 265,\r\n/*\r\n***************************************************************\r\n* Specifies whether or not book entries should be aggregated. *\r\n***************************************************************\r\n*/\r\n  AggregatedBook = 266,\r\n/*\r\n*************************************************\r\n* Number of MDEntryType (269) fields requested. *\r\n*************************************************\r\n*/\r\n  NoMDEntryTypes = 267,\r\n/*\r\n*********************************************\r\n* Number of entries in Market Data message. *\r\n*********************************************\r\n*/\r\n  NoMDEntries = 268,\r\n/*\r\n**************************\r\n* Type Market Data entry *\r\n**************************\r\n*/\r\n  MDEntryType = 269,\r\n/*\r\n***********************************\r\n* Price of the Market Data Entry. *\r\n***********************************\r\n*/\r\n  MDEntryPx = 270,\r\n/*\r\n************************************************************\r\n* Quantity or volume represented by the Market Data Entry. *\r\n************************************************************\r\n*/\r\n  MDEntrySize = 271,\r\n/*\r\n************************************************\r\n* Date of Market Data Entry.                   *\r\n* (prior to FIX 4.4 field was of type UTCDate) *\r\n************************************************\r\n*/\r\n  MDEntryDate = 272,\r\n/*\r\n******************************\r\n* Time of Market Data Entry. *\r\n******************************\r\n*/\r\n  MDEntryTime = 273,\r\n/*\r\n***************************\r\n* Direction of the \"tick\" *\r\n***************************\r\n*/\r\n  TickDirection = 274,\r\n/*\r\n*********************************\r\n* Market posting quote / trade. *\r\n* Valid values:                 *\r\n* See \"Appendix 6-C\"            *\r\n*********************************\r\n*/\r\n  MDMkt = 275,\r\n/*\r\n*********************************************************\r\n* Space-delimited list of conditions describing a quote *\r\n*********************************************************\r\n*/\r\n  QuoteCondition = 276,\r\n/*\r\n*********************************************************\r\n* Space-delimited list of conditions describing a trade *\r\n*********************************************************\r\n*/\r\n  TradeCondition = 277,\r\n/*\r\n****************************************\r\n* Unique Market Data Entry identifier. *\r\n****************************************\r\n*/\r\n  MDEntryID = 278,\r\n/*\r\n*************************************\r\n* Type of Market Data update action *\r\n*************************************\r\n*/\r\n  MDUpdateAction = 279,\r\n/*\r\n*****************************************\r\n* Refers to a previous MDEntryID (278). *\r\n*****************************************\r\n*/\r\n  MDEntryRefID = 280,\r\n/*\r\n*****************************************************\r\n* Reason for the rejection of a Market Data request *\r\n*****************************************************\r\n*/\r\n  MDReqRejReason = 281,\r\n/*\r\n*************************************\r\n* Originator of a Market Data Entry *\r\n*************************************\r\n*/\r\n  MDEntryOriginator = 282,\r\n/*\r\n***********************************************\r\n* Identification of a Market Maker\u0019s location *\r\n***********************************************\r\n*/\r\n  LocationID = 283,\r\n/*\r\n*******************************************\r\n* Identification of a Market Maker\u0019s desk *\r\n*******************************************\r\n*/\r\n  DeskID = 284,\r\n/*\r\n***********************\r\n* Reason for deletion *\r\n***********************\r\n*/\r\n  DeleteReason = 285,\r\n/*\r\n**************************************************\r\n* Flag that identifies a market data entry       *\r\n* (Prior to FIX 4.3 this field was of type char) *\r\n**************************************************\r\n*/\r\n  OpenCloseSettlFlag = 286,\r\n/*\r\n****************************************************************\r\n* Specifies the number of days that may elapse before delivery *\r\n* of the security                                              *\r\n****************************************************************\r\n*/\r\n  SellerDays = 287,\r\n/*\r\n***************************\r\n* Buying party in a trade *\r\n***************************\r\n*/\r\n  MDEntryBuyer = 288,\r\n/*\r\n****************************\r\n* Selling party in a trade *\r\n****************************\r\n*/\r\n  MDEntrySeller = 289,\r\n/*\r\n****************************************************************\r\n* Display position of a bid or offer, numbered from most       *\r\n* competitive to least competitive, per market side, beginning *\r\n* with .                                                       *\r\n****************************************************************\r\n*/\r\n  MDEntryPositionNo = 290,\r\n/*\r\n****************************************\r\n* Identifies a firm\u0019s financial status *\r\n****************************************\r\n*/\r\n  FinancialStatus = 291,\r\n/*\r\n*******************************************\r\n* Identifies the type of Corporate Action *\r\n*******************************************\r\n*/\r\n  CorporateAction = 292,\r\n/*\r\n*********************\r\n* Default Bid Size. *\r\n*********************\r\n*/\r\n  DefBidSize = 293,\r\n/*\r\n***********************\r\n* Default Offer Size. *\r\n***********************\r\n*/\r\n  DefOfferSize = 294,\r\n/*\r\n***********************************************\r\n* The number of quote entries for a QuoteSet. *\r\n***********************************************\r\n*/\r\n  NoQuoteEntries = 295,\r\n/*\r\n************************************************\r\n* The number of sets of quotes in the message. *\r\n************************************************\r\n*/\r\n  NoQuoteSets = 296,\r\n/*\r\n******************************************************\r\n* Identifies the status of the quote acknowledgement *\r\n******************************************************\r\n*/\r\n  QuoteStatus = 297,\r\n/*\r\n****************************************\r\n* Identifies the type of quote cancel. *\r\n****************************************\r\n*/\r\n  QuoteCancelType = 298,\r\n/*\r\n********************************************************\r\n* Uniquely identifies the quote as part of a QuoteSet. *\r\n********************************************************\r\n*/\r\n  QuoteEntryID = 299,\r\n/*\r\n*****************************\r\n* Reason Quote was rejected *\r\n*****************************\r\n*/\r\n  QuoteRejectReason = 300,\r\n/*\r\n****************************************************************\r\n* Level of Response requested from receiver of quote messages. *\r\n****************************************************************\r\n*/\r\n  QuoteResponseLevel = 301,\r\n/*\r\n********************************\r\n* Unique id for the Quote Set. *\r\n********************************\r\n*/\r\n  QuoteSetID = 302,\r\n/*\r\n*******************************************************\r\n* Indicates the type of Quote Request being generated *\r\n*******************************************************\r\n*/\r\n  QuoteRequestType = 303,\r\n/*\r\n***************************************************************\r\n* Total number of quotes for the quote set across all         *\r\n* messages. Should be the sum of all NoQuoteEntries (295) in  *\r\n* each message that has repeating quotes that are part of the *\r\n* same quote set.                                             *\r\n* (Prior to FIX 4.4 this field was named TotQuoteEntries)     *\r\n***************************************************************\r\n*/\r\n  TotNoQuoteEntries = 304,\r\n/*\r\n*************************************************\r\n* Underlying security\u0019s SecurityIDSource.       *\r\n* Valid values: see SecurityIDSource (22) field *\r\n*************************************************\r\n*/\r\n  UnderlyingSecurityIDSource = 305,\r\n/*\r\n*****************************************\r\n* Underlying security\u0019s Issuer.         *\r\n* See Issuer (06) field for description *\r\n*****************************************\r\n*/\r\n  UnderlyingIssuer = 306,\r\n/*\r\n***********************************************\r\n* Underlying security\u0019s SecurityDesc.         *\r\n* See SecurityDesc (07) field for description *\r\n***********************************************\r\n*/\r\n  UnderlyingSecurityDesc = 307,\r\n/*\r\n**********************************************************\r\n* Underlying security\u0019s SecurityExchange. Can be used to *\r\n* identify the underlying security.                      *\r\n* Valid values: see SecurityExchange (207)               *\r\n**********************************************************\r\n*/\r\n  UnderlyingSecurityExchange = 308,\r\n/*\r\n*********************************************\r\n* Underlying security\u0019s SecurityID.         *\r\n* See SecurityID (48) field for description *\r\n*********************************************\r\n*/\r\n  UnderlyingSecurityID = 309,\r\n/*\r\n***************************************************************\r\n* Underlying security\u0019s SecurityType.                         *\r\n* Valid values: see SecurityType (67) field                   *\r\n* (see below for details concerning this fields use in        *\r\n* conjunction with SecurityType=REPO)                         *\r\n* The following applies when used in conjunction with         *\r\n* SecurityType=REPO                                           *\r\n* Represents the general or specific type of security that    *\r\n* underlies a financing agreement                             *\r\n* Valid values for SecurityType=REPO:                         *\r\n* TREASURY = Federal government or treasury                   *\r\n* PROVINCE = State, province, region, etc.                    *\r\n* AGENCY = Federal agency                                     *\r\n* MORTGAGE = Mortgage passthrough                             *\r\n* CP = Commercial paper                                       *\r\n* CORP = Corporate                                            *\r\n* EQUITY = Equity                                             *\r\n* SUPRA = Supra-national agency                               *\r\n* CASH                                                        *\r\n* If bonds of a particular issuer or country are wanted in an *\r\n* Order or are in the basket of an Execution and the          *\r\n* SecurityType is not granular enough, include the            *\r\n* UnderlyingIssuer (306), UnderlyingCountryOfIssue (592),     *\r\n* UnderlyingProgram, UnderlyingRegType and/or                 *\r\n* <UnderlyingStipulations> block e.g.:                        *\r\n* SecurityType=REPO                                           *\r\n* UnderlyingSecurityType=MORTGAGE                             *\r\n* UnderlyingIssuer=GNMA                                       *\r\n* or                                                          *\r\n* SecurityType=REPO                                           *\r\n* UnderlyingSecurityType=AGENCY                               *\r\n* UnderlyingIssuer=CA Housing Trust                           *\r\n* UnderlyingCountryOfIssue=CA                                 *\r\n* or                                                          *\r\n* SecurityType=REPO                                           *\r\n* UnderlyingSecurityType=CORP                                 *\r\n* UnderlyingNoStipulations=                                   *\r\n* UnderlyingStipulationType=RATING                            *\r\n* UnderlyingStipulationValue=>bbb-                            *\r\n***************************************************************\r\n*/\r\n  UnderlyingSecurityType = 310,\r\n/*\r\n*****************************************\r\n* Underlying security\u0019s Symbol.         *\r\n* See Symbol (55) field for description *\r\n*****************************************\r\n*/\r\n  UnderlyingSymbol = 311,\r\n/*\r\n********************************************\r\n* Underlying security\u0019s SymbolSfx.         *\r\n* See SymbolSfx (65) field for description *\r\n********************************************\r\n*/\r\n  UnderlyingSymbolSfx = 312,\r\n/*\r\n*************************************************************\r\n* Underlying security\u0019s MaturityMonthYear. Can be used with *\r\n* standardized derivatives vs. the UnderlyingMaturityDate   *\r\n* (542) field.                                              *\r\n* See MaturityMonthYear (200) field for description         *\r\n*************************************************************\r\n*/\r\n  UnderlyingMaturityMonthYear = 313,\r\n/*\r\n***************************************\r\n* Underlying security\u0019s PutOrCall.    *\r\n* See PutOrCall field for description *\r\n***************************************\r\n*/\r\n  UnderlyingPutOrCall = 315,\r\n/*\r\n***********************************************\r\n* Underlying security\u0019s StrikePrice.          *\r\n* See StrikePrice (202) field for description *\r\n***********************************************\r\n*/\r\n  UnderlyingStrikePrice = 316,\r\n/*\r\n************************************************\r\n* Underlying security\u0019s OptAttribute.          *\r\n* See OptAttribute (206) field for description *\r\n************************************************\r\n*/\r\n  UnderlyingOptAttribute = 317,\r\n/*\r\n***********************************************************\r\n* Underlying security\u0019s Currency.                         *\r\n* See Currency (5) field for description and valid values *\r\n***********************************************************\r\n*/\r\n  UnderlyingCurrency = 318,\r\n/*\r\n***********************************************\r\n* Unique ID of a Security Definition Request. *\r\n***********************************************\r\n*/\r\n  SecurityReqID = 320,\r\n/*\r\n****************************************\r\n* Type of Security Definition Request. *\r\n****************************************\r\n*/\r\n  SecurityRequestType = 321,\r\n/*\r\n***********************************************\r\n* Unique ID of a Security Definition message. *\r\n***********************************************\r\n*/\r\n  SecurityResponseID = 322,\r\n/*\r\n************************************************\r\n* Type of Security Definition message response *\r\n************************************************\r\n*/\r\n  SecurityResponseType = 323,\r\n/*\r\n***************************************************\r\n* Unique ID of a Security Status Request message. *\r\n***************************************************\r\n*/\r\n  SecurityStatusReqID = 324,\r\n/*\r\n**************************************************************\r\n* Indicates whether or not message is being sent as a result *\r\n* of a subscription request or not.                          *\r\n**************************************************************\r\n*/\r\n  UnsolicitedIndicator = 325,\r\n/*\r\n***************************************************************\r\n* Identifies the trading status applicable to the transaction *\r\n***************************************************************\r\n*/\r\n  SecurityTradingStatus = 326,\r\n/*\r\n************************************************************\r\n* Denotes the reason for the Opening Delay or Trading Halt *\r\n************************************************************\r\n*/\r\n  HaltReason = 327,\r\n/*\r\n*************************************************************\r\n* Indicates whether or not the halt was due to Common Stock *\r\n* trading being halted.                                     *\r\n*************************************************************\r\n*/\r\n  InViewOfCommon = 328,\r\n/*\r\n************************************************************\r\n* Indicates whether or not the halt was due to the Related *\r\n* Security being halted.                                   *\r\n************************************************************\r\n*/\r\n  DueToRelated = 329,\r\n/*\r\n********************\r\n* Quantity bought. *\r\n********************\r\n*/\r\n  BuyVolume = 330,\r\n/*\r\n******************\r\n* Quantity sold. *\r\n******************\r\n*/\r\n  SellVolume = 331,\r\n/*\r\n***************************************************************\r\n* Represents an indication of the high end of the price range *\r\n* for a security prior to the open or reopen                  *\r\n***************************************************************\r\n*/\r\n  HighPx = 332,\r\n/*\r\n**************************************************************\r\n* Represents an indication of the low end of the price range *\r\n* for a security prior to the open or reopen                 *\r\n**************************************************************\r\n*/\r\n  LowPx = 333,\r\n/*\r\n*************************************\r\n* Identifies the type of adjustment *\r\n*************************************\r\n*/\r\n  Adjustment = 334,\r\n/*\r\n**************************************************\r\n* Unique ID of a Trading Session Status message. *\r\n**************************************************\r\n*/\r\n  TradSesReqID = 335,\r\n/*\r\n****************************************************************\r\n* Identifier for Trading Session                               *\r\n* Can be used to represent a specific market trading session   *\r\n* (e.g. \"PRE-OPEN\", \"CROSS_2\", \"AFTER-HOURS\", \"TOSTNET\",       *\r\n* \"TOSTNET2\", etc).                                            *\r\n* To specify good for session where session spans more than    *\r\n* one calendar day, use TimeInForce = Day in conjunction with  *\r\n* TradingSessionID.                                            *\r\n* Values should be bi-laterally agreed to between              *\r\n* counterparties.                                              *\r\n* Firms may register Trading Session values on the FIX website *\r\n* (presently a document maintained within \"ECN and Exchanges\"  *\r\n* working group section).                                      *\r\n****************************************************************\r\n*/\r\n  TradingSessionID = 336,\r\n/*\r\n******************************************************\r\n* Identifies the trader (e.g. \"badge number\") of the *\r\n* ContraBroker.                                      *\r\n******************************************************\r\n*/\r\n  ContraTrader = 337,\r\n/*\r\n*********************\r\n* Method of trading *\r\n*********************\r\n*/\r\n  TradSesMethod = 338,\r\n/*\r\n************************\r\n* Trading Session Mode *\r\n************************\r\n*/\r\n  TradSesMode = 339,\r\n/*\r\n********************************\r\n* State of the trading session *\r\n********************************\r\n*/\r\n  TradSesStatus = 340,\r\n/*\r\n****************************************\r\n* Starting time of the trading session *\r\n****************************************\r\n*/\r\n  TradSesStartTime = 341,\r\n/*\r\n**********************************************\r\n* Time of the opening of the trading session *\r\n**********************************************\r\n*/\r\n  TradSesOpenTime = 342,\r\n/*\r\n*************************************************\r\n* Time of the pre-closed of the trading session *\r\n*************************************************\r\n*/\r\n  TradSesPreCloseTime = 343,\r\n/*\r\n***************************************\r\n* Closing time of the trading session *\r\n***************************************\r\n*/\r\n  TradSesCloseTime = 344,\r\n/*\r\n***********************************\r\n* End time of the trading session *\r\n***********************************\r\n*/\r\n  TradSesEndTime = 345,\r\n/*\r\n***********************************\r\n* Number of orders in the market. *\r\n***********************************\r\n*/\r\n  NumberOfOrders = 346,\r\n/*\r\n*****************************************************\r\n* Type of message encoding (non-ASCII (non-English) *\r\n* characters) used in a message\u0019s \"Encoded\" fields. *\r\n*****************************************************\r\n*/\r\n  MessageEncoding = 347,\r\n/*\r\n***************************************************************\r\n* Byte length of encoded (non-ASCII characters) EncodedIssuer *\r\n* (349) field.                                                *\r\n***************************************************************\r\n*/\r\n  EncodedIssuerLen = 348,\r\n/*\r\n****************************************************************\r\n* Encoded (non-ASCII characters) representation of the Issuer  *\r\n* field in the encoded format specified via the                *\r\n* MessageEncoding (347) field. If used, the ASCII (English)    *\r\n* representation should also be specified in the Issuer field. *\r\n****************************************************************\r\n*/\r\n  EncodedIssuer = 349,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedSecurityDesc (35) field.               *\r\n*************************************************\r\n*/\r\n  EncodedSecurityDescLen = 350,\r\n/*\r\n***************************************************************\r\n* Encoded (non-ASCII characters) representation of the        *\r\n* SecurityDesc (07) field in the encoded format specified via *\r\n* the MessageEncoding (347) field. If used, the ASCII         *\r\n* (English) representation should also be specified in the    *\r\n* SecurityDesc field.                                         *\r\n***************************************************************\r\n*/\r\n  EncodedSecurityDesc = 351,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedListExecInst (353) field.              *\r\n*************************************************\r\n*/\r\n  EncodedListExecInstLen = 352,\r\n/*\r\n***************************************************************\r\n* Encoded (non-ASCII characters) representation of the        *\r\n* ListExecInst (69) field in the encoded format specified via *\r\n* the MessageEncoding (347) field. If used, the ASCII         *\r\n* (English) representation should also be specified in the    *\r\n* ListExecInst field.                                         *\r\n***************************************************************\r\n*/\r\n  EncodedListExecInst = 353,\r\n/*\r\n*************************************************************\r\n* Byte length of encoded (non-ASCII characters) EncodedText *\r\n* (355) field.                                              *\r\n*************************************************************\r\n*/\r\n  EncodedTextLen = 354,\r\n/*\r\n**************************************************************\r\n* Encoded (non-ASCII characters) representation of the Text  *\r\n* (58) field in the encoded format specified via the         *\r\n* MessageEncoding (347) field. If used, the ASCII (English)  *\r\n* representation should also be specified in the Text field. *\r\n**************************************************************\r\n*/\r\n  EncodedText = 355,\r\n/*\r\n****************************************************************\r\n* Byte length of encoded (non-ASCII characters) EncodedSubject *\r\n* (357) field.                                                 *\r\n****************************************************************\r\n*/\r\n  EncodedSubjectLen = 356,\r\n/*\r\n****************************************************************\r\n* Encoded (non-ASCII characters) representation of the Subject *\r\n* (47) field in the encoded format specified via the           *\r\n* MessageEncoding (347) field. If used, the ASCII (English)    *\r\n* representation should also be specified in the Subject       *\r\n* field.                                                       *\r\n****************************************************************\r\n*/\r\n  EncodedSubject = 357,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedHeadline (359) field.                  *\r\n*************************************************\r\n*/\r\n  EncodedHeadlineLen = 358,\r\n/*\r\n***************************************************************\r\n* Encoded (non-ASCII characters) representation of the        *\r\n* Headline (48) field in the encoded format specified via the *\r\n* MessageEncoding (347) field. If used, the ASCII (English)   *\r\n* representation should also be specified in the Headline     *\r\n* field.                                                      *\r\n***************************************************************\r\n*/\r\n  EncodedHeadline = 359,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedAllocText (36) field.                  *\r\n*************************************************\r\n*/\r\n  EncodedAllocTextLen = 360,\r\n/*\r\n***************************************************************\r\n* Encoded (non-ASCII characters) representation of the        *\r\n* AllocText (6) field in the encoded format specified via the *\r\n* MessageEncoding (347) field. If used, the ASCII (English)   *\r\n* representation should also be specified in the AllocText    *\r\n* field.                                                      *\r\n***************************************************************\r\n*/\r\n  EncodedAllocText = 361,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedUnderlyingIssuer (363) field.          *\r\n*************************************************\r\n*/\r\n  EncodedUnderlyingIssuerLen = 362,\r\n/*\r\n****************************************************************\r\n* Encoded (non-ASCII characters) representation of the         *\r\n* UnderlyingIssuer (306) field in the encoded format specified *\r\n* via the MessageEncoding (347) field. If used, the ASCII      *\r\n* (English) representation should also be specified in the     *\r\n* UnderlyingIssuer field.                                      *\r\n****************************************************************\r\n*/\r\n  EncodedUnderlyingIssuer = 363,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedUnderlyingSecurityDesc (365) field.    *\r\n*************************************************\r\n*/\r\n  EncodedUnderlyingSecurityDescLen = 364,\r\n/*\r\n***************************************************************\r\n* Encoded (non-ASCII characters) representation of the        *\r\n* UnderlyingSecurityDesc (307) field in the encoded format    *\r\n* specified via the MessageEncoding (347) field. If used, the *\r\n* ASCII (English) representation should also be specified in  *\r\n* the UnderlyingSecurityeDesc field.                          *\r\n***************************************************************\r\n*/\r\n  EncodedUnderlyingSecurityDesc = 365,\r\n/*\r\n****************************************************************\r\n* Executed price for an AllocAccount (79) entry used when      *\r\n* using \"executed price\" vs. \"average price\" allocations (e.g. *\r\n* Japan).                                                      *\r\n****************************************************************\r\n*/\r\n  AllocPrice = 366,\r\n/*\r\n**************************************************************\r\n* Indicates expiration time of this particular QuoteSet      *\r\n* (always expressed in UTC (Universal Time Coordinated, also *\r\n* known as \"GMT\")                                            *\r\n**************************************************************\r\n*/\r\n  QuoteSetValidUntilTime = 367,\r\n/*\r\n***********************************\r\n* Reason Quote Entry was rejected *\r\n***********************************\r\n*/\r\n  QuoteEntryRejectReason = 368,\r\n/*\r\n****************************************************************\r\n* The last MsgSeqNum (34) value received by the FIX engine and *\r\n* processed by downstream application, such as trading engine  *\r\n* or order routing system. Can be specified on every message   *\r\n* sent. Useful for detecting a backlog with a counterparty.    *\r\n****************************************************************\r\n*/\r\n  LastMsgSeqNumProcessed = 369,\r\n/*\r\n*****************************************************\r\n* The tag number of the FIX field being referenced. *\r\n*****************************************************\r\n*/\r\n  RefTagID = 371,\r\n/*\r\n*********************************************************\r\n* The MsgType (35) of the FIX message being referenced. *\r\n*********************************************************\r\n*/\r\n  RefMsgType = 372,\r\n/*\r\n**************************************************************\r\n* Code to identify reason for a session-level Reject message *\r\n**************************************************************\r\n*/\r\n  SessionRejectReason = 373,\r\n/*\r\n*******************************************\r\n* Identifies the Bid Request message type *\r\n*******************************************\r\n*/\r\n  BidRequestTransType = 374,\r\n/*\r\n********************************************************\r\n* Identifies contra broker. Standard NASD market-maker *\r\n* mnemonic is preferred.                               *\r\n********************************************************\r\n*/\r\n  ContraBroker = 375,\r\n/*\r\n********************************************************\r\n* ID used to represent this transaction for compliance *\r\n* purposes (e.g. OATS reporting).                      *\r\n********************************************************\r\n*/\r\n  ComplianceID = 376,\r\n/*\r\n*****************************************************\r\n* Indicates whether or not the order was solicited. *\r\n*****************************************************\r\n*/\r\n  SolicitedFlag = 377,\r\n/*\r\n************************************************************\r\n* Code to identify reason for an ExecutionRpt message sent *\r\n* with ExecType=Restated or used when communicating an     *\r\n* unsolicited cancel.                                      *\r\n************************************************************\r\n*/\r\n  ExecRestatementReason = 378,\r\n/*\r\n*************************************************************\r\n* The value of the business-level \"ID\" field on the message *\r\n* being referenced.                                         *\r\n*************************************************************\r\n*/\r\n  BusinessRejectRefID = 379,\r\n/*\r\n*********************************************************\r\n* Code to identify reason for a Business Message Reject *\r\n* message                                               *\r\n*********************************************************\r\n*/\r\n  BusinessRejectReason = 380,\r\n/*\r\n***************************************************************\r\n* Total amount traded (e.g. CumQty (4) * AvgPx (6)) expressed *\r\n* in units of currency.                                       *\r\n***************************************************************\r\n*/\r\n  GrossTradeAmt = 381,\r\n/*\r\n*********************************************\r\n* The number of ContraBroker (375) entries. *\r\n*********************************************\r\n*/\r\n  NoContraBrokers = 382,\r\n/*\r\n***********************************************************\r\n* Maximum number of bytes supported for a single message. *\r\n***********************************************************\r\n*/\r\n  MaxMessageSize = 383,\r\n/*\r\n***********************************************\r\n* Number of MsgTypes (35) in repeating group. *\r\n***********************************************\r\n*/\r\n  NoMsgTypes = 384,\r\n/*\r\n*******************************************\r\n* Specifies the direction of the messsage *\r\n*******************************************\r\n*/\r\n  MsgDirection = 385,\r\n/*\r\n*********************************************************\r\n* Number of TradingSessionIDs (336) in repeating group. *\r\n*********************************************************\r\n*/\r\n  NoTradingSessions = 386,\r\n/*\r\n***********************************\r\n* Total volume (quantity) traded. *\r\n***********************************\r\n*/\r\n  TotalVolumeTraded = 387,\r\n/*\r\n***************************************************************\r\n* Code to identify the price a DiscretionOffsetValue (389) is *\r\n* related to and should be mathematically added to            *\r\n***************************************************************\r\n*/\r\n  DiscretionInst = 388,\r\n/*\r\n*************************************************************\r\n* Amount (signed) added to the \"related to\" price specified *\r\n* via DiscretionInst (388), in the context of               *\r\n* DiscretionOffsetType (842)                                *\r\n* (Prior to FIX 4.4 this field was of type PriceOffset)     *\r\n*************************************************************\r\n*/\r\n  DiscretionOffsetValue = 389,\r\n/*\r\n***************************************************************\r\n* Unique identifier for Bid Response as assigned by sell-side *\r\n* (broker, exchange, ECN). Uniqueness must be guaranteed      *\r\n* within a single trading day.                                *\r\n***************************************************************\r\n*/\r\n  BidID = 390,\r\n/*\r\n**************************************************************\r\n* Unique identifier for a Bid Request as assigned by         *\r\n* institution. Uniqueness must be guaranteed within a single *\r\n* trading day.                                               *\r\n**************************************************************\r\n*/\r\n  ClientBidID = 391,\r\n/*\r\n************************************\r\n* Descriptive name for list order. *\r\n************************************\r\n*/\r\n  ListName = 392,\r\n/*\r\n**************************************************************\r\n* Total number of securities.                                *\r\n* (Prior to FIX 4.4 this field was named TotalNumSecurities) *\r\n**************************************************************\r\n*/\r\n  TotNoRelatedSym = 393,\r\n/*\r\n********************************************\r\n* Code to identify the type of Bid Request *\r\n********************************************\r\n*/\r\n  BidType = 394,\r\n/*\r\n****************************\r\n* Total number of tickets. *\r\n****************************\r\n*/\r\n  NumTickets = 395,\r\n/*\r\n***********************\r\n* Amounts in currency *\r\n***********************\r\n*/\r\n  SideValue1 = 396,\r\n/*\r\n***********************\r\n* Amounts in currency *\r\n***********************\r\n*/\r\n  SideValue2 = 397,\r\n/*\r\n******************************************\r\n* Number of BidDescriptor (400) entries. *\r\n******************************************\r\n*/\r\n  NoBidDescriptors = 398,\r\n/*\r\n****************************************************\r\n* Code to identify the type of BidDescriptor (400) *\r\n****************************************************\r\n*/\r\n  BidDescriptorType = 399,\r\n/*\r\n************************************************************\r\n* BidDescriptor value. Usage depends upon BidDescriptorTyp *\r\n* (399).                                                   *\r\n* If BidDescriptorType = 1                                 *\r\n* Industrials etc - Free text                              *\r\n* If BidDescriptorType =2                                  *\r\n* \"FR\" etc - ISO Country Codes                             *\r\n* If BidDescriptorType =3                                  *\r\n* FT00, FT250, STOX - Free text                            *\r\n************************************************************\r\n*/\r\n  BidDescriptor = 400,\r\n/*\r\n***************************************************************\r\n* Code to identify which \"SideValue\" the value refers to.     *\r\n* SideValue and SideValue2 are used as opposed to Buy or Sell *\r\n* so that the basket can be quoted either way as Buy or Sell. *\r\n***************************************************************\r\n*/\r\n  SideValueInd = 401,\r\n/*\r\n************************************************************\r\n* Liquidity indicator or lower limit if TotalNumSecurities *\r\n* (393) > . Represented as a percentage.                   *\r\n************************************************************\r\n*/\r\n  LiquidityPctLow = 402,\r\n/*\r\n*************************************************************\r\n* Upper liquidity indicator if TotalNumSecurities (393) > . *\r\n* Represented as a percentage.                              *\r\n*************************************************************\r\n*/\r\n  LiquidityPctHigh = 403,\r\n/*\r\n************************************************************\r\n* Value between LiquidityPctLow (402) and LiquidityPctHigh *\r\n* (403) in Currency                                        *\r\n************************************************************\r\n*/\r\n  LiquidityValue = 404,\r\n/*\r\n************************************************************\r\n* Eg Used in EFP trades 2% (EFP \u0013 Exchange for Physical ). *\r\n* Represented as a percentage.                             *\r\n************************************************************\r\n*/\r\n  EFPTrackingError = 405,\r\n/*\r\n**********************\r\n* Used in EFP trades *\r\n**********************\r\n*/\r\n  FairValue = 406,\r\n/*\r\n****************************************************\r\n* Used in EFP trades. Represented as a percentage. *\r\n****************************************************\r\n*/\r\n  OutsideIndexPct = 407,\r\n/*\r\n**********************\r\n* Used in EFP trades *\r\n**********************\r\n*/\r\n  ValueOfFutures = 408,\r\n/*\r\n****************************************************\r\n* Code to identify the type of liquidity indicator *\r\n****************************************************\r\n*/\r\n  LiquidityIndType = 409,\r\n/*\r\n**********************************************************\r\n* Overall weighted average liquidity expressed as a % of *\r\n* average daily volume. Represented as a percentage.     *\r\n**********************************************************\r\n*/\r\n  WtAverageLiquidity = 410,\r\n/*\r\n******************************************************\r\n* Indicates whether or not to exchange for phsyical. *\r\n******************************************************\r\n*/\r\n  ExchangeForPhysical = 411,\r\n/*\r\n*******************************\r\n* Value of stocks in Currency *\r\n*******************************\r\n*/\r\n  OutMainCntryUIndex = 412,\r\n/*\r\n***************************************************************\r\n* Percentage of program that crosses in Currency. Represented *\r\n* as a percentage.                                            *\r\n***************************************************************\r\n*/\r\n  CrossPercent = 413,\r\n/*\r\n**************************************************************\r\n* Code to identify the desired frequency of progress reports *\r\n**************************************************************\r\n*/\r\n  ProgRptReqs = 414,\r\n/*\r\n**********************************************************\r\n* Time in minutes between each ListStatus report sent by *\r\n* SellSide. Zero means don\u0019t send status.                *\r\n**********************************************************\r\n*/\r\n  ProgPeriodInterval = 415,\r\n/*\r\n****************************************************************\r\n* Code to represent whether value is net (inclusive of tax) or *\r\n* gross                                                        *\r\n****************************************************************\r\n*/\r\n  IncTaxInd = 416,\r\n/*\r\n*****************************************************\r\n* Indicates the total number of bidders on the list *\r\n*****************************************************\r\n*/\r\n  NumBidders = 417,\r\n/*\r\n***************************************\r\n* Code to represent the type of trade *\r\n***************************************\r\n*/\r\n  BidTradeType = 418,\r\n/*\r\n******************************************\r\n* Code to represent the basis price type *\r\n******************************************\r\n*/\r\n  BasisPxType = 419,\r\n/*\r\n*****************************************\r\n* Indicates the number of list entries. *\r\n*****************************************\r\n*/\r\n  NoBidComponents = 420,\r\n/*\r\n*****************************\r\n* ISO Country Code in field *\r\n*****************************\r\n*/\r\n  Country = 421,\r\n/*\r\n***************************************************************\r\n* Total number of strike price entries across all messages.   *\r\n* Should be the sum of all NoStrikes (428) in each message    *\r\n* that has repeating strike price entries related to the same *\r\n* ListID (66). Used to support fragmentation.                 *\r\n***************************************************************\r\n*/\r\n  TotNoStrikes = 422,\r\n/*\r\n************************************\r\n* Code to represent the price type *\r\n************************************\r\n*/\r\n  PriceType = 423,\r\n/*\r\n****************************************************************\r\n* For GT orders, the OrderQty (38) less all quantity (adjusted *\r\n* for stock splits) that traded on previous days. DayOrderQty  *\r\n* (424) = OrderQty \u0013 (CumQty (4) \u0013 DayCumQty (425))            *\r\n****************************************************************\r\n*/\r\n  DayOrderQty = 424,\r\n/*\r\n*************************************************\r\n* Quantity on a GT order that has traded today. *\r\n*************************************************\r\n*/\r\n  DayCumQty = 425,\r\n/*\r\n****************************************************************\r\n* The average price for quantity on a GT order that has traded *\r\n* today.                                                       *\r\n****************************************************************\r\n*/\r\n  DayAvgPx = 426,\r\n/*\r\n********************************************************\r\n* Code to identify whether to book out executions on a *\r\n* part-filled GT order on the day of execution or to   *\r\n* accumulate                                           *\r\n********************************************************\r\n*/\r\n  GTBookingInst = 427,\r\n/*\r\n****************************************\r\n* Number of list strike price entries. *\r\n****************************************\r\n*/\r\n  NoStrikes = 428,\r\n/*\r\n*************************************\r\n* Code to represent the status type *\r\n*************************************\r\n*/\r\n  ListStatusType = 429,\r\n/*\r\n****************************************************************\r\n* Code to represent whether value is net (inclusive of tax) or *\r\n* gross                                                        *\r\n****************************************************************\r\n*/\r\n  NetGrossInd = 430,\r\n/*\r\n************************************************\r\n* Code to represent the status of a list order *\r\n************************************************\r\n*/\r\n  ListOrderStatus = 431,\r\n/*\r\n****************************************************************\r\n* Date of order expiration (last day the order can trade),     *\r\n* always expressed in terms of the local market date. The time *\r\n* at which the order expires is determined by the local        *\r\n* market\u0019s business practices                                  *\r\n****************************************************************\r\n*/\r\n  ExpireDate = 432,\r\n/*\r\n********************************************\r\n* Identifies the type of ListExecInst (69) *\r\n********************************************\r\n*/\r\n  ListExecInstType = 433,\r\n/*\r\n*************************************************************\r\n* Identifies the type of request that a Cancel Reject is in *\r\n* response to                                               *\r\n*************************************************************\r\n*/\r\n  CxlRejResponseTo = 434,\r\n/*\r\n**********************************************\r\n* Underlying security\u0019s CouponRate.          *\r\n* See CouponRate (223) field for description *\r\n**********************************************\r\n*/\r\n  UnderlyingCouponRate = 435,\r\n/*\r\n*****************************************************\r\n* Underlying security\u0019s ContractMultiplier.         *\r\n* See ContractMultiplier (23) field for description *\r\n*****************************************************\r\n*/\r\n  UnderlyingContractMultiplier = 436,\r\n/*\r\n************************************************\r\n* Quantity traded with the ContraBroker (375). *\r\n************************************************\r\n*/\r\n  ContraTradeQty = 437,\r\n/*\r\n****************************************************************\r\n* Identifes the time of the trade with the ContraBroker (375). *\r\n* (always expressed in UTC (Universal Time Coordinated, also   *\r\n* known as \"GMT\")                                              *\r\n****************************************************************\r\n*/\r\n  ContraTradeTime = 438,\r\n/*\r\n*********************************************************\r\n* Number of Securites between LiquidityPctLow (402) and *\r\n* LiquidityPctHigh (403) in Currency.                   *\r\n*********************************************************\r\n*/\r\n  LiquidityNumSecurities = 441,\r\n/*\r\n**************************************************************\r\n* Used to indicate what an Execution Report represents (e.g. *\r\n* used with multi-leg securities, such as option strategies, *\r\n* spreads, etc.).                                            *\r\n**************************************************************\r\n*/\r\n  MultiLegReportingType = 442,\r\n/*\r\n*******************************************************\r\n* The time at which current market prices are used to *\r\n* determine the value of a basket.                    *\r\n*******************************************************\r\n*/\r\n  StrikeTime = 443,\r\n/*\r\n***************************************************\r\n* Free format text string related to List Status. *\r\n***************************************************\r\n*/\r\n  ListStatusText = 444,\r\n/*\r\n*************************************************\r\n* Byte length of encoded (non-ASCII characters) *\r\n* EncodedListStatusText (446) field.            *\r\n*************************************************\r\n*/\r\n  EncodedListStatusTextLen = 445,\r\n/*\r\n**************************************************************\r\n* Encoded (non-ASCII characters) representation of the       *\r\n* ListStatusText (444) field in the encoded format specified *\r\n* via the MessageEncoding (347) field. If used, the ASCII    *\r\n* (English) representation should also be specified in the   *\r\n* ListStatusText field.                                      *\r\n**************************************************************\r\n*/\r\n  EncodedListStatusText = 446,\r\n/*\r\n*************************************************************\r\n* Identifies class or source of the PartyID (448) value.    *\r\n* Required if PartyID is specified. Note: applicable values *\r\n* depend upon PartyRole (452) specified.                    *\r\n* See \"Appendix 6-G \u0013 Use of <Parties> Component Block\"     *\r\n*************************************************************\r\n*/\r\n  PartyIDSource = 447,\r\n/*\r\n****************************************************************\r\n* Party identifier/code. See PartyIDSource (447) and PartyRole *\r\n* (452).                                                       *\r\n* See \"Appendix 6-G \u0013 Use of <Parties> Component Block\"        *\r\n****************************************************************\r\n*/\r\n  PartyID = 448,\r\n/*\r\n****************************************************************\r\n* Net change from previous day\u0019s closing price vs. last traded *\r\n* price.                                                       *\r\n****************************************************************\r\n*/\r\n  NetChgPrevDay = 451,\r\n/*\r\n***************************************************************\r\n* Identifies the type or role of the PartyID (448) specified. *\r\n* See \"Appendix 6-G \u0013 Use of <Parties> Component Block\"       *\r\n***************************************************************\r\n*/\r\n  PartyRole = 452,\r\n/*\r\n***************************************************************\r\n* Number of PartyID (448), PartyIDSource (447), and PartyRole *\r\n* (452) entries                                               *\r\n***************************************************************\r\n*/\r\n  NoPartyIDs = 453,\r\n/*\r\n******************************************\r\n* Number of SecurityAltID (455) entries. *\r\n******************************************\r\n*/\r\n  NoSecurityAltID = 454,\r\n/*\r\n************************************************************\r\n* Alternate Security identifier value for this security of *\r\n* SecurityAltIDSource (456) type (e.g. CUSIP, SEDOL, ISIN, *\r\n* etc). Requires SecurityAltIDSource.                      *\r\n************************************************************\r\n*/\r\n  SecurityAltID = 455,\r\n/*\r\n****************************************************************\r\n* Identifies class or source of the SecurityAltID (455) value. *\r\n* Required if SecurityAltID is specified.                      *\r\n* Valid values:                                                *\r\n* Same valid values as the SecurityIDSource (22) field         *\r\n****************************************************************\r\n*/\r\n  SecurityAltIDSource = 456,\r\n/*\r\n****************************************************\r\n* Number of UnderlyingSecurityAltID (458) entries. *\r\n****************************************************\r\n*/\r\n  NoUnderlyingSecurityAltID = 457,\r\n/*\r\n**************************************************************\r\n* Alternate Security identifier value for this underlying    *\r\n* security of UnderlyingSecurityAltIDSource (459) type (e.g. *\r\n* CUSIP, SEDOL, ISIN, etc). Requires                         *\r\n* UnderlyingSecurityAltIDSource.                             *\r\n**************************************************************\r\n*/\r\n  UnderlyingSecurityAltID = 458,\r\n/*\r\n*************************************************************\r\n* Identifies class or source of the UnderlyingSecurityAltID *\r\n* (458) value. Required if UnderlyingSecurityAltID is       *\r\n* specified.                                                *\r\n* Valid values:                                             *\r\n* Same valid values as the SecurityIDSource (22) field      *\r\n*************************************************************\r\n*/\r\n  UnderlyingSecurityAltIDSource = 459,\r\n/*\r\n************************************************************\r\n* Indicates the type of product the security is associated *\r\n* with. See also the CFICode (46) and SecurityType (67)    *\r\n* fields.                                                  *\r\n************************************************************\r\n*/\r\n  Product = 460,\r\n/*\r\n**************************************************************\r\n* Indicates the type of security using ISO 0962 standard,    *\r\n* Classification of Financial Instruments (CFI code) values. *\r\n* ISO 0962 is maintained by ANNA (Association of National    *\r\n* Numbering Agencies) acting as Registration Authority. See  *\r\n* \"Appendix 6-B FIX Fields Based Upon Other Standards\". See  *\r\n* also the Product (460) and SecurityType (67) fields. It is *\r\n* recommended that CFICode be used instead of SecurityType   *\r\n* (67) for non-Fixed Income instruments.                     *\r\n* A subset of possible values applicable to FIX usage are    *\r\n* identified in \"Appendix 6-D CFICode Usage - ISO 0962       *\r\n* Classification of Financial Instruments (CFI code)\"        *\r\n**************************************************************\r\n*/\r\n  CFICode = 461,\r\n/*\r\n****************************************\r\n* Underlying security\u0019s Product.       *\r\n* Valid values: see Product(460) field *\r\n****************************************\r\n*/\r\n  UnderlyingProduct = 462,\r\n/*\r\n***************************************\r\n* Underlying security\u0019s CFICode.      *\r\n* Valid values: see CFICode (46)field *\r\n***************************************\r\n*/\r\n  UnderlyingCFICode = 463,\r\n/*\r\n***************************************************************\r\n* Indicates whether or not this FIX Session is a \"test\" vs.   *\r\n* \"production\" connection. Useful for preventing \"accidents\". *\r\n***************************************************************\r\n*/\r\n  TestMessageIndicator = 464,\r\n/*\r\n***********************************************************\r\n* Common reference passed to a post-trade booking process *\r\n* (e.g. industry matching utility).                       *\r\n***********************************************************\r\n*/\r\n  BookingRefID = 466,\r\n/*\r\n************************************************************\r\n* Unique identifier for a specific NoAllocs (78) repeating *\r\n* group instance (e.g. for an AllocAccount).               *\r\n************************************************************\r\n*/\r\n  IndividualAllocID = 467,\r\n/*\r\n****************************************************************\r\n* Specifies which direction to round For CIV \u0013 indicates       *\r\n* whether or not the quantity of shares/units is to be rounded *\r\n* and in which direction where CashOrdQty (52) or (for CIV     *\r\n* only) OrderPercent (56) are specified on an order.           *\r\n* The default is for rounding to be at the discretion of the   *\r\n* executing broker or fund manager.                            *\r\n* e.g. for an order specifying CashOrdQty or OrderPercent if   *\r\n* the calculated number of shares/units was 325.76 and         *\r\n* RoundingModulus (469) was 0 \u0013 \"round down\" would give 320    *\r\n* units, \"round up\" would give 330 units and \"round to         *\r\n* nearest\" would give 320 units.                               *\r\n****************************************************************\r\n*/\r\n  RoundingDirection = 468,\r\n/*\r\n****************************************************************\r\n* For CIV - a float value indicating the value to which        *\r\n* rounding is required.                                        *\r\n* i.e. 0 means round to a multiple of 0 units/shares; 0.5      *\r\n* means round to a multiple of 0.5 units/shares.               *\r\n* The default, if RoundingDirection (468) is specified without *\r\n* RoundingModulus, is to round to a whole unit/share.          *\r\n****************************************************************\r\n*/\r\n  RoundingModulus = 469,\r\n/*\r\n***************************************************************\r\n* ISO Country code of instrument issue (e.g. the country      *\r\n* portion typically used in ISIN). Can be used in conjunction *\r\n* with non-ISIN SecurityID (48) (e.g. CUSIP for Municipal     *\r\n* Bonds without ISIN) to provide uniqueness.                  *\r\n***************************************************************\r\n*/\r\n  CountryOfIssue = 470,\r\n/*\r\n***************************************************\r\n* A two-character state or province abbreviation. *\r\n***************************************************\r\n*/\r\n  StateOrProvinceOfIssue = 471,\r\n/*\r\n***************************************************************\r\n* Identifies the locale. For Municipal Security Issuers other *\r\n* than state or province. Refer to                            *\r\n* http://www.atmos.albany.edu/cgi/stagrep-cgi                 *\r\n* Reference the IATA city codes for values.                   *\r\n* Note IATA (International Air Transport Association)         *\r\n* maintains the codes at www.iata.org.                        *\r\n***************************************************************\r\n*/\r\n  LocaleOfIssue = 472,\r\n/*\r\n********************************************************\r\n* The number of registration details on a Registration *\r\n* Instructions message                                 *\r\n********************************************************\r\n*/\r\n  NoRegistDtls = 473,\r\n/*\r\n*************************************************************\r\n* Set of Correspondence address details, possibly including *\r\n* phone, fax, etc.                                          *\r\n*************************************************************\r\n*/\r\n  MailingDtls = 474,\r\n/*\r\n************************************************************\r\n* The ISO 366 Country code (2 character) identifying which *\r\n* country the beneficial investor is resident for tax      *\r\n* purposes.                                                *\r\n************************************************************\r\n*/\r\n  InvestorCountryOfResidence = 475,\r\n/*\r\n**********************************************************\r\n* \"Settlement Payment Reference\" \u0013 A free format Payment *\r\n* reference to assist with reconciliation, e.g. a Client *\r\n* and/or Order ID number.                                *\r\n**********************************************************\r\n*/\r\n  PaymentRef = 476,\r\n/*\r\n***************************************************************\r\n* A code identifying the payment method for a (fractional)    *\r\n* distribution.                                               *\r\n* 13 through 998 are reserved for future use                  *\r\n* Values above 000 are available for use by private agreement *\r\n* among counterparties                                        *\r\n***************************************************************\r\n*/\r\n  DistribPaymentMethod = 477,\r\n/*\r\n************************************************************\r\n* Specifies currency to be use for Cash Distributions\u0013 see *\r\n* \"Appendix 6-A; Valid Currency Codes\".                    *\r\n************************************************************\r\n*/\r\n  CashDistribCurr = 478,\r\n/*\r\n*************************************************************\r\n* Specifies currency to be use for Commission (2) if the    *\r\n* Commission currency is different from the Deal Currency - *\r\n* see \"Appendix 6-A; Valid Currency Codes\".                 *\r\n*************************************************************\r\n*/\r\n  CommCurrency = 479,\r\n/*\r\n******************************************************\r\n* For CIV \u0013 A one character code identifying whether *\r\n* Cancellation rights/Cooling off period applies     *\r\n******************************************************\r\n*/\r\n  CancellationRights = 480,\r\n/*\r\n************************************************************\r\n* A one character code identifying Money laundering status *\r\n************************************************************\r\n*/\r\n  MoneyLaunderingStatus = 481,\r\n/*\r\n***************************************************\r\n* Free format text to specify mailing instruction *\r\n* requirements, e.g. \"no third party mailings\".   *\r\n***************************************************\r\n*/\r\n  MailingInst = 482,\r\n/*\r\n************************************************************\r\n* For CIV A date and time stamp to indicate the time a CIV *\r\n* order was booked by the fund manager.                    *\r\n************************************************************\r\n*/\r\n  TransBkdTime = 483,\r\n/*\r\n***************************************************************\r\n* For CIV - Identifies how the execution price LastPx (3) was *\r\n* calculated from the fund unit/share price(s) calculated at  *\r\n* the fund valuation point                                    *\r\n***************************************************************\r\n*/\r\n  ExecPriceType = 484,\r\n/*\r\n****************************************************************\r\n* For CIV the amount or percentage by which the fund           *\r\n* unit/share price was adjusted, as indicated by ExecPriceType *\r\n* (484)                                                        *\r\n****************************************************************\r\n*/\r\n  ExecPriceAdjustment = 485,\r\n/*\r\n********************************************************\r\n* The date of birth applicable to the individual, e.g. *\r\n* required to open some types of tax-exempt account.   *\r\n********************************************************\r\n*/\r\n  DateOfBirth = 486,\r\n/*\r\n****************************************************\r\n* Identifies Trade Report message transaction type *\r\n* (Prior to FIX 4.4 this field was of type char)   *\r\n****************************************************\r\n*/\r\n  TradeReportTransType = 487,\r\n/*\r\n****************************************************************\r\n* The name of the payment card holder as specified on the card *\r\n* being used for payment.                                      *\r\n****************************************************************\r\n*/\r\n  CardHolderName = 488,\r\n/*\r\n***********************************************************\r\n* The number of the payment card as specified on the card *\r\n* being used for payment.                                 *\r\n***********************************************************\r\n*/\r\n  CardNumber = 489,\r\n/*\r\n****************************************************************\r\n* The expiry date of the payment card as specified on the card *\r\n* being used for payment.                                      *\r\n****************************************************************\r\n*/\r\n  CardExpDate = 490,\r\n/*\r\n************************************************************\r\n* The issue number of the payment card as specified on the *\r\n* card being used for payment. This is only applicable to  *\r\n* certain types of card.                                   *\r\n************************************************************\r\n*/\r\n  CardIssNum = 491,\r\n/*\r\n***************************************************************\r\n* A code identifying the Settlement payment method.           *\r\n* 16 through 998 are reserved for future use                  *\r\n* Values above 000 are available for use by private agreement *\r\n* among counterparties                                        *\r\n***************************************************************\r\n*/\r\n  PaymentMethod = 492,\r\n/*\r\n**************************************************************\r\n* For CIV \u0013 a fund manager-defined code identifying which of *\r\n* the fund manager\u0019s account types is required.              *\r\n**************************************************************\r\n*/\r\n  RegistAcctType = 493,\r\n/*\r\n****************************************************************\r\n* Free format text defining the designation to be associated   *\r\n* with a holding on the register. Used to identify assets of a *\r\n* specific underlying investor using a common registration,    *\r\n* e.g. a broker\u0019s nominee or street name.                      *\r\n****************************************************************\r\n*/\r\n  Designation = 494,\r\n/*\r\n***************************************************************\r\n* For CIV - a code identifying the type of tax exempt account *\r\n* in which purchased shares/units are to be held              *\r\n***************************************************************\r\n*/\r\n  TaxAdvantageType = 495,\r\n/*\r\n****************************************************************\r\n* Text indicating reason(s) why a Registration Instruction has *\r\n* been rejected.                                               *\r\n****************************************************************\r\n*/\r\n  RegistRejReasonText = 496,\r\n/*\r\n***********************************************************\r\n* A one character code identifying whether the Fund based *\r\n* renewal commission is to be waived.                     *\r\n***********************************************************\r\n*/\r\n  FundRenewWaiv = 497,\r\n/*\r\n******************************************************\r\n* Name of local agent bank if for cash distributions *\r\n******************************************************\r\n*/\r\n  CashDistribAgentName = 498,\r\n/*\r\n***************************************************************\r\n* BIC (Bank Identification Code--Swift managed) code of agent *\r\n* bank for cash distributions                                 *\r\n***************************************************************\r\n*/\r\n  CashDistribAgentCode = 499,\r\n/*\r\n***************************************************\r\n* Account number at agent bank for distributions. *\r\n***************************************************\r\n*/\r\n  CashDistribAgentAcctNumber = 500,\r\n/*\r\n***************************************************************\r\n* Free format Payment reference to assist with reconciliation *\r\n* of distributions.                                           *\r\n***************************************************************\r\n*/\r\n  CashDistribPayRef = 501,\r\n/*\r\n****************************************************\r\n* Name of account at agent bank for distributions. *\r\n****************************************************\r\n*/\r\n  CashDistribAgentAcctName = 502,\r\n/*\r\n*************************************************************\r\n* The start date of the card as specified on the card being *\r\n* used for payment.                                         *\r\n*************************************************************\r\n*/\r\n  CardStartDate = 503,\r\n/*\r\n**********************************************************\r\n* The date written on a cheque or date payment should be *\r\n* submitted to the relevant clearing system.             *\r\n**********************************************************\r\n*/\r\n  PaymentDate = 504,\r\n/*\r\n****************************************************************\r\n* Identifies sender of a payment, e.g. the payment remitter or *\r\n* a customer reference number.                                 *\r\n****************************************************************\r\n*/\r\n  PaymentRemitterID = 505,\r\n/*\r\n**************************************************************\r\n* Registration status as returned by the broker or (for CIV) *\r\n* the fund manager                                           *\r\n**************************************************************\r\n*/\r\n  RegistStatus = 506,\r\n/*\r\n**************************************************************\r\n* Reason(s) why Registration Instructions has been rejected. *\r\n* The reason may be further amplified in the                 *\r\n* RegistRejReasonCode field.                                 *\r\n* Possible values of reason code include:                    *\r\n**************************************************************\r\n*/\r\n  RegistRejReasonCode = 507,\r\n/*\r\n**************************************************************\r\n* Reference identifier for the RegistID (53) with Cancel and *\r\n* Replace RegistTransType (54) transaction types.            *\r\n**************************************************************\r\n*/\r\n  RegistRefID = 508,\r\n/*\r\n**********************************************************\r\n* Set of Registration name and address details, possibly *\r\n* including phone, fax etc.                              *\r\n**********************************************************\r\n*/\r\n  RegistDtls = 509,\r\n/*\r\n*************************************************************\r\n* The number of Distribution Instructions on a Registration *\r\n* Instructions message                                      *\r\n*************************************************************\r\n*/\r\n  NoDistribInsts = 510,\r\n/*\r\n***********************************************************\r\n* Email address relating to Registration name and address *\r\n* details                                                 *\r\n***********************************************************\r\n*/\r\n  RegistEmail = 511,\r\n/*\r\n**************************************************************\r\n* The amount of each distribution to go to this beneficiary, *\r\n* expressed as a percentage                                  *\r\n**************************************************************\r\n*/\r\n  DistribPercentage = 512,\r\n/*\r\n****************************************************************\r\n* Unique identifier of the registration details as assigned by *\r\n* institution or intermediary.                                 *\r\n****************************************************************\r\n*/\r\n  RegistID = 513,\r\n/*\r\n*********************************************************\r\n* Identifies Registration Instructions transaction type *\r\n*********************************************************\r\n*/\r\n  RegistTransType = 514,\r\n/*\r\n***************************************************************\r\n* For CIV - a date and time stamp to indicate the fund        *\r\n* valuation point with respect to which a order was priced by *\r\n* the fund manager.                                           *\r\n***************************************************************\r\n*/\r\n  ExecValuationPoint = 515,\r\n/*\r\n**************************************************************\r\n* For CIV specifies the approximate order quantity desired.  *\r\n* For a CIV Sale it specifies percentage of investor\u0019s total *\r\n* holding to be sold. For a CIV switch/exchange it specifies *\r\n* percentage of investor\u0019s cash realised from sales to be    *\r\n* re-invested. The executing broker, intermediary or fund    *\r\n* manager is responsible for converting and calculating      *\r\n* OrderQty (38) in shares/units for subsequent messages.     *\r\n**************************************************************\r\n*/\r\n  OrderPercent = 516,\r\n/*\r\n**************************************************\r\n* The relationship between Registration parties. *\r\n**************************************************\r\n*/\r\n  OwnershipType = 517,\r\n/*\r\n****************************************************************\r\n* The number of Contract Amount details on an Execution Report *\r\n* message                                                      *\r\n****************************************************************\r\n*/\r\n  NoContAmts = 518,\r\n/*\r\n**************************************************************\r\n* Type of ContAmtValue (520).                                *\r\n* NOTE That Commission Amount / % in Contract Amounts is the *\r\n* commission actually charged, rather than the commission    *\r\n* instructions given in Fields 2/3.                          *\r\n**************************************************************\r\n*/\r\n  ContAmtType = 519,\r\n/*\r\n********************************************************\r\n* Value of Contract Amount, e.g. a financial amount or *\r\n* percentage as indicated by ContAmtType (59).         *\r\n********************************************************\r\n*/\r\n  ContAmtValue = 520,\r\n/*\r\n****************************************************************\r\n* Specifies currency for the Contract amount if different from *\r\n* the Deal Currency - see \"Appendix 6-A; Valid Currency        *\r\n* Codes\".                                                      *\r\n****************************************************************\r\n*/\r\n  ContAmtCurr = 521,\r\n/*\r\n********************************\r\n* Identifies the type of owner *\r\n********************************\r\n*/\r\n  OwnerType = 522,\r\n/*\r\n****************************************************************\r\n* Sub-identifier (e.g. Clearing Account for PartyRole          *\r\n* (452)=Clearing Firm, Locate ID # for                         *\r\n* PartyRole=Locate/Lending Firm, etc). Not required when using *\r\n* PartyID (448), PartyIDSource (447), and PartyRole.           *\r\n****************************************************************\r\n*/\r\n  PartySubID = 523,\r\n/*\r\n**************************************************\r\n* PartyID value within a nested repeating group. *\r\n* Same values as PartyID (448)                   *\r\n**************************************************\r\n*/\r\n  NestedPartyID = 524,\r\n/*\r\n********************************************************\r\n* PartyIDSource value within a nested repeating group. *\r\n* Same values as PartyIDSource (447)                   *\r\n********************************************************\r\n*/\r\n  NestedPartyIDSource = 525,\r\n/*\r\n************************************************************\r\n* Assigned by the party which originates the order. Can be *\r\n* used to provide the ClOrdID (11) used by an exchange or  *\r\n* executing system.                                        *\r\n************************************************************\r\n*/\r\n  SecondaryClOrdID = 526,\r\n/*\r\n**************************************************************\r\n* Assigned by the party which accepts the order. Can be used *\r\n* to provide the ExecID (7) used by an exchange or executing *\r\n* system.                                                    *\r\n**************************************************************\r\n*/\r\n  SecondaryExecID = 527,\r\n/*\r\n***************************************************************\r\n* Designates the capacity of the firm placing the order       *\r\n* (as of FIX 4.3, this field replaced Rule80A (tag 47) --used *\r\n* in conjunction with OrderRestrictions (529) field)          *\r\n* (see Volume : \"Glossary\" for value definitions)             *\r\n***************************************************************\r\n*/\r\n  OrderCapacity = 528,\r\n/*\r\n***********************************************************\r\n* Restrictions associated with an order. If more than one *\r\n* restriction is applicable to an order, this field can   *\r\n* contain multiple instructions separated by space.       *\r\n***********************************************************\r\n*/\r\n  OrderRestrictions = 529,\r\n/*\r\n************************************************\r\n* Specifies scope of Order Mass Cancel Request *\r\n************************************************\r\n*/\r\n  MassCancelRequestType = 530,\r\n/*\r\n*************************************************************\r\n* Specifies the action taken by counterparty order handling *\r\n* system as a result of the Order Mass Cancel Request       *\r\n*************************************************************\r\n*/\r\n  MassCancelResponse = 531,\r\n/*\r\n*************************************************\r\n* Reason Order Mass Cancel Request was rejected *\r\n*************************************************\r\n*/\r\n  MassCancelRejectReason = 532,\r\n/*\r\n***********************************************************\r\n* Total number of orders affected by mass cancel request. *\r\n***********************************************************\r\n*/\r\n  TotalAffectedOrders = 533,\r\n/*\r\n*************************************************************\r\n* Number of affected orders in the repeating group of order *\r\n* ids.                                                      *\r\n*************************************************************\r\n*/\r\n  NoAffectedOrders = 534,\r\n/*\r\n***************************************************************\r\n* OrderID (37) of an order affected by a mass cancel request. *\r\n***************************************************************\r\n*/\r\n  AffectedOrderID = 535,\r\n/*\r\n***************************************************************\r\n* SecondaryOrderID (98) of an order affected by a mass cancel *\r\n* request.                                                    *\r\n***************************************************************\r\n*/\r\n  AffectedSecondaryOrderID = 536,\r\n/*\r\n****************************************************************\r\n* Identifies the type of quote.                                *\r\n* An indicative quote is used to inform a counterparty of a    *\r\n* market. An indicative quote does not result directly in a    *\r\n* trade.                                                       *\r\n* A tradeable quote is submitted to a market and will result   *\r\n* directly in a trade against other orders and quotes in a     *\r\n* market.                                                      *\r\n* A restricted tradeable quote is submitted to a market and    *\r\n* within a certain restriction (possibly based upon price or   *\r\n* quantity) will automatically trade against orders. Order     *\r\n* that do not comply with restrictions are sent to the quote   *\r\n* issuer who can choose to accept or decline the order.        *\r\n* A counter quote is used in the negotiation model. See Volume *\r\n* 7 \u0013 Product: Fixed Income for example usage.                 *\r\n****************************************************************\r\n*/\r\n  QuoteType = 537,\r\n/*\r\n****************************************************\r\n* PartyRole value within a nested repeating group. *\r\n* Same values as PartyRole (452)                   *\r\n****************************************************\r\n*/\r\n  NestedPartyRole = 538,\r\n/*\r\n*************************************************************\r\n* Number of NestedPartyID (524), NestedPartyIDSource (525), *\r\n* and NestedPartyRole (538) entries                         *\r\n*************************************************************\r\n*/\r\n  NoNestedPartyIDs = 539,\r\n/*\r\n****************************************************************\r\n* *** DEPRECATED FIELD - See \"Deprecated (Phased-out) Features *\r\n* and Supported Approach\" ***                                  *\r\n* Total Amount of Accrued Interest for convertible bonds and   *\r\n* fixed income                                                 *\r\n****************************************************************\r\n*/\r\n  TotalAccruedInterestAmt = 540,\r\n/*\r\n*********************\r\n* Date of maturity. *\r\n*********************\r\n*/\r\n  MaturityDate = 541,\r\n/*\r\n***********************************************\r\n* Underlying security\u0019s maturity date.        *\r\n* See MaturityDate (54) field for description *\r\n***********************************************\r\n*/\r\n  UnderlyingMaturityDate = 542,\r\n/*\r\n***************************************************************\r\n* The location at which records of ownership are maintained   *\r\n* for this instrument, and at which ownership changes must be *\r\n* recorded.                                                   *\r\n***************************************************************\r\n*/\r\n  InstrRegistry = 543,\r\n/*\r\n****************************************************************\r\n* Identifies whether an order is a margin order or a           *\r\n* non-margin order. This is primarily used when sending orders *\r\n* to Japanese exchanges to indicate sell margin or buy to      *\r\n* cover. The same tag could be assigned also by buy-side to    *\r\n* indicate the intent to sell or buy margin and the sell-side  *\r\n* to accept or reject (base on some validation criteria) the   *\r\n* margin request.                                              *\r\n****************************************************************\r\n*/\r\n  CashMargin = 544,\r\n/*\r\n*****************************************************\r\n* PartySubID value within a nested repeating group. *\r\n* Same values as PartySubID (523)                   *\r\n*****************************************************\r\n*/\r\n  NestedPartySubID = 545,\r\n/*\r\n***************************************\r\n* Defines the scope of a data element *\r\n***************************************\r\n*/\r\n  Scope = 546,\r\n/*\r\n************************************************************\r\n* Defines how a server handles distribution of a truncated *\r\n* book. Defaults to broker option.                         *\r\n************************************************************\r\n*/\r\n  MDImplicitDelete = 547,\r\n/*\r\n****************************************************************\r\n* Identifier for a cross order. Must be unique during a given  *\r\n* trading day. Recommend that firms use the order date as part *\r\n* of the CrossID for Good Till Cancel (GT) orders.             *\r\n****************************************************************\r\n*/\r\n  CrossID = 548,\r\n/*\r\n*********************************************\r\n* Type of cross being submitted to a market *\r\n*********************************************\r\n*/\r\n  CrossType = 549,\r\n/*\r\n**************************************************************\r\n* Indicates if one side or the other of a cross order should *\r\n* be prioritized.                                            *\r\n* The definition of prioritization is left to the market. In *\r\n* some markets prioritization means which side of the cross  *\r\n* order is applied to the market first. In other markets \u0013   *\r\n* prioritization may mean that the prioritized side is fully *\r\n* executed (sometimes referred to as the side being          *\r\n* protected).                                                *\r\n**************************************************************\r\n*/\r\n  CrossPrioritization = 550,\r\n/*\r\n***************************************************************\r\n* CrossID of the previous cross order (NOT the initial cross  *\r\n* order of the day) as assigned by the institution, used to   *\r\n* identify the previous cross order in Cross Cancel and Cross *\r\n* Cancel/Replace Requests.                                    *\r\n***************************************************************\r\n*/\r\n  OrigCrossID = 551,\r\n/*\r\n*********************************************\r\n* Number of Side repeating group instances. *\r\n*********************************************\r\n*/\r\n  NoSides = 552,\r\n/*\r\n***********************\r\n* Userid or username. *\r\n***********************\r\n*/\r\n  Username = 553,\r\n/*\r\n***************************\r\n* Password or passphrase. *\r\n***************************\r\n*/\r\n  Password = 554,\r\n/*\r\n******************************************************\r\n* Number of InstrumentLeg repeating group instances. *\r\n******************************************************\r\n*/\r\n  NoLegs = 555,\r\n/*\r\n********************************************************\r\n* Currency associated with a particular Leg's quantity *\r\n********************************************************\r\n*/\r\n  LegCurrency = 556,\r\n/*\r\n**************************************************************\r\n* Indicates total number of security types in the event that *\r\n* multiple Security Type messages are used to return results *\r\n* (Prior to FIX 4.4 this field was named                     *\r\n* TotalNumSecurityTypes)                                     *\r\n**************************************************************\r\n*/\r\n  TotNoSecurityTypes = 557,\r\n/*\r\n******************************************************\r\n* Number of Security Type repeating group instances. *\r\n******************************************************\r\n*/\r\n  NoSecurityTypes = 558,\r\n/*\r\n*********************************************************\r\n* Identifies the type/criteria of Security List Request *\r\n*********************************************************\r\n*/\r\n  SecurityListRequestType = 559,\r\n/*\r\n******************************************************\r\n* The results returned to a Security Request message *\r\n******************************************************\r\n*/\r\n  SecurityRequestResult = 560,\r\n/*\r\n**************************************\r\n* The trading lot size of a security *\r\n**************************************\r\n*/\r\n  RoundLot = 561,\r\n/*\r\n*********************************************\r\n* The minimum trading volume for a security *\r\n*********************************************\r\n*/\r\n  MinTradeVol = 562,\r\n/*\r\n************************************************************\r\n* Indicates the method of execution reporting requested by *\r\n* issuer of the order                                      *\r\n************************************************************\r\n*/\r\n  MultiLegRptTypeReq = 563,\r\n/*\r\n*************************************************\r\n* PositionEffect for leg of a multileg          *\r\n* See PositionEffect (77) field for description *\r\n*************************************************\r\n*/\r\n  LegPositionEffect = 564,\r\n/*\r\n******************************************************\r\n* CoveredOrUncovered for leg of a multileg           *\r\n* See CoveredOrUncovered (203) field for description *\r\n******************************************************\r\n*/\r\n  LegCoveredOrUncovered = 565,\r\n/*\r\n****************************************\r\n* Price for leg of a multileg          *\r\n* See Price (44) field for description *\r\n****************************************\r\n*/\r\n  LegPrice = 566,\r\n/*\r\n*************************************************************\r\n* Indicates the reason a Trading Session Status Request was *\r\n* rejected                                                  *\r\n*************************************************************\r\n*/\r\n  TradSesStatusRejReason = 567,\r\n/*\r\n***********************************\r\n* Trade Capture Report Request ID *\r\n***********************************\r\n*/\r\n  TradeRequestID = 568,\r\n/*\r\n********************************\r\n* Type of Trade Capture Report *\r\n********************************\r\n*/\r\n  TradeRequestType = 569,\r\n/*\r\n********************************************************\r\n* Indicates if the trade capture report was previously *\r\n* reported to the counterparty                         *\r\n********************************************************\r\n*/\r\n  PreviouslyReported = 570,\r\n/*\r\n*********************************************\r\n* Unique identifier of trade capture report *\r\n*********************************************\r\n*/\r\n  TradeReportID = 571,\r\n/*\r\n*****************************************************\r\n* Reference identifier used with CANCEL and REPLACE *\r\n* transaction types.                                *\r\n*****************************************************\r\n*/\r\n  TradeReportRefID = 572,\r\n/*\r\n********************************************************\r\n* The status of this trade with respect to matching or *\r\n* comparison                                           *\r\n********************************************************\r\n*/\r\n  MatchStatus = 573,\r\n/*\r\n*************************************************************\r\n* The point in the matching process at which this trade was *\r\n* matched                                                   *\r\n*************************************************************\r\n*/\r\n  MatchType = 574,\r\n/*\r\n*********************************************\r\n* This trade is to be treated as an odd lot *\r\n*********************************************\r\n*/\r\n  OddLot = 575,\r\n/*\r\n***********************************\r\n* Number of clearing instructions *\r\n***********************************\r\n*/\r\n  NoClearingInstructions = 576,\r\n/*\r\n******************************************************\r\n* Eligibility of this trade for clearing and central *\r\n* counterparty processing                            *\r\n******************************************************\r\n*/\r\n  ClearingInstruction = 577,\r\n/*\r\n***********************************************************\r\n* Type of input device or system from which the trade was *\r\n* entered.                                                *\r\n***********************************************************\r\n*/\r\n  TradeInputSource = 578,\r\n/*\r\n************************************************************\r\n* Specific device number, terminal number or station where *\r\n* trade was entered                                        *\r\n************************************************************\r\n*/\r\n  TradeInputDevice = 579,\r\n/*\r\n************************************************\r\n* Number of Date fields provided in date range *\r\n************************************************\r\n*/\r\n  NoDates = 580,\r\n/*\r\n********************************************\r\n* Type of account associated with an order *\r\n********************************************\r\n*/\r\n  AccountType = 581,\r\n/*\r\n***************************************************************\r\n* Capacity of customer placing the order                      *\r\n* Primarily used by futures exchanges to indicate the CTICode *\r\n* (customer type indicator) as required by the US CFTC        *\r\n* (Commodity Futures Trading Commission).                     *\r\n***************************************************************\r\n*/\r\n  CustOrderCapacity = 582,\r\n/*\r\n**************************************************************\r\n* Permits order originators to tie together groups of orders *\r\n* in which trades resulting from orders are associated for a *\r\n* specific purpose, for example the calculation of average   *\r\n* execution price for a customer or to associate lists       *\r\n* submitted to a broker as waves of a larger program trade.  *\r\n**************************************************************\r\n*/\r\n  ClOrdLinkID = 583,\r\n/*\r\n***************************************************************\r\n* Value assigned by issuer of Mass Status Request to uniquely *\r\n* identify the request                                        *\r\n***************************************************************\r\n*/\r\n  MassStatusReqID = 584,\r\n/*\r\n****************************\r\n* Mass Status Request Type *\r\n****************************\r\n*/\r\n  MassStatusReqType = 585,\r\n/*\r\n****************************************************************\r\n* The most recent (or current) modification TransactTime (tag  *\r\n* 60) reported on an Execution Report for the order.           *\r\n* The OrigOrdModTime is provided as an optional field on Order *\r\n* Cancel Request and Order Cancel Replace Requests to identify *\r\n* that the state of the order has not changed since the        *\r\n* request was issued.                                          *\r\n* This is provided to support markets similar to Eurex and     *\r\n* A/C/E.                                                       *\r\n****************************************************************\r\n*/\r\n  OrigOrdModTime = 586,\r\n/*\r\n*************************************\r\n* Refer to values for SettlType[63] *\r\n*************************************\r\n*/\r\n  LegSettlType = 587,\r\n/*\r\n******************************************\r\n* Refer to description for SettlDate[64] *\r\n******************************************\r\n*/\r\n  LegSettlDate = 588,\r\n/*\r\n*********************************************************\r\n* Indicates whether or not automatic booking can occur. *\r\n*********************************************************\r\n*/\r\n  DayBookingInst = 589,\r\n/*\r\n***********************************************\r\n* Indicates what constitutes a bookable unit. *\r\n***********************************************\r\n*/\r\n  BookingUnit = 590,\r\n/*\r\n******************************************\r\n* Indicates the method of preallocation. *\r\n******************************************\r\n*/\r\n  PreallocMethod = 591,\r\n/*\r\n**************************************************\r\n* Underlying security\u0019s CountryOfIssue.          *\r\n* See CountryOfIssue (470) field for description *\r\n**************************************************\r\n*/\r\n  UnderlyingCountryOfIssue = 592,\r\n/*\r\n**********************************************************\r\n* Underlying security\u0019s StateOrProvinceOfIssue.          *\r\n* See StateOrProvinceOfIssue (471) field for description *\r\n**********************************************************\r\n*/\r\n  UnderlyingStateOrProvinceOfIssue = 593,\r\n/*\r\n*************************************************\r\n* Underlying security\u0019s LocaleOfIssue.          *\r\n* See LocaleOfIssue (472) field for description *\r\n*************************************************\r\n*/\r\n  UnderlyingLocaleOfIssue = 594,\r\n/*\r\n*************************************************\r\n* Underlying security\u0019s InstrRegistry.          *\r\n* See InstrRegistry (543) field for description *\r\n*************************************************\r\n*/\r\n  UnderlyingInstrRegistry = 595,\r\n/*\r\n***************************************************\r\n* Multileg instrument's individual leg security\u0019s *\r\n* CountryOfIssue.                                 *\r\n* See CountryOfIssue (470) field for description  *\r\n***************************************************\r\n*/\r\n  LegCountryOfIssue = 596,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual leg security\u0019s        *\r\n* StateOrProvinceOfIssue.                                *\r\n* See StateOrProvinceOfIssue (471) field for description *\r\n**********************************************************\r\n*/\r\n  LegStateOrProvinceOfIssue = 597,\r\n/*\r\n***************************************************\r\n* Multileg instrument's individual leg security\u0019s *\r\n* LocaleOfIssue.                                  *\r\n* See LocaleOfIssue (472) field for description   *\r\n***************************************************\r\n*/\r\n  LegLocaleOfIssue = 598,\r\n/*\r\n***************************************************\r\n* Multileg instrument's individual leg security\u0019s *\r\n* InstrRegistry.                                  *\r\n* See InstrRegistry (543) field for description   *\r\n***************************************************\r\n*/\r\n  LegInstrRegistry = 599,\r\n/*\r\n*******************************************************\r\n* Multileg instrument's individual security\u0019s Symbol. *\r\n* See Symbol (55) field for description               *\r\n*******************************************************\r\n*/\r\n  LegSymbol = 600,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual security\u0019s SymbolSfx. *\r\n* See SymbolSfx (65) field for description               *\r\n**********************************************************\r\n*/\r\n  LegSymbolSfx = 601,\r\n/*\r\n***********************************************************\r\n* Multileg instrument's individual security\u0019s SecurityID. *\r\n* See SecurityID (48) field for description               *\r\n***********************************************************\r\n*/\r\n  LegSecurityID = 602,\r\n/*\r\n***************************************************\r\n* Multileg instrument's individual security\u0019s     *\r\n* SecurityIDSource.                               *\r\n* See SecurityIDSource (22) field for description *\r\n***************************************************\r\n*/\r\n  LegSecurityIDSource = 603,\r\n/*\r\n****************************************************************\r\n* Multileg instrument's individual security\u0019s NoSecurityAltID. *\r\n* See NoSecurityAltID (454) field for description              *\r\n****************************************************************\r\n*/\r\n  NoLegSecurityAltID = 604,\r\n/*\r\n**************************************************************\r\n* Multileg instrument's individual security\u0019s SecurityAltID. *\r\n* See SecurityAltID (455) field for description              *\r\n**************************************************************\r\n*/\r\n  LegSecurityAltID = 605,\r\n/*\r\n*******************************************************\r\n* Multileg instrument's individual security\u0019s         *\r\n* SecurityAltIDSource.                                *\r\n* See SecurityAltIDSource (456) field for description *\r\n*******************************************************\r\n*/\r\n  LegSecurityAltIDSource = 606,\r\n/*\r\n********************************************************\r\n* Multileg instrument's individual security\u0019s Product. *\r\n* See Product (460) field for description              *\r\n********************************************************\r\n*/\r\n  LegProduct = 607,\r\n/*\r\n********************************************************\r\n* Multileg instrument's individual security\u0019s CFICode. *\r\n* See CFICode (46) field for description               *\r\n********************************************************\r\n*/\r\n  LegCFICode = 608,\r\n/*\r\n*************************************************************\r\n* Multileg instrument's individual security\u0019s SecurityType. *\r\n* See SecurityType (67) field for description               *\r\n*************************************************************\r\n*/\r\n  LegSecurityType = 609,\r\n/*\r\n*****************************************************\r\n* Multileg instrument's individual security\u0019s       *\r\n* MaturityMonthYear.                                *\r\n* See MaturityMonthYear (200) field for description *\r\n*****************************************************\r\n*/\r\n  LegMaturityMonthYear = 610,\r\n/*\r\n*************************************************************\r\n* Multileg instrument's individual security\u0019s MaturityDate. *\r\n* See MaturityDate (54) field for description               *\r\n*************************************************************\r\n*/\r\n  LegMaturityDate = 611,\r\n/*\r\n************************************************************\r\n* Multileg instrument's individual security\u0019s StrikePrice. *\r\n* See StrikePrice (202) field for description              *\r\n************************************************************\r\n*/\r\n  LegStrikePrice = 612,\r\n/*\r\n*************************************************************\r\n* Multileg instrument's individual security\u0019s OptAttribute. *\r\n* See OptAttribute (206) field for description              *\r\n*************************************************************\r\n*/\r\n  LegOptAttribute = 613,\r\n/*\r\n*****************************************************\r\n* Multileg instrument's individual security\u0019s       *\r\n* ContractMultiplier.                               *\r\n* See ContractMultiplier (23) field for description *\r\n*****************************************************\r\n*/\r\n  LegContractMultiplier = 614,\r\n/*\r\n***********************************************************\r\n* Multileg instrument's individual security\u0019s CouponRate. *\r\n* See CouponRate (223) field for description              *\r\n***********************************************************\r\n*/\r\n  LegCouponRate = 615,\r\n/*\r\n****************************************************\r\n* Multileg instrument's individual security\u0019s      *\r\n* SecurityExchange.                                *\r\n* See SecurityExchange (207) field for description *\r\n****************************************************\r\n*/\r\n  LegSecurityExchange = 616,\r\n/*\r\n*******************************************************\r\n* Multileg instrument's individual security\u0019s Issuer. *\r\n* See Issuer (106) field for description              *\r\n*******************************************************\r\n*/\r\n  LegIssuer = 617,\r\n/*\r\n****************************************************\r\n* Multileg instrument's individual security\u0019s      *\r\n* EncodedIssuerLen.                                *\r\n* See EncodedIssuerLen (348) field for description *\r\n****************************************************\r\n*/\r\n  EncodedLegIssuerLen = 618,\r\n/*\r\n**************************************************************\r\n* Multileg instrument's individual security\u0019s EncodedIssuer. *\r\n* See EncodedIssuer (349) field for description              *\r\n**************************************************************\r\n*/\r\n  EncodedLegIssuer = 619,\r\n/*\r\n*************************************************************\r\n* Multileg instrument's individual security\u0019s SecurityDesc. *\r\n* See SecurityDesc (07) field for description               *\r\n*************************************************************\r\n*/\r\n  LegSecurityDesc = 620,\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual security\u0019s            *\r\n* EncodedSecurityDescLen.                                *\r\n* See EncodedSecurityDescLen (350) field for description *\r\n**********************************************************\r\n*/\r\n  EncodedLegSecurityDescLen = 621,\r\n/*\r\n******************************************************\r\n* Multileg instrument's individual security\u0019s        *\r\n* EncodedSecurityDesc.                               *\r\n* See EncodedSecurityDesc (35) field for description *\r\n******************************************************\r\n*/\r\n  EncodedLegSecurityDesc = 622,\r\n/*\r\n*************************************************************\r\n* The ratio of quantity for this individual leg relative to *\r\n* the entire multileg security.                             *\r\n*************************************************************\r\n*/\r\n  LegRatioQty = 623,\r\n/*\r\n********************************************************\r\n* The side of this individual leg (multileg security). *\r\n* See Side (54) field for description and values       *\r\n********************************************************\r\n*/\r\n  LegSide = 624,\r\n/*\r\n*************************************************************\r\n* Optional market assigned sub identifier for a trading     *\r\n* session. Usage is determined by market or counterparties. *\r\n* Used by US based futures markets to identify exchange     *\r\n* specific execution time bracket codes as required by US   *\r\n* market regulations.                                       *\r\n*************************************************************\r\n*/\r\n  TradingSessionSubID = 625,\r\n/*\r\n***********************************************************\r\n* Describes the specific type or purpose of an Allocation *\r\n* message (i.e. \"Buyside Calculated\")                     *\r\n***********************************************************\r\n*/\r\n  AllocType = 626,\r\n/*\r\n***************************************************\r\n* Number of HopCompID entries in repeating group. *\r\n***************************************************\r\n*/\r\n  NoHops = 627,\r\n/*\r\n****************************************************************\r\n* Assigned value used to identify the third party firm which   *\r\n* delivered a specific message either from the firm which      *\r\n* originated the message or from another third party (if       *\r\n* multiple \"hops\" are performed). It is recommended that this  *\r\n* value be the SenderCompID (49) of the third party.           *\r\n* Applicable when messages are communicated/re-distributed via *\r\n* third parties which function as service bureaus or \"hubs\".   *\r\n* Only applicable if OnBehalfOfCompID (5) is being used.       *\r\n****************************************************************\r\n*/\r\n  HopCompID = 628,\r\n/*\r\n****************************************************************\r\n* Time that HopCompID (628) sent the message. It is            *\r\n* recommended that this value be the SendingTime (52) of the   *\r\n* message sent by the third party.                             *\r\n* Applicable when messages are communicated/re-distributed via *\r\n* third parties which function as service bureaus or \"hubs\".   *\r\n* Only applicable if OnBehalfOfCompID (5) is being used.       *\r\n****************************************************************\r\n*/\r\n  HopSendingTime = 629,\r\n/*\r\n****************************************************************\r\n* Reference identifier assigned by HopCompID (628) associated  *\r\n* with the message sent. It is recommended that this value be  *\r\n* the MsgSeqNum (34) of the message sent by the third party.   *\r\n* Applicable when messages are communicated/re-distributed via *\r\n* third parties which function as service bureaus or \"hubs\".   *\r\n* Only applicable if OnBehalfOfCompID (5) is being used.       *\r\n****************************************************************\r\n*/\r\n  HopRefID = 630,\r\n/*\r\n******************\r\n* Mid price/rate *\r\n******************\r\n*/\r\n  MidPx = 631,\r\n/*\r\n*************\r\n* Bid yield *\r\n*************\r\n*/\r\n  BidYield = 632,\r\n/*\r\n*************\r\n* Mid yield *\r\n*************\r\n*/\r\n  MidYield = 633,\r\n/*\r\n***************\r\n* Offer yield *\r\n***************\r\n*/\r\n  OfferYield = 634,\r\n/*\r\n************************************************************\r\n* Indicates type of fee being assessed of the customer for *\r\n* trade executions at an exchange. Applicable for futures  *\r\n* markets only at this time.                               *\r\n* (Values source CBOT, CME, NYBOT, and NYMEX):             *\r\n************************************************************\r\n*/\r\n  ClearingFeeIndicator = 635,\r\n/*\r\n****************************************************************\r\n* Indicates if the order is currently being worked. Applicable *\r\n* only for OrdStatus = \"New\". For open outcry markets this     *\r\n* indicates that the order is being worked in the crowd. For   *\r\n* electronic markets it indicates that the order has           *\r\n* transitioned from a contingent order to a market order.      *\r\n****************************************************************\r\n*/\r\n  WorkingIndicator = 636,\r\n/*\r\n***************************************************************\r\n* Execution price assigned to a leg of a multileg instrument. *\r\n* See LastPx (31) field for description and values            *\r\n***************************************************************\r\n*/\r\n  LegLastPx = 637,\r\n/*\r\n*************************************************************\r\n* Indicates if a Cancel/Replace has caused an order to lose *\r\n* book priority                                             *\r\n*************************************************************\r\n*/\r\n  PriorityIndicator = 638,\r\n/*\r\n********************************\r\n* Amount of price improvement. *\r\n********************************\r\n*/\r\n  PriceImprovement = 639,\r\n/*\r\n*************************************************\r\n* Price of the future part of a F/X swap order. *\r\n* See Price (44) for description.               *\r\n*************************************************\r\n*/\r\n  Price2 = 640,\r\n/*\r\n*************************************************************\r\n* F/X forward points of the future part of a F/X swap order *\r\n* added to LastSpotRate (94). May be a negative value.      *\r\n*************************************************************\r\n*/\r\n  LastForwardPoints2 = 641,\r\n/*\r\n**************************************************************\r\n* Bid F/X forward points of the future portion of a F/X swap *\r\n* quote added to spot rate. May be a negative value.         *\r\n**************************************************************\r\n*/\r\n  BidForwardPoints2 = 642,\r\n/*\r\n****************************************************************\r\n* Offer F/X forward points of the future portion of a F/X swap *\r\n* quote added to spot rate. May be a negative value.           *\r\n****************************************************************\r\n*/\r\n  OfferForwardPoints2 = 643,\r\n/*\r\n*****************************************************\r\n* RFQ Request ID \u0013 used to identify an RFQ Request. *\r\n*****************************************************\r\n*/\r\n  RFQReqID = 644,\r\n/*\r\n*********************************************\r\n* Used to indicate the best bid in a market *\r\n*********************************************\r\n*/\r\n  MktBidPx = 645,\r\n/*\r\n***********************************************\r\n* Used to indicate the best offer in a market *\r\n***********************************************\r\n*/\r\n  MktOfferPx = 646,\r\n/*\r\n****************************************************************\r\n* Used to indicate a minimum quantity for a bid. If this field *\r\n* is used the BidSize (134) field is interpreted as the        *\r\n* maximum bid size                                             *\r\n****************************************************************\r\n*/\r\n  MinBidSize = 647,\r\n/*\r\n*************************************************************\r\n* Used to indicate a minimum quantity for an offer. If this *\r\n* field is used the OfferSize (135) field is interpreted as *\r\n* the maximum offer size.                                   *\r\n*************************************************************\r\n*/\r\n  MinOfferSize = 648,\r\n/*\r\n***********************************************\r\n* Unique identifier for Quote Status Request. *\r\n***********************************************\r\n*/\r\n  QuoteStatusReqID = 649,\r\n/*\r\n************************************************************\r\n* Indicates that this message is to serve as the final and *\r\n* legal confirmation.                                      *\r\n************************************************************\r\n*/\r\n  LegalConfirm = 650,\r\n/*\r\n****************************************************************\r\n* The calculated or traded price for the underlying instrument *\r\n* that corresponds to a derivative. Used for transactions that *\r\n* include the cash instrument and the derivative.              *\r\n****************************************************************\r\n*/\r\n  UnderlyingLastPx = 651,\r\n/*\r\n*********************************************************\r\n* The calculated or traded quantity for the underlying  *\r\n* instrument that corresponds to a derivative. Used for *\r\n* transactions that include the cash instrument and the *\r\n* derivative.                                           *\r\n*********************************************************\r\n*/\r\n  UnderlyingLastQty = 652,\r\n/*\r\n****************************************\r\n* Unique indicator for a specific leg. *\r\n****************************************\r\n*/\r\n  LegRefID = 654,\r\n/*\r\n************************************************************\r\n* Unique indicator for a specific leg for the ContraBroker *\r\n* (375).                                                   *\r\n************************************************************\r\n*/\r\n  ContraLegRefID = 655,\r\n/*\r\n****************************************************************\r\n* Foreign exchange rate used to compute the bid \"SettlCurrAmt\" *\r\n* (119) from Currency (15) to SettlCurrency (120)              *\r\n****************************************************************\r\n*/\r\n  SettlCurrBidFxRate = 656,\r\n/*\r\n************************************************************\r\n* Foreign exchange rate used to compute the offer          *\r\n* \"SettlCurrAmt\" (119) from Currency (15) to SettlCurrency *\r\n* (120)                                                    *\r\n************************************************************\r\n*/\r\n  SettlCurrOfferFxRate = 657,\r\n/*\r\n******************************\r\n* Reason Quote was rejected: *\r\n******************************\r\n*/\r\n  QuoteRequestRejectReason = 658,\r\n/*\r\n************************************************************\r\n* ID within repeating group of sides which is used to      *\r\n* represent this transaction for compliance purposes (e.g. *\r\n* OATS reporting).                                         *\r\n************************************************************\r\n*/\r\n  SideComplianceID = 659,\r\n/*\r\n****************************************************************\r\n* Used to identify the source of the Account (1) code. This is *\r\n* especially useful if the account is a new account that the   *\r\n* Respondent may not have setup yet in their system.           *\r\n****************************************************************\r\n*/\r\n  AcctIDSource = 660,\r\n/*\r\n**************************************************************\r\n* Used to identify the source of the AllocAccount (79) code. *\r\n* See AcctIDSource (660) for valid values.                   *\r\n**************************************************************\r\n*/\r\n  AllocAcctIDSource = 661,\r\n/*\r\n*****************************************\r\n* Specifies the price of the benchmark. *\r\n*****************************************\r\n*/\r\n  BenchmarkPrice = 662,\r\n/*\r\n********************************************\r\n* Identifies type of BenchmarkPrice (662). *\r\n* See PriceType (423) for valid values.    *\r\n********************************************\r\n*/\r\n  BenchmarkPriceType = 663,\r\n/*\r\n**************************************\r\n* Message reference for Confirmation *\r\n**************************************\r\n*/\r\n  ConfirmID = 664,\r\n/*\r\n**********************************************\r\n* Identifies the status of the Confirmation. *\r\n**********************************************\r\n*/\r\n  ConfirmStatus = 665,\r\n/*\r\n************************************************\r\n* Identifies the Confirmation transaction type *\r\n************************************************\r\n*/\r\n  ConfirmTransType = 666,\r\n/*\r\n***********************************************************\r\n* Specifies when the contract (i.e. MBS/TBA) will settle. *\r\n***********************************************************\r\n*/\r\n  ContractSettlMonth = 667,\r\n/*\r\n***********************************\r\n* Identifies the form of delivery *\r\n***********************************\r\n*/\r\n  DeliveryForm = 668,\r\n/*\r\n***********************************************************\r\n* Last price expressed in percent-of-par. Conditionally   *\r\n* required for Fixed Income trades when LastPx (3) is     *\r\n* expressed in Yield, Spread, Discount or any other type. *\r\n* Usage: Execution Report and Allocation Report repeating *\r\n* executions block (from sellside).                       *\r\n***********************************************************\r\n*/\r\n  LastParPx = 669,\r\n/*\r\n*************************************\r\n* Number of Allocations for the leg *\r\n*************************************\r\n*/\r\n  NoLegAllocs = 670,\r\n/*\r\n***********************************************************\r\n* Allocation Account for the leg                          *\r\n* See AllocAccount (79) for description and valid values. *\r\n***********************************************************\r\n*/\r\n  LegAllocAccount = 671,\r\n/*\r\n*********************************************************\r\n* Reference for the individual allocation ticket        *\r\n* See IndividualAllocID (467) for description and valid *\r\n* values.                                               *\r\n*********************************************************\r\n*/\r\n  LegIndividualAllocID = 672,\r\n/*\r\n*******************************************************\r\n* Leg allocation quantity.                            *\r\n* See AllocQty (80) for description and valid values. *\r\n*******************************************************\r\n*/\r\n  LegAllocQty = 673,\r\n/*\r\n****************************************************************\r\n* The source of the LegAllocAccount (67)                       *\r\n* See AllocAcctIDSource (66) for description and valid values. *\r\n****************************************************************\r\n*/\r\n  LegAllocAcctIDSource = 674,\r\n/*\r\n***********************************************************\r\n* Identifies settlement currency for the Leg.             *\r\n* See SettlCurrency (20) for description and valid values *\r\n***********************************************************\r\n*/\r\n  LegSettlCurrency = 675,\r\n/*\r\n**************************************************************\r\n* LegBenchmarkPrice (679) currency                           *\r\n* See BenchmarkCurveCurrency (220) for description and valid *\r\n* values.                                                    *\r\n**************************************************************\r\n*/\r\n  LegBenchmarkCurveCurrency = 676,\r\n/*\r\n*********************************************************\r\n* Name of the Leg Benchmark Curve.                      *\r\n* See BenchmarkCurveName (22) for description and valid *\r\n* values.                                               *\r\n*********************************************************\r\n*/\r\n  LegBenchmarkCurveName = 677,\r\n/*\r\n***********************************************************\r\n* Identifies the point on the Leg Benchmark Curve.        *\r\n* See BenchmarkCurvePoint (222) for description and valid *\r\n* values.                                                 *\r\n***********************************************************\r\n*/\r\n  LegBenchmarkCurvePoint = 678,\r\n/*\r\n**************************************************************\r\n* Used to identify the price of the benchmark security.      *\r\n* See BenchmarkPrice (662) for description and valid values. *\r\n**************************************************************\r\n*/\r\n  LegBenchmarkPrice = 679,\r\n/*\r\n**********************************************************\r\n* The price type of the LegBenchmarkPrice.               *\r\n* See BenchmarkPriceType (663) for description and valid *\r\n* values.                                                *\r\n**********************************************************\r\n*/\r\n  LegBenchmarkPriceType = 680,\r\n/*\r\n****************************************************\r\n* Bid price of this leg.                           *\r\n* See BidPx (32) for description and valid values. *\r\n****************************************************\r\n*/\r\n  LegBidPx = 681,\r\n/*\r\n****************************************************\r\n* Leg-specific IOI quantity.                       *\r\n* See IOIQty (27) for description and valid values *\r\n****************************************************\r\n*/\r\n  LegIOIQty = 682,\r\n/*\r\n*************************************\r\n* Number of leg stipulation entries *\r\n*************************************\r\n*/\r\n  NoLegStipulations = 683,\r\n/*\r\n*****************************************************\r\n* Offer price of this leg.                          *\r\n* See OfferPx (33) for description and valid values *\r\n*****************************************************\r\n*/\r\n  LegOfferPx = 684,\r\n/*\r\n****************************************************************\r\n* The price type of the LegBidPx (68) and/or LegOfferPx (684). *\r\n* See PriceType (423) for description and valid values         *\r\n****************************************************************\r\n*/\r\n  LegPriceType = 686,\r\n/*\r\n******************************************************\r\n* Quantity of this leg, e.g. in Quote dialog.        *\r\n* See Quantity (53) for description and valid values *\r\n******************************************************\r\n*/\r\n  LegQty = 687,\r\n/*\r\n**************************************************************\r\n* For Fixed Income, type of Stipulation for this leg.        *\r\n* See StipulationType (233) for description and valid values *\r\n**************************************************************\r\n*/\r\n  LegStipulationType = 688,\r\n/*\r\n***************************************************************\r\n* For Fixed Income, value of stipulation.                     *\r\n* See StipulationValue (234) for description and valid values *\r\n***************************************************************\r\n*/\r\n  LegStipulationValue = 689,\r\n/*\r\n**************************************************************\r\n* For Fixed Income, used instead of LegQty (687) or          *\r\n* LegOrderQty (685) to requests the respondent to calculate  *\r\n* the quantity based on the quantity on the opposite side of *\r\n* the swap.                                                  *\r\n**************************************************************\r\n*/\r\n  LegSwapType = 690,\r\n/*\r\n************************************************\r\n* For Fixed Income, identifies MBS / ABS pool. *\r\n************************************************\r\n*/\r\n  Pool = 691,\r\n/*\r\n***************************************************\r\n* Code to represent price type requested in Quote *\r\n***************************************************\r\n*/\r\n  QuotePriceType = 692,\r\n/*\r\n****************************************\r\n* Message reference for Quote Response *\r\n****************************************\r\n*/\r\n  QuoteRespID = 693,\r\n/*\r\n*****************************************\r\n* Identifies the type of Quote Response *\r\n*****************************************\r\n*/\r\n  QuoteRespType = 694,\r\n/*\r\n***********************************************************\r\n* Code to qualify Quote use                               *\r\n* See IOIQualifier (04) for description and valid values. *\r\n***********************************************************\r\n*/\r\n  QuoteQualifier = 695,\r\n/*\r\n***************************************************************\r\n* Date to which the yield has been calculated (i.e. maturity, *\r\n* par call or current call, pre-refunded date).               *\r\n***************************************************************\r\n*/\r\n  YieldRedemptionDate = 696,\r\n/*\r\n*************************************************\r\n* Price to which the yield has been calculated. *\r\n*************************************************\r\n*/\r\n  YieldRedemptionPrice = 697,\r\n/*\r\n*********************************************************\r\n* The price type of the YieldRedemptionPrice (697)      *\r\n* See PriceType (423) for description and valid values. *\r\n*********************************************************\r\n*/\r\n  YieldRedemptionPriceType = 698,\r\n/*\r\n*************************************************************\r\n* The identifier of the benchmark security, e.g. Treasury   *\r\n* against Corporate bond.                                   *\r\n* See SecurityID (tag 48) for description and valid values. *\r\n*************************************************************\r\n*/\r\n  BenchmarkSecurityID = 699,\r\n/*\r\n*****************************************************\r\n* Indicates a trade that reverses a previous trade. *\r\n*****************************************************\r\n*/\r\n  ReversalIndicator = 700,\r\n/*\r\n****************************************************************\r\n* Include as needed to clarify yield irregularities associated *\r\n* with date, e.g. when it falls on a non-business day.         *\r\n****************************************************************\r\n*/\r\n  YieldCalcDate = 701,\r\n/*\r\n*******************************\r\n* Number of position entries. *\r\n*******************************\r\n*/\r\n  NoPositions = 702,\r\n/*\r\n****************************************************************\r\n* Used to identify the type of quantity that is being returned *\r\n****************************************************************\r\n*/\r\n  PosType = 703,\r\n/*\r\n*****************\r\n* Long Quantity *\r\n*****************\r\n*/\r\n  LongQty = 704,\r\n/*\r\n******************\r\n* Short Quantity *\r\n******************\r\n*/\r\n  ShortQty = 705,\r\n/*\r\n***************************\r\n* Status of this position *\r\n***************************\r\n*/\r\n  PosQtyStatus = 706,\r\n/*\r\n***************************\r\n* Type of Position amount *\r\n***************************\r\n*/\r\n  PosAmtType = 707,\r\n/*\r\n*******************\r\n* Position amount *\r\n*******************\r\n*/\r\n  PosAmt = 708,\r\n/*\r\n***********************************************\r\n* Identifies the type of position transaction *\r\n***********************************************\r\n*/\r\n  PosTransType = 709,\r\n/*\r\n*************************************************************\r\n* Unique identifier for the position maintenance request as *\r\n* assigned by the submitter                                 *\r\n*************************************************************\r\n*/\r\n  PosReqID = 710,\r\n/*\r\n********************************************************\r\n* Number of underlying legs that make up the security. *\r\n********************************************************\r\n*/\r\n  NoUnderlyings = 711,\r\n/*\r\n**************************************\r\n* Maintenance Action to be performed *\r\n**************************************\r\n*/\r\n  PosMaintAction = 712,\r\n/*\r\n*************************************************************\r\n* Reference to the PosReqID (710) of a previous maintenance *\r\n* request that is being replaced or canceled.               *\r\n*************************************************************\r\n*/\r\n  OrigPosReqRefID = 713,\r\n/*\r\n***************************************************************\r\n* Reference to a PosMaintRptID (721) from a previous Position *\r\n* Maintenance Report that is being replaced or canceled.      *\r\n***************************************************************\r\n*/\r\n  PosMaintRptRefID = 714,\r\n/*\r\n****************************************************************\r\n* The \"Clearing Business Date\" referred to by this maintenance *\r\n* request.                                                     *\r\n****************************************************************\r\n*/\r\n  ClearingBusinessDate = 715,\r\n/*\r\n********************************************\r\n* Identifies a specific settlement session *\r\n********************************************\r\n*/\r\n  SettlSessID = 716,\r\n/*\r\n************************************************\r\n* SubID value associated with SettlSessID (76) *\r\n************************************************\r\n*/\r\n  SettlSessSubID = 717,\r\n/*\r\n********************************************************\r\n* Type of adjustment to be applied, used for PCS & PAJ *\r\n********************************************************\r\n*/\r\n  AdjustmentType = 718,\r\n/*\r\n****************************************************************\r\n* Required to be set to true (Y) when a position maintenance   *\r\n* request is being performed contrary to current money         *\r\n* position.                                                    *\r\n* Required when an exercise of an out of the money position is *\r\n* requested or an abandonement (do not exercise ) for an in    *\r\n* the money position.                                          *\r\n****************************************************************\r\n*/\r\n  ContraryInstructionIndicator = 719,\r\n/*\r\n************************************************************\r\n* Indicates if requesting a rollover of prior day\u0019s spread *\r\n* submissions.                                             *\r\n************************************************************\r\n*/\r\n  PriorSpreadIndicator = 720,\r\n/*\r\n**********************************************\r\n* Unique identifier for this position report *\r\n**********************************************\r\n*/\r\n  PosMaintRptID = 721,\r\n/*\r\n******************************************\r\n* Status of Position Maintenance Request *\r\n******************************************\r\n*/\r\n  PosMaintStatus = 722,\r\n/*\r\n*******************************************\r\n* Result of Position Maintenance Request. *\r\n*******************************************\r\n*/\r\n  PosMaintResult = 723,\r\n/*\r\n*************************************************************\r\n* Unique identifier for the position maintenance request as *\r\n* assigned by the submitter                                 *\r\n*************************************************************\r\n*/\r\n  PosReqType = 724,\r\n/*\r\n********************************************************\r\n* Identifies how the response to the request should be *\r\n* transmitted                                          *\r\n********************************************************\r\n*/\r\n  ResponseTransportType = 725,\r\n/*\r\n****************************************************************\r\n* URI (Uniform Resource Identifier) for details) or other      *\r\n* pre-arranged value. Used in conjunction with                 *\r\n* ResponseTransportType (725) value of Out-of-Band to identify *\r\n* the out-of-band destination.                                 *\r\n* See \"Appendix 6-B FIX Fields Based Upon Other Standards\"     *\r\n****************************************************************\r\n*/\r\n  ResponseDestination = 726,\r\n/*\r\n****************************************************\r\n* Total number of Position Reports being returned. *\r\n****************************************************\r\n*/\r\n  TotalNumPosReports = 727,\r\n/*\r\n*************************************************************\r\n* Result of Request for Position                            *\r\n* 4000+ Reserved and available for bi-laterally agreed upon *\r\n* user-defined values                                       *\r\n*************************************************************\r\n*/\r\n  PosReqResult = 728,\r\n/*\r\n***********************************\r\n* Status of Request for Positions *\r\n***********************************\r\n*/\r\n  PosReqStatus = 729,\r\n/*\r\n********************\r\n* Settlement price *\r\n********************\r\n*/\r\n  SettlPrice = 730,\r\n/*\r\n****************************\r\n* Type of settlement price *\r\n****************************\r\n*/\r\n  SettlPriceType = 731,\r\n/*\r\n**********************************************\r\n* Underlying security\u0019s SettlPrice.          *\r\n* See SettlPrice (730) field for description *\r\n**********************************************\r\n*/\r\n  UnderlyingSettlPrice = 732,\r\n/*\r\n*************************************************\r\n* Underlying security\u0019s SettlPriceType.         *\r\n* See SettlPriceType (73) field for description *\r\n*************************************************\r\n*/\r\n  UnderlyingSettlPriceType = 733,\r\n/*\r\n*****************************\r\n* Previous settlement price *\r\n*****************************\r\n*/\r\n  PriorSettlPrice = 734,\r\n/*\r\n********************************************************\r\n* Number of repeating groups of QuoteQualifiers (695). *\r\n********************************************************\r\n*/\r\n  NoQuoteQualifiers = 735,\r\n/*\r\n***********************************************************\r\n* Currency code of settlement denomination for a specific *\r\n* AllocAccount (79).                                      *\r\n***********************************************************\r\n*/\r\n  AllocSettlCurrency = 736,\r\n/*\r\n***************************************************************\r\n* Total amount due expressed in settlement currency (includes *\r\n* the effect of the forex transaction) for a specific         *\r\n* AllocAccount (79).                                          *\r\n***************************************************************\r\n*/\r\n  AllocSettlCurrAmt = 737,\r\n/*\r\n***************************************************\r\n* Amount of interest (i.e. lump-sum) at maturity. *\r\n***************************************************\r\n*/\r\n  InterestAtMaturity = 738,\r\n/*\r\n****************************************************************\r\n* The effective date of a new securities issue determined by   *\r\n* its underwriters. Often but not always the same as the Issue *\r\n* Date and the Interest Accrual Date                           *\r\n****************************************************************\r\n*/\r\n  LegDatedDate = 739,\r\n/*\r\n**************************************************************\r\n* For Fixed Income, identifies MBS / ABS pool for a specific *\r\n* leg of a multi-leg instrument.                             *\r\n* See Pool (69) for description and valid values.            *\r\n**************************************************************\r\n*/\r\n  LegPool = 740,\r\n/*\r\n*********************************************************\r\n* Amount of interest (i.e. lump-sum) at maturity at the *\r\n* account-level.                                        *\r\n*********************************************************\r\n*/\r\n  AllocInterestAtMaturity = 741,\r\n/*\r\n**************************************************************\r\n* Amount of Accrued Interest for convertible bonds and fixed *\r\n* income at the allocation-level.                            *\r\n**************************************************************\r\n*/\r\n  AllocAccruedInterestAmt = 742,\r\n/*\r\n*********************\r\n* Date of delivery. *\r\n*********************\r\n*/\r\n  DeliveryDate = 743,\r\n/*\r\n***********************************************\r\n* Method under which assignment was conducted *\r\n***********************************************\r\n*/\r\n  AssignmentMethod = 744,\r\n/*\r\n*****************************************************\r\n* Quantity Increment used in performing assignment. *\r\n*****************************************************\r\n*/\r\n  AssignmentUnit = 745,\r\n/*\r\n***************************************************\r\n* Open interest that was eligible for assignment. *\r\n***************************************************\r\n*/\r\n  OpenInterest = 746,\r\n/*\r\n****************************************************\r\n* Exercise Method used to in performing assignment *\r\n****************************************************\r\n*/\r\n  ExerciseMethod = 747,\r\n/*\r\n*******************************************\r\n* Total number of trade reports returned. *\r\n*******************************************\r\n*/\r\n  TotNumTradeReports = 748,\r\n/*\r\n*************************************************************\r\n* Result of Trade Request                                   *\r\n* 4000+ Reserved and available for bi-laterally agreed upon *\r\n* user-defined values                                       *\r\n*************************************************************\r\n*/\r\n  TradeRequestResult = 749,\r\n/*\r\n****************************\r\n* Status of Trade Request. *\r\n****************************\r\n*/\r\n  TradeRequestStatus = 750,\r\n/*\r\n*************************************************************\r\n* Reason Trade Capture Request was rejected.                *\r\n* 4000+ Reserved and available for bi-laterally agreed upon *\r\n* user-defined values                                       *\r\n*************************************************************\r\n*/\r\n  TradeReportRejectReason = 751,\r\n/*\r\n****************************************************************\r\n* Used to indicate if the side being reported on Trade Capture *\r\n* Report represents a leg of a multileg instrument or a single *\r\n* security                                                     *\r\n****************************************************************\r\n*/\r\n  SideMultiLegReportingType = 752,\r\n/*\r\n**************************************\r\n* Number of position amount entries. *\r\n**************************************\r\n*/\r\n  NoPosAmt = 753,\r\n/*\r\n*************************************************************\r\n* Identifies whether or not an allocation has been          *\r\n* automatically accepted on behalf of the Carry Firm by the *\r\n* Clearing House.                                           *\r\n*************************************************************\r\n*/\r\n  AutoAcceptIndicator = 754,\r\n/*\r\n****************************************************\r\n* Unique identifier for Allocation Report message. *\r\n****************************************************\r\n*/\r\n  AllocReportID = 755,\r\n/*\r\n***************************************************************\r\n* Number of Nested2PartyID (757), Nested2PartyIDSource (758), *\r\n* and Nested2PartyRole (759) entries                          *\r\n***************************************************************\r\n*/\r\n  NoNested2PartyIDs = 756,\r\n/*\r\n*************************************************************\r\n* PartyID value within a \"second instance\" Nested repeating *\r\n* group.                                                    *\r\n* Same values as PartyID (448)                              *\r\n*************************************************************\r\n*/\r\n  Nested2PartyID = 757,\r\n/*\r\n*********************************************************\r\n* PartyIDSource value within a \"second instance\" Nested *\r\n* repeating group.                                      *\r\n* Same values as PartyIDSource (447)                    *\r\n*********************************************************\r\n*/\r\n  Nested2PartyIDSource = 758,\r\n/*\r\n***************************************************************\r\n* PartyRole value within a \"second instance\" Nested repeating *\r\n* group.                                                      *\r\n* Same values as PartyRole (452)                              *\r\n***************************************************************\r\n*/\r\n  Nested2PartyRole = 759,\r\n/*\r\n****************************************************************\r\n* PartySubID value within a \"second instance\" Nested repeating *\r\n* group.                                                       *\r\n* Same values as PartySubID (523)                              *\r\n****************************************************************\r\n*/\r\n  Nested2PartySubID = 760,\r\n/*\r\n***************************************************************\r\n* Identifies class or source of the BenchmarkSecurityID (699) *\r\n* value. Required if BenchmarkSecurityID is specified.        *\r\n* Same values as the SecurityIDSource (22) field              *\r\n***************************************************************\r\n*/\r\n  BenchmarkSecurityIDSource = 761,\r\n/*\r\n***************************************************************\r\n* Sub-type qualification/identification of the SecurityType   *\r\n* (e.g. for SecurityType=\"REPO\").                             *\r\n* Example Values:                                             *\r\n* General = General Collateral (for SecurityType=REPO)        *\r\n* For SecurityType=\"MLEG\" markets can provide the name of the *\r\n* option or futures strategy, such as Calendar, Vertical,     *\r\n* Butterfly, etc.                                             *\r\n* NOTE: Additional values may be used by mutual agreement of  *\r\n* the counterparties                                          *\r\n***************************************************************\r\n*/\r\n  SecuritySubType = 762,\r\n/*\r\n***************************************************\r\n* Underlying security\u0019s SecuritySubType.          *\r\n* See SecuritySubType (762) field for description *\r\n***************************************************\r\n*/\r\n  UnderlyingSecuritySubType = 763,\r\n/*\r\n***************************************************\r\n* SecuritySubType of the leg instrument.          *\r\n* See SecuritySubType (762) field for description *\r\n***************************************************\r\n*/\r\n  LegSecuritySubType = 764,\r\n/*\r\n**********************************************************\r\n* The maximum percentage that execution of one side of a *\r\n* program trade can exceed execution of the other.       *\r\n**********************************************************\r\n*/\r\n  AllowableOneSidednessPct = 765,\r\n/*\r\n**************************************************************\r\n* The maximum amount that execution of one side of a program *\r\n* trade can exceed execution of the other.                   *\r\n**************************************************************\r\n*/\r\n  AllowableOneSidednessValue = 766,\r\n/*\r\n*********************************************************\r\n* The currency that AllowableOneSidednessValue (766) is *\r\n* expressed in if AllowableOneSidednessValue is used.   *\r\n*********************************************************\r\n*/\r\n  AllowableOneSidednessCurr = 767,\r\n/*\r\n*******************************************\r\n* Number of TrdRegTimestamp (769) entries *\r\n*******************************************\r\n*/\r\n  NoTrdRegTimestamps = 768,\r\n/*\r\n*************************************************************\r\n* Traded / Regulatory timestamp value. Use to store time    *\r\n* information required by government regulators or self     *\r\n* regulatory organizations (such as an exchange or clearing *\r\n* house).                                                   *\r\n*************************************************************\r\n*/\r\n  TrdRegTimestamp = 769,\r\n/*\r\n************************************************************\r\n* Traded / Regulatory timestamp type                       *\r\n* Note of Applicability: values are required in US futures *\r\n* markets by the CFTC to support computerized trade        *\r\n* reconstruction.                                          *\r\n* (see Volume : \"Glossary\" for value definitions)          *\r\n************************************************************\r\n*/\r\n  TrdRegTimestampType = 770,\r\n/*\r\n****************************************************************\r\n* Text which identifies the \"origin\" (i.e. system which was    *\r\n* used to generate the time stamp) for the Traded / Regulatory *\r\n* timestamp value.                                             *\r\n****************************************************************\r\n*/\r\n  TrdRegTimestampOrigin = 771,\r\n/*\r\n***************************************************************\r\n* Reference identifier to be used with ConfirmTransType (666) *\r\n* = Replace or Cancel                                         *\r\n***************************************************************\r\n*/\r\n  ConfirmRefID = 772,\r\n/*\r\n**********************************************************\r\n* Identifies the type of Confirmation message being sent *\r\n**********************************************************\r\n*/\r\n  ConfirmType = 773,\r\n/*\r\n******************************************************\r\n* Identifies the reason for rejecting a Confirmation *\r\n******************************************************\r\n*/\r\n  ConfirmRejReason = 774,\r\n/*\r\n**************************************************************\r\n* Method for booking out this order. Used when notifying a   *\r\n* broker that an order to be settled by that broker is to be *\r\n* booked out as an OTC derivative (e.g. CFD or similar).     *\r\n**************************************************************\r\n*/\r\n  BookingType = 775,\r\n/*\r\n**************************************************************\r\n* Identified reason for rejecting an individual AllocAccount *\r\n* (79) detail.                                               *\r\n* Same values as AllocRejCode (88)                           *\r\n**************************************************************\r\n*/\r\n  IndividualAllocRejCode = 776,\r\n/*\r\n*********************************************************\r\n* Unique identifier for Settlement Instruction message. *\r\n*********************************************************\r\n*/\r\n  SettlInstMsgID = 777,\r\n/*\r\n*************************************************************\r\n* Number of settlement instructions within repeating group. *\r\n*************************************************************\r\n*/\r\n  NoSettlInst = 778,\r\n/*\r\n************************************************************\r\n* Timestamp of last update to data item (or creation if no *\r\n* updates made since creation).                            *\r\n************************************************************\r\n*/\r\n  LastUpdateTime = 779,\r\n/*\r\n**************************************************************\r\n* Used to indicate whether settlement instructions are       *\r\n* provided on an allocation instruction message, and if not, *\r\n* how they are to be derived                                 *\r\n**************************************************************\r\n*/\r\n  AllocSettlInstType = 780,\r\n/*\r\n***************************************************************\r\n* Number of SettlPartyID (782), SettlPartyIDSource (783), and *\r\n* SettlPartyRole (784) entries                                *\r\n***************************************************************\r\n*/\r\n  NoSettlPartyIDs = 781,\r\n/*\r\n***************************************************************\r\n* PartyID value within a settlement parties component. Nested *\r\n* repeating group.                                            *\r\n* Same values as PartyID (448)                                *\r\n***************************************************************\r\n*/\r\n  SettlPartyID = 782,\r\n/*\r\n**************************************************************\r\n* PartyIDSource value within a settlement parties component. *\r\n* Same values as PartyIDSource (447)                         *\r\n**************************************************************\r\n*/\r\n  SettlPartyIDSource = 783,\r\n/*\r\n**********************************************************\r\n* PartyRole value within a settlement parties component. *\r\n* Same values as PartyRole (452)                         *\r\n**********************************************************\r\n*/\r\n  SettlPartyRole = 784,\r\n/*\r\n***********************************************************\r\n* PartySubID value within a settlement parties component. *\r\n* Same values as PartySubID (523)                         *\r\n***********************************************************\r\n*/\r\n  SettlPartySubID = 785,\r\n/*\r\n****************************************\r\n* Type of SettlPartySubID (785) value. *\r\n* Same values as PartySubIDType (803)  *\r\n****************************************\r\n*/\r\n  SettlPartySubIDType = 786,\r\n/*\r\n***************************************************************\r\n* Used to indicate whether a delivery instruction is used for *\r\n* securities or cash settlement                               *\r\n***************************************************************\r\n*/\r\n  DlvyInstType = 787,\r\n/*\r\n*********************************\r\n* Type of financing termination *\r\n*********************************\r\n*/\r\n  TerminationType = 788,\r\n/*\r\n*************************************************\r\n* Next expected MsgSeqNum value to be received. *\r\n*************************************************\r\n*/\r\n  NextExpectedMsgSeqNum = 789,\r\n/*\r\n************************************************************\r\n* Can be used to uniquely identify a specific Order Status *\r\n* Request message.                                         *\r\n************************************************************\r\n*/\r\n  OrdStatusReqID = 790,\r\n/*\r\n*******************************************************\r\n* Unique ID of settlement instruction request message *\r\n*******************************************************\r\n*/\r\n  SettlInstReqID = 791,\r\n/*\r\n****************************************************************\r\n* Identifies reason for rejection (of a settlement instruction *\r\n* request message)                                             *\r\n****************************************************************\r\n*/\r\n  SettlInstReqRejCode = 792,\r\n/*\r\n****************************************************************\r\n* Secondary allocation identifier. Unlike the AllocID (70),    *\r\n* this can be shared across a number of allocation instruction *\r\n* or allocation report messages, thereby making it possible to *\r\n* pass an identifier for an original allocation message on     *\r\n* multiple messages (e.g. from one party to a second to a      *\r\n* third, across cancel and replace messages etc.).             *\r\n****************************************************************\r\n*/\r\n  SecondaryAllocID = 793,\r\n/*\r\n***********************************************************\r\n* Describes the specific type or purpose of an Allocation *\r\n* Report message                                          *\r\n***********************************************************\r\n*/\r\n  AllocReportType = 794,\r\n/*\r\n*************************************************************\r\n* Reference identifier to be used with AllocTransType (7) = *\r\n* Replace or Cancel                                         *\r\n*************************************************************\r\n*/\r\n  AllocReportRefID = 795,\r\n/*\r\n****************************************************************\r\n* Reason for cancelling or replacing an Allocation Instruction *\r\n* or Allocation Report message                                 *\r\n****************************************************************\r\n*/\r\n  AllocCancReplaceReason = 796,\r\n/*\r\n***********************************************************\r\n* Indicates whether or not this message is a drop copy of *\r\n* another message.                                        *\r\n***********************************************************\r\n*/\r\n  CopyMsgIndicator = 797,\r\n/*\r\n***********************************************************\r\n* Type of account associated with a confirmation or other *\r\n* trade-level message                                     *\r\n***********************************************************\r\n*/\r\n  AllocAccountType = 798,\r\n/*\r\n**************************************\r\n* Average price for a specific order *\r\n**************************************\r\n*/\r\n  OrderAvgPx = 799,\r\n/*\r\n****************************************************************\r\n* Quantity of the order that is being booked out as part of an *\r\n* Allocation Instruction or Allocation Report message          *\r\n****************************************************************\r\n*/\r\n  OrderBookingQty = 800,\r\n/*\r\n***********************************************************\r\n* Number of SettlPartySubID (785) and SettlPartySubIDType *\r\n* (786) entries                                           *\r\n***********************************************************\r\n*/\r\n  NoSettlPartySubIDs = 801,\r\n/*\r\n**************************************************************\r\n* Number of PartySubID (523)and PartySubIDType (803) entries *\r\n**************************************************************\r\n*/\r\n  NoPartySubIDs = 802,\r\n/*\r\n***************************************************************\r\n* Type of PartySubID (523) value                              *\r\n* 4000+ = Reserved and available for bi-laterally agreed upon *\r\n* user defined values                                         *\r\n***************************************************************\r\n*/\r\n  PartySubIDType = 803,\r\n/*\r\n*************************************************************\r\n* Number of NestedPartySubID (545) and NestedPartySubIDType *\r\n* (805) entries                                             *\r\n*************************************************************\r\n*/\r\n  NoNestedPartySubIDs = 804,\r\n/*\r\n*****************************************\r\n* Type of NestedPartySubID (545) value. *\r\n* Same values as PartySubIDType (803)   *\r\n*****************************************\r\n*/\r\n  NestedPartySubIDType = 805,\r\n/*\r\n***************************************************************\r\n* Number of Nested2PartySubID (760) and Nested2PartySubIDType *\r\n* (807) entries. Second instance of <NestedParties>.          *\r\n***************************************************************\r\n*/\r\n  NoNested2PartySubIDs = 806,\r\n/*\r\n*************************************************************\r\n* Type of Nested2PartySubID (760) value. Second instance of *\r\n* <NestedParties>.                                          *\r\n* Same values as PartySubIDType (803)                       *\r\n*************************************************************\r\n*/\r\n  Nested2PartySubIDType = 807,\r\n/*\r\n***************************************************************\r\n* Response to allocation to be communicated to a counterparty *\r\n* through an intermediary, i.e. clearing house. Used in       *\r\n* conjunction with AllocType = \"Request to Intermediary\" and  *\r\n* AllocReportType = \"Request to Intermediary\"                 *\r\n***************************************************************\r\n*/\r\n  AllocIntermedReqType = 808,\r\n/*\r\n************************************************************\r\n* Underlying price associate with a derivative instrument. *\r\n************************************************************\r\n*/\r\n  UnderlyingPx = 810,\r\n/*\r\n*******************************************\r\n* Delta calculated from theoretical price *\r\n*******************************************\r\n*/\r\n  PriceDelta = 811,\r\n/*\r\n***************************************************************\r\n* Used to specify the maximum number of application messages  *\r\n* that can be queued bedore a corrective action needs to take *\r\n* place to resolve the queuing issue.                         *\r\n***************************************************************\r\n*/\r\n  ApplQueueMax = 812,\r\n/*\r\n**************************************************************\r\n* Current number of application messages that were queued at *\r\n* the time that the message was created by the counterparty. *\r\n**************************************************************\r\n*/\r\n  ApplQueueDepth = 813,\r\n/*\r\n**************************************************************\r\n* Resolution taken when ApplQueueDepth (813) exceeds         *\r\n* ApplQueueMax (812) or system specified maximum queue size. *\r\n**************************************************************\r\n*/\r\n  ApplQueueResolution = 814,\r\n/*\r\n**********************************************************\r\n* Action to take to resolve an application message queue *\r\n* (backlog).                                             *\r\n**********************************************************\r\n*/\r\n  ApplQueueAction = 815,\r\n/*\r\n*********************************************\r\n* Number of alternative market data sources *\r\n*********************************************\r\n*/\r\n  NoAltMDSource = 816,\r\n/*\r\n**********************************************************\r\n* Session layer source for market data                   *\r\n* (For the standard FIX session layer, this would be the *\r\n* TargetCompID (56) where market data can be obtained).  *\r\n**********************************************************\r\n*/\r\n  AltMDSourceID = 817,\r\n/*\r\n****************************************************************\r\n* Secondary trade report identifier - can be used to associate *\r\n* an additional identifier with a trade.                       *\r\n****************************************************************\r\n*/\r\n  SecondaryTradeReportID = 818,\r\n/*\r\n*****************************\r\n* Average Pricing Indicator *\r\n*****************************\r\n*/\r\n  AvgPxIndicator = 819,\r\n/*\r\n***************************************************************\r\n* Used to link a group of trades together. Useful for linking *\r\n* a group of trades together for average price calculations.  *\r\n***************************************************************\r\n*/\r\n  TradeLinkID = 820,\r\n/*\r\n************************************************************\r\n* Specific device number, terminal number or station where *\r\n* order was entered                                        *\r\n************************************************************\r\n*/\r\n  OrderInputDevice = 821,\r\n/*\r\n*************************************************************\r\n* Trading Session in which the underlying instrument trades *\r\n*************************************************************\r\n*/\r\n  UnderlyingTradingSessionID = 822,\r\n/*\r\n**********************************************************\r\n* Trading Session sub identifier in which the underlying *\r\n* instrument trades                                      *\r\n**********************************************************\r\n*/\r\n  UnderlyingTradingSessionSubID = 823,\r\n/*\r\n***************************************************************\r\n* Reference to the leg of a multileg instrument to which this *\r\n* trade refers                                                *\r\n***************************************************************\r\n*/\r\n  TradeLegRefID = 824,\r\n/*\r\n****************************************************************\r\n* Used to report any exchange rules that apply to this trade.  *\r\n* Primarily intended for US futures markets. Certain trading   *\r\n* practices are permitted by the CFTC, such as large lot       *\r\n* trading, block trading, all or none trades. If the rules are *\r\n* used, the exchanges are required to indicate these rules on  *\r\n* the trade.                                                   *\r\n****************************************************************\r\n*/\r\n  ExchangeRule = 825,\r\n/*\r\n***********************************************\r\n* Identifies how the trade is to be allocated *\r\n***********************************************\r\n*/\r\n  TradeAllocIndicator = 826,\r\n/*\r\n**************************************************************\r\n* Part of trading cycle when an instrument expires. Field is *\r\n* applicable for derivatives.                                *\r\n**************************************************************\r\n*/\r\n  ExpirationCycle = 827,\r\n/*\r\n*****************\r\n* Type of Trade *\r\n*****************\r\n*/\r\n  TrdType = 828,\r\n/*\r\n*******************************************\r\n* Further qualification to the trade type *\r\n*******************************************\r\n*/\r\n  TrdSubType = 829,\r\n/*\r\n*************************************\r\n* Reason trade is being transferred *\r\n*************************************\r\n*/\r\n  TransferReason = 830,\r\n/*\r\n***************************************************************\r\n* Total Number of Assignment Reports being returned to a firm *\r\n***************************************************************\r\n*/\r\n  TotNumAssignmentReports = 832,\r\n/*\r\n***********************************************\r\n* Unique identifier for the Assignment Report *\r\n***********************************************\r\n*/\r\n  AsgnRptID = 833,\r\n/*\r\n**************************************************************\r\n* Amount that a position has to be in the money before it is *\r\n* exercised.                                                 *\r\n**************************************************************\r\n*/\r\n  ThresholdAmount = 834,\r\n/*\r\n*********************************************\r\n* Describes whether peg is static or floats *\r\n*********************************************\r\n*/\r\n  PegMoveType = 835,\r\n/*\r\n****************************\r\n* Type of Peg Offset value *\r\n****************************\r\n*/\r\n  PegOffsetType = 836,\r\n/*\r\n*********************\r\n* Type of Peg Limit *\r\n*********************\r\n*/\r\n  PegLimitType = 837,\r\n/*\r\n***********************************************************\r\n* If the calculated peg price is not a valid tick price,  *\r\n* specifies whether to round the price to be more or less *\r\n* aggressive                                              *\r\n***********************************************************\r\n*/\r\n  PegRoundDirection = 838,\r\n/*\r\n**********************************************\r\n* The price the order is currently pegged at *\r\n**********************************************\r\n*/\r\n  PeggedPrice = 839,\r\n/*\r\n************************\r\n* The scope of the peg *\r\n************************\r\n*/\r\n  PegScope = 840,\r\n/*\r\n************************************************************\r\n* Describes whether discretionay price is static or floats *\r\n************************************************************\r\n*/\r\n  DiscretionMoveType = 841,\r\n/*\r\n***********************************\r\n* Type of Discretion Offset value *\r\n***********************************\r\n*/\r\n  DiscretionOffsetType = 842,\r\n/*\r\n****************************\r\n* Type of Discretion Limit *\r\n****************************\r\n*/\r\n  DiscretionLimitType = 843,\r\n/*\r\n*************************************************************\r\n* If the calculated discretionary price is not a valid tick *\r\n* price, specifies whether to round the price to be more or *\r\n* less aggressive                                           *\r\n*************************************************************\r\n*/\r\n  DiscretionRoundDirection = 844,\r\n/*\r\n************************************************\r\n* The current discretionary price of the order *\r\n************************************************\r\n*/\r\n  DiscretionPrice = 845,\r\n/*\r\n*******************************\r\n* The scope of the discretion *\r\n*******************************\r\n*/\r\n  DiscretionScope = 846,\r\n/*\r\n***************************************************************\r\n* The target strategy of the order                            *\r\n* 1000+ = Reserved and available for bi-laterally agreed upon *\r\n* user defined values                                         *\r\n***************************************************************\r\n*/\r\n  TargetStrategy = 847,\r\n/*\r\n****************************************************************\r\n* Field to allow further specification of the TargetStrategy \u0013 *\r\n* usage to be agreed between counterparties                    *\r\n****************************************************************\r\n*/\r\n  TargetStrategyParameters = 848,\r\n/*\r\n***************************************************************\r\n* For a TargetStrategy=Participate order specifies the target *\r\n* particpation rate. For other order types this is a volume   *\r\n* limit (i.e. do not be more than this percent of the market  *\r\n* volume)                                                     *\r\n***************************************************************\r\n*/\r\n  ParticipationRate = 849,\r\n/*\r\n****************************************************************\r\n* For communication of the performance of the order versus the *\r\n* target strategy                                              *\r\n****************************************************************\r\n*/\r\n  TargetStrategyPerformance = 850,\r\n/*\r\n**************************************************************\r\n* Indicator to identify whether this fill was a result of a  *\r\n* liquidity provider providing or liquidity taker taking the *\r\n* liquidity. Applicable only for OrdStatus of Partial or     *\r\n* Filled.                                                    *\r\n**************************************************************\r\n*/\r\n  LastLiquidityInd = 851,\r\n/*\r\n********************************************************\r\n* Indicates if a trade should be reported via a market *\r\n* reporting service.                                   *\r\n********************************************************\r\n*/\r\n  PublishTrdIndicator = 852,\r\n/*\r\n*************************\r\n* Reason for short sale *\r\n*************************\r\n*/\r\n  ShortSaleReason = 853,\r\n/*\r\n**************************************************\r\n* Type of quantity specified in a quantity field *\r\n**************************************************\r\n*/\r\n  QtyType = 854,\r\n/*\r\n***********************************************************\r\n* Additional TrdType (see tag 828) assigned to a trade by *\r\n* trade match system.                                     *\r\n***********************************************************\r\n*/\r\n  SecondaryTrdType = 855,\r\n/*\r\n************************\r\n* Type of Trade Report *\r\n************************\r\n*/\r\n  TradeReportType = 856,\r\n/*\r\n*************************************************************\r\n* Indicates how the orders being booked and allocated by an *\r\n* Allocation Instruction or Allocation Report message are   *\r\n* identified, i.e. by explicit definition in the NoOrders   *\r\n* group or not.                                             *\r\n*************************************************************\r\n*/\r\n  AllocNoOrdersType = 857,\r\n/*\r\n***************************************************************\r\n* Commission to be shared with a third party, e.g. as part of *\r\n* a directed brokerage commission sharing arrangement.        *\r\n***************************************************************\r\n*/\r\n  SharedCommission = 858,\r\n/*\r\n********************************************************\r\n* Unique identifier for a Confirmation Request message *\r\n********************************************************\r\n*/\r\n  ConfirmReqID = 859,\r\n/*\r\n***************************************************************\r\n* Used to express average price as percent of par (used where *\r\n* AvgPx field is expressed in some other way)                 *\r\n***************************************************************\r\n*/\r\n  AvgParPx = 860,\r\n/*\r\n***************************************************************\r\n* Reported price (used to differentiate from AvgPx on a       *\r\n* confirmation of a marked-up or marked-down principal trade) *\r\n***************************************************************\r\n*/\r\n  ReportedPx = 861,\r\n/*\r\n**********************************************\r\n* Number of repeating OrderCapacity entries. *\r\n**********************************************\r\n*/\r\n  NoCapacities = 862,\r\n/*\r\n***************************************************************\r\n* Quantity executed under a specific OrderCapacity (e.g.      *\r\n* quantity executed as agent, quantity executed as principal) *\r\n***************************************************************\r\n*/\r\n  OrderCapacityQty = 863,\r\n/*\r\n******************************************\r\n* Number of repeating EventType entries. *\r\n******************************************\r\n*/\r\n  NoEvents = 864,\r\n/*\r\n***************************************\r\n* Code to represent the type of event *\r\n***************************************\r\n*/\r\n  EventType = 865,\r\n/*\r\n*****************\r\n* Date of event *\r\n*****************\r\n*/\r\n  EventDate = 866,\r\n/*\r\n********************************************************\r\n* Predetermined price of issue at event, if applicable *\r\n********************************************************\r\n*/\r\n  EventPx = 867,\r\n/*\r\n**********************************\r\n* Comments related to the event. *\r\n**********************************\r\n*/\r\n  EventText = 868,\r\n/*\r\n************************************************\r\n* Percent at risk due to lowest possible call. *\r\n************************************************\r\n*/\r\n  PctAtRisk = 869,\r\n/*\r\n************************************************\r\n* Number of repeating InstrAttribType entries. *\r\n************************************************\r\n*/\r\n  NoInstrAttrib = 870,\r\n/*\r\n******************************************************\r\n* Code to represent the type of instrument attribute *\r\n******************************************************\r\n*/\r\n  InstrAttribType = 871,\r\n/*\r\n***********************************************************\r\n* Attribute value appropriate to the InstrAttribType (87) *\r\n* field.                                                  *\r\n***********************************************************\r\n*/\r\n  InstrAttribValue = 872,\r\n/*\r\n****************************************************************\r\n* The effective date of a new securities issue determined by   *\r\n* its underwriters. Often but not always the same as the Issue *\r\n* Date and the Interest Accrual Date                           *\r\n****************************************************************\r\n*/\r\n  DatedDate = 873,\r\n/*\r\n****************************************************************\r\n* The start date used for calculating accrued interest on debt *\r\n* instruments which are being sold between interest payment    *\r\n* dates. Often but not always the same as the Issue Date and   *\r\n* the Dated Date                                               *\r\n****************************************************************\r\n*/\r\n  InterestAccrualDate = 874,\r\n/*\r\n********************************************************\r\n* The program under which a commercial paper is issued *\r\n********************************************************\r\n*/\r\n  CPProgram = 875,\r\n/*\r\n********************************************************\r\n* The registration type of a commercial paper issuance *\r\n********************************************************\r\n*/\r\n  CPRegType = 876,\r\n/*\r\n**************************************************************\r\n* The program under which the underlying commercial paper is *\r\n* issued                                                     *\r\n**************************************************************\r\n*/\r\n  UnderlyingCPProgram = 877,\r\n/*\r\n************************************************************\r\n* The registration type of the underlying commercial paper *\r\n* issuance                                                 *\r\n************************************************************\r\n*/\r\n  UnderlyingCPRegType = 878,\r\n/*\r\n********************************************************\r\n* Unit amount of the underlying security (par, shares, *\r\n* currency, etc.)                                      *\r\n********************************************************\r\n*/\r\n  UnderlyingQty = 879,\r\n/*\r\n********************************************************\r\n* Identifier assigned to a trade by a matching system. *\r\n********************************************************\r\n*/\r\n  TrdMatchID = 880,\r\n/*\r\n**************************************************************\r\n* Used to refer to a previous SecondaryTradeReportRefID when *\r\n* amending the transaction (cancel, replace, release, or     *\r\n* reversal).                                                 *\r\n**************************************************************\r\n*/\r\n  SecondaryTradeReportRefID = 881,\r\n/*\r\n*********************************************************\r\n* Price (percent-of-par or per unit) of the underlying  *\r\n* security or basket. \"Dirty\" means it includes accrued *\r\n* interest                                              *\r\n*********************************************************\r\n*/\r\n  UnderlyingDirtyPrice = 882,\r\n/*\r\n********************************************************\r\n* Price (percent-of-par or per unit) of the underlying *\r\n* security or basket at the end of the agreement.      *\r\n********************************************************\r\n*/\r\n  UnderlyingEndPrice = 883,\r\n/*\r\n****************************************************************\r\n* Currency value attributed to this collateral at the start of *\r\n* the agreement                                                *\r\n****************************************************************\r\n*/\r\n  UnderlyingStartValue = 884,\r\n/*\r\n**********************************************************\r\n* Currency value currently attributed to this collateral *\r\n**********************************************************\r\n*/\r\n  UnderlyingCurrentValue = 885,\r\n/*\r\n**************************************************************\r\n* Currency value attributed to this collateral at the end of *\r\n* the agreement                                              *\r\n**************************************************************\r\n*/\r\n  UnderlyingEndValue = 886,\r\n/*\r\n********************************************\r\n* Number of underlying stipulation entries *\r\n********************************************\r\n*/\r\n  NoUnderlyingStips = 887,\r\n/*\r\n****************************************\r\n* Type of stipulation.                 *\r\n* Same values as StipulationType (233) *\r\n****************************************\r\n*/\r\n  UnderlyingStipType = 888,\r\n/*\r\n*****************************************\r\n* Value of stipulation.                 *\r\n* Same values as StipulationValue (234) *\r\n*****************************************\r\n*/\r\n  UnderlyingStipValue = 889,\r\n/*\r\n**************************************************************\r\n* Net Money at maturity if Zero Coupon and maturity value is *\r\n* different from par value                                   *\r\n**************************************************************\r\n*/\r\n  MaturityNetMoney = 890,\r\n/*\r\n*********************************************\r\n* Defines the unit for a miscellaneous fee. *\r\n*********************************************\r\n*/\r\n  MiscFeeBasis = 891,\r\n/*\r\n***************************************************************\r\n* Total number of NoAlloc entries across all messages. Should *\r\n* be the sum of all NoAllocs in each message that has         *\r\n* repeating NoAlloc entries related to the same AllocID or    *\r\n* AllocReportID. Used to support fragmentation.               *\r\n***************************************************************\r\n*/\r\n  TotNoAllocs = 892,\r\n/*\r\n****************************************************************\r\n* Indicates whether this message is the last in a sequence of  *\r\n* messages for those messages that support fragmentation, such *\r\n* as Allocation Instruction, Mass Quote, Security List,        *\r\n* Derivative Security List                                     *\r\n****************************************************************\r\n*/\r\n  LastFragment = 893,\r\n/*\r\n*********************************\r\n* Collateral Request Identifier *\r\n*********************************\r\n*/\r\n  CollReqID = 894,\r\n/*\r\n************************************\r\n* Reason for Collateral Assignment *\r\n************************************\r\n*/\r\n  CollAsgnReason = 895,\r\n/*\r\n**********************************\r\n* Collateral inquiry qualifiers: *\r\n**********************************\r\n*/\r\n  CollInquiryQualifier = 896,\r\n/*\r\n****************************************\r\n* Number of trades in repeating group. *\r\n****************************************\r\n*/\r\n  NoTrades = 897,\r\n/*\r\n****************************************************************\r\n* The fraction of the cash consideration that must be          *\r\n* collateralized, expressed as a percent. A MarginRatio of 02% *\r\n* indicates that the value of the collateral (after deducting  *\r\n* for \"haircut\") must exceed the cash consideration by 2%.     *\r\n****************************************************************\r\n*/\r\n  MarginRatio = 898,\r\n/*\r\n*******************************************************\r\n* Excess margin amount (deficit if value is negative) *\r\n*******************************************************\r\n*/\r\n  MarginExcess = 899,\r\n/*\r\n**************************************************************\r\n* TotalNetValue is determined as follows:                    *\r\n* At the initial collateral assignment TotalNetValue is the  *\r\n* sum of (UnderlyingStartValue * (1-haircut)).               *\r\n* In a collateral substitution TotalNetValue is the sum of   *\r\n* (UnderlyingCurrentValue * (1-haircut)).                    *\r\n* For listed derivatives clearing margin management, this is *\r\n* the collateral value which equals (Market value * haircut) *\r\n**************************************************************\r\n*/\r\n  TotalNetValue = 900,\r\n/*\r\n******************************************\r\n* Starting consideration less repayments *\r\n******************************************\r\n*/\r\n  CashOutstanding = 901,\r\n/*\r\n************************************\r\n* Collateral Assignment Identifier *\r\n************************************\r\n*/\r\n  CollAsgnID = 902,\r\n/*\r\n******************************************\r\n* Collateral Assignment Transaction Type *\r\n******************************************\r\n*/\r\n  CollAsgnTransType = 903,\r\n/*\r\n**********************************\r\n* Collateral Response Identifier *\r\n**********************************\r\n*/\r\n  CollRespID = 904,\r\n/*\r\n***************************************\r\n* Collateral Assignment Response Type *\r\n***************************************\r\n*/\r\n  CollAsgnRespType = 905,\r\n/*\r\n***************************************\r\n* Collateral Assignment Reject Reason *\r\n***************************************\r\n*/\r\n  CollAsgnRejectReason = 906,\r\n/*\r\n***********************************************************\r\n* Collateral Assignment Identifier to which a transaction *\r\n* refers                                                  *\r\n***********************************************************\r\n*/\r\n  CollAsgnRefID = 907,\r\n/*\r\n********************************\r\n* Collateral Report Identifier *\r\n********************************\r\n*/\r\n  CollRptID = 908,\r\n/*\r\n*********************************\r\n* Collateral Inquiry Identifier *\r\n*********************************\r\n*/\r\n  CollInquiryID = 909,\r\n/*\r\n*********************\r\n* Collateral Status *\r\n*********************\r\n*/\r\n  CollStatus = 910,\r\n/*\r\n*************************************************************\r\n* Total number or reports returned in response to a request *\r\n*************************************************************\r\n*/\r\n  TotNumReports = 911,\r\n/*\r\n****************************************************************\r\n* Indicates whether this message is that last report message   *\r\n* in response to a request, such as Order Mass Status Request. *\r\n****************************************************************\r\n*/\r\n  LastRptRequested = 912,\r\n/*\r\n**************************************************************\r\n* The full name of the base standard agreement, annexes and  *\r\n* amendments in place between the principals applicable to a *\r\n* financing transaction.                                     *\r\n**************************************************************\r\n*/\r\n  AgreementDesc = 913,\r\n/*\r\n***********************************************************\r\n* A common reference to the applicable standing agreement *\r\n* between the counterparties to a financing transaction.  *\r\n***********************************************************\r\n*/\r\n  AgreementID = 914,\r\n/*\r\n**************************************************************\r\n* A reference to the date the underlying agreement specified *\r\n* by AgreementID and AgreementDesc was executed.             *\r\n**************************************************************\r\n*/\r\n  AgreementDate = 915,\r\n/*\r\n****************************************************************\r\n* Start date of a financing deal, i.e. the date the buyer pays *\r\n* the seller cash and takes control of the collateral          *\r\n****************************************************************\r\n*/\r\n  StartDate = 916,\r\n/*\r\n**********************************************************\r\n* End date of a financing deal, i.e. the date the seller *\r\n* reimburses the buyer and takes back control of the     *\r\n* collateral                                             *\r\n**********************************************************\r\n*/\r\n  EndDate = 917,\r\n/*\r\n***********************************************************\r\n* Contractual currency forming the basis of a financing   *\r\n* agreement and associated transactions. Usually, but not *\r\n* always, the same as the trade currency.                 *\r\n***********************************************************\r\n*/\r\n  AgreementCurrency = 918,\r\n/*\r\n*********************************\r\n* Identifies type of settlement *\r\n*********************************\r\n*/\r\n  DeliveryType = 919,\r\n/*\r\n*****************************************************\r\n* Accrued Interest Amount applicable to a financing *\r\n* transaction on the End Date.                      *\r\n*****************************************************\r\n*/\r\n  EndAccruedInterestAmt = 920,\r\n/*\r\n***************************************************************\r\n* Starting dirty cash consideration of a financing deal, i.e. *\r\n* paid to the seller on the Start Date.                       *\r\n***************************************************************\r\n*/\r\n  StartCash = 921,\r\n/*\r\n*************************************************************\r\n* Ending dirty cash consideration of a financing deal. i.e. *\r\n* reimbursed to the buyer on the End Date.                  *\r\n*************************************************************\r\n*/\r\n  EndCash = 922,\r\n/*\r\n*****************************************\r\n* Unique identifier for a User Request. *\r\n*****************************************\r\n*/\r\n  UserRequestID = 923,\r\n/*\r\n***********************************************************\r\n* Indicates the action required by a User Request Message *\r\n***********************************************************\r\n*/\r\n  UserRequestType = 924,\r\n/*\r\n******************************\r\n* New Password or passphrase *\r\n******************************\r\n*/\r\n  NewPassword = 925,\r\n/*\r\n**********************************\r\n* Indicates the status of a user *\r\n**********************************\r\n*/\r\n  UserStatus = 926,\r\n/*\r\n*****************************************************\r\n* A text description associated with a user status. *\r\n*****************************************************\r\n*/\r\n  UserStatusText = 927,\r\n/*\r\n************************************************\r\n* Indicates the status of a network connection *\r\n************************************************\r\n*/\r\n  StatusValue = 928,\r\n/*\r\n********************************************************\r\n* A text description associated with a network status. *\r\n********************************************************\r\n*/\r\n  StatusText = 929,\r\n/*\r\n*******************************************\r\n* Assigned value used to identify a firm. *\r\n*******************************************\r\n*/\r\n  RefCompID = 930,\r\n/*\r\n**************************************************************\r\n* Assigned value used to identify specific elements within a *\r\n* firm.                                                      *\r\n**************************************************************\r\n*/\r\n  RefSubID = 931,\r\n/*\r\n*********************************************\r\n* Unique identifier for a network response. *\r\n*********************************************\r\n*/\r\n  NetworkResponseID = 932,\r\n/*\r\n*********************************************\r\n* Unique identifier for a network resquest. *\r\n*********************************************\r\n*/\r\n  NetworkRequestID = 933,\r\n/*\r\n***************************************************************\r\n* Identifier of the previous Network Response message sent to *\r\n* a counterparty, used to allow incremental updates.          *\r\n***************************************************************\r\n*/\r\n  LastNetworkResponseID = 934,\r\n/*\r\n**********************************************************\r\n* Indicates the type and level of details required for a *\r\n* Network Status Request Message                         *\r\n* Boolean logic applies EG If you want to subscribe for  *\r\n* changes to certain id\u0019s then UserRequestType =0 (8+2), *\r\n* Snapshot for certain ID\u0019s = 9 (8+)                     *\r\n**********************************************************\r\n*/\r\n  NetworkRequestType = 935,\r\n/*\r\n**************************************************\r\n* Number of CompID entries in a repeating group. *\r\n**************************************************\r\n*/\r\n  NoCompIDs = 936,\r\n/*\r\n**************************************************\r\n* Indicates the type of Network Response Message *\r\n**************************************************\r\n*/\r\n  NetworkStatusResponseType = 937,\r\n/*\r\n****************************************************************\r\n* Number of CollInquiryQualifier entries in a repeating group. *\r\n****************************************************************\r\n*/\r\n  NoCollInquiryQualifier = 938,\r\n/*\r\n***********************\r\n* Trade Report Status *\r\n***********************\r\n*/\r\n  TrdRptStatus = 939,\r\n/*\r\n************************************************\r\n* Identifies the status of the ConfirmationAck *\r\n************************************************\r\n*/\r\n  AffirmStatus = 940,\r\n/*\r\n*******************************************************\r\n* Currency in which the strike price of an underlying *\r\n* instrument is denominated                           *\r\n*******************************************************\r\n*/\r\n  UnderlyingStrikeCurrency = 941,\r\n/*\r\n***************************************************************\r\n* Currency in which the strike price of a instrument leg of a *\r\n* multileg instrument is denominated                          *\r\n***************************************************************\r\n*/\r\n  LegStrikeCurrency = 942,\r\n/*\r\n*************************************************************\r\n* A code that represents a time interval in which a fill or *\r\n* trade occurred.                                           *\r\n* Required for US futures markets.                          *\r\n*************************************************************\r\n*/\r\n  TimeBracket = 943,\r\n/*\r\n*********************************************************\r\n* Action proposed for an Underlying Instrument instance *\r\n*********************************************************\r\n*/\r\n  CollAction = 944,\r\n/*\r\n********************************\r\n* Status of Collateral Inquiry *\r\n********************************\r\n*/\r\n  CollInquiryStatus = 945,\r\n/*\r\n*************************************************************\r\n* Result returned in response to Collateral Inquiry         *\r\n* 4000+ Reserved and available for bi-laterally agreed upon *\r\n* user-defined values                                       *\r\n*************************************************************\r\n*/\r\n  CollInquiryResult = 946,\r\n/*\r\n*****************************************************\r\n* Currency in which the StrikePrice is denominated. *\r\n*****************************************************\r\n*/\r\n  StrikeCurrency = 947,\r\n/*\r\n***************************************************************\r\n* Number of Nested3PartyID (949), Nested3PartyIDSource (950), *\r\n* and Nested3PartyRole (95) entries                           *\r\n***************************************************************\r\n*/\r\n  NoNested3PartyIDs = 948,\r\n/*\r\n************************************************************\r\n* PartyID value within a \"third instance\" Nested repeating *\r\n* group.                                                   *\r\n* Same values as PartyID (448)                             *\r\n************************************************************\r\n*/\r\n  Nested3PartyID = 949,\r\n/*\r\n********************************************************\r\n* PartyIDSource value within a \"third instance\" Nested *\r\n* repeating group.                                     *\r\n* Same values as PartyIDSource (447)                   *\r\n********************************************************\r\n*/\r\n  Nested3PartyIDSource = 950,\r\n/*\r\n**************************************************************\r\n* PartyRole value within a \"third instance\" Nested repeating *\r\n* group.                                                     *\r\n* Same values as PartyRole (452)                             *\r\n**************************************************************\r\n*/\r\n  Nested3PartyRole = 951,\r\n/*\r\n**********************************************\r\n* Number of Nested3PartySubIDs (953) entries *\r\n**********************************************\r\n*/\r\n  NoNested3PartySubIDs = 952,\r\n/*\r\n***************************************************************\r\n* PartySubID value within a \"third instance\" Nested repeating *\r\n* group.                                                      *\r\n* Same values as PartySubID (523)                             *\r\n***************************************************************\r\n*/\r\n  Nested3PartySubID = 953,\r\n/*\r\n*********************************************************\r\n* PartySubIDType value within a \"third instance\" Nested *\r\n* repeating group.                                      *\r\n* Same values as PartySubIDType (803)                   *\r\n*********************************************************\r\n*/\r\n  Nested3PartySubIDType = 954,\r\n/*\r\n***********************************************************\r\n* Specifies when the contract (i.e. MBS/TBA) will settle. *\r\n***********************************************************\r\n*/\r\n  LegContractSettlMonth = 955,\r\n/*\r\n****************************************************************\r\n* The start date used for calculating accrued interest on debt *\r\n* instruments which are being sold between interest payment    *\r\n* dates. Often but not always the same as the Issue Date and   *\r\n* the Dated Date                                               *\r\n****************************************************************\r\n*/\r\n  LegInterestAccrualDate = 956\r\n}\r\n"]}