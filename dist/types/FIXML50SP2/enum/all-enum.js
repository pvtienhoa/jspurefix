"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AdvSide;
(function (AdvSide) {
    AdvSide["Buy"] = "B";
    AdvSide["Sell"] = "S";
    AdvSide["Trade"] = "T";
    AdvSide["Cross"] = "X";
})(AdvSide = exports.AdvSide || (exports.AdvSide = {}));
var AdvTransType;
(function (AdvTransType) {
    AdvTransType["New"] = "N";
    AdvTransType["Cancel"] = "C";
    AdvTransType["Replace"] = "R";
})(AdvTransType = exports.AdvTransType || (exports.AdvTransType = {}));
var CommType;
(function (CommType) {
    CommType["AmountPerUnit"] = "1";
    CommType["Percent"] = "2";
    CommType["Absolute"] = "3";
    CommType["PercentageWaivedCashDiscountBasis"] = "4";
    CommType["PercentageWaivedEnhancedUnitsBasis"] = "5";
    CommType["PointsPerBondOrContract"] = "6";
    CommType["BasisPoints"] = "7";
    CommType["AmountPerContract"] = "8";
})(CommType = exports.CommType || (exports.CommType = {}));
var ExecInst;
(function (ExecInst) {
    ExecInst["StayOnOfferSide"] = "0";
    ExecInst["NotHeld"] = "1";
    ExecInst["Work"] = "2";
    ExecInst["GoAlong"] = "3";
    ExecInst["OverTheDay"] = "4";
    ExecInst["Held"] = "5";
    ExecInst["ParticipateDontInitiate"] = "6";
    ExecInst["StrictScale"] = "7";
    ExecInst["TryToScale"] = "8";
    ExecInst["StayOnBidSide"] = "9";
    ExecInst["NoCross"] = "A";
    ExecInst["OkToCross"] = "B";
    ExecInst["CallFirst"] = "C";
    ExecInst["PercentOfVolume"] = "D";
    ExecInst["DoNotIncreaseDni"] = "E";
    ExecInst["DoNotReduceDnr"] = "F";
    ExecInst["AllOrNoneAon"] = "G";
    ExecInst["ReinstateOnSystemFailure"] = "H";
    ExecInst["InstitutionsOnly"] = "I";
    ExecInst["ReinstateOnTradingHalt"] = "J";
    ExecInst["CancelOnTradingHalt"] = "K";
    ExecInst["LastPegLastSale"] = "L";
    ExecInst["MidPricePegMidpriceOfInsideQuote"] = "M";
    ExecInst["NonNegotiable"] = "N";
    ExecInst["OpeningPeg"] = "O";
    ExecInst["MarketPeg"] = "P";
    ExecInst["CancelOnSystemFailure"] = "Q";
    ExecInst["PrimaryPeg"] = "R";
    ExecInst["Suspend"] = "S";
    ExecInst["FixedPegToLocalBestBidOrOfferAtTimeOfOrder"] = "T";
    ExecInst["CustomerDisplayInstruction"] = "U";
    ExecInst["NettingForForex"] = "V";
    ExecInst["PegToVwap"] = "W";
    ExecInst["TradeAlong"] = "X";
    ExecInst["TryToStop"] = "Y";
    ExecInst["CancelIfNotBest"] = "Z";
    ExecInst["TrailingStopPeg"] = "a";
    ExecInst["StrictLimit"] = "b";
    ExecInst["IgnorePriceValidityChecks"] = "c";
    ExecInst["PegToLimitPrice"] = "d";
    ExecInst["WorkToTargetStrategy"] = "e";
    ExecInst["IntermarketSweep"] = "f";
    ExecInst["ExternalRoutingAllowed"] = "g";
    ExecInst["ExternalRoutingNotAllowed"] = "h";
    ExecInst["ImbalanceOnly"] = "i";
    ExecInst["SingleExecutionRequestedForBlockTrade"] = "j";
    ExecInst["BestExecution"] = "k";
    ExecInst["SuspendOnSystemFailure"] = "l";
    ExecInst["SuspendOnTradingHalt"] = "m";
    ExecInst["ReinstateOnConnectionLoss"] = "n";
    ExecInst["CancelOnConnectionLoss"] = "o";
    ExecInst["SuspendOnConnectionLoss"] = "p";
    ExecInst["Release"] = "q";
    ExecInst["ExecuteAsDeltaNeutralUsingVolatilityProvided"] = "r";
    ExecInst["ExecuteAsDurationNeutral"] = "s";
    ExecInst["ExecuteAsFxNeutral"] = "t";
    ExecInst["MinimumGuaranteedFillEligible"] = "u";
    ExecInst["BypassNonDisplayedLiquidity"] = "v";
    ExecInst["Lock"] = "w";
    ExecInst["IgnoreNotionalValueChecks"] = "x";
    ExecInst["TradeAtReferencePrice"] = "y";
})(ExecInst = exports.ExecInst || (exports.ExecInst = {}));
var HandlInst;
(function (HandlInst) {
    HandlInst["AutomatedExecutionOrderPrivateNoBrokerIntervention"] = "1";
    HandlInst["AutomatedExecutionOrderPublicBrokerInterventionOk"] = "2";
    HandlInst["ManualOrderBestExecution"] = "3";
})(HandlInst = exports.HandlInst || (exports.HandlInst = {}));
var SecurityIDSource;
(function (SecurityIDSource) {
    SecurityIDSource["Cusip"] = "1";
    SecurityIDSource["Sedol"] = "2";
    SecurityIDSource["Quik"] = "3";
    SecurityIDSource["IsinNumber"] = "4";
    SecurityIDSource["RicCode"] = "5";
    SecurityIDSource["IsoCurrencyCode"] = "6";
    SecurityIDSource["IsoCountryCode"] = "7";
    SecurityIDSource["ExchangeSymbol"] = "8";
    SecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    SecurityIDSource["BloombergSymbol"] = "A";
    SecurityIDSource["Wertpapier"] = "B";
    SecurityIDSource["Dutch"] = "C";
    SecurityIDSource["Valoren"] = "D";
    SecurityIDSource["Sicovam"] = "E";
    SecurityIDSource["Belgian"] = "F";
    SecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    SecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    SecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    SecurityIDSource["OptionPriceReportingAuthority"] = "J";
    SecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    SecurityIDSource["LetterOfCredit"] = "L";
    SecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    SecurityIDSource["MarkitRedEntityClip"] = "N";
    SecurityIDSource["MarkitRedPairClip"] = "P";
    SecurityIDSource["CftcCommodityCode"] = "Q";
    SecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    SecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    SecurityIDSource["LegalEntityIdentifier"] = "T";
    SecurityIDSource["Synthetic"] = "U";
    SecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(SecurityIDSource = exports.SecurityIDSource || (exports.SecurityIDSource = {}));
var IOIQltyInd;
(function (IOIQltyInd) {
    IOIQltyInd["High"] = "H";
    IOIQltyInd["Low"] = "L";
    IOIQltyInd["Medium"] = "M";
})(IOIQltyInd = exports.IOIQltyInd || (exports.IOIQltyInd = {}));
var IOIQty;
(function (IOIQty) {
    IOIQty["Small"] = "S";
    IOIQty["Medium"] = "M";
    IOIQty["Large"] = "L";
    IOIQty["UndisclosedQuantity"] = "U";
})(IOIQty = exports.IOIQty || (exports.IOIQty = {}));
var IOITransType;
(function (IOITransType) {
    IOITransType["New"] = "N";
    IOITransType["Cancel"] = "C";
    IOITransType["Replace"] = "R";
})(IOITransType = exports.IOITransType || (exports.IOITransType = {}));
var LastCapacity;
(function (LastCapacity) {
    LastCapacity["Agent"] = "1";
    LastCapacity["CrossAsAgent"] = "2";
    LastCapacity["CrossAsPrincipal"] = "3";
    LastCapacity["Principal"] = "4";
    LastCapacity["RisklessPrincipal"] = "5";
})(LastCapacity = exports.LastCapacity || (exports.LastCapacity = {}));
var MsgType;
(function (MsgType) {
    MsgType["Heartbeat"] = "0";
    MsgType["TestRequest"] = "1";
    MsgType["ResendRequest"] = "2";
    MsgType["Reject"] = "3";
    MsgType["SequenceReset"] = "4";
    MsgType["Logout"] = "5";
    MsgType["Ioi"] = "6";
    MsgType["Advertisement"] = "7";
    MsgType["ExecutionReport"] = "8";
    MsgType["OrderCancelReject"] = "9";
    MsgType["Logon"] = "A";
    MsgType["News"] = "B";
    MsgType["Email"] = "C";
    MsgType["NewOrderSingle"] = "D";
    MsgType["NewOrderList"] = "E";
    MsgType["OrderCancelRequest"] = "F";
    MsgType["OrderCancelReplaceRequest"] = "G";
    MsgType["OrderStatusRequest"] = "H";
    MsgType["AllocationInstruction"] = "J";
    MsgType["ListCancelRequest"] = "K";
    MsgType["ListExecute"] = "L";
    MsgType["ListStatusRequest"] = "M";
    MsgType["ListStatus"] = "N";
    MsgType["AllocationInstructionAck"] = "P";
    MsgType["DontKnowTrade"] = "Q";
    MsgType["QuoteRequest"] = "R";
    MsgType["Quote"] = "S";
    MsgType["SettlementInstructions"] = "T";
    MsgType["MarketDataRequest"] = "V";
    MsgType["MarketDataSnapshotFullRefresh"] = "W";
    MsgType["MarketDataIncrementalRefresh"] = "X";
    MsgType["MarketDataRequestReject"] = "Y";
    MsgType["QuoteCancel"] = "Z";
    MsgType["QuoteStatusRequest"] = "a";
    MsgType["MassQuoteAck"] = "b";
    MsgType["SecurityDefinitionRequest"] = "c";
    MsgType["SecurityDefinition"] = "d";
    MsgType["SecurityStatusRequest"] = "e";
    MsgType["SecurityStatus"] = "f";
    MsgType["TradingSessionStatusRequest"] = "g";
    MsgType["TradingSessionStatus"] = "h";
    MsgType["MassQuote"] = "i";
    MsgType["BusinessMessageReject"] = "j";
    MsgType["BidRequest"] = "k";
    MsgType["BidResponse"] = "l";
    MsgType["ListStrikePrice"] = "m";
    MsgType["XmLnonFix"] = "n";
    MsgType["RegistrationInstructions"] = "o";
    MsgType["RegistrationInstructionsResponse"] = "p";
    MsgType["OrderMassCancelRequest"] = "q";
    MsgType["OrderMassCancelReport"] = "r";
    MsgType["NewOrderCross"] = "s";
    MsgType["CrossOrderCancelReplaceRequest"] = "t";
    MsgType["CrossOrderCancelRequest"] = "u";
    MsgType["SecurityTypeRequest"] = "v";
    MsgType["SecurityTypes"] = "w";
    MsgType["SecurityListRequest"] = "x";
    MsgType["SecurityList"] = "y";
    MsgType["DerivativeSecurityListRequest"] = "z";
    MsgType["DerivativeSecurityList"] = "AA";
    MsgType["NewOrderMultileg"] = "AB";
    MsgType["MultilegOrderCancelReplace"] = "AC";
    MsgType["TradeCaptureReportRequest"] = "AD";
    MsgType["TradeCaptureReport"] = "AE";
    MsgType["OrderMassStatusRequest"] = "AF";
    MsgType["QuoteRequestReject"] = "AG";
    MsgType["RfqRequest"] = "AH";
    MsgType["QuoteStatusReport"] = "AI";
    MsgType["QuoteResponse"] = "AJ";
    MsgType["Confirmation"] = "AK";
    MsgType["PositionMaintenanceRequest"] = "AL";
    MsgType["PositionMaintenanceReport"] = "AM";
    MsgType["RequestForPositions"] = "AN";
    MsgType["RequestForPositionsAck"] = "AO";
    MsgType["PositionReport"] = "AP";
    MsgType["TradeCaptureReportRequestAck"] = "AQ";
    MsgType["TradeCaptureReportAck"] = "AR";
    MsgType["AllocationReport"] = "AS";
    MsgType["AllocationReportAck"] = "AT";
    MsgType["ConfirmationAck"] = "AU";
    MsgType["SettlementInstructionRequest"] = "AV";
    MsgType["AssignmentReport"] = "AW";
    MsgType["CollateralRequest"] = "AX";
    MsgType["CollateralAssignment"] = "AY";
    MsgType["CollateralResponse"] = "AZ";
    MsgType["CollateralReport"] = "BA";
    MsgType["CollateralInquiry"] = "BB";
    MsgType["NetworkCounterpartySystemStatusRequest"] = "BC";
    MsgType["NetworkCounterpartySystemStatusResponse"] = "BD";
    MsgType["UserRequest"] = "BE";
    MsgType["UserResponse"] = "BF";
    MsgType["CollateralInquiryAck"] = "BG";
    MsgType["ConfirmationRequest"] = "BH";
    MsgType["ContraryIntentionReport"] = "BO";
    MsgType["SecurityDefinitionUpdateReport"] = "BP";
    MsgType["SecurityListUpdateReport"] = "BK";
    MsgType["AdjustedPositionReport"] = "BL";
    MsgType["AllocationInstructionAlert"] = "BM";
    MsgType["ExecutionAck"] = "BN";
    MsgType["TradingSessionList"] = "BJ";
    MsgType["TradingSessionListRequest"] = "BI";
    MsgType["SettlementObligationReport"] = "BQ";
    MsgType["DerivativeSecurityListUpdateReport"] = "BR";
    MsgType["TradingSessionListUpdateReport"] = "BS";
    MsgType["MarketDefinitionRequest"] = "BT";
    MsgType["MarketDefinition"] = "BU";
    MsgType["MarketDefinitionUpdateReport"] = "BV";
    MsgType["ApplicationMessageRequest"] = "BW";
    MsgType["ApplicationMessageRequestAck"] = "BX";
    MsgType["ApplicationMessageReport"] = "BY";
    MsgType["OrderMassActionReport"] = "BZ";
    MsgType["OrderMassActionRequest"] = "CA";
    MsgType["UserNotification"] = "CB";
    MsgType["StreamAssignmentRequest"] = "CC";
    MsgType["StreamAssignmentReport"] = "CD";
    MsgType["StreamAssignmentReportAck"] = "CE";
    MsgType["PartyDetailsListRequest"] = "CF";
    MsgType["PartyDetailsListReport"] = "CG";
    MsgType["MarginRequirementInquiry"] = "CH";
    MsgType["MarginRequirementInquiryAck"] = "CI";
    MsgType["MarginRequirementReport"] = "CJ";
    MsgType["PartyDetailsListUpdateReport"] = "CK";
    MsgType["PartyRiskLimitsRequest"] = "CL";
    MsgType["PartyRiskLimitsReport"] = "CM";
    MsgType["SecurityMassStatusRequest"] = "CN";
    MsgType["SecurityMassStatus"] = "CO";
    MsgType["AccountSummaryReport"] = "CQ";
    MsgType["PartyRiskLimitsUpdateReport"] = "CR";
    MsgType["PartyRiskLimitsDefinitionRequest"] = "CS";
    MsgType["PartyRiskLimitsDefinitionRequestAck"] = "CT";
    MsgType["PartyEntitlementsRequest"] = "CU";
    MsgType["PartyEntitlementsReport"] = "CV";
    MsgType["QuoteAck"] = "CW";
    MsgType["PartyDetailsDefinitionRequest"] = "CX";
    MsgType["PartyDetailsDefinitionRequestAck"] = "CY";
    MsgType["PartyEntitlementsUpdateReport"] = "CZ";
    MsgType["PartyEntitlementsDefinitionRequest"] = "DA";
    MsgType["PartyEntitlementsDefinitionRequestAck"] = "DB";
    MsgType["TradeMatchReport"] = "DC";
    MsgType["TradeMatchReportAck"] = "DD";
    MsgType["PartyRiskLimitsReportAck"] = "DE";
    MsgType["PartyRiskLimitCheckRequest"] = "DF";
    MsgType["PartyRiskLimitCheckRequestAck"] = "DG";
    MsgType["PartyActionRequest"] = "DH";
    MsgType["PartyActionReport"] = "DI";
    MsgType["MassOrder"] = "DJ";
    MsgType["MassOrderAck"] = "DK";
    MsgType["PositionTransferInstruction"] = "DL";
    MsgType["PositionTransferInstructionAck"] = "DM";
    MsgType["PositionTransferReport"] = "DN";
    MsgType["MarketDataStatisticsRequest"] = "DO";
    MsgType["MarketDataStatisticsReport"] = "DP";
    MsgType["CollateralReportAck"] = "DQ";
    MsgType["MarketDataReport"] = "DR";
    MsgType["CrossRequest"] = "DS";
    MsgType["CrossRequestAck"] = "DT";
})(MsgType = exports.MsgType || (exports.MsgType = {}));
var OrdStatus;
(function (OrdStatus) {
    OrdStatus["New"] = "0";
    OrdStatus["PartiallyFilled"] = "1";
    OrdStatus["Filled"] = "2";
    OrdStatus["DoneForDay"] = "3";
    OrdStatus["Canceled"] = "4";
    OrdStatus["ReplacedNoLongerUsed"] = "5";
    OrdStatus["PendingCancelIEResultOfOrderCancelRequest"] = "6";
    OrdStatus["Stopped"] = "7";
    OrdStatus["Rejected"] = "8";
    OrdStatus["Suspended"] = "9";
    OrdStatus["PendingNew"] = "A";
    OrdStatus["Calculated"] = "B";
    OrdStatus["Expired"] = "C";
    OrdStatus["AcceptedForBidding"] = "D";
    OrdStatus["PendingReplaceIEResultOfOrderCancelReplaceRequest"] = "E";
})(OrdStatus = exports.OrdStatus || (exports.OrdStatus = {}));
var OrdType;
(function (OrdType) {
    OrdType["Market"] = "1";
    OrdType["Limit"] = "2";
    OrdType["StopStopLoss"] = "3";
    OrdType["StopLimit"] = "4";
    OrdType["MarketOnCloseNoLongerUsed"] = "5";
    OrdType["WithOrWithout"] = "6";
    OrdType["LimitOrBetter"] = "7";
    OrdType["LimitWithOrWithout"] = "8";
    OrdType["OnBasis"] = "9";
    OrdType["OnCloseNoLongerUsed"] = "A";
    OrdType["LimitOnCloseNoLongerUsed"] = "B";
    OrdType["ForexMarketNoLongerUsed"] = "C";
    OrdType["PreviouslyQuoted"] = "D";
    OrdType["PreviouslyIndicated"] = "E";
    OrdType["ForexLimitNoLongerUsed"] = "F";
    OrdType["ForexSwap"] = "G";
    OrdType["ForexPreviouslyQuotedNoLongerUsed"] = "H";
    OrdType["FunariLimitDayOrderWithUnexecutedPortionHandlesAsMarketOnCloseEGJapan"] = "I";
    OrdType["MarketIfTouchedMit"] = "J";
    OrdType["MarketWithLeftOverAsLimitMarketOrderWithUnexecutedQuantityBecomingLimitOrderAtLastPrice"] = "K";
    OrdType["PreviousFundValuationPointHistoricPricingForCiv"] = "L";
    OrdType["NextFundValuationPointForwardPricingForCiv"] = "M";
    OrdType["Pegged"] = "P";
    OrdType["CounterOrderSelection"] = "Q";
    OrdType["StopOnBidOrOffer"] = "R";
    OrdType["StopLimitOnBidOrOffer"] = "S";
})(OrdType = exports.OrdType || (exports.OrdType = {}));
var PossDupFlag;
(function (PossDupFlag) {
    PossDupFlag["OriginalTransmission"] = "N";
    PossDupFlag["PossibleDuplicate"] = "Y";
})(PossDupFlag = exports.PossDupFlag || (exports.PossDupFlag = {}));
var Side;
(function (Side) {
    Side["Buy"] = "1";
    Side["Sell"] = "2";
    Side["BuyMinus"] = "3";
    Side["SellPlus"] = "4";
    Side["SellShort"] = "5";
    Side["SellShortExempt"] = "6";
    Side["Undisclosed"] = "7";
    Side["CrossOrdersWhereCounterpartyIsAnExchangeValidForAllMessagesExceptIoIs"] = "8";
    Side["CrossShort"] = "9";
    Side["CrossShortExempt"] = "A";
    Side["AsDefinedForUseWithMultilegInstruments"] = "B";
    Side["OppositeForUseWithMultilegInstruments"] = "C";
    Side["SubscribeEGCiv"] = "D";
    Side["RedeemEGCiv"] = "E";
    Side["LendFinancingIdentifiesDirectionOfCollateral"] = "F";
    Side["BorrowFinancingIdentifiesDirectionOfCollateral"] = "G";
    Side["SellUndisclosed"] = "H";
})(Side = exports.Side || (exports.Side = {}));
var TimeInForce;
(function (TimeInForce) {
    TimeInForce["DayOrSession"] = "0";
    TimeInForce["GoodTillCancelGtc"] = "1";
    TimeInForce["AtTheOpeningOpg"] = "2";
    TimeInForce["ImmediateOrCancelIoc"] = "3";
    TimeInForce["FillOrKillFok"] = "4";
    TimeInForce["GoodTillCrossingGtx"] = "5";
    TimeInForce["GoodTillDateGtd"] = "6";
    TimeInForce["AtTheClose"] = "7";
    TimeInForce["GoodThroughCrossing"] = "8";
    TimeInForce["AtCrossing"] = "9";
    TimeInForce["GoodForTimeGft"] = "A";
    TimeInForce["GoodForAuctionGfa"] = "B";
})(TimeInForce = exports.TimeInForce || (exports.TimeInForce = {}));
var Urgency;
(function (Urgency) {
    Urgency["Normal"] = "0";
    Urgency["Flash"] = "1";
    Urgency["Background"] = "2";
})(Urgency = exports.Urgency || (exports.Urgency = {}));
var SettlType;
(function (SettlType) {
    SettlType["RegularFxSpotSettlementT1OrT2DependingOnCurrency"] = "0";
    SettlType["CashTodT0"] = "1";
    SettlType["NextDayTomT1"] = "2";
    SettlType["T2"] = "3";
    SettlType["T3"] = "4";
    SettlType["T4"] = "5";
    SettlType["Future"] = "6";
    SettlType["WhenAndIfIssued"] = "7";
    SettlType["SellersOption"] = "8";
    SettlType["T5"] = "9";
    SettlType["BrokenDate"] = "B";
    SettlType["FxSpotNextSettlementSpot1AkaNextDay"] = "C";
})(SettlType = exports.SettlType || (exports.SettlType = {}));
var SymbolSfx;
(function (SymbolSfx) {
    SymbolSfx["EucpWithLumpSumInterestRatherThanDiscountPrice"] = "CD";
    SymbolSfx["WhenIssuedForASecurityToBeReissuedUnderAnOldCusipOrIsin"] = "WI";
})(SymbolSfx = exports.SymbolSfx || (exports.SymbolSfx = {}));
var AllocTransType;
(function (AllocTransType) {
    AllocTransType["New"] = "0";
    AllocTransType["Replace"] = "1";
    AllocTransType["Cancel"] = "2";
    AllocTransType["PreliminaryWithoutMiscFeesAndNetMoneyRemovedReplaced"] = "3";
    AllocTransType["CalculatedIncludesMiscFeesAndNetMoneyRemovedReplaced"] = "4";
    AllocTransType["CalculatedWithoutPreliminarySentUnsolicitedByBrokerIncludesMiscFeesAndNetMoneyRemovedReplaced"] = "5";
    AllocTransType["Reversal"] = "6";
})(AllocTransType = exports.AllocTransType || (exports.AllocTransType = {}));
var PositionEffect;
(function (PositionEffect) {
    PositionEffect["Close"] = "C";
    PositionEffect["Fifo"] = "F";
    PositionEffect["Open"] = "O";
    PositionEffect["Rolled"] = "R";
    PositionEffect["CloseButNotifyOnOpen"] = "N";
    PositionEffect["Default"] = "D";
})(PositionEffect = exports.PositionEffect || (exports.PositionEffect = {}));
var ProcessCode;
(function (ProcessCode) {
    ProcessCode["Regular"] = "0";
    ProcessCode["SoftDollar"] = "1";
    ProcessCode["StepIn"] = "2";
    ProcessCode["StepOut"] = "3";
    ProcessCode["SoftDollarStepIn"] = "4";
    ProcessCode["SoftDollarStepOut"] = "5";
    ProcessCode["PlanSponsor"] = "6";
})(ProcessCode = exports.ProcessCode || (exports.ProcessCode = {}));
var AllocStatus;
(function (AllocStatus) {
    AllocStatus[AllocStatus["AcceptedSuccessfullyProcessed"] = 0] = "AcceptedSuccessfullyProcessed";
    AllocStatus[AllocStatus["BlockLevelReject"] = 1] = "BlockLevelReject";
    AllocStatus[AllocStatus["AccountLevelReject"] = 2] = "AccountLevelReject";
    AllocStatus[AllocStatus["ReceivedReceivedNotYetProcessed"] = 3] = "ReceivedReceivedNotYetProcessed";
    AllocStatus[AllocStatus["Incomplete"] = 4] = "Incomplete";
    AllocStatus[AllocStatus["RejectedByIntermediary"] = 5] = "RejectedByIntermediary";
    AllocStatus[AllocStatus["AllocationPending"] = 6] = "AllocationPending";
    AllocStatus[AllocStatus["Reversed"] = 7] = "Reversed";
    AllocStatus[AllocStatus["CancelledByIntermediary"] = 8] = "CancelledByIntermediary";
    AllocStatus[AllocStatus["Claimed"] = 9] = "Claimed";
    AllocStatus[AllocStatus["Refused"] = 10] = "Refused";
    AllocStatus[AllocStatus["PendingGiveUpApproval"] = 11] = "PendingGiveUpApproval";
    AllocStatus[AllocStatus["Cancelled"] = 12] = "Cancelled";
    AllocStatus[AllocStatus["PendingTakeUpApproval"] = 13] = "PendingTakeUpApproval";
    AllocStatus[AllocStatus["ReversalPending"] = 14] = "ReversalPending";
})(AllocStatus = exports.AllocStatus || (exports.AllocStatus = {}));
var AllocRejCode;
(function (AllocRejCode) {
    AllocRejCode[AllocRejCode["UnknownOrMissingAccountS"] = 0] = "UnknownOrMissingAccountS";
    AllocRejCode[AllocRejCode["IncorrectOrMissingBlockQuantity"] = 1] = "IncorrectOrMissingBlockQuantity";
    AllocRejCode[AllocRejCode["IncorrectOrMissingAveragePrice"] = 2] = "IncorrectOrMissingAveragePrice";
    AllocRejCode[AllocRejCode["UnknownExecutingBrokerMnemonic"] = 3] = "UnknownExecutingBrokerMnemonic";
    AllocRejCode[AllocRejCode["IncorrectOrMissingCommission"] = 4] = "IncorrectOrMissingCommission";
    AllocRejCode[AllocRejCode["UnknownOrderId37"] = 5] = "UnknownOrderId37";
    AllocRejCode[AllocRejCode["UnknownListId66"] = 6] = "UnknownListId66";
    AllocRejCode[AllocRejCode["OtherFurtherInText58"] = 7] = "OtherFurtherInText58";
    AllocRejCode[AllocRejCode["IncorrectOrMissingAllocatedQuantity"] = 8] = "IncorrectOrMissingAllocatedQuantity";
    AllocRejCode[AllocRejCode["CalculationDifference"] = 9] = "CalculationDifference";
    AllocRejCode[AllocRejCode["UnknownOrStaleExecId"] = 10] = "UnknownOrStaleExecId";
    AllocRejCode[AllocRejCode["MismatchedData"] = 11] = "MismatchedData";
    AllocRejCode[AllocRejCode["UnknownClOrdId"] = 12] = "UnknownClOrdId";
    AllocRejCode[AllocRejCode["WarehouseRequestRejected"] = 13] = "WarehouseRequestRejected";
    AllocRejCode[AllocRejCode["DuplicateOrMissingIndividualAllocId467"] = 14] = "DuplicateOrMissingIndividualAllocId467";
    AllocRejCode[AllocRejCode["TradeNotRecognized"] = 15] = "TradeNotRecognized";
    AllocRejCode[AllocRejCode["TradePreviouslyAllocated"] = 16] = "TradePreviouslyAllocated";
    AllocRejCode[AllocRejCode["IncorrectOrMissingInstrument"] = 17] = "IncorrectOrMissingInstrument";
    AllocRejCode[AllocRejCode["IncorrectOrMissingSettlementDate"] = 18] = "IncorrectOrMissingSettlementDate";
    AllocRejCode[AllocRejCode["IncorrectOrMissingFundIdOrFundName"] = 19] = "IncorrectOrMissingFundIdOrFundName";
    AllocRejCode[AllocRejCode["IncorrectOrMissingSettlementInstructions"] = 20] = "IncorrectOrMissingSettlementInstructions";
    AllocRejCode[AllocRejCode["IncorrectOrMissingFees"] = 21] = "IncorrectOrMissingFees";
    AllocRejCode[AllocRejCode["IncorrectOrMissingTax"] = 22] = "IncorrectOrMissingTax";
    AllocRejCode[AllocRejCode["UnknownOrMissingParty"] = 23] = "UnknownOrMissingParty";
    AllocRejCode[AllocRejCode["IncorrectOrMissingSide"] = 24] = "IncorrectOrMissingSide";
    AllocRejCode[AllocRejCode["IncorrectOrMissingNetMoney"] = 25] = "IncorrectOrMissingNetMoney";
    AllocRejCode[AllocRejCode["IncorrectOrMissingTradeDate"] = 26] = "IncorrectOrMissingTradeDate";
    AllocRejCode[AllocRejCode["IncorrectOrMissingSettlementCurrencyInstructions"] = 27] = "IncorrectOrMissingSettlementCurrencyInstructions";
    AllocRejCode[AllocRejCode["IncorrrectOrMissingProcessCode81"] = 28] = "IncorrrectOrMissingProcessCode81";
    AllocRejCode[AllocRejCode["Other"] = 99] = "Other";
})(AllocRejCode = exports.AllocRejCode || (exports.AllocRejCode = {}));
var EmailType;
(function (EmailType) {
    EmailType["New"] = "0";
    EmailType["Reply"] = "1";
    EmailType["AdminReply"] = "2";
})(EmailType = exports.EmailType || (exports.EmailType = {}));
var PossResend;
(function (PossResend) {
    PossResend["OriginalTransmission"] = "N";
    PossResend["PossibleResend"] = "Y";
})(PossResend = exports.PossResend || (exports.PossResend = {}));
var CxlRejReason;
(function (CxlRejReason) {
    CxlRejReason[CxlRejReason["TooLateToCancel"] = 0] = "TooLateToCancel";
    CxlRejReason[CxlRejReason["UnknownOrder"] = 1] = "UnknownOrder";
    CxlRejReason[CxlRejReason["BrokerExchangeOption"] = 2] = "BrokerExchangeOption";
    CxlRejReason[CxlRejReason["OrderAlreadyInPendingCancelOrPendingReplaceStatus"] = 3] = "OrderAlreadyInPendingCancelOrPendingReplaceStatus";
    CxlRejReason[CxlRejReason["UnableToProcessOrderMassCancelRequest"] = 4] = "UnableToProcessOrderMassCancelRequest";
    CxlRejReason[CxlRejReason["OrigOrdModTime586DidNotMatchLastTransactTime60OfOrder"] = 5] = "OrigOrdModTime586DidNotMatchLastTransactTime60OfOrder";
    CxlRejReason[CxlRejReason["DuplicateClOrdId11Received"] = 6] = "DuplicateClOrdId11Received";
    CxlRejReason[CxlRejReason["PriceExceedsCurrentPrice"] = 7] = "PriceExceedsCurrentPrice";
    CxlRejReason[CxlRejReason["PriceExceedsCurrentPriceBand"] = 8] = "PriceExceedsCurrentPriceBand";
    CxlRejReason[CxlRejReason["InvalidPriceIncrement"] = 18] = "InvalidPriceIncrement";
    CxlRejReason[CxlRejReason["Other"] = 99] = "Other";
})(CxlRejReason = exports.CxlRejReason || (exports.CxlRejReason = {}));
var OrdRejReason;
(function (OrdRejReason) {
    OrdRejReason[OrdRejReason["BrokerExchangeOption"] = 0] = "BrokerExchangeOption";
    OrdRejReason[OrdRejReason["UnknownSymbol"] = 1] = "UnknownSymbol";
    OrdRejReason[OrdRejReason["ExchangeClosed"] = 2] = "ExchangeClosed";
    OrdRejReason[OrdRejReason["OrderExceedsLimit"] = 3] = "OrderExceedsLimit";
    OrdRejReason[OrdRejReason["TooLateToEnter"] = 4] = "TooLateToEnter";
    OrdRejReason[OrdRejReason["UnknownOrder"] = 5] = "UnknownOrder";
    OrdRejReason[OrdRejReason["DuplicateOrderEGDupeClOrdId"] = 6] = "DuplicateOrderEGDupeClOrdId";
    OrdRejReason[OrdRejReason["DuplicateOfAVerballyCommunicatedOrder"] = 7] = "DuplicateOfAVerballyCommunicatedOrder";
    OrdRejReason[OrdRejReason["StaleOrder"] = 8] = "StaleOrder";
    OrdRejReason[OrdRejReason["TradeAlongRequired"] = 9] = "TradeAlongRequired";
    OrdRejReason[OrdRejReason["InvalidInvestorId"] = 10] = "InvalidInvestorId";
    OrdRejReason[OrdRejReason["UnsupportedOrderCharacteristic"] = 11] = "UnsupportedOrderCharacteristic";
    OrdRejReason[OrdRejReason["SurveillanceOption"] = 12] = "SurveillanceOption";
    OrdRejReason[OrdRejReason["IncorrectQuantity"] = 13] = "IncorrectQuantity";
    OrdRejReason[OrdRejReason["IncorrectAllocatedQuantity"] = 14] = "IncorrectAllocatedQuantity";
    OrdRejReason[OrdRejReason["UnknownAccountS"] = 15] = "UnknownAccountS";
    OrdRejReason[OrdRejReason["PriceExceedsCurrentPriceBand"] = 16] = "PriceExceedsCurrentPriceBand";
    OrdRejReason[OrdRejReason["InvalidPriceIncrement"] = 18] = "InvalidPriceIncrement";
    OrdRejReason[OrdRejReason["ReferencePriceNotAvailable"] = 19] = "ReferencePriceNotAvailable";
    OrdRejReason[OrdRejReason["NotionalValueExceedsThreshold"] = 20] = "NotionalValueExceedsThreshold";
    OrdRejReason[OrdRejReason["AlgorithmRiskThresholdBreached"] = 21] = "AlgorithmRiskThresholdBreached";
    OrdRejReason[OrdRejReason["ShortSellNotPermitted"] = 22] = "ShortSellNotPermitted";
    OrdRejReason[OrdRejReason["ShortSellRejectedDueToSecurityPreBorrowRestriction"] = 23] = "ShortSellRejectedDueToSecurityPreBorrowRestriction";
    OrdRejReason[OrdRejReason["ShortSellRejectedDueToAccountPreBorrowRestriction"] = 24] = "ShortSellRejectedDueToAccountPreBorrowRestriction";
    OrdRejReason[OrdRejReason["InsufficientCreditLimit"] = 25] = "InsufficientCreditLimit";
    OrdRejReason[OrdRejReason["ExceededClipSizeLimit"] = 26] = "ExceededClipSizeLimit";
    OrdRejReason[OrdRejReason["ExceededMaximumNotionalOrderAmount"] = 27] = "ExceededMaximumNotionalOrderAmount";
    OrdRejReason[OrdRejReason["ExceededDv01Pv01Limit"] = 28] = "ExceededDv01Pv01Limit";
    OrdRejReason[OrdRejReason["ExceededCs01Limit"] = 29] = "ExceededCs01Limit";
    OrdRejReason[OrdRejReason["Other"] = 99] = "Other";
})(OrdRejReason = exports.OrdRejReason || (exports.OrdRejReason = {}));
var IOIQualifier;
(function (IOIQualifier) {
    IOIQualifier["QuantityIsNegotiable"] = "1";
    IOIQualifier["AllowLateBids"] = "2";
    IOIQualifier["ImmediateOrCounter"] = "3";
    IOIQualifier["AutoTrade"] = "4";
    IOIQualifier["AllOrNoneAon"] = "A";
    IOIQualifier["MarketOnCloseMocHeldToClose"] = "B";
    IOIQualifier["AtTheCloseAroundNotHeldToClose"] = "C";
    IOIQualifier["VwapVolumeWeightedAveragePrice"] = "D";
    IOIQualifier["Axe"] = "E";
    IOIQualifier["AxeOnBid"] = "F";
    IOIQualifier["AxeOnOffer"] = "G";
    IOIQualifier["ClientNaturalWorking"] = "H";
    IOIQualifier["InTouchWith"] = "I";
    IOIQualifier["PositionWanted"] = "J";
    IOIQualifier["MarketMaking"] = "K";
    IOIQualifier["Limit"] = "L";
    IOIQualifier["MoreBehind"] = "M";
    IOIQualifier["ClientNaturalBlock"] = "N";
    IOIQualifier["AtTheOpen"] = "O";
    IOIQualifier["TakingAPosition"] = "P";
    IOIQualifier["AtTheMarketPreviouslyCalledCurrentQuote"] = "Q";
    IOIQualifier["ReadyToTrade"] = "R";
    IOIQualifier["InventoryOrPortfolioShown"] = "S";
    IOIQualifier["ThroughTheDay"] = "T";
    IOIQualifier["Unwind"] = "U";
    IOIQualifier["Versus"] = "V";
    IOIQualifier["IndicationWorkingAway"] = "W";
    IOIQualifier["CrossingOpportunity"] = "X";
    IOIQualifier["AtTheMidpoint"] = "Y";
    IOIQualifier["PreOpen"] = "Z";
    IOIQualifier["AutomaticSpot"] = "a";
    IOIQualifier["PlatformCalculatedSpot"] = "b";
    IOIQualifier["OutsideSpread"] = "c";
    IOIQualifier["DeferredSpot"] = "d";
    IOIQualifier["NegotiatedSpot"] = "n";
})(IOIQualifier = exports.IOIQualifier || (exports.IOIQualifier = {}));
var ReportToExch;
(function (ReportToExch) {
    ReportToExch["IndicatesThePartySendingMessageWillReportTrade"] = "N";
    ReportToExch["IndicatesThePartyReceivingMessageMustReportTrade"] = "Y";
})(ReportToExch = exports.ReportToExch || (exports.ReportToExch = {}));
var LocateReqd;
(function (LocateReqd) {
    LocateReqd["IndicatesTheBrokerIsNotRequiredToLocate"] = "N";
    LocateReqd["IndicatesTheBrokerIsResponsibleForLocatingTheStock"] = "Y";
})(LocateReqd = exports.LocateReqd || (exports.LocateReqd = {}));
var ForexReq;
(function (ForexReq) {
    ForexReq["DoNotExecuteForexAfterSecurityTrade"] = "N";
    ForexReq["ExecuteForexAfterSecurityTrade"] = "Y";
})(ForexReq = exports.ForexReq || (exports.ForexReq = {}));
var DKReason;
(function (DKReason) {
    DKReason["UnknownSecurity"] = "A";
    DKReason["WrongSide"] = "B";
    DKReason["QuantityExceedsOrder"] = "C";
    DKReason["NoMatchingOrder"] = "D";
    DKReason["PriceExceedsLimit"] = "E";
    DKReason["CalculationDifference"] = "F";
    DKReason["NoMatchingExecutionReport358"] = "G";
    DKReason["Other"] = "Z";
})(DKReason = exports.DKReason || (exports.DKReason = {}));
var IOINaturalFlag;
(function (IOINaturalFlag) {
    IOINaturalFlag["NotNatural"] = "N";
    IOINaturalFlag["Natural"] = "Y";
})(IOINaturalFlag = exports.IOINaturalFlag || (exports.IOINaturalFlag = {}));
var MiscFeeType;
(function (MiscFeeType) {
    MiscFeeType["RegulatoryEGSec"] = "1";
    MiscFeeType["Tax"] = "2";
    MiscFeeType["LocalCommission"] = "3";
    MiscFeeType["ExchangeFees"] = "4";
    MiscFeeType["Stamp"] = "5";
    MiscFeeType["Levy"] = "6";
    MiscFeeType["Other"] = "7";
    MiscFeeType["Markup"] = "8";
    MiscFeeType["ConsumptionTax"] = "9";
    MiscFeeType["PerTransaction"] = "10";
    MiscFeeType["Conversion"] = "11";
    MiscFeeType["Agent"] = "12";
    MiscFeeType["TransferFee"] = "13";
    MiscFeeType["SecurityLending"] = "14";
    MiscFeeType["TradeReporting"] = "15";
    MiscFeeType["TaxOnPrincipalAmount"] = "16";
    MiscFeeType["TaxOnAccruedInterestAmount"] = "17";
    MiscFeeType["NewIssuanceFee"] = "18";
    MiscFeeType["ServiceFee"] = "19";
    MiscFeeType["OddLotFee"] = "20";
    MiscFeeType["AuctionFee"] = "21";
    MiscFeeType["ValueAddedTaxVat"] = "22";
    MiscFeeType["SalesTax"] = "23";
})(MiscFeeType = exports.MiscFeeType || (exports.MiscFeeType = {}));
var ExecType;
(function (ExecType) {
    ExecType["New"] = "0";
    ExecType["DoneForDay"] = "3";
    ExecType["Canceled"] = "4";
    ExecType["Replaced"] = "5";
    ExecType["PendingCancelEGResultOfOrderCancelRequest"] = "6";
    ExecType["Stopped"] = "7";
    ExecType["Rejected"] = "8";
    ExecType["Suspended"] = "9";
    ExecType["PendingNew"] = "A";
    ExecType["Calculated"] = "B";
    ExecType["Expired"] = "C";
    ExecType["RestatedExecutionReportSentUnsolicitedBySellsideWithExecRestatementReason378Set"] = "D";
    ExecType["PendingReplaceEGResultOfOrderCancelReplaceRequest"] = "E";
    ExecType["TradePartialFillOrFill"] = "F";
    ExecType["TradeCorrect"] = "G";
    ExecType["TradeCancel"] = "H";
    ExecType["OrderStatus"] = "I";
    ExecType["TradeInAClearingHold"] = "J";
    ExecType["TradeHasBeenReleasedToClearing"] = "K";
    ExecType["TriggeredOrActivatedBySystem"] = "L";
    ExecType["Locked"] = "M";
    ExecType["Released"] = "N";
})(ExecType = exports.ExecType || (exports.ExecType = {}));
var SettlCurrFxRateCalc;
(function (SettlCurrFxRateCalc) {
    SettlCurrFxRateCalc["Multiply"] = "M";
    SettlCurrFxRateCalc["Divide"] = "D";
})(SettlCurrFxRateCalc = exports.SettlCurrFxRateCalc || (exports.SettlCurrFxRateCalc = {}));
var SettlInstMode;
(function (SettlInstMode) {
    SettlInstMode["DefaultReplaced"] = "0";
    SettlInstMode["StandingInstructionsProvided"] = "1";
    SettlInstMode["SpecificAllocationAccountOverridingReplaced"] = "2";
    SettlInstMode["SpecificAllocationAccountStandingReplaced"] = "3";
    SettlInstMode["SpecificOrderForASingleAccountForCiv"] = "4";
    SettlInstMode["RequestReject"] = "5";
})(SettlInstMode = exports.SettlInstMode || (exports.SettlInstMode = {}));
var SettlInstTransType;
(function (SettlInstTransType) {
    SettlInstTransType["New"] = "N";
    SettlInstTransType["Cancel"] = "C";
    SettlInstTransType["Replace"] = "R";
    SettlInstTransType["Restate"] = "T";
})(SettlInstTransType = exports.SettlInstTransType || (exports.SettlInstTransType = {}));
var SettlInstSource;
(function (SettlInstSource) {
    SettlInstSource["BrokersInstructions"] = "1";
    SettlInstSource["InstitutionsInstructions"] = "2";
    SettlInstSource["InvestorEGCivUse"] = "3";
})(SettlInstSource = exports.SettlInstSource || (exports.SettlInstSource = {}));
var SecurityType;
(function (SecurityType) {
    SecurityType["EuroSupranationalCoupons"] = "EUSUPRA";
    SecurityType["CorporateBond"] = "CORP";
    SecurityType["ForeignExchangeContract"] = "FOR";
    SecurityType["CommonStock"] = "CS";
    SecurityType["Repurchase"] = "REPO";
    SecurityType["BradyBond"] = "BRADY";
    SecurityType["TermLoan"] = "TERM";
    SecurityType["BankersAcceptance"] = "BA";
    SecurityType["AssetBackedSecurities"] = "ABS";
    SecurityType["OtherAnticipationNotesBanGanEtc"] = "AN";
    SecurityType["MutualFund"] = "MF";
    SecurityType["FederalAgencyCoupon"] = "FAC";
    SecurityType["CorporatePrivatePlacement"] = "CPP";
    SecurityType["PreferredStock"] = "PS";
    SecurityType["Forward"] = "FORWARD";
    SecurityType["CanadianTreasuryNotes"] = "CAN";
    SecurityType["RevolverLoan"] = "RVLV";
    SecurityType["BankDepositoryNote"] = "BDN";
    SecurityType["CanadianMortgageBonds"] = "CMB";
    SecurityType["CertificateOfObligation"] = "COFO";
    SecurityType["MultilegInstrument"] = "MLEG";
    SecurityType["NonDeliverableForward"] = "FXNDF";
    SecurityType["Cap"] = "CAP";
    SecurityType["FederalAgencyDiscountNote"] = "FADN";
    SecurityType["ConvertibleBond"] = "CB";
    SecurityType["CreditDefaultSwap"] = "CDS";
    SecurityType["BuySellback"] = "BUYSELL";
    SecurityType["CanadianTreasuryBills"] = "CTB";
    SecurityType["RevolverTermLoan"] = "RVLVTRM";
    SecurityType["BankNotes"] = "BN";
    SecurityType["CorpMortgageBackedSecurities"] = "CMBS";
    SecurityType["CertificateOfParticipation"] = "COFP";
    SecurityType["NoSecurityType"] = "NONE";
    SecurityType["FxSpot"] = "FXSPOT";
    SecurityType["UsTreasuryNoteDeprecatedValueUseTnote"] = "UST";
    SecurityType["PrivateExportFunding"] = "PEF";
    SecurityType["DualCurrency"] = "DUAL";
    SecurityType["SecuritiesLoan"] = "SECLOAN";
    SecurityType["EuroSovereigns"] = "EUSOV";
    SecurityType["BridgeLoan"] = "BRIDGE";
    SecurityType["BillOfExchanges"] = "BOX";
    SecurityType["CollateralizedMortgageObligation"] = "CMO";
    SecurityType["GeneralObligationBonds"] = "GO";
    SecurityType["FxForward"] = "FXFWD";
    SecurityType["Collar"] = "CLLR";
    SecurityType["UsTreasuryBillDeprecatedValueUseTbill"] = "USTB";
    SecurityType["UsdSupranationalCoupons"] = "SUPRA";
    SecurityType["EuroCorporateBond"] = "EUCORP";
    SecurityType["SecuritiesPledge"] = "SECPLEDGE";
    SecurityType["CanadianProvincialBonds"] = "PROV";
    SecurityType["LetterOfCredit"] = "LOFC";
    SecurityType["CanadianMoneyMarkets"] = "CAMM";
    SecurityType["IoetteMortgage"] = "IET";
    SecurityType["MandatoryTender"] = "MT";
    SecurityType["FxSwap"] = "FXSWAP";
    SecurityType["CommoditySwap"] = "CMDTYSWAP";
    SecurityType["EuroCorporateFloatingRateNotes"] = "EUFRN";
    SecurityType["TreasuryBillNonUs"] = "TB";
    SecurityType["SwingLineFacility"] = "SWING";
    SecurityType["CertificateOfDeposit"] = "CD";
    SecurityType["MortgageBackedSecurities"] = "MBS";
    SecurityType["RevenueAnticipationNote"] = "RAN";
    SecurityType["WildcardEntryForUseOnSecurityDefinitionRequest"] = "?";
    SecurityType["DeliveryVersusPledge"] = "DVPLDG";
    SecurityType["Exotic"] = "EXOTIC";
    SecurityType["UsCorporateFloatingRateNotes"] = "FRN";
    SecurityType["OptionsOnCombo"] = "OOC";
    SecurityType["UsTreasuryBond"] = "TBOND";
    SecurityType["DebtorInPossession"] = "DINP";
    SecurityType["CallLoans"] = "CL";
    SecurityType["MortgageInterestOnly"] = "MIO";
    SecurityType["RevenueBonds"] = "REV";
    SecurityType["Cash"] = "CASH";
    SecurityType["Floor"] = "FLR";
    SecurityType["CollateralBasket"] = "COLLBSKT";
    SecurityType["IndexedLinked"] = "XLINKD";
    SecurityType["InterestStripFromAnyBondOrNote"] = "TINT";
    SecurityType["Defaulted"] = "DEFLTED";
    SecurityType["CommercialPaper"] = "CP";
    SecurityType["MortgagePrincipalOnly"] = "MPO";
    SecurityType["SpecialAssessment"] = "SPCLA";
    SecurityType["ForwardRateAgreement"] = "FRA";
    SecurityType["StructuredNotes"] = "STRUCT";
    SecurityType["Future"] = "FUT";
    SecurityType["UsTreasuryBill"] = "TBILL";
    SecurityType["TreasuryInflationProtectedSecurities"] = "TIPS";
    SecurityType["Withdrawn"] = "WITHDRN";
    SecurityType["DepositNotes"] = "DN";
    SecurityType["MortgagePrivatePlacement"] = "MPP";
    SecurityType["SpecialObligation"] = "SPCLO";
    SecurityType["YankeeCorporateBond"] = "YANK";
    SecurityType["PrincipalStripOfACallableBondOrNote"] = "TCAL";
    SecurityType["Replaced"] = "REPLACD";
    SecurityType["EuroCertificateOfDeposit"] = "EUCD";
    SecurityType["MiscellaneousPassThrough"] = "MPT";
    SecurityType["SpecialTax"] = "SPCLT";
    SecurityType["DerivativeForward"] = "FWD";
    SecurityType["InterestRateSwap"] = "IRS";
    SecurityType["PrincipalStripFromANonCallableBondOrNote"] = "TPRN";
    SecurityType["Matured"] = "MATURED";
    SecurityType["EuroCommercialPaper"] = "EUCP";
    SecurityType["Pfandbriefe"] = "PFAND";
    SecurityType["TaxAnticipationNote"] = "TAN";
    SecurityType["TotalReturnSwap"] = "TRS";
    SecurityType["UsTreasuryNote"] = "TNOTE";
    SecurityType["AmendedRestated"] = "AMENDED";
    SecurityType["LiquidityNote"] = "LQN";
    SecurityType["ToBeAnnounced"] = "TBA";
    SecurityType["TaxAllocation"] = "TAXA";
    SecurityType["LoanLease"] = "LOANLEASE";
    SecurityType["Retired"] = "RETIRED";
    SecurityType["MediumTermNotes"] = "MTN";
    SecurityType["TaxExemptCommercialPaper"] = "TECP";
    SecurityType["OptionsOnFutures"] = "OOF";
    SecurityType["Overnight"] = "ONITE";
    SecurityType["TaxableMunicipalCp"] = "TMCP";
    SecurityType["OptionsOnPhysicalUseNotRecommended"] = "OOP";
    SecurityType["PromissoryNote"] = "PN";
    SecurityType["ShortTermLoanNote"] = "STN";
    SecurityType["TaxRevenueAnticipationNote"] = "TRAN";
    SecurityType["Option"] = "OPT";
    SecurityType["PlazosFijos"] = "PZFJ";
    SecurityType["VariableRateDemandNote"] = "VRDN";
    SecurityType["SecuredLiquidityNote"] = "SLQN";
    SecurityType["Warrant"] = "WAR";
    SecurityType["SpotForward"] = "SPOTFWD";
    SecurityType["TimeDeposit"] = "TD";
    SecurityType["SwapOption"] = "SWAPTION";
    SecurityType["Transmission"] = "XMISSION";
    SecurityType["TermLiquidityNote"] = "TLQN";
    SecurityType["GeneralTypeForAContractBasedOnAnEstablishedIndex"] = "INDEX";
    SecurityType["ExtendedCommNote"] = "XCN";
    SecurityType["BondBasket"] = "BDBSKT";
    SecurityType["YankeeCertificateOfDeposit"] = "YCD";
    SecurityType["ContractForDifference"] = "CFD";
    SecurityType["CorrelationSwap"] = "CRLTNSWAP";
    SecurityType["DividendSwap"] = "DVDNDSWAP";
    SecurityType["EquityBasket"] = "EQBSKT";
    SecurityType["EquityForward"] = "EQFWD";
    SecurityType["ReturnSwap"] = "RTRNSWAP";
    SecurityType["VarianceSwap"] = "VARSWAP";
})(SecurityType = exports.SecurityType || (exports.SecurityType = {}));
var StandInstDbType;
(function (StandInstDbType) {
    StandInstDbType[StandInstDbType["Other"] = 0] = "Other";
    StandInstDbType[StandInstDbType["DtcSid"] = 1] = "DtcSid";
    StandInstDbType[StandInstDbType["ThomsonAlert"] = 2] = "ThomsonAlert";
    StandInstDbType[StandInstDbType["AGlobalCustodianStandInstDbName70MustBeProvided"] = 3] = "AGlobalCustodianStandInstDbName70MustBeProvided";
    StandInstDbType[StandInstDbType["AccountNet"] = 4] = "AccountNet";
})(StandInstDbType = exports.StandInstDbType || (exports.StandInstDbType = {}));
var SettlDeliveryType;
(function (SettlDeliveryType) {
    SettlDeliveryType[SettlDeliveryType["VersusPaymentDeliverIfSellOrReceiveIfBuyVsAgainstPayment"] = 0] = "VersusPaymentDeliverIfSellOrReceiveIfBuyVsAgainstPayment";
    SettlDeliveryType[SettlDeliveryType["FreeDeliverIfSellOrReceiveIfBuyFree"] = 1] = "FreeDeliverIfSellOrReceiveIfBuyFree";
    SettlDeliveryType[SettlDeliveryType["TriParty"] = 2] = "TriParty";
    SettlDeliveryType[SettlDeliveryType["HoldInCustody"] = 3] = "HoldInCustody";
})(SettlDeliveryType = exports.SettlDeliveryType || (exports.SettlDeliveryType = {}));
var AllocLinkType;
(function (AllocLinkType) {
    AllocLinkType[AllocLinkType["FxNetting"] = 0] = "FxNetting";
    AllocLinkType[AllocLinkType["FxSwap"] = 1] = "FxSwap";
})(AllocLinkType = exports.AllocLinkType || (exports.AllocLinkType = {}));
var PutOrCall;
(function (PutOrCall) {
    PutOrCall[PutOrCall["Put"] = 0] = "Put";
    PutOrCall[PutOrCall["Call"] = 1] = "Call";
})(PutOrCall = exports.PutOrCall || (exports.PutOrCall = {}));
var CoveredOrUncovered;
(function (CoveredOrUncovered) {
    CoveredOrUncovered[CoveredOrUncovered["Covered"] = 0] = "Covered";
    CoveredOrUncovered[CoveredOrUncovered["Uncovered"] = 1] = "Uncovered";
})(CoveredOrUncovered = exports.CoveredOrUncovered || (exports.CoveredOrUncovered = {}));
var NotifyBrokerOfCredit;
(function (NotifyBrokerOfCredit) {
    NotifyBrokerOfCredit["DetailsShouldNotBeCommunicated"] = "N";
    NotifyBrokerOfCredit["DetailsShouldBeCommunicated"] = "Y";
})(NotifyBrokerOfCredit = exports.NotifyBrokerOfCredit || (exports.NotifyBrokerOfCredit = {}));
var AllocHandlInst;
(function (AllocHandlInst) {
    AllocHandlInst[AllocHandlInst["Match"] = 1] = "Match";
    AllocHandlInst[AllocHandlInst["Forward"] = 2] = "Forward";
    AllocHandlInst[AllocHandlInst["ForwardAndMatch"] = 3] = "ForwardAndMatch";
})(AllocHandlInst = exports.AllocHandlInst || (exports.AllocHandlInst = {}));
var RoutingType;
(function (RoutingType) {
    RoutingType[RoutingType["TargetFirm"] = 1] = "TargetFirm";
    RoutingType[RoutingType["TargetList"] = 2] = "TargetList";
    RoutingType[RoutingType["BlockFirm"] = 3] = "BlockFirm";
    RoutingType[RoutingType["BlockList"] = 4] = "BlockList";
    RoutingType[RoutingType["TargetPerson"] = 5] = "TargetPerson";
    RoutingType[RoutingType["BlockPerson"] = 6] = "BlockPerson";
})(RoutingType = exports.RoutingType || (exports.RoutingType = {}));
var BenchmarkCurveName;
(function (BenchmarkCurveName) {
    BenchmarkCurveName["Eonia"] = "EONIA";
    BenchmarkCurveName["Eurepo"] = "EUREPO";
    BenchmarkCurveName["EuriborDeprecatedUseEnumEuriborInstead"] = "Euribor";
    BenchmarkCurveName["FutureSwap"] = "FutureSWAP";
    BenchmarkCurveName["Libid"] = "LIBID";
    BenchmarkCurveName["LiborLondonInterBankOffer"] = "LIBOR";
    BenchmarkCurveName["MuniAaa"] = "MuniAAA";
    BenchmarkCurveName["Other"] = "OTHER";
    BenchmarkCurveName["Pfandbriefe"] = "Pfandbriefe";
    BenchmarkCurveName["Sonia"] = "SONIA";
    BenchmarkCurveName["Swap"] = "SWAP";
    BenchmarkCurveName["Treasury"] = "Treasury";
    BenchmarkCurveName["UsFederalReserveFedFundsEffectiveRate"] = "FEDEFF";
    BenchmarkCurveName["UsFedFundsTargetRate"] = "FEDOPEN";
    BenchmarkCurveName["EuroInterbankOfferRate"] = "EURIBOR";
})(BenchmarkCurveName = exports.BenchmarkCurveName || (exports.BenchmarkCurveName = {}));
var StipulationType;
(function (StipulationType) {
    StipulationType["AlternativeMinimumTaxYN"] = "AMT";
    StipulationType["AbsolutePrepaymentSpeed"] = "ABS";
    StipulationType["IncurredRecoveryYN"] = "INCURRCVY";
    StipulationType["AutoReinvestmentAtRateOrBetter"] = "AUTOREINV";
    StipulationType["ConstantPrepaymentPenalty"] = "CPP";
    StipulationType["AdditionalTerm"] = "ADDTRM";
    StipulationType["BankQualifiedYN"] = "BANKQUAL";
    StipulationType["ConstantPrepaymentRate"] = "CPR";
    StipulationType["ModifiedEquityDelivery"] = "MODEQTYDLVY";
    StipulationType["BargainConditionsSeeStipulationValue234ForValues"] = "BGNCON";
    StipulationType["ConstantPrepaymentYield"] = "CPY";
    StipulationType["NoReferenceObligationYN"] = "NOREFOBLIG";
    StipulationType["CouponRange"] = "COUPON";
    StipulationType["FinalCprOfHomeEquityPrepaymentCurve"] = "HEP";
    StipulationType["UnknownReferenceObligationYN"] = "UNKREFOBLIG";
    StipulationType["IsoCurrencyCode"] = "CURRENCY";
    StipulationType["PercentOfManufacturedHousingPrepaymentCurve"] = "MHP";
    StipulationType["AllGuaranteesYN"] = "ALLGUARANTEES";
    StipulationType["CustomStartEndDate"] = "CUSTOMDATE";
    StipulationType["MonthlyPrepaymentRate"] = "MPR";
    StipulationType["ReferencePriceYN"] = "REFPX";
    StipulationType["GeographicsAndRangeEx234Ca080MinimumOf80CaliforniaAssets"] = "GEOG";
    StipulationType["PercentOfProspectusPrepaymentCurve"] = "PPC";
    StipulationType["ReferencePolicyYN"] = "REFPOLICY";
    StipulationType["ValuationDiscount"] = "HAIRCUT";
    StipulationType["PercentOfBmaPrepaymentCurve"] = "PSA";
    StipulationType["SecuredListYN"] = "SECRDLIST";
    StipulationType["InsuredYN"] = "INSURED";
    StipulationType["SingleMonthlyMortality"] = "SMM";
    StipulationType["YearOrYearMonthOfIssueEx234200209"] = "ISSUE";
    StipulationType["IssuersTicker"] = "ISSUER";
    StipulationType["IssueSizeRange"] = "ISSUESIZE";
    StipulationType["LookbackDays"] = "LOOKBACK";
    StipulationType["ExplicitLotIdentifier"] = "LOT";
    StipulationType["LotVarianceValueInPercentMaximumOverOrUnderAllocationAllowed"] = "LOTVAR";
    StipulationType["MaturityYearAndMonth"] = "MAT";
    StipulationType["MaturityRange"] = "MATURITY";
    StipulationType["MaximumSubstitutionsRepo"] = "MAXSUBS";
    StipulationType["MinimumDenomination"] = "MINDNOM";
    StipulationType["MinimumIncrement"] = "MININCR";
    StipulationType["MinimumQuantity"] = "MINQTY";
    StipulationType["PaymentFrequencyCalendar"] = "PAYFREQ";
    StipulationType["NumberOfPieces"] = "PIECES";
    StipulationType["PoolsMaximum"] = "PMAX";
    StipulationType["PoolsPerLot"] = "PPL";
    StipulationType["PoolsPerMillion"] = "PPM";
    StipulationType["PoolsPerTrade"] = "PPT";
    StipulationType["PriceRange"] = "PRICE";
    StipulationType["PricingFrequency"] = "PRICEFREQ";
    StipulationType["ProductionYear"] = "PROD";
    StipulationType["CallProtection"] = "PROTECT";
    StipulationType["Purpose"] = "PURPOSE";
    StipulationType["BenchmarkPriceSource"] = "PXSOURCE";
    StipulationType["RatingSourceAndRange"] = "RATING";
    StipulationType["TypeOfRedemptionValuesAreNonCallablePrefundedEscrowedToMaturityPutableConvertible"] = "REDEMPTION";
    StipulationType["RestrictedYN"] = "RESTRICTED";
    StipulationType["MarketSector"] = "SECTOR";
    StipulationType["SecurityTypeIncludedOrExcluded"] = "SECTYPE";
    StipulationType["Structure"] = "STRUCT";
    StipulationType["SubstitutionsFrequencyRepo"] = "SUBSFREQ";
    StipulationType["SubstitutionsLeftRepo"] = "SUBSLEFT";
    StipulationType["FreeformText"] = "TEXT";
    StipulationType["TradeVarianceValueInPercentMaximumOverOrUnderAllocationAllowed"] = "TRDVAR";
    StipulationType["WeightedAverageCouponValueInPercentExactOrRangePlusGrossOrNetOfServicingSpreadTheDefaultEx23465NetMinimumOf65NetOfServicingFee"] = "WAC";
    StipulationType["WeightedAverageLifeCouponValueInPercentExactOrRange"] = "WAL";
    StipulationType["WeightedAverageLoanAgeValueInMonthsExactOrRange"] = "WALA";
    StipulationType["WeightedAverageMaturityValueInMonthsExactOrRange"] = "WAM";
    StipulationType["WholePoolYN"] = "WHOLE";
    StipulationType["YieldRange"] = "YIELD";
    StipulationType["AverageFicoScore"] = "AVFICO";
    StipulationType["OriginalAmount"] = "ORIGAMT";
    StipulationType["AverageLoanSize"] = "AVSIZE";
    StipulationType["PoolEffectiveDate"] = "POOLEFFDT";
    StipulationType["MaximumLoanBalance"] = "MAXBAL";
    StipulationType["PoolInitialFactor"] = "POOLINITFCTR";
    StipulationType["PoolIdentifier"] = "POOL";
    StipulationType["TrancheIdentifier"] = "TRANCHE";
    StipulationType["TypeOfRollTrade"] = "ROLLTYPE";
    StipulationType["SubstitutionYN"] = "SUBSTITUTION";
    StipulationType["ReferenceToRollingOrClosingTrade"] = "REFTRADE";
    StipulationType["MultipleExchangeFallbackYN"] = "MULTEXCHFLLBCK";
    StipulationType["PrincipalOfRollingOrClosingTrade"] = "REFPRIN";
    StipulationType["ComponentSecurityFallbackYN"] = "COMPSECFLLBCK";
    StipulationType["InterestOfRollingOrClosingTrade"] = "REFINT";
    StipulationType["LocalJurisdictionYN"] = "LOCLJRSDCTN";
    StipulationType["AvailableOfferQuantityToBeShownToTheStreet"] = "AVAILQTY";
    StipulationType["RelevantJurisdictionYN"] = "RELVJRSDCTN";
    StipulationType["BrokersSalesCredit"] = "BROKERCREDIT";
    StipulationType["OfferPriceToBeShownToInternalBrokers"] = "INTERNALPX";
    StipulationType["OfferQuantityToBeShownToInternalBrokers"] = "INTERNALQTY";
    StipulationType["TheMinimumResidualOfferQuantity"] = "LEAVEQTY";
    StipulationType["MaximumOrderSize"] = "MAXORDQTY";
    StipulationType["OrderQuantityIncrement"] = "ORDRINCR";
    StipulationType["PrimaryOrSecondaryMarketIndicator"] = "PRIMARY";
    StipulationType["BrokerSalesCreditOverride"] = "SALESCREDITOVR";
    StipulationType["TradersCredit"] = "TRADERCREDIT";
    StipulationType["DiscountRateWhenPriceIsDenominatedInPercentOfPar"] = "DISCOUNT";
    StipulationType["YieldToMaturityWhenYieldType235AndYield236ShowADifferentYield"] = "YTM";
})(StipulationType = exports.StipulationType || (exports.StipulationType = {}));
var YieldType;
(function (YieldType) {
    YieldType["AfterTaxYieldMunicipals"] = "AFTERTAX";
    YieldType["AnnualYield"] = "ANNUAL";
    YieldType["YieldAtIssueMunicipals"] = "ATISSUE";
    YieldType["YieldToAvgMaturity"] = "AVGMATURITY";
    YieldType["BookYield"] = "BOOK";
    YieldType["YieldToNextCall"] = "CALL";
    YieldType["YieldChangeSinceClose"] = "CHANGE";
    YieldType["ClosingYield"] = "CLOSE";
    YieldType["CompoundYield"] = "COMPOUND";
    YieldType["CurrentYield"] = "CURRENT";
    YieldType["GvntEquivalentYield"] = "GOVTEQUIV";
    YieldType["TrueGrossYield"] = "GROSS";
    YieldType["YieldWithInflationAssumption"] = "INFLATION";
    YieldType["InverseFloaterBondYield"] = "INVERSEFLOATER";
    YieldType["MostRecentClosingYield"] = "LASTCLOSE";
    YieldType["ClosingYieldMostRecentMonth"] = "LASTMONTH";
    YieldType["ClosingYieldMostRecentQuarter"] = "LASTQUARTER";
    YieldType["ClosingYieldMostRecentYear"] = "LASTYEAR";
    YieldType["YieldToLongestAverageLife"] = "LONGAVGLIFE";
    YieldType["MarkToMarketYield"] = "MARK";
    YieldType["YieldToMaturity"] = "MATURITY";
    YieldType["YieldToNextRefundSinkingFundBonds"] = "NEXTREFUND";
    YieldType["OpenAverageYield"] = "OPENAVG";
    YieldType["PreviousCloseYield"] = "PREVCLOSE";
    YieldType["ProceedsYield"] = "PROCEEDS";
    YieldType["YieldToNextPut"] = "PUT";
    YieldType["SemiAnnualYield"] = "SEMIANNUAL";
    YieldType["YieldToShortestAverageLife"] = "SHORTAVGLIFE";
    YieldType["SimpleYield"] = "SIMPLE";
    YieldType["TaxEquivalentYield"] = "TAXEQUIV";
    YieldType["YieldToTenderDate"] = "TENDER";
    YieldType["TrueYield"] = "TRUE";
    YieldType["YieldValueOf132"] = "VALUE1_32";
    YieldType["YieldToWorst"] = "WORST";
})(YieldType = exports.YieldType || (exports.YieldType = {}));
var TradedFlatSwitch;
(function (TradedFlatSwitch) {
    TradedFlatSwitch["NotTradedFlat"] = "N";
    TradedFlatSwitch["TradedFlat"] = "Y";
})(TradedFlatSwitch = exports.TradedFlatSwitch || (exports.TradedFlatSwitch = {}));
var SubscriptionRequestType;
(function (SubscriptionRequestType) {
    SubscriptionRequestType["Snapshot"] = "0";
    SubscriptionRequestType["SnapshotUpdatesSubscribe"] = "1";
    SubscriptionRequestType["DisablePreviousSnapshotUpdateRequestUnsubscribe"] = "2";
})(SubscriptionRequestType = exports.SubscriptionRequestType || (exports.SubscriptionRequestType = {}));
var MDUpdateType;
(function (MDUpdateType) {
    MDUpdateType[MDUpdateType["FullRefresh"] = 0] = "FullRefresh";
    MDUpdateType[MDUpdateType["IncrementalRefresh"] = 1] = "IncrementalRefresh";
})(MDUpdateType = exports.MDUpdateType || (exports.MDUpdateType = {}));
var AggregatedBook;
(function (AggregatedBook) {
    AggregatedBook["BookEntriesToBeAggregated"] = "Y";
    AggregatedBook["BookEntriesShouldNotBeAggregated"] = "N";
})(AggregatedBook = exports.AggregatedBook || (exports.AggregatedBook = {}));
var MDEntryType;
(function (MDEntryType) {
    MDEntryType["Bid"] = "0";
    MDEntryType["Offer"] = "1";
    MDEntryType["Trade"] = "2";
    MDEntryType["IndexValue"] = "3";
    MDEntryType["OpeningPrice"] = "4";
    MDEntryType["ClosingPrice"] = "5";
    MDEntryType["SettlementPrice"] = "6";
    MDEntryType["TradingSessionHighPrice"] = "7";
    MDEntryType["TradingSessionLowPrice"] = "8";
    MDEntryType["TradingSessionVolumeWeightedAveragePriceVwap"] = "9";
    MDEntryType["Imbalance"] = "A";
    MDEntryType["TradeVolume"] = "B";
    MDEntryType["OpenInterest"] = "C";
    MDEntryType["CompositeUnderlyingPrice"] = "D";
    MDEntryType["SimulatedSellPrice"] = "E";
    MDEntryType["SimulatedBuyPrice"] = "F";
    MDEntryType["MarginRate"] = "G";
    MDEntryType["MidPrice"] = "H";
    MDEntryType["EmptyBook"] = "J";
    MDEntryType["SettleHighPrice"] = "K";
    MDEntryType["SettleLowPrice"] = "L";
    MDEntryType["PriorSettlePrice"] = "M";
    MDEntryType["SessionHighBid"] = "N";
    MDEntryType["SessionLowOffer"] = "O";
    MDEntryType["EarlyPrices"] = "P";
    MDEntryType["AuctionClearingPrice"] = "Q";
    MDEntryType["SwapValueFactorSvfForSwapsClearedThroughACentralCounterpartyCcp"] = "S";
    MDEntryType["DailyValueAdjustmentForLongPositions"] = "R";
    MDEntryType["CumulativeValueAdjustmentForLongPositions"] = "T";
    MDEntryType["DailyValueAdjustmentForShortPositions"] = "U";
    MDEntryType["CumulativeValueAdjustmentForShortPositions"] = "V";
    MDEntryType["FixingPrice"] = "W";
    MDEntryType["CashRate"] = "X";
    MDEntryType["RecoveryRate"] = "Y";
    MDEntryType["RecoveryRateForLongPositions"] = "Z";
    MDEntryType["RecoveryRateForShortPositions"] = "a";
    MDEntryType["MarketBid"] = "b";
    MDEntryType["MarketOffer"] = "c";
    MDEntryType["ShortSaleMinimumPrice"] = "d";
    MDEntryType["PreviousClosingPrice"] = "e";
})(MDEntryType = exports.MDEntryType || (exports.MDEntryType = {}));
var TickDirection;
(function (TickDirection) {
    TickDirection["PlusTick"] = "0";
    TickDirection["ZeroPlusTick"] = "1";
    TickDirection["MinusTick"] = "2";
    TickDirection["ZeroMinusTick"] = "3";
})(TickDirection = exports.TickDirection || (exports.TickDirection = {}));
var QuoteCondition;
(function (QuoteCondition) {
    QuoteCondition["ReservedSam"] = "0";
    QuoteCondition["NoActiveSam"] = "1";
    QuoteCondition["Restricted"] = "2";
    QuoteCondition["RestOfBookVwap"] = "3";
    QuoteCondition["BetterPricesInConditionalOrders"] = "4";
    QuoteCondition["MedianPrice"] = "5";
    QuoteCondition["FullCurve"] = "6";
    QuoteCondition["FlatCurve"] = "7";
    QuoteCondition["OpenActive"] = "A";
    QuoteCondition["ClosedInactive"] = "B";
    QuoteCondition["ExchangeBest"] = "C";
    QuoteCondition["ConsolidatedBest"] = "D";
    QuoteCondition["Locked"] = "E";
    QuoteCondition["Crossed"] = "F";
    QuoteCondition["Depth"] = "G";
    QuoteCondition["FastTrading"] = "H";
    QuoteCondition["NonFirm"] = "I";
    QuoteCondition["ManualSlowQuote"] = "L";
    QuoteCondition["OutrightPrice"] = "J";
    QuoteCondition["ImpliedPrice"] = "K";
    QuoteCondition["DepthOnOffer"] = "M";
    QuoteCondition["DepthOnBid"] = "N";
    QuoteCondition["Closing"] = "O";
    QuoteCondition["NewsDissemination"] = "P";
    QuoteCondition["TradingRange"] = "Q";
    QuoteCondition["OrderInflux"] = "R";
    QuoteCondition["DueToRelated"] = "S";
    QuoteCondition["NewsPending"] = "T";
    QuoteCondition["AdditionalInfo"] = "U";
    QuoteCondition["AdditionalInfoDueToRelated"] = "V";
    QuoteCondition["Resume"] = "W";
    QuoteCondition["ViewOfCommon"] = "X";
    QuoteCondition["VolumeAlert"] = "Y";
    QuoteCondition["OrderImbalance"] = "Z";
    QuoteCondition["EquipmentChangeover"] = "a";
    QuoteCondition["NoOpenNoResume"] = "b";
    QuoteCondition["RegularEth"] = "c";
    QuoteCondition["AutomaticExecution"] = "d";
    QuoteCondition["AutomaticExecutionEth"] = "e";
    QuoteCondition["FastMarketEth"] = "f ";
    QuoteCondition["InactiveEth"] = "g";
    QuoteCondition["Rotation"] = "h";
    QuoteCondition["RotationEth"] = "i";
    QuoteCondition["Halt"] = "j";
    QuoteCondition["HaltEth"] = "k";
    QuoteCondition["DueToNewsDissemination"] = "l";
    QuoteCondition["DueToNewsPending"] = "m";
    QuoteCondition["TradingResume"] = "n";
    QuoteCondition["OutOfSequence"] = "o";
    QuoteCondition["BidSpecialist"] = "p";
    QuoteCondition["OfferSpecialist"] = "q";
    QuoteCondition["BidOfferSpecialist"] = "r";
    QuoteCondition["EndOfDaySam"] = "s";
    QuoteCondition["ForbiddenSam"] = "t";
    QuoteCondition["FrozenSam"] = "u";
    QuoteCondition["PreOpeningSam"] = "v";
    QuoteCondition["OpeningSam"] = "w";
    QuoteCondition["OpenSam"] = "x";
    QuoteCondition["SurveillanceSam"] = "y";
    QuoteCondition["SuspendedSam"] = "z";
})(QuoteCondition = exports.QuoteCondition || (exports.QuoteCondition = {}));
var TradeCondition;
(function (TradeCondition) {
    TradeCondition["Cancel"] = "0";
    TradeCondition["ImpliedTrade"] = "1";
    TradeCondition["MarketplaceEnteredTrade"] = "2";
    TradeCondition["MultiAssetClassMultilegTrade"] = "3";
    TradeCondition["MultilegToMultilegTrade"] = "4";
    TradeCondition["ShortSaleMinimumPrice"] = "5";
    TradeCondition["Benchmark"] = "6";
    TradeCondition["CashOnlyMarket"] = "A";
    TradeCondition["AveragePriceTrade"] = "B";
    TradeCondition["CashTradeSameDayClearing"] = "C";
    TradeCondition["NextDayOnlyMarket"] = "D";
    TradeCondition["OpeningReopeningTradeDetail"] = "E";
    TradeCondition["IntradayTradeDetail"] = "F";
    TradeCondition["Rule127TradeNyse"] = "G";
    TradeCondition["Rule155TradeAmex"] = "H";
    TradeCondition["SoldLastLateReporting"] = "I";
    TradeCondition["NextDayTradeNextDayClearing"] = "J";
    TradeCondition["OpenedLateReportOfOpenedTrade"] = "K";
    TradeCondition["Seller"] = "L";
    TradeCondition["SoldOutOfSequence"] = "M";
    TradeCondition["StoppedStockGuaranteeOfPriceButDoesNotExecuteTheOrder"] = "N";
    TradeCondition["ImbalanceMoreBuyersCannotBeUsedInCombinationWithQ"] = "P";
    TradeCondition["ImbalanceMoreSellersCannotBeUsedInCombinationWithP"] = "Q";
    TradeCondition["OpeningPrice"] = "R";
    TradeCondition["BargainConditionLse"] = "S";
    TradeCondition["ConvertedPriceIndicator"] = "T";
    TradeCondition["ExchangeLast"] = "U";
    TradeCondition["FinalPriceOfSession"] = "V";
    TradeCondition["ExPit"] = "W";
    TradeCondition["Crossed"] = "X";
    TradeCondition["TradesResultingFromManualSlowQuote"] = "Y";
    TradeCondition["TradesResultingFromIntermarketSweep"] = "Z";
    TradeCondition["VolumeOnly"] = "a";
    TradeCondition["DirectPlus"] = "b";
    TradeCondition["Acquisition"] = "c";
    TradeCondition["Bunched"] = "d";
    TradeCondition["Distribution"] = "e";
    TradeCondition["BunchedSale"] = "f";
    TradeCondition["SplitTrade"] = "g";
    TradeCondition["CancelStopped"] = "h";
    TradeCondition["CancelEth"] = "i";
    TradeCondition["CancelStoppedEth"] = "j";
    TradeCondition["OutOfSequenceEth"] = "k";
    TradeCondition["CancelLastEth"] = "l";
    TradeCondition["SoldLastSaleEth"] = "m";
    TradeCondition["CancelLast"] = "n";
    TradeCondition["SoldLastSale"] = "o";
    TradeCondition["CancelOpen"] = "p";
    TradeCondition["CancelOpenEth"] = "q";
    TradeCondition["OpenedSaleEth"] = "r";
    TradeCondition["CancelOnly"] = "s";
    TradeCondition["CancelOnlyEth"] = "t";
    TradeCondition["LateOpenEth"] = "u";
    TradeCondition["AutoExecutionEth"] = "v";
    TradeCondition["Reopen"] = "w";
    TradeCondition["ReopenEth"] = "x";
    TradeCondition["Adjusted"] = "y";
    TradeCondition["AdjustedEth"] = "z";
    TradeCondition["Spread"] = "AA";
    TradeCondition["SpreadEth"] = "AB";
    TradeCondition["Straddle"] = "AC";
    TradeCondition["StraddleEth"] = "AD";
    TradeCondition["Stopped"] = "AE";
    TradeCondition["StoppedEth"] = "AF";
    TradeCondition["RegularEth"] = "AG";
    TradeCondition["Combo"] = "AH";
    TradeCondition["ComboEth"] = "AI";
    TradeCondition["OfficialClosingPrice"] = "AJ";
    TradeCondition["PriorReferencePrice"] = "AK";
    TradeCondition["StoppedSoldLast"] = "AL";
    TradeCondition["StoppedOutOfSequence"] = "AM";
    TradeCondition["OfficalClosingPriceDuplicateEnumerationUseAjInstead"] = "AN";
    TradeCondition["CrossedDuplicateEnumerationUseXInstead"] = "AO";
    TradeCondition["FastMarket"] = "AP";
    TradeCondition["AutomaticExecution"] = "AQ";
    TradeCondition["FormT"] = "AR";
    TradeCondition["BasketIndex"] = "AS";
    TradeCondition["BurstBasket"] = "AT";
    TradeCondition["TradeThroughExempt"] = "AU";
    TradeCondition["QuoteSpread"] = "AV";
    TradeCondition["LastAuctionPrice"] = "AW";
    TradeCondition["HighPrice"] = "AX";
    TradeCondition["LowPrice"] = "AY";
    TradeCondition["SystematicInternaliserSi"] = "AZ";
    TradeCondition["AwayMarket"] = "BA";
    TradeCondition["MidPointPrice"] = "BB";
    TradeCondition["TradedBeforeIssueDate"] = "BC";
    TradeCondition["PreviousClosingPrice"] = "BD";
    TradeCondition["NationalBestBidAndOffer"] = "BE";
})(TradeCondition = exports.TradeCondition || (exports.TradeCondition = {}));
var MDUpdateAction;
(function (MDUpdateAction) {
    MDUpdateAction["New"] = "0";
    MDUpdateAction["Change"] = "1";
    MDUpdateAction["Delete"] = "2";
    MDUpdateAction["DeleteThru"] = "3";
    MDUpdateAction["DeleteFrom"] = "4";
    MDUpdateAction["Overlay"] = "5";
})(MDUpdateAction = exports.MDUpdateAction || (exports.MDUpdateAction = {}));
var MDReqRejReason;
(function (MDReqRejReason) {
    MDReqRejReason["UnknownSymbol"] = "0";
    MDReqRejReason["DuplicateMdReqId"] = "1";
    MDReqRejReason["InsufficientBandwidth"] = "2";
    MDReqRejReason["InsufficientPermissions"] = "3";
    MDReqRejReason["UnsupportedSubscriptionRequestType"] = "4";
    MDReqRejReason["UnsupportedMarketDepth"] = "5";
    MDReqRejReason["UnsupportedMdUpdateType"] = "6";
    MDReqRejReason["UnsupportedAggregatedBook"] = "7";
    MDReqRejReason["UnsupportedMdEntryType"] = "8";
    MDReqRejReason["UnsupportedTradingSessionId"] = "9";
    MDReqRejReason["UnsupportedScope"] = "A";
    MDReqRejReason["UnsupportedOpenCloseSettleFlag"] = "B";
    MDReqRejReason["UnsupportedMdImplicitDelete"] = "C";
    MDReqRejReason["InsufficientCredit"] = "D";
})(MDReqRejReason = exports.MDReqRejReason || (exports.MDReqRejReason = {}));
var DeleteReason;
(function (DeleteReason) {
    DeleteReason["CancellationTradeBust"] = "0";
    DeleteReason["Error"] = "1";
})(DeleteReason = exports.DeleteReason || (exports.DeleteReason = {}));
var OpenCloseSettlFlag;
(function (OpenCloseSettlFlag) {
    OpenCloseSettlFlag["DailyOpenCloseSettlementEntry"] = "0";
    OpenCloseSettlFlag["SessionOpenCloseSettlementEntry"] = "1";
    OpenCloseSettlFlag["DeliverySettlementEntry"] = "2";
    OpenCloseSettlFlag["ExpectedEntry"] = "3";
    OpenCloseSettlFlag["EntryFromPreviousBusinessDay"] = "4";
    OpenCloseSettlFlag["TheoreticalPriceValue"] = "5";
})(OpenCloseSettlFlag = exports.OpenCloseSettlFlag || (exports.OpenCloseSettlFlag = {}));
var FinancialStatus;
(function (FinancialStatus) {
    FinancialStatus["Bankrupt"] = "1";
    FinancialStatus["PendingDelisting"] = "2";
    FinancialStatus["Restricted"] = "3";
})(FinancialStatus = exports.FinancialStatus || (exports.FinancialStatus = {}));
var CorporateAction;
(function (CorporateAction) {
    CorporateAction["ExDividend"] = "A";
    CorporateAction["ExDistribution"] = "B";
    CorporateAction["ExRights"] = "C";
    CorporateAction["New"] = "D";
    CorporateAction["ExInterest"] = "E";
    CorporateAction["CashDividend"] = "F";
    CorporateAction["StockDividend"] = "G";
    CorporateAction["NonIntegerStockSplit"] = "H";
    CorporateAction["ReverseStockSplit"] = "I";
    CorporateAction["StandardIntegerStockSplit"] = "J";
    CorporateAction["PositionConsolidation"] = "K";
    CorporateAction["LiquidationReorganization"] = "L";
    CorporateAction["MergerReorganization"] = "M";
    CorporateAction["RightsOffering"] = "N";
    CorporateAction["ShareholderMeeting"] = "O";
    CorporateAction["Spinoff"] = "P";
    CorporateAction["TenderOffer"] = "Q";
    CorporateAction["Warrant"] = "R";
    CorporateAction["SpecialAction"] = "S";
    CorporateAction["SymbolConversion"] = "T";
    CorporateAction["CusipNameChange"] = "U";
    CorporateAction["LeapRollover"] = "V";
    CorporateAction["SuccessionEvent"] = "W";
})(CorporateAction = exports.CorporateAction || (exports.CorporateAction = {}));
var QuoteStatus;
(function (QuoteStatus) {
    QuoteStatus[QuoteStatus["Accepted"] = 0] = "Accepted";
    QuoteStatus[QuoteStatus["CanceledForSpecificSecurities"] = 1] = "CanceledForSpecificSecurities";
    QuoteStatus[QuoteStatus["CanceledForSpecificSecurityTypes167"] = 2] = "CanceledForSpecificSecurityTypes167";
    QuoteStatus[QuoteStatus["CanceledForUnderlying"] = 3] = "CanceledForUnderlying";
    QuoteStatus[QuoteStatus["CanceledAll"] = 4] = "CanceledAll";
    QuoteStatus[QuoteStatus["Rejected"] = 5] = "Rejected";
    QuoteStatus[QuoteStatus["RemovedFromMarket"] = 6] = "RemovedFromMarket";
    QuoteStatus[QuoteStatus["Expired"] = 7] = "Expired";
    QuoteStatus[QuoteStatus["Query"] = 8] = "Query";
    QuoteStatus[QuoteStatus["QuoteNotFound"] = 9] = "QuoteNotFound";
    QuoteStatus[QuoteStatus["Pending"] = 10] = "Pending";
    QuoteStatus[QuoteStatus["Pass"] = 11] = "Pass";
    QuoteStatus[QuoteStatus["LockedMarketWarning"] = 12] = "LockedMarketWarning";
    QuoteStatus[QuoteStatus["CrossedMarketWarning"] = 13] = "CrossedMarketWarning";
    QuoteStatus[QuoteStatus["CanceledDueToLockedMarket"] = 14] = "CanceledDueToLockedMarket";
    QuoteStatus[QuoteStatus["CanceledDueToCrossedMarket"] = 15] = "CanceledDueToCrossedMarket";
    QuoteStatus[QuoteStatus["Active"] = 16] = "Active";
    QuoteStatus[QuoteStatus["Canceled"] = 17] = "Canceled";
    QuoteStatus[QuoteStatus["UnsolicitedQuoteReplenishment"] = 18] = "UnsolicitedQuoteReplenishment";
    QuoteStatus[QuoteStatus["PendingEndTrade"] = 19] = "PendingEndTrade";
    QuoteStatus[QuoteStatus["TooLateToEnd"] = 20] = "TooLateToEnd";
    QuoteStatus[QuoteStatus["Traded"] = 21] = "Traded";
    QuoteStatus[QuoteStatus["TradedAndRemoved"] = 22] = "TradedAndRemoved";
})(QuoteStatus = exports.QuoteStatus || (exports.QuoteStatus = {}));
var QuoteCancelType;
(function (QuoteCancelType) {
    QuoteCancelType[QuoteCancelType["CancelForOneOrMoreSecurities"] = 1] = "CancelForOneOrMoreSecurities";
    QuoteCancelType[QuoteCancelType["CancelForSecurityTypeS"] = 2] = "CancelForSecurityTypeS";
    QuoteCancelType[QuoteCancelType["CancelForUnderlyingSecurity"] = 3] = "CancelForUnderlyingSecurity";
    QuoteCancelType[QuoteCancelType["CancelAllQuotes"] = 4] = "CancelAllQuotes";
    QuoteCancelType[QuoteCancelType["CancelSpecifiedSingleQuote"] = 5] = "CancelSpecifiedSingleQuote";
    QuoteCancelType[QuoteCancelType["CancelByTypeOfQuote"] = 6] = "CancelByTypeOfQuote";
    QuoteCancelType[QuoteCancelType["CancelForSecurityIssuer"] = 7] = "CancelForSecurityIssuer";
    QuoteCancelType[QuoteCancelType["CancelForIssuerOfUnderlyingSecurity"] = 8] = "CancelForIssuerOfUnderlyingSecurity";
})(QuoteCancelType = exports.QuoteCancelType || (exports.QuoteCancelType = {}));
var QuoteRejectReason;
(function (QuoteRejectReason) {
    QuoteRejectReason[QuoteRejectReason["UnknownSymbolSecurity"] = 1] = "UnknownSymbolSecurity";
    QuoteRejectReason[QuoteRejectReason["ExchangeSecurityClosed"] = 2] = "ExchangeSecurityClosed";
    QuoteRejectReason[QuoteRejectReason["QuoteRequestExceedsLimit"] = 3] = "QuoteRequestExceedsLimit";
    QuoteRejectReason[QuoteRejectReason["TooLateToEnter"] = 4] = "TooLateToEnter";
    QuoteRejectReason[QuoteRejectReason["UnknownQuote"] = 5] = "UnknownQuote";
    QuoteRejectReason[QuoteRejectReason["DuplicateQuote"] = 6] = "DuplicateQuote";
    QuoteRejectReason[QuoteRejectReason["InvalidBidAskSpread"] = 7] = "InvalidBidAskSpread";
    QuoteRejectReason[QuoteRejectReason["InvalidPrice"] = 8] = "InvalidPrice";
    QuoteRejectReason[QuoteRejectReason["NotAuthorizedToQuoteSecurity"] = 9] = "NotAuthorizedToQuoteSecurity";
    QuoteRejectReason[QuoteRejectReason["PriceExceedsCurrentPriceBand"] = 10] = "PriceExceedsCurrentPriceBand";
    QuoteRejectReason[QuoteRejectReason["QuoteLockedUnableToUpdateCancel"] = 11] = "QuoteLockedUnableToUpdateCancel";
    QuoteRejectReason[QuoteRejectReason["InvalidOrUnknownSecurityIssuer"] = 12] = "InvalidOrUnknownSecurityIssuer";
    QuoteRejectReason[QuoteRejectReason["InvalidOrUnknownIssuerOfUnderlyingSecurity"] = 13] = "InvalidOrUnknownIssuerOfUnderlyingSecurity";
    QuoteRejectReason[QuoteRejectReason["NotionalValueExceedsThreshold"] = 14] = "NotionalValueExceedsThreshold";
    QuoteRejectReason[QuoteRejectReason["PriceExceedsCurrentPriceBand2"] = 15] = "PriceExceedsCurrentPriceBand2";
    QuoteRejectReason[QuoteRejectReason["ReferencePriceNotAvailable"] = 16] = "ReferencePriceNotAvailable";
    QuoteRejectReason[QuoteRejectReason["InsufficientCreditLimit"] = 17] = "InsufficientCreditLimit";
    QuoteRejectReason[QuoteRejectReason["ExceededClipSizeLimit"] = 18] = "ExceededClipSizeLimit";
    QuoteRejectReason[QuoteRejectReason["ExceededMaximumNotionalOrderAmount"] = 19] = "ExceededMaximumNotionalOrderAmount";
    QuoteRejectReason[QuoteRejectReason["ExceededDv01Pv01Limit"] = 20] = "ExceededDv01Pv01Limit";
    QuoteRejectReason[QuoteRejectReason["ExceededCs01Limit"] = 21] = "ExceededCs01Limit";
    QuoteRejectReason[QuoteRejectReason["Other"] = 99] = "Other";
})(QuoteRejectReason = exports.QuoteRejectReason || (exports.QuoteRejectReason = {}));
var QuoteResponseLevel;
(function (QuoteResponseLevel) {
    QuoteResponseLevel[QuoteResponseLevel["NoAcknowledgement"] = 0] = "NoAcknowledgement";
    QuoteResponseLevel[QuoteResponseLevel["AcknowledgeOnlyNegativeOrErroneousQuotes"] = 1] = "AcknowledgeOnlyNegativeOrErroneousQuotes";
    QuoteResponseLevel[QuoteResponseLevel["AcknowledgeEachQuoteMessage"] = 2] = "AcknowledgeEachQuoteMessage";
    QuoteResponseLevel[QuoteResponseLevel["SummaryAcknowledgement"] = 3] = "SummaryAcknowledgement";
})(QuoteResponseLevel = exports.QuoteResponseLevel || (exports.QuoteResponseLevel = {}));
var QuoteRequestType;
(function (QuoteRequestType) {
    QuoteRequestType[QuoteRequestType["Manual"] = 1] = "Manual";
    QuoteRequestType[QuoteRequestType["Automatic"] = 2] = "Automatic";
    QuoteRequestType[QuoteRequestType["ConfirmQuote"] = 3] = "ConfirmQuote";
})(QuoteRequestType = exports.QuoteRequestType || (exports.QuoteRequestType = {}));
var UnderlyingSecurityIDSource;
(function (UnderlyingSecurityIDSource) {
    UnderlyingSecurityIDSource["Cusip"] = "1";
    UnderlyingSecurityIDSource["Sedol"] = "2";
    UnderlyingSecurityIDSource["Quik"] = "3";
    UnderlyingSecurityIDSource["IsinNumber"] = "4";
    UnderlyingSecurityIDSource["RicCode"] = "5";
    UnderlyingSecurityIDSource["IsoCurrencyCode"] = "6";
    UnderlyingSecurityIDSource["IsoCountryCode"] = "7";
    UnderlyingSecurityIDSource["ExchangeSymbol"] = "8";
    UnderlyingSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    UnderlyingSecurityIDSource["BloombergSymbol"] = "A";
    UnderlyingSecurityIDSource["Wertpapier"] = "B";
    UnderlyingSecurityIDSource["Dutch"] = "C";
    UnderlyingSecurityIDSource["Valoren"] = "D";
    UnderlyingSecurityIDSource["Sicovam"] = "E";
    UnderlyingSecurityIDSource["Belgian"] = "F";
    UnderlyingSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    UnderlyingSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    UnderlyingSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    UnderlyingSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    UnderlyingSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    UnderlyingSecurityIDSource["LetterOfCredit"] = "L";
    UnderlyingSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    UnderlyingSecurityIDSource["MarkitRedEntityClip"] = "N";
    UnderlyingSecurityIDSource["MarkitRedPairClip"] = "P";
    UnderlyingSecurityIDSource["CftcCommodityCode"] = "Q";
    UnderlyingSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    UnderlyingSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    UnderlyingSecurityIDSource["LegalEntityIdentifier"] = "T";
    UnderlyingSecurityIDSource["Synthetic"] = "U";
    UnderlyingSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(UnderlyingSecurityIDSource = exports.UnderlyingSecurityIDSource || (exports.UnderlyingSecurityIDSource = {}));
var UnderlyingSecurityType;
(function (UnderlyingSecurityType) {
    UnderlyingSecurityType["EuroSupranationalCoupons"] = "EUSUPRA";
    UnderlyingSecurityType["CorporateBond"] = "CORP";
    UnderlyingSecurityType["ForeignExchangeContract"] = "FOR";
    UnderlyingSecurityType["CommonStock"] = "CS";
    UnderlyingSecurityType["Repurchase"] = "REPO";
    UnderlyingSecurityType["BradyBond"] = "BRADY";
    UnderlyingSecurityType["TermLoan"] = "TERM";
    UnderlyingSecurityType["BankersAcceptance"] = "BA";
    UnderlyingSecurityType["AssetBackedSecurities"] = "ABS";
    UnderlyingSecurityType["OtherAnticipationNotesBanGanEtc"] = "AN";
    UnderlyingSecurityType["MutualFund"] = "MF";
    UnderlyingSecurityType["FederalAgencyCoupon"] = "FAC";
    UnderlyingSecurityType["CorporatePrivatePlacement"] = "CPP";
    UnderlyingSecurityType["PreferredStock"] = "PS";
    UnderlyingSecurityType["Forward"] = "FORWARD";
    UnderlyingSecurityType["CanadianTreasuryNotes"] = "CAN";
    UnderlyingSecurityType["RevolverLoan"] = "RVLV";
    UnderlyingSecurityType["BankDepositoryNote"] = "BDN";
    UnderlyingSecurityType["CanadianMortgageBonds"] = "CMB";
    UnderlyingSecurityType["CertificateOfObligation"] = "COFO";
    UnderlyingSecurityType["MultilegInstrument"] = "MLEG";
    UnderlyingSecurityType["NonDeliverableForward"] = "FXNDF";
    UnderlyingSecurityType["Cap"] = "CAP";
    UnderlyingSecurityType["FederalAgencyDiscountNote"] = "FADN";
    UnderlyingSecurityType["ConvertibleBond"] = "CB";
    UnderlyingSecurityType["CreditDefaultSwap"] = "CDS";
    UnderlyingSecurityType["BuySellback"] = "BUYSELL";
    UnderlyingSecurityType["CanadianTreasuryBills"] = "CTB";
    UnderlyingSecurityType["RevolverTermLoan"] = "RVLVTRM";
    UnderlyingSecurityType["BankNotes"] = "BN";
    UnderlyingSecurityType["CorpMortgageBackedSecurities"] = "CMBS";
    UnderlyingSecurityType["CertificateOfParticipation"] = "COFP";
    UnderlyingSecurityType["NoSecurityType"] = "NONE";
    UnderlyingSecurityType["FxSpot"] = "FXSPOT";
    UnderlyingSecurityType["UsTreasuryNoteDeprecatedValueUseTnote"] = "UST";
    UnderlyingSecurityType["PrivateExportFunding"] = "PEF";
    UnderlyingSecurityType["DualCurrency"] = "DUAL";
    UnderlyingSecurityType["SecuritiesLoan"] = "SECLOAN";
    UnderlyingSecurityType["EuroSovereigns"] = "EUSOV";
    UnderlyingSecurityType["BridgeLoan"] = "BRIDGE";
    UnderlyingSecurityType["BillOfExchanges"] = "BOX";
    UnderlyingSecurityType["CollateralizedMortgageObligation"] = "CMO";
    UnderlyingSecurityType["GeneralObligationBonds"] = "GO";
    UnderlyingSecurityType["FxForward"] = "FXFWD";
    UnderlyingSecurityType["Collar"] = "CLLR";
    UnderlyingSecurityType["UsTreasuryBillDeprecatedValueUseTbill"] = "USTB";
    UnderlyingSecurityType["UsdSupranationalCoupons"] = "SUPRA";
    UnderlyingSecurityType["EuroCorporateBond"] = "EUCORP";
    UnderlyingSecurityType["SecuritiesPledge"] = "SECPLEDGE";
    UnderlyingSecurityType["CanadianProvincialBonds"] = "PROV";
    UnderlyingSecurityType["LetterOfCredit"] = "LOFC";
    UnderlyingSecurityType["CanadianMoneyMarkets"] = "CAMM";
    UnderlyingSecurityType["IoetteMortgage"] = "IET";
    UnderlyingSecurityType["MandatoryTender"] = "MT";
    UnderlyingSecurityType["FxSwap"] = "FXSWAP";
    UnderlyingSecurityType["CommoditySwap"] = "CMDTYSWAP";
    UnderlyingSecurityType["EuroCorporateFloatingRateNotes"] = "EUFRN";
    UnderlyingSecurityType["TreasuryBillNonUs"] = "TB";
    UnderlyingSecurityType["SwingLineFacility"] = "SWING";
    UnderlyingSecurityType["CertificateOfDeposit"] = "CD";
    UnderlyingSecurityType["MortgageBackedSecurities"] = "MBS";
    UnderlyingSecurityType["RevenueAnticipationNote"] = "RAN";
    UnderlyingSecurityType["WildcardEntryForUseOnSecurityDefinitionRequest"] = "?";
    UnderlyingSecurityType["DeliveryVersusPledge"] = "DVPLDG";
    UnderlyingSecurityType["Exotic"] = "EXOTIC";
    UnderlyingSecurityType["UsCorporateFloatingRateNotes"] = "FRN";
    UnderlyingSecurityType["OptionsOnCombo"] = "OOC";
    UnderlyingSecurityType["UsTreasuryBond"] = "TBOND";
    UnderlyingSecurityType["DebtorInPossession"] = "DINP";
    UnderlyingSecurityType["CallLoans"] = "CL";
    UnderlyingSecurityType["MortgageInterestOnly"] = "MIO";
    UnderlyingSecurityType["RevenueBonds"] = "REV";
    UnderlyingSecurityType["Cash"] = "CASH";
    UnderlyingSecurityType["Floor"] = "FLR";
    UnderlyingSecurityType["CollateralBasket"] = "COLLBSKT";
    UnderlyingSecurityType["IndexedLinked"] = "XLINKD";
    UnderlyingSecurityType["InterestStripFromAnyBondOrNote"] = "TINT";
    UnderlyingSecurityType["Defaulted"] = "DEFLTED";
    UnderlyingSecurityType["CommercialPaper"] = "CP";
    UnderlyingSecurityType["MortgagePrincipalOnly"] = "MPO";
    UnderlyingSecurityType["SpecialAssessment"] = "SPCLA";
    UnderlyingSecurityType["ForwardRateAgreement"] = "FRA";
    UnderlyingSecurityType["StructuredNotes"] = "STRUCT";
    UnderlyingSecurityType["Future"] = "FUT";
    UnderlyingSecurityType["UsTreasuryBill"] = "TBILL";
    UnderlyingSecurityType["TreasuryInflationProtectedSecurities"] = "TIPS";
    UnderlyingSecurityType["Withdrawn"] = "WITHDRN";
    UnderlyingSecurityType["DepositNotes"] = "DN";
    UnderlyingSecurityType["MortgagePrivatePlacement"] = "MPP";
    UnderlyingSecurityType["SpecialObligation"] = "SPCLO";
    UnderlyingSecurityType["YankeeCorporateBond"] = "YANK";
    UnderlyingSecurityType["PrincipalStripOfACallableBondOrNote"] = "TCAL";
    UnderlyingSecurityType["Replaced"] = "REPLACD";
    UnderlyingSecurityType["EuroCertificateOfDeposit"] = "EUCD";
    UnderlyingSecurityType["MiscellaneousPassThrough"] = "MPT";
    UnderlyingSecurityType["SpecialTax"] = "SPCLT";
    UnderlyingSecurityType["DerivativeForward"] = "FWD";
    UnderlyingSecurityType["InterestRateSwap"] = "IRS";
    UnderlyingSecurityType["PrincipalStripFromANonCallableBondOrNote"] = "TPRN";
    UnderlyingSecurityType["Matured"] = "MATURED";
    UnderlyingSecurityType["EuroCommercialPaper"] = "EUCP";
    UnderlyingSecurityType["Pfandbriefe"] = "PFAND";
    UnderlyingSecurityType["TaxAnticipationNote"] = "TAN";
    UnderlyingSecurityType["TotalReturnSwap"] = "TRS";
    UnderlyingSecurityType["UsTreasuryNote"] = "TNOTE";
    UnderlyingSecurityType["AmendedRestated"] = "AMENDED";
    UnderlyingSecurityType["LiquidityNote"] = "LQN";
    UnderlyingSecurityType["ToBeAnnounced"] = "TBA";
    UnderlyingSecurityType["TaxAllocation"] = "TAXA";
    UnderlyingSecurityType["LoanLease"] = "LOANLEASE";
    UnderlyingSecurityType["Retired"] = "RETIRED";
    UnderlyingSecurityType["MediumTermNotes"] = "MTN";
    UnderlyingSecurityType["TaxExemptCommercialPaper"] = "TECP";
    UnderlyingSecurityType["OptionsOnFutures"] = "OOF";
    UnderlyingSecurityType["Overnight"] = "ONITE";
    UnderlyingSecurityType["TaxableMunicipalCp"] = "TMCP";
    UnderlyingSecurityType["OptionsOnPhysicalUseNotRecommended"] = "OOP";
    UnderlyingSecurityType["PromissoryNote"] = "PN";
    UnderlyingSecurityType["ShortTermLoanNote"] = "STN";
    UnderlyingSecurityType["TaxRevenueAnticipationNote"] = "TRAN";
    UnderlyingSecurityType["Option"] = "OPT";
    UnderlyingSecurityType["PlazosFijos"] = "PZFJ";
    UnderlyingSecurityType["VariableRateDemandNote"] = "VRDN";
    UnderlyingSecurityType["SecuredLiquidityNote"] = "SLQN";
    UnderlyingSecurityType["Warrant"] = "WAR";
    UnderlyingSecurityType["SpotForward"] = "SPOTFWD";
    UnderlyingSecurityType["TimeDeposit"] = "TD";
    UnderlyingSecurityType["SwapOption"] = "SWAPTION";
    UnderlyingSecurityType["Transmission"] = "XMISSION";
    UnderlyingSecurityType["TermLiquidityNote"] = "TLQN";
    UnderlyingSecurityType["GeneralTypeForAContractBasedOnAnEstablishedIndex"] = "INDEX";
    UnderlyingSecurityType["ExtendedCommNote"] = "XCN";
    UnderlyingSecurityType["BondBasket"] = "BDBSKT";
    UnderlyingSecurityType["YankeeCertificateOfDeposit"] = "YCD";
    UnderlyingSecurityType["ContractForDifference"] = "CFD";
    UnderlyingSecurityType["CorrelationSwap"] = "CRLTNSWAP";
    UnderlyingSecurityType["DividendSwap"] = "DVDNDSWAP";
    UnderlyingSecurityType["EquityBasket"] = "EQBSKT";
    UnderlyingSecurityType["EquityForward"] = "EQFWD";
    UnderlyingSecurityType["ReturnSwap"] = "RTRNSWAP";
    UnderlyingSecurityType["VarianceSwap"] = "VARSWAP";
})(UnderlyingSecurityType = exports.UnderlyingSecurityType || (exports.UnderlyingSecurityType = {}));
var UnderlyingSymbolSfx;
(function (UnderlyingSymbolSfx) {
    UnderlyingSymbolSfx["EucpWithLumpSumInterestRatherThanDiscountPrice"] = "CD";
    UnderlyingSymbolSfx["WhenIssuedForASecurityToBeReissuedUnderAnOldCusipOrIsin"] = "WI";
})(UnderlyingSymbolSfx = exports.UnderlyingSymbolSfx || (exports.UnderlyingSymbolSfx = {}));
var UnderlyingPutOrCall;
(function (UnderlyingPutOrCall) {
    UnderlyingPutOrCall[UnderlyingPutOrCall["Put"] = 0] = "Put";
    UnderlyingPutOrCall[UnderlyingPutOrCall["Call"] = 1] = "Call";
})(UnderlyingPutOrCall = exports.UnderlyingPutOrCall || (exports.UnderlyingPutOrCall = {}));
var SecurityRequestType;
(function (SecurityRequestType) {
    SecurityRequestType[SecurityRequestType["RequestSecurityIdentityAndSpecifications"] = 0] = "RequestSecurityIdentityAndSpecifications";
    SecurityRequestType[SecurityRequestType["RequestSecurityIdentityForTheSpecificationsProvidedNameOfTheSecurityIsNotSupplied"] = 1] = "RequestSecurityIdentityForTheSpecificationsProvidedNameOfTheSecurityIsNotSupplied";
    SecurityRequestType[SecurityRequestType["RequestListSecurityTypes"] = 2] = "RequestListSecurityTypes";
    SecurityRequestType[SecurityRequestType["RequestListSecuritiesCanBeQualifiedWithSymbolSecurityTypeTradingSessionIdSecurityExchangeIfProvidedThenOnlyListSecuritiesForTheSpecificType"] = 3] = "RequestListSecuritiesCanBeQualifiedWithSymbolSecurityTypeTradingSessionIdSecurityExchangeIfProvidedThenOnlyListSecuritiesForTheSpecificType";
    SecurityRequestType[SecurityRequestType["Symbol"] = 4] = "Symbol";
    SecurityRequestType[SecurityRequestType["SecurityTypeAndOrCfiCode"] = 5] = "SecurityTypeAndOrCfiCode";
    SecurityRequestType[SecurityRequestType["Product"] = 6] = "Product";
    SecurityRequestType[SecurityRequestType["TradingSessionId"] = 7] = "TradingSessionId";
    SecurityRequestType[SecurityRequestType["AllSecurities"] = 8] = "AllSecurities";
    SecurityRequestType[SecurityRequestType["MarketIdOrMarketIdMarketSegmentId"] = 9] = "MarketIdOrMarketIdMarketSegmentId";
})(SecurityRequestType = exports.SecurityRequestType || (exports.SecurityRequestType = {}));
var SecurityResponseType;
(function (SecurityResponseType) {
    SecurityResponseType[SecurityResponseType["AcceptSecurityProposalAsIs"] = 1] = "AcceptSecurityProposalAsIs";
    SecurityResponseType[SecurityResponseType["AcceptSecurityProposalWithRevisionsAsIndicatedInTheMessage"] = 2] = "AcceptSecurityProposalWithRevisionsAsIndicatedInTheMessage";
    SecurityResponseType[SecurityResponseType["ListOfSecurityTypesReturnedPerRequest"] = 3] = "ListOfSecurityTypesReturnedPerRequest";
    SecurityResponseType[SecurityResponseType["ListOfSecuritiesReturnedPerRequest"] = 4] = "ListOfSecuritiesReturnedPerRequest";
    SecurityResponseType[SecurityResponseType["RejectSecurityProposal"] = 5] = "RejectSecurityProposal";
    SecurityResponseType[SecurityResponseType["CannotMatchSelectionCriteria"] = 6] = "CannotMatchSelectionCriteria";
})(SecurityResponseType = exports.SecurityResponseType || (exports.SecurityResponseType = {}));
var UnsolicitedIndicator;
(function (UnsolicitedIndicator) {
    UnsolicitedIndicator["MessageIsBeingSentAsAResultOfAPriorRequest"] = "N";
    UnsolicitedIndicator["MessageIsBeingSentUnsolicited"] = "Y";
})(UnsolicitedIndicator = exports.UnsolicitedIndicator || (exports.UnsolicitedIndicator = {}));
var SecurityTradingStatus;
(function (SecurityTradingStatus) {
    SecurityTradingStatus[SecurityTradingStatus["OpeningDelay"] = 1] = "OpeningDelay";
    SecurityTradingStatus[SecurityTradingStatus["TradingHalt"] = 2] = "TradingHalt";
    SecurityTradingStatus[SecurityTradingStatus["Resume"] = 3] = "Resume";
    SecurityTradingStatus[SecurityTradingStatus["NoOpenNoResume"] = 4] = "NoOpenNoResume";
    SecurityTradingStatus[SecurityTradingStatus["PriceIndication"] = 5] = "PriceIndication";
    SecurityTradingStatus[SecurityTradingStatus["TradingRangeIndication"] = 6] = "TradingRangeIndication";
    SecurityTradingStatus[SecurityTradingStatus["MarketImbalanceBuy"] = 7] = "MarketImbalanceBuy";
    SecurityTradingStatus[SecurityTradingStatus["MarketImbalanceSell"] = 8] = "MarketImbalanceSell";
    SecurityTradingStatus[SecurityTradingStatus["MarketOnCloseImbalanceBuy"] = 9] = "MarketOnCloseImbalanceBuy";
    SecurityTradingStatus[SecurityTradingStatus["MarketOnCloseImbalanceSell"] = 10] = "MarketOnCloseImbalanceSell";
    SecurityTradingStatus[SecurityTradingStatus["NoMarketImbalance"] = 12] = "NoMarketImbalance";
    SecurityTradingStatus[SecurityTradingStatus["NoMarketOnCloseImbalance"] = 13] = "NoMarketOnCloseImbalance";
    SecurityTradingStatus[SecurityTradingStatus["ItsPreOpening"] = 14] = "ItsPreOpening";
    SecurityTradingStatus[SecurityTradingStatus["NewPriceIndication"] = 15] = "NewPriceIndication";
    SecurityTradingStatus[SecurityTradingStatus["TradeDisseminationTime"] = 16] = "TradeDisseminationTime";
    SecurityTradingStatus[SecurityTradingStatus["ReadyToTradeStartOfSession"] = 17] = "ReadyToTradeStartOfSession";
    SecurityTradingStatus[SecurityTradingStatus["NotAvailableForTradingEndOfSession"] = 18] = "NotAvailableForTradingEndOfSession";
    SecurityTradingStatus[SecurityTradingStatus["NotTradedOnThisMarket"] = 19] = "NotTradedOnThisMarket";
    SecurityTradingStatus[SecurityTradingStatus["UnknownOrInvalid"] = 20] = "UnknownOrInvalid";
    SecurityTradingStatus[SecurityTradingStatus["PreOpen"] = 21] = "PreOpen";
    SecurityTradingStatus[SecurityTradingStatus["OpeningRotation"] = 22] = "OpeningRotation";
    SecurityTradingStatus[SecurityTradingStatus["FastMarket"] = 23] = "FastMarket";
    SecurityTradingStatus[SecurityTradingStatus["PreCrossSystemIsInAPreCrossStateAllowingMarketToRespondToEitherSideOfCross"] = 24] = "PreCrossSystemIsInAPreCrossStateAllowingMarketToRespondToEitherSideOfCross";
    SecurityTradingStatus[SecurityTradingStatus["CrossSystemHasCrossedAPercentageOfTheOrdersAndAllowsMarketToRespondPriorToCrossingRemainingPortion"] = 25] = "CrossSystemHasCrossedAPercentageOfTheOrdersAndAllowsMarketToRespondPriorToCrossingRemainingPortion";
    SecurityTradingStatus[SecurityTradingStatus["PostClose"] = 26] = "PostClose";
    SecurityTradingStatus[SecurityTradingStatus["NoCancel"] = 27] = "NoCancel";
})(SecurityTradingStatus = exports.SecurityTradingStatus || (exports.SecurityTradingStatus = {}));
var HaltReason;
(function (HaltReason) {
    HaltReason[HaltReason["NewsDissemination"] = 0] = "NewsDissemination";
    HaltReason[HaltReason["OrderInflux"] = 1] = "OrderInflux";
    HaltReason[HaltReason["OrderImbalance"] = 2] = "OrderImbalance";
    HaltReason[HaltReason["AdditionalInformation"] = 3] = "AdditionalInformation";
    HaltReason[HaltReason["NewsPending"] = 4] = "NewsPending";
    HaltReason[HaltReason["EquipmentChangeover"] = 5] = "EquipmentChangeover";
})(HaltReason = exports.HaltReason || (exports.HaltReason = {}));
var InViewOfCommon;
(function (InViewOfCommon) {
    InViewOfCommon["HaltWasNotRelatedToAHaltOfTheCommonStock"] = "N";
    InViewOfCommon["HaltWasDueToCommonStockBeingHalted"] = "Y";
})(InViewOfCommon = exports.InViewOfCommon || (exports.InViewOfCommon = {}));
var DueToRelated;
(function (DueToRelated) {
    DueToRelated["HaltWasNotRelatedToAHaltOfTheRelatedSecurity"] = "N";
    DueToRelated["HaltWasDueToRelatedSecurityBeingHalted"] = "Y";
})(DueToRelated = exports.DueToRelated || (exports.DueToRelated = {}));
var Adjustment;
(function (Adjustment) {
    Adjustment[Adjustment["Cancel"] = 1] = "Cancel";
    Adjustment[Adjustment["Error"] = 2] = "Error";
    Adjustment[Adjustment["Correction"] = 3] = "Correction";
})(Adjustment = exports.Adjustment || (exports.Adjustment = {}));
var TradingSessionID;
(function (TradingSessionID) {
    TradingSessionID["Day"] = "1";
    TradingSessionID["HalfDay"] = "2";
    TradingSessionID["Morning"] = "3";
    TradingSessionID["Afternoon"] = "4";
    TradingSessionID["Evening"] = "5";
    TradingSessionID["AfterHours"] = "6";
    TradingSessionID["Holiday"] = "7";
})(TradingSessionID = exports.TradingSessionID || (exports.TradingSessionID = {}));
var TradSesMethod;
(function (TradSesMethod) {
    TradSesMethod[TradSesMethod["Electronic"] = 1] = "Electronic";
    TradSesMethod[TradSesMethod["OpenOutcry"] = 2] = "OpenOutcry";
    TradSesMethod[TradSesMethod["TwoParty"] = 3] = "TwoParty";
})(TradSesMethod = exports.TradSesMethod || (exports.TradSesMethod = {}));
var TradSesMode;
(function (TradSesMode) {
    TradSesMode[TradSesMode["Testing"] = 1] = "Testing";
    TradSesMode[TradSesMode["Simulated"] = 2] = "Simulated";
    TradSesMode[TradSesMode["Production"] = 3] = "Production";
})(TradSesMode = exports.TradSesMode || (exports.TradSesMode = {}));
var TradSesStatus;
(function (TradSesStatus) {
    TradSesStatus[TradSesStatus["Unknown"] = 0] = "Unknown";
    TradSesStatus[TradSesStatus["Halted"] = 1] = "Halted";
    TradSesStatus[TradSesStatus["Open"] = 2] = "Open";
    TradSesStatus[TradSesStatus["Closed"] = 3] = "Closed";
    TradSesStatus[TradSesStatus["PreOpen"] = 4] = "PreOpen";
    TradSesStatus[TradSesStatus["PreClose"] = 5] = "PreClose";
    TradSesStatus[TradSesStatus["RequestRejected"] = 6] = "RequestRejected";
})(TradSesStatus = exports.TradSesStatus || (exports.TradSesStatus = {}));
var QuoteEntryRejectReason;
(function (QuoteEntryRejectReason) {
    QuoteEntryRejectReason[QuoteEntryRejectReason["UnknownSymbolSecurity"] = 1] = "UnknownSymbolSecurity";
    QuoteEntryRejectReason[QuoteEntryRejectReason["ExchangeSecurityClosed"] = 2] = "ExchangeSecurityClosed";
    QuoteEntryRejectReason[QuoteEntryRejectReason["QuoteRequestExceedsLimit"] = 3] = "QuoteRequestExceedsLimit";
    QuoteEntryRejectReason[QuoteEntryRejectReason["TooLateToEnter"] = 4] = "TooLateToEnter";
    QuoteEntryRejectReason[QuoteEntryRejectReason["UnknownQuote"] = 5] = "UnknownQuote";
    QuoteEntryRejectReason[QuoteEntryRejectReason["DuplicateQuote"] = 6] = "DuplicateQuote";
    QuoteEntryRejectReason[QuoteEntryRejectReason["InvalidBidAskSpread"] = 7] = "InvalidBidAskSpread";
    QuoteEntryRejectReason[QuoteEntryRejectReason["InvalidPrice"] = 8] = "InvalidPrice";
    QuoteEntryRejectReason[QuoteEntryRejectReason["NotAuthorizedToQuoteSecurity"] = 9] = "NotAuthorizedToQuoteSecurity";
    QuoteEntryRejectReason[QuoteEntryRejectReason["PriceExceedsCurrentPriceBand"] = 10] = "PriceExceedsCurrentPriceBand";
    QuoteEntryRejectReason[QuoteEntryRejectReason["QuoteLockedUnableToUpdateCancel"] = 11] = "QuoteLockedUnableToUpdateCancel";
    QuoteEntryRejectReason[QuoteEntryRejectReason["InvalidOrUnknownSecurityIssuer"] = 12] = "InvalidOrUnknownSecurityIssuer";
    QuoteEntryRejectReason[QuoteEntryRejectReason["InvalidOrUnknownIssuerOfUnderlyingSecurity"] = 13] = "InvalidOrUnknownIssuerOfUnderlyingSecurity";
    QuoteEntryRejectReason[QuoteEntryRejectReason["NotionalValueExceedsThreshold"] = 14] = "NotionalValueExceedsThreshold";
    QuoteEntryRejectReason[QuoteEntryRejectReason["PriceExceedsCurrentPriceBand2"] = 15] = "PriceExceedsCurrentPriceBand2";
    QuoteEntryRejectReason[QuoteEntryRejectReason["ReferencePriceNotAvailable"] = 16] = "ReferencePriceNotAvailable";
    QuoteEntryRejectReason[QuoteEntryRejectReason["InsufficientCreditLimit"] = 17] = "InsufficientCreditLimit";
    QuoteEntryRejectReason[QuoteEntryRejectReason["ExceededClipSizeLimit"] = 18] = "ExceededClipSizeLimit";
    QuoteEntryRejectReason[QuoteEntryRejectReason["ExceededMaximumNotionalOrderAmount"] = 19] = "ExceededMaximumNotionalOrderAmount";
    QuoteEntryRejectReason[QuoteEntryRejectReason["ExceededDv01Pv01Limit"] = 20] = "ExceededDv01Pv01Limit";
    QuoteEntryRejectReason[QuoteEntryRejectReason["ExceededCs01Limit"] = 21] = "ExceededCs01Limit";
    QuoteEntryRejectReason[QuoteEntryRejectReason["Other"] = 99] = "Other";
})(QuoteEntryRejectReason = exports.QuoteEntryRejectReason || (exports.QuoteEntryRejectReason = {}));
var RefMsgType;
(function (RefMsgType) {
    RefMsgType["Heartbeat"] = "0";
    RefMsgType["TestRequest"] = "1";
    RefMsgType["ResendRequest"] = "2";
    RefMsgType["Reject"] = "3";
    RefMsgType["SequenceReset"] = "4";
    RefMsgType["Logout"] = "5";
    RefMsgType["Ioi"] = "6";
    RefMsgType["Advertisement"] = "7";
    RefMsgType["ExecutionReport"] = "8";
    RefMsgType["OrderCancelReject"] = "9";
    RefMsgType["Logon"] = "A";
    RefMsgType["News"] = "B";
    RefMsgType["Email"] = "C";
    RefMsgType["NewOrderSingle"] = "D";
    RefMsgType["NewOrderList"] = "E";
    RefMsgType["OrderCancelRequest"] = "F";
    RefMsgType["OrderCancelReplaceRequest"] = "G";
    RefMsgType["OrderStatusRequest"] = "H";
    RefMsgType["AllocationInstruction"] = "J";
    RefMsgType["ListCancelRequest"] = "K";
    RefMsgType["ListExecute"] = "L";
    RefMsgType["ListStatusRequest"] = "M";
    RefMsgType["ListStatus"] = "N";
    RefMsgType["AllocationInstructionAck"] = "P";
    RefMsgType["DontKnowTrade"] = "Q";
    RefMsgType["QuoteRequest"] = "R";
    RefMsgType["Quote"] = "S";
    RefMsgType["SettlementInstructions"] = "T";
    RefMsgType["MarketDataRequest"] = "V";
    RefMsgType["MarketDataSnapshotFullRefresh"] = "W";
    RefMsgType["MarketDataIncrementalRefresh"] = "X";
    RefMsgType["MarketDataRequestReject"] = "Y";
    RefMsgType["QuoteCancel"] = "Z";
    RefMsgType["QuoteStatusRequest"] = "a";
    RefMsgType["MassQuoteAck"] = "b";
    RefMsgType["SecurityDefinitionRequest"] = "c";
    RefMsgType["SecurityDefinition"] = "d";
    RefMsgType["SecurityStatusRequest"] = "e";
    RefMsgType["SecurityStatus"] = "f";
    RefMsgType["TradingSessionStatusRequest"] = "g";
    RefMsgType["TradingSessionStatus"] = "h";
    RefMsgType["MassQuote"] = "i";
    RefMsgType["BusinessMessageReject"] = "j";
    RefMsgType["BidRequest"] = "k";
    RefMsgType["BidResponse"] = "l";
    RefMsgType["ListStrikePrice"] = "m";
    RefMsgType["XmLnonFix"] = "n";
    RefMsgType["RegistrationInstructions"] = "o";
    RefMsgType["RegistrationInstructionsResponse"] = "p";
    RefMsgType["OrderMassCancelRequest"] = "q";
    RefMsgType["OrderMassCancelReport"] = "r";
    RefMsgType["NewOrderCross"] = "s";
    RefMsgType["CrossOrderCancelReplaceRequest"] = "t";
    RefMsgType["CrossOrderCancelRequest"] = "u";
    RefMsgType["SecurityTypeRequest"] = "v";
    RefMsgType["SecurityTypes"] = "w";
    RefMsgType["SecurityListRequest"] = "x";
    RefMsgType["SecurityList"] = "y";
    RefMsgType["DerivativeSecurityListRequest"] = "z";
    RefMsgType["DerivativeSecurityList"] = "AA";
    RefMsgType["NewOrderMultileg"] = "AB";
    RefMsgType["MultilegOrderCancelReplace"] = "AC";
    RefMsgType["TradeCaptureReportRequest"] = "AD";
    RefMsgType["TradeCaptureReport"] = "AE";
    RefMsgType["OrderMassStatusRequest"] = "AF";
    RefMsgType["QuoteRequestReject"] = "AG";
    RefMsgType["RfqRequest"] = "AH";
    RefMsgType["QuoteStatusReport"] = "AI";
    RefMsgType["QuoteResponse"] = "AJ";
    RefMsgType["Confirmation"] = "AK";
    RefMsgType["PositionMaintenanceRequest"] = "AL";
    RefMsgType["PositionMaintenanceReport"] = "AM";
    RefMsgType["RequestForPositions"] = "AN";
    RefMsgType["RequestForPositionsAck"] = "AO";
    RefMsgType["PositionReport"] = "AP";
    RefMsgType["TradeCaptureReportRequestAck"] = "AQ";
    RefMsgType["TradeCaptureReportAck"] = "AR";
    RefMsgType["AllocationReport"] = "AS";
    RefMsgType["AllocationReportAck"] = "AT";
    RefMsgType["ConfirmationAck"] = "AU";
    RefMsgType["SettlementInstructionRequest"] = "AV";
    RefMsgType["AssignmentReport"] = "AW";
    RefMsgType["CollateralRequest"] = "AX";
    RefMsgType["CollateralAssignment"] = "AY";
    RefMsgType["CollateralResponse"] = "AZ";
    RefMsgType["CollateralReport"] = "BA";
    RefMsgType["CollateralInquiry"] = "BB";
    RefMsgType["NetworkCounterpartySystemStatusRequest"] = "BC";
    RefMsgType["NetworkCounterpartySystemStatusResponse"] = "BD";
    RefMsgType["UserRequest"] = "BE";
    RefMsgType["UserResponse"] = "BF";
    RefMsgType["CollateralInquiryAck"] = "BG";
    RefMsgType["ConfirmationRequest"] = "BH";
    RefMsgType["ContraryIntentionReport"] = "BO";
    RefMsgType["SecurityDefinitionUpdateReport"] = "BP";
    RefMsgType["SecurityListUpdateReport"] = "BK";
    RefMsgType["AdjustedPositionReport"] = "BL";
    RefMsgType["AllocationInstructionAlert"] = "BM";
    RefMsgType["ExecutionAck"] = "BN";
    RefMsgType["TradingSessionList"] = "BJ";
    RefMsgType["TradingSessionListRequest"] = "BI";
    RefMsgType["SettlementObligationReport"] = "BQ";
    RefMsgType["DerivativeSecurityListUpdateReport"] = "BR";
    RefMsgType["TradingSessionListUpdateReport"] = "BS";
    RefMsgType["MarketDefinitionRequest"] = "BT";
    RefMsgType["MarketDefinition"] = "BU";
    RefMsgType["MarketDefinitionUpdateReport"] = "BV";
    RefMsgType["ApplicationMessageRequest"] = "BW";
    RefMsgType["ApplicationMessageRequestAck"] = "BX";
    RefMsgType["ApplicationMessageReport"] = "BY";
    RefMsgType["OrderMassActionReport"] = "BZ";
    RefMsgType["OrderMassActionRequest"] = "CA";
    RefMsgType["UserNotification"] = "CB";
    RefMsgType["StreamAssignmentRequest"] = "CC";
    RefMsgType["StreamAssignmentReport"] = "CD";
    RefMsgType["StreamAssignmentReportAck"] = "CE";
    RefMsgType["PartyDetailsListRequest"] = "CF";
    RefMsgType["PartyDetailsListReport"] = "CG";
    RefMsgType["MarginRequirementInquiry"] = "CH";
    RefMsgType["MarginRequirementInquiryAck"] = "CI";
    RefMsgType["MarginRequirementReport"] = "CJ";
    RefMsgType["PartyDetailsListUpdateReport"] = "CK";
    RefMsgType["PartyRiskLimitsRequest"] = "CL";
    RefMsgType["PartyRiskLimitsReport"] = "CM";
    RefMsgType["SecurityMassStatusRequest"] = "CN";
    RefMsgType["SecurityMassStatus"] = "CO";
    RefMsgType["AccountSummaryReport"] = "CQ";
    RefMsgType["PartyRiskLimitsUpdateReport"] = "CR";
    RefMsgType["PartyRiskLimitsDefinitionRequest"] = "CS";
    RefMsgType["PartyRiskLimitsDefinitionRequestAck"] = "CT";
    RefMsgType["PartyEntitlementsRequest"] = "CU";
    RefMsgType["PartyEntitlementsReport"] = "CV";
    RefMsgType["QuoteAck"] = "CW";
    RefMsgType["PartyDetailsDefinitionRequest"] = "CX";
    RefMsgType["PartyDetailsDefinitionRequestAck"] = "CY";
    RefMsgType["PartyEntitlementsUpdateReport"] = "CZ";
    RefMsgType["PartyEntitlementsDefinitionRequest"] = "DA";
    RefMsgType["PartyEntitlementsDefinitionRequestAck"] = "DB";
    RefMsgType["TradeMatchReport"] = "DC";
    RefMsgType["TradeMatchReportAck"] = "DD";
    RefMsgType["PartyRiskLimitsReportAck"] = "DE";
    RefMsgType["PartyRiskLimitCheckRequest"] = "DF";
    RefMsgType["PartyRiskLimitCheckRequestAck"] = "DG";
    RefMsgType["PartyActionRequest"] = "DH";
    RefMsgType["PartyActionReport"] = "DI";
    RefMsgType["MassOrder"] = "DJ";
    RefMsgType["MassOrderAck"] = "DK";
    RefMsgType["PositionTransferInstruction"] = "DL";
    RefMsgType["PositionTransferInstructionAck"] = "DM";
    RefMsgType["PositionTransferReport"] = "DN";
    RefMsgType["MarketDataStatisticsRequest"] = "DO";
    RefMsgType["MarketDataStatisticsReport"] = "DP";
    RefMsgType["CollateralReportAck"] = "DQ";
    RefMsgType["MarketDataReport"] = "DR";
    RefMsgType["CrossRequest"] = "DS";
    RefMsgType["CrossRequestAck"] = "DT";
})(RefMsgType = exports.RefMsgType || (exports.RefMsgType = {}));
var BidRequestTransType;
(function (BidRequestTransType) {
    BidRequestTransType["Cancel"] = "C";
    BidRequestTransType["New"] = "N";
})(BidRequestTransType = exports.BidRequestTransType || (exports.BidRequestTransType = {}));
var SolicitedFlag;
(function (SolicitedFlag) {
    SolicitedFlag["WasNotSolicited"] = "N";
    SolicitedFlag["WasSolicited"] = "Y";
})(SolicitedFlag = exports.SolicitedFlag || (exports.SolicitedFlag = {}));
var ExecRestatementReason;
(function (ExecRestatementReason) {
    ExecRestatementReason[ExecRestatementReason["GtCorporateAction"] = 0] = "GtCorporateAction";
    ExecRestatementReason[ExecRestatementReason["GtRenewalRestatementNoCorporateAction"] = 1] = "GtRenewalRestatementNoCorporateAction";
    ExecRestatementReason[ExecRestatementReason["VerbalChange"] = 2] = "VerbalChange";
    ExecRestatementReason[ExecRestatementReason["RepricingOfOrder"] = 3] = "RepricingOfOrder";
    ExecRestatementReason[ExecRestatementReason["BrokerOption"] = 4] = "BrokerOption";
    ExecRestatementReason[ExecRestatementReason["PartialDeclineOfOrderQtyEGExchangeInitiatedPartialCancel"] = 5] = "PartialDeclineOfOrderQtyEGExchangeInitiatedPartialCancel";
    ExecRestatementReason[ExecRestatementReason["CancelOnTradingHalt"] = 6] = "CancelOnTradingHalt";
    ExecRestatementReason[ExecRestatementReason["CancelOnSystemFailure"] = 7] = "CancelOnSystemFailure";
    ExecRestatementReason[ExecRestatementReason["MarketExchangeOption"] = 8] = "MarketExchangeOption";
    ExecRestatementReason[ExecRestatementReason["CanceledNotBest"] = 9] = "CanceledNotBest";
    ExecRestatementReason[ExecRestatementReason["WarehouseRecap"] = 10] = "WarehouseRecap";
    ExecRestatementReason[ExecRestatementReason["PegRefresh"] = 11] = "PegRefresh";
    ExecRestatementReason[ExecRestatementReason["CancelOnConnectionLoss"] = 12] = "CancelOnConnectionLoss";
    ExecRestatementReason[ExecRestatementReason["CancelOnLogout"] = 13] = "CancelOnLogout";
    ExecRestatementReason[ExecRestatementReason["AssignTimePriority"] = 14] = "AssignTimePriority";
    ExecRestatementReason[ExecRestatementReason["CancelledTradePriceViolation"] = 15] = "CancelledTradePriceViolation";
    ExecRestatementReason[ExecRestatementReason["CancelledCrossImbalance"] = 16] = "CancelledCrossImbalance";
    ExecRestatementReason[ExecRestatementReason["Other"] = 99] = "Other";
})(ExecRestatementReason = exports.ExecRestatementReason || (exports.ExecRestatementReason = {}));
var BusinessRejectReason;
(function (BusinessRejectReason) {
    BusinessRejectReason[BusinessRejectReason["Other"] = 0] = "Other";
    BusinessRejectReason[BusinessRejectReason["UnknownId"] = 1] = "UnknownId";
    BusinessRejectReason[BusinessRejectReason["UnknownSecurity"] = 2] = "UnknownSecurity";
    BusinessRejectReason[BusinessRejectReason["UnsupportedMessageType"] = 3] = "UnsupportedMessageType";
    BusinessRejectReason[BusinessRejectReason["ApplicationNotAvailable"] = 4] = "ApplicationNotAvailable";
    BusinessRejectReason[BusinessRejectReason["ConditionallyRequiredFieldMissing"] = 5] = "ConditionallyRequiredFieldMissing";
    BusinessRejectReason[BusinessRejectReason["NotAuthorized"] = 6] = "NotAuthorized";
    BusinessRejectReason[BusinessRejectReason["DeliverToFirmNotAvailableAtThisTime"] = 7] = "DeliverToFirmNotAvailableAtThisTime";
    BusinessRejectReason[BusinessRejectReason["ThrottleLimitExceeded"] = 8] = "ThrottleLimitExceeded";
    BusinessRejectReason[BusinessRejectReason["ThrottleLimitExceededSessionWillBeDisconnected"] = 9] = "ThrottleLimitExceededSessionWillBeDisconnected";
    BusinessRejectReason[BusinessRejectReason["ThrottledMessagesRejectedOnRequest"] = 10] = "ThrottledMessagesRejectedOnRequest";
    BusinessRejectReason[BusinessRejectReason["InvalidPriceIncrement"] = 18] = "InvalidPriceIncrement";
})(BusinessRejectReason = exports.BusinessRejectReason || (exports.BusinessRejectReason = {}));
var DiscretionInst;
(function (DiscretionInst) {
    DiscretionInst["RelatedToDisplayedPrice"] = "0";
    DiscretionInst["RelatedToMarketPrice"] = "1";
    DiscretionInst["RelatedToPrimaryPrice"] = "2";
    DiscretionInst["RelatedToLocalPrimaryPrice"] = "3";
    DiscretionInst["RelatedToMidpointPrice"] = "4";
    DiscretionInst["RelatedToLastTradePrice"] = "5";
    DiscretionInst["RelatedToVwap"] = "6";
    DiscretionInst["AveragePriceGuarantee"] = "7";
})(DiscretionInst = exports.DiscretionInst || (exports.DiscretionInst = {}));
var BidType;
(function (BidType) {
    BidType[BidType["NonDisclosedStyleEGUsEuropean"] = 1] = "NonDisclosedStyleEGUsEuropean";
    BidType[BidType["DisclosedSytleEGJapanese"] = 2] = "DisclosedSytleEGJapanese";
    BidType[BidType["NoBiddingProcess"] = 3] = "NoBiddingProcess";
})(BidType = exports.BidType || (exports.BidType = {}));
var BidDescriptorType;
(function (BidDescriptorType) {
    BidDescriptorType[BidDescriptorType["Sector"] = 1] = "Sector";
    BidDescriptorType[BidDescriptorType["Country"] = 2] = "Country";
    BidDescriptorType[BidDescriptorType["Index"] = 3] = "Index";
})(BidDescriptorType = exports.BidDescriptorType || (exports.BidDescriptorType = {}));
var SideValueInd;
(function (SideValueInd) {
    SideValueInd[SideValueInd["SideValue1"] = 1] = "SideValue1";
    SideValueInd[SideValueInd["SideValue2"] = 2] = "SideValue2";
})(SideValueInd = exports.SideValueInd || (exports.SideValueInd = {}));
var LiquidityIndType;
(function (LiquidityIndType) {
    LiquidityIndType[LiquidityIndType["E5DayMovingAverage"] = 1] = "E5DayMovingAverage";
    LiquidityIndType[LiquidityIndType["E20DayMovingAverage"] = 2] = "E20DayMovingAverage";
    LiquidityIndType[LiquidityIndType["NormalMarketSize"] = 3] = "NormalMarketSize";
    LiquidityIndType[LiquidityIndType["Other"] = 4] = "Other";
})(LiquidityIndType = exports.LiquidityIndType || (exports.LiquidityIndType = {}));
var ExchangeForPhysical;
(function (ExchangeForPhysical) {
    ExchangeForPhysical["False"] = "N";
    ExchangeForPhysical["True"] = "Y";
})(ExchangeForPhysical = exports.ExchangeForPhysical || (exports.ExchangeForPhysical = {}));
var ProgRptReqs;
(function (ProgRptReqs) {
    ProgRptReqs[ProgRptReqs["BuySideExplicitlyRequestsStatusUsingStatueRequestDefaultTheSellSideFirmCanHoweverSendADoneStatusListSTatusResponseInAnUnsolicitedFashion"] = 1] = "BuySideExplicitlyRequestsStatusUsingStatueRequestDefaultTheSellSideFirmCanHoweverSendADoneStatusListSTatusResponseInAnUnsolicitedFashion";
    ProgRptReqs[ProgRptReqs["SellSidePeriodicallySendsStatusUsingListStatusPeriodOptionallySpecifiedInProgressPeriod"] = 2] = "SellSidePeriodicallySendsStatusUsingListStatusPeriodOptionallySpecifiedInProgressPeriod";
    ProgRptReqs[ProgRptReqs["RealTimeExecutionReportsToBeDiscourage"] = 3] = "RealTimeExecutionReportsToBeDiscourage";
})(ProgRptReqs = exports.ProgRptReqs || (exports.ProgRptReqs = {}));
var IncTaxInd;
(function (IncTaxInd) {
    IncTaxInd[IncTaxInd["Net"] = 1] = "Net";
    IncTaxInd[IncTaxInd["Gross"] = 2] = "Gross";
})(IncTaxInd = exports.IncTaxInd || (exports.IncTaxInd = {}));
var BidTradeType;
(function (BidTradeType) {
    BidTradeType["Agency"] = "A";
    BidTradeType["VwapGuarantee"] = "G";
    BidTradeType["GuaranteedClose"] = "J";
    BidTradeType["RiskTrade"] = "R";
})(BidTradeType = exports.BidTradeType || (exports.BidTradeType = {}));
var BasisPxType;
(function (BasisPxType) {
    BasisPxType["ClosingPriceAtMorningSession"] = "2";
    BasisPxType["ClosingPrice"] = "3";
    BasisPxType["CurrentPrice"] = "4";
    BasisPxType["Sq"] = "5";
    BasisPxType["VwapThroughADay"] = "6";
    BasisPxType["VwapThroughAMorningSession"] = "7";
    BasisPxType["VwapThroughAnAfternoonSession"] = "8";
    BasisPxType["VwapThroughADayExceptYoriAnOpeningAuction"] = "9";
    BasisPxType["VwapThroughAMorningSessionExceptYoriAnOpeningAuction"] = "A";
    BasisPxType["VwapThroughAnAfternoonSessionExceptYoriAnOpeningAuction"] = "B";
    BasisPxType["Strike"] = "C";
    BasisPxType["Open"] = "D";
    BasisPxType["Others"] = "Z";
})(BasisPxType = exports.BasisPxType || (exports.BasisPxType = {}));
var PriceType;
(function (PriceType) {
    PriceType[PriceType["PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome"] = 1] = "PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome";
    PriceType[PriceType["PerUnitIEPerShareOrContract"] = 2] = "PerUnitIEPerShareOrContract";
    PriceType[PriceType["FixedAmountAbsoluteValue"] = 3] = "FixedAmountAbsoluteValue";
    PriceType[PriceType["DiscountPercentagePointsBelowPar"] = 4] = "DiscountPercentagePointsBelowPar";
    PriceType[PriceType["PremiumPercentagePointsOverPar"] = 5] = "PremiumPercentagePointsOverPar";
    PriceType[PriceType["SpreadBasisPointsSpread"] = 6] = "SpreadBasisPointsSpread";
    PriceType[PriceType["TedPrice"] = 7] = "TedPrice";
    PriceType[PriceType["TedYield"] = 8] = "TedYield";
    PriceType[PriceType["Yield"] = 9] = "Yield";
    PriceType[PriceType["FixedCabinetTradePricePrimarilyForListedFuturesAndOptions"] = 10] = "FixedCabinetTradePricePrimarilyForListedFuturesAndOptions";
    PriceType[PriceType["VariableCabinetTradePricePrimarilyForListedFuturesAndOptions"] = 11] = "VariableCabinetTradePricePrimarilyForListedFuturesAndOptions";
    PriceType[PriceType["PriceSpread"] = 12] = "PriceSpread";
    PriceType[PriceType["ProductTicksInHalves"] = 13] = "ProductTicksInHalves";
    PriceType[PriceType["ProductTicksInFourths"] = 14] = "ProductTicksInFourths";
    PriceType[PriceType["ProductTicksInEighths"] = 15] = "ProductTicksInEighths";
    PriceType[PriceType["ProductTicksInSixteenths"] = 16] = "ProductTicksInSixteenths";
    PriceType[PriceType["ProductTicksInThirtySeconds"] = 17] = "ProductTicksInThirtySeconds";
    PriceType[PriceType["ProductTicksInSixtyFourths"] = 18] = "ProductTicksInSixtyFourths";
    PriceType[PriceType["ProductTicksInOneTwentyEighths"] = 19] = "ProductTicksInOneTwentyEighths";
    PriceType[PriceType["NormalRateRepresentationEGFxRate"] = 20] = "NormalRateRepresentationEGFxRate";
    PriceType[PriceType["InverseRateRepresentationEGFxRate"] = 21] = "InverseRateRepresentationEGFxRate";
    PriceType[PriceType["BasisPoints"] = 22] = "BasisPoints";
    PriceType[PriceType["UpFrontPoints"] = 23] = "UpFrontPoints";
    PriceType[PriceType["InterestRate"] = 24] = "InterestRate";
    PriceType[PriceType["PercentageOfNotional"] = 25] = "PercentageOfNotional";
})(PriceType = exports.PriceType || (exports.PriceType = {}));
var GTBookingInst;
(function (GTBookingInst) {
    GTBookingInst[GTBookingInst["BookOutAllTradesOnDayOfExecution"] = 0] = "BookOutAllTradesOnDayOfExecution";
    GTBookingInst[GTBookingInst["AccumulateExecutionsUntilOrderIsFilledOrExpires"] = 1] = "AccumulateExecutionsUntilOrderIsFilledOrExpires";
    GTBookingInst[GTBookingInst["AccumulateUntilVerballyNotifiedOtherwise"] = 2] = "AccumulateUntilVerballyNotifiedOtherwise";
})(GTBookingInst = exports.GTBookingInst || (exports.GTBookingInst = {}));
var ListStatusType;
(function (ListStatusType) {
    ListStatusType[ListStatusType["Ack"] = 1] = "Ack";
    ListStatusType[ListStatusType["Response"] = 2] = "Response";
    ListStatusType[ListStatusType["Timed"] = 3] = "Timed";
    ListStatusType[ListStatusType["ExecStarted"] = 4] = "ExecStarted";
    ListStatusType[ListStatusType["AllDone"] = 5] = "AllDone";
    ListStatusType[ListStatusType["Alert"] = 6] = "Alert";
})(ListStatusType = exports.ListStatusType || (exports.ListStatusType = {}));
var NetGrossInd;
(function (NetGrossInd) {
    NetGrossInd[NetGrossInd["Net"] = 1] = "Net";
    NetGrossInd[NetGrossInd["Gross"] = 2] = "Gross";
})(NetGrossInd = exports.NetGrossInd || (exports.NetGrossInd = {}));
var ListOrderStatus;
(function (ListOrderStatus) {
    ListOrderStatus[ListOrderStatus["InBiddingProcess"] = 1] = "InBiddingProcess";
    ListOrderStatus[ListOrderStatus["ReceivedForExecution"] = 2] = "ReceivedForExecution";
    ListOrderStatus[ListOrderStatus["Executing"] = 3] = "Executing";
    ListOrderStatus[ListOrderStatus["Cancelling"] = 4] = "Cancelling";
    ListOrderStatus[ListOrderStatus["Alert"] = 5] = "Alert";
    ListOrderStatus[ListOrderStatus["AllDone"] = 6] = "AllDone";
    ListOrderStatus[ListOrderStatus["Reject"] = 7] = "Reject";
})(ListOrderStatus = exports.ListOrderStatus || (exports.ListOrderStatus = {}));
var ListExecInstType;
(function (ListExecInstType) {
    ListExecInstType["Immediate"] = "1";
    ListExecInstType["WaitForExecutInstructionIEAListExecutMessageOrPhoneCallBeforeProceedingWithExecutionOfTheList"] = "2";
    ListExecInstType["ExchangeSwitchCivOrderSellDriven"] = "3";
    ListExecInstType["ExchangeSwitchCivOrderBuyDrivenCashTopUpIEAdditionalCashWillBeProvidedToFulfillTheOrder"] = "4";
    ListExecInstType["ExchangeSwitchCivOrderBuyDrivenCashWithdrawIEAdditionalCashWillNotBeProvidedToFulfillTheOrder"] = "5";
})(ListExecInstType = exports.ListExecInstType || (exports.ListExecInstType = {}));
var CxlRejResponseTo;
(function (CxlRejResponseTo) {
    CxlRejResponseTo["OrderCancelRequest"] = "1";
    CxlRejResponseTo["OrderCancelReplaceRequest"] = "2";
})(CxlRejResponseTo = exports.CxlRejResponseTo || (exports.CxlRejResponseTo = {}));
var MultiLegReportingType;
(function (MultiLegReportingType) {
    MultiLegReportingType["SingleSecurityDefaultIfNotSpecified"] = "1";
    MultiLegReportingType["IndividualLegOfAMultiLegSecurity"] = "2";
    MultiLegReportingType["MultiLegSecurity"] = "3";
})(MultiLegReportingType = exports.MultiLegReportingType || (exports.MultiLegReportingType = {}));
var PartyIDSource;
(function (PartyIDSource) {
    PartyIDSource["KoreanInvestorId"] = "1";
    PartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    PartyIDSource["TaiwaneseTradingAcct"] = "3";
    PartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    PartyIDSource["ChineseInvestorId"] = "5";
    PartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    PartyIDSource["UsSocialSecurityNumber"] = "7";
    PartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    PartyIDSource["AustralianBusinessNumber"] = "9";
    PartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    PartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    PartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    PartyIDSource["ProprietaryCustomCode"] = "D";
    PartyIDSource["IsoCountryCode"] = "E";
    PartyIDSource["AustralianTaxFileNumber"] = "A";
    PartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    PartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    PartyIDSource["TaxId"] = "J";
    PartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    PartyIDSource["AustralianCompanyNumber"] = "K";
    PartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    PartyIDSource["CftcReportingFirmIdentifier"] = "M";
    PartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    PartyIDSource["InterimIdentifier"] = "O";
    PartyIDSource["ShortCodeIdentifier"] = "P";
    PartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(PartyIDSource = exports.PartyIDSource || (exports.PartyIDSource = {}));
var PartyRole;
(function (PartyRole) {
    PartyRole[PartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    PartyRole[PartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    PartyRole[PartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    PartyRole[PartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    PartyRole[PartyRole["InvestorId"] = 5] = "InvestorId";
    PartyRole[PartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    PartyRole[PartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    PartyRole[PartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    PartyRole[PartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    PartyRole[PartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    PartyRole[PartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    PartyRole[PartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    PartyRole[PartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    PartyRole[PartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    PartyRole[PartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    PartyRole[PartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    PartyRole[PartyRole["ContraFirm"] = 17] = "ContraFirm";
    PartyRole[PartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    PartyRole[PartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    PartyRole[PartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    PartyRole[PartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    PartyRole[PartyRole["Exchange"] = 22] = "Exchange";
    PartyRole[PartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    PartyRole[PartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    PartyRole[PartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    PartyRole[PartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    PartyRole[PartyRole["Custodian"] = 28] = "Custodian";
    PartyRole[PartyRole["Intermediary"] = 29] = "Intermediary";
    PartyRole[PartyRole["Agent"] = 30] = "Agent";
    PartyRole[PartyRole["SubCustodian"] = 31] = "SubCustodian";
    PartyRole[PartyRole["Beneficiary"] = 32] = "Beneficiary";
    PartyRole[PartyRole["InterestedParty"] = 33] = "InterestedParty";
    PartyRole[PartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    PartyRole[PartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    PartyRole[PartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    PartyRole[PartyRole["ContraTrader"] = 37] = "ContraTrader";
    PartyRole[PartyRole["PositionAccount"] = 38] = "PositionAccount";
    PartyRole[PartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    PartyRole[PartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    PartyRole[PartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    PartyRole[PartyRole["ContraExchange"] = 42] = "ContraExchange";
    PartyRole[PartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    PartyRole[PartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    PartyRole[PartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    PartyRole[PartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    PartyRole[PartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    PartyRole[PartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    PartyRole[PartyRole["AssetManager"] = 49] = "AssetManager";
    PartyRole[PartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    PartyRole[PartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    PartyRole[PartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    PartyRole[PartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    PartyRole[PartyRole["SenderLocation"] = 54] = "SenderLocation";
    PartyRole[PartyRole["SessionId"] = 55] = "SessionId";
    PartyRole[PartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    PartyRole[PartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    PartyRole[PartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    PartyRole[PartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    PartyRole[PartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    PartyRole[PartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    PartyRole[PartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    PartyRole[PartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    PartyRole[PartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    PartyRole[PartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    PartyRole[PartyRole["MarketMaker"] = 66] = "MarketMaker";
    PartyRole[PartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    PartyRole[PartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    PartyRole[PartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    PartyRole[PartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    PartyRole[PartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    PartyRole[PartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    PartyRole[PartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    PartyRole[PartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    PartyRole[PartyRole["LocationId"] = 75] = "LocationId";
    PartyRole[PartyRole["DeskId"] = 76] = "DeskId";
    PartyRole[PartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    PartyRole[PartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    PartyRole[PartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    PartyRole[PartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    PartyRole[PartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    PartyRole[PartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    PartyRole[PartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    PartyRole[PartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    PartyRole[PartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    PartyRole[PartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    PartyRole[PartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    PartyRole[PartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    PartyRole[PartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    PartyRole[PartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    PartyRole[PartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    PartyRole[PartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    PartyRole[PartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    PartyRole[PartyRole["AwayMarket"] = 94] = "AwayMarket";
    PartyRole[PartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    PartyRole[PartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    PartyRole[PartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    PartyRole[PartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    PartyRole[PartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    PartyRole[PartyRole["MarginAccount"] = 100] = "MarginAccount";
    PartyRole[PartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    PartyRole[PartyRole["DataRepository"] = 102] = "DataRepository";
    PartyRole[PartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    PartyRole[PartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    PartyRole[PartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    PartyRole[PartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    PartyRole[PartyRole["Correspondent"] = 107] = "Correspondent";
    PartyRole[PartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    PartyRole[PartyRole["Borrower"] = 110] = "Borrower";
    PartyRole[PartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    PartyRole[PartyRole["Guarantor"] = 112] = "Guarantor";
    PartyRole[PartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    PartyRole[PartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    PartyRole[PartyRole["HedgingParty"] = 115] = "HedgingParty";
    PartyRole[PartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    PartyRole[PartyRole["SalesPerson"] = 117] = "SalesPerson";
    PartyRole[PartyRole["Operator"] = 118] = "Operator";
    PartyRole[PartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    PartyRole[PartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    PartyRole[PartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    PartyRole[PartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(PartyRole = exports.PartyRole || (exports.PartyRole = {}));
var SecurityAltIDSource;
(function (SecurityAltIDSource) {
    SecurityAltIDSource["Cusip"] = "1";
    SecurityAltIDSource["Sedol"] = "2";
    SecurityAltIDSource["Quik"] = "3";
    SecurityAltIDSource["IsinNumber"] = "4";
    SecurityAltIDSource["RicCode"] = "5";
    SecurityAltIDSource["IsoCurrencyCode"] = "6";
    SecurityAltIDSource["IsoCountryCode"] = "7";
    SecurityAltIDSource["ExchangeSymbol"] = "8";
    SecurityAltIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    SecurityAltIDSource["BloombergSymbol"] = "A";
    SecurityAltIDSource["Wertpapier"] = "B";
    SecurityAltIDSource["Dutch"] = "C";
    SecurityAltIDSource["Valoren"] = "D";
    SecurityAltIDSource["Sicovam"] = "E";
    SecurityAltIDSource["Belgian"] = "F";
    SecurityAltIDSource["CommonClearstreamAndEuroclear"] = "G";
    SecurityAltIDSource["ClearingHouseClearingOrganization"] = "H";
    SecurityAltIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    SecurityAltIDSource["OptionPriceReportingAuthority"] = "J";
    SecurityAltIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    SecurityAltIDSource["LetterOfCredit"] = "L";
    SecurityAltIDSource["MarketplaceAssignedIdentifier"] = "M";
    SecurityAltIDSource["MarkitRedEntityClip"] = "N";
    SecurityAltIDSource["MarkitRedPairClip"] = "P";
    SecurityAltIDSource["CftcCommodityCode"] = "Q";
    SecurityAltIDSource["IsdaCommodityReferencePrice"] = "R";
    SecurityAltIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    SecurityAltIDSource["LegalEntityIdentifier"] = "T";
    SecurityAltIDSource["Synthetic"] = "U";
    SecurityAltIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(SecurityAltIDSource = exports.SecurityAltIDSource || (exports.SecurityAltIDSource = {}));
var UnderlyingSecurityAltIDSource;
(function (UnderlyingSecurityAltIDSource) {
    UnderlyingSecurityAltIDSource["Cusip"] = "1";
    UnderlyingSecurityAltIDSource["Sedol"] = "2";
    UnderlyingSecurityAltIDSource["Quik"] = "3";
    UnderlyingSecurityAltIDSource["IsinNumber"] = "4";
    UnderlyingSecurityAltIDSource["RicCode"] = "5";
    UnderlyingSecurityAltIDSource["IsoCurrencyCode"] = "6";
    UnderlyingSecurityAltIDSource["IsoCountryCode"] = "7";
    UnderlyingSecurityAltIDSource["ExchangeSymbol"] = "8";
    UnderlyingSecurityAltIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    UnderlyingSecurityAltIDSource["BloombergSymbol"] = "A";
    UnderlyingSecurityAltIDSource["Wertpapier"] = "B";
    UnderlyingSecurityAltIDSource["Dutch"] = "C";
    UnderlyingSecurityAltIDSource["Valoren"] = "D";
    UnderlyingSecurityAltIDSource["Sicovam"] = "E";
    UnderlyingSecurityAltIDSource["Belgian"] = "F";
    UnderlyingSecurityAltIDSource["CommonClearstreamAndEuroclear"] = "G";
    UnderlyingSecurityAltIDSource["ClearingHouseClearingOrganization"] = "H";
    UnderlyingSecurityAltIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    UnderlyingSecurityAltIDSource["OptionPriceReportingAuthority"] = "J";
    UnderlyingSecurityAltIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    UnderlyingSecurityAltIDSource["LetterOfCredit"] = "L";
    UnderlyingSecurityAltIDSource["MarketplaceAssignedIdentifier"] = "M";
    UnderlyingSecurityAltIDSource["MarkitRedEntityClip"] = "N";
    UnderlyingSecurityAltIDSource["MarkitRedPairClip"] = "P";
    UnderlyingSecurityAltIDSource["CftcCommodityCode"] = "Q";
    UnderlyingSecurityAltIDSource["IsdaCommodityReferencePrice"] = "R";
    UnderlyingSecurityAltIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    UnderlyingSecurityAltIDSource["LegalEntityIdentifier"] = "T";
    UnderlyingSecurityAltIDSource["Synthetic"] = "U";
    UnderlyingSecurityAltIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(UnderlyingSecurityAltIDSource = exports.UnderlyingSecurityAltIDSource || (exports.UnderlyingSecurityAltIDSource = {}));
var Product;
(function (Product) {
    Product[Product["Agency"] = 1] = "Agency";
    Product[Product["Commodity"] = 2] = "Commodity";
    Product[Product["Corporate"] = 3] = "Corporate";
    Product[Product["Currency"] = 4] = "Currency";
    Product[Product["Equity"] = 5] = "Equity";
    Product[Product["Government"] = 6] = "Government";
    Product[Product["Index"] = 7] = "Index";
    Product[Product["Loan"] = 8] = "Loan";
    Product[Product["Moneymarket"] = 9] = "Moneymarket";
    Product[Product["Mortgage"] = 10] = "Mortgage";
    Product[Product["Municipal"] = 11] = "Municipal";
    Product[Product["Other"] = 12] = "Other";
    Product[Product["Financing"] = 13] = "Financing";
})(Product = exports.Product || (exports.Product = {}));
var UnderlyingProduct;
(function (UnderlyingProduct) {
    UnderlyingProduct[UnderlyingProduct["Agency"] = 1] = "Agency";
    UnderlyingProduct[UnderlyingProduct["Commodity"] = 2] = "Commodity";
    UnderlyingProduct[UnderlyingProduct["Corporate"] = 3] = "Corporate";
    UnderlyingProduct[UnderlyingProduct["Currency"] = 4] = "Currency";
    UnderlyingProduct[UnderlyingProduct["Equity"] = 5] = "Equity";
    UnderlyingProduct[UnderlyingProduct["Government"] = 6] = "Government";
    UnderlyingProduct[UnderlyingProduct["Index"] = 7] = "Index";
    UnderlyingProduct[UnderlyingProduct["Loan"] = 8] = "Loan";
    UnderlyingProduct[UnderlyingProduct["Moneymarket"] = 9] = "Moneymarket";
    UnderlyingProduct[UnderlyingProduct["Mortgage"] = 10] = "Mortgage";
    UnderlyingProduct[UnderlyingProduct["Municipal"] = 11] = "Municipal";
    UnderlyingProduct[UnderlyingProduct["Other"] = 12] = "Other";
    UnderlyingProduct[UnderlyingProduct["Financing"] = 13] = "Financing";
})(UnderlyingProduct = exports.UnderlyingProduct || (exports.UnderlyingProduct = {}));
var RoundingDirection;
(function (RoundingDirection) {
    RoundingDirection["RoundToNearest"] = "0";
    RoundingDirection["RoundDown"] = "1";
    RoundingDirection["RoundUp"] = "2";
})(RoundingDirection = exports.RoundingDirection || (exports.RoundingDirection = {}));
var DistribPaymentMethod;
(function (DistribPaymentMethod) {
    DistribPaymentMethod[DistribPaymentMethod["Crest"] = 1] = "Crest";
    DistribPaymentMethod[DistribPaymentMethod["Nscc"] = 2] = "Nscc";
    DistribPaymentMethod[DistribPaymentMethod["Euroclear"] = 3] = "Euroclear";
    DistribPaymentMethod[DistribPaymentMethod["Clearstream"] = 4] = "Clearstream";
    DistribPaymentMethod[DistribPaymentMethod["Cheque"] = 5] = "Cheque";
    DistribPaymentMethod[DistribPaymentMethod["TelegraphicTransfer"] = 6] = "TelegraphicTransfer";
    DistribPaymentMethod[DistribPaymentMethod["FedWire"] = 7] = "FedWire";
    DistribPaymentMethod[DistribPaymentMethod["DirectCreditBecsBacs"] = 8] = "DirectCreditBecsBacs";
    DistribPaymentMethod[DistribPaymentMethod["AchCredit"] = 9] = "AchCredit";
    DistribPaymentMethod[DistribPaymentMethod["Bpay"] = 10] = "Bpay";
    DistribPaymentMethod[DistribPaymentMethod["HighValueClearingSystemHvacs"] = 11] = "HighValueClearingSystemHvacs";
    DistribPaymentMethod[DistribPaymentMethod["ReinvestInFund"] = 12] = "ReinvestInFund";
})(DistribPaymentMethod = exports.DistribPaymentMethod || (exports.DistribPaymentMethod = {}));
var CancellationRights;
(function (CancellationRights) {
    CancellationRights["Yes"] = "Y";
    CancellationRights["NoExecutionOnly"] = "N";
    CancellationRights["NoWaiverAgreement"] = "M";
    CancellationRights["NoInstitutional"] = "O";
})(CancellationRights = exports.CancellationRights || (exports.CancellationRights = {}));
var MoneyLaunderingStatus;
(function (MoneyLaunderingStatus) {
    MoneyLaunderingStatus["ExemptBelowTheLimit"] = "1";
    MoneyLaunderingStatus["ExemptClientMoneyTypeExemption"] = "2";
    MoneyLaunderingStatus["ExemptAuthorisedCreditOrFinancialInstitution"] = "3";
    MoneyLaunderingStatus["Passed"] = "Y";
    MoneyLaunderingStatus["NotChecked"] = "N";
})(MoneyLaunderingStatus = exports.MoneyLaunderingStatus || (exports.MoneyLaunderingStatus = {}));
var ExecPriceType;
(function (ExecPriceType) {
    ExecPriceType["BidPrice"] = "B";
    ExecPriceType["CreationPrice"] = "C";
    ExecPriceType["CreationPricePlusAdjustmentPercent"] = "D";
    ExecPriceType["CreationPricePlusAdjustmentAmount"] = "E";
    ExecPriceType["OfferPrice"] = "O";
    ExecPriceType["OfferPriceMinusAdjustmentPercent"] = "P";
    ExecPriceType["OfferPriceMinusAdjustmentAmount"] = "Q";
    ExecPriceType["SinglePrice"] = "S";
})(ExecPriceType = exports.ExecPriceType || (exports.ExecPriceType = {}));
var TradeReportTransType;
(function (TradeReportTransType) {
    TradeReportTransType[TradeReportTransType["New"] = 0] = "New";
    TradeReportTransType[TradeReportTransType["Cancel"] = 1] = "Cancel";
    TradeReportTransType[TradeReportTransType["Replace"] = 2] = "Replace";
    TradeReportTransType[TradeReportTransType["Release"] = 3] = "Release";
    TradeReportTransType[TradeReportTransType["Reverse"] = 4] = "Reverse";
    TradeReportTransType[TradeReportTransType["CancelDueToBackOutOfTrade"] = 5] = "CancelDueToBackOutOfTrade";
})(TradeReportTransType = exports.TradeReportTransType || (exports.TradeReportTransType = {}));
var PaymentMethod;
(function (PaymentMethod) {
    PaymentMethod[PaymentMethod["Crest"] = 1] = "Crest";
    PaymentMethod[PaymentMethod["Nscc"] = 2] = "Nscc";
    PaymentMethod[PaymentMethod["Euroclear"] = 3] = "Euroclear";
    PaymentMethod[PaymentMethod["Clearstream"] = 4] = "Clearstream";
    PaymentMethod[PaymentMethod["Cheque"] = 5] = "Cheque";
    PaymentMethod[PaymentMethod["TelegraphicTransfer"] = 6] = "TelegraphicTransfer";
    PaymentMethod[PaymentMethod["FedWire"] = 7] = "FedWire";
    PaymentMethod[PaymentMethod["DebitCard"] = 8] = "DebitCard";
    PaymentMethod[PaymentMethod["DirectDebitBecs"] = 9] = "DirectDebitBecs";
    PaymentMethod[PaymentMethod["DirectCreditBecs"] = 10] = "DirectCreditBecs";
    PaymentMethod[PaymentMethod["CreditCard"] = 11] = "CreditCard";
    PaymentMethod[PaymentMethod["AchDebit"] = 12] = "AchDebit";
    PaymentMethod[PaymentMethod["AchCredit"] = 13] = "AchCredit";
    PaymentMethod[PaymentMethod["Bpay"] = 14] = "Bpay";
    PaymentMethod[PaymentMethod["HighValueClearingSystemHvacs"] = 15] = "HighValueClearingSystemHvacs";
    PaymentMethod[PaymentMethod["Chips"] = 16] = "Chips";
    PaymentMethod[PaymentMethod["SWIFT"] = 17] = "SWIFT";
    PaymentMethod[PaymentMethod["Chaps"] = 18] = "Chaps";
    PaymentMethod[PaymentMethod["Sic"] = 19] = "Sic";
    PaymentMethod[PaymentMethod["EuroSic"] = 20] = "EuroSic";
})(PaymentMethod = exports.PaymentMethod || (exports.PaymentMethod = {}));
var TaxAdvantageType;
(function (TaxAdvantageType) {
    TaxAdvantageType[TaxAdvantageType["NoneNotApplicableDefault"] = 0] = "NoneNotApplicableDefault";
    TaxAdvantageType[TaxAdvantageType["MaxiIsaUk"] = 1] = "MaxiIsaUk";
    TaxAdvantageType[TaxAdvantageType["TessaUk"] = 2] = "TessaUk";
    TaxAdvantageType[TaxAdvantageType["MiniCashIsaUk"] = 3] = "MiniCashIsaUk";
    TaxAdvantageType[TaxAdvantageType["MiniStocksAndSharesIsaUk"] = 4] = "MiniStocksAndSharesIsaUk";
    TaxAdvantageType[TaxAdvantageType["MiniInsuranceIsaUk"] = 5] = "MiniInsuranceIsaUk";
    TaxAdvantageType[TaxAdvantageType["CurrentYearPaymentUs"] = 6] = "CurrentYearPaymentUs";
    TaxAdvantageType[TaxAdvantageType["PriorYearPaymentUs"] = 7] = "PriorYearPaymentUs";
    TaxAdvantageType[TaxAdvantageType["AssetTransferUs"] = 8] = "AssetTransferUs";
    TaxAdvantageType[TaxAdvantageType["EmployeePriorYearUs"] = 9] = "EmployeePriorYearUs";
    TaxAdvantageType[TaxAdvantageType["EmployeeCurrentYearUs"] = 10] = "EmployeeCurrentYearUs";
    TaxAdvantageType[TaxAdvantageType["EmployerPriorYearUs"] = 11] = "EmployerPriorYearUs";
    TaxAdvantageType[TaxAdvantageType["EmployerCurrentYearUs"] = 12] = "EmployerCurrentYearUs";
    TaxAdvantageType[TaxAdvantageType["NonFundPrototypeIraUs"] = 13] = "NonFundPrototypeIraUs";
    TaxAdvantageType[TaxAdvantageType["NonFundQualifiedPlanUs"] = 14] = "NonFundQualifiedPlanUs";
    TaxAdvantageType[TaxAdvantageType["DefinedContributionPlanUs"] = 15] = "DefinedContributionPlanUs";
    TaxAdvantageType[TaxAdvantageType["IndividualRetirementAccountUs"] = 16] = "IndividualRetirementAccountUs";
    TaxAdvantageType[TaxAdvantageType["IndividualRetirementAccountRolloverUs"] = 17] = "IndividualRetirementAccountRolloverUs";
    TaxAdvantageType[TaxAdvantageType["KeoghUs"] = 18] = "KeoghUs";
    TaxAdvantageType[TaxAdvantageType["ProfitSharingPlanUs"] = 19] = "ProfitSharingPlanUs";
    TaxAdvantageType[TaxAdvantageType["E401KUs"] = 20] = "E401KUs";
    TaxAdvantageType[TaxAdvantageType["SelfDirectedIraUs"] = 21] = "SelfDirectedIraUs";
    TaxAdvantageType[TaxAdvantageType["E403BUs"] = 22] = "E403BUs";
    TaxAdvantageType[TaxAdvantageType["E457Us"] = 23] = "E457Us";
    TaxAdvantageType[TaxAdvantageType["RothIraFundPrototypeUs"] = 24] = "RothIraFundPrototypeUs";
    TaxAdvantageType[TaxAdvantageType["RothIraNonPrototypeUs"] = 25] = "RothIraNonPrototypeUs";
    TaxAdvantageType[TaxAdvantageType["RothConversionIraFundPrototypeUs"] = 26] = "RothConversionIraFundPrototypeUs";
    TaxAdvantageType[TaxAdvantageType["RothConversionIraNonPrototypeUs"] = 27] = "RothConversionIraNonPrototypeUs";
    TaxAdvantageType[TaxAdvantageType["EducationIraFundPrototypeUs"] = 28] = "EducationIraFundPrototypeUs";
    TaxAdvantageType[TaxAdvantageType["EducationIraNonPrototypeUs"] = 29] = "EducationIraNonPrototypeUs";
    TaxAdvantageType[TaxAdvantageType["Other"] = 999] = "Other";
})(TaxAdvantageType = exports.TaxAdvantageType || (exports.TaxAdvantageType = {}));
var FundRenewWaiv;
(function (FundRenewWaiv) {
    FundRenewWaiv["No"] = "N";
    FundRenewWaiv["Yes"] = "Y";
})(FundRenewWaiv = exports.FundRenewWaiv || (exports.FundRenewWaiv = {}));
var RegistStatus;
(function (RegistStatus) {
    RegistStatus["Accepted"] = "A";
    RegistStatus["Rejected"] = "R";
    RegistStatus["Held"] = "H";
    RegistStatus["ReminderIERegistrationInstructionsAreStillOutstanding"] = "N";
})(RegistStatus = exports.RegistStatus || (exports.RegistStatus = {}));
var RegistRejReasonCode;
(function (RegistRejReasonCode) {
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableAccountType"] = 1] = "InvalidUnacceptableAccountType";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableTaxExemptType"] = 2] = "InvalidUnacceptableTaxExemptType";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableOwnershipType"] = 3] = "InvalidUnacceptableOwnershipType";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableNoRegDetails"] = 4] = "InvalidUnacceptableNoRegDetails";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableRegSeqNo"] = 5] = "InvalidUnacceptableRegSeqNo";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableRegDetails"] = 6] = "InvalidUnacceptableRegDetails";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableMailingDetails"] = 7] = "InvalidUnacceptableMailingDetails";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableMailingInstructions"] = 8] = "InvalidUnacceptableMailingInstructions";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableInvestorId"] = 9] = "InvalidUnacceptableInvestorId";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnaceeptableInvestorIdSource"] = 10] = "InvalidUnaceeptableInvestorIdSource";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableDateOfBirth"] = 11] = "InvalidUnacceptableDateOfBirth";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableInvestorCountryOfResidence"] = 12] = "InvalidUnacceptableInvestorCountryOfResidence";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableNoDistribInstns"] = 13] = "InvalidUnacceptableNoDistribInstns";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableDistribPercentage"] = 14] = "InvalidUnacceptableDistribPercentage";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableDistribPaymentMethod"] = 15] = "InvalidUnacceptableDistribPaymentMethod";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableCashDistribAgentAcctName"] = 16] = "InvalidUnacceptableCashDistribAgentAcctName";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableCashDistribAgentCode"] = 17] = "InvalidUnacceptableCashDistribAgentCode";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableCashDistribAgentAcctNum"] = 18] = "InvalidUnacceptableCashDistribAgentAcctNum";
    RegistRejReasonCode[RegistRejReasonCode["Other"] = 99] = "Other";
})(RegistRejReasonCode = exports.RegistRejReasonCode || (exports.RegistRejReasonCode = {}));
var RegistTransType;
(function (RegistTransType) {
    RegistTransType["New"] = "0";
    RegistTransType["Replace"] = "1";
    RegistTransType["Cancel"] = "2";
})(RegistTransType = exports.RegistTransType || (exports.RegistTransType = {}));
var OwnershipType;
(function (OwnershipType) {
    OwnershipType["JointTrustees"] = "2";
    OwnershipType["JointInvestors"] = "J";
    OwnershipType["TenantsInCommon"] = "T";
})(OwnershipType = exports.OwnershipType || (exports.OwnershipType = {}));
var ContAmtType;
(function (ContAmtType) {
    ContAmtType[ContAmtType["CommissionAmountActual"] = 1] = "CommissionAmountActual";
    ContAmtType[ContAmtType["CommissionPercentActual"] = 2] = "CommissionPercentActual";
    ContAmtType[ContAmtType["InitialChargeAmount"] = 3] = "InitialChargeAmount";
    ContAmtType[ContAmtType["InitialChargePercent"] = 4] = "InitialChargePercent";
    ContAmtType[ContAmtType["DiscountAmount"] = 5] = "DiscountAmount";
    ContAmtType[ContAmtType["DiscountPercent"] = 6] = "DiscountPercent";
    ContAmtType[ContAmtType["DilutionLevyAmount"] = 7] = "DilutionLevyAmount";
    ContAmtType[ContAmtType["DilutionLevyPercent"] = 8] = "DilutionLevyPercent";
    ContAmtType[ContAmtType["ExitChargeAmount"] = 9] = "ExitChargeAmount";
    ContAmtType[ContAmtType["ExitChargePercent"] = 10] = "ExitChargePercent";
    ContAmtType[ContAmtType["FundBasedRenewalCommissionPercentAKATrailCommission"] = 11] = "FundBasedRenewalCommissionPercentAKATrailCommission";
    ContAmtType[ContAmtType["ProjectedFundValueIEForInvestmentsIntendedToRealiseOrExceedASpecificFutureValue"] = 12] = "ProjectedFundValueIEForInvestmentsIntendedToRealiseOrExceedASpecificFutureValue";
    ContAmtType[ContAmtType["FundBasedRenewalCommissionAmountBasedOnOrderValue"] = 13] = "FundBasedRenewalCommissionAmountBasedOnOrderValue";
    ContAmtType[ContAmtType["FundBasedRenewalCommissionAmountBasedOnProjectedFundValue"] = 14] = "FundBasedRenewalCommissionAmountBasedOnProjectedFundValue";
    ContAmtType[ContAmtType["NetSettlementAmount"] = 15] = "NetSettlementAmount";
})(ContAmtType = exports.ContAmtType || (exports.ContAmtType = {}));
var OwnerType;
(function (OwnerType) {
    OwnerType[OwnerType["IndividualInvestor"] = 1] = "IndividualInvestor";
    OwnerType[OwnerType["PublicCompany"] = 2] = "PublicCompany";
    OwnerType[OwnerType["PrivateCompany"] = 3] = "PrivateCompany";
    OwnerType[OwnerType["IndividualTrustee"] = 4] = "IndividualTrustee";
    OwnerType[OwnerType["CompanyTrustee"] = 5] = "CompanyTrustee";
    OwnerType[OwnerType["PensionPlan"] = 6] = "PensionPlan";
    OwnerType[OwnerType["CustodianUnderGiftsToMinorsAct"] = 7] = "CustodianUnderGiftsToMinorsAct";
    OwnerType[OwnerType["Trusts"] = 8] = "Trusts";
    OwnerType[OwnerType["Fiduciaries"] = 9] = "Fiduciaries";
    OwnerType[OwnerType["NetworkingSubAccount"] = 10] = "NetworkingSubAccount";
    OwnerType[OwnerType["NonProfitOrganization"] = 11] = "NonProfitOrganization";
    OwnerType[OwnerType["CorporateBody"] = 12] = "CorporateBody";
    OwnerType[OwnerType["Nominee"] = 13] = "Nominee";
    OwnerType[OwnerType["InstitutionalCustomer"] = 14] = "InstitutionalCustomer";
    OwnerType[OwnerType["Combined"] = 15] = "Combined";
    OwnerType[OwnerType["MemberFirmEmployeeOrAssociatedPerson"] = 16] = "MemberFirmEmployeeOrAssociatedPerson";
    OwnerType[OwnerType["MarketMakingAccount"] = 17] = "MarketMakingAccount";
    OwnerType[OwnerType["ProprietaryAccount"] = 18] = "ProprietaryAccount";
    OwnerType[OwnerType["NonBrokerDealer"] = 19] = "NonBrokerDealer";
    OwnerType[OwnerType["UnknownBeneficialOwnerType"] = 20] = "UnknownBeneficialOwnerType";
    OwnerType[OwnerType["ErrorAccountOfFirm"] = 21] = "ErrorAccountOfFirm";
})(OwnerType = exports.OwnerType || (exports.OwnerType = {}));
var NestedPartyIDSource;
(function (NestedPartyIDSource) {
    NestedPartyIDSource["KoreanInvestorId"] = "1";
    NestedPartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    NestedPartyIDSource["TaiwaneseTradingAcct"] = "3";
    NestedPartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    NestedPartyIDSource["ChineseInvestorId"] = "5";
    NestedPartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    NestedPartyIDSource["UsSocialSecurityNumber"] = "7";
    NestedPartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    NestedPartyIDSource["AustralianBusinessNumber"] = "9";
    NestedPartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    NestedPartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    NestedPartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    NestedPartyIDSource["ProprietaryCustomCode"] = "D";
    NestedPartyIDSource["IsoCountryCode"] = "E";
    NestedPartyIDSource["AustralianTaxFileNumber"] = "A";
    NestedPartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    NestedPartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    NestedPartyIDSource["TaxId"] = "J";
    NestedPartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    NestedPartyIDSource["AustralianCompanyNumber"] = "K";
    NestedPartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    NestedPartyIDSource["CftcReportingFirmIdentifier"] = "M";
    NestedPartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    NestedPartyIDSource["InterimIdentifier"] = "O";
    NestedPartyIDSource["ShortCodeIdentifier"] = "P";
    NestedPartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(NestedPartyIDSource = exports.NestedPartyIDSource || (exports.NestedPartyIDSource = {}));
var OrderCapacity;
(function (OrderCapacity) {
    OrderCapacity["Agency"] = "A";
    OrderCapacity["Proprietary"] = "G";
    OrderCapacity["Individual"] = "I";
    OrderCapacity["Principal"] = "P";
    OrderCapacity["RisklessPrincipal"] = "R";
    OrderCapacity["AgentForOtherMember"] = "W";
    OrderCapacity["MixedCapacity"] = "M";
})(OrderCapacity = exports.OrderCapacity || (exports.OrderCapacity = {}));
var OrderRestrictions;
(function (OrderRestrictions) {
    OrderRestrictions["ProgramTrade"] = "1";
    OrderRestrictions["IndexArbitrage"] = "2";
    OrderRestrictions["NonIndexArbitrage"] = "3";
    OrderRestrictions["CompetingMarketMaker"] = "4";
    OrderRestrictions["ActingAsMarketMakerOrSpecialistInTheSecurity"] = "5";
    OrderRestrictions["ActingAsMarketMakerOrSpecialistInTheUnderlyingSecurityOfADerivativeSecurity"] = "6";
    OrderRestrictions["ForeignEntityOfForeignGovernmentOrRegulatoryJurisdiction"] = "7";
    OrderRestrictions["ExternalMarketParticipant"] = "8";
    OrderRestrictions["ExternalInterConnectedMarketLinkage"] = "9";
    OrderRestrictions["RisklessArbitrage"] = "A";
    OrderRestrictions["IssuerHolding"] = "B";
    OrderRestrictions["IssuePriceStabilization"] = "C";
    OrderRestrictions["NonAlgorithmic"] = "D";
    OrderRestrictions["Algorithmic"] = "E";
    OrderRestrictions["Cross"] = "F";
    OrderRestrictions["InsiderAccount"] = "G";
    OrderRestrictions["SignificantShareholder"] = "H";
    OrderRestrictions["NormalCourseIssuerBidNcib"] = "I";
})(OrderRestrictions = exports.OrderRestrictions || (exports.OrderRestrictions = {}));
var MassCancelRequestType;
(function (MassCancelRequestType) {
    MassCancelRequestType["CancelOrdersForASecurity"] = "1";
    MassCancelRequestType["CancelOrdersForAnUnderlyingSecurity"] = "2";
    MassCancelRequestType["CancelOrdersForAProduct"] = "3";
    MassCancelRequestType["CancelOrdersForACfiCode"] = "4";
    MassCancelRequestType["CancelOrdersForASecurityType"] = "5";
    MassCancelRequestType["CancelOrdersForATradingSession"] = "6";
    MassCancelRequestType["CancelAllOrders"] = "7";
    MassCancelRequestType["CancelOrdersForAMarket"] = "8";
    MassCancelRequestType["CancelOrdersForAMarketSegment"] = "9";
    MassCancelRequestType["CancelOrdersForASecurityGroup"] = "A";
    MassCancelRequestType["CancelForSecurityIssuer"] = "B";
    MassCancelRequestType["CancelForIssuerOfUnderlyingSecurity"] = "C";
})(MassCancelRequestType = exports.MassCancelRequestType || (exports.MassCancelRequestType = {}));
var MassCancelResponse;
(function (MassCancelResponse) {
    MassCancelResponse["CancelRequestRejectedSeeMassCancelRejectReason532"] = "0";
    MassCancelResponse["CancelOrdersForASecurity"] = "1";
    MassCancelResponse["CancelOrdersForAnUnderlyingSecurity"] = "2";
    MassCancelResponse["CancelOrdersForAProduct"] = "3";
    MassCancelResponse["CancelOrdersForACfiCode"] = "4";
    MassCancelResponse["CancelOrdersForASecurityType"] = "5";
    MassCancelResponse["CancelOrdersForATradingSession"] = "6";
    MassCancelResponse["CancelAllOrders"] = "7";
    MassCancelResponse["CancelOrdersForAMarket"] = "8";
    MassCancelResponse["CancelOrdersForAMarketSegment"] = "9";
    MassCancelResponse["CancelOrdersForASecurityGroup"] = "A";
    MassCancelResponse["CancelOrdersForASecuritiesIssuer"] = "B";
    MassCancelResponse["CancelOrdersForIssuerOfUnderlyingSecurity"] = "C";
})(MassCancelResponse = exports.MassCancelResponse || (exports.MassCancelResponse = {}));
var MassCancelRejectReason;
(function (MassCancelRejectReason) {
    MassCancelRejectReason[MassCancelRejectReason["MassCancelNotSupported"] = 0] = "MassCancelNotSupported";
    MassCancelRejectReason[MassCancelRejectReason["InvalidOrUnknownSecurity"] = 1] = "InvalidOrUnknownSecurity";
    MassCancelRejectReason[MassCancelRejectReason["InvalidOrUnkownUnderlyingSecurity"] = 2] = "InvalidOrUnkownUnderlyingSecurity";
    MassCancelRejectReason[MassCancelRejectReason["InvalidOrUnknownProduct"] = 3] = "InvalidOrUnknownProduct";
    MassCancelRejectReason[MassCancelRejectReason["InvalidOrUnknownCfiCode"] = 4] = "InvalidOrUnknownCfiCode";
    MassCancelRejectReason[MassCancelRejectReason["InvalidOrUnknownSecurityType"] = 5] = "InvalidOrUnknownSecurityType";
    MassCancelRejectReason[MassCancelRejectReason["InvalidOrUnknownTradingSession"] = 6] = "InvalidOrUnknownTradingSession";
    MassCancelRejectReason[MassCancelRejectReason["InvalidOrUnknownMarket"] = 7] = "InvalidOrUnknownMarket";
    MassCancelRejectReason[MassCancelRejectReason["InvalidOrUnkownMarketSegment"] = 8] = "InvalidOrUnkownMarketSegment";
    MassCancelRejectReason[MassCancelRejectReason["InvalidOrUnknownSecurityGroup"] = 9] = "InvalidOrUnknownSecurityGroup";
    MassCancelRejectReason[MassCancelRejectReason["InvalidOrUnknownSecurityIssuer"] = 10] = "InvalidOrUnknownSecurityIssuer";
    MassCancelRejectReason[MassCancelRejectReason["InvalidOrUnknownIssuerOfUnderlyingSecurity"] = 11] = "InvalidOrUnknownIssuerOfUnderlyingSecurity";
    MassCancelRejectReason[MassCancelRejectReason["Other"] = 99] = "Other";
})(MassCancelRejectReason = exports.MassCancelRejectReason || (exports.MassCancelRejectReason = {}));
var QuoteType;
(function (QuoteType) {
    QuoteType[QuoteType["Indicative"] = 0] = "Indicative";
    QuoteType[QuoteType["Tradeable"] = 1] = "Tradeable";
    QuoteType[QuoteType["RestrictedTradeable"] = 2] = "RestrictedTradeable";
    QuoteType[QuoteType["CounterTradeable"] = 3] = "CounterTradeable";
    QuoteType[QuoteType["InitiallyTradeable"] = 4] = "InitiallyTradeable";
})(QuoteType = exports.QuoteType || (exports.QuoteType = {}));
var NestedPartyRole;
(function (NestedPartyRole) {
    NestedPartyRole[NestedPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    NestedPartyRole[NestedPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    NestedPartyRole[NestedPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    NestedPartyRole[NestedPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    NestedPartyRole[NestedPartyRole["InvestorId"] = 5] = "InvestorId";
    NestedPartyRole[NestedPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    NestedPartyRole[NestedPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    NestedPartyRole[NestedPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    NestedPartyRole[NestedPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    NestedPartyRole[NestedPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    NestedPartyRole[NestedPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    NestedPartyRole[NestedPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    NestedPartyRole[NestedPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    NestedPartyRole[NestedPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    NestedPartyRole[NestedPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    NestedPartyRole[NestedPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    NestedPartyRole[NestedPartyRole["ContraFirm"] = 17] = "ContraFirm";
    NestedPartyRole[NestedPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    NestedPartyRole[NestedPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    NestedPartyRole[NestedPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    NestedPartyRole[NestedPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    NestedPartyRole[NestedPartyRole["Exchange"] = 22] = "Exchange";
    NestedPartyRole[NestedPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    NestedPartyRole[NestedPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    NestedPartyRole[NestedPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    NestedPartyRole[NestedPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    NestedPartyRole[NestedPartyRole["Custodian"] = 28] = "Custodian";
    NestedPartyRole[NestedPartyRole["Intermediary"] = 29] = "Intermediary";
    NestedPartyRole[NestedPartyRole["Agent"] = 30] = "Agent";
    NestedPartyRole[NestedPartyRole["SubCustodian"] = 31] = "SubCustodian";
    NestedPartyRole[NestedPartyRole["Beneficiary"] = 32] = "Beneficiary";
    NestedPartyRole[NestedPartyRole["InterestedParty"] = 33] = "InterestedParty";
    NestedPartyRole[NestedPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    NestedPartyRole[NestedPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    NestedPartyRole[NestedPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    NestedPartyRole[NestedPartyRole["ContraTrader"] = 37] = "ContraTrader";
    NestedPartyRole[NestedPartyRole["PositionAccount"] = 38] = "PositionAccount";
    NestedPartyRole[NestedPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    NestedPartyRole[NestedPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    NestedPartyRole[NestedPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    NestedPartyRole[NestedPartyRole["ContraExchange"] = 42] = "ContraExchange";
    NestedPartyRole[NestedPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    NestedPartyRole[NestedPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    NestedPartyRole[NestedPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    NestedPartyRole[NestedPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    NestedPartyRole[NestedPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    NestedPartyRole[NestedPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    NestedPartyRole[NestedPartyRole["AssetManager"] = 49] = "AssetManager";
    NestedPartyRole[NestedPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    NestedPartyRole[NestedPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    NestedPartyRole[NestedPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    NestedPartyRole[NestedPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    NestedPartyRole[NestedPartyRole["SenderLocation"] = 54] = "SenderLocation";
    NestedPartyRole[NestedPartyRole["SessionId"] = 55] = "SessionId";
    NestedPartyRole[NestedPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    NestedPartyRole[NestedPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    NestedPartyRole[NestedPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    NestedPartyRole[NestedPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    NestedPartyRole[NestedPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    NestedPartyRole[NestedPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    NestedPartyRole[NestedPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    NestedPartyRole[NestedPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    NestedPartyRole[NestedPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    NestedPartyRole[NestedPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    NestedPartyRole[NestedPartyRole["MarketMaker"] = 66] = "MarketMaker";
    NestedPartyRole[NestedPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    NestedPartyRole[NestedPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    NestedPartyRole[NestedPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    NestedPartyRole[NestedPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    NestedPartyRole[NestedPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    NestedPartyRole[NestedPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    NestedPartyRole[NestedPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    NestedPartyRole[NestedPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    NestedPartyRole[NestedPartyRole["LocationId"] = 75] = "LocationId";
    NestedPartyRole[NestedPartyRole["DeskId"] = 76] = "DeskId";
    NestedPartyRole[NestedPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    NestedPartyRole[NestedPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    NestedPartyRole[NestedPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    NestedPartyRole[NestedPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    NestedPartyRole[NestedPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    NestedPartyRole[NestedPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    NestedPartyRole[NestedPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    NestedPartyRole[NestedPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    NestedPartyRole[NestedPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    NestedPartyRole[NestedPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    NestedPartyRole[NestedPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    NestedPartyRole[NestedPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    NestedPartyRole[NestedPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    NestedPartyRole[NestedPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    NestedPartyRole[NestedPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    NestedPartyRole[NestedPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    NestedPartyRole[NestedPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    NestedPartyRole[NestedPartyRole["AwayMarket"] = 94] = "AwayMarket";
    NestedPartyRole[NestedPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    NestedPartyRole[NestedPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    NestedPartyRole[NestedPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    NestedPartyRole[NestedPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    NestedPartyRole[NestedPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    NestedPartyRole[NestedPartyRole["MarginAccount"] = 100] = "MarginAccount";
    NestedPartyRole[NestedPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    NestedPartyRole[NestedPartyRole["DataRepository"] = 102] = "DataRepository";
    NestedPartyRole[NestedPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    NestedPartyRole[NestedPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    NestedPartyRole[NestedPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    NestedPartyRole[NestedPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    NestedPartyRole[NestedPartyRole["Correspondent"] = 107] = "Correspondent";
    NestedPartyRole[NestedPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    NestedPartyRole[NestedPartyRole["Borrower"] = 110] = "Borrower";
    NestedPartyRole[NestedPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    NestedPartyRole[NestedPartyRole["Guarantor"] = 112] = "Guarantor";
    NestedPartyRole[NestedPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    NestedPartyRole[NestedPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    NestedPartyRole[NestedPartyRole["HedgingParty"] = 115] = "HedgingParty";
    NestedPartyRole[NestedPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    NestedPartyRole[NestedPartyRole["SalesPerson"] = 117] = "SalesPerson";
    NestedPartyRole[NestedPartyRole["Operator"] = 118] = "Operator";
    NestedPartyRole[NestedPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    NestedPartyRole[NestedPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    NestedPartyRole[NestedPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    NestedPartyRole[NestedPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(NestedPartyRole = exports.NestedPartyRole || (exports.NestedPartyRole = {}));
var CashMargin;
(function (CashMargin) {
    CashMargin["Cash"] = "1";
    CashMargin["MarginOpen"] = "2";
    CashMargin["MarginClose"] = "3";
})(CashMargin = exports.CashMargin || (exports.CashMargin = {}));
var Scope;
(function (Scope) {
    Scope["LocalMarketExchangeEcnAts"] = "1";
    Scope["National"] = "2";
    Scope["Global"] = "3";
})(Scope = exports.Scope || (exports.Scope = {}));
var MDImplicitDelete;
(function (MDImplicitDelete) {
    MDImplicitDelete["ServerMustSendAnExplicitDeleteForBidsOrOffersFallingOutsideTheRequestedMarketDepthOfTheRequest"] = "N";
    MDImplicitDelete["ClientHasResponsibilityForImplicitlyDeletingBidsOrOffersFallingOutsideTheMarketDepthOfTheRequest"] = "Y";
})(MDImplicitDelete = exports.MDImplicitDelete || (exports.MDImplicitDelete = {}));
var CrossType;
(function (CrossType) {
    CrossType[CrossType["AllOrNoneCross"] = 1] = "AllOrNoneCross";
    CrossType[CrossType["ImmediateOrCancelCross"] = 2] = "ImmediateOrCancelCross";
    CrossType[CrossType["OneSidedCross"] = 3] = "OneSidedCross";
    CrossType[CrossType["CrossExecutedAgainstBook"] = 4] = "CrossExecutedAgainstBook";
    CrossType[CrossType["BasisCross"] = 5] = "BasisCross";
    CrossType[CrossType["ContingentCross"] = 6] = "ContingentCross";
    CrossType[CrossType["VolumeWeightedAveragePriceVwapCross"] = 7] = "VolumeWeightedAveragePriceVwapCross";
    CrossType[CrossType["SpecialTradingSessionCross"] = 8] = "SpecialTradingSessionCross";
    CrossType[CrossType["CustomerToCustomerCross"] = 9] = "CustomerToCustomerCross";
})(CrossType = exports.CrossType || (exports.CrossType = {}));
var CrossPrioritization;
(function (CrossPrioritization) {
    CrossPrioritization[CrossPrioritization["None"] = 0] = "None";
    CrossPrioritization[CrossPrioritization["BuySideIsPrioritized"] = 1] = "BuySideIsPrioritized";
    CrossPrioritization[CrossPrioritization["SellSideIsPrioritized"] = 2] = "SellSideIsPrioritized";
})(CrossPrioritization = exports.CrossPrioritization || (exports.CrossPrioritization = {}));
var SecurityListRequestType;
(function (SecurityListRequestType) {
    SecurityListRequestType[SecurityListRequestType["Symbol"] = 0] = "Symbol";
    SecurityListRequestType[SecurityListRequestType["SecurityTypeAndOrCfiCode"] = 1] = "SecurityTypeAndOrCfiCode";
    SecurityListRequestType[SecurityListRequestType["Product"] = 2] = "Product";
    SecurityListRequestType[SecurityListRequestType["TradingSessionId"] = 3] = "TradingSessionId";
    SecurityListRequestType[SecurityListRequestType["AllSecurities"] = 4] = "AllSecurities";
    SecurityListRequestType[SecurityListRequestType["MarketIdOrMarketIdMarketSegmentId"] = 5] = "MarketIdOrMarketIdMarketSegmentId";
})(SecurityListRequestType = exports.SecurityListRequestType || (exports.SecurityListRequestType = {}));
var SecurityRequestResult;
(function (SecurityRequestResult) {
    SecurityRequestResult[SecurityRequestResult["ValidRequest"] = 0] = "ValidRequest";
    SecurityRequestResult[SecurityRequestResult["InvalidOrUnsupportedRequest"] = 1] = "InvalidOrUnsupportedRequest";
    SecurityRequestResult[SecurityRequestResult["NoInstrumentsFoundThatMatchSelectionCriteria"] = 2] = "NoInstrumentsFoundThatMatchSelectionCriteria";
    SecurityRequestResult[SecurityRequestResult["NotAuthorizedToRetrieveInstrumentData"] = 3] = "NotAuthorizedToRetrieveInstrumentData";
    SecurityRequestResult[SecurityRequestResult["InstrumentDataTemporarilyUnavailable"] = 4] = "InstrumentDataTemporarilyUnavailable";
    SecurityRequestResult[SecurityRequestResult["RequestForInstrumentDataNotSupported"] = 5] = "RequestForInstrumentDataNotSupported";
})(SecurityRequestResult = exports.SecurityRequestResult || (exports.SecurityRequestResult = {}));
var MultiLegRptTypeReq;
(function (MultiLegRptTypeReq) {
    MultiLegRptTypeReq[MultiLegRptTypeReq["ReportByMulitlegSecurityOnlyDoNotReportLegs"] = 0] = "ReportByMulitlegSecurityOnlyDoNotReportLegs";
    MultiLegRptTypeReq[MultiLegRptTypeReq["ReportByMultilegSecurityAndByInstrumentLegsBelongingToTheMultilegSecurity"] = 1] = "ReportByMultilegSecurityAndByInstrumentLegsBelongingToTheMultilegSecurity";
    MultiLegRptTypeReq[MultiLegRptTypeReq["ReportByInstrumentLegsBelongingToTheMultilegSecurityOnlyDoNotReportStatusOfMultilegSecurity"] = 2] = "ReportByInstrumentLegsBelongingToTheMultilegSecurityOnlyDoNotReportStatusOfMultilegSecurity";
})(MultiLegRptTypeReq = exports.MultiLegRptTypeReq || (exports.MultiLegRptTypeReq = {}));
var LegPositionEffect;
(function (LegPositionEffect) {
    LegPositionEffect["Close"] = "C";
    LegPositionEffect["Fifo"] = "F";
    LegPositionEffect["Open"] = "O";
    LegPositionEffect["Rolled"] = "R";
    LegPositionEffect["CloseButNotifyOnOpen"] = "N";
    LegPositionEffect["Default"] = "D";
})(LegPositionEffect = exports.LegPositionEffect || (exports.LegPositionEffect = {}));
var LegCoveredOrUncovered;
(function (LegCoveredOrUncovered) {
    LegCoveredOrUncovered[LegCoveredOrUncovered["Covered"] = 0] = "Covered";
    LegCoveredOrUncovered[LegCoveredOrUncovered["Uncovered"] = 1] = "Uncovered";
})(LegCoveredOrUncovered = exports.LegCoveredOrUncovered || (exports.LegCoveredOrUncovered = {}));
var TradSesStatusRejReason;
(function (TradSesStatusRejReason) {
    TradSesStatusRejReason[TradSesStatusRejReason["UnknownOrInvalidTradingSessionId"] = 1] = "UnknownOrInvalidTradingSessionId";
    TradSesStatusRejReason[TradSesStatusRejReason["Other"] = 99] = "Other";
})(TradSesStatusRejReason = exports.TradSesStatusRejReason || (exports.TradSesStatusRejReason = {}));
var TradeRequestType;
(function (TradeRequestType) {
    TradeRequestType[TradeRequestType["AllTrades"] = 0] = "AllTrades";
    TradeRequestType[TradeRequestType["MatchedTradesMatchingCriteriaProvidedOnRequestPartiesExecIdTradeIdOrderIdInstrumentInputSourceEtc"] = 1] = "MatchedTradesMatchingCriteriaProvidedOnRequestPartiesExecIdTradeIdOrderIdInstrumentInputSourceEtc";
    TradeRequestType[TradeRequestType["UnmatchedTradesThatMatchCriteria"] = 2] = "UnmatchedTradesThatMatchCriteria";
    TradeRequestType[TradeRequestType["UnreportedTradesThatMatchCriteria"] = 3] = "UnreportedTradesThatMatchCriteria";
    TradeRequestType[TradeRequestType["AdvisoriesThatMatchCriteria"] = 4] = "AdvisoriesThatMatchCriteria";
})(TradeRequestType = exports.TradeRequestType || (exports.TradeRequestType = {}));
var PreviouslyReported;
(function (PreviouslyReported) {
    PreviouslyReported["NotReportedToCounterpartyOrMarket"] = "N";
    PreviouslyReported["PreviouslyReportedToCounterpartyOrMarket"] = "Y";
})(PreviouslyReported = exports.PreviouslyReported || (exports.PreviouslyReported = {}));
var MatchStatus;
(function (MatchStatus) {
    MatchStatus["ComparedMatchedOrAffirmed"] = "0";
    MatchStatus["UncomparedUnmatchedOrUnaffirmed"] = "1";
    MatchStatus["AdvisoryOrAlert"] = "2";
})(MatchStatus = exports.MatchStatus || (exports.MatchStatus = {}));
var MatchType;
(function (MatchType) {
    MatchType["OnePartyTradeReportPrivatelyNegotiatedTrade"] = "1";
    MatchType["TwoPartyTradeReportPrivatelyNegotiatedTrade"] = "2";
    MatchType["ConfirmedTradeReportReportingFromRecognizedMarkets"] = "3";
    MatchType["AutoMatch"] = "4";
    MatchType["CrossAuction"] = "5";
    MatchType["CounterOrderSelection"] = "6";
    MatchType["CallAuction"] = "7";
    MatchType["IssuingBuyBackAuction"] = "8";
    MatchType["SystematicInternaliserSi"] = "9";
    MatchType["AutoMatchWithLastLook"] = "10";
    MatchType["CrossAuctionWithLastLook"] = "11";
    MatchType["ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusFourBadgesAndExecutionTimeWithinTwoMinuteWindow"] = "A1";
    MatchType["ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusFourBadges"] = "A2";
    MatchType["ActAcceptedTrade"] = "M3";
    MatchType["ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusTwoBadgesAndExecutionTimeWithinTwoMinuteWindow"] = "A3";
    MatchType["ActDefaultTrade"] = "M4";
    MatchType["ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusTwoBadges"] = "A4";
    MatchType["ActDefaultAfterM2"] = "M5";
    MatchType["ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusExecutionTimeWithinTwoMinuteWindow"] = "A5";
    MatchType["ActM6Match"] = "M6";
    MatchType["ComparedRecordsResultingFromStampedAdvisoriesOrSpecialistAcceptsPairOffs"] = "AQ";
    MatchType["SummarizedMatchUsingA1ExactMatchCriteriaExceptQuantityIsSummaried"] = "S1";
    MatchType["SummarizedMatchUsingA2ExactMatchCriteriaExceptQuantityIsSummarized"] = "S2";
    MatchType["SummarizedMatchUsingA3ExactMatchCriteriaExceptQuantityIsSummarized"] = "S3";
    MatchType["SummarizedMatchUsingA4ExactMatchCriteriaExceptQuantityIsSummarized"] = "S4";
    MatchType["SummarizedMatchUsingA5ExactMatchCriteriaExceptQuantityIsSummarized"] = "S5";
    MatchType["ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorMinusBadgesAndTimesActM1Match"] = "M1";
    MatchType["SummarizedMatchMinusBadgesAndTimesActM2Match"] = "M2";
    MatchType["OcsLockedInNonAct"] = "MT";
})(MatchType = exports.MatchType || (exports.MatchType = {}));
var OddLot;
(function (OddLot) {
    OddLot["TreatAsRoundLotDefault"] = "N";
    OddLot["TreatAsOddLot"] = "Y";
})(OddLot = exports.OddLot || (exports.OddLot = {}));
var ClearingInstruction;
(function (ClearingInstruction) {
    ClearingInstruction[ClearingInstruction["ProcessNormally"] = 0] = "ProcessNormally";
    ClearingInstruction[ClearingInstruction["ExcludeFromAllNetting"] = 1] = "ExcludeFromAllNetting";
    ClearingInstruction[ClearingInstruction["BilateralNettingOnly"] = 2] = "BilateralNettingOnly";
    ClearingInstruction[ClearingInstruction["ExClearing"] = 3] = "ExClearing";
    ClearingInstruction[ClearingInstruction["SpecialTrade"] = 4] = "SpecialTrade";
    ClearingInstruction[ClearingInstruction["MultilateralNetting"] = 5] = "MultilateralNetting";
    ClearingInstruction[ClearingInstruction["ClearAgainstCentralCounterparty"] = 6] = "ClearAgainstCentralCounterparty";
    ClearingInstruction[ClearingInstruction["ExcludeFromCentralCounterparty"] = 7] = "ExcludeFromCentralCounterparty";
    ClearingInstruction[ClearingInstruction["ManualModePrePostingAndOrPreGiveup"] = 8] = "ManualModePrePostingAndOrPreGiveup";
    ClearingInstruction[ClearingInstruction["AutomaticPostingModeTradePostingToThePositionAccountNumberSpecified"] = 9] = "AutomaticPostingModeTradePostingToThePositionAccountNumberSpecified";
    ClearingInstruction[ClearingInstruction["AutomaticGiveUpModeTradeGiveUpToTheGiveUpDestinationNumberSpecified"] = 10] = "AutomaticGiveUpModeTradeGiveUpToTheGiveUpDestinationNumberSpecified";
    ClearingInstruction[ClearingInstruction["QualifiedServiceRepresentativeQsr"] = 11] = "QualifiedServiceRepresentativeQsr";
    ClearingInstruction[ClearingInstruction["CustomerTrade"] = 12] = "CustomerTrade";
    ClearingInstruction[ClearingInstruction["SelfClearing"] = 13] = "SelfClearing";
    ClearingInstruction[ClearingInstruction["BuyIn"] = 14] = "BuyIn";
})(ClearingInstruction = exports.ClearingInstruction || (exports.ClearingInstruction = {}));
var AccountType;
(function (AccountType) {
    AccountType[AccountType["AccountIsCarriedOnCustomerSideOfTheBooks"] = 1] = "AccountIsCarriedOnCustomerSideOfTheBooks";
    AccountType[AccountType["AccountIsCarriedOnNonCustomerSideOfBooks"] = 2] = "AccountIsCarriedOnNonCustomerSideOfBooks";
    AccountType[AccountType["HouseTrader"] = 3] = "HouseTrader";
    AccountType[AccountType["FloorTrader"] = 4] = "FloorTrader";
    AccountType[AccountType["AccountIsCarriedOnNonCustomerSideOfBooksAndIsCrossMargined"] = 6] = "AccountIsCarriedOnNonCustomerSideOfBooksAndIsCrossMargined";
    AccountType[AccountType["AccountIsHouseTraderAndIsCrossMargined"] = 7] = "AccountIsHouseTraderAndIsCrossMargined";
    AccountType[AccountType["JointBackOfficeAccountJbo"] = 8] = "JointBackOfficeAccountJbo";
    AccountType[AccountType["EquitiesSpecialist"] = 9] = "EquitiesSpecialist";
    AccountType[AccountType["OptionsMarketMaker"] = 10] = "OptionsMarketMaker";
    AccountType[AccountType["OptionsFirmAccount"] = 11] = "OptionsFirmAccount";
})(AccountType = exports.AccountType || (exports.AccountType = {}));
var CustOrderCapacity;
(function (CustOrderCapacity) {
    CustOrderCapacity[CustOrderCapacity["MemberTradingForTheirOwnAccount"] = 1] = "MemberTradingForTheirOwnAccount";
    CustOrderCapacity[CustOrderCapacity["ClearingFirmTradingForItsProprietaryAccount"] = 2] = "ClearingFirmTradingForItsProprietaryAccount";
    CustOrderCapacity[CustOrderCapacity["MemberTradingForAnotherMember"] = 3] = "MemberTradingForAnotherMember";
    CustOrderCapacity[CustOrderCapacity["AllOther"] = 4] = "AllOther";
    CustOrderCapacity[CustOrderCapacity["RetailCustomer"] = 5] = "RetailCustomer";
})(CustOrderCapacity = exports.CustOrderCapacity || (exports.CustOrderCapacity = {}));
var MassStatusReqType;
(function (MassStatusReqType) {
    MassStatusReqType[MassStatusReqType["StatusForOrdersForASecurity"] = 1] = "StatusForOrdersForASecurity";
    MassStatusReqType[MassStatusReqType["StatusForOrdersForAnUnderlyingSecurity"] = 2] = "StatusForOrdersForAnUnderlyingSecurity";
    MassStatusReqType[MassStatusReqType["StatusForOrdersForAProduct"] = 3] = "StatusForOrdersForAProduct";
    MassStatusReqType[MassStatusReqType["StatusForOrdersForACfiCode"] = 4] = "StatusForOrdersForACfiCode";
    MassStatusReqType[MassStatusReqType["StatusForOrdersForASecurityType"] = 5] = "StatusForOrdersForASecurityType";
    MassStatusReqType[MassStatusReqType["StatusForOrdersForATradingSession"] = 6] = "StatusForOrdersForATradingSession";
    MassStatusReqType[MassStatusReqType["StatusForAllOrders"] = 7] = "StatusForAllOrders";
    MassStatusReqType[MassStatusReqType["StatusForOrdersForAPartyId"] = 8] = "StatusForOrdersForAPartyId";
    MassStatusReqType[MassStatusReqType["StatusForSecurityIssuer"] = 9] = "StatusForSecurityIssuer";
    MassStatusReqType[MassStatusReqType["StatusForIssuerOfUnderlyingSecurity"] = 10] = "StatusForIssuerOfUnderlyingSecurity";
})(MassStatusReqType = exports.MassStatusReqType || (exports.MassStatusReqType = {}));
var LegSettlType;
(function (LegSettlType) {
    LegSettlType["RegularFxSpotSettlementT1OrT2DependingOnCurrency"] = "0";
    LegSettlType["CashTodT0"] = "1";
    LegSettlType["NextDayTomT1"] = "2";
    LegSettlType["T2"] = "3";
    LegSettlType["T3"] = "4";
    LegSettlType["T4"] = "5";
    LegSettlType["Future"] = "6";
    LegSettlType["WhenAndIfIssued"] = "7";
    LegSettlType["SellersOption"] = "8";
    LegSettlType["T5"] = "9";
    LegSettlType["BrokenDate"] = "B";
    LegSettlType["FxSpotNextSettlementSpot1AkaNextDay"] = "C";
})(LegSettlType = exports.LegSettlType || (exports.LegSettlType = {}));
var DayBookingInst;
(function (DayBookingInst) {
    DayBookingInst["CanTriggerBookingWithoutReferenceToTheOrderInitiatorAuto"] = "0";
    DayBookingInst["SpeakWithOrderInitiatorBeforeBookingSpeakFirst"] = "1";
    DayBookingInst["Accumulate"] = "2";
})(DayBookingInst = exports.DayBookingInst || (exports.DayBookingInst = {}));
var BookingUnit;
(function (BookingUnit) {
    BookingUnit["EachPartialExecutionIsABookableUnit"] = "0";
    BookingUnit["AggregatePartialExecutionsOnThisOrderAndBookOneTradePerOrder"] = "1";
    BookingUnit["AggregateExecutionsForThisSymbolSideAndSettlementDate"] = "2";
})(BookingUnit = exports.BookingUnit || (exports.BookingUnit = {}));
var PreallocMethod;
(function (PreallocMethod) {
    PreallocMethod["ProRata"] = "0";
    PreallocMethod["DoNotProRataDiscussFirst"] = "1";
})(PreallocMethod = exports.PreallocMethod || (exports.PreallocMethod = {}));
var LegSymbolSfx;
(function (LegSymbolSfx) {
    LegSymbolSfx["EucpWithLumpSumInterestRatherThanDiscountPrice"] = "CD";
    LegSymbolSfx["WhenIssuedForASecurityToBeReissuedUnderAnOldCusipOrIsin"] = "WI";
})(LegSymbolSfx = exports.LegSymbolSfx || (exports.LegSymbolSfx = {}));
var LegSecurityIDSource;
(function (LegSecurityIDSource) {
    LegSecurityIDSource["Cusip"] = "1";
    LegSecurityIDSource["Sedol"] = "2";
    LegSecurityIDSource["Quik"] = "3";
    LegSecurityIDSource["IsinNumber"] = "4";
    LegSecurityIDSource["RicCode"] = "5";
    LegSecurityIDSource["IsoCurrencyCode"] = "6";
    LegSecurityIDSource["IsoCountryCode"] = "7";
    LegSecurityIDSource["ExchangeSymbol"] = "8";
    LegSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    LegSecurityIDSource["BloombergSymbol"] = "A";
    LegSecurityIDSource["Wertpapier"] = "B";
    LegSecurityIDSource["Dutch"] = "C";
    LegSecurityIDSource["Valoren"] = "D";
    LegSecurityIDSource["Sicovam"] = "E";
    LegSecurityIDSource["Belgian"] = "F";
    LegSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    LegSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    LegSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    LegSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    LegSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    LegSecurityIDSource["LetterOfCredit"] = "L";
    LegSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    LegSecurityIDSource["MarkitRedEntityClip"] = "N";
    LegSecurityIDSource["MarkitRedPairClip"] = "P";
    LegSecurityIDSource["CftcCommodityCode"] = "Q";
    LegSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    LegSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    LegSecurityIDSource["LegalEntityIdentifier"] = "T";
    LegSecurityIDSource["Synthetic"] = "U";
    LegSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(LegSecurityIDSource = exports.LegSecurityIDSource || (exports.LegSecurityIDSource = {}));
var LegSecurityAltIDSource;
(function (LegSecurityAltIDSource) {
    LegSecurityAltIDSource["Cusip"] = "1";
    LegSecurityAltIDSource["Sedol"] = "2";
    LegSecurityAltIDSource["Quik"] = "3";
    LegSecurityAltIDSource["IsinNumber"] = "4";
    LegSecurityAltIDSource["RicCode"] = "5";
    LegSecurityAltIDSource["IsoCurrencyCode"] = "6";
    LegSecurityAltIDSource["IsoCountryCode"] = "7";
    LegSecurityAltIDSource["ExchangeSymbol"] = "8";
    LegSecurityAltIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    LegSecurityAltIDSource["BloombergSymbol"] = "A";
    LegSecurityAltIDSource["Wertpapier"] = "B";
    LegSecurityAltIDSource["Dutch"] = "C";
    LegSecurityAltIDSource["Valoren"] = "D";
    LegSecurityAltIDSource["Sicovam"] = "E";
    LegSecurityAltIDSource["Belgian"] = "F";
    LegSecurityAltIDSource["CommonClearstreamAndEuroclear"] = "G";
    LegSecurityAltIDSource["ClearingHouseClearingOrganization"] = "H";
    LegSecurityAltIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    LegSecurityAltIDSource["OptionPriceReportingAuthority"] = "J";
    LegSecurityAltIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    LegSecurityAltIDSource["LetterOfCredit"] = "L";
    LegSecurityAltIDSource["MarketplaceAssignedIdentifier"] = "M";
    LegSecurityAltIDSource["MarkitRedEntityClip"] = "N";
    LegSecurityAltIDSource["MarkitRedPairClip"] = "P";
    LegSecurityAltIDSource["CftcCommodityCode"] = "Q";
    LegSecurityAltIDSource["IsdaCommodityReferencePrice"] = "R";
    LegSecurityAltIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    LegSecurityAltIDSource["LegalEntityIdentifier"] = "T";
    LegSecurityAltIDSource["Synthetic"] = "U";
    LegSecurityAltIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(LegSecurityAltIDSource = exports.LegSecurityAltIDSource || (exports.LegSecurityAltIDSource = {}));
var LegProduct;
(function (LegProduct) {
    LegProduct[LegProduct["Agency"] = 1] = "Agency";
    LegProduct[LegProduct["Commodity"] = 2] = "Commodity";
    LegProduct[LegProduct["Corporate"] = 3] = "Corporate";
    LegProduct[LegProduct["Currency"] = 4] = "Currency";
    LegProduct[LegProduct["Equity"] = 5] = "Equity";
    LegProduct[LegProduct["Government"] = 6] = "Government";
    LegProduct[LegProduct["Index"] = 7] = "Index";
    LegProduct[LegProduct["Loan"] = 8] = "Loan";
    LegProduct[LegProduct["Moneymarket"] = 9] = "Moneymarket";
    LegProduct[LegProduct["Mortgage"] = 10] = "Mortgage";
    LegProduct[LegProduct["Municipal"] = 11] = "Municipal";
    LegProduct[LegProduct["Other"] = 12] = "Other";
    LegProduct[LegProduct["Financing"] = 13] = "Financing";
})(LegProduct = exports.LegProduct || (exports.LegProduct = {}));
var LegSecurityType;
(function (LegSecurityType) {
    LegSecurityType["EuroSupranationalCoupons"] = "EUSUPRA";
    LegSecurityType["CorporateBond"] = "CORP";
    LegSecurityType["ForeignExchangeContract"] = "FOR";
    LegSecurityType["CommonStock"] = "CS";
    LegSecurityType["Repurchase"] = "REPO";
    LegSecurityType["BradyBond"] = "BRADY";
    LegSecurityType["TermLoan"] = "TERM";
    LegSecurityType["BankersAcceptance"] = "BA";
    LegSecurityType["AssetBackedSecurities"] = "ABS";
    LegSecurityType["OtherAnticipationNotesBanGanEtc"] = "AN";
    LegSecurityType["MutualFund"] = "MF";
    LegSecurityType["FederalAgencyCoupon"] = "FAC";
    LegSecurityType["CorporatePrivatePlacement"] = "CPP";
    LegSecurityType["PreferredStock"] = "PS";
    LegSecurityType["Forward"] = "FORWARD";
    LegSecurityType["CanadianTreasuryNotes"] = "CAN";
    LegSecurityType["RevolverLoan"] = "RVLV";
    LegSecurityType["BankDepositoryNote"] = "BDN";
    LegSecurityType["CanadianMortgageBonds"] = "CMB";
    LegSecurityType["CertificateOfObligation"] = "COFO";
    LegSecurityType["MultilegInstrument"] = "MLEG";
    LegSecurityType["NonDeliverableForward"] = "FXNDF";
    LegSecurityType["Cap"] = "CAP";
    LegSecurityType["FederalAgencyDiscountNote"] = "FADN";
    LegSecurityType["ConvertibleBond"] = "CB";
    LegSecurityType["CreditDefaultSwap"] = "CDS";
    LegSecurityType["BuySellback"] = "BUYSELL";
    LegSecurityType["CanadianTreasuryBills"] = "CTB";
    LegSecurityType["RevolverTermLoan"] = "RVLVTRM";
    LegSecurityType["BankNotes"] = "BN";
    LegSecurityType["CorpMortgageBackedSecurities"] = "CMBS";
    LegSecurityType["CertificateOfParticipation"] = "COFP";
    LegSecurityType["NoSecurityType"] = "NONE";
    LegSecurityType["FxSpot"] = "FXSPOT";
    LegSecurityType["UsTreasuryNoteDeprecatedValueUseTnote"] = "UST";
    LegSecurityType["PrivateExportFunding"] = "PEF";
    LegSecurityType["DualCurrency"] = "DUAL";
    LegSecurityType["SecuritiesLoan"] = "SECLOAN";
    LegSecurityType["EuroSovereigns"] = "EUSOV";
    LegSecurityType["BridgeLoan"] = "BRIDGE";
    LegSecurityType["BillOfExchanges"] = "BOX";
    LegSecurityType["CollateralizedMortgageObligation"] = "CMO";
    LegSecurityType["GeneralObligationBonds"] = "GO";
    LegSecurityType["FxForward"] = "FXFWD";
    LegSecurityType["Collar"] = "CLLR";
    LegSecurityType["UsTreasuryBillDeprecatedValueUseTbill"] = "USTB";
    LegSecurityType["UsdSupranationalCoupons"] = "SUPRA";
    LegSecurityType["EuroCorporateBond"] = "EUCORP";
    LegSecurityType["SecuritiesPledge"] = "SECPLEDGE";
    LegSecurityType["CanadianProvincialBonds"] = "PROV";
    LegSecurityType["LetterOfCredit"] = "LOFC";
    LegSecurityType["CanadianMoneyMarkets"] = "CAMM";
    LegSecurityType["IoetteMortgage"] = "IET";
    LegSecurityType["MandatoryTender"] = "MT";
    LegSecurityType["FxSwap"] = "FXSWAP";
    LegSecurityType["CommoditySwap"] = "CMDTYSWAP";
    LegSecurityType["EuroCorporateFloatingRateNotes"] = "EUFRN";
    LegSecurityType["TreasuryBillNonUs"] = "TB";
    LegSecurityType["SwingLineFacility"] = "SWING";
    LegSecurityType["CertificateOfDeposit"] = "CD";
    LegSecurityType["MortgageBackedSecurities"] = "MBS";
    LegSecurityType["RevenueAnticipationNote"] = "RAN";
    LegSecurityType["WildcardEntryForUseOnSecurityDefinitionRequest"] = "?";
    LegSecurityType["DeliveryVersusPledge"] = "DVPLDG";
    LegSecurityType["Exotic"] = "EXOTIC";
    LegSecurityType["UsCorporateFloatingRateNotes"] = "FRN";
    LegSecurityType["OptionsOnCombo"] = "OOC";
    LegSecurityType["UsTreasuryBond"] = "TBOND";
    LegSecurityType["DebtorInPossession"] = "DINP";
    LegSecurityType["CallLoans"] = "CL";
    LegSecurityType["MortgageInterestOnly"] = "MIO";
    LegSecurityType["RevenueBonds"] = "REV";
    LegSecurityType["Cash"] = "CASH";
    LegSecurityType["Floor"] = "FLR";
    LegSecurityType["CollateralBasket"] = "COLLBSKT";
    LegSecurityType["IndexedLinked"] = "XLINKD";
    LegSecurityType["InterestStripFromAnyBondOrNote"] = "TINT";
    LegSecurityType["Defaulted"] = "DEFLTED";
    LegSecurityType["CommercialPaper"] = "CP";
    LegSecurityType["MortgagePrincipalOnly"] = "MPO";
    LegSecurityType["SpecialAssessment"] = "SPCLA";
    LegSecurityType["ForwardRateAgreement"] = "FRA";
    LegSecurityType["StructuredNotes"] = "STRUCT";
    LegSecurityType["Future"] = "FUT";
    LegSecurityType["UsTreasuryBill"] = "TBILL";
    LegSecurityType["TreasuryInflationProtectedSecurities"] = "TIPS";
    LegSecurityType["Withdrawn"] = "WITHDRN";
    LegSecurityType["DepositNotes"] = "DN";
    LegSecurityType["MortgagePrivatePlacement"] = "MPP";
    LegSecurityType["SpecialObligation"] = "SPCLO";
    LegSecurityType["YankeeCorporateBond"] = "YANK";
    LegSecurityType["PrincipalStripOfACallableBondOrNote"] = "TCAL";
    LegSecurityType["Replaced"] = "REPLACD";
    LegSecurityType["EuroCertificateOfDeposit"] = "EUCD";
    LegSecurityType["MiscellaneousPassThrough"] = "MPT";
    LegSecurityType["SpecialTax"] = "SPCLT";
    LegSecurityType["DerivativeForward"] = "FWD";
    LegSecurityType["InterestRateSwap"] = "IRS";
    LegSecurityType["PrincipalStripFromANonCallableBondOrNote"] = "TPRN";
    LegSecurityType["Matured"] = "MATURED";
    LegSecurityType["EuroCommercialPaper"] = "EUCP";
    LegSecurityType["Pfandbriefe"] = "PFAND";
    LegSecurityType["TaxAnticipationNote"] = "TAN";
    LegSecurityType["TotalReturnSwap"] = "TRS";
    LegSecurityType["UsTreasuryNote"] = "TNOTE";
    LegSecurityType["AmendedRestated"] = "AMENDED";
    LegSecurityType["LiquidityNote"] = "LQN";
    LegSecurityType["ToBeAnnounced"] = "TBA";
    LegSecurityType["TaxAllocation"] = "TAXA";
    LegSecurityType["LoanLease"] = "LOANLEASE";
    LegSecurityType["Retired"] = "RETIRED";
    LegSecurityType["MediumTermNotes"] = "MTN";
    LegSecurityType["TaxExemptCommercialPaper"] = "TECP";
    LegSecurityType["OptionsOnFutures"] = "OOF";
    LegSecurityType["Overnight"] = "ONITE";
    LegSecurityType["TaxableMunicipalCp"] = "TMCP";
    LegSecurityType["OptionsOnPhysicalUseNotRecommended"] = "OOP";
    LegSecurityType["PromissoryNote"] = "PN";
    LegSecurityType["ShortTermLoanNote"] = "STN";
    LegSecurityType["TaxRevenueAnticipationNote"] = "TRAN";
    LegSecurityType["Option"] = "OPT";
    LegSecurityType["PlazosFijos"] = "PZFJ";
    LegSecurityType["VariableRateDemandNote"] = "VRDN";
    LegSecurityType["SecuredLiquidityNote"] = "SLQN";
    LegSecurityType["Warrant"] = "WAR";
    LegSecurityType["SpotForward"] = "SPOTFWD";
    LegSecurityType["TimeDeposit"] = "TD";
    LegSecurityType["SwapOption"] = "SWAPTION";
    LegSecurityType["Transmission"] = "XMISSION";
    LegSecurityType["TermLiquidityNote"] = "TLQN";
    LegSecurityType["GeneralTypeForAContractBasedOnAnEstablishedIndex"] = "INDEX";
    LegSecurityType["ExtendedCommNote"] = "XCN";
    LegSecurityType["BondBasket"] = "BDBSKT";
    LegSecurityType["YankeeCertificateOfDeposit"] = "YCD";
    LegSecurityType["ContractForDifference"] = "CFD";
    LegSecurityType["CorrelationSwap"] = "CRLTNSWAP";
    LegSecurityType["DividendSwap"] = "DVDNDSWAP";
    LegSecurityType["EquityBasket"] = "EQBSKT";
    LegSecurityType["EquityForward"] = "EQFWD";
    LegSecurityType["ReturnSwap"] = "RTRNSWAP";
    LegSecurityType["VarianceSwap"] = "VARSWAP";
})(LegSecurityType = exports.LegSecurityType || (exports.LegSecurityType = {}));
var LegSide;
(function (LegSide) {
    LegSide["Buy"] = "1";
    LegSide["Sell"] = "2";
    LegSide["BuyMinus"] = "3";
    LegSide["SellPlus"] = "4";
    LegSide["SellShort"] = "5";
    LegSide["SellShortExempt"] = "6";
    LegSide["Undisclosed"] = "7";
    LegSide["CrossOrdersWhereCounterpartyIsAnExchangeValidForAllMessagesExceptIoIs"] = "8";
    LegSide["CrossShort"] = "9";
    LegSide["CrossShortExempt"] = "A";
    LegSide["AsDefinedForUseWithMultilegInstruments"] = "B";
    LegSide["OppositeForUseWithMultilegInstruments"] = "C";
    LegSide["SubscribeEGCiv"] = "D";
    LegSide["RedeemEGCiv"] = "E";
    LegSide["LendFinancingIdentifiesDirectionOfCollateral"] = "F";
    LegSide["BorrowFinancingIdentifiesDirectionOfCollateral"] = "G";
    LegSide["SellUndisclosed"] = "H";
})(LegSide = exports.LegSide || (exports.LegSide = {}));
var TradingSessionSubID;
(function (TradingSessionSubID) {
    TradingSessionSubID["PreTrading"] = "1";
    TradingSessionSubID["OpeningOrOpeningAuction"] = "2";
    TradingSessionSubID["ContinuousTrading"] = "3";
    TradingSessionSubID["ClosingOrClosingAuction"] = "4";
    TradingSessionSubID["PostTrading"] = "5";
    TradingSessionSubID["ScheduledIntradayAuction"] = "6";
    TradingSessionSubID["Quiescent"] = "7";
    TradingSessionSubID["AnyAuction"] = "8";
    TradingSessionSubID["UnscheduledIntradayAuction"] = "9";
    TradingSessionSubID["OutOfMainSessionTrading"] = "10";
    TradingSessionSubID["PrivateAuction"] = "11";
    TradingSessionSubID["PublicAuction"] = "12";
    TradingSessionSubID["GroupAuction"] = "13";
})(TradingSessionSubID = exports.TradingSessionSubID || (exports.TradingSessionSubID = {}));
var AllocType;
(function (AllocType) {
    AllocType[AllocType["CalculatedIncludesMiscFeesAndNetMoney"] = 1] = "CalculatedIncludesMiscFeesAndNetMoney";
    AllocType[AllocType["PreliminaryWithoutMiscFeesAndNetMoney"] = 2] = "PreliminaryWithoutMiscFeesAndNetMoney";
    AllocType[AllocType["SellsideCalculatedUsingPreliminaryIncludesMiscFeesAndNetMoneyReplaced"] = 3] = "SellsideCalculatedUsingPreliminaryIncludesMiscFeesAndNetMoneyReplaced";
    AllocType[AllocType["SellsideCalculateddWithoutPreliminarySentUnsolicitedBySellsideIncludesMiscFeesAndNetMoneyReplaced"] = 4] = "SellsideCalculateddWithoutPreliminarySentUnsolicitedBySellsideIncludesMiscFeesAndNetMoneyReplaced";
    AllocType[AllocType["ReadyToBookSingleOrder"] = 5] = "ReadyToBookSingleOrder";
    AllocType[AllocType["BuysideReadyToBookCombinedSetOfOrdersReplaced"] = 6] = "BuysideReadyToBookCombinedSetOfOrdersReplaced";
    AllocType[AllocType["WarehouseInstruction"] = 7] = "WarehouseInstruction";
    AllocType[AllocType["RequestToIntermediary"] = 8] = "RequestToIntermediary";
    AllocType[AllocType["Accept"] = 9] = "Accept";
    AllocType[AllocType["Reject"] = 10] = "Reject";
    AllocType[AllocType["AcceptPending"] = 11] = "AcceptPending";
    AllocType[AllocType["IncompleteGroup"] = 12] = "IncompleteGroup";
    AllocType[AllocType["CompleteGroup"] = 13] = "CompleteGroup";
    AllocType[AllocType["ReversalPending"] = 14] = "ReversalPending";
    AllocType[AllocType["ReopenGroup"] = 15] = "ReopenGroup";
    AllocType[AllocType["CancelGroup"] = 16] = "CancelGroup";
    AllocType[AllocType["GiveUp"] = 17] = "GiveUp";
    AllocType[AllocType["TakeUp"] = 18] = "TakeUp";
    AllocType[AllocType["RefuseTakeUp"] = 19] = "RefuseTakeUp";
    AllocType[AllocType["InitiateReversal"] = 20] = "InitiateReversal";
    AllocType[AllocType["Reverse"] = 21] = "Reverse";
    AllocType[AllocType["RefuseReversal"] = 22] = "RefuseReversal";
    AllocType[AllocType["SubAllocationGiveUp"] = 23] = "SubAllocationGiveUp";
    AllocType[AllocType["ApproveGiveUp"] = 24] = "ApproveGiveUp";
    AllocType[AllocType["ApproveTakeUp"] = 25] = "ApproveTakeUp";
})(AllocType = exports.AllocType || (exports.AllocType = {}));
var ClearingFeeIndicator;
(function (ClearingFeeIndicator) {
    ClearingFeeIndicator["E1stYearDelegateTradingForOwnAccount"] = "1";
    ClearingFeeIndicator["E2ndYearDelegateTradingForOwnAccount"] = "2";
    ClearingFeeIndicator["E3rdYearDelegateTradingForOwnAccount"] = "3";
    ClearingFeeIndicator["E4thYearDelegateTradingForOwnAccount"] = "4";
    ClearingFeeIndicator["E5thYearDelegateTradingForOwnAccount"] = "5";
    ClearingFeeIndicator["E6thYearDelegateTradingForOwnAccount"] = "9";
    ClearingFeeIndicator["CboeMember"] = "B";
    ClearingFeeIndicator["NonMemberAndCustomer"] = "C";
    ClearingFeeIndicator["EquityMemberAndClearingMember"] = "E";
    ClearingFeeIndicator["FullAndAssociateMemberTradingForOwnAccountAndAsFloorBrokers"] = "F";
    ClearingFeeIndicator["E106HAnd106JFirms"] = "H";
    ClearingFeeIndicator["GimIdemAndComMembershipInterestHolders"] = "I";
    ClearingFeeIndicator["Lessee106FEmployees"] = "L";
    ClearingFeeIndicator["AllOtherOwnershipTypes"] = "M";
})(ClearingFeeIndicator = exports.ClearingFeeIndicator || (exports.ClearingFeeIndicator = {}));
var WorkingIndicator;
(function (WorkingIndicator) {
    WorkingIndicator["OrderHasBeenAcceptedButNotYetInAWorkingState"] = "N";
    WorkingIndicator["OrderIsCurrentlyBeingWorked"] = "Y";
})(WorkingIndicator = exports.WorkingIndicator || (exports.WorkingIndicator = {}));
var PriorityIndicator;
(function (PriorityIndicator) {
    PriorityIndicator[PriorityIndicator["PriorityUnchanged"] = 0] = "PriorityUnchanged";
    PriorityIndicator[PriorityIndicator["LostPriorityAsResultOfOrderChange"] = 1] = "LostPriorityAsResultOfOrderChange";
})(PriorityIndicator = exports.PriorityIndicator || (exports.PriorityIndicator = {}));
var LegalConfirm;
(function (LegalConfirm) {
    LegalConfirm["DoesNotConsituteALegalConfirm"] = "N";
    LegalConfirm["LegalConfirm"] = "Y";
})(LegalConfirm = exports.LegalConfirm || (exports.LegalConfirm = {}));
var QuoteRequestRejectReason;
(function (QuoteRequestRejectReason) {
    QuoteRequestRejectReason[QuoteRequestRejectReason["UnknownSymbolSecurity"] = 1] = "UnknownSymbolSecurity";
    QuoteRequestRejectReason[QuoteRequestRejectReason["ExchangeSecurityClosed"] = 2] = "ExchangeSecurityClosed";
    QuoteRequestRejectReason[QuoteRequestRejectReason["QuoteRequestExceedsLimit"] = 3] = "QuoteRequestExceedsLimit";
    QuoteRequestRejectReason[QuoteRequestRejectReason["TooLateToEnter"] = 4] = "TooLateToEnter";
    QuoteRequestRejectReason[QuoteRequestRejectReason["InvalidPrice"] = 5] = "InvalidPrice";
    QuoteRequestRejectReason[QuoteRequestRejectReason["NotAuthorizedToRequestQuote"] = 6] = "NotAuthorizedToRequestQuote";
    QuoteRequestRejectReason[QuoteRequestRejectReason["NoMatchForInquiry"] = 7] = "NoMatchForInquiry";
    QuoteRequestRejectReason[QuoteRequestRejectReason["NoMarketForInstrument"] = 8] = "NoMarketForInstrument";
    QuoteRequestRejectReason[QuoteRequestRejectReason["NoInventory"] = 9] = "NoInventory";
    QuoteRequestRejectReason[QuoteRequestRejectReason["Pass"] = 10] = "Pass";
    QuoteRequestRejectReason[QuoteRequestRejectReason["InsufficientCredit"] = 11] = "InsufficientCredit";
    QuoteRequestRejectReason[QuoteRequestRejectReason["ExceededClipSizeLimit"] = 12] = "ExceededClipSizeLimit";
    QuoteRequestRejectReason[QuoteRequestRejectReason["ExceededMaximumNotionalOrderAmount"] = 13] = "ExceededMaximumNotionalOrderAmount";
    QuoteRequestRejectReason[QuoteRequestRejectReason["ExceededDv01Pv01Limit"] = 14] = "ExceededDv01Pv01Limit";
    QuoteRequestRejectReason[QuoteRequestRejectReason["ExceededCs01Limit"] = 15] = "ExceededCs01Limit";
    QuoteRequestRejectReason[QuoteRequestRejectReason["Other"] = 99] = "Other";
})(QuoteRequestRejectReason = exports.QuoteRequestRejectReason || (exports.QuoteRequestRejectReason = {}));
var AcctIDSource;
(function (AcctIDSource) {
    AcctIDSource[AcctIDSource["Bic"] = 1] = "Bic";
    AcctIDSource[AcctIDSource["SidCode"] = 2] = "SidCode";
    AcctIDSource[AcctIDSource["TfmGspta"] = 3] = "TfmGspta";
    AcctIDSource[AcctIDSource["OmgeoAlertId"] = 4] = "OmgeoAlertId";
    AcctIDSource[AcctIDSource["DtccCode"] = 5] = "DtccCode";
    AcctIDSource[AcctIDSource["OtherCustomOrProprietary"] = 99] = "OtherCustomOrProprietary";
})(AcctIDSource = exports.AcctIDSource || (exports.AcctIDSource = {}));
var AllocAcctIDSource;
(function (AllocAcctIDSource) {
    AllocAcctIDSource[AllocAcctIDSource["Bic"] = 1] = "Bic";
    AllocAcctIDSource[AllocAcctIDSource["SidCode"] = 2] = "SidCode";
    AllocAcctIDSource[AllocAcctIDSource["TfmGspta"] = 3] = "TfmGspta";
    AllocAcctIDSource[AllocAcctIDSource["OmgeoAlertId"] = 4] = "OmgeoAlertId";
    AllocAcctIDSource[AllocAcctIDSource["DtccCode"] = 5] = "DtccCode";
    AllocAcctIDSource[AllocAcctIDSource["OtherCustomOrProprietary"] = 99] = "OtherCustomOrProprietary";
})(AllocAcctIDSource = exports.AllocAcctIDSource || (exports.AllocAcctIDSource = {}));
var BenchmarkPriceType;
(function (BenchmarkPriceType) {
    BenchmarkPriceType[BenchmarkPriceType["PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome"] = 1] = "PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome";
    BenchmarkPriceType[BenchmarkPriceType["PerUnitIEPerShareOrContract"] = 2] = "PerUnitIEPerShareOrContract";
    BenchmarkPriceType[BenchmarkPriceType["FixedAmountAbsoluteValue"] = 3] = "FixedAmountAbsoluteValue";
    BenchmarkPriceType[BenchmarkPriceType["DiscountPercentagePointsBelowPar"] = 4] = "DiscountPercentagePointsBelowPar";
    BenchmarkPriceType[BenchmarkPriceType["PremiumPercentagePointsOverPar"] = 5] = "PremiumPercentagePointsOverPar";
    BenchmarkPriceType[BenchmarkPriceType["SpreadBasisPointsSpread"] = 6] = "SpreadBasisPointsSpread";
    BenchmarkPriceType[BenchmarkPriceType["TedPrice"] = 7] = "TedPrice";
    BenchmarkPriceType[BenchmarkPriceType["TedYield"] = 8] = "TedYield";
    BenchmarkPriceType[BenchmarkPriceType["Yield"] = 9] = "Yield";
    BenchmarkPriceType[BenchmarkPriceType["FixedCabinetTradePricePrimarilyForListedFuturesAndOptions"] = 10] = "FixedCabinetTradePricePrimarilyForListedFuturesAndOptions";
    BenchmarkPriceType[BenchmarkPriceType["VariableCabinetTradePricePrimarilyForListedFuturesAndOptions"] = 11] = "VariableCabinetTradePricePrimarilyForListedFuturesAndOptions";
    BenchmarkPriceType[BenchmarkPriceType["PriceSpread"] = 12] = "PriceSpread";
    BenchmarkPriceType[BenchmarkPriceType["ProductTicksInHalves"] = 13] = "ProductTicksInHalves";
    BenchmarkPriceType[BenchmarkPriceType["ProductTicksInFourths"] = 14] = "ProductTicksInFourths";
    BenchmarkPriceType[BenchmarkPriceType["ProductTicksInEighths"] = 15] = "ProductTicksInEighths";
    BenchmarkPriceType[BenchmarkPriceType["ProductTicksInSixteenths"] = 16] = "ProductTicksInSixteenths";
    BenchmarkPriceType[BenchmarkPriceType["ProductTicksInThirtySeconds"] = 17] = "ProductTicksInThirtySeconds";
    BenchmarkPriceType[BenchmarkPriceType["ProductTicksInSixtyFourths"] = 18] = "ProductTicksInSixtyFourths";
    BenchmarkPriceType[BenchmarkPriceType["ProductTicksInOneTwentyEighths"] = 19] = "ProductTicksInOneTwentyEighths";
    BenchmarkPriceType[BenchmarkPriceType["NormalRateRepresentationEGFxRate"] = 20] = "NormalRateRepresentationEGFxRate";
    BenchmarkPriceType[BenchmarkPriceType["InverseRateRepresentationEGFxRate"] = 21] = "InverseRateRepresentationEGFxRate";
    BenchmarkPriceType[BenchmarkPriceType["BasisPoints"] = 22] = "BasisPoints";
    BenchmarkPriceType[BenchmarkPriceType["UpFrontPoints"] = 23] = "UpFrontPoints";
    BenchmarkPriceType[BenchmarkPriceType["InterestRate"] = 24] = "InterestRate";
    BenchmarkPriceType[BenchmarkPriceType["PercentageOfNotional"] = 25] = "PercentageOfNotional";
})(BenchmarkPriceType = exports.BenchmarkPriceType || (exports.BenchmarkPriceType = {}));
var ConfirmStatus;
(function (ConfirmStatus) {
    ConfirmStatus[ConfirmStatus["Received"] = 1] = "Received";
    ConfirmStatus[ConfirmStatus["MismatchedAccount"] = 2] = "MismatchedAccount";
    ConfirmStatus[ConfirmStatus["MissingSettlementInstructions"] = 3] = "MissingSettlementInstructions";
    ConfirmStatus[ConfirmStatus["Confirmed"] = 4] = "Confirmed";
    ConfirmStatus[ConfirmStatus["RequestRejected"] = 5] = "RequestRejected";
})(ConfirmStatus = exports.ConfirmStatus || (exports.ConfirmStatus = {}));
var ConfirmTransType;
(function (ConfirmTransType) {
    ConfirmTransType[ConfirmTransType["New"] = 0] = "New";
    ConfirmTransType[ConfirmTransType["Replace"] = 1] = "Replace";
    ConfirmTransType[ConfirmTransType["Cancel"] = 2] = "Cancel";
})(ConfirmTransType = exports.ConfirmTransType || (exports.ConfirmTransType = {}));
var DeliveryForm;
(function (DeliveryForm) {
    DeliveryForm[DeliveryForm["BookEntryDefault"] = 1] = "BookEntryDefault";
    DeliveryForm[DeliveryForm["Bearer"] = 2] = "Bearer";
})(DeliveryForm = exports.DeliveryForm || (exports.DeliveryForm = {}));
var LegBenchmarkCurveName;
(function (LegBenchmarkCurveName) {
    LegBenchmarkCurveName["Eonia"] = "EONIA";
    LegBenchmarkCurveName["Eurepo"] = "EUREPO";
    LegBenchmarkCurveName["EuriborDeprecatedUseEnumEuriborInstead"] = "Euribor";
    LegBenchmarkCurveName["FutureSwap"] = "FutureSWAP";
    LegBenchmarkCurveName["Libid"] = "LIBID";
    LegBenchmarkCurveName["LiborLondonInterBankOffer"] = "LIBOR";
    LegBenchmarkCurveName["MuniAaa"] = "MuniAAA";
    LegBenchmarkCurveName["Other"] = "OTHER";
    LegBenchmarkCurveName["Pfandbriefe"] = "Pfandbriefe";
    LegBenchmarkCurveName["Sonia"] = "SONIA";
    LegBenchmarkCurveName["Swap"] = "SWAP";
    LegBenchmarkCurveName["Treasury"] = "Treasury";
    LegBenchmarkCurveName["UsFederalReserveFedFundsEffectiveRate"] = "FEDEFF";
    LegBenchmarkCurveName["UsFedFundsTargetRate"] = "FEDOPEN";
    LegBenchmarkCurveName["EuroInterbankOfferRate"] = "EURIBOR";
})(LegBenchmarkCurveName = exports.LegBenchmarkCurveName || (exports.LegBenchmarkCurveName = {}));
var LegBenchmarkPriceType;
(function (LegBenchmarkPriceType) {
    LegBenchmarkPriceType[LegBenchmarkPriceType["PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome"] = 1] = "PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome";
    LegBenchmarkPriceType[LegBenchmarkPriceType["PerUnitIEPerShareOrContract"] = 2] = "PerUnitIEPerShareOrContract";
    LegBenchmarkPriceType[LegBenchmarkPriceType["FixedAmountAbsoluteValue"] = 3] = "FixedAmountAbsoluteValue";
    LegBenchmarkPriceType[LegBenchmarkPriceType["DiscountPercentagePointsBelowPar"] = 4] = "DiscountPercentagePointsBelowPar";
    LegBenchmarkPriceType[LegBenchmarkPriceType["PremiumPercentagePointsOverPar"] = 5] = "PremiumPercentagePointsOverPar";
    LegBenchmarkPriceType[LegBenchmarkPriceType["SpreadBasisPointsSpread"] = 6] = "SpreadBasisPointsSpread";
    LegBenchmarkPriceType[LegBenchmarkPriceType["TedPrice"] = 7] = "TedPrice";
    LegBenchmarkPriceType[LegBenchmarkPriceType["TedYield"] = 8] = "TedYield";
    LegBenchmarkPriceType[LegBenchmarkPriceType["Yield"] = 9] = "Yield";
    LegBenchmarkPriceType[LegBenchmarkPriceType["FixedCabinetTradePricePrimarilyForListedFuturesAndOptions"] = 10] = "FixedCabinetTradePricePrimarilyForListedFuturesAndOptions";
    LegBenchmarkPriceType[LegBenchmarkPriceType["VariableCabinetTradePricePrimarilyForListedFuturesAndOptions"] = 11] = "VariableCabinetTradePricePrimarilyForListedFuturesAndOptions";
    LegBenchmarkPriceType[LegBenchmarkPriceType["PriceSpread"] = 12] = "PriceSpread";
    LegBenchmarkPriceType[LegBenchmarkPriceType["ProductTicksInHalves"] = 13] = "ProductTicksInHalves";
    LegBenchmarkPriceType[LegBenchmarkPriceType["ProductTicksInFourths"] = 14] = "ProductTicksInFourths";
    LegBenchmarkPriceType[LegBenchmarkPriceType["ProductTicksInEighths"] = 15] = "ProductTicksInEighths";
    LegBenchmarkPriceType[LegBenchmarkPriceType["ProductTicksInSixteenths"] = 16] = "ProductTicksInSixteenths";
    LegBenchmarkPriceType[LegBenchmarkPriceType["ProductTicksInThirtySeconds"] = 17] = "ProductTicksInThirtySeconds";
    LegBenchmarkPriceType[LegBenchmarkPriceType["ProductTicksInSixtyFourths"] = 18] = "ProductTicksInSixtyFourths";
    LegBenchmarkPriceType[LegBenchmarkPriceType["ProductTicksInOneTwentyEighths"] = 19] = "ProductTicksInOneTwentyEighths";
    LegBenchmarkPriceType[LegBenchmarkPriceType["NormalRateRepresentationEGFxRate"] = 20] = "NormalRateRepresentationEGFxRate";
    LegBenchmarkPriceType[LegBenchmarkPriceType["InverseRateRepresentationEGFxRate"] = 21] = "InverseRateRepresentationEGFxRate";
    LegBenchmarkPriceType[LegBenchmarkPriceType["BasisPoints"] = 22] = "BasisPoints";
    LegBenchmarkPriceType[LegBenchmarkPriceType["UpFrontPoints"] = 23] = "UpFrontPoints";
    LegBenchmarkPriceType[LegBenchmarkPriceType["InterestRate"] = 24] = "InterestRate";
    LegBenchmarkPriceType[LegBenchmarkPriceType["PercentageOfNotional"] = 25] = "PercentageOfNotional";
})(LegBenchmarkPriceType = exports.LegBenchmarkPriceType || (exports.LegBenchmarkPriceType = {}));
var LegIOIQty;
(function (LegIOIQty) {
    LegIOIQty["Small"] = "S";
    LegIOIQty["Medium"] = "M";
    LegIOIQty["Large"] = "L";
    LegIOIQty["UndisclosedQuantity"] = "U";
})(LegIOIQty = exports.LegIOIQty || (exports.LegIOIQty = {}));
var LegPriceType;
(function (LegPriceType) {
    LegPriceType[LegPriceType["PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome"] = 1] = "PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome";
    LegPriceType[LegPriceType["PerUnitIEPerShareOrContract"] = 2] = "PerUnitIEPerShareOrContract";
    LegPriceType[LegPriceType["FixedAmountAbsoluteValue"] = 3] = "FixedAmountAbsoluteValue";
    LegPriceType[LegPriceType["DiscountPercentagePointsBelowPar"] = 4] = "DiscountPercentagePointsBelowPar";
    LegPriceType[LegPriceType["PremiumPercentagePointsOverPar"] = 5] = "PremiumPercentagePointsOverPar";
    LegPriceType[LegPriceType["SpreadBasisPointsSpread"] = 6] = "SpreadBasisPointsSpread";
    LegPriceType[LegPriceType["TedPrice"] = 7] = "TedPrice";
    LegPriceType[LegPriceType["TedYield"] = 8] = "TedYield";
    LegPriceType[LegPriceType["Yield"] = 9] = "Yield";
    LegPriceType[LegPriceType["FixedCabinetTradePricePrimarilyForListedFuturesAndOptions"] = 10] = "FixedCabinetTradePricePrimarilyForListedFuturesAndOptions";
    LegPriceType[LegPriceType["VariableCabinetTradePricePrimarilyForListedFuturesAndOptions"] = 11] = "VariableCabinetTradePricePrimarilyForListedFuturesAndOptions";
    LegPriceType[LegPriceType["PriceSpread"] = 12] = "PriceSpread";
    LegPriceType[LegPriceType["ProductTicksInHalves"] = 13] = "ProductTicksInHalves";
    LegPriceType[LegPriceType["ProductTicksInFourths"] = 14] = "ProductTicksInFourths";
    LegPriceType[LegPriceType["ProductTicksInEighths"] = 15] = "ProductTicksInEighths";
    LegPriceType[LegPriceType["ProductTicksInSixteenths"] = 16] = "ProductTicksInSixteenths";
    LegPriceType[LegPriceType["ProductTicksInThirtySeconds"] = 17] = "ProductTicksInThirtySeconds";
    LegPriceType[LegPriceType["ProductTicksInSixtyFourths"] = 18] = "ProductTicksInSixtyFourths";
    LegPriceType[LegPriceType["ProductTicksInOneTwentyEighths"] = 19] = "ProductTicksInOneTwentyEighths";
    LegPriceType[LegPriceType["NormalRateRepresentationEGFxRate"] = 20] = "NormalRateRepresentationEGFxRate";
    LegPriceType[LegPriceType["InverseRateRepresentationEGFxRate"] = 21] = "InverseRateRepresentationEGFxRate";
    LegPriceType[LegPriceType["BasisPoints"] = 22] = "BasisPoints";
    LegPriceType[LegPriceType["UpFrontPoints"] = 23] = "UpFrontPoints";
    LegPriceType[LegPriceType["InterestRate"] = 24] = "InterestRate";
    LegPriceType[LegPriceType["PercentageOfNotional"] = 25] = "PercentageOfNotional";
})(LegPriceType = exports.LegPriceType || (exports.LegPriceType = {}));
var LegStipulationType;
(function (LegStipulationType) {
    LegStipulationType["AlternativeMinimumTaxYN"] = "AMT";
    LegStipulationType["AbsolutePrepaymentSpeed"] = "ABS";
    LegStipulationType["IncurredRecoveryYN"] = "INCURRCVY";
    LegStipulationType["AutoReinvestmentAtRateOrBetter"] = "AUTOREINV";
    LegStipulationType["ConstantPrepaymentPenalty"] = "CPP";
    LegStipulationType["AdditionalTerm"] = "ADDTRM";
    LegStipulationType["BankQualifiedYN"] = "BANKQUAL";
    LegStipulationType["ConstantPrepaymentRate"] = "CPR";
    LegStipulationType["ModifiedEquityDelivery"] = "MODEQTYDLVY";
    LegStipulationType["BargainConditionsSeeStipulationValue234ForValues"] = "BGNCON";
    LegStipulationType["ConstantPrepaymentYield"] = "CPY";
    LegStipulationType["NoReferenceObligationYN"] = "NOREFOBLIG";
    LegStipulationType["CouponRange"] = "COUPON";
    LegStipulationType["FinalCprOfHomeEquityPrepaymentCurve"] = "HEP";
    LegStipulationType["UnknownReferenceObligationYN"] = "UNKREFOBLIG";
    LegStipulationType["IsoCurrencyCode"] = "CURRENCY";
    LegStipulationType["PercentOfManufacturedHousingPrepaymentCurve"] = "MHP";
    LegStipulationType["AllGuaranteesYN"] = "ALLGUARANTEES";
    LegStipulationType["CustomStartEndDate"] = "CUSTOMDATE";
    LegStipulationType["MonthlyPrepaymentRate"] = "MPR";
    LegStipulationType["ReferencePriceYN"] = "REFPX";
    LegStipulationType["GeographicsAndRangeEx234Ca080MinimumOf80CaliforniaAssets"] = "GEOG";
    LegStipulationType["PercentOfProspectusPrepaymentCurve"] = "PPC";
    LegStipulationType["ReferencePolicyYN"] = "REFPOLICY";
    LegStipulationType["ValuationDiscount"] = "HAIRCUT";
    LegStipulationType["PercentOfBmaPrepaymentCurve"] = "PSA";
    LegStipulationType["SecuredListYN"] = "SECRDLIST";
    LegStipulationType["InsuredYN"] = "INSURED";
    LegStipulationType["SingleMonthlyMortality"] = "SMM";
    LegStipulationType["YearOrYearMonthOfIssueEx234200209"] = "ISSUE";
    LegStipulationType["IssuersTicker"] = "ISSUER";
    LegStipulationType["IssueSizeRange"] = "ISSUESIZE";
    LegStipulationType["LookbackDays"] = "LOOKBACK";
    LegStipulationType["ExplicitLotIdentifier"] = "LOT";
    LegStipulationType["LotVarianceValueInPercentMaximumOverOrUnderAllocationAllowed"] = "LOTVAR";
    LegStipulationType["MaturityYearAndMonth"] = "MAT";
    LegStipulationType["MaturityRange"] = "MATURITY";
    LegStipulationType["MaximumSubstitutionsRepo"] = "MAXSUBS";
    LegStipulationType["MinimumDenomination"] = "MINDNOM";
    LegStipulationType["MinimumIncrement"] = "MININCR";
    LegStipulationType["MinimumQuantity"] = "MINQTY";
    LegStipulationType["PaymentFrequencyCalendar"] = "PAYFREQ";
    LegStipulationType["NumberOfPieces"] = "PIECES";
    LegStipulationType["PoolsMaximum"] = "PMAX";
    LegStipulationType["PoolsPerLot"] = "PPL";
    LegStipulationType["PoolsPerMillion"] = "PPM";
    LegStipulationType["PoolsPerTrade"] = "PPT";
    LegStipulationType["PriceRange"] = "PRICE";
    LegStipulationType["PricingFrequency"] = "PRICEFREQ";
    LegStipulationType["ProductionYear"] = "PROD";
    LegStipulationType["CallProtection"] = "PROTECT";
    LegStipulationType["Purpose"] = "PURPOSE";
    LegStipulationType["BenchmarkPriceSource"] = "PXSOURCE";
    LegStipulationType["RatingSourceAndRange"] = "RATING";
    LegStipulationType["TypeOfRedemptionValuesAreNonCallablePrefundedEscrowedToMaturityPutableConvertible"] = "REDEMPTION";
    LegStipulationType["RestrictedYN"] = "RESTRICTED";
    LegStipulationType["MarketSector"] = "SECTOR";
    LegStipulationType["SecurityTypeIncludedOrExcluded"] = "SECTYPE";
    LegStipulationType["Structure"] = "STRUCT";
    LegStipulationType["SubstitutionsFrequencyRepo"] = "SUBSFREQ";
    LegStipulationType["SubstitutionsLeftRepo"] = "SUBSLEFT";
    LegStipulationType["FreeformText"] = "TEXT";
    LegStipulationType["TradeVarianceValueInPercentMaximumOverOrUnderAllocationAllowed"] = "TRDVAR";
    LegStipulationType["WeightedAverageCouponValueInPercentExactOrRangePlusGrossOrNetOfServicingSpreadTheDefaultEx23465NetMinimumOf65NetOfServicingFee"] = "WAC";
    LegStipulationType["WeightedAverageLifeCouponValueInPercentExactOrRange"] = "WAL";
    LegStipulationType["WeightedAverageLoanAgeValueInMonthsExactOrRange"] = "WALA";
    LegStipulationType["WeightedAverageMaturityValueInMonthsExactOrRange"] = "WAM";
    LegStipulationType["WholePoolYN"] = "WHOLE";
    LegStipulationType["YieldRange"] = "YIELD";
    LegStipulationType["AverageFicoScore"] = "AVFICO";
    LegStipulationType["OriginalAmount"] = "ORIGAMT";
    LegStipulationType["AverageLoanSize"] = "AVSIZE";
    LegStipulationType["PoolEffectiveDate"] = "POOLEFFDT";
    LegStipulationType["MaximumLoanBalance"] = "MAXBAL";
    LegStipulationType["PoolInitialFactor"] = "POOLINITFCTR";
    LegStipulationType["PoolIdentifier"] = "POOL";
    LegStipulationType["TrancheIdentifier"] = "TRANCHE";
    LegStipulationType["TypeOfRollTrade"] = "ROLLTYPE";
    LegStipulationType["SubstitutionYN"] = "SUBSTITUTION";
    LegStipulationType["ReferenceToRollingOrClosingTrade"] = "REFTRADE";
    LegStipulationType["MultipleExchangeFallbackYN"] = "MULTEXCHFLLBCK";
    LegStipulationType["PrincipalOfRollingOrClosingTrade"] = "REFPRIN";
    LegStipulationType["ComponentSecurityFallbackYN"] = "COMPSECFLLBCK";
    LegStipulationType["InterestOfRollingOrClosingTrade"] = "REFINT";
    LegStipulationType["LocalJurisdictionYN"] = "LOCLJRSDCTN";
    LegStipulationType["AvailableOfferQuantityToBeShownToTheStreet"] = "AVAILQTY";
    LegStipulationType["RelevantJurisdictionYN"] = "RELVJRSDCTN";
    LegStipulationType["BrokersSalesCredit"] = "BROKERCREDIT";
    LegStipulationType["OfferPriceToBeShownToInternalBrokers"] = "INTERNALPX";
    LegStipulationType["OfferQuantityToBeShownToInternalBrokers"] = "INTERNALQTY";
    LegStipulationType["TheMinimumResidualOfferQuantity"] = "LEAVEQTY";
    LegStipulationType["MaximumOrderSize"] = "MAXORDQTY";
    LegStipulationType["OrderQuantityIncrement"] = "ORDRINCR";
    LegStipulationType["PrimaryOrSecondaryMarketIndicator"] = "PRIMARY";
    LegStipulationType["BrokerSalesCreditOverride"] = "SALESCREDITOVR";
    LegStipulationType["TradersCredit"] = "TRADERCREDIT";
    LegStipulationType["DiscountRateWhenPriceIsDenominatedInPercentOfPar"] = "DISCOUNT";
    LegStipulationType["YieldToMaturityWhenYieldType235AndYield236ShowADifferentYield"] = "YTM";
})(LegStipulationType = exports.LegStipulationType || (exports.LegStipulationType = {}));
var LegSwapType;
(function (LegSwapType) {
    LegSwapType[LegSwapType["ParForPar"] = 1] = "ParForPar";
    LegSwapType[LegSwapType["ModifiedDuration"] = 2] = "ModifiedDuration";
    LegSwapType[LegSwapType["Risk"] = 4] = "Risk";
    LegSwapType[LegSwapType["Proceeds"] = 5] = "Proceeds";
})(LegSwapType = exports.LegSwapType || (exports.LegSwapType = {}));
var QuotePriceType;
(function (QuotePriceType) {
    QuotePriceType[QuotePriceType["PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome"] = 1] = "PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome";
    QuotePriceType[QuotePriceType["PerUnitIEPerShareOrContract"] = 2] = "PerUnitIEPerShareOrContract";
    QuotePriceType[QuotePriceType["FixedAmountAbsoluteValue"] = 3] = "FixedAmountAbsoluteValue";
    QuotePriceType[QuotePriceType["DiscountPercentagePointsBelowPar"] = 4] = "DiscountPercentagePointsBelowPar";
    QuotePriceType[QuotePriceType["PremiumPercentagePointsOverPar"] = 5] = "PremiumPercentagePointsOverPar";
    QuotePriceType[QuotePriceType["SpreadBasisPointsRelativeToBenchmark"] = 6] = "SpreadBasisPointsRelativeToBenchmark";
    QuotePriceType[QuotePriceType["TedPrice"] = 7] = "TedPrice";
    QuotePriceType[QuotePriceType["TedYield"] = 8] = "TedYield";
    QuotePriceType[QuotePriceType["YieldSpreadSwaps"] = 9] = "YieldSpreadSwaps";
    QuotePriceType[QuotePriceType["Yield"] = 10] = "Yield";
    QuotePriceType[QuotePriceType["PriceSpread"] = 12] = "PriceSpread";
    QuotePriceType[QuotePriceType["ProductTicksInHalves"] = 13] = "ProductTicksInHalves";
    QuotePriceType[QuotePriceType["ProductTicksInFourths"] = 14] = "ProductTicksInFourths";
    QuotePriceType[QuotePriceType["ProductTicksInEighths"] = 15] = "ProductTicksInEighths";
    QuotePriceType[QuotePriceType["ProductTicksInSixteenths"] = 16] = "ProductTicksInSixteenths";
    QuotePriceType[QuotePriceType["ProductTicksInThirtySeconds"] = 17] = "ProductTicksInThirtySeconds";
    QuotePriceType[QuotePriceType["ProductTicksInSixtyFourths"] = 18] = "ProductTicksInSixtyFourths";
    QuotePriceType[QuotePriceType["ProductTicksInOneTwentyEighths"] = 19] = "ProductTicksInOneTwentyEighths";
    QuotePriceType[QuotePriceType["NormalRateRepresentationEGFxRate"] = 20] = "NormalRateRepresentationEGFxRate";
    QuotePriceType[QuotePriceType["InverseRateRepresentationEGFxRate"] = 21] = "InverseRateRepresentationEGFxRate";
    QuotePriceType[QuotePriceType["BasisPoints"] = 22] = "BasisPoints";
    QuotePriceType[QuotePriceType["UpFrontPoints"] = 23] = "UpFrontPoints";
    QuotePriceType[QuotePriceType["InterestRate"] = 24] = "InterestRate";
    QuotePriceType[QuotePriceType["PercentageOfNotional"] = 25] = "PercentageOfNotional";
})(QuotePriceType = exports.QuotePriceType || (exports.QuotePriceType = {}));
var QuoteRespType;
(function (QuoteRespType) {
    QuoteRespType[QuoteRespType["HitLift"] = 1] = "HitLift";
    QuoteRespType[QuoteRespType["Counter"] = 2] = "Counter";
    QuoteRespType[QuoteRespType["Expired"] = 3] = "Expired";
    QuoteRespType[QuoteRespType["Cover"] = 4] = "Cover";
    QuoteRespType[QuoteRespType["DoneAway"] = 5] = "DoneAway";
    QuoteRespType[QuoteRespType["Pass"] = 6] = "Pass";
    QuoteRespType[QuoteRespType["EndTrade"] = 7] = "EndTrade";
    QuoteRespType[QuoteRespType["TimedOut"] = 8] = "TimedOut";
    QuoteRespType[QuoteRespType["Tied"] = 9] = "Tied";
    QuoteRespType[QuoteRespType["TiedCover"] = 10] = "TiedCover";
})(QuoteRespType = exports.QuoteRespType || (exports.QuoteRespType = {}));
var QuoteQualifier;
(function (QuoteQualifier) {
    QuoteQualifier["QuantityIsNegotiable"] = "1";
    QuoteQualifier["AllowLateBids"] = "2";
    QuoteQualifier["ImmediateOrCounter"] = "3";
    QuoteQualifier["AutoTrade"] = "4";
    QuoteQualifier["AllOrNoneAon"] = "A";
    QuoteQualifier["MarketOnCloseMocHeldToClose"] = "B";
    QuoteQualifier["AtTheCloseAroundNotHeldToClose"] = "C";
    QuoteQualifier["VwapVolumeWeightedAveragePrice"] = "D";
    QuoteQualifier["Axe"] = "E";
    QuoteQualifier["AxeOnBid"] = "F";
    QuoteQualifier["AxeOnOffer"] = "G";
    QuoteQualifier["ClientNaturalWorking"] = "H";
    QuoteQualifier["InTouchWith"] = "I";
    QuoteQualifier["PositionWanted"] = "J";
    QuoteQualifier["MarketMaking"] = "K";
    QuoteQualifier["Limit"] = "L";
    QuoteQualifier["MoreBehind"] = "M";
    QuoteQualifier["ClientNaturalBlock"] = "N";
    QuoteQualifier["AtTheOpen"] = "O";
    QuoteQualifier["TakingAPosition"] = "P";
    QuoteQualifier["AtTheMarketPreviouslyCalledCurrentQuote"] = "Q";
    QuoteQualifier["ReadyToTrade"] = "R";
    QuoteQualifier["InventoryOrPortfolioShown"] = "S";
    QuoteQualifier["ThroughTheDay"] = "T";
    QuoteQualifier["Unwind"] = "U";
    QuoteQualifier["Versus"] = "V";
    QuoteQualifier["IndicationWorkingAway"] = "W";
    QuoteQualifier["CrossingOpportunity"] = "X";
    QuoteQualifier["AtTheMidpoint"] = "Y";
    QuoteQualifier["PreOpen"] = "Z";
    QuoteQualifier["AutomaticSpot"] = "a";
    QuoteQualifier["PlatformCalculatedSpot"] = "b";
    QuoteQualifier["OutsideSpread"] = "c";
    QuoteQualifier["DeferredSpot"] = "d";
    QuoteQualifier["NegotiatedSpot"] = "n";
})(QuoteQualifier = exports.QuoteQualifier || (exports.QuoteQualifier = {}));
var YieldRedemptionPriceType;
(function (YieldRedemptionPriceType) {
    YieldRedemptionPriceType[YieldRedemptionPriceType["PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome"] = 1] = "PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome";
    YieldRedemptionPriceType[YieldRedemptionPriceType["PerUnitIEPerShareOrContract"] = 2] = "PerUnitIEPerShareOrContract";
    YieldRedemptionPriceType[YieldRedemptionPriceType["FixedAmountAbsoluteValue"] = 3] = "FixedAmountAbsoluteValue";
    YieldRedemptionPriceType[YieldRedemptionPriceType["DiscountPercentagePointsBelowPar"] = 4] = "DiscountPercentagePointsBelowPar";
    YieldRedemptionPriceType[YieldRedemptionPriceType["PremiumPercentagePointsOverPar"] = 5] = "PremiumPercentagePointsOverPar";
    YieldRedemptionPriceType[YieldRedemptionPriceType["SpreadBasisPointsSpread"] = 6] = "SpreadBasisPointsSpread";
    YieldRedemptionPriceType[YieldRedemptionPriceType["TedPrice"] = 7] = "TedPrice";
    YieldRedemptionPriceType[YieldRedemptionPriceType["TedYield"] = 8] = "TedYield";
    YieldRedemptionPriceType[YieldRedemptionPriceType["Yield"] = 9] = "Yield";
    YieldRedemptionPriceType[YieldRedemptionPriceType["FixedCabinetTradePricePrimarilyForListedFuturesAndOptions"] = 10] = "FixedCabinetTradePricePrimarilyForListedFuturesAndOptions";
    YieldRedemptionPriceType[YieldRedemptionPriceType["VariableCabinetTradePricePrimarilyForListedFuturesAndOptions"] = 11] = "VariableCabinetTradePricePrimarilyForListedFuturesAndOptions";
    YieldRedemptionPriceType[YieldRedemptionPriceType["PriceSpread"] = 12] = "PriceSpread";
    YieldRedemptionPriceType[YieldRedemptionPriceType["ProductTicksInHalves"] = 13] = "ProductTicksInHalves";
    YieldRedemptionPriceType[YieldRedemptionPriceType["ProductTicksInFourths"] = 14] = "ProductTicksInFourths";
    YieldRedemptionPriceType[YieldRedemptionPriceType["ProductTicksInEighths"] = 15] = "ProductTicksInEighths";
    YieldRedemptionPriceType[YieldRedemptionPriceType["ProductTicksInSixteenths"] = 16] = "ProductTicksInSixteenths";
    YieldRedemptionPriceType[YieldRedemptionPriceType["ProductTicksInThirtySeconds"] = 17] = "ProductTicksInThirtySeconds";
    YieldRedemptionPriceType[YieldRedemptionPriceType["ProductTicksInSixtyFourths"] = 18] = "ProductTicksInSixtyFourths";
    YieldRedemptionPriceType[YieldRedemptionPriceType["ProductTicksInOneTwentyEighths"] = 19] = "ProductTicksInOneTwentyEighths";
    YieldRedemptionPriceType[YieldRedemptionPriceType["NormalRateRepresentationEGFxRate"] = 20] = "NormalRateRepresentationEGFxRate";
    YieldRedemptionPriceType[YieldRedemptionPriceType["InverseRateRepresentationEGFxRate"] = 21] = "InverseRateRepresentationEGFxRate";
    YieldRedemptionPriceType[YieldRedemptionPriceType["BasisPoints"] = 22] = "BasisPoints";
    YieldRedemptionPriceType[YieldRedemptionPriceType["UpFrontPoints"] = 23] = "UpFrontPoints";
    YieldRedemptionPriceType[YieldRedemptionPriceType["InterestRate"] = 24] = "InterestRate";
    YieldRedemptionPriceType[YieldRedemptionPriceType["PercentageOfNotional"] = 25] = "PercentageOfNotional";
})(YieldRedemptionPriceType = exports.YieldRedemptionPriceType || (exports.YieldRedemptionPriceType = {}));
var PosType;
(function (PosType) {
    PosType["AllocationTradeQty"] = "ALC";
    PosType["OptionAssignment"] = "AS";
    PosType["AsOfTradeQty"] = "ASF";
    PosType["DeliveryQty"] = "DLV";
    PosType["ElectronicTradeQty"] = "ETR";
    PosType["OptionExerciseQty"] = "EX";
    PosType["EndOfDayQty"] = "FIN";
    PosType["IntraSpreadQty"] = "IAS";
    PosType["InterSpreadQty"] = "IES";
    PosType["AdjustmentQty"] = "PA";
    PosType["PitTradeQty"] = "PIT";
    PosType["StartOfDayQty"] = "SOD";
    PosType["IntegralSplit"] = "SPL";
    PosType["TransactionFromAssignment"] = "TA";
    PosType["TotalTransactionQty"] = "TOT";
    PosType["TransactionQuantity"] = "TQ";
    PosType["TransferTradeQty"] = "TRF";
    PosType["TransactionFromExercise"] = "TX";
    PosType["CrossMarginQty"] = "XM";
    PosType["ReceiveQuantity"] = "RCV";
    PosType["CorporateActionAdjustment"] = "CAA";
    PosType["DeliveryNoticeQty"] = "DN";
    PosType["ExchangeForPhysicalQty"] = "EP";
    PosType["PrivatelyNegotiatedTradeQtyNonRegulated"] = "PNTN";
    PosType["NetDeltaQty"] = "DLT";
    PosType["CreditEventAdjustment"] = "CEA";
    PosType["SuccessionEventAdjustment"] = "SEA";
    PosType["NetQty"] = "NET";
    PosType["GrossQty"] = "GRS";
    PosType["IntradayQty"] = "ITD";
    PosType["GrossNonDeltaAdjustedSwaptionPosition"] = "NDAS";
    PosType["DeltaAdjustedPairedSwaptionPosition"] = "DAS";
    PosType["ExpiringQuantity"] = "EXP";
    PosType["QuantityNotExercised"] = "UNEX";
    PosType["RequestedExerciseQuantity"] = "REQ";
    PosType["CashFuturesEquivalentQuantity"] = "CFE";
})(PosType = exports.PosType || (exports.PosType = {}));
var PosQtyStatus;
(function (PosQtyStatus) {
    PosQtyStatus[PosQtyStatus["Submitted"] = 0] = "Submitted";
    PosQtyStatus[PosQtyStatus["Accepted"] = 1] = "Accepted";
    PosQtyStatus[PosQtyStatus["Rejected"] = 2] = "Rejected";
})(PosQtyStatus = exports.PosQtyStatus || (exports.PosQtyStatus = {}));
var PosAmtType;
(function (PosAmtType) {
    PosAmtType["CashAmountCorporateEvent"] = "CASH";
    PosAmtType["CashResidualAmount"] = "CRES";
    PosAmtType["FinalMarkToMarketAmount"] = "FMTM";
    PosAmtType["IncrementalMarkToMarket"] = "IMTM";
    PosAmtType["PremiumAmount"] = "PREM";
    PosAmtType["StartOfDayMarkToMarket"] = "SMTM";
    PosAmtType["TradeVariationAmount"] = "TVAR";
    PosAmtType["ValueAdjustedAmount"] = "VADJ";
    PosAmtType["SettlementValue"] = "SETL";
    PosAmtType["InitialTradeCouponAmount"] = "ICPN";
    PosAmtType["AccruedCouponAmount"] = "ACPN";
    PosAmtType["CouponAmount"] = "CPN";
    PosAmtType["IncrementalAccruedCoupon"] = "IACPN";
    PosAmtType["CollateralizedMarkToMarket"] = "CMTM";
    PosAmtType["IncrementalCollateralizedMarkToMarket"] = "ICMTM";
    PosAmtType["CompensationAmount"] = "DLV";
    PosAmtType["TotalBankedAmount"] = "BANK";
    PosAmtType["TotalCollateralizedAmount"] = "COLAT";
    PosAmtType["LongPairedSwapOrSwaptionNotionalValue"] = "LSNV";
    PosAmtType["ShortPairedSwapOrSwaptionNotionalValue"] = "SSNV";
    PosAmtType["StartOfDayAccruedCoupon"] = "SACPN";
    PosAmtType["NetPresentValue"] = "NPV";
    PosAmtType["StartOfDayNetPresentValue"] = "SNPV";
    PosAmtType["NetCashFlow"] = "NCF";
    PosAmtType["PresentValueOfAllFees"] = "PVFEES";
    PosAmtType["PresentValueOfOneBasisPoints"] = "PV01";
    PosAmtType["TheFiveYearEquivalentNotionalAmount"] = "5YREN";
    PosAmtType["UndiscountedMarkToMarket"] = "UMTM";
    PosAmtType["MarkToModel"] = "MTD";
    PosAmtType["MarkToMarketVariance"] = "VMTM";
    PosAmtType["MarkToModelVariance"] = "VMTD";
    PosAmtType["UpfrontPayment"] = "UPFRNT";
})(PosAmtType = exports.PosAmtType || (exports.PosAmtType = {}));
var PosTransType;
(function (PosTransType) {
    PosTransType[PosTransType["Exercise"] = 1] = "Exercise";
    PosTransType[PosTransType["DoNotExercise"] = 2] = "DoNotExercise";
    PosTransType[PosTransType["PositionAdjustment"] = 3] = "PositionAdjustment";
    PosTransType[PosTransType["PositionChangeSubmissionMarginDisposition"] = 4] = "PositionChangeSubmissionMarginDisposition";
    PosTransType[PosTransType["Pledge"] = 5] = "Pledge";
    PosTransType[PosTransType["LargeTraderSubmission"] = 6] = "LargeTraderSubmission";
    PosTransType[PosTransType["LargePositionsReportingSubmission"] = 7] = "LargePositionsReportingSubmission";
    PosTransType[PosTransType["LongHoldings"] = 8] = "LongHoldings";
    PosTransType[PosTransType["InternalTransfer"] = 9] = "InternalTransfer";
    PosTransType[PosTransType["TransferOfFirm"] = 10] = "TransferOfFirm";
    PosTransType[PosTransType["ExternalTransfer"] = 11] = "ExternalTransfer";
    PosTransType[PosTransType["CorporateAction"] = 12] = "CorporateAction";
    PosTransType[PosTransType["Notification"] = 13] = "Notification";
    PosTransType[PosTransType["PositionCreation"] = 14] = "PositionCreation";
    PosTransType[PosTransType["CloseOut"] = 15] = "CloseOut";
    PosTransType[PosTransType["Reopen"] = 16] = "Reopen";
})(PosTransType = exports.PosTransType || (exports.PosTransType = {}));
var PosMaintAction;
(function (PosMaintAction) {
    PosMaintAction[PosMaintAction["New"] = 1] = "New";
    PosMaintAction[PosMaintAction["Replace"] = 2] = "Replace";
    PosMaintAction[PosMaintAction["Cancel"] = 3] = "Cancel";
    PosMaintAction[PosMaintAction["Reverse"] = 4] = "Reverse";
})(PosMaintAction = exports.PosMaintAction || (exports.PosMaintAction = {}));
var SettlSessID;
(function (SettlSessID) {
    SettlSessID["Intraday"] = "ITD";
    SettlSessID["RegularTradingHours"] = "RTH";
    SettlSessID["ElectronicTradingHours"] = "ETH";
    SettlSessID["EndOfDay"] = "EOD";
})(SettlSessID = exports.SettlSessID || (exports.SettlSessID = {}));
var AdjustmentType;
(function (AdjustmentType) {
    AdjustmentType[AdjustmentType["ProcessRequestAsMarginDisposition"] = 0] = "ProcessRequestAsMarginDisposition";
    AdjustmentType[AdjustmentType["DeltaPlus"] = 1] = "DeltaPlus";
    AdjustmentType[AdjustmentType["DeltaMinus"] = 2] = "DeltaMinus";
    AdjustmentType[AdjustmentType["Final"] = 3] = "Final";
    AdjustmentType[AdjustmentType["CustomerSpecificPosition"] = 4] = "CustomerSpecificPosition";
})(AdjustmentType = exports.AdjustmentType || (exports.AdjustmentType = {}));
var PosMaintStatus;
(function (PosMaintStatus) {
    PosMaintStatus[PosMaintStatus["Accepted"] = 0] = "Accepted";
    PosMaintStatus[PosMaintStatus["AcceptedWithWarnings"] = 1] = "AcceptedWithWarnings";
    PosMaintStatus[PosMaintStatus["Rejected"] = 2] = "Rejected";
    PosMaintStatus[PosMaintStatus["Completed"] = 3] = "Completed";
    PosMaintStatus[PosMaintStatus["CompletedWithWarnings"] = 4] = "CompletedWithWarnings";
})(PosMaintStatus = exports.PosMaintStatus || (exports.PosMaintStatus = {}));
var PosMaintResult;
(function (PosMaintResult) {
    PosMaintResult[PosMaintResult["SuccessfulCompletionNoWarningsOrErrors"] = 0] = "SuccessfulCompletionNoWarningsOrErrors";
    PosMaintResult[PosMaintResult["Rejected"] = 1] = "Rejected";
    PosMaintResult[PosMaintResult["Other"] = 99] = "Other";
})(PosMaintResult = exports.PosMaintResult || (exports.PosMaintResult = {}));
var PosReqType;
(function (PosReqType) {
    PosReqType[PosReqType["Positions"] = 0] = "Positions";
    PosReqType[PosReqType["Trades"] = 1] = "Trades";
    PosReqType[PosReqType["Exercises"] = 2] = "Exercises";
    PosReqType[PosReqType["Assignments"] = 3] = "Assignments";
    PosReqType[PosReqType["SettlementActivity"] = 4] = "SettlementActivity";
    PosReqType[PosReqType["BackoutMessage"] = 5] = "BackoutMessage";
    PosReqType[PosReqType["DeltaPositions"] = 6] = "DeltaPositions";
    PosReqType[PosReqType["NetPosition"] = 7] = "NetPosition";
    PosReqType[PosReqType["LargePositionsReporting"] = 8] = "LargePositionsReporting";
    PosReqType[PosReqType["ExercisePositionReportingSubmission"] = 9] = "ExercisePositionReportingSubmission";
    PosReqType[PosReqType["PositionLimitReportingSubmission"] = 10] = "PositionLimitReportingSubmission";
})(PosReqType = exports.PosReqType || (exports.PosReqType = {}));
var ResponseTransportType;
(function (ResponseTransportType) {
    ResponseTransportType[ResponseTransportType["InBandDefault"] = 0] = "InBandDefault";
    ResponseTransportType[ResponseTransportType["OutOfBand"] = 1] = "OutOfBand";
})(ResponseTransportType = exports.ResponseTransportType || (exports.ResponseTransportType = {}));
var PosReqResult;
(function (PosReqResult) {
    PosReqResult[PosReqResult["ValidRequest"] = 0] = "ValidRequest";
    PosReqResult[PosReqResult["InvalidOrUnsupportedRequest"] = 1] = "InvalidOrUnsupportedRequest";
    PosReqResult[PosReqResult["NoPositionsFoundThatMatchCriteria"] = 2] = "NoPositionsFoundThatMatchCriteria";
    PosReqResult[PosReqResult["NotAuthorizedToRequestPositions"] = 3] = "NotAuthorizedToRequestPositions";
    PosReqResult[PosReqResult["RequestForPositionNotSupported"] = 4] = "RequestForPositionNotSupported";
    PosReqResult[PosReqResult["OtherUseText58InConjunctionWithThisCodeForAnExplaination"] = 99] = "OtherUseText58InConjunctionWithThisCodeForAnExplaination";
})(PosReqResult = exports.PosReqResult || (exports.PosReqResult = {}));
var PosReqStatus;
(function (PosReqStatus) {
    PosReqStatus[PosReqStatus["Completed"] = 0] = "Completed";
    PosReqStatus[PosReqStatus["CompletedWithWarnings"] = 1] = "CompletedWithWarnings";
    PosReqStatus[PosReqStatus["Rejected"] = 2] = "Rejected";
})(PosReqStatus = exports.PosReqStatus || (exports.PosReqStatus = {}));
var SettlPriceType;
(function (SettlPriceType) {
    SettlPriceType[SettlPriceType["Final"] = 1] = "Final";
    SettlPriceType[SettlPriceType["Theoretical"] = 2] = "Theoretical";
})(SettlPriceType = exports.SettlPriceType || (exports.SettlPriceType = {}));
var UnderlyingSettlPriceType;
(function (UnderlyingSettlPriceType) {
    UnderlyingSettlPriceType[UnderlyingSettlPriceType["Final"] = 1] = "Final";
    UnderlyingSettlPriceType[UnderlyingSettlPriceType["Theoretical"] = 2] = "Theoretical";
})(UnderlyingSettlPriceType = exports.UnderlyingSettlPriceType || (exports.UnderlyingSettlPriceType = {}));
var AssignmentMethod;
(function (AssignmentMethod) {
    AssignmentMethod["ProRata"] = "P";
    AssignmentMethod["Random"] = "R";
})(AssignmentMethod = exports.AssignmentMethod || (exports.AssignmentMethod = {}));
var ExerciseMethod;
(function (ExerciseMethod) {
    ExerciseMethod["Automatic"] = "A";
    ExerciseMethod["Manual"] = "M";
})(ExerciseMethod = exports.ExerciseMethod || (exports.ExerciseMethod = {}));
var TradeRequestResult;
(function (TradeRequestResult) {
    TradeRequestResult[TradeRequestResult["SuccessfulDefault"] = 0] = "SuccessfulDefault";
    TradeRequestResult[TradeRequestResult["InvalidOrUnknownInstrument"] = 1] = "InvalidOrUnknownInstrument";
    TradeRequestResult[TradeRequestResult["InvalidTypeOfTradeRequested"] = 2] = "InvalidTypeOfTradeRequested";
    TradeRequestResult[TradeRequestResult["InvalidParties"] = 3] = "InvalidParties";
    TradeRequestResult[TradeRequestResult["InvalidTransportTypeRequested"] = 4] = "InvalidTransportTypeRequested";
    TradeRequestResult[TradeRequestResult["InvalidDestinationRequested"] = 5] = "InvalidDestinationRequested";
    TradeRequestResult[TradeRequestResult["TradeRequestTypeNotSupported"] = 8] = "TradeRequestTypeNotSupported";
    TradeRequestResult[TradeRequestResult["NotAuthorized"] = 9] = "NotAuthorized";
    TradeRequestResult[TradeRequestResult["Other"] = 99] = "Other";
})(TradeRequestResult = exports.TradeRequestResult || (exports.TradeRequestResult = {}));
var TradeRequestStatus;
(function (TradeRequestStatus) {
    TradeRequestStatus[TradeRequestStatus["Accepted"] = 0] = "Accepted";
    TradeRequestStatus[TradeRequestStatus["Completed"] = 1] = "Completed";
    TradeRequestStatus[TradeRequestStatus["Rejected"] = 2] = "Rejected";
})(TradeRequestStatus = exports.TradeRequestStatus || (exports.TradeRequestStatus = {}));
var TradeReportRejectReason;
(function (TradeReportRejectReason) {
    TradeReportRejectReason[TradeReportRejectReason["SuccessfulDefault"] = 0] = "SuccessfulDefault";
    TradeReportRejectReason[TradeReportRejectReason["InvalidPartyInformation"] = 1] = "InvalidPartyInformation";
    TradeReportRejectReason[TradeReportRejectReason["UnknownInstrument"] = 2] = "UnknownInstrument";
    TradeReportRejectReason[TradeReportRejectReason["UnauthorizedToReportTrades"] = 3] = "UnauthorizedToReportTrades";
    TradeReportRejectReason[TradeReportRejectReason["InvalidTradeType"] = 4] = "InvalidTradeType";
    TradeReportRejectReason[TradeReportRejectReason["PriceExceedsCurrentPriceBand"] = 5] = "PriceExceedsCurrentPriceBand";
    TradeReportRejectReason[TradeReportRejectReason["ReferencePriceNotAvailable"] = 6] = "ReferencePriceNotAvailable";
    TradeReportRejectReason[TradeReportRejectReason["NotionalValueExceedsThreshold"] = 7] = "NotionalValueExceedsThreshold";
    TradeReportRejectReason[TradeReportRejectReason["Other"] = 99] = "Other";
})(TradeReportRejectReason = exports.TradeReportRejectReason || (exports.TradeReportRejectReason = {}));
var SideMultiLegReportingType;
(function (SideMultiLegReportingType) {
    SideMultiLegReportingType[SideMultiLegReportingType["SingleSecurityDefaultIfNotSpecified"] = 1] = "SingleSecurityDefaultIfNotSpecified";
    SideMultiLegReportingType[SideMultiLegReportingType["IndividualLegOfAMultilegSecurity"] = 2] = "IndividualLegOfAMultilegSecurity";
    SideMultiLegReportingType[SideMultiLegReportingType["MultilegSecurity"] = 3] = "MultilegSecurity";
})(SideMultiLegReportingType = exports.SideMultiLegReportingType || (exports.SideMultiLegReportingType = {}));
var Nested2PartyIDSource;
(function (Nested2PartyIDSource) {
    Nested2PartyIDSource["KoreanInvestorId"] = "1";
    Nested2PartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    Nested2PartyIDSource["TaiwaneseTradingAcct"] = "3";
    Nested2PartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    Nested2PartyIDSource["ChineseInvestorId"] = "5";
    Nested2PartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    Nested2PartyIDSource["UsSocialSecurityNumber"] = "7";
    Nested2PartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    Nested2PartyIDSource["AustralianBusinessNumber"] = "9";
    Nested2PartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    Nested2PartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    Nested2PartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    Nested2PartyIDSource["ProprietaryCustomCode"] = "D";
    Nested2PartyIDSource["IsoCountryCode"] = "E";
    Nested2PartyIDSource["AustralianTaxFileNumber"] = "A";
    Nested2PartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    Nested2PartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    Nested2PartyIDSource["TaxId"] = "J";
    Nested2PartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    Nested2PartyIDSource["AustralianCompanyNumber"] = "K";
    Nested2PartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    Nested2PartyIDSource["CftcReportingFirmIdentifier"] = "M";
    Nested2PartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    Nested2PartyIDSource["InterimIdentifier"] = "O";
    Nested2PartyIDSource["ShortCodeIdentifier"] = "P";
    Nested2PartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(Nested2PartyIDSource = exports.Nested2PartyIDSource || (exports.Nested2PartyIDSource = {}));
var Nested2PartyRole;
(function (Nested2PartyRole) {
    Nested2PartyRole[Nested2PartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    Nested2PartyRole[Nested2PartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    Nested2PartyRole[Nested2PartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    Nested2PartyRole[Nested2PartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    Nested2PartyRole[Nested2PartyRole["InvestorId"] = 5] = "InvestorId";
    Nested2PartyRole[Nested2PartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    Nested2PartyRole[Nested2PartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    Nested2PartyRole[Nested2PartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    Nested2PartyRole[Nested2PartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    Nested2PartyRole[Nested2PartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    Nested2PartyRole[Nested2PartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    Nested2PartyRole[Nested2PartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    Nested2PartyRole[Nested2PartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    Nested2PartyRole[Nested2PartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    Nested2PartyRole[Nested2PartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    Nested2PartyRole[Nested2PartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    Nested2PartyRole[Nested2PartyRole["ContraFirm"] = 17] = "ContraFirm";
    Nested2PartyRole[Nested2PartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    Nested2PartyRole[Nested2PartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    Nested2PartyRole[Nested2PartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    Nested2PartyRole[Nested2PartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    Nested2PartyRole[Nested2PartyRole["Exchange"] = 22] = "Exchange";
    Nested2PartyRole[Nested2PartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    Nested2PartyRole[Nested2PartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    Nested2PartyRole[Nested2PartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    Nested2PartyRole[Nested2PartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    Nested2PartyRole[Nested2PartyRole["Custodian"] = 28] = "Custodian";
    Nested2PartyRole[Nested2PartyRole["Intermediary"] = 29] = "Intermediary";
    Nested2PartyRole[Nested2PartyRole["Agent"] = 30] = "Agent";
    Nested2PartyRole[Nested2PartyRole["SubCustodian"] = 31] = "SubCustodian";
    Nested2PartyRole[Nested2PartyRole["Beneficiary"] = 32] = "Beneficiary";
    Nested2PartyRole[Nested2PartyRole["InterestedParty"] = 33] = "InterestedParty";
    Nested2PartyRole[Nested2PartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    Nested2PartyRole[Nested2PartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    Nested2PartyRole[Nested2PartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    Nested2PartyRole[Nested2PartyRole["ContraTrader"] = 37] = "ContraTrader";
    Nested2PartyRole[Nested2PartyRole["PositionAccount"] = 38] = "PositionAccount";
    Nested2PartyRole[Nested2PartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    Nested2PartyRole[Nested2PartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    Nested2PartyRole[Nested2PartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    Nested2PartyRole[Nested2PartyRole["ContraExchange"] = 42] = "ContraExchange";
    Nested2PartyRole[Nested2PartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    Nested2PartyRole[Nested2PartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    Nested2PartyRole[Nested2PartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    Nested2PartyRole[Nested2PartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    Nested2PartyRole[Nested2PartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    Nested2PartyRole[Nested2PartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    Nested2PartyRole[Nested2PartyRole["AssetManager"] = 49] = "AssetManager";
    Nested2PartyRole[Nested2PartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    Nested2PartyRole[Nested2PartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    Nested2PartyRole[Nested2PartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    Nested2PartyRole[Nested2PartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    Nested2PartyRole[Nested2PartyRole["SenderLocation"] = 54] = "SenderLocation";
    Nested2PartyRole[Nested2PartyRole["SessionId"] = 55] = "SessionId";
    Nested2PartyRole[Nested2PartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    Nested2PartyRole[Nested2PartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    Nested2PartyRole[Nested2PartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    Nested2PartyRole[Nested2PartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    Nested2PartyRole[Nested2PartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    Nested2PartyRole[Nested2PartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    Nested2PartyRole[Nested2PartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    Nested2PartyRole[Nested2PartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    Nested2PartyRole[Nested2PartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    Nested2PartyRole[Nested2PartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    Nested2PartyRole[Nested2PartyRole["MarketMaker"] = 66] = "MarketMaker";
    Nested2PartyRole[Nested2PartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    Nested2PartyRole[Nested2PartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    Nested2PartyRole[Nested2PartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    Nested2PartyRole[Nested2PartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    Nested2PartyRole[Nested2PartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    Nested2PartyRole[Nested2PartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    Nested2PartyRole[Nested2PartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    Nested2PartyRole[Nested2PartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    Nested2PartyRole[Nested2PartyRole["LocationId"] = 75] = "LocationId";
    Nested2PartyRole[Nested2PartyRole["DeskId"] = 76] = "DeskId";
    Nested2PartyRole[Nested2PartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    Nested2PartyRole[Nested2PartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    Nested2PartyRole[Nested2PartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    Nested2PartyRole[Nested2PartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    Nested2PartyRole[Nested2PartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    Nested2PartyRole[Nested2PartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    Nested2PartyRole[Nested2PartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    Nested2PartyRole[Nested2PartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    Nested2PartyRole[Nested2PartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    Nested2PartyRole[Nested2PartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    Nested2PartyRole[Nested2PartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    Nested2PartyRole[Nested2PartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    Nested2PartyRole[Nested2PartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    Nested2PartyRole[Nested2PartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    Nested2PartyRole[Nested2PartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    Nested2PartyRole[Nested2PartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    Nested2PartyRole[Nested2PartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    Nested2PartyRole[Nested2PartyRole["AwayMarket"] = 94] = "AwayMarket";
    Nested2PartyRole[Nested2PartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    Nested2PartyRole[Nested2PartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    Nested2PartyRole[Nested2PartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    Nested2PartyRole[Nested2PartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    Nested2PartyRole[Nested2PartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    Nested2PartyRole[Nested2PartyRole["MarginAccount"] = 100] = "MarginAccount";
    Nested2PartyRole[Nested2PartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    Nested2PartyRole[Nested2PartyRole["DataRepository"] = 102] = "DataRepository";
    Nested2PartyRole[Nested2PartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    Nested2PartyRole[Nested2PartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    Nested2PartyRole[Nested2PartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    Nested2PartyRole[Nested2PartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    Nested2PartyRole[Nested2PartyRole["Correspondent"] = 107] = "Correspondent";
    Nested2PartyRole[Nested2PartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    Nested2PartyRole[Nested2PartyRole["Borrower"] = 110] = "Borrower";
    Nested2PartyRole[Nested2PartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    Nested2PartyRole[Nested2PartyRole["Guarantor"] = 112] = "Guarantor";
    Nested2PartyRole[Nested2PartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    Nested2PartyRole[Nested2PartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    Nested2PartyRole[Nested2PartyRole["HedgingParty"] = 115] = "HedgingParty";
    Nested2PartyRole[Nested2PartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    Nested2PartyRole[Nested2PartyRole["SalesPerson"] = 117] = "SalesPerson";
    Nested2PartyRole[Nested2PartyRole["Operator"] = 118] = "Operator";
    Nested2PartyRole[Nested2PartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    Nested2PartyRole[Nested2PartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    Nested2PartyRole[Nested2PartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    Nested2PartyRole[Nested2PartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(Nested2PartyRole = exports.Nested2PartyRole || (exports.Nested2PartyRole = {}));
var BenchmarkSecurityIDSource;
(function (BenchmarkSecurityIDSource) {
    BenchmarkSecurityIDSource["Cusip"] = "1";
    BenchmarkSecurityIDSource["Sedol"] = "2";
    BenchmarkSecurityIDSource["Quik"] = "3";
    BenchmarkSecurityIDSource["IsinNumber"] = "4";
    BenchmarkSecurityIDSource["RicCode"] = "5";
    BenchmarkSecurityIDSource["IsoCurrencyCode"] = "6";
    BenchmarkSecurityIDSource["IsoCountryCode"] = "7";
    BenchmarkSecurityIDSource["ExchangeSymbol"] = "8";
    BenchmarkSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    BenchmarkSecurityIDSource["BloombergSymbol"] = "A";
    BenchmarkSecurityIDSource["Wertpapier"] = "B";
    BenchmarkSecurityIDSource["Dutch"] = "C";
    BenchmarkSecurityIDSource["Valoren"] = "D";
    BenchmarkSecurityIDSource["Sicovam"] = "E";
    BenchmarkSecurityIDSource["Belgian"] = "F";
    BenchmarkSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    BenchmarkSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    BenchmarkSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    BenchmarkSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    BenchmarkSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    BenchmarkSecurityIDSource["LetterOfCredit"] = "L";
    BenchmarkSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    BenchmarkSecurityIDSource["MarkitRedEntityClip"] = "N";
    BenchmarkSecurityIDSource["MarkitRedPairClip"] = "P";
    BenchmarkSecurityIDSource["CftcCommodityCode"] = "Q";
    BenchmarkSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    BenchmarkSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    BenchmarkSecurityIDSource["LegalEntityIdentifier"] = "T";
    BenchmarkSecurityIDSource["Synthetic"] = "U";
    BenchmarkSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(BenchmarkSecurityIDSource = exports.BenchmarkSecurityIDSource || (exports.BenchmarkSecurityIDSource = {}));
var TrdRegTimestampType;
(function (TrdRegTimestampType) {
    TrdRegTimestampType[TrdRegTimestampType["ExecutionTime"] = 1] = "ExecutionTime";
    TrdRegTimestampType[TrdRegTimestampType["TimeIn"] = 2] = "TimeIn";
    TrdRegTimestampType[TrdRegTimestampType["TimeOut"] = 3] = "TimeOut";
    TrdRegTimestampType[TrdRegTimestampType["BrokerReceipt"] = 4] = "BrokerReceipt";
    TrdRegTimestampType[TrdRegTimestampType["BrokerExecution"] = 5] = "BrokerExecution";
    TrdRegTimestampType[TrdRegTimestampType["DeskReceipt"] = 6] = "DeskReceipt";
    TrdRegTimestampType[TrdRegTimestampType["SubmissionToClearing"] = 7] = "SubmissionToClearing";
    TrdRegTimestampType[TrdRegTimestampType["TimePriority"] = 8] = "TimePriority";
    TrdRegTimestampType[TrdRegTimestampType["OrderbookEntryTime"] = 9] = "OrderbookEntryTime";
    TrdRegTimestampType[TrdRegTimestampType["OrderSubmissionTime"] = 10] = "OrderSubmissionTime";
    TrdRegTimestampType[TrdRegTimestampType["PubliclyReported"] = 11] = "PubliclyReported";
    TrdRegTimestampType[TrdRegTimestampType["PublicReportUpdated"] = 12] = "PublicReportUpdated";
    TrdRegTimestampType[TrdRegTimestampType["NonPubliclyReported"] = 13] = "NonPubliclyReported";
    TrdRegTimestampType[TrdRegTimestampType["NonPublicReportUpdated"] = 14] = "NonPublicReportUpdated";
    TrdRegTimestampType[TrdRegTimestampType["SubmittedForConfirmation"] = 15] = "SubmittedForConfirmation";
    TrdRegTimestampType[TrdRegTimestampType["UpdatedForConfirmation"] = 16] = "UpdatedForConfirmation";
    TrdRegTimestampType[TrdRegTimestampType["Confirmed"] = 17] = "Confirmed";
    TrdRegTimestampType[TrdRegTimestampType["UpdatedForClearing"] = 18] = "UpdatedForClearing";
    TrdRegTimestampType[TrdRegTimestampType["Cleared"] = 19] = "Cleared";
    TrdRegTimestampType[TrdRegTimestampType["AllocationsSubmitted"] = 20] = "AllocationsSubmitted";
    TrdRegTimestampType[TrdRegTimestampType["AllocationsUpdated"] = 21] = "AllocationsUpdated";
    TrdRegTimestampType[TrdRegTimestampType["ApplicationCompleted"] = 22] = "ApplicationCompleted";
    TrdRegTimestampType[TrdRegTimestampType["SubmittedToRepository"] = 23] = "SubmittedToRepository";
    TrdRegTimestampType[TrdRegTimestampType["PostTradeContinuationEvent"] = 24] = "PostTradeContinuationEvent";
    TrdRegTimestampType[TrdRegTimestampType["PostTradeValuation"] = 25] = "PostTradeValuation";
    TrdRegTimestampType[TrdRegTimestampType["PreviousTimePriority"] = 26] = "PreviousTimePriority";
})(TrdRegTimestampType = exports.TrdRegTimestampType || (exports.TrdRegTimestampType = {}));
var ConfirmType;
(function (ConfirmType) {
    ConfirmType[ConfirmType["Status"] = 1] = "Status";
    ConfirmType[ConfirmType["Confirmation"] = 2] = "Confirmation";
    ConfirmType[ConfirmType["ConfirmationRequestRejectedReasonCanBeStatedInText58Field"] = 3] = "ConfirmationRequestRejectedReasonCanBeStatedInText58Field";
})(ConfirmType = exports.ConfirmType || (exports.ConfirmType = {}));
var ConfirmRejReason;
(function (ConfirmRejReason) {
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingAccount"] = 1] = "IncorrectOrMissingAccount";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingSettlementInstructions"] = 2] = "IncorrectOrMissingSettlementInstructions";
    ConfirmRejReason[ConfirmRejReason["UnknownOrMissingIndividualAllocId467"] = 3] = "UnknownOrMissingIndividualAllocId467";
    ConfirmRejReason[ConfirmRejReason["TransactionNotRecognized"] = 4] = "TransactionNotRecognized";
    ConfirmRejReason[ConfirmRejReason["DuplicateTransaction"] = 5] = "DuplicateTransaction";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingInstrument"] = 6] = "IncorrectOrMissingInstrument";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingPrice"] = 7] = "IncorrectOrMissingPrice";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingCommission"] = 8] = "IncorrectOrMissingCommission";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingSettlementDate"] = 9] = "IncorrectOrMissingSettlementDate";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingFundIdOrFundName"] = 10] = "IncorrectOrMissingFundIdOrFundName";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingQuantity"] = 11] = "IncorrectOrMissingQuantity";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingFees"] = 12] = "IncorrectOrMissingFees";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingTax"] = 13] = "IncorrectOrMissingTax";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingParty"] = 14] = "IncorrectOrMissingParty";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingSide"] = 15] = "IncorrectOrMissingSide";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingNetMoney"] = 16] = "IncorrectOrMissingNetMoney";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingTradeDate"] = 17] = "IncorrectOrMissingTradeDate";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingSettlementCurrencyInstructions"] = 18] = "IncorrectOrMissingSettlementCurrencyInstructions";
    ConfirmRejReason[ConfirmRejReason["IncorrectOrMissingCapacity"] = 19] = "IncorrectOrMissingCapacity";
    ConfirmRejReason[ConfirmRejReason["Other"] = 99] = "Other";
})(ConfirmRejReason = exports.ConfirmRejReason || (exports.ConfirmRejReason = {}));
var BookingType;
(function (BookingType) {
    BookingType[BookingType["RegularBooking"] = 0] = "RegularBooking";
    BookingType[BookingType["CfdContractForDifference"] = 1] = "CfdContractForDifference";
    BookingType[BookingType["TotalReturnSwap"] = 2] = "TotalReturnSwap";
})(BookingType = exports.BookingType || (exports.BookingType = {}));
var IndividualAllocRejCode;
(function (IndividualAllocRejCode) {
    IndividualAllocRejCode[IndividualAllocRejCode["UnknownOrMissingAccountS"] = 0] = "UnknownOrMissingAccountS";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingBlockQuantity"] = 1] = "IncorrectOrMissingBlockQuantity";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingAveragePrice"] = 2] = "IncorrectOrMissingAveragePrice";
    IndividualAllocRejCode[IndividualAllocRejCode["UnknownExecutingBrokerMnemonic"] = 3] = "UnknownExecutingBrokerMnemonic";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingCommission"] = 4] = "IncorrectOrMissingCommission";
    IndividualAllocRejCode[IndividualAllocRejCode["UnknownOrderId37"] = 5] = "UnknownOrderId37";
    IndividualAllocRejCode[IndividualAllocRejCode["UnknownListId66"] = 6] = "UnknownListId66";
    IndividualAllocRejCode[IndividualAllocRejCode["OtherFurtherInText58"] = 7] = "OtherFurtherInText58";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingAllocatedQuantity"] = 8] = "IncorrectOrMissingAllocatedQuantity";
    IndividualAllocRejCode[IndividualAllocRejCode["CalculationDifference"] = 9] = "CalculationDifference";
    IndividualAllocRejCode[IndividualAllocRejCode["UnknownOrStaleExecId"] = 10] = "UnknownOrStaleExecId";
    IndividualAllocRejCode[IndividualAllocRejCode["MismatchedData"] = 11] = "MismatchedData";
    IndividualAllocRejCode[IndividualAllocRejCode["UnknownClOrdId"] = 12] = "UnknownClOrdId";
    IndividualAllocRejCode[IndividualAllocRejCode["WarehouseRequestRejected"] = 13] = "WarehouseRequestRejected";
    IndividualAllocRejCode[IndividualAllocRejCode["DuplicateOrMissingIndividualAllocId467"] = 14] = "DuplicateOrMissingIndividualAllocId467";
    IndividualAllocRejCode[IndividualAllocRejCode["TradeNotRecognized"] = 15] = "TradeNotRecognized";
    IndividualAllocRejCode[IndividualAllocRejCode["TradePreviouslyAllocated"] = 16] = "TradePreviouslyAllocated";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingInstrument"] = 17] = "IncorrectOrMissingInstrument";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingSettlementDate"] = 18] = "IncorrectOrMissingSettlementDate";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingFundIdOrFundName"] = 19] = "IncorrectOrMissingFundIdOrFundName";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingSettlementInstructions"] = 20] = "IncorrectOrMissingSettlementInstructions";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingFees"] = 21] = "IncorrectOrMissingFees";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingTax"] = 22] = "IncorrectOrMissingTax";
    IndividualAllocRejCode[IndividualAllocRejCode["UnknownOrMissingParty"] = 23] = "UnknownOrMissingParty";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingSide"] = 24] = "IncorrectOrMissingSide";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingNetMoney"] = 25] = "IncorrectOrMissingNetMoney";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingTradeDate"] = 26] = "IncorrectOrMissingTradeDate";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrectOrMissingSettlementCurrencyInstructions"] = 27] = "IncorrectOrMissingSettlementCurrencyInstructions";
    IndividualAllocRejCode[IndividualAllocRejCode["IncorrrectOrMissingProcessCode81"] = 28] = "IncorrrectOrMissingProcessCode81";
    IndividualAllocRejCode[IndividualAllocRejCode["Other"] = 99] = "Other";
})(IndividualAllocRejCode = exports.IndividualAllocRejCode || (exports.IndividualAllocRejCode = {}));
var AllocSettlInstType;
(function (AllocSettlInstType) {
    AllocSettlInstType[AllocSettlInstType["UseDefaultInstructions"] = 0] = "UseDefaultInstructions";
    AllocSettlInstType[AllocSettlInstType["DeriveFromParametersProvided"] = 1] = "DeriveFromParametersProvided";
    AllocSettlInstType[AllocSettlInstType["FullDetailsProvided"] = 2] = "FullDetailsProvided";
    AllocSettlInstType[AllocSettlInstType["SsiDbIDsProvided"] = 3] = "SsiDbIDsProvided";
    AllocSettlInstType[AllocSettlInstType["PhoneForInstructions"] = 4] = "PhoneForInstructions";
})(AllocSettlInstType = exports.AllocSettlInstType || (exports.AllocSettlInstType = {}));
var SettlPartyIDSource;
(function (SettlPartyIDSource) {
    SettlPartyIDSource["KoreanInvestorId"] = "1";
    SettlPartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    SettlPartyIDSource["TaiwaneseTradingAcct"] = "3";
    SettlPartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    SettlPartyIDSource["ChineseInvestorId"] = "5";
    SettlPartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    SettlPartyIDSource["UsSocialSecurityNumber"] = "7";
    SettlPartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    SettlPartyIDSource["AustralianBusinessNumber"] = "9";
    SettlPartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    SettlPartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    SettlPartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    SettlPartyIDSource["ProprietaryCustomCode"] = "D";
    SettlPartyIDSource["IsoCountryCode"] = "E";
    SettlPartyIDSource["AustralianTaxFileNumber"] = "A";
    SettlPartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    SettlPartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    SettlPartyIDSource["TaxId"] = "J";
    SettlPartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    SettlPartyIDSource["AustralianCompanyNumber"] = "K";
    SettlPartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    SettlPartyIDSource["CftcReportingFirmIdentifier"] = "M";
    SettlPartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    SettlPartyIDSource["InterimIdentifier"] = "O";
    SettlPartyIDSource["ShortCodeIdentifier"] = "P";
    SettlPartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(SettlPartyIDSource = exports.SettlPartyIDSource || (exports.SettlPartyIDSource = {}));
var SettlPartyRole;
(function (SettlPartyRole) {
    SettlPartyRole[SettlPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    SettlPartyRole[SettlPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    SettlPartyRole[SettlPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    SettlPartyRole[SettlPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    SettlPartyRole[SettlPartyRole["InvestorId"] = 5] = "InvestorId";
    SettlPartyRole[SettlPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    SettlPartyRole[SettlPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    SettlPartyRole[SettlPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    SettlPartyRole[SettlPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    SettlPartyRole[SettlPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    SettlPartyRole[SettlPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    SettlPartyRole[SettlPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    SettlPartyRole[SettlPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    SettlPartyRole[SettlPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    SettlPartyRole[SettlPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    SettlPartyRole[SettlPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    SettlPartyRole[SettlPartyRole["ContraFirm"] = 17] = "ContraFirm";
    SettlPartyRole[SettlPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    SettlPartyRole[SettlPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    SettlPartyRole[SettlPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    SettlPartyRole[SettlPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    SettlPartyRole[SettlPartyRole["Exchange"] = 22] = "Exchange";
    SettlPartyRole[SettlPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    SettlPartyRole[SettlPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    SettlPartyRole[SettlPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    SettlPartyRole[SettlPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    SettlPartyRole[SettlPartyRole["Custodian"] = 28] = "Custodian";
    SettlPartyRole[SettlPartyRole["Intermediary"] = 29] = "Intermediary";
    SettlPartyRole[SettlPartyRole["Agent"] = 30] = "Agent";
    SettlPartyRole[SettlPartyRole["SubCustodian"] = 31] = "SubCustodian";
    SettlPartyRole[SettlPartyRole["Beneficiary"] = 32] = "Beneficiary";
    SettlPartyRole[SettlPartyRole["InterestedParty"] = 33] = "InterestedParty";
    SettlPartyRole[SettlPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    SettlPartyRole[SettlPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    SettlPartyRole[SettlPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    SettlPartyRole[SettlPartyRole["ContraTrader"] = 37] = "ContraTrader";
    SettlPartyRole[SettlPartyRole["PositionAccount"] = 38] = "PositionAccount";
    SettlPartyRole[SettlPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    SettlPartyRole[SettlPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    SettlPartyRole[SettlPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    SettlPartyRole[SettlPartyRole["ContraExchange"] = 42] = "ContraExchange";
    SettlPartyRole[SettlPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    SettlPartyRole[SettlPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    SettlPartyRole[SettlPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    SettlPartyRole[SettlPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    SettlPartyRole[SettlPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    SettlPartyRole[SettlPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    SettlPartyRole[SettlPartyRole["AssetManager"] = 49] = "AssetManager";
    SettlPartyRole[SettlPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    SettlPartyRole[SettlPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    SettlPartyRole[SettlPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    SettlPartyRole[SettlPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    SettlPartyRole[SettlPartyRole["SenderLocation"] = 54] = "SenderLocation";
    SettlPartyRole[SettlPartyRole["SessionId"] = 55] = "SessionId";
    SettlPartyRole[SettlPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    SettlPartyRole[SettlPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    SettlPartyRole[SettlPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    SettlPartyRole[SettlPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    SettlPartyRole[SettlPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    SettlPartyRole[SettlPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    SettlPartyRole[SettlPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    SettlPartyRole[SettlPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    SettlPartyRole[SettlPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    SettlPartyRole[SettlPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    SettlPartyRole[SettlPartyRole["MarketMaker"] = 66] = "MarketMaker";
    SettlPartyRole[SettlPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    SettlPartyRole[SettlPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    SettlPartyRole[SettlPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    SettlPartyRole[SettlPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    SettlPartyRole[SettlPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    SettlPartyRole[SettlPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    SettlPartyRole[SettlPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    SettlPartyRole[SettlPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    SettlPartyRole[SettlPartyRole["LocationId"] = 75] = "LocationId";
    SettlPartyRole[SettlPartyRole["DeskId"] = 76] = "DeskId";
    SettlPartyRole[SettlPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    SettlPartyRole[SettlPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    SettlPartyRole[SettlPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    SettlPartyRole[SettlPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    SettlPartyRole[SettlPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    SettlPartyRole[SettlPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    SettlPartyRole[SettlPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    SettlPartyRole[SettlPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    SettlPartyRole[SettlPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    SettlPartyRole[SettlPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    SettlPartyRole[SettlPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    SettlPartyRole[SettlPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    SettlPartyRole[SettlPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    SettlPartyRole[SettlPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    SettlPartyRole[SettlPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    SettlPartyRole[SettlPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    SettlPartyRole[SettlPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    SettlPartyRole[SettlPartyRole["AwayMarket"] = 94] = "AwayMarket";
    SettlPartyRole[SettlPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    SettlPartyRole[SettlPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    SettlPartyRole[SettlPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    SettlPartyRole[SettlPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    SettlPartyRole[SettlPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    SettlPartyRole[SettlPartyRole["MarginAccount"] = 100] = "MarginAccount";
    SettlPartyRole[SettlPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    SettlPartyRole[SettlPartyRole["DataRepository"] = 102] = "DataRepository";
    SettlPartyRole[SettlPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    SettlPartyRole[SettlPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    SettlPartyRole[SettlPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    SettlPartyRole[SettlPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    SettlPartyRole[SettlPartyRole["Correspondent"] = 107] = "Correspondent";
    SettlPartyRole[SettlPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    SettlPartyRole[SettlPartyRole["Borrower"] = 110] = "Borrower";
    SettlPartyRole[SettlPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    SettlPartyRole[SettlPartyRole["Guarantor"] = 112] = "Guarantor";
    SettlPartyRole[SettlPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    SettlPartyRole[SettlPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    SettlPartyRole[SettlPartyRole["HedgingParty"] = 115] = "HedgingParty";
    SettlPartyRole[SettlPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    SettlPartyRole[SettlPartyRole["SalesPerson"] = 117] = "SalesPerson";
    SettlPartyRole[SettlPartyRole["Operator"] = 118] = "Operator";
    SettlPartyRole[SettlPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    SettlPartyRole[SettlPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    SettlPartyRole[SettlPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    SettlPartyRole[SettlPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(SettlPartyRole = exports.SettlPartyRole || (exports.SettlPartyRole = {}));
var SettlPartySubIDType;
(function (SettlPartySubIDType) {
    SettlPartySubIDType[SettlPartySubIDType["Firm"] = 1] = "Firm";
    SettlPartySubIDType[SettlPartySubIDType["Person"] = 2] = "Person";
    SettlPartySubIDType[SettlPartySubIDType["System"] = 3] = "System";
    SettlPartySubIDType[SettlPartySubIDType["Application"] = 4] = "Application";
    SettlPartySubIDType[SettlPartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    SettlPartySubIDType[SettlPartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    SettlPartySubIDType[SettlPartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    SettlPartySubIDType[SettlPartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    SettlPartySubIDType[SettlPartySubIDType["ContactName"] = 9] = "ContactName";
    SettlPartySubIDType[SettlPartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    SettlPartySubIDType[SettlPartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    SettlPartySubIDType[SettlPartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    SettlPartySubIDType[SettlPartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    SettlPartySubIDType[SettlPartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    SettlPartySubIDType[SettlPartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    SettlPartySubIDType[SettlPartySubIDType["Bic"] = 16] = "Bic";
    SettlPartySubIDType[SettlPartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    SettlPartySubIDType[SettlPartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    SettlPartySubIDType[SettlPartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    SettlPartySubIDType[SettlPartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    SettlPartySubIDType[SettlPartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    SettlPartySubIDType[SettlPartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    SettlPartySubIDType[SettlPartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    SettlPartySubIDType[SettlPartySubIDType["Department"] = 24] = "Department";
    SettlPartySubIDType[SettlPartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    SettlPartySubIDType[SettlPartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    SettlPartySubIDType[SettlPartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    SettlPartySubIDType[SettlPartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    SettlPartySubIDType[SettlPartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    SettlPartySubIDType[SettlPartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    SettlPartySubIDType[SettlPartySubIDType["Location"] = 31] = "Location";
    SettlPartySubIDType[SettlPartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    SettlPartySubIDType[SettlPartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    SettlPartySubIDType[SettlPartySubIDType["AddressCity"] = 34] = "AddressCity";
    SettlPartySubIDType[SettlPartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    SettlPartySubIDType[SettlPartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    SettlPartySubIDType[SettlPartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    SettlPartySubIDType[SettlPartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    SettlPartySubIDType[SettlPartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    SettlPartySubIDType[SettlPartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    SettlPartySubIDType[SettlPartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    SettlPartySubIDType[SettlPartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    SettlPartySubIDType[SettlPartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    SettlPartySubIDType[SettlPartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    SettlPartySubIDType[SettlPartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    SettlPartySubIDType[SettlPartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    SettlPartySubIDType[SettlPartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    SettlPartySubIDType[SettlPartySubIDType["USPerson"] = 48] = "USPerson";
    SettlPartySubIDType[SettlPartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    SettlPartySubIDType[SettlPartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    SettlPartySubIDType[SettlPartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    SettlPartySubIDType[SettlPartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    SettlPartySubIDType[SettlPartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    SettlPartySubIDType[SettlPartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    SettlPartySubIDType[SettlPartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    SettlPartySubIDType[SettlPartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    SettlPartySubIDType[SettlPartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    SettlPartySubIDType[SettlPartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    SettlPartySubIDType[SettlPartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    SettlPartySubIDType[SettlPartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    SettlPartySubIDType[SettlPartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    SettlPartySubIDType[SettlPartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    SettlPartySubIDType[SettlPartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    SettlPartySubIDType[SettlPartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    SettlPartySubIDType[SettlPartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    SettlPartySubIDType[SettlPartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    SettlPartySubIDType[SettlPartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    SettlPartySubIDType[SettlPartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    SettlPartySubIDType[SettlPartySubIDType["EndUser"] = 69] = "EndUser";
    SettlPartySubIDType[SettlPartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    SettlPartySubIDType[SettlPartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    SettlPartySubIDType[SettlPartySubIDType["Domicile"] = 72] = "Domicile";
    SettlPartySubIDType[SettlPartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    SettlPartySubIDType[SettlPartySubIDType["Payer"] = 74] = "Payer";
    SettlPartySubIDType[SettlPartySubIDType["Receiver"] = 75] = "Receiver";
    SettlPartySubIDType[SettlPartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(SettlPartySubIDType = exports.SettlPartySubIDType || (exports.SettlPartySubIDType = {}));
var DlvyInstType;
(function (DlvyInstType) {
    DlvyInstType["Cash"] = "C";
    DlvyInstType["Securities"] = "S";
})(DlvyInstType = exports.DlvyInstType || (exports.DlvyInstType = {}));
var TerminationType;
(function (TerminationType) {
    TerminationType[TerminationType["Overnight"] = 1] = "Overnight";
    TerminationType[TerminationType["Term"] = 2] = "Term";
    TerminationType[TerminationType["Flexible"] = 3] = "Flexible";
    TerminationType[TerminationType["Open"] = 4] = "Open";
})(TerminationType = exports.TerminationType || (exports.TerminationType = {}));
var SettlInstReqRejCode;
(function (SettlInstReqRejCode) {
    SettlInstReqRejCode[SettlInstReqRejCode["UnableToProcessRequest"] = 0] = "UnableToProcessRequest";
    SettlInstReqRejCode[SettlInstReqRejCode["UnknownAccount"] = 1] = "UnknownAccount";
    SettlInstReqRejCode[SettlInstReqRejCode["NoMatchingSettlementInstructionsFound"] = 2] = "NoMatchingSettlementInstructionsFound";
    SettlInstReqRejCode[SettlInstReqRejCode["Other"] = 99] = "Other";
})(SettlInstReqRejCode = exports.SettlInstReqRejCode || (exports.SettlInstReqRejCode = {}));
var AllocReportType;
(function (AllocReportType) {
    AllocReportType[AllocReportType["PreliminaryRequestToIntermediary"] = 2] = "PreliminaryRequestToIntermediary";
    AllocReportType[AllocReportType["SellsideCalculatedUsingPreliminaryIncludesMiscFeesAndNetMoney"] = 3] = "SellsideCalculatedUsingPreliminaryIncludesMiscFeesAndNetMoney";
    AllocReportType[AllocReportType["SellsideCalculatedWithoutPreliminarySentUnsolicitedBySellsideIncludesMiscFeesAndNetMoney"] = 4] = "SellsideCalculatedWithoutPreliminarySentUnsolicitedBySellsideIncludesMiscFeesAndNetMoney";
    AllocReportType[AllocReportType["WarehouseRecap"] = 5] = "WarehouseRecap";
    AllocReportType[AllocReportType["RequestToIntermediary"] = 8] = "RequestToIntermediary";
    AllocReportType[AllocReportType["Accept"] = 9] = "Accept";
    AllocReportType[AllocReportType["Reject"] = 10] = "Reject";
    AllocReportType[AllocReportType["AcceptPending"] = 11] = "AcceptPending";
    AllocReportType[AllocReportType["Complete"] = 12] = "Complete";
    AllocReportType[AllocReportType["ReversePending"] = 14] = "ReversePending";
    AllocReportType[AllocReportType["GiveUp"] = 15] = "GiveUp";
    AllocReportType[AllocReportType["TakeUp"] = 16] = "TakeUp";
    AllocReportType[AllocReportType["Reversal"] = 17] = "Reversal";
    AllocReportType[AllocReportType["AllegedReversal"] = 18] = "AllegedReversal";
    AllocReportType[AllocReportType["SubAllocationGiveUp"] = 19] = "SubAllocationGiveUp";
})(AllocReportType = exports.AllocReportType || (exports.AllocReportType = {}));
var AllocCancReplaceReason;
(function (AllocCancReplaceReason) {
    AllocCancReplaceReason[AllocCancReplaceReason["OriginalDetailsIncompleteIncorrect"] = 1] = "OriginalDetailsIncompleteIncorrect";
    AllocCancReplaceReason[AllocCancReplaceReason["ChangeInUnderlyingOrderDetails"] = 2] = "ChangeInUnderlyingOrderDetails";
    AllocCancReplaceReason[AllocCancReplaceReason["CancelledByGiveUpFirm"] = 3] = "CancelledByGiveUpFirm";
    AllocCancReplaceReason[AllocCancReplaceReason["Other"] = 99] = "Other";
})(AllocCancReplaceReason = exports.AllocCancReplaceReason || (exports.AllocCancReplaceReason = {}));
var AllocAccountType;
(function (AllocAccountType) {
    AllocAccountType[AllocAccountType["AccountIsCarriedPnCustomerSideOfBooks"] = 1] = "AccountIsCarriedPnCustomerSideOfBooks";
    AllocAccountType[AllocAccountType["AccountIsCarriedOnNonCustomerSideOfBooks"] = 2] = "AccountIsCarriedOnNonCustomerSideOfBooks";
    AllocAccountType[AllocAccountType["HouseTrader"] = 3] = "HouseTrader";
    AllocAccountType[AllocAccountType["FloorTrader"] = 4] = "FloorTrader";
    AllocAccountType[AllocAccountType["AccountIsCarriedOnNonCustomerSideOfBooksAndIsCrossMargined"] = 6] = "AccountIsCarriedOnNonCustomerSideOfBooksAndIsCrossMargined";
    AllocAccountType[AllocAccountType["AccountIsHouseTraderAndIsCrossMargined"] = 7] = "AccountIsHouseTraderAndIsCrossMargined";
    AllocAccountType[AllocAccountType["JointBackOfficeAccountJbo"] = 8] = "JointBackOfficeAccountJbo";
})(AllocAccountType = exports.AllocAccountType || (exports.AllocAccountType = {}));
var PartySubIDType;
(function (PartySubIDType) {
    PartySubIDType[PartySubIDType["Firm"] = 1] = "Firm";
    PartySubIDType[PartySubIDType["Person"] = 2] = "Person";
    PartySubIDType[PartySubIDType["System"] = 3] = "System";
    PartySubIDType[PartySubIDType["Application"] = 4] = "Application";
    PartySubIDType[PartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    PartySubIDType[PartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    PartySubIDType[PartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    PartySubIDType[PartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    PartySubIDType[PartySubIDType["ContactName"] = 9] = "ContactName";
    PartySubIDType[PartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    PartySubIDType[PartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    PartySubIDType[PartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    PartySubIDType[PartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    PartySubIDType[PartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    PartySubIDType[PartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    PartySubIDType[PartySubIDType["Bic"] = 16] = "Bic";
    PartySubIDType[PartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    PartySubIDType[PartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    PartySubIDType[PartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    PartySubIDType[PartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    PartySubIDType[PartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    PartySubIDType[PartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    PartySubIDType[PartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    PartySubIDType[PartySubIDType["Department"] = 24] = "Department";
    PartySubIDType[PartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    PartySubIDType[PartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    PartySubIDType[PartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    PartySubIDType[PartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    PartySubIDType[PartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    PartySubIDType[PartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    PartySubIDType[PartySubIDType["Location"] = 31] = "Location";
    PartySubIDType[PartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    PartySubIDType[PartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    PartySubIDType[PartySubIDType["AddressCity"] = 34] = "AddressCity";
    PartySubIDType[PartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    PartySubIDType[PartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    PartySubIDType[PartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    PartySubIDType[PartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    PartySubIDType[PartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    PartySubIDType[PartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    PartySubIDType[PartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    PartySubIDType[PartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    PartySubIDType[PartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    PartySubIDType[PartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    PartySubIDType[PartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    PartySubIDType[PartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    PartySubIDType[PartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    PartySubIDType[PartySubIDType["USPerson"] = 48] = "USPerson";
    PartySubIDType[PartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    PartySubIDType[PartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    PartySubIDType[PartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    PartySubIDType[PartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    PartySubIDType[PartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    PartySubIDType[PartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    PartySubIDType[PartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    PartySubIDType[PartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    PartySubIDType[PartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    PartySubIDType[PartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    PartySubIDType[PartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    PartySubIDType[PartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    PartySubIDType[PartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    PartySubIDType[PartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    PartySubIDType[PartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    PartySubIDType[PartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    PartySubIDType[PartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    PartySubIDType[PartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    PartySubIDType[PartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    PartySubIDType[PartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    PartySubIDType[PartySubIDType["EndUser"] = 69] = "EndUser";
    PartySubIDType[PartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    PartySubIDType[PartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    PartySubIDType[PartySubIDType["Domicile"] = 72] = "Domicile";
    PartySubIDType[PartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    PartySubIDType[PartySubIDType["Payer"] = 74] = "Payer";
    PartySubIDType[PartySubIDType["Receiver"] = 75] = "Receiver";
    PartySubIDType[PartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(PartySubIDType = exports.PartySubIDType || (exports.PartySubIDType = {}));
var NestedPartySubIDType;
(function (NestedPartySubIDType) {
    NestedPartySubIDType[NestedPartySubIDType["Firm"] = 1] = "Firm";
    NestedPartySubIDType[NestedPartySubIDType["Person"] = 2] = "Person";
    NestedPartySubIDType[NestedPartySubIDType["System"] = 3] = "System";
    NestedPartySubIDType[NestedPartySubIDType["Application"] = 4] = "Application";
    NestedPartySubIDType[NestedPartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    NestedPartySubIDType[NestedPartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    NestedPartySubIDType[NestedPartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    NestedPartySubIDType[NestedPartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    NestedPartySubIDType[NestedPartySubIDType["ContactName"] = 9] = "ContactName";
    NestedPartySubIDType[NestedPartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    NestedPartySubIDType[NestedPartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    NestedPartySubIDType[NestedPartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    NestedPartySubIDType[NestedPartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    NestedPartySubIDType[NestedPartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    NestedPartySubIDType[NestedPartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    NestedPartySubIDType[NestedPartySubIDType["Bic"] = 16] = "Bic";
    NestedPartySubIDType[NestedPartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    NestedPartySubIDType[NestedPartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    NestedPartySubIDType[NestedPartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    NestedPartySubIDType[NestedPartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    NestedPartySubIDType[NestedPartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    NestedPartySubIDType[NestedPartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    NestedPartySubIDType[NestedPartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    NestedPartySubIDType[NestedPartySubIDType["Department"] = 24] = "Department";
    NestedPartySubIDType[NestedPartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    NestedPartySubIDType[NestedPartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    NestedPartySubIDType[NestedPartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    NestedPartySubIDType[NestedPartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    NestedPartySubIDType[NestedPartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    NestedPartySubIDType[NestedPartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    NestedPartySubIDType[NestedPartySubIDType["Location"] = 31] = "Location";
    NestedPartySubIDType[NestedPartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    NestedPartySubIDType[NestedPartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    NestedPartySubIDType[NestedPartySubIDType["AddressCity"] = 34] = "AddressCity";
    NestedPartySubIDType[NestedPartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    NestedPartySubIDType[NestedPartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    NestedPartySubIDType[NestedPartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    NestedPartySubIDType[NestedPartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    NestedPartySubIDType[NestedPartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    NestedPartySubIDType[NestedPartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    NestedPartySubIDType[NestedPartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    NestedPartySubIDType[NestedPartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    NestedPartySubIDType[NestedPartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    NestedPartySubIDType[NestedPartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    NestedPartySubIDType[NestedPartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    NestedPartySubIDType[NestedPartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    NestedPartySubIDType[NestedPartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    NestedPartySubIDType[NestedPartySubIDType["USPerson"] = 48] = "USPerson";
    NestedPartySubIDType[NestedPartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    NestedPartySubIDType[NestedPartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    NestedPartySubIDType[NestedPartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    NestedPartySubIDType[NestedPartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    NestedPartySubIDType[NestedPartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    NestedPartySubIDType[NestedPartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    NestedPartySubIDType[NestedPartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    NestedPartySubIDType[NestedPartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    NestedPartySubIDType[NestedPartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    NestedPartySubIDType[NestedPartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    NestedPartySubIDType[NestedPartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    NestedPartySubIDType[NestedPartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    NestedPartySubIDType[NestedPartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    NestedPartySubIDType[NestedPartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    NestedPartySubIDType[NestedPartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    NestedPartySubIDType[NestedPartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    NestedPartySubIDType[NestedPartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    NestedPartySubIDType[NestedPartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    NestedPartySubIDType[NestedPartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    NestedPartySubIDType[NestedPartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    NestedPartySubIDType[NestedPartySubIDType["EndUser"] = 69] = "EndUser";
    NestedPartySubIDType[NestedPartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    NestedPartySubIDType[NestedPartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    NestedPartySubIDType[NestedPartySubIDType["Domicile"] = 72] = "Domicile";
    NestedPartySubIDType[NestedPartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    NestedPartySubIDType[NestedPartySubIDType["Payer"] = 74] = "Payer";
    NestedPartySubIDType[NestedPartySubIDType["Receiver"] = 75] = "Receiver";
    NestedPartySubIDType[NestedPartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(NestedPartySubIDType = exports.NestedPartySubIDType || (exports.NestedPartySubIDType = {}));
var Nested2PartySubIDType;
(function (Nested2PartySubIDType) {
    Nested2PartySubIDType[Nested2PartySubIDType["Firm"] = 1] = "Firm";
    Nested2PartySubIDType[Nested2PartySubIDType["Person"] = 2] = "Person";
    Nested2PartySubIDType[Nested2PartySubIDType["System"] = 3] = "System";
    Nested2PartySubIDType[Nested2PartySubIDType["Application"] = 4] = "Application";
    Nested2PartySubIDType[Nested2PartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    Nested2PartySubIDType[Nested2PartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    Nested2PartySubIDType[Nested2PartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    Nested2PartySubIDType[Nested2PartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    Nested2PartySubIDType[Nested2PartySubIDType["ContactName"] = 9] = "ContactName";
    Nested2PartySubIDType[Nested2PartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    Nested2PartySubIDType[Nested2PartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    Nested2PartySubIDType[Nested2PartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    Nested2PartySubIDType[Nested2PartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    Nested2PartySubIDType[Nested2PartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    Nested2PartySubIDType[Nested2PartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    Nested2PartySubIDType[Nested2PartySubIDType["Bic"] = 16] = "Bic";
    Nested2PartySubIDType[Nested2PartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    Nested2PartySubIDType[Nested2PartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    Nested2PartySubIDType[Nested2PartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    Nested2PartySubIDType[Nested2PartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    Nested2PartySubIDType[Nested2PartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    Nested2PartySubIDType[Nested2PartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    Nested2PartySubIDType[Nested2PartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    Nested2PartySubIDType[Nested2PartySubIDType["Department"] = 24] = "Department";
    Nested2PartySubIDType[Nested2PartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    Nested2PartySubIDType[Nested2PartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    Nested2PartySubIDType[Nested2PartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    Nested2PartySubIDType[Nested2PartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    Nested2PartySubIDType[Nested2PartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    Nested2PartySubIDType[Nested2PartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    Nested2PartySubIDType[Nested2PartySubIDType["Location"] = 31] = "Location";
    Nested2PartySubIDType[Nested2PartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    Nested2PartySubIDType[Nested2PartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    Nested2PartySubIDType[Nested2PartySubIDType["AddressCity"] = 34] = "AddressCity";
    Nested2PartySubIDType[Nested2PartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    Nested2PartySubIDType[Nested2PartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    Nested2PartySubIDType[Nested2PartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    Nested2PartySubIDType[Nested2PartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    Nested2PartySubIDType[Nested2PartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    Nested2PartySubIDType[Nested2PartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    Nested2PartySubIDType[Nested2PartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    Nested2PartySubIDType[Nested2PartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    Nested2PartySubIDType[Nested2PartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    Nested2PartySubIDType[Nested2PartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    Nested2PartySubIDType[Nested2PartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    Nested2PartySubIDType[Nested2PartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    Nested2PartySubIDType[Nested2PartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    Nested2PartySubIDType[Nested2PartySubIDType["USPerson"] = 48] = "USPerson";
    Nested2PartySubIDType[Nested2PartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    Nested2PartySubIDType[Nested2PartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    Nested2PartySubIDType[Nested2PartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    Nested2PartySubIDType[Nested2PartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    Nested2PartySubIDType[Nested2PartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    Nested2PartySubIDType[Nested2PartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    Nested2PartySubIDType[Nested2PartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    Nested2PartySubIDType[Nested2PartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    Nested2PartySubIDType[Nested2PartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    Nested2PartySubIDType[Nested2PartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    Nested2PartySubIDType[Nested2PartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    Nested2PartySubIDType[Nested2PartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    Nested2PartySubIDType[Nested2PartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    Nested2PartySubIDType[Nested2PartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    Nested2PartySubIDType[Nested2PartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    Nested2PartySubIDType[Nested2PartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    Nested2PartySubIDType[Nested2PartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    Nested2PartySubIDType[Nested2PartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    Nested2PartySubIDType[Nested2PartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    Nested2PartySubIDType[Nested2PartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    Nested2PartySubIDType[Nested2PartySubIDType["EndUser"] = 69] = "EndUser";
    Nested2PartySubIDType[Nested2PartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    Nested2PartySubIDType[Nested2PartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    Nested2PartySubIDType[Nested2PartySubIDType["Domicile"] = 72] = "Domicile";
    Nested2PartySubIDType[Nested2PartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    Nested2PartySubIDType[Nested2PartySubIDType["Payer"] = 74] = "Payer";
    Nested2PartySubIDType[Nested2PartySubIDType["Receiver"] = 75] = "Receiver";
    Nested2PartySubIDType[Nested2PartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(Nested2PartySubIDType = exports.Nested2PartySubIDType || (exports.Nested2PartySubIDType = {}));
var AllocIntermedReqType;
(function (AllocIntermedReqType) {
    AllocIntermedReqType[AllocIntermedReqType["PendingAccept"] = 1] = "PendingAccept";
    AllocIntermedReqType[AllocIntermedReqType["PendingRelease"] = 2] = "PendingRelease";
    AllocIntermedReqType[AllocIntermedReqType["PendingReversal"] = 3] = "PendingReversal";
    AllocIntermedReqType[AllocIntermedReqType["Accept"] = 4] = "Accept";
    AllocIntermedReqType[AllocIntermedReqType["BlockLevelReject"] = 5] = "BlockLevelReject";
    AllocIntermedReqType[AllocIntermedReqType["AccountLevelReject"] = 6] = "AccountLevelReject";
})(AllocIntermedReqType = exports.AllocIntermedReqType || (exports.AllocIntermedReqType = {}));
var ApplQueueResolution;
(function (ApplQueueResolution) {
    ApplQueueResolution[ApplQueueResolution["NoActionTaken"] = 0] = "NoActionTaken";
    ApplQueueResolution[ApplQueueResolution["QueueFlushed"] = 1] = "QueueFlushed";
    ApplQueueResolution[ApplQueueResolution["OverlayLast"] = 2] = "OverlayLast";
    ApplQueueResolution[ApplQueueResolution["EndSession"] = 3] = "EndSession";
})(ApplQueueResolution = exports.ApplQueueResolution || (exports.ApplQueueResolution = {}));
var ApplQueueAction;
(function (ApplQueueAction) {
    ApplQueueAction[ApplQueueAction["NoActionTaken"] = 0] = "NoActionTaken";
    ApplQueueAction[ApplQueueAction["QueueFlushed"] = 1] = "QueueFlushed";
    ApplQueueAction[ApplQueueAction["OverlayLast"] = 2] = "OverlayLast";
    ApplQueueAction[ApplQueueAction["EndSession"] = 3] = "EndSession";
})(ApplQueueAction = exports.ApplQueueAction || (exports.ApplQueueAction = {}));
var AvgPxIndicator;
(function (AvgPxIndicator) {
    AvgPxIndicator[AvgPxIndicator["NoAveragePricing"] = 0] = "NoAveragePricing";
    AvgPxIndicator[AvgPxIndicator["TradeIsPartOfAnAveragePriceGroupIdentifiedByTheAvgPxGroupId1731"] = 1] = "TradeIsPartOfAnAveragePriceGroupIdentifiedByTheAvgPxGroupId1731";
    AvgPxIndicator[AvgPxIndicator["LastTradeIsTheAveragePriceGroupIdentifiedByTheAvgPxGroupId1731"] = 2] = "LastTradeIsTheAveragePriceGroupIdentifiedByTheAvgPxGroupId1731";
})(AvgPxIndicator = exports.AvgPxIndicator || (exports.AvgPxIndicator = {}));
var TradeAllocIndicator;
(function (TradeAllocIndicator) {
    TradeAllocIndicator[TradeAllocIndicator["AllocationNotRequired"] = 0] = "AllocationNotRequired";
    TradeAllocIndicator[TradeAllocIndicator["AllocationRequiredGiveUpTradeAllocationInformationNotProvidedIncomplete"] = 1] = "AllocationRequiredGiveUpTradeAllocationInformationNotProvidedIncomplete";
    TradeAllocIndicator[TradeAllocIndicator["UseAllocationProvidedWithTheTrade"] = 2] = "UseAllocationProvidedWithTheTrade";
    TradeAllocIndicator[TradeAllocIndicator["AllocationGiveUpExecutor"] = 3] = "AllocationGiveUpExecutor";
    TradeAllocIndicator[TradeAllocIndicator["AllocationFromExecutor"] = 4] = "AllocationFromExecutor";
    TradeAllocIndicator[TradeAllocIndicator["AllocationToClaimAccount"] = 5] = "AllocationToClaimAccount";
    TradeAllocIndicator[TradeAllocIndicator["TradeSplit"] = 6] = "TradeSplit";
})(TradeAllocIndicator = exports.TradeAllocIndicator || (exports.TradeAllocIndicator = {}));
var ExpirationCycle;
(function (ExpirationCycle) {
    ExpirationCycle[ExpirationCycle["ExpireOnTradingSessionCloseDefault"] = 0] = "ExpireOnTradingSessionCloseDefault";
    ExpirationCycle[ExpirationCycle["ExpireOnTradingSessionOpen"] = 1] = "ExpireOnTradingSessionOpen";
    ExpirationCycle[ExpirationCycle["TradingEligibilityExpirationSpecifiedInTheDateAndTimeFieldsEventDate866AndEventTime1145AssociatedWithEventType8657LastEligibleTradeDate"] = 2] = "TradingEligibilityExpirationSpecifiedInTheDateAndTimeFieldsEventDate866AndEventTime1145AssociatedWithEventType8657LastEligibleTradeDate";
})(ExpirationCycle = exports.ExpirationCycle || (exports.ExpirationCycle = {}));
var TrdType;
(function (TrdType) {
    TrdType[TrdType["RegularTrade"] = 0] = "RegularTrade";
    TrdType[TrdType["BlockTrade"] = 1] = "BlockTrade";
    TrdType[TrdType["ExchangeForPhysicalEfp"] = 2] = "ExchangeForPhysicalEfp";
    TrdType[TrdType["Transfer"] = 3] = "Transfer";
    TrdType[TrdType["LateTrade"] = 4] = "LateTrade";
    TrdType[TrdType["TTrade"] = 5] = "TTrade";
    TrdType[TrdType["WeightedAveragePriceTrade"] = 6] = "WeightedAveragePriceTrade";
    TrdType[TrdType["BunchedTrade"] = 7] = "BunchedTrade";
    TrdType[TrdType["LateBunchedTrade"] = 8] = "LateBunchedTrade";
    TrdType[TrdType["PriorReferencePriceTrade"] = 9] = "PriorReferencePriceTrade";
    TrdType[TrdType["AfterHoursTrade"] = 10] = "AfterHoursTrade";
    TrdType[TrdType["ExchangeForRiskEfr"] = 11] = "ExchangeForRiskEfr";
    TrdType[TrdType["ExchangeForSwapEfs"] = 12] = "ExchangeForSwapEfs";
    TrdType[TrdType["ExchangeOfFuturesForInMarketFuturesEfm"] = 13] = "ExchangeOfFuturesForInMarketFuturesEfm";
    TrdType[TrdType["ExchangeOfOptionsForOptionsEoo"] = 14] = "ExchangeOfOptionsForOptionsEoo";
    TrdType[TrdType["TradingAtSettlement"] = 15] = "TradingAtSettlement";
    TrdType[TrdType["AllOrNone"] = 16] = "AllOrNone";
    TrdType[TrdType["FuturesLargeOrderExecution"] = 17] = "FuturesLargeOrderExecution";
    TrdType[TrdType["ExchangeOfFuturesForExternalMarketFuturesEff"] = 18] = "ExchangeOfFuturesForExternalMarketFuturesEff";
    TrdType[TrdType["OptionInterimTrade"] = 19] = "OptionInterimTrade";
    TrdType[TrdType["OptionCabinetTrade"] = 20] = "OptionCabinetTrade";
    TrdType[TrdType["PrivatelyNegotiatedTrade"] = 22] = "PrivatelyNegotiatedTrade";
    TrdType[TrdType["SubstitutionOfFuturesForForwards"] = 23] = "SubstitutionOfFuturesForForwards";
    TrdType[TrdType["ErrorTrade"] = 24] = "ErrorTrade";
    TrdType[TrdType["SpecialCumDividendCd"] = 25] = "SpecialCumDividendCd";
    TrdType[TrdType["SpecialExDividendXd"] = 26] = "SpecialExDividendXd";
    TrdType[TrdType["SpecialCumCouponCc"] = 27] = "SpecialCumCouponCc";
    TrdType[TrdType["SpecialExCouponXc"] = 28] = "SpecialExCouponXc";
    TrdType[TrdType["CashSettlementCs"] = 29] = "CashSettlementCs";
    TrdType[TrdType["SpecialPriceSp"] = 30] = "SpecialPriceSp";
    TrdType[TrdType["GuaranteedDeliveryGd"] = 31] = "GuaranteedDeliveryGd";
    TrdType[TrdType["SpecialCumRightsCr"] = 32] = "SpecialCumRightsCr";
    TrdType[TrdType["SpecialExRightsXr"] = 33] = "SpecialExRightsXr";
    TrdType[TrdType["SpecialCumCapitalRepaymentsCp"] = 34] = "SpecialCumCapitalRepaymentsCp";
    TrdType[TrdType["SpecialExCapitalRepaymentsXp"] = 35] = "SpecialExCapitalRepaymentsXp";
    TrdType[TrdType["SpecialCumBonusCb"] = 36] = "SpecialCumBonusCb";
    TrdType[TrdType["SpecialExBonusXb"] = 37] = "SpecialExBonusXb";
    TrdType[TrdType["BlockTrade2"] = 38] = "BlockTrade2";
    TrdType[TrdType["WorkedPrincipalTrade"] = 39] = "WorkedPrincipalTrade";
    TrdType[TrdType["BlockTrades"] = 40] = "BlockTrades";
    TrdType[TrdType["NameChange"] = 41] = "NameChange";
    TrdType[TrdType["PortfolioTransfer"] = 42] = "PortfolioTransfer";
    TrdType[TrdType["ProrogationBuy"] = 43] = "ProrogationBuy";
    TrdType[TrdType["ProrogationSell"] = 44] = "ProrogationSell";
    TrdType[TrdType["OptionExercise"] = 45] = "OptionExercise";
    TrdType[TrdType["DeltaNeutralTransaction"] = 46] = "DeltaNeutralTransaction";
    TrdType[TrdType["FinancingTransaction"] = 47] = "FinancingTransaction";
    TrdType[TrdType["NonStandardSettlement"] = 48] = "NonStandardSettlement";
    TrdType[TrdType["DerivativeRelatedTransaction"] = 49] = "DerivativeRelatedTransaction";
    TrdType[TrdType["PortfolioTrade"] = 50] = "PortfolioTrade";
    TrdType[TrdType["VolumeWeightedAverageTrade"] = 51] = "VolumeWeightedAverageTrade";
    TrdType[TrdType["ExchangeGrantedTrade"] = 52] = "ExchangeGrantedTrade";
    TrdType[TrdType["RepurchaseAgreement"] = 53] = "RepurchaseAgreement";
    TrdType[TrdType["Otc"] = 54] = "Otc";
    TrdType[TrdType["ExchangeBasisFacilityEbf"] = 55] = "ExchangeBasisFacilityEbf";
    TrdType[TrdType["OpeningTrade"] = 56] = "OpeningTrade";
    TrdType[TrdType["NettedTrade"] = 57] = "NettedTrade";
    TrdType[TrdType["BlockSwapTrade"] = 58] = "BlockSwapTrade";
    TrdType[TrdType["CreditEventTrade"] = 59] = "CreditEventTrade";
    TrdType[TrdType["SuccessionEventTrade"] = 60] = "SuccessionEventTrade";
    TrdType[TrdType["GiveUpGiveInTrade"] = 61] = "GiveUpGiveInTrade";
    TrdType[TrdType["DarkTrade"] = 62] = "DarkTrade";
    TrdType[TrdType["TechnicalTrade"] = 63] = "TechnicalTrade";
    TrdType[TrdType["Benchmark"] = 64] = "Benchmark";
    TrdType[TrdType["PackageTrade"] = 65] = "PackageTrade";
})(TrdType = exports.TrdType || (exports.TrdType = {}));
var TrdSubType;
(function (TrdSubType) {
    TrdSubType[TrdSubType["Cmta"] = 0] = "Cmta";
    TrdSubType[TrdSubType["InternalTransferOrAdjustment"] = 1] = "InternalTransferOrAdjustment";
    TrdSubType[TrdSubType["ExternalTransferOrTransferOfAccount"] = 2] = "ExternalTransferOrTransferOfAccount";
    TrdSubType[TrdSubType["RejectForSubmittingSide"] = 3] = "RejectForSubmittingSide";
    TrdSubType[TrdSubType["AdvisoryForContraSide"] = 4] = "AdvisoryForContraSide";
    TrdSubType[TrdSubType["OffsetDueToAnAllocation"] = 5] = "OffsetDueToAnAllocation";
    TrdSubType[TrdSubType["OnsetDueToAnAllocation"] = 6] = "OnsetDueToAnAllocation";
    TrdSubType[TrdSubType["DifferentialSpread"] = 7] = "DifferentialSpread";
    TrdSubType[TrdSubType["ImpliedSpreadLegExecutedAgainstAnOutright"] = 8] = "ImpliedSpreadLegExecutedAgainstAnOutright";
    TrdSubType[TrdSubType["TransactionFromExercise"] = 9] = "TransactionFromExercise";
    TrdSubType[TrdSubType["TransactionFromAssignment"] = 10] = "TransactionFromAssignment";
    TrdSubType[TrdSubType["Acats"] = 11] = "Acats";
    TrdSubType[TrdSubType["AiAutomatedInputFacilityDisabledInResponseToAnExchangeRequest"] = 14] = "AiAutomatedInputFacilityDisabledInResponseToAnExchangeRequest";
    TrdSubType[TrdSubType["BTransactionBetweenTwoMemberFirmsWhereNeitherMemberFirmIsRegisteredAsAMarketMakerInTheSecurityInQuestionAndNeitherIsADesignatedFundManagerAlsoUsedByBrokerDealersWhenDealingWithAnotherBrokerWhichIsNotAMemberFirmNonOrderBookSecuritiesOnly"] = 15] = "BTransactionBetweenTwoMemberFirmsWhereNeitherMemberFirmIsRegisteredAsAMarketMakerInTheSecurityInQuestionAndNeitherIsADesignatedFundManagerAlsoUsedByBrokerDealersWhenDealingWithAnotherBrokerWhichIsNotAMemberFirmNonOrderBookSecuritiesOnly";
    TrdSubType[TrdSubType["KTransactionUsingBlockTradeFacility"] = 16] = "KTransactionUsingBlockTradeFacility";
    TrdSubType[TrdSubType["LcCorrectionSubmittedMoreThanThreeDaysAfterPublicationOfTheOriginalTradeReport"] = 17] = "LcCorrectionSubmittedMoreThanThreeDaysAfterPublicationOfTheOriginalTradeReport";
    TrdSubType[TrdSubType["MTransactionOtherThanATransactionResultingFromAStockSwapOrStockSwitchBetweenTwoMarketMakersRegisteredInThatSecurityIncludingIdbOrAPublicDisplaySystemTradesNonOrderBookSecuritiesOnly"] = 18] = "MTransactionOtherThanATransactionResultingFromAStockSwapOrStockSwitchBetweenTwoMarketMakersRegisteredInThatSecurityIncludingIdbOrAPublicDisplaySystemTradesNonOrderBookSecuritiesOnly";
    TrdSubType[TrdSubType["NNonProtectedPortfolioTransactionOrAFullyDisclosedPortfolioTransaction"] = 19] = "NNonProtectedPortfolioTransactionOrAFullyDisclosedPortfolioTransaction";
    TrdSubType[TrdSubType["NmITransactionWhereExchangeHasGrantedPermissionForNonPublicationIiIdbIsReportingAsSellerIiiSubmittingATransactionReportToTheExchangeWhereTheTransactionReportIsNotAlsoATradeReport"] = 20] = "NmITransactionWhereExchangeHasGrantedPermissionForNonPublicationIiIdbIsReportingAsSellerIiiSubmittingATransactionReportToTheExchangeWhereTheTransactionReportIsNotAlsoATradeReport";
    TrdSubType[TrdSubType["NrNonRiskTransactionInASeatsSecurityOtherThanAnAimSecurity"] = 21] = "NrNonRiskTransactionInASeatsSecurityOtherThanAnAimSecurity";
    TrdSubType[TrdSubType["PProtectedPortfolioTransactionOrAWorkedPrincipalAgreementToEffectAPortfolioTransactionWhichIncludesOrderBookSecurities"] = 22] = "PProtectedPortfolioTransactionOrAWorkedPrincipalAgreementToEffectAPortfolioTransactionWhichIncludesOrderBookSecurities";
    TrdSubType[TrdSubType["PaProtectedTransactionNotification"] = 23] = "PaProtectedTransactionNotification";
    TrdSubType[TrdSubType["PcContraTradeForTransactionWhichTookPlaceOnAPreviousDayAndWhichWasAutomaticallyExecutedOnTheExchangeTradingSystem"] = 24] = "PcContraTradeForTransactionWhichTookPlaceOnAPreviousDayAndWhichWasAutomaticallyExecutedOnTheExchangeTradingSystem";
    TrdSubType[TrdSubType["PnWorkedPrincipalNotificationForAPortfolioTransactionWhichIncludesOrderBookSecurities"] = 25] = "PnWorkedPrincipalNotificationForAPortfolioTransactionWhichIncludesOrderBookSecurities";
    TrdSubType[TrdSubType["RIRisklessPrincipalTransactionBetweenNonMembersWhereTheBuyingAndSellingTransactionsAreExecutedAtDifferentPricesOrOnDifferentTermsRequiresATradeReportWithTradeTypeIndicatorRForEachTransactionIiMarketMakerIsReportingAllTheLegsOfARisklessPrincipalTransactionWhereTheBuyingAndSellingTransactionsAreExecutedAtDifferentPricesRequiresATradeReportWithTradeTypeIndicatorRForEachTransactionOrIiiMarketMakerIsReportingTheOnwardLegOfARisklessPrincipalTransactionWhereTheLegsAreExecutedAtDifferentPricesAndAnotherMarketMakerHasSubmittedATradeReportUsingTradeTypeIndicatorMForTheFirstLegThisRequiresASingleTradeReportWithTradeTypeIndicatorR"] = 26] = "RIRisklessPrincipalTransactionBetweenNonMembersWhereTheBuyingAndSellingTransactionsAreExecutedAtDifferentPricesOrOnDifferentTermsRequiresATradeReportWithTradeTypeIndicatorRForEachTransactionIiMarketMakerIsReportingAllTheLegsOfARisklessPrincipalTransactionWhereTheBuyingAndSellingTransactionsAreExecutedAtDifferentPricesRequiresATradeReportWithTradeTypeIndicatorRForEachTransactionOrIiiMarketMakerIsReportingTheOnwardLegOfARisklessPrincipalTransactionWhereTheLegsAreExecutedAtDifferentPricesAndAnotherMarketMakerHasSubmittedATradeReportUsingTradeTypeIndicatorMForTheFirstLegThisRequiresASingleTradeReportWithTradeTypeIndicatorR";
    TrdSubType[TrdSubType["RoTransactionWhichResultedFromTheExerciseOfATraditionalOptionOrAStockSettledCoveredWarrant"] = 27] = "RoTransactionWhichResultedFromTheExerciseOfATraditionalOptionOrAStockSettledCoveredWarrant";
    TrdSubType[TrdSubType["RtRiskTransactionInASeatsSecurityExcludingAimSecurityReportedByAMarketMakerRegisteredInThatSecurity"] = 28] = "RtRiskTransactionInASeatsSecurityExcludingAimSecurityReportedByAMarketMakerRegisteredInThatSecurity";
    TrdSubType[TrdSubType["SwTransactionsResultingFromStockSwapOrAStockSwitchOneReportIsRequiredForEachLineOfStock"] = 29] = "SwTransactionsResultingFromStockSwapOrAStockSwitchOneReportIsRequiredForEachLineOfStock";
    TrdSubType[TrdSubType["TIfReportingASingleProtectedTransaction"] = 30] = "TIfReportingASingleProtectedTransaction";
    TrdSubType[TrdSubType["WnWorkedPrincipalNotificationForASingleOrderBookSecurity"] = 31] = "WnWorkedPrincipalNotificationForASingleOrderBookSecurity";
    TrdSubType[TrdSubType["WtWorkedPrincipalTransactionOtherThanAPortfolioTransaction"] = 32] = "WtWorkedPrincipalTransactionOtherThanAPortfolioTransaction";
    TrdSubType[TrdSubType["OffHoursTrade"] = 33] = "OffHoursTrade";
    TrdSubType[TrdSubType["OnHoursTrade"] = 34] = "OnHoursTrade";
    TrdSubType[TrdSubType["OtcQuote"] = 35] = "OtcQuote";
    TrdSubType[TrdSubType["ConvertedSwap"] = 36] = "ConvertedSwap";
    TrdSubType[TrdSubType["CrossedTradeX"] = 37] = "CrossedTradeX";
    TrdSubType[TrdSubType["InterimProtectedTradeI"] = 38] = "InterimProtectedTradeI";
    TrdSubType[TrdSubType["LargeInScaleL"] = 39] = "LargeInScaleL";
    TrdSubType[TrdSubType["WashTrade"] = 40] = "WashTrade";
    TrdSubType[TrdSubType["TradeAtSettlementTas"] = 41] = "TradeAtSettlementTas";
    TrdSubType[TrdSubType["AuctionTrade"] = 42] = "AuctionTrade";
    TrdSubType[TrdSubType["TradeAtMarkerTam"] = 43] = "TradeAtMarkerTam";
    TrdSubType[TrdSubType["DefaultCreditEvent"] = 44] = "DefaultCreditEvent";
    TrdSubType[TrdSubType["RestructuringCreditEvent"] = 45] = "RestructuringCreditEvent";
    TrdSubType[TrdSubType["MergerSuccessionEvent"] = 46] = "MergerSuccessionEvent";
    TrdSubType[TrdSubType["SpinOffSuccessionEvent"] = 47] = "SpinOffSuccessionEvent";
    TrdSubType[TrdSubType["MultilateralCompression"] = 48] = "MultilateralCompression";
    TrdSubType[TrdSubType["Balancing"] = 50] = "Balancing";
    TrdSubType[TrdSubType["BasisTradeIndexCloseBtic"] = 51] = "BasisTradeIndexCloseBtic";
})(TrdSubType = exports.TrdSubType || (exports.TrdSubType = {}));
var PegMoveType;
(function (PegMoveType) {
    PegMoveType[PegMoveType["FloatingDefault"] = 0] = "FloatingDefault";
    PegMoveType[PegMoveType["Fixed"] = 1] = "Fixed";
})(PegMoveType = exports.PegMoveType || (exports.PegMoveType = {}));
var PegOffsetType;
(function (PegOffsetType) {
    PegOffsetType[PegOffsetType["PriceDefault"] = 0] = "PriceDefault";
    PegOffsetType[PegOffsetType["BasisPoints"] = 1] = "BasisPoints";
    PegOffsetType[PegOffsetType["Ticks"] = 2] = "Ticks";
    PegOffsetType[PegOffsetType["PriceTierLevel"] = 3] = "PriceTierLevel";
    PegOffsetType[PegOffsetType["Percentage"] = 4] = "Percentage";
})(PegOffsetType = exports.PegOffsetType || (exports.PegOffsetType = {}));
var PegLimitType;
(function (PegLimitType) {
    PegLimitType[PegLimitType["OrBetterDefaultPriceImprovementAllowed"] = 0] = "OrBetterDefaultPriceImprovementAllowed";
    PegLimitType[PegLimitType["StrictLimitIsAStrictLimit"] = 1] = "StrictLimitIsAStrictLimit";
    PegLimitType[PegLimitType["OrWorseForABuyThePegLimitIsAMinimumAndForASellThePegLimitIsAMaximumForUseForOrdersWhichHaveAPriceRange"] = 2] = "OrWorseForABuyThePegLimitIsAMinimumAndForASellThePegLimitIsAMaximumForUseForOrdersWhichHaveAPriceRange";
})(PegLimitType = exports.PegLimitType || (exports.PegLimitType = {}));
var PegRoundDirection;
(function (PegRoundDirection) {
    PegRoundDirection[PegRoundDirection["MoreAggressiveOnABuyOrderRoundThePriceUpToTheNearestTickOnASellOrderRoundDownToTheNearestTick"] = 1] = "MoreAggressiveOnABuyOrderRoundThePriceUpToTheNearestTickOnASellOrderRoundDownToTheNearestTick";
    PegRoundDirection[PegRoundDirection["MorePassiveOnABuyOrderRoundDownToTheNearestTickOnASellOrderRoundUpToTheNearestTick"] = 2] = "MorePassiveOnABuyOrderRoundDownToTheNearestTickOnASellOrderRoundUpToTheNearestTick";
})(PegRoundDirection = exports.PegRoundDirection || (exports.PegRoundDirection = {}));
var PegScope;
(function (PegScope) {
    PegScope[PegScope["LocalExchangeEcnAts"] = 1] = "LocalExchangeEcnAts";
    PegScope[PegScope["National"] = 2] = "National";
    PegScope[PegScope["Global"] = 3] = "Global";
    PegScope[PegScope["NationalExcludingLocal"] = 4] = "NationalExcludingLocal";
})(PegScope = exports.PegScope || (exports.PegScope = {}));
var DiscretionMoveType;
(function (DiscretionMoveType) {
    DiscretionMoveType[DiscretionMoveType["FloatingDefault"] = 0] = "FloatingDefault";
    DiscretionMoveType[DiscretionMoveType["Fixed"] = 1] = "Fixed";
})(DiscretionMoveType = exports.DiscretionMoveType || (exports.DiscretionMoveType = {}));
var DiscretionOffsetType;
(function (DiscretionOffsetType) {
    DiscretionOffsetType[DiscretionOffsetType["PriceDefault"] = 0] = "PriceDefault";
    DiscretionOffsetType[DiscretionOffsetType["BasisPoints"] = 1] = "BasisPoints";
    DiscretionOffsetType[DiscretionOffsetType["Ticks"] = 2] = "Ticks";
    DiscretionOffsetType[DiscretionOffsetType["PriceTierLevel"] = 3] = "PriceTierLevel";
})(DiscretionOffsetType = exports.DiscretionOffsetType || (exports.DiscretionOffsetType = {}));
var DiscretionLimitType;
(function (DiscretionLimitType) {
    DiscretionLimitType[DiscretionLimitType["OrBetterDefaultPriceImprovementAllowed"] = 0] = "OrBetterDefaultPriceImprovementAllowed";
    DiscretionLimitType[DiscretionLimitType["StrictLimitIsAStrictLimit"] = 1] = "StrictLimitIsAStrictLimit";
    DiscretionLimitType[DiscretionLimitType["OrWorseForABuyTheDiscretionPriceIsAMinimumAndForASellTheDiscretionPriceIsAMaximumForUseForOrdersWhichHaveAPriceRange"] = 2] = "OrWorseForABuyTheDiscretionPriceIsAMinimumAndForASellTheDiscretionPriceIsAMaximumForUseForOrdersWhichHaveAPriceRange";
})(DiscretionLimitType = exports.DiscretionLimitType || (exports.DiscretionLimitType = {}));
var DiscretionRoundDirection;
(function (DiscretionRoundDirection) {
    DiscretionRoundDirection[DiscretionRoundDirection["MoreAggressiveOnABuyOrderRoundThePriceUpToTheNearestTickOnASellRoundDownToTheNearestTick"] = 1] = "MoreAggressiveOnABuyOrderRoundThePriceUpToTheNearestTickOnASellRoundDownToTheNearestTick";
    DiscretionRoundDirection[DiscretionRoundDirection["MorePassiveOnABuyOrderRoundDownToTheNearestTickOnASellOrderRoundUpToTheNearestTick"] = 2] = "MorePassiveOnABuyOrderRoundDownToTheNearestTickOnASellOrderRoundUpToTheNearestTick";
})(DiscretionRoundDirection = exports.DiscretionRoundDirection || (exports.DiscretionRoundDirection = {}));
var DiscretionScope;
(function (DiscretionScope) {
    DiscretionScope[DiscretionScope["LocalExchangeEcnAts"] = 1] = "LocalExchangeEcnAts";
    DiscretionScope[DiscretionScope["National"] = 2] = "National";
    DiscretionScope[DiscretionScope["Global"] = 3] = "Global";
    DiscretionScope[DiscretionScope["NationalExcludingLocal"] = 4] = "NationalExcludingLocal";
})(DiscretionScope = exports.DiscretionScope || (exports.DiscretionScope = {}));
var TargetStrategy;
(function (TargetStrategy) {
    TargetStrategy[TargetStrategy["Vwap"] = 1] = "Vwap";
    TargetStrategy[TargetStrategy["ParticipateIEAimToBeXPercentOfTheMarketVolume"] = 2] = "ParticipateIEAimToBeXPercentOfTheMarketVolume";
    TargetStrategy[TargetStrategy["MininizeMarketImpact"] = 3] = "MininizeMarketImpact";
})(TargetStrategy = exports.TargetStrategy || (exports.TargetStrategy = {}));
var LastLiquidityInd;
(function (LastLiquidityInd) {
    LastLiquidityInd[LastLiquidityInd["AddedLiquidity"] = 1] = "AddedLiquidity";
    LastLiquidityInd[LastLiquidityInd["RemovedLiquidity"] = 2] = "RemovedLiquidity";
    LastLiquidityInd[LastLiquidityInd["LiquidityRoutedOut"] = 3] = "LiquidityRoutedOut";
    LastLiquidityInd[LastLiquidityInd["Auction"] = 4] = "Auction";
    LastLiquidityInd[LastLiquidityInd["TriggeredStopOrder"] = 5] = "TriggeredStopOrder";
    LastLiquidityInd[LastLiquidityInd["TriggeredContingencyOrder"] = 6] = "TriggeredContingencyOrder";
    LastLiquidityInd[LastLiquidityInd["TriggeredMarketOrder"] = 7] = "TriggeredMarketOrder";
})(LastLiquidityInd = exports.LastLiquidityInd || (exports.LastLiquidityInd = {}));
var PublishTrdIndicator;
(function (PublishTrdIndicator) {
    PublishTrdIndicator["DoNotReportTrade"] = "N";
    PublishTrdIndicator["ReportTrade"] = "Y";
})(PublishTrdIndicator = exports.PublishTrdIndicator || (exports.PublishTrdIndicator = {}));
var ShortSaleReason;
(function (ShortSaleReason) {
    ShortSaleReason[ShortSaleReason["DealerSoldShort"] = 0] = "DealerSoldShort";
    ShortSaleReason[ShortSaleReason["DealerSoldShortExempt"] = 1] = "DealerSoldShortExempt";
    ShortSaleReason[ShortSaleReason["SellingCustomerSoldShort"] = 2] = "SellingCustomerSoldShort";
    ShortSaleReason[ShortSaleReason["SellingCustomerSoldShortExempt"] = 3] = "SellingCustomerSoldShortExempt";
    ShortSaleReason[ShortSaleReason["QualifiedServiceRepresentativeQsrOrAutomaticGiveUpAguContraSideSoldShort"] = 4] = "QualifiedServiceRepresentativeQsrOrAutomaticGiveUpAguContraSideSoldShort";
    ShortSaleReason[ShortSaleReason["QsrOrAguContraSideSoldShortExempt"] = 5] = "QsrOrAguContraSideSoldShortExempt";
})(ShortSaleReason = exports.ShortSaleReason || (exports.ShortSaleReason = {}));
var QtyType;
(function (QtyType) {
    QtyType[QtyType["UnitsSharesParCurrency"] = 0] = "UnitsSharesParCurrency";
    QtyType[QtyType["Contracts"] = 1] = "Contracts";
    QtyType[QtyType["UnitOfMeasurePerTimeUnit"] = 2] = "UnitOfMeasurePerTimeUnit";
})(QtyType = exports.QtyType || (exports.QtyType = {}));
var SecondaryTrdType;
(function (SecondaryTrdType) {
    SecondaryTrdType[SecondaryTrdType["RegularTrade"] = 0] = "RegularTrade";
    SecondaryTrdType[SecondaryTrdType["BlockTrade"] = 1] = "BlockTrade";
    SecondaryTrdType[SecondaryTrdType["ExchangeForPhysicalEfp"] = 2] = "ExchangeForPhysicalEfp";
    SecondaryTrdType[SecondaryTrdType["Transfer"] = 3] = "Transfer";
    SecondaryTrdType[SecondaryTrdType["LateTrade"] = 4] = "LateTrade";
    SecondaryTrdType[SecondaryTrdType["TTrade"] = 5] = "TTrade";
    SecondaryTrdType[SecondaryTrdType["WeightedAveragePriceTrade"] = 6] = "WeightedAveragePriceTrade";
    SecondaryTrdType[SecondaryTrdType["BunchedTrade"] = 7] = "BunchedTrade";
    SecondaryTrdType[SecondaryTrdType["LateBunchedTrade"] = 8] = "LateBunchedTrade";
    SecondaryTrdType[SecondaryTrdType["PriorReferencePriceTrade"] = 9] = "PriorReferencePriceTrade";
    SecondaryTrdType[SecondaryTrdType["AfterHoursTrade"] = 10] = "AfterHoursTrade";
    SecondaryTrdType[SecondaryTrdType["ExchangeForRiskEfr"] = 11] = "ExchangeForRiskEfr";
    SecondaryTrdType[SecondaryTrdType["ExchangeForSwapEfs"] = 12] = "ExchangeForSwapEfs";
    SecondaryTrdType[SecondaryTrdType["ExchangeOfFuturesForInMarketFuturesEfm"] = 13] = "ExchangeOfFuturesForInMarketFuturesEfm";
    SecondaryTrdType[SecondaryTrdType["ExchangeOfOptionsForOptionsEoo"] = 14] = "ExchangeOfOptionsForOptionsEoo";
    SecondaryTrdType[SecondaryTrdType["TradingAtSettlement"] = 15] = "TradingAtSettlement";
    SecondaryTrdType[SecondaryTrdType["AllOrNone"] = 16] = "AllOrNone";
    SecondaryTrdType[SecondaryTrdType["FuturesLargeOrderExecution"] = 17] = "FuturesLargeOrderExecution";
    SecondaryTrdType[SecondaryTrdType["ExchangeOfFuturesForExternalMarketFuturesEff"] = 18] = "ExchangeOfFuturesForExternalMarketFuturesEff";
    SecondaryTrdType[SecondaryTrdType["OptionInterimTrade"] = 19] = "OptionInterimTrade";
    SecondaryTrdType[SecondaryTrdType["OptionCabinetTrade"] = 20] = "OptionCabinetTrade";
    SecondaryTrdType[SecondaryTrdType["PrivatelyNegotiatedTrade"] = 22] = "PrivatelyNegotiatedTrade";
    SecondaryTrdType[SecondaryTrdType["SubstitutionOfFuturesForForwards"] = 23] = "SubstitutionOfFuturesForForwards";
    SecondaryTrdType[SecondaryTrdType["ErrorTrade"] = 24] = "ErrorTrade";
    SecondaryTrdType[SecondaryTrdType["SpecialCumDividendCd"] = 25] = "SpecialCumDividendCd";
    SecondaryTrdType[SecondaryTrdType["SpecialExDividendXd"] = 26] = "SpecialExDividendXd";
    SecondaryTrdType[SecondaryTrdType["SpecialCumCouponCc"] = 27] = "SpecialCumCouponCc";
    SecondaryTrdType[SecondaryTrdType["SpecialExCouponXc"] = 28] = "SpecialExCouponXc";
    SecondaryTrdType[SecondaryTrdType["CashSettlementCs"] = 29] = "CashSettlementCs";
    SecondaryTrdType[SecondaryTrdType["SpecialPriceSp"] = 30] = "SpecialPriceSp";
    SecondaryTrdType[SecondaryTrdType["GuaranteedDeliveryGd"] = 31] = "GuaranteedDeliveryGd";
    SecondaryTrdType[SecondaryTrdType["SpecialCumRightsCr"] = 32] = "SpecialCumRightsCr";
    SecondaryTrdType[SecondaryTrdType["SpecialExRightsXr"] = 33] = "SpecialExRightsXr";
    SecondaryTrdType[SecondaryTrdType["SpecialCumCapitalRepaymentsCp"] = 34] = "SpecialCumCapitalRepaymentsCp";
    SecondaryTrdType[SecondaryTrdType["SpecialExCapitalRepaymentsXp"] = 35] = "SpecialExCapitalRepaymentsXp";
    SecondaryTrdType[SecondaryTrdType["SpecialCumBonusCb"] = 36] = "SpecialCumBonusCb";
    SecondaryTrdType[SecondaryTrdType["SpecialExBonusXb"] = 37] = "SpecialExBonusXb";
    SecondaryTrdType[SecondaryTrdType["BlockTrade2"] = 38] = "BlockTrade2";
    SecondaryTrdType[SecondaryTrdType["WorkedPrincipalTrade"] = 39] = "WorkedPrincipalTrade";
    SecondaryTrdType[SecondaryTrdType["BlockTrades"] = 40] = "BlockTrades";
    SecondaryTrdType[SecondaryTrdType["NameChange"] = 41] = "NameChange";
    SecondaryTrdType[SecondaryTrdType["PortfolioTransfer"] = 42] = "PortfolioTransfer";
    SecondaryTrdType[SecondaryTrdType["ProrogationBuy"] = 43] = "ProrogationBuy";
    SecondaryTrdType[SecondaryTrdType["ProrogationSell"] = 44] = "ProrogationSell";
    SecondaryTrdType[SecondaryTrdType["OptionExercise"] = 45] = "OptionExercise";
    SecondaryTrdType[SecondaryTrdType["DeltaNeutralTransaction"] = 46] = "DeltaNeutralTransaction";
    SecondaryTrdType[SecondaryTrdType["FinancingTransaction"] = 47] = "FinancingTransaction";
    SecondaryTrdType[SecondaryTrdType["NonStandardSettlement"] = 48] = "NonStandardSettlement";
    SecondaryTrdType[SecondaryTrdType["DerivativeRelatedTransaction"] = 49] = "DerivativeRelatedTransaction";
    SecondaryTrdType[SecondaryTrdType["PortfolioTrade"] = 50] = "PortfolioTrade";
    SecondaryTrdType[SecondaryTrdType["VolumeWeightedAverageTrade"] = 51] = "VolumeWeightedAverageTrade";
    SecondaryTrdType[SecondaryTrdType["ExchangeGrantedTrade"] = 52] = "ExchangeGrantedTrade";
    SecondaryTrdType[SecondaryTrdType["RepurchaseAgreement"] = 53] = "RepurchaseAgreement";
    SecondaryTrdType[SecondaryTrdType["Otc"] = 54] = "Otc";
    SecondaryTrdType[SecondaryTrdType["ExchangeBasisFacilityEbf"] = 55] = "ExchangeBasisFacilityEbf";
    SecondaryTrdType[SecondaryTrdType["OpeningTrade"] = 56] = "OpeningTrade";
    SecondaryTrdType[SecondaryTrdType["NettedTrade"] = 57] = "NettedTrade";
    SecondaryTrdType[SecondaryTrdType["BlockSwapTrade"] = 58] = "BlockSwapTrade";
    SecondaryTrdType[SecondaryTrdType["CreditEventTrade"] = 59] = "CreditEventTrade";
    SecondaryTrdType[SecondaryTrdType["SuccessionEventTrade"] = 60] = "SuccessionEventTrade";
    SecondaryTrdType[SecondaryTrdType["GiveUpGiveInTrade"] = 61] = "GiveUpGiveInTrade";
    SecondaryTrdType[SecondaryTrdType["DarkTrade"] = 62] = "DarkTrade";
    SecondaryTrdType[SecondaryTrdType["TechnicalTrade"] = 63] = "TechnicalTrade";
    SecondaryTrdType[SecondaryTrdType["Benchmark"] = 64] = "Benchmark";
    SecondaryTrdType[SecondaryTrdType["PackageTrade"] = 65] = "PackageTrade";
})(SecondaryTrdType = exports.SecondaryTrdType || (exports.SecondaryTrdType = {}));
var TradeReportType;
(function (TradeReportType) {
    TradeReportType[TradeReportType["Submit"] = 0] = "Submit";
    TradeReportType[TradeReportType["Alleged"] = 1] = "Alleged";
    TradeReportType[TradeReportType["Accept"] = 2] = "Accept";
    TradeReportType[TradeReportType["Decline"] = 3] = "Decline";
    TradeReportType[TradeReportType["Addendum"] = 4] = "Addendum";
    TradeReportType[TradeReportType["NoWas"] = 5] = "NoWas";
    TradeReportType[TradeReportType["TradeReportCancel"] = 6] = "TradeReportCancel";
    TradeReportType[TradeReportType["LockedInTradeBreak"] = 7] = "LockedInTradeBreak";
    TradeReportType[TradeReportType["Defaulted"] = 8] = "Defaulted";
    TradeReportType[TradeReportType["InvalidCmta"] = 9] = "InvalidCmta";
    TradeReportType[TradeReportType["Pended"] = 10] = "Pended";
    TradeReportType[TradeReportType["AllegedNew"] = 11] = "AllegedNew";
    TradeReportType[TradeReportType["AllegedAddendum"] = 12] = "AllegedAddendum";
    TradeReportType[TradeReportType["AllegedNoWas"] = 13] = "AllegedNoWas";
    TradeReportType[TradeReportType["AllegedTradeReportCancel"] = 14] = "AllegedTradeReportCancel";
    TradeReportType[TradeReportType["AllegedLockedInTradeBreak"] = 15] = "AllegedLockedInTradeBreak";
    TradeReportType[TradeReportType["Verify"] = 16] = "Verify";
    TradeReportType[TradeReportType["Dispute"] = 17] = "Dispute";
})(TradeReportType = exports.TradeReportType || (exports.TradeReportType = {}));
var AllocNoOrdersType;
(function (AllocNoOrdersType) {
    AllocNoOrdersType[AllocNoOrdersType["NotSpecified"] = 0] = "NotSpecified";
    AllocNoOrdersType[AllocNoOrdersType["ExplicitListProvided"] = 1] = "ExplicitListProvided";
})(AllocNoOrdersType = exports.AllocNoOrdersType || (exports.AllocNoOrdersType = {}));
var EventType;
(function (EventType) {
    EventType[EventType["Put"] = 1] = "Put";
    EventType[EventType["Call"] = 2] = "Call";
    EventType[EventType["Tender"] = 3] = "Tender";
    EventType[EventType["SinkingFundCall"] = 4] = "SinkingFundCall";
    EventType[EventType["Activation"] = 5] = "Activation";
    EventType[EventType["Inactivation"] = 6] = "Inactivation";
    EventType[EventType["LastEligibleTradeDate"] = 7] = "LastEligibleTradeDate";
    EventType[EventType["SwapStartDate"] = 8] = "SwapStartDate";
    EventType[EventType["SwapEndDate"] = 9] = "SwapEndDate";
    EventType[EventType["SwapRollDate"] = 10] = "SwapRollDate";
    EventType[EventType["SwapNextStartDate"] = 11] = "SwapNextStartDate";
    EventType[EventType["SwapNextRollDate"] = 12] = "SwapNextRollDate";
    EventType[EventType["FirstDeliveryDate"] = 13] = "FirstDeliveryDate";
    EventType[EventType["LastDeliveryDate"] = 14] = "LastDeliveryDate";
    EventType[EventType["InitialInventoryDueDate"] = 15] = "InitialInventoryDueDate";
    EventType[EventType["FinalInventoryDueDate"] = 16] = "FinalInventoryDueDate";
    EventType[EventType["FirstIntentDate"] = 17] = "FirstIntentDate";
    EventType[EventType["LastIntentDate"] = 18] = "LastIntentDate";
    EventType[EventType["PositionRemovalDate"] = 19] = "PositionRemovalDate";
    EventType[EventType["MinimumNotice"] = 20] = "MinimumNotice";
    EventType[EventType["DeliveryStartTime"] = 21] = "DeliveryStartTime";
    EventType[EventType["DeliveryEndTime"] = 22] = "DeliveryEndTime";
    EventType[EventType["FirstNoticeDate"] = 23] = "FirstNoticeDate";
    EventType[EventType["LastNoticeDate"] = 24] = "LastNoticeDate";
    EventType[EventType["FirstExerciseDate"] = 25] = "FirstExerciseDate";
    EventType[EventType["RedemptionDate"] = 26] = "RedemptionDate";
    EventType[EventType["TradeContinuationEffectiveDate"] = 27] = "TradeContinuationEffectiveDate";
    EventType[EventType["Other"] = 99] = "Other";
})(EventType = exports.EventType || (exports.EventType = {}));
var InstrAttribType;
(function (InstrAttribType) {
    InstrAttribType[InstrAttribType["FlatSecuritiesPayInterestOnACurrentBasisButAreTradedWithoutInterest"] = 1] = "FlatSecuritiesPayInterestOnACurrentBasisButAreTradedWithoutInterest";
    InstrAttribType[InstrAttribType["ZeroCoupon"] = 2] = "ZeroCoupon";
    InstrAttribType[InstrAttribType["InterestBearingForEuroCommercialPaperWhenNotIssuedAtDiscount"] = 3] = "InterestBearingForEuroCommercialPaperWhenNotIssuedAtDiscount";
    InstrAttribType[InstrAttribType["NoPeriodicPayments"] = 4] = "NoPeriodicPayments";
    InstrAttribType[InstrAttribType["VariableRate"] = 5] = "VariableRate";
    InstrAttribType[InstrAttribType["LessFeeForPut"] = 6] = "LessFeeForPut";
    InstrAttribType[InstrAttribType["SteppedCoupon"] = 7] = "SteppedCoupon";
    InstrAttribType[InstrAttribType["CouponPeriodIfNotSemiAnnual"] = 8] = "CouponPeriodIfNotSemiAnnual";
    InstrAttribType[InstrAttribType["WhenAndIfIssued"] = 9] = "WhenAndIfIssued";
    InstrAttribType[InstrAttribType["OriginalIssueDiscount"] = 10] = "OriginalIssueDiscount";
    InstrAttribType[InstrAttribType["CallablePuttable"] = 11] = "CallablePuttable";
    InstrAttribType[InstrAttribType["EscrowedToMaturity"] = 12] = "EscrowedToMaturity";
    InstrAttribType[InstrAttribType["EscrowedToRedemptionDateCallable"] = 13] = "EscrowedToRedemptionDateCallable";
    InstrAttribType[InstrAttribType["PreRefunded"] = 14] = "PreRefunded";
    InstrAttribType[InstrAttribType["InDefault"] = 15] = "InDefault";
    InstrAttribType[InstrAttribType["Unrated"] = 16] = "Unrated";
    InstrAttribType[InstrAttribType["Taxable"] = 17] = "Taxable";
    InstrAttribType[InstrAttribType["Indexed"] = 18] = "Indexed";
    InstrAttribType[InstrAttribType["SubjectToAlternativeMinimumTax"] = 19] = "SubjectToAlternativeMinimumTax";
    InstrAttribType[InstrAttribType["OriginalIssueDiscountPrice"] = 20] = "OriginalIssueDiscountPrice";
    InstrAttribType[InstrAttribType["CallableBelowMaturityValue"] = 21] = "CallableBelowMaturityValue";
    InstrAttribType[InstrAttribType["CallableWithoutNoticeByMailToHolderUnlessRegistered"] = 22] = "CallableWithoutNoticeByMailToHolderUnlessRegistered";
    InstrAttribType[InstrAttribType["PriceTickRulesForSecurity"] = 23] = "PriceTickRulesForSecurity";
    InstrAttribType[InstrAttribType["TradeTypeEligibilityDetailsForSecurity"] = 24] = "TradeTypeEligibilityDetailsForSecurity";
    InstrAttribType[InstrAttribType["InstrumentDenominator"] = 25] = "InstrumentDenominator";
    InstrAttribType[InstrAttribType["InstrumentNumerator"] = 26] = "InstrumentNumerator";
    InstrAttribType[InstrAttribType["InstrumentPricePrecision"] = 27] = "InstrumentPricePrecision";
    InstrAttribType[InstrAttribType["InstrumentStrikePrice"] = 28] = "InstrumentStrikePrice";
    InstrAttribType[InstrAttribType["TradeableIndicator"] = 29] = "TradeableIndicator";
    InstrAttribType[InstrAttribType["InstrumentIsEligibleToAcceptAnonymousOrders"] = 30] = "InstrumentIsEligibleToAcceptAnonymousOrders";
    InstrAttribType[InstrAttribType["MinimumGuaranteedFillVolume"] = 31] = "MinimumGuaranteedFillVolume";
    InstrAttribType[InstrAttribType["MinimumGuaranteedFillStatus"] = 32] = "MinimumGuaranteedFillStatus";
    InstrAttribType[InstrAttribType["TradeAtSettlementTasEligibility"] = 33] = "TradeAtSettlementTasEligibility";
    InstrAttribType[InstrAttribType["TestInstrument"] = 34] = "TestInstrument";
    InstrAttribType[InstrAttribType["DummyInstrument"] = 35] = "DummyInstrument";
    InstrAttribType[InstrAttribType["NegativeSettlementPriceEligibility"] = 36] = "NegativeSettlementPriceEligibility";
    InstrAttribType[InstrAttribType["NegativeStrikePriceEligibility"] = 37] = "NegativeStrikePriceEligibility";
    InstrAttribType[InstrAttribType["UsStandardContractIndicator"] = 38] = "UsStandardContractIndicator";
    InstrAttribType[InstrAttribType["Text"] = 99] = "Text";
})(InstrAttribType = exports.InstrAttribType || (exports.InstrAttribType = {}));
var CPProgram;
(function (CPProgram) {
    CPProgram[CPProgram["E3A3"] = 1] = "E3A3";
    CPProgram[CPProgram["E42"] = 2] = "E42";
    CPProgram[CPProgram["E3A2"] = 3] = "E3A2";
    CPProgram[CPProgram["E3A33C7"] = 4] = "E3A33C7";
    CPProgram[CPProgram["E3A4"] = 5] = "E3A4";
    CPProgram[CPProgram["E3A5"] = 6] = "E3A5";
    CPProgram[CPProgram["E3A7"] = 7] = "E3A7";
    CPProgram[CPProgram["E3C7"] = 8] = "E3C7";
    CPProgram[CPProgram["Other"] = 99] = "Other";
})(CPProgram = exports.CPProgram || (exports.CPProgram = {}));
var UnderlyingCPProgram;
(function (UnderlyingCPProgram) {
    UnderlyingCPProgram[UnderlyingCPProgram["E3A3"] = 1] = "E3A3";
    UnderlyingCPProgram[UnderlyingCPProgram["E42"] = 2] = "E42";
    UnderlyingCPProgram[UnderlyingCPProgram["E3A2"] = 3] = "E3A2";
    UnderlyingCPProgram[UnderlyingCPProgram["E3A33C7"] = 4] = "E3A33C7";
    UnderlyingCPProgram[UnderlyingCPProgram["E3A4"] = 5] = "E3A4";
    UnderlyingCPProgram[UnderlyingCPProgram["E3A5"] = 6] = "E3A5";
    UnderlyingCPProgram[UnderlyingCPProgram["E3A7"] = 7] = "E3A7";
    UnderlyingCPProgram[UnderlyingCPProgram["E3C7"] = 8] = "E3C7";
    UnderlyingCPProgram[UnderlyingCPProgram["Other"] = 99] = "Other";
})(UnderlyingCPProgram = exports.UnderlyingCPProgram || (exports.UnderlyingCPProgram = {}));
var UnderlyingStipType;
(function (UnderlyingStipType) {
    UnderlyingStipType["AlternativeMinimumTaxYN"] = "AMT";
    UnderlyingStipType["AbsolutePrepaymentSpeed"] = "ABS";
    UnderlyingStipType["IncurredRecoveryYN"] = "INCURRCVY";
    UnderlyingStipType["AutoReinvestmentAtRateOrBetter"] = "AUTOREINV";
    UnderlyingStipType["ConstantPrepaymentPenalty"] = "CPP";
    UnderlyingStipType["AdditionalTerm"] = "ADDTRM";
    UnderlyingStipType["BankQualifiedYN"] = "BANKQUAL";
    UnderlyingStipType["ConstantPrepaymentRate"] = "CPR";
    UnderlyingStipType["ModifiedEquityDelivery"] = "MODEQTYDLVY";
    UnderlyingStipType["BargainConditionsSeeStipulationValue234ForValues"] = "BGNCON";
    UnderlyingStipType["ConstantPrepaymentYield"] = "CPY";
    UnderlyingStipType["NoReferenceObligationYN"] = "NOREFOBLIG";
    UnderlyingStipType["CouponRange"] = "COUPON";
    UnderlyingStipType["FinalCprOfHomeEquityPrepaymentCurve"] = "HEP";
    UnderlyingStipType["UnknownReferenceObligationYN"] = "UNKREFOBLIG";
    UnderlyingStipType["IsoCurrencyCode"] = "CURRENCY";
    UnderlyingStipType["PercentOfManufacturedHousingPrepaymentCurve"] = "MHP";
    UnderlyingStipType["AllGuaranteesYN"] = "ALLGUARANTEES";
    UnderlyingStipType["CustomStartEndDate"] = "CUSTOMDATE";
    UnderlyingStipType["MonthlyPrepaymentRate"] = "MPR";
    UnderlyingStipType["ReferencePriceYN"] = "REFPX";
    UnderlyingStipType["GeographicsAndRangeEx234Ca080MinimumOf80CaliforniaAssets"] = "GEOG";
    UnderlyingStipType["PercentOfProspectusPrepaymentCurve"] = "PPC";
    UnderlyingStipType["ReferencePolicyYN"] = "REFPOLICY";
    UnderlyingStipType["ValuationDiscount"] = "HAIRCUT";
    UnderlyingStipType["PercentOfBmaPrepaymentCurve"] = "PSA";
    UnderlyingStipType["SecuredListYN"] = "SECRDLIST";
    UnderlyingStipType["InsuredYN"] = "INSURED";
    UnderlyingStipType["SingleMonthlyMortality"] = "SMM";
    UnderlyingStipType["YearOrYearMonthOfIssueEx234200209"] = "ISSUE";
    UnderlyingStipType["IssuersTicker"] = "ISSUER";
    UnderlyingStipType["IssueSizeRange"] = "ISSUESIZE";
    UnderlyingStipType["LookbackDays"] = "LOOKBACK";
    UnderlyingStipType["ExplicitLotIdentifier"] = "LOT";
    UnderlyingStipType["LotVarianceValueInPercentMaximumOverOrUnderAllocationAllowed"] = "LOTVAR";
    UnderlyingStipType["MaturityYearAndMonth"] = "MAT";
    UnderlyingStipType["MaturityRange"] = "MATURITY";
    UnderlyingStipType["MaximumSubstitutionsRepo"] = "MAXSUBS";
    UnderlyingStipType["MinimumDenomination"] = "MINDNOM";
    UnderlyingStipType["MinimumIncrement"] = "MININCR";
    UnderlyingStipType["MinimumQuantity"] = "MINQTY";
    UnderlyingStipType["PaymentFrequencyCalendar"] = "PAYFREQ";
    UnderlyingStipType["NumberOfPieces"] = "PIECES";
    UnderlyingStipType["PoolsMaximum"] = "PMAX";
    UnderlyingStipType["PoolsPerLot"] = "PPL";
    UnderlyingStipType["PoolsPerMillion"] = "PPM";
    UnderlyingStipType["PoolsPerTrade"] = "PPT";
    UnderlyingStipType["PriceRange"] = "PRICE";
    UnderlyingStipType["PricingFrequency"] = "PRICEFREQ";
    UnderlyingStipType["ProductionYear"] = "PROD";
    UnderlyingStipType["CallProtection"] = "PROTECT";
    UnderlyingStipType["Purpose"] = "PURPOSE";
    UnderlyingStipType["BenchmarkPriceSource"] = "PXSOURCE";
    UnderlyingStipType["RatingSourceAndRange"] = "RATING";
    UnderlyingStipType["TypeOfRedemptionValuesAreNonCallablePrefundedEscrowedToMaturityPutableConvertible"] = "REDEMPTION";
    UnderlyingStipType["RestrictedYN"] = "RESTRICTED";
    UnderlyingStipType["MarketSector"] = "SECTOR";
    UnderlyingStipType["SecurityTypeIncludedOrExcluded"] = "SECTYPE";
    UnderlyingStipType["Structure"] = "STRUCT";
    UnderlyingStipType["SubstitutionsFrequencyRepo"] = "SUBSFREQ";
    UnderlyingStipType["SubstitutionsLeftRepo"] = "SUBSLEFT";
    UnderlyingStipType["FreeformText"] = "TEXT";
    UnderlyingStipType["TradeVarianceValueInPercentMaximumOverOrUnderAllocationAllowed"] = "TRDVAR";
    UnderlyingStipType["WeightedAverageCouponValueInPercentExactOrRangePlusGrossOrNetOfServicingSpreadTheDefaultEx23465NetMinimumOf65NetOfServicingFee"] = "WAC";
    UnderlyingStipType["WeightedAverageLifeCouponValueInPercentExactOrRange"] = "WAL";
    UnderlyingStipType["WeightedAverageLoanAgeValueInMonthsExactOrRange"] = "WALA";
    UnderlyingStipType["WeightedAverageMaturityValueInMonthsExactOrRange"] = "WAM";
    UnderlyingStipType["WholePoolYN"] = "WHOLE";
    UnderlyingStipType["YieldRange"] = "YIELD";
    UnderlyingStipType["AverageFicoScore"] = "AVFICO";
    UnderlyingStipType["OriginalAmount"] = "ORIGAMT";
    UnderlyingStipType["AverageLoanSize"] = "AVSIZE";
    UnderlyingStipType["PoolEffectiveDate"] = "POOLEFFDT";
    UnderlyingStipType["MaximumLoanBalance"] = "MAXBAL";
    UnderlyingStipType["PoolInitialFactor"] = "POOLINITFCTR";
    UnderlyingStipType["PoolIdentifier"] = "POOL";
    UnderlyingStipType["TrancheIdentifier"] = "TRANCHE";
    UnderlyingStipType["TypeOfRollTrade"] = "ROLLTYPE";
    UnderlyingStipType["SubstitutionYN"] = "SUBSTITUTION";
    UnderlyingStipType["ReferenceToRollingOrClosingTrade"] = "REFTRADE";
    UnderlyingStipType["MultipleExchangeFallbackYN"] = "MULTEXCHFLLBCK";
    UnderlyingStipType["PrincipalOfRollingOrClosingTrade"] = "REFPRIN";
    UnderlyingStipType["ComponentSecurityFallbackYN"] = "COMPSECFLLBCK";
    UnderlyingStipType["InterestOfRollingOrClosingTrade"] = "REFINT";
    UnderlyingStipType["LocalJurisdictionYN"] = "LOCLJRSDCTN";
    UnderlyingStipType["AvailableOfferQuantityToBeShownToTheStreet"] = "AVAILQTY";
    UnderlyingStipType["RelevantJurisdictionYN"] = "RELVJRSDCTN";
    UnderlyingStipType["BrokersSalesCredit"] = "BROKERCREDIT";
    UnderlyingStipType["OfferPriceToBeShownToInternalBrokers"] = "INTERNALPX";
    UnderlyingStipType["OfferQuantityToBeShownToInternalBrokers"] = "INTERNALQTY";
    UnderlyingStipType["TheMinimumResidualOfferQuantity"] = "LEAVEQTY";
    UnderlyingStipType["MaximumOrderSize"] = "MAXORDQTY";
    UnderlyingStipType["OrderQuantityIncrement"] = "ORDRINCR";
    UnderlyingStipType["PrimaryOrSecondaryMarketIndicator"] = "PRIMARY";
    UnderlyingStipType["BrokerSalesCreditOverride"] = "SALESCREDITOVR";
    UnderlyingStipType["TradersCredit"] = "TRADERCREDIT";
    UnderlyingStipType["DiscountRateWhenPriceIsDenominatedInPercentOfPar"] = "DISCOUNT";
    UnderlyingStipType["YieldToMaturityWhenYieldType235AndYield236ShowADifferentYield"] = "YTM";
})(UnderlyingStipType = exports.UnderlyingStipType || (exports.UnderlyingStipType = {}));
var MiscFeeBasis;
(function (MiscFeeBasis) {
    MiscFeeBasis[MiscFeeBasis["Absolute"] = 0] = "Absolute";
    MiscFeeBasis[MiscFeeBasis["PerUnit"] = 1] = "PerUnit";
    MiscFeeBasis[MiscFeeBasis["Percentage"] = 2] = "Percentage";
})(MiscFeeBasis = exports.MiscFeeBasis || (exports.MiscFeeBasis = {}));
var LastFragment;
(function (LastFragment) {
    LastFragment["NotLastMessage"] = "N";
    LastFragment["LastMessage"] = "Y";
})(LastFragment = exports.LastFragment || (exports.LastFragment = {}));
var CollAsgnReason;
(function (CollAsgnReason) {
    CollAsgnReason[CollAsgnReason["Initial"] = 0] = "Initial";
    CollAsgnReason[CollAsgnReason["Scheduled"] = 1] = "Scheduled";
    CollAsgnReason[CollAsgnReason["TimeWarning"] = 2] = "TimeWarning";
    CollAsgnReason[CollAsgnReason["MarginDeficiency"] = 3] = "MarginDeficiency";
    CollAsgnReason[CollAsgnReason["MarginExcess"] = 4] = "MarginExcess";
    CollAsgnReason[CollAsgnReason["ForwardCollateralDemand"] = 5] = "ForwardCollateralDemand";
    CollAsgnReason[CollAsgnReason["EventOfDefault"] = 6] = "EventOfDefault";
    CollAsgnReason[CollAsgnReason["AdverseTaxEvent"] = 7] = "AdverseTaxEvent";
    CollAsgnReason[CollAsgnReason["TransferDeposit"] = 8] = "TransferDeposit";
    CollAsgnReason[CollAsgnReason["TransferWithdrawal"] = 9] = "TransferWithdrawal";
    CollAsgnReason[CollAsgnReason["Pledge"] = 10] = "Pledge";
})(CollAsgnReason = exports.CollAsgnReason || (exports.CollAsgnReason = {}));
var CollInquiryQualifier;
(function (CollInquiryQualifier) {
    CollInquiryQualifier[CollInquiryQualifier["TradeDate"] = 0] = "TradeDate";
    CollInquiryQualifier[CollInquiryQualifier["GcInstrument"] = 1] = "GcInstrument";
    CollInquiryQualifier[CollInquiryQualifier["CollateralInstrument"] = 2] = "CollateralInstrument";
    CollInquiryQualifier[CollInquiryQualifier["SubstitutionEligible"] = 3] = "SubstitutionEligible";
    CollInquiryQualifier[CollInquiryQualifier["NotAssigned"] = 4] = "NotAssigned";
    CollInquiryQualifier[CollInquiryQualifier["PartiallyAssigned"] = 5] = "PartiallyAssigned";
    CollInquiryQualifier[CollInquiryQualifier["FullyAssigned"] = 6] = "FullyAssigned";
    CollInquiryQualifier[CollInquiryQualifier["OutstandingTradesTodayEndDate"] = 7] = "OutstandingTradesTodayEndDate";
})(CollInquiryQualifier = exports.CollInquiryQualifier || (exports.CollInquiryQualifier = {}));
var CollAsgnTransType;
(function (CollAsgnTransType) {
    CollAsgnTransType[CollAsgnTransType["New"] = 0] = "New";
    CollAsgnTransType[CollAsgnTransType["Replace"] = 1] = "Replace";
    CollAsgnTransType[CollAsgnTransType["Cancel"] = 2] = "Cancel";
    CollAsgnTransType[CollAsgnTransType["Release"] = 3] = "Release";
    CollAsgnTransType[CollAsgnTransType["Reverse"] = 4] = "Reverse";
})(CollAsgnTransType = exports.CollAsgnTransType || (exports.CollAsgnTransType = {}));
var CollAsgnRespType;
(function (CollAsgnRespType) {
    CollAsgnRespType[CollAsgnRespType["Received"] = 0] = "Received";
    CollAsgnRespType[CollAsgnRespType["Accepted"] = 1] = "Accepted";
    CollAsgnRespType[CollAsgnRespType["Declined"] = 2] = "Declined";
    CollAsgnRespType[CollAsgnRespType["Rejected"] = 3] = "Rejected";
    CollAsgnRespType[CollAsgnRespType["TransactionPending"] = 4] = "TransactionPending";
    CollAsgnRespType[CollAsgnRespType["TransactionCompletedWithWarningSeeText58ForFurtherInformation"] = 5] = "TransactionCompletedWithWarningSeeText58ForFurtherInformation";
})(CollAsgnRespType = exports.CollAsgnRespType || (exports.CollAsgnRespType = {}));
var CollAsgnRejectReason;
(function (CollAsgnRejectReason) {
    CollAsgnRejectReason[CollAsgnRejectReason["UnknownDealOrderTrade"] = 0] = "UnknownDealOrderTrade";
    CollAsgnRejectReason[CollAsgnRejectReason["UnknownOrInvalidInstrument"] = 1] = "UnknownOrInvalidInstrument";
    CollAsgnRejectReason[CollAsgnRejectReason["UnauthorizedTransaction"] = 2] = "UnauthorizedTransaction";
    CollAsgnRejectReason[CollAsgnRejectReason["InsufficientCollateral"] = 3] = "InsufficientCollateral";
    CollAsgnRejectReason[CollAsgnRejectReason["InvalidTypeOfCollateral"] = 4] = "InvalidTypeOfCollateral";
    CollAsgnRejectReason[CollAsgnRejectReason["ExcessiveSubstitution"] = 5] = "ExcessiveSubstitution";
    CollAsgnRejectReason[CollAsgnRejectReason["Other"] = 99] = "Other";
})(CollAsgnRejectReason = exports.CollAsgnRejectReason || (exports.CollAsgnRejectReason = {}));
var CollStatus;
(function (CollStatus) {
    CollStatus[CollStatus["Unassigned"] = 0] = "Unassigned";
    CollStatus[CollStatus["PartiallyAssigned"] = 1] = "PartiallyAssigned";
    CollStatus[CollStatus["AssignmentProposed"] = 2] = "AssignmentProposed";
    CollStatus[CollStatus["AssignedAccepted"] = 3] = "AssignedAccepted";
    CollStatus[CollStatus["Challenged"] = 4] = "Challenged";
})(CollStatus = exports.CollStatus || (exports.CollStatus = {}));
var LastRptRequested;
(function (LastRptRequested) {
    LastRptRequested["NotLastMessage"] = "N";
    LastRptRequested["LastMessage"] = "Y";
})(LastRptRequested = exports.LastRptRequested || (exports.LastRptRequested = {}));
var DeliveryType;
(function (DeliveryType) {
    DeliveryType[DeliveryType["VersusPaymentDeliverIfSellOrReceiveIfBuyVsAgainstPayment"] = 0] = "VersusPaymentDeliverIfSellOrReceiveIfBuyVsAgainstPayment";
    DeliveryType[DeliveryType["FreeDeliverIfSellOrReceiveIfBuyFree"] = 1] = "FreeDeliverIfSellOrReceiveIfBuyFree";
    DeliveryType[DeliveryType["TriParty"] = 2] = "TriParty";
    DeliveryType[DeliveryType["HoldInCustody"] = 3] = "HoldInCustody";
})(DeliveryType = exports.DeliveryType || (exports.DeliveryType = {}));
var UserRequestType;
(function (UserRequestType) {
    UserRequestType[UserRequestType["LogOnUser"] = 1] = "LogOnUser";
    UserRequestType[UserRequestType["LogOffUser"] = 2] = "LogOffUser";
    UserRequestType[UserRequestType["ChangePasswordForUser"] = 3] = "ChangePasswordForUser";
    UserRequestType[UserRequestType["RequestIndividualUserStatus"] = 4] = "RequestIndividualUserStatus";
    UserRequestType[UserRequestType["RequestThrottleLimit"] = 5] = "RequestThrottleLimit";
})(UserRequestType = exports.UserRequestType || (exports.UserRequestType = {}));
var UserStatus;
(function (UserStatus) {
    UserStatus[UserStatus["LoggedIn"] = 1] = "LoggedIn";
    UserStatus[UserStatus["NotLoggedIn"] = 2] = "NotLoggedIn";
    UserStatus[UserStatus["UserNotRecognised"] = 3] = "UserNotRecognised";
    UserStatus[UserStatus["PasswordIncorrect"] = 4] = "PasswordIncorrect";
    UserStatus[UserStatus["PasswordChanged"] = 5] = "PasswordChanged";
    UserStatus[UserStatus["Other"] = 6] = "Other";
    UserStatus[UserStatus["ForcedUserLogoutByExchange"] = 7] = "ForcedUserLogoutByExchange";
    UserStatus[UserStatus["SessionShutdownWarning"] = 8] = "SessionShutdownWarning";
    UserStatus[UserStatus["ThrottleParametersChanged"] = 9] = "ThrottleParametersChanged";
})(UserStatus = exports.UserStatus || (exports.UserStatus = {}));
var StatusValue;
(function (StatusValue) {
    StatusValue[StatusValue["Connected"] = 1] = "Connected";
    StatusValue[StatusValue["NotConnectedDownExpectedUp"] = 2] = "NotConnectedDownExpectedUp";
    StatusValue[StatusValue["NotConnectedDownExpectedDown"] = 3] = "NotConnectedDownExpectedDown";
    StatusValue[StatusValue["InProcess"] = 4] = "InProcess";
})(StatusValue = exports.StatusValue || (exports.StatusValue = {}));
var NetworkRequestType;
(function (NetworkRequestType) {
    NetworkRequestType[NetworkRequestType["Snapshot"] = 1] = "Snapshot";
    NetworkRequestType[NetworkRequestType["Subscribe"] = 2] = "Subscribe";
    NetworkRequestType[NetworkRequestType["StopSubscribing"] = 4] = "StopSubscribing";
    NetworkRequestType[NetworkRequestType["LevelOfDetailThenNoCompIDsBecomesRequired"] = 8] = "LevelOfDetailThenNoCompIDsBecomesRequired";
})(NetworkRequestType = exports.NetworkRequestType || (exports.NetworkRequestType = {}));
var NetworkStatusResponseType;
(function (NetworkStatusResponseType) {
    NetworkStatusResponseType[NetworkStatusResponseType["Full"] = 1] = "Full";
    NetworkStatusResponseType[NetworkStatusResponseType["IncrementalUpdate"] = 2] = "IncrementalUpdate";
})(NetworkStatusResponseType = exports.NetworkStatusResponseType || (exports.NetworkStatusResponseType = {}));
var TrdRptStatus;
(function (TrdRptStatus) {
    TrdRptStatus[TrdRptStatus["Accepted"] = 0] = "Accepted";
    TrdRptStatus[TrdRptStatus["Rejected"] = 1] = "Rejected";
    TrdRptStatus[TrdRptStatus["Cancelled"] = 2] = "Cancelled";
    TrdRptStatus[TrdRptStatus["AcceptedWithErrors"] = 3] = "AcceptedWithErrors";
    TrdRptStatus[TrdRptStatus["PendingNew"] = 4] = "PendingNew";
    TrdRptStatus[TrdRptStatus["PendingCancel"] = 5] = "PendingCancel";
    TrdRptStatus[TrdRptStatus["PendingReplace"] = 6] = "PendingReplace";
    TrdRptStatus[TrdRptStatus["Terminated"] = 7] = "Terminated";
    TrdRptStatus[TrdRptStatus["PendingVerification"] = 8] = "PendingVerification";
    TrdRptStatus[TrdRptStatus["DeemedVerified"] = 9] = "DeemedVerified";
    TrdRptStatus[TrdRptStatus["Verified"] = 10] = "Verified";
    TrdRptStatus[TrdRptStatus["Disputed"] = 11] = "Disputed";
})(TrdRptStatus = exports.TrdRptStatus || (exports.TrdRptStatus = {}));
var AffirmStatus;
(function (AffirmStatus) {
    AffirmStatus[AffirmStatus["Received"] = 1] = "Received";
    AffirmStatus[AffirmStatus["ConfirmRejectedIENotAffirmed"] = 2] = "ConfirmRejectedIENotAffirmed";
    AffirmStatus[AffirmStatus["Affirmed"] = 3] = "Affirmed";
})(AffirmStatus = exports.AffirmStatus || (exports.AffirmStatus = {}));
var CollAction;
(function (CollAction) {
    CollAction[CollAction["Retain"] = 0] = "Retain";
    CollAction[CollAction["Add"] = 1] = "Add";
    CollAction[CollAction["Remove"] = 2] = "Remove";
})(CollAction = exports.CollAction || (exports.CollAction = {}));
var CollInquiryStatus;
(function (CollInquiryStatus) {
    CollInquiryStatus[CollInquiryStatus["Accepted"] = 0] = "Accepted";
    CollInquiryStatus[CollInquiryStatus["AcceptedWithWarnings"] = 1] = "AcceptedWithWarnings";
    CollInquiryStatus[CollInquiryStatus["Completed"] = 2] = "Completed";
    CollInquiryStatus[CollInquiryStatus["CompletedWithWarnings"] = 3] = "CompletedWithWarnings";
    CollInquiryStatus[CollInquiryStatus["Rejected"] = 4] = "Rejected";
})(CollInquiryStatus = exports.CollInquiryStatus || (exports.CollInquiryStatus = {}));
var CollInquiryResult;
(function (CollInquiryResult) {
    CollInquiryResult[CollInquiryResult["SuccessfulDefault"] = 0] = "SuccessfulDefault";
    CollInquiryResult[CollInquiryResult["InvalidOrUnknownInstrument"] = 1] = "InvalidOrUnknownInstrument";
    CollInquiryResult[CollInquiryResult["InvalidOrUnknownCollateralType"] = 2] = "InvalidOrUnknownCollateralType";
    CollInquiryResult[CollInquiryResult["InvalidParties"] = 3] = "InvalidParties";
    CollInquiryResult[CollInquiryResult["InvalidTransportTypeRequested"] = 4] = "InvalidTransportTypeRequested";
    CollInquiryResult[CollInquiryResult["InvalidDestinationRequested"] = 5] = "InvalidDestinationRequested";
    CollInquiryResult[CollInquiryResult["NoCollateralFoundForTheTradeSpecified"] = 6] = "NoCollateralFoundForTheTradeSpecified";
    CollInquiryResult[CollInquiryResult["NoCollateralFoundForTheOrderSpecified"] = 7] = "NoCollateralFoundForTheOrderSpecified";
    CollInquiryResult[CollInquiryResult["CollateralInquiryTypeNotSupported"] = 8] = "CollateralInquiryTypeNotSupported";
    CollInquiryResult[CollInquiryResult["UnauthorizedForCollateralInquiry"] = 9] = "UnauthorizedForCollateralInquiry";
    CollInquiryResult[CollInquiryResult["OtherFurtherInformationInText58Field"] = 99] = "OtherFurtherInformationInText58Field";
})(CollInquiryResult = exports.CollInquiryResult || (exports.CollInquiryResult = {}));
var Nested3PartyIDSource;
(function (Nested3PartyIDSource) {
    Nested3PartyIDSource["KoreanInvestorId"] = "1";
    Nested3PartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    Nested3PartyIDSource["TaiwaneseTradingAcct"] = "3";
    Nested3PartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    Nested3PartyIDSource["ChineseInvestorId"] = "5";
    Nested3PartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    Nested3PartyIDSource["UsSocialSecurityNumber"] = "7";
    Nested3PartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    Nested3PartyIDSource["AustralianBusinessNumber"] = "9";
    Nested3PartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    Nested3PartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    Nested3PartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    Nested3PartyIDSource["ProprietaryCustomCode"] = "D";
    Nested3PartyIDSource["IsoCountryCode"] = "E";
    Nested3PartyIDSource["AustralianTaxFileNumber"] = "A";
    Nested3PartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    Nested3PartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    Nested3PartyIDSource["TaxId"] = "J";
    Nested3PartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    Nested3PartyIDSource["AustralianCompanyNumber"] = "K";
    Nested3PartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    Nested3PartyIDSource["CftcReportingFirmIdentifier"] = "M";
    Nested3PartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    Nested3PartyIDSource["InterimIdentifier"] = "O";
    Nested3PartyIDSource["ShortCodeIdentifier"] = "P";
    Nested3PartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(Nested3PartyIDSource = exports.Nested3PartyIDSource || (exports.Nested3PartyIDSource = {}));
var Nested3PartyRole;
(function (Nested3PartyRole) {
    Nested3PartyRole[Nested3PartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    Nested3PartyRole[Nested3PartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    Nested3PartyRole[Nested3PartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    Nested3PartyRole[Nested3PartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    Nested3PartyRole[Nested3PartyRole["InvestorId"] = 5] = "InvestorId";
    Nested3PartyRole[Nested3PartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    Nested3PartyRole[Nested3PartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    Nested3PartyRole[Nested3PartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    Nested3PartyRole[Nested3PartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    Nested3PartyRole[Nested3PartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    Nested3PartyRole[Nested3PartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    Nested3PartyRole[Nested3PartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    Nested3PartyRole[Nested3PartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    Nested3PartyRole[Nested3PartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    Nested3PartyRole[Nested3PartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    Nested3PartyRole[Nested3PartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    Nested3PartyRole[Nested3PartyRole["ContraFirm"] = 17] = "ContraFirm";
    Nested3PartyRole[Nested3PartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    Nested3PartyRole[Nested3PartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    Nested3PartyRole[Nested3PartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    Nested3PartyRole[Nested3PartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    Nested3PartyRole[Nested3PartyRole["Exchange"] = 22] = "Exchange";
    Nested3PartyRole[Nested3PartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    Nested3PartyRole[Nested3PartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    Nested3PartyRole[Nested3PartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    Nested3PartyRole[Nested3PartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    Nested3PartyRole[Nested3PartyRole["Custodian"] = 28] = "Custodian";
    Nested3PartyRole[Nested3PartyRole["Intermediary"] = 29] = "Intermediary";
    Nested3PartyRole[Nested3PartyRole["Agent"] = 30] = "Agent";
    Nested3PartyRole[Nested3PartyRole["SubCustodian"] = 31] = "SubCustodian";
    Nested3PartyRole[Nested3PartyRole["Beneficiary"] = 32] = "Beneficiary";
    Nested3PartyRole[Nested3PartyRole["InterestedParty"] = 33] = "InterestedParty";
    Nested3PartyRole[Nested3PartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    Nested3PartyRole[Nested3PartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    Nested3PartyRole[Nested3PartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    Nested3PartyRole[Nested3PartyRole["ContraTrader"] = 37] = "ContraTrader";
    Nested3PartyRole[Nested3PartyRole["PositionAccount"] = 38] = "PositionAccount";
    Nested3PartyRole[Nested3PartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    Nested3PartyRole[Nested3PartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    Nested3PartyRole[Nested3PartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    Nested3PartyRole[Nested3PartyRole["ContraExchange"] = 42] = "ContraExchange";
    Nested3PartyRole[Nested3PartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    Nested3PartyRole[Nested3PartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    Nested3PartyRole[Nested3PartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    Nested3PartyRole[Nested3PartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    Nested3PartyRole[Nested3PartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    Nested3PartyRole[Nested3PartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    Nested3PartyRole[Nested3PartyRole["AssetManager"] = 49] = "AssetManager";
    Nested3PartyRole[Nested3PartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    Nested3PartyRole[Nested3PartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    Nested3PartyRole[Nested3PartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    Nested3PartyRole[Nested3PartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    Nested3PartyRole[Nested3PartyRole["SenderLocation"] = 54] = "SenderLocation";
    Nested3PartyRole[Nested3PartyRole["SessionId"] = 55] = "SessionId";
    Nested3PartyRole[Nested3PartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    Nested3PartyRole[Nested3PartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    Nested3PartyRole[Nested3PartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    Nested3PartyRole[Nested3PartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    Nested3PartyRole[Nested3PartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    Nested3PartyRole[Nested3PartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    Nested3PartyRole[Nested3PartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    Nested3PartyRole[Nested3PartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    Nested3PartyRole[Nested3PartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    Nested3PartyRole[Nested3PartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    Nested3PartyRole[Nested3PartyRole["MarketMaker"] = 66] = "MarketMaker";
    Nested3PartyRole[Nested3PartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    Nested3PartyRole[Nested3PartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    Nested3PartyRole[Nested3PartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    Nested3PartyRole[Nested3PartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    Nested3PartyRole[Nested3PartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    Nested3PartyRole[Nested3PartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    Nested3PartyRole[Nested3PartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    Nested3PartyRole[Nested3PartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    Nested3PartyRole[Nested3PartyRole["LocationId"] = 75] = "LocationId";
    Nested3PartyRole[Nested3PartyRole["DeskId"] = 76] = "DeskId";
    Nested3PartyRole[Nested3PartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    Nested3PartyRole[Nested3PartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    Nested3PartyRole[Nested3PartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    Nested3PartyRole[Nested3PartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    Nested3PartyRole[Nested3PartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    Nested3PartyRole[Nested3PartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    Nested3PartyRole[Nested3PartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    Nested3PartyRole[Nested3PartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    Nested3PartyRole[Nested3PartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    Nested3PartyRole[Nested3PartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    Nested3PartyRole[Nested3PartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    Nested3PartyRole[Nested3PartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    Nested3PartyRole[Nested3PartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    Nested3PartyRole[Nested3PartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    Nested3PartyRole[Nested3PartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    Nested3PartyRole[Nested3PartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    Nested3PartyRole[Nested3PartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    Nested3PartyRole[Nested3PartyRole["AwayMarket"] = 94] = "AwayMarket";
    Nested3PartyRole[Nested3PartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    Nested3PartyRole[Nested3PartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    Nested3PartyRole[Nested3PartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    Nested3PartyRole[Nested3PartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    Nested3PartyRole[Nested3PartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    Nested3PartyRole[Nested3PartyRole["MarginAccount"] = 100] = "MarginAccount";
    Nested3PartyRole[Nested3PartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    Nested3PartyRole[Nested3PartyRole["DataRepository"] = 102] = "DataRepository";
    Nested3PartyRole[Nested3PartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    Nested3PartyRole[Nested3PartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    Nested3PartyRole[Nested3PartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    Nested3PartyRole[Nested3PartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    Nested3PartyRole[Nested3PartyRole["Correspondent"] = 107] = "Correspondent";
    Nested3PartyRole[Nested3PartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    Nested3PartyRole[Nested3PartyRole["Borrower"] = 110] = "Borrower";
    Nested3PartyRole[Nested3PartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    Nested3PartyRole[Nested3PartyRole["Guarantor"] = 112] = "Guarantor";
    Nested3PartyRole[Nested3PartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    Nested3PartyRole[Nested3PartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    Nested3PartyRole[Nested3PartyRole["HedgingParty"] = 115] = "HedgingParty";
    Nested3PartyRole[Nested3PartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    Nested3PartyRole[Nested3PartyRole["SalesPerson"] = 117] = "SalesPerson";
    Nested3PartyRole[Nested3PartyRole["Operator"] = 118] = "Operator";
    Nested3PartyRole[Nested3PartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    Nested3PartyRole[Nested3PartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    Nested3PartyRole[Nested3PartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    Nested3PartyRole[Nested3PartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(Nested3PartyRole = exports.Nested3PartyRole || (exports.Nested3PartyRole = {}));
var Nested3PartySubIDType;
(function (Nested3PartySubIDType) {
    Nested3PartySubIDType[Nested3PartySubIDType["Firm"] = 1] = "Firm";
    Nested3PartySubIDType[Nested3PartySubIDType["Person"] = 2] = "Person";
    Nested3PartySubIDType[Nested3PartySubIDType["System"] = 3] = "System";
    Nested3PartySubIDType[Nested3PartySubIDType["Application"] = 4] = "Application";
    Nested3PartySubIDType[Nested3PartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    Nested3PartySubIDType[Nested3PartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    Nested3PartySubIDType[Nested3PartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    Nested3PartySubIDType[Nested3PartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    Nested3PartySubIDType[Nested3PartySubIDType["ContactName"] = 9] = "ContactName";
    Nested3PartySubIDType[Nested3PartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    Nested3PartySubIDType[Nested3PartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    Nested3PartySubIDType[Nested3PartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    Nested3PartySubIDType[Nested3PartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    Nested3PartySubIDType[Nested3PartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    Nested3PartySubIDType[Nested3PartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    Nested3PartySubIDType[Nested3PartySubIDType["Bic"] = 16] = "Bic";
    Nested3PartySubIDType[Nested3PartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    Nested3PartySubIDType[Nested3PartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    Nested3PartySubIDType[Nested3PartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    Nested3PartySubIDType[Nested3PartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    Nested3PartySubIDType[Nested3PartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    Nested3PartySubIDType[Nested3PartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    Nested3PartySubIDType[Nested3PartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    Nested3PartySubIDType[Nested3PartySubIDType["Department"] = 24] = "Department";
    Nested3PartySubIDType[Nested3PartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    Nested3PartySubIDType[Nested3PartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    Nested3PartySubIDType[Nested3PartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    Nested3PartySubIDType[Nested3PartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    Nested3PartySubIDType[Nested3PartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    Nested3PartySubIDType[Nested3PartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    Nested3PartySubIDType[Nested3PartySubIDType["Location"] = 31] = "Location";
    Nested3PartySubIDType[Nested3PartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    Nested3PartySubIDType[Nested3PartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    Nested3PartySubIDType[Nested3PartySubIDType["AddressCity"] = 34] = "AddressCity";
    Nested3PartySubIDType[Nested3PartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    Nested3PartySubIDType[Nested3PartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    Nested3PartySubIDType[Nested3PartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    Nested3PartySubIDType[Nested3PartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    Nested3PartySubIDType[Nested3PartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    Nested3PartySubIDType[Nested3PartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    Nested3PartySubIDType[Nested3PartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    Nested3PartySubIDType[Nested3PartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    Nested3PartySubIDType[Nested3PartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    Nested3PartySubIDType[Nested3PartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    Nested3PartySubIDType[Nested3PartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    Nested3PartySubIDType[Nested3PartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    Nested3PartySubIDType[Nested3PartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    Nested3PartySubIDType[Nested3PartySubIDType["USPerson"] = 48] = "USPerson";
    Nested3PartySubIDType[Nested3PartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    Nested3PartySubIDType[Nested3PartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    Nested3PartySubIDType[Nested3PartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    Nested3PartySubIDType[Nested3PartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    Nested3PartySubIDType[Nested3PartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    Nested3PartySubIDType[Nested3PartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    Nested3PartySubIDType[Nested3PartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    Nested3PartySubIDType[Nested3PartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    Nested3PartySubIDType[Nested3PartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    Nested3PartySubIDType[Nested3PartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    Nested3PartySubIDType[Nested3PartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    Nested3PartySubIDType[Nested3PartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    Nested3PartySubIDType[Nested3PartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    Nested3PartySubIDType[Nested3PartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    Nested3PartySubIDType[Nested3PartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    Nested3PartySubIDType[Nested3PartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    Nested3PartySubIDType[Nested3PartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    Nested3PartySubIDType[Nested3PartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    Nested3PartySubIDType[Nested3PartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    Nested3PartySubIDType[Nested3PartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    Nested3PartySubIDType[Nested3PartySubIDType["EndUser"] = 69] = "EndUser";
    Nested3PartySubIDType[Nested3PartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    Nested3PartySubIDType[Nested3PartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    Nested3PartySubIDType[Nested3PartySubIDType["Domicile"] = 72] = "Domicile";
    Nested3PartySubIDType[Nested3PartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    Nested3PartySubIDType[Nested3PartySubIDType["Payer"] = 74] = "Payer";
    Nested3PartySubIDType[Nested3PartySubIDType["Receiver"] = 75] = "Receiver";
    Nested3PartySubIDType[Nested3PartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(Nested3PartySubIDType = exports.Nested3PartySubIDType || (exports.Nested3PartySubIDType = {}));
var StrategyParameterType;
(function (StrategyParameterType) {
    StrategyParameterType[StrategyParameterType["Int"] = 1] = "Int";
    StrategyParameterType[StrategyParameterType["Length"] = 2] = "Length";
    StrategyParameterType[StrategyParameterType["NumInGroup"] = 3] = "NumInGroup";
    StrategyParameterType[StrategyParameterType["SeqNum"] = 4] = "SeqNum";
    StrategyParameterType[StrategyParameterType["TagNum"] = 5] = "TagNum";
    StrategyParameterType[StrategyParameterType["Float"] = 6] = "Float";
    StrategyParameterType[StrategyParameterType["Qty"] = 7] = "Qty";
    StrategyParameterType[StrategyParameterType["Price"] = 8] = "Price";
    StrategyParameterType[StrategyParameterType["PriceOffset"] = 9] = "PriceOffset";
    StrategyParameterType[StrategyParameterType["Amt"] = 10] = "Amt";
    StrategyParameterType[StrategyParameterType["Percentage"] = 11] = "Percentage";
    StrategyParameterType[StrategyParameterType["Char"] = 12] = "Char";
    StrategyParameterType[StrategyParameterType["Boolean"] = 13] = "Boolean";
    StrategyParameterType[StrategyParameterType["String"] = 14] = "String";
    StrategyParameterType[StrategyParameterType["MultipleCharValue"] = 15] = "MultipleCharValue";
    StrategyParameterType[StrategyParameterType["Currency"] = 16] = "Currency";
    StrategyParameterType[StrategyParameterType["Exchange"] = 17] = "Exchange";
    StrategyParameterType[StrategyParameterType["MonthYear"] = 18] = "MonthYear";
    StrategyParameterType[StrategyParameterType["UtcTimestamp"] = 19] = "UtcTimestamp";
    StrategyParameterType[StrategyParameterType["UtcTimeOnly"] = 20] = "UtcTimeOnly";
    StrategyParameterType[StrategyParameterType["LocalMktDate"] = 21] = "LocalMktDate";
    StrategyParameterType[StrategyParameterType["UtcDateOnly"] = 22] = "UtcDateOnly";
    StrategyParameterType[StrategyParameterType["Data"] = 23] = "Data";
    StrategyParameterType[StrategyParameterType["MultipleStringValue"] = 24] = "MultipleStringValue";
    StrategyParameterType[StrategyParameterType["Country"] = 25] = "Country";
    StrategyParameterType[StrategyParameterType["Language"] = 26] = "Language";
    StrategyParameterType[StrategyParameterType["TzTimeOnly"] = 27] = "TzTimeOnly";
    StrategyParameterType[StrategyParameterType["TzTimestamp"] = 28] = "TzTimestamp";
    StrategyParameterType[StrategyParameterType["Tenor"] = 29] = "Tenor";
})(StrategyParameterType = exports.StrategyParameterType || (exports.StrategyParameterType = {}));
var SecurityStatus;
(function (SecurityStatus) {
    SecurityStatus["Active"] = "1";
    SecurityStatus["Inactive"] = "2";
    SecurityStatus["ActiveClosingOrdersOnly"] = "3";
    SecurityStatus["Expired"] = "4";
    SecurityStatus["Delisted"] = "5";
    SecurityStatus["KnockedOut"] = "6";
    SecurityStatus["KnockOutRevoked"] = "7";
    SecurityStatus["PendingExpiry"] = "8";
    SecurityStatus["Suspended"] = "9";
    SecurityStatus["Published"] = "10";
    SecurityStatus["PendingDeletion"] = "11";
})(SecurityStatus = exports.SecurityStatus || (exports.SecurityStatus = {}));
var UnderlyingCashType;
(function (UnderlyingCashType) {
    UnderlyingCashType["Fixed"] = "FIXED";
    UnderlyingCashType["Diff"] = "DIFF";
})(UnderlyingCashType = exports.UnderlyingCashType || (exports.UnderlyingCashType = {}));
var UnderlyingSettlementType;
(function (UnderlyingSettlementType) {
    UnderlyingSettlementType[UnderlyingSettlementType["T1"] = 2] = "T1";
    UnderlyingSettlementType[UnderlyingSettlementType["T3"] = 4] = "T3";
    UnderlyingSettlementType[UnderlyingSettlementType["T4"] = 5] = "T4";
})(UnderlyingSettlementType = exports.UnderlyingSettlementType || (exports.UnderlyingSettlementType = {}));
var SecurityUpdateAction;
(function (SecurityUpdateAction) {
    SecurityUpdateAction["Add"] = "A";
    SecurityUpdateAction["Delete"] = "D";
    SecurityUpdateAction["Modify"] = "M";
})(SecurityUpdateAction = exports.SecurityUpdateAction || (exports.SecurityUpdateAction = {}));
var ExpirationQtyType;
(function (ExpirationQtyType) {
    ExpirationQtyType[ExpirationQtyType["AutoExercise"] = 1] = "AutoExercise";
    ExpirationQtyType[ExpirationQtyType["NonAutoExercise"] = 2] = "NonAutoExercise";
    ExpirationQtyType[ExpirationQtyType["FinalWillBeExercised"] = 3] = "FinalWillBeExercised";
    ExpirationQtyType[ExpirationQtyType["ContraryIntention"] = 4] = "ContraryIntention";
    ExpirationQtyType[ExpirationQtyType["Difference"] = 5] = "Difference";
})(ExpirationQtyType = exports.ExpirationQtyType || (exports.ExpirationQtyType = {}));
var IndividualAllocType;
(function (IndividualAllocType) {
    IndividualAllocType[IndividualAllocType["SubAllocate"] = 1] = "SubAllocate";
    IndividualAllocType[IndividualAllocType["ThirdPartyAllocation"] = 2] = "ThirdPartyAllocation";
})(IndividualAllocType = exports.IndividualAllocType || (exports.IndividualAllocType = {}));
var UnitOfMeasure;
(function (UnitOfMeasure) {
    UnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnitOfMeasure["Allowances"] = "Alw";
    UnitOfMeasure["Barrels"] = "Bbl";
    UnitOfMeasure["CubicMeters"] = "CBM";
    UnitOfMeasure["BoardFeet"] = "BDFT";
    UnitOfMeasure["Gigajoules"] = "GJ";
    UnitOfMeasure["Bushels"] = "Bu";
    UnitOfMeasure["KilowattHours"] = "kWh";
    UnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnitOfMeasure["MegawattHours"] = "MWh";
    UnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnitOfMeasure["Therms"] = "thm";
    UnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnitOfMeasure["HundredweightUs"] = "cwt";
    UnitOfMeasure["Days"] = "day";
    UnitOfMeasure["DryMetricTons"] = "dt";
    UnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnitOfMeasure["Grams"] = "g";
    UnitOfMeasure["Gallons"] = "Gal";
    UnitOfMeasure["GrossTons"] = "GT";
    UnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnitOfMeasure["IndexPoint"] = "IPNT";
    UnitOfMeasure["Kilograms"] = "kg";
    UnitOfMeasure["Kiloliters"] = "kL";
    UnitOfMeasure["KilowattYear"] = "kW-a";
    UnitOfMeasure["KilowattDay"] = "kW-d";
    UnitOfMeasure["KilowattHour"] = "kW-h";
    UnitOfMeasure["KilowattMonth"] = "kW-M";
    UnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnitOfMeasure["Liters"] = "L";
    UnitOfMeasure["Pounds"] = "lbs";
    UnitOfMeasure["MegawattYear"] = "MW-a";
    UnitOfMeasure["MegawattDay"] = "MW-d";
    UnitOfMeasure["MegawattHour"] = "MW-h";
    UnitOfMeasure["MegawattMonth"] = "MW-M";
    UnitOfMeasure["MegawattMinute"] = "MW-min";
    UnitOfMeasure["TroyOunces"] = "oz_tr";
    UnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnitOfMeasure["MetricTons"] = "t";
    UnitOfMeasure["TonsUs"] = "tn";
    UnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnitOfMeasure["UsDollars"] = "USD";
})(UnitOfMeasure = exports.UnitOfMeasure || (exports.UnitOfMeasure = {}));
var TimeUnit;
(function (TimeUnit) {
    TimeUnit["Hour"] = "H";
    TimeUnit["Minute"] = "Min";
    TimeUnit["Second"] = "S";
    TimeUnit["Day"] = "D";
    TimeUnit["Week"] = "Wk";
    TimeUnit["Month"] = "Mo";
    TimeUnit["Year"] = "Yr";
    TimeUnit["Quarter"] = "Q";
})(TimeUnit = exports.TimeUnit || (exports.TimeUnit = {}));
var UnderlyingUnitOfMeasure;
(function (UnderlyingUnitOfMeasure) {
    UnderlyingUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingUnitOfMeasure["Therms"] = "thm";
    UnderlyingUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingUnitOfMeasure["Days"] = "day";
    UnderlyingUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingUnitOfMeasure["Grams"] = "g";
    UnderlyingUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingUnitOfMeasure["Liters"] = "L";
    UnderlyingUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingUnitOfMeasure["MetricTons"] = "t";
    UnderlyingUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingUnitOfMeasure = exports.UnderlyingUnitOfMeasure || (exports.UnderlyingUnitOfMeasure = {}));
var LegUnitOfMeasure;
(function (LegUnitOfMeasure) {
    LegUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegUnitOfMeasure["Allowances"] = "Alw";
    LegUnitOfMeasure["Barrels"] = "Bbl";
    LegUnitOfMeasure["CubicMeters"] = "CBM";
    LegUnitOfMeasure["BoardFeet"] = "BDFT";
    LegUnitOfMeasure["Gigajoules"] = "GJ";
    LegUnitOfMeasure["Bushels"] = "Bu";
    LegUnitOfMeasure["KilowattHours"] = "kWh";
    LegUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegUnitOfMeasure["MegawattHours"] = "MWh";
    LegUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegUnitOfMeasure["Therms"] = "thm";
    LegUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegUnitOfMeasure["HundredweightUs"] = "cwt";
    LegUnitOfMeasure["Days"] = "day";
    LegUnitOfMeasure["DryMetricTons"] = "dt";
    LegUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegUnitOfMeasure["Grams"] = "g";
    LegUnitOfMeasure["Gallons"] = "Gal";
    LegUnitOfMeasure["GrossTons"] = "GT";
    LegUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegUnitOfMeasure["IndexPoint"] = "IPNT";
    LegUnitOfMeasure["Kilograms"] = "kg";
    LegUnitOfMeasure["Kiloliters"] = "kL";
    LegUnitOfMeasure["KilowattYear"] = "kW-a";
    LegUnitOfMeasure["KilowattDay"] = "kW-d";
    LegUnitOfMeasure["KilowattHour"] = "kW-h";
    LegUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegUnitOfMeasure["Liters"] = "L";
    LegUnitOfMeasure["Pounds"] = "lbs";
    LegUnitOfMeasure["MegawattYear"] = "MW-a";
    LegUnitOfMeasure["MegawattDay"] = "MW-d";
    LegUnitOfMeasure["MegawattHour"] = "MW-h";
    LegUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegUnitOfMeasure["MetricTons"] = "t";
    LegUnitOfMeasure["TonsUs"] = "tn";
    LegUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegUnitOfMeasure["UsDollars"] = "USD";
})(LegUnitOfMeasure = exports.LegUnitOfMeasure || (exports.LegUnitOfMeasure = {}));
var UnderlyingTimeUnit;
(function (UnderlyingTimeUnit) {
    UnderlyingTimeUnit["Hour"] = "H";
    UnderlyingTimeUnit["Minute"] = "Min";
    UnderlyingTimeUnit["Second"] = "S";
    UnderlyingTimeUnit["Day"] = "D";
    UnderlyingTimeUnit["Week"] = "Wk";
    UnderlyingTimeUnit["Month"] = "Mo";
    UnderlyingTimeUnit["Year"] = "Yr";
    UnderlyingTimeUnit["Quarter"] = "Q";
})(UnderlyingTimeUnit = exports.UnderlyingTimeUnit || (exports.UnderlyingTimeUnit = {}));
var LegTimeUnit;
(function (LegTimeUnit) {
    LegTimeUnit["Hour"] = "H";
    LegTimeUnit["Minute"] = "Min";
    LegTimeUnit["Second"] = "S";
    LegTimeUnit["Day"] = "D";
    LegTimeUnit["Week"] = "Wk";
    LegTimeUnit["Month"] = "Mo";
    LegTimeUnit["Year"] = "Yr";
    LegTimeUnit["Quarter"] = "Q";
})(LegTimeUnit = exports.LegTimeUnit || (exports.LegTimeUnit = {}));
var AllocMethod;
(function (AllocMethod) {
    AllocMethod[AllocMethod["Automatic"] = 1] = "Automatic";
    AllocMethod[AllocMethod["Guarantor"] = 2] = "Guarantor";
    AllocMethod[AllocMethod["Manual"] = 3] = "Manual";
    AllocMethod[AllocMethod["BrokerAssigned"] = 4] = "BrokerAssigned";
})(AllocMethod = exports.AllocMethod || (exports.AllocMethod = {}));
var SideTrdSubTyp;
(function (SideTrdSubTyp) {
    SideTrdSubTyp[SideTrdSubTyp["Cmta"] = 0] = "Cmta";
    SideTrdSubTyp[SideTrdSubTyp["InternalTransferOrAdjustment"] = 1] = "InternalTransferOrAdjustment";
    SideTrdSubTyp[SideTrdSubTyp["ExternalTransferOrTransferOfAccount"] = 2] = "ExternalTransferOrTransferOfAccount";
    SideTrdSubTyp[SideTrdSubTyp["RejectForSubmittingSide"] = 3] = "RejectForSubmittingSide";
    SideTrdSubTyp[SideTrdSubTyp["AdvisoryForContraSide"] = 4] = "AdvisoryForContraSide";
    SideTrdSubTyp[SideTrdSubTyp["OffsetDueToAnAllocation"] = 5] = "OffsetDueToAnAllocation";
    SideTrdSubTyp[SideTrdSubTyp["OnsetDueToAnAllocation"] = 6] = "OnsetDueToAnAllocation";
    SideTrdSubTyp[SideTrdSubTyp["DifferentialSpread"] = 7] = "DifferentialSpread";
    SideTrdSubTyp[SideTrdSubTyp["ImpliedSpreadLegExecutedAgainstAnOutright"] = 8] = "ImpliedSpreadLegExecutedAgainstAnOutright";
    SideTrdSubTyp[SideTrdSubTyp["TransactionFromExercise"] = 9] = "TransactionFromExercise";
    SideTrdSubTyp[SideTrdSubTyp["TransactionFromAssignment"] = 10] = "TransactionFromAssignment";
    SideTrdSubTyp[SideTrdSubTyp["Acats"] = 11] = "Acats";
    SideTrdSubTyp[SideTrdSubTyp["AiAutomatedInputFacilityDisabledInResponseToAnExchangeRequest"] = 14] = "AiAutomatedInputFacilityDisabledInResponseToAnExchangeRequest";
    SideTrdSubTyp[SideTrdSubTyp["BTransactionBetweenTwoMemberFirmsWhereNeitherMemberFirmIsRegisteredAsAMarketMakerInTheSecurityInQuestionAndNeitherIsADesignatedFundManagerAlsoUsedByBrokerDealersWhenDealingWithAnotherBrokerWhichIsNotAMemberFirmNonOrderBookSecuritiesOnly"] = 15] = "BTransactionBetweenTwoMemberFirmsWhereNeitherMemberFirmIsRegisteredAsAMarketMakerInTheSecurityInQuestionAndNeitherIsADesignatedFundManagerAlsoUsedByBrokerDealersWhenDealingWithAnotherBrokerWhichIsNotAMemberFirmNonOrderBookSecuritiesOnly";
    SideTrdSubTyp[SideTrdSubTyp["KTransactionUsingBlockTradeFacility"] = 16] = "KTransactionUsingBlockTradeFacility";
    SideTrdSubTyp[SideTrdSubTyp["LcCorrectionSubmittedMoreThanThreeDaysAfterPublicationOfTheOriginalTradeReport"] = 17] = "LcCorrectionSubmittedMoreThanThreeDaysAfterPublicationOfTheOriginalTradeReport";
    SideTrdSubTyp[SideTrdSubTyp["MTransactionOtherThanATransactionResultingFromAStockSwapOrStockSwitchBetweenTwoMarketMakersRegisteredInThatSecurityIncludingIdbOrAPublicDisplaySystemTradesNonOrderBookSecuritiesOnly"] = 18] = "MTransactionOtherThanATransactionResultingFromAStockSwapOrStockSwitchBetweenTwoMarketMakersRegisteredInThatSecurityIncludingIdbOrAPublicDisplaySystemTradesNonOrderBookSecuritiesOnly";
    SideTrdSubTyp[SideTrdSubTyp["NNonProtectedPortfolioTransactionOrAFullyDisclosedPortfolioTransaction"] = 19] = "NNonProtectedPortfolioTransactionOrAFullyDisclosedPortfolioTransaction";
    SideTrdSubTyp[SideTrdSubTyp["NmITransactionWhereExchangeHasGrantedPermissionForNonPublicationIiIdbIsReportingAsSellerIiiSubmittingATransactionReportToTheExchangeWhereTheTransactionReportIsNotAlsoATradeReport"] = 20] = "NmITransactionWhereExchangeHasGrantedPermissionForNonPublicationIiIdbIsReportingAsSellerIiiSubmittingATransactionReportToTheExchangeWhereTheTransactionReportIsNotAlsoATradeReport";
    SideTrdSubTyp[SideTrdSubTyp["NrNonRiskTransactionInASeatsSecurityOtherThanAnAimSecurity"] = 21] = "NrNonRiskTransactionInASeatsSecurityOtherThanAnAimSecurity";
    SideTrdSubTyp[SideTrdSubTyp["PProtectedPortfolioTransactionOrAWorkedPrincipalAgreementToEffectAPortfolioTransactionWhichIncludesOrderBookSecurities"] = 22] = "PProtectedPortfolioTransactionOrAWorkedPrincipalAgreementToEffectAPortfolioTransactionWhichIncludesOrderBookSecurities";
    SideTrdSubTyp[SideTrdSubTyp["PaProtectedTransactionNotification"] = 23] = "PaProtectedTransactionNotification";
    SideTrdSubTyp[SideTrdSubTyp["PcContraTradeForTransactionWhichTookPlaceOnAPreviousDayAndWhichWasAutomaticallyExecutedOnTheExchangeTradingSystem"] = 24] = "PcContraTradeForTransactionWhichTookPlaceOnAPreviousDayAndWhichWasAutomaticallyExecutedOnTheExchangeTradingSystem";
    SideTrdSubTyp[SideTrdSubTyp["PnWorkedPrincipalNotificationForAPortfolioTransactionWhichIncludesOrderBookSecurities"] = 25] = "PnWorkedPrincipalNotificationForAPortfolioTransactionWhichIncludesOrderBookSecurities";
    SideTrdSubTyp[SideTrdSubTyp["RIRisklessPrincipalTransactionBetweenNonMembersWhereTheBuyingAndSellingTransactionsAreExecutedAtDifferentPricesOrOnDifferentTermsRequiresATradeReportWithTradeTypeIndicatorRForEachTransactionIiMarketMakerIsReportingAllTheLegsOfARisklessPrincipalTransactionWhereTheBuyingAndSellingTransactionsAreExecutedAtDifferentPricesRequiresATradeReportWithTradeTypeIndicatorRForEachTransactionOrIiiMarketMakerIsReportingTheOnwardLegOfARisklessPrincipalTransactionWhereTheLegsAreExecutedAtDifferentPricesAndAnotherMarketMakerHasSubmittedATradeReportUsingTradeTypeIndicatorMForTheFirstLegThisRequiresASingleTradeReportWithTradeTypeIndicatorR"] = 26] = "RIRisklessPrincipalTransactionBetweenNonMembersWhereTheBuyingAndSellingTransactionsAreExecutedAtDifferentPricesOrOnDifferentTermsRequiresATradeReportWithTradeTypeIndicatorRForEachTransactionIiMarketMakerIsReportingAllTheLegsOfARisklessPrincipalTransactionWhereTheBuyingAndSellingTransactionsAreExecutedAtDifferentPricesRequiresATradeReportWithTradeTypeIndicatorRForEachTransactionOrIiiMarketMakerIsReportingTheOnwardLegOfARisklessPrincipalTransactionWhereTheLegsAreExecutedAtDifferentPricesAndAnotherMarketMakerHasSubmittedATradeReportUsingTradeTypeIndicatorMForTheFirstLegThisRequiresASingleTradeReportWithTradeTypeIndicatorR";
    SideTrdSubTyp[SideTrdSubTyp["RoTransactionWhichResultedFromTheExerciseOfATraditionalOptionOrAStockSettledCoveredWarrant"] = 27] = "RoTransactionWhichResultedFromTheExerciseOfATraditionalOptionOrAStockSettledCoveredWarrant";
    SideTrdSubTyp[SideTrdSubTyp["RtRiskTransactionInASeatsSecurityExcludingAimSecurityReportedByAMarketMakerRegisteredInThatSecurity"] = 28] = "RtRiskTransactionInASeatsSecurityExcludingAimSecurityReportedByAMarketMakerRegisteredInThatSecurity";
    SideTrdSubTyp[SideTrdSubTyp["SwTransactionsResultingFromStockSwapOrAStockSwitchOneReportIsRequiredForEachLineOfStock"] = 29] = "SwTransactionsResultingFromStockSwapOrAStockSwitchOneReportIsRequiredForEachLineOfStock";
    SideTrdSubTyp[SideTrdSubTyp["TIfReportingASingleProtectedTransaction"] = 30] = "TIfReportingASingleProtectedTransaction";
    SideTrdSubTyp[SideTrdSubTyp["WnWorkedPrincipalNotificationForASingleOrderBookSecurity"] = 31] = "WnWorkedPrincipalNotificationForASingleOrderBookSecurity";
    SideTrdSubTyp[SideTrdSubTyp["WtWorkedPrincipalTransactionOtherThanAPortfolioTransaction"] = 32] = "WtWorkedPrincipalTransactionOtherThanAPortfolioTransaction";
    SideTrdSubTyp[SideTrdSubTyp["OffHoursTrade"] = 33] = "OffHoursTrade";
    SideTrdSubTyp[SideTrdSubTyp["OnHoursTrade"] = 34] = "OnHoursTrade";
    SideTrdSubTyp[SideTrdSubTyp["OtcQuote"] = 35] = "OtcQuote";
    SideTrdSubTyp[SideTrdSubTyp["ConvertedSwap"] = 36] = "ConvertedSwap";
    SideTrdSubTyp[SideTrdSubTyp["CrossedTradeX"] = 37] = "CrossedTradeX";
    SideTrdSubTyp[SideTrdSubTyp["InterimProtectedTradeI"] = 38] = "InterimProtectedTradeI";
    SideTrdSubTyp[SideTrdSubTyp["LargeInScaleL"] = 39] = "LargeInScaleL";
    SideTrdSubTyp[SideTrdSubTyp["WashTrade"] = 40] = "WashTrade";
    SideTrdSubTyp[SideTrdSubTyp["TradeAtSettlementTas"] = 41] = "TradeAtSettlementTas";
    SideTrdSubTyp[SideTrdSubTyp["AuctionTrade"] = 42] = "AuctionTrade";
    SideTrdSubTyp[SideTrdSubTyp["TradeAtMarkerTam"] = 43] = "TradeAtMarkerTam";
    SideTrdSubTyp[SideTrdSubTyp["DefaultCreditEvent"] = 44] = "DefaultCreditEvent";
    SideTrdSubTyp[SideTrdSubTyp["RestructuringCreditEvent"] = 45] = "RestructuringCreditEvent";
    SideTrdSubTyp[SideTrdSubTyp["MergerSuccessionEvent"] = 46] = "MergerSuccessionEvent";
    SideTrdSubTyp[SideTrdSubTyp["SpinOffSuccessionEvent"] = 47] = "SpinOffSuccessionEvent";
    SideTrdSubTyp[SideTrdSubTyp["MultilateralCompression"] = 48] = "MultilateralCompression";
    SideTrdSubTyp[SideTrdSubTyp["Balancing"] = 50] = "Balancing";
    SideTrdSubTyp[SideTrdSubTyp["BasisTradeIndexCloseBtic"] = 51] = "BasisTradeIndexCloseBtic";
})(SideTrdSubTyp = exports.SideTrdSubTyp || (exports.SideTrdSubTyp = {}));
var SideTrdRegTimestampType;
(function (SideTrdRegTimestampType) {
    SideTrdRegTimestampType[SideTrdRegTimestampType["ExecutionTime"] = 1] = "ExecutionTime";
    SideTrdRegTimestampType[SideTrdRegTimestampType["TimeIn"] = 2] = "TimeIn";
    SideTrdRegTimestampType[SideTrdRegTimestampType["TimeOut"] = 3] = "TimeOut";
    SideTrdRegTimestampType[SideTrdRegTimestampType["BrokerReceipt"] = 4] = "BrokerReceipt";
    SideTrdRegTimestampType[SideTrdRegTimestampType["BrokerExecution"] = 5] = "BrokerExecution";
    SideTrdRegTimestampType[SideTrdRegTimestampType["DeskReceipt"] = 6] = "DeskReceipt";
    SideTrdRegTimestampType[SideTrdRegTimestampType["SubmissionToClearing"] = 7] = "SubmissionToClearing";
    SideTrdRegTimestampType[SideTrdRegTimestampType["TimePriority"] = 8] = "TimePriority";
    SideTrdRegTimestampType[SideTrdRegTimestampType["OrderbookEntryTime"] = 9] = "OrderbookEntryTime";
    SideTrdRegTimestampType[SideTrdRegTimestampType["OrderSubmissionTime"] = 10] = "OrderSubmissionTime";
    SideTrdRegTimestampType[SideTrdRegTimestampType["PubliclyReported"] = 11] = "PubliclyReported";
    SideTrdRegTimestampType[SideTrdRegTimestampType["PublicReportUpdated"] = 12] = "PublicReportUpdated";
    SideTrdRegTimestampType[SideTrdRegTimestampType["NonPubliclyReported"] = 13] = "NonPubliclyReported";
    SideTrdRegTimestampType[SideTrdRegTimestampType["NonPublicReportUpdated"] = 14] = "NonPublicReportUpdated";
    SideTrdRegTimestampType[SideTrdRegTimestampType["SubmittedForConfirmation"] = 15] = "SubmittedForConfirmation";
    SideTrdRegTimestampType[SideTrdRegTimestampType["UpdatedForConfirmation"] = 16] = "UpdatedForConfirmation";
    SideTrdRegTimestampType[SideTrdRegTimestampType["Confirmed"] = 17] = "Confirmed";
    SideTrdRegTimestampType[SideTrdRegTimestampType["UpdatedForClearing"] = 18] = "UpdatedForClearing";
    SideTrdRegTimestampType[SideTrdRegTimestampType["Cleared"] = 19] = "Cleared";
    SideTrdRegTimestampType[SideTrdRegTimestampType["AllocationsSubmitted"] = 20] = "AllocationsSubmitted";
    SideTrdRegTimestampType[SideTrdRegTimestampType["AllocationsUpdated"] = 21] = "AllocationsUpdated";
    SideTrdRegTimestampType[SideTrdRegTimestampType["ApplicationCompleted"] = 22] = "ApplicationCompleted";
    SideTrdRegTimestampType[SideTrdRegTimestampType["SubmittedToRepository"] = 23] = "SubmittedToRepository";
    SideTrdRegTimestampType[SideTrdRegTimestampType["PostTradeContinuationEvent"] = 24] = "PostTradeContinuationEvent";
    SideTrdRegTimestampType[SideTrdRegTimestampType["PostTradeValuation"] = 25] = "PostTradeValuation";
    SideTrdRegTimestampType[SideTrdRegTimestampType["PreviousTimePriority"] = 26] = "PreviousTimePriority";
})(SideTrdRegTimestampType = exports.SideTrdRegTimestampType || (exports.SideTrdRegTimestampType = {}));
var AsOfIndicator;
(function (AsOfIndicator) {
    AsOfIndicator["FalseTradeIsNotAnAsOfTrade"] = "0";
    AsOfIndicator["TrueTradeIsAnAsOfTrade"] = "1";
})(AsOfIndicator = exports.AsOfIndicator || (exports.AsOfIndicator = {}));
var MDBookType;
(function (MDBookType) {
    MDBookType[MDBookType["TopOfBook"] = 1] = "TopOfBook";
    MDBookType[MDBookType["PriceDepth"] = 2] = "PriceDepth";
    MDBookType[MDBookType["OrderDepth"] = 3] = "OrderDepth";
})(MDBookType = exports.MDBookType || (exports.MDBookType = {}));
var MDOriginType;
(function (MDOriginType) {
    MDOriginType[MDOriginType["Book"] = 0] = "Book";
    MDOriginType[MDOriginType["OffBook"] = 1] = "OffBook";
    MDOriginType[MDOriginType["Cross"] = 2] = "Cross";
    MDOriginType[MDOriginType["QuoteDrivenMarket"] = 3] = "QuoteDrivenMarket";
    MDOriginType[MDOriginType["DarkOrderBook"] = 4] = "DarkOrderBook";
    MDOriginType[MDOriginType["AuctionDrivenMarket"] = 5] = "AuctionDrivenMarket";
    MDOriginType[MDOriginType["QuoteNegotiation"] = 6] = "QuoteNegotiation";
    MDOriginType[MDOriginType["VoiceNegotiation"] = 7] = "VoiceNegotiation";
    MDOriginType[MDOriginType["HybridMarket"] = 8] = "HybridMarket";
})(MDOriginType = exports.MDOriginType || (exports.MDOriginType = {}));
var CustOrderHandlingInst;
(function (CustOrderHandlingInst) {
    CustOrderHandlingInst["PhoneSimple"] = "A";
    CustOrderHandlingInst["GOrderFinraOatsFcmApiOrFixFiaExecutionSource"] = "G";
    CustOrderHandlingInst["AddOnOrder"] = "ADD";
    CustOrderHandlingInst["PhoneComplex"] = "B";
    CustOrderHandlingInst["AllOrNone"] = "AON";
    CustOrderHandlingInst["FcmProvidedScreen"] = "C";
    CustOrderHandlingInst["OtherProvidedScreen"] = "D";
    CustOrderHandlingInst["ConditionalOrder"] = "CND";
    CustOrderHandlingInst["CashNotHeld"] = "CNH";
    CustOrderHandlingInst["ClientProvidedPlatformControlledByFcm"] = "E";
    CustOrderHandlingInst["ClientProvidedPlatformDirectToExchange"] = "F";
    CustOrderHandlingInst["DeliveryInstructionsCash"] = "CSH";
    CustOrderHandlingInst["DirectedOrder"] = "DIR";
    CustOrderHandlingInst["AlgoEngine"] = "H";
    CustOrderHandlingInst["DiscretionaryLimitOrder"] = "DLO";
    CustOrderHandlingInst["ExchangeForPhysicalTransaction"] = "E.W";
    CustOrderHandlingInst["PriceAtExecutionPriceAddedAtInitialOrderEntryTradingMiddleOfficeOrTimeOfGiveUp"] = "J";
    CustOrderHandlingInst["FillOrKill"] = "FOK";
    CustOrderHandlingInst["DeskElectronic"] = "W";
    CustOrderHandlingInst["DeskPit"] = "X";
    CustOrderHandlingInst["ClientElectronic"] = "Y";
    CustOrderHandlingInst["IntradayCross"] = "IDX";
    CustOrderHandlingInst["ImbalanceOnly"] = "IO";
    CustOrderHandlingInst["ClientPit"] = "Z";
    CustOrderHandlingInst["ImmediateOrCancel"] = "IOC";
    CustOrderHandlingInst["IntermarketSweepOrder"] = "ISO";
    CustOrderHandlingInst["LimitOnOpen"] = "LOO";
    CustOrderHandlingInst["LimitOnClose"] = "LOC";
    CustOrderHandlingInst["MarketAtOpen"] = "MAO";
    CustOrderHandlingInst["MarketAtClose"] = "MAC";
    CustOrderHandlingInst["MarketOnOpen"] = "MOO";
    CustOrderHandlingInst["MarketOnClose"] = "MOC";
    CustOrderHandlingInst["MergerRelatedTransferPosition"] = "MPT";
    CustOrderHandlingInst["MinimumQuantity"] = "MQT";
    CustOrderHandlingInst["MarketToLimit"] = "MTL";
    CustOrderHandlingInst["DeliveryInstructionsNextDay"] = "ND";
    CustOrderHandlingInst["NotHeld"] = "NH";
    CustOrderHandlingInst["OptionsRelatedTransaction"] = "OPT";
    CustOrderHandlingInst["OverTheDay"] = "OVD";
    CustOrderHandlingInst["Pegged"] = "PEG";
    CustOrderHandlingInst["ReserveSizeOrder"] = "RSV";
    CustOrderHandlingInst["StopStockTransaction"] = "S.W";
    CustOrderHandlingInst["Scale"] = "SCL";
    CustOrderHandlingInst["DeliveryInstructionsSellersOption"] = "SLR";
    CustOrderHandlingInst["TimeOrder"] = "TMO";
    CustOrderHandlingInst["TrailingStop"] = "TS";
    CustOrderHandlingInst["Work"] = "WRK";
    CustOrderHandlingInst["StayOnOfferside"] = "F0";
    CustOrderHandlingInst["GoAlong"] = "F3";
    CustOrderHandlingInst["ParticipateDoNotInitiate"] = "F6";
    CustOrderHandlingInst["StrictScale"] = "F7";
    CustOrderHandlingInst["TryToScale"] = "F8";
    CustOrderHandlingInst["StayOnBidside"] = "F9";
    CustOrderHandlingInst["NoCross"] = "FA";
    CustOrderHandlingInst["OkToCross"] = "FB";
    CustOrderHandlingInst["CallFirst"] = "FC";
    CustOrderHandlingInst["PercentOfVolume"] = "FD";
    CustOrderHandlingInst["ReinstateOnSystemFailure"] = "FH";
    CustOrderHandlingInst["InstitutionOnly"] = "FI";
    CustOrderHandlingInst["ReinstateOnTradingHalt"] = "FJ";
    CustOrderHandlingInst["CancelOnTradingHalf"] = "FK";
    CustOrderHandlingInst["LastPeg"] = "FL";
    CustOrderHandlingInst["MidPricePeg"] = "FM";
    CustOrderHandlingInst["NonNegotiable"] = "FN";
    CustOrderHandlingInst["OpeningPeg"] = "FO";
    CustOrderHandlingInst["MarketPeg"] = "FP";
    CustOrderHandlingInst["CancelOnSystemFailure"] = "FQ";
    CustOrderHandlingInst["PrimaryPeg"] = "FR";
    CustOrderHandlingInst["Suspend"] = "FS";
    CustOrderHandlingInst["FixedPegToLocalBestBidOrOfferAtTimeOfOrder"] = "FT";
    CustOrderHandlingInst["PegToVwap"] = "FW";
    CustOrderHandlingInst["TradeAlong"] = "FX";
    CustOrderHandlingInst["TryToStop"] = "FY";
    CustOrderHandlingInst["CancelIfNotBest"] = "FZ";
    CustOrderHandlingInst["StrictLimit"] = "Fb";
    CustOrderHandlingInst["IgnorePriceValidityChecks"] = "Fc";
    CustOrderHandlingInst["PegToLimitPrice"] = "Fd";
    CustOrderHandlingInst["WorkToTargetStrategy"] = "Fe";
})(CustOrderHandlingInst = exports.CustOrderHandlingInst || (exports.CustOrderHandlingInst = {}));
var OrderHandlingInstSource;
(function (OrderHandlingInstSource) {
    OrderHandlingInstSource[OrderHandlingInstSource["FinraOats"] = 1] = "FinraOats";
    OrderHandlingInstSource[OrderHandlingInstSource["FiaExecutionSourceCode"] = 2] = "FiaExecutionSourceCode";
})(OrderHandlingInstSource = exports.OrderHandlingInstSource || (exports.OrderHandlingInstSource = {}));
var DeskType;
(function (DeskType) {
    DeskType["Agency"] = "A";
    DeskType["Arbitrage"] = "AR";
    DeskType["BlockTrading"] = "B";
    DeskType["ConvertibleDesk"] = "C";
    DeskType["CentralRiskBooks"] = "CR";
    DeskType["Derivatives"] = "D";
    DeskType["EquityCapitalMarkets"] = "EC";
    DeskType["International"] = "IN";
    DeskType["Institutional"] = "IS";
    DeskType["Other"] = "O";
    DeskType["PreferredTrading"] = "PF";
    DeskType["Proprietary"] = "PR";
    DeskType["ProgramTrading"] = "PT";
    DeskType["Sales"] = "S";
    DeskType["Swaps"] = "SW";
    DeskType["TradingDeskOrSystemNonMarketMaker"] = "T";
    DeskType["Treasury"] = "TR";
})(DeskType = exports.DeskType || (exports.DeskType = {}));
var DeskTypeSource;
(function (DeskTypeSource) {
    DeskTypeSource[DeskTypeSource["FinraOats"] = 1] = "FinraOats";
})(DeskTypeSource = exports.DeskTypeSource || (exports.DeskTypeSource = {}));
var DeskOrderHandlingInst;
(function (DeskOrderHandlingInst) {
    DeskOrderHandlingInst["PhoneSimple"] = "A";
    DeskOrderHandlingInst["GOrderFinraOatsFcmApiOrFixFiaExecutionSource"] = "G";
    DeskOrderHandlingInst["AddOnOrder"] = "ADD";
    DeskOrderHandlingInst["PhoneComplex"] = "B";
    DeskOrderHandlingInst["AllOrNone"] = "AON";
    DeskOrderHandlingInst["FcmProvidedScreen"] = "C";
    DeskOrderHandlingInst["OtherProvidedScreen"] = "D";
    DeskOrderHandlingInst["ConditionalOrder"] = "CND";
    DeskOrderHandlingInst["CashNotHeld"] = "CNH";
    DeskOrderHandlingInst["ClientProvidedPlatformControlledByFcm"] = "E";
    DeskOrderHandlingInst["ClientProvidedPlatformDirectToExchange"] = "F";
    DeskOrderHandlingInst["DeliveryInstructionsCash"] = "CSH";
    DeskOrderHandlingInst["DirectedOrder"] = "DIR";
    DeskOrderHandlingInst["AlgoEngine"] = "H";
    DeskOrderHandlingInst["DiscretionaryLimitOrder"] = "DLO";
    DeskOrderHandlingInst["ExchangeForPhysicalTransaction"] = "E.W";
    DeskOrderHandlingInst["PriceAtExecutionPriceAddedAtInitialOrderEntryTradingMiddleOfficeOrTimeOfGiveUp"] = "J";
    DeskOrderHandlingInst["FillOrKill"] = "FOK";
    DeskOrderHandlingInst["DeskElectronic"] = "W";
    DeskOrderHandlingInst["DeskPit"] = "X";
    DeskOrderHandlingInst["ClientElectronic"] = "Y";
    DeskOrderHandlingInst["IntradayCross"] = "IDX";
    DeskOrderHandlingInst["ImbalanceOnly"] = "IO";
    DeskOrderHandlingInst["ClientPit"] = "Z";
    DeskOrderHandlingInst["ImmediateOrCancel"] = "IOC";
    DeskOrderHandlingInst["IntermarketSweepOrder"] = "ISO";
    DeskOrderHandlingInst["LimitOnOpen"] = "LOO";
    DeskOrderHandlingInst["LimitOnClose"] = "LOC";
    DeskOrderHandlingInst["MarketAtOpen"] = "MAO";
    DeskOrderHandlingInst["MarketAtClose"] = "MAC";
    DeskOrderHandlingInst["MarketOnOpen"] = "MOO";
    DeskOrderHandlingInst["MarketOnClose"] = "MOC";
    DeskOrderHandlingInst["MergerRelatedTransferPosition"] = "MPT";
    DeskOrderHandlingInst["MinimumQuantity"] = "MQT";
    DeskOrderHandlingInst["MarketToLimit"] = "MTL";
    DeskOrderHandlingInst["DeliveryInstructionsNextDay"] = "ND";
    DeskOrderHandlingInst["NotHeld"] = "NH";
    DeskOrderHandlingInst["OptionsRelatedTransaction"] = "OPT";
    DeskOrderHandlingInst["OverTheDay"] = "OVD";
    DeskOrderHandlingInst["Pegged"] = "PEG";
    DeskOrderHandlingInst["ReserveSizeOrder"] = "RSV";
    DeskOrderHandlingInst["StopStockTransaction"] = "S.W";
    DeskOrderHandlingInst["Scale"] = "SCL";
    DeskOrderHandlingInst["DeliveryInstructionsSellersOption"] = "SLR";
    DeskOrderHandlingInst["TimeOrder"] = "TMO";
    DeskOrderHandlingInst["TrailingStop"] = "TS";
    DeskOrderHandlingInst["Work"] = "WRK";
    DeskOrderHandlingInst["StayOnOfferside"] = "F0";
    DeskOrderHandlingInst["GoAlong"] = "F3";
    DeskOrderHandlingInst["ParticipateDoNotInitiate"] = "F6";
    DeskOrderHandlingInst["StrictScale"] = "F7";
    DeskOrderHandlingInst["TryToScale"] = "F8";
    DeskOrderHandlingInst["StayOnBidside"] = "F9";
    DeskOrderHandlingInst["NoCross"] = "FA";
    DeskOrderHandlingInst["OkToCross"] = "FB";
    DeskOrderHandlingInst["CallFirst"] = "FC";
    DeskOrderHandlingInst["PercentOfVolume"] = "FD";
    DeskOrderHandlingInst["ReinstateOnSystemFailure"] = "FH";
    DeskOrderHandlingInst["InstitutionOnly"] = "FI";
    DeskOrderHandlingInst["ReinstateOnTradingHalt"] = "FJ";
    DeskOrderHandlingInst["CancelOnTradingHalf"] = "FK";
    DeskOrderHandlingInst["LastPeg"] = "FL";
    DeskOrderHandlingInst["MidPricePeg"] = "FM";
    DeskOrderHandlingInst["NonNegotiable"] = "FN";
    DeskOrderHandlingInst["OpeningPeg"] = "FO";
    DeskOrderHandlingInst["MarketPeg"] = "FP";
    DeskOrderHandlingInst["CancelOnSystemFailure"] = "FQ";
    DeskOrderHandlingInst["PrimaryPeg"] = "FR";
    DeskOrderHandlingInst["Suspend"] = "FS";
    DeskOrderHandlingInst["FixedPegToLocalBestBidOrOfferAtTimeOfOrder"] = "FT";
    DeskOrderHandlingInst["PegToVwap"] = "FW";
    DeskOrderHandlingInst["TradeAlong"] = "FX";
    DeskOrderHandlingInst["TryToStop"] = "FY";
    DeskOrderHandlingInst["CancelIfNotBest"] = "FZ";
    DeskOrderHandlingInst["StrictLimit"] = "Fb";
    DeskOrderHandlingInst["IgnorePriceValidityChecks"] = "Fc";
    DeskOrderHandlingInst["PegToLimitPrice"] = "Fd";
    DeskOrderHandlingInst["WorkToTargetStrategy"] = "Fe";
})(DeskOrderHandlingInst = exports.DeskOrderHandlingInst || (exports.DeskOrderHandlingInst = {}));
var ExecAckStatus;
(function (ExecAckStatus) {
    ExecAckStatus["ReceivedNotYetProcessed"] = "0";
    ExecAckStatus["Accepted"] = "1";
    ExecAckStatus["DontKnowRejected"] = "2";
})(ExecAckStatus = exports.ExecAckStatus || (exports.ExecAckStatus = {}));
var UnderlyingSettlMethod;
(function (UnderlyingSettlMethod) {
    UnderlyingSettlMethod["CashSettlementRequired"] = "C";
    UnderlyingSettlMethod["PhysicalSettlementRequired"] = "P";
    UnderlyingSettlMethod["ElectionAtExercise"] = "E";
})(UnderlyingSettlMethod = exports.UnderlyingSettlMethod || (exports.UnderlyingSettlMethod = {}));
var CollApplType;
(function (CollApplType) {
    CollApplType[CollApplType["SpecificDeposit"] = 0] = "SpecificDeposit";
    CollApplType[CollApplType["General"] = 1] = "General";
})(CollApplType = exports.CollApplType || (exports.CollApplType = {}));
var UnderlyingFXRateCalc;
(function (UnderlyingFXRateCalc) {
    UnderlyingFXRateCalc["Divide"] = "D";
    UnderlyingFXRateCalc["Multiply"] = "M";
})(UnderlyingFXRateCalc = exports.UnderlyingFXRateCalc || (exports.UnderlyingFXRateCalc = {}));
var AllocPositionEffect;
(function (AllocPositionEffect) {
    AllocPositionEffect["Open"] = "O";
    AllocPositionEffect["Close"] = "C";
    AllocPositionEffect["Rolled"] = "R";
    AllocPositionEffect["Fifo"] = "F";
})(AllocPositionEffect = exports.AllocPositionEffect || (exports.AllocPositionEffect = {}));
var DealingCapacity;
(function (DealingCapacity) {
    DealingCapacity["Agent"] = "A";
    DealingCapacity["Principal"] = "P";
    DealingCapacity["RisklessPrincipal"] = "R";
})(DealingCapacity = exports.DealingCapacity || (exports.DealingCapacity = {}));
var InstrmtAssignmentMethod;
(function (InstrmtAssignmentMethod) {
    InstrmtAssignmentMethod["ProRata"] = "P";
    InstrmtAssignmentMethod["Random"] = "R";
})(InstrmtAssignmentMethod = exports.InstrmtAssignmentMethod || (exports.InstrmtAssignmentMethod = {}));
var InstrumentPartyIDSource;
(function (InstrumentPartyIDSource) {
    InstrumentPartyIDSource["KoreanInvestorId"] = "1";
    InstrumentPartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    InstrumentPartyIDSource["TaiwaneseTradingAcct"] = "3";
    InstrumentPartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    InstrumentPartyIDSource["ChineseInvestorId"] = "5";
    InstrumentPartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    InstrumentPartyIDSource["UsSocialSecurityNumber"] = "7";
    InstrumentPartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    InstrumentPartyIDSource["AustralianBusinessNumber"] = "9";
    InstrumentPartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    InstrumentPartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    InstrumentPartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    InstrumentPartyIDSource["ProprietaryCustomCode"] = "D";
    InstrumentPartyIDSource["IsoCountryCode"] = "E";
    InstrumentPartyIDSource["AustralianTaxFileNumber"] = "A";
    InstrumentPartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    InstrumentPartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    InstrumentPartyIDSource["TaxId"] = "J";
    InstrumentPartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    InstrumentPartyIDSource["AustralianCompanyNumber"] = "K";
    InstrumentPartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    InstrumentPartyIDSource["CftcReportingFirmIdentifier"] = "M";
    InstrumentPartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    InstrumentPartyIDSource["InterimIdentifier"] = "O";
    InstrumentPartyIDSource["ShortCodeIdentifier"] = "P";
    InstrumentPartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(InstrumentPartyIDSource = exports.InstrumentPartyIDSource || (exports.InstrumentPartyIDSource = {}));
var InstrumentPartyRole;
(function (InstrumentPartyRole) {
    InstrumentPartyRole[InstrumentPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    InstrumentPartyRole[InstrumentPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    InstrumentPartyRole[InstrumentPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    InstrumentPartyRole[InstrumentPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    InstrumentPartyRole[InstrumentPartyRole["InvestorId"] = 5] = "InvestorId";
    InstrumentPartyRole[InstrumentPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    InstrumentPartyRole[InstrumentPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    InstrumentPartyRole[InstrumentPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    InstrumentPartyRole[InstrumentPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    InstrumentPartyRole[InstrumentPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    InstrumentPartyRole[InstrumentPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    InstrumentPartyRole[InstrumentPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    InstrumentPartyRole[InstrumentPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    InstrumentPartyRole[InstrumentPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    InstrumentPartyRole[InstrumentPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    InstrumentPartyRole[InstrumentPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    InstrumentPartyRole[InstrumentPartyRole["ContraFirm"] = 17] = "ContraFirm";
    InstrumentPartyRole[InstrumentPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    InstrumentPartyRole[InstrumentPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    InstrumentPartyRole[InstrumentPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    InstrumentPartyRole[InstrumentPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    InstrumentPartyRole[InstrumentPartyRole["Exchange"] = 22] = "Exchange";
    InstrumentPartyRole[InstrumentPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    InstrumentPartyRole[InstrumentPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    InstrumentPartyRole[InstrumentPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    InstrumentPartyRole[InstrumentPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    InstrumentPartyRole[InstrumentPartyRole["Custodian"] = 28] = "Custodian";
    InstrumentPartyRole[InstrumentPartyRole["Intermediary"] = 29] = "Intermediary";
    InstrumentPartyRole[InstrumentPartyRole["Agent"] = 30] = "Agent";
    InstrumentPartyRole[InstrumentPartyRole["SubCustodian"] = 31] = "SubCustodian";
    InstrumentPartyRole[InstrumentPartyRole["Beneficiary"] = 32] = "Beneficiary";
    InstrumentPartyRole[InstrumentPartyRole["InterestedParty"] = 33] = "InterestedParty";
    InstrumentPartyRole[InstrumentPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    InstrumentPartyRole[InstrumentPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    InstrumentPartyRole[InstrumentPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    InstrumentPartyRole[InstrumentPartyRole["ContraTrader"] = 37] = "ContraTrader";
    InstrumentPartyRole[InstrumentPartyRole["PositionAccount"] = 38] = "PositionAccount";
    InstrumentPartyRole[InstrumentPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    InstrumentPartyRole[InstrumentPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    InstrumentPartyRole[InstrumentPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    InstrumentPartyRole[InstrumentPartyRole["ContraExchange"] = 42] = "ContraExchange";
    InstrumentPartyRole[InstrumentPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    InstrumentPartyRole[InstrumentPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    InstrumentPartyRole[InstrumentPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    InstrumentPartyRole[InstrumentPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    InstrumentPartyRole[InstrumentPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    InstrumentPartyRole[InstrumentPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    InstrumentPartyRole[InstrumentPartyRole["AssetManager"] = 49] = "AssetManager";
    InstrumentPartyRole[InstrumentPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    InstrumentPartyRole[InstrumentPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    InstrumentPartyRole[InstrumentPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    InstrumentPartyRole[InstrumentPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    InstrumentPartyRole[InstrumentPartyRole["SenderLocation"] = 54] = "SenderLocation";
    InstrumentPartyRole[InstrumentPartyRole["SessionId"] = 55] = "SessionId";
    InstrumentPartyRole[InstrumentPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    InstrumentPartyRole[InstrumentPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    InstrumentPartyRole[InstrumentPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    InstrumentPartyRole[InstrumentPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    InstrumentPartyRole[InstrumentPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    InstrumentPartyRole[InstrumentPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    InstrumentPartyRole[InstrumentPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    InstrumentPartyRole[InstrumentPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    InstrumentPartyRole[InstrumentPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    InstrumentPartyRole[InstrumentPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    InstrumentPartyRole[InstrumentPartyRole["MarketMaker"] = 66] = "MarketMaker";
    InstrumentPartyRole[InstrumentPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    InstrumentPartyRole[InstrumentPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    InstrumentPartyRole[InstrumentPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    InstrumentPartyRole[InstrumentPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    InstrumentPartyRole[InstrumentPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    InstrumentPartyRole[InstrumentPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    InstrumentPartyRole[InstrumentPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    InstrumentPartyRole[InstrumentPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    InstrumentPartyRole[InstrumentPartyRole["LocationId"] = 75] = "LocationId";
    InstrumentPartyRole[InstrumentPartyRole["DeskId"] = 76] = "DeskId";
    InstrumentPartyRole[InstrumentPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    InstrumentPartyRole[InstrumentPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    InstrumentPartyRole[InstrumentPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    InstrumentPartyRole[InstrumentPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    InstrumentPartyRole[InstrumentPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    InstrumentPartyRole[InstrumentPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    InstrumentPartyRole[InstrumentPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    InstrumentPartyRole[InstrumentPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    InstrumentPartyRole[InstrumentPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    InstrumentPartyRole[InstrumentPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    InstrumentPartyRole[InstrumentPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    InstrumentPartyRole[InstrumentPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    InstrumentPartyRole[InstrumentPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    InstrumentPartyRole[InstrumentPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    InstrumentPartyRole[InstrumentPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    InstrumentPartyRole[InstrumentPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    InstrumentPartyRole[InstrumentPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    InstrumentPartyRole[InstrumentPartyRole["AwayMarket"] = 94] = "AwayMarket";
    InstrumentPartyRole[InstrumentPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    InstrumentPartyRole[InstrumentPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    InstrumentPartyRole[InstrumentPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    InstrumentPartyRole[InstrumentPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    InstrumentPartyRole[InstrumentPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    InstrumentPartyRole[InstrumentPartyRole["MarginAccount"] = 100] = "MarginAccount";
    InstrumentPartyRole[InstrumentPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    InstrumentPartyRole[InstrumentPartyRole["DataRepository"] = 102] = "DataRepository";
    InstrumentPartyRole[InstrumentPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    InstrumentPartyRole[InstrumentPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    InstrumentPartyRole[InstrumentPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    InstrumentPartyRole[InstrumentPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    InstrumentPartyRole[InstrumentPartyRole["Correspondent"] = 107] = "Correspondent";
    InstrumentPartyRole[InstrumentPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    InstrumentPartyRole[InstrumentPartyRole["Borrower"] = 110] = "Borrower";
    InstrumentPartyRole[InstrumentPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    InstrumentPartyRole[InstrumentPartyRole["Guarantor"] = 112] = "Guarantor";
    InstrumentPartyRole[InstrumentPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    InstrumentPartyRole[InstrumentPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    InstrumentPartyRole[InstrumentPartyRole["HedgingParty"] = 115] = "HedgingParty";
    InstrumentPartyRole[InstrumentPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    InstrumentPartyRole[InstrumentPartyRole["SalesPerson"] = 117] = "SalesPerson";
    InstrumentPartyRole[InstrumentPartyRole["Operator"] = 118] = "Operator";
    InstrumentPartyRole[InstrumentPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    InstrumentPartyRole[InstrumentPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    InstrumentPartyRole[InstrumentPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    InstrumentPartyRole[InstrumentPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(InstrumentPartyRole = exports.InstrumentPartyRole || (exports.InstrumentPartyRole = {}));
var InstrumentPartySubIDType;
(function (InstrumentPartySubIDType) {
    InstrumentPartySubIDType[InstrumentPartySubIDType["Firm"] = 1] = "Firm";
    InstrumentPartySubIDType[InstrumentPartySubIDType["Person"] = 2] = "Person";
    InstrumentPartySubIDType[InstrumentPartySubIDType["System"] = 3] = "System";
    InstrumentPartySubIDType[InstrumentPartySubIDType["Application"] = 4] = "Application";
    InstrumentPartySubIDType[InstrumentPartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    InstrumentPartySubIDType[InstrumentPartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    InstrumentPartySubIDType[InstrumentPartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    InstrumentPartySubIDType[InstrumentPartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    InstrumentPartySubIDType[InstrumentPartySubIDType["ContactName"] = 9] = "ContactName";
    InstrumentPartySubIDType[InstrumentPartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    InstrumentPartySubIDType[InstrumentPartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    InstrumentPartySubIDType[InstrumentPartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    InstrumentPartySubIDType[InstrumentPartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    InstrumentPartySubIDType[InstrumentPartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    InstrumentPartySubIDType[InstrumentPartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    InstrumentPartySubIDType[InstrumentPartySubIDType["Bic"] = 16] = "Bic";
    InstrumentPartySubIDType[InstrumentPartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    InstrumentPartySubIDType[InstrumentPartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    InstrumentPartySubIDType[InstrumentPartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    InstrumentPartySubIDType[InstrumentPartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    InstrumentPartySubIDType[InstrumentPartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    InstrumentPartySubIDType[InstrumentPartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    InstrumentPartySubIDType[InstrumentPartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    InstrumentPartySubIDType[InstrumentPartySubIDType["Department"] = 24] = "Department";
    InstrumentPartySubIDType[InstrumentPartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    InstrumentPartySubIDType[InstrumentPartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    InstrumentPartySubIDType[InstrumentPartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    InstrumentPartySubIDType[InstrumentPartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    InstrumentPartySubIDType[InstrumentPartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    InstrumentPartySubIDType[InstrumentPartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    InstrumentPartySubIDType[InstrumentPartySubIDType["Location"] = 31] = "Location";
    InstrumentPartySubIDType[InstrumentPartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    InstrumentPartySubIDType[InstrumentPartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    InstrumentPartySubIDType[InstrumentPartySubIDType["AddressCity"] = 34] = "AddressCity";
    InstrumentPartySubIDType[InstrumentPartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    InstrumentPartySubIDType[InstrumentPartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    InstrumentPartySubIDType[InstrumentPartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    InstrumentPartySubIDType[InstrumentPartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    InstrumentPartySubIDType[InstrumentPartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    InstrumentPartySubIDType[InstrumentPartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    InstrumentPartySubIDType[InstrumentPartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    InstrumentPartySubIDType[InstrumentPartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    InstrumentPartySubIDType[InstrumentPartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    InstrumentPartySubIDType[InstrumentPartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    InstrumentPartySubIDType[InstrumentPartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    InstrumentPartySubIDType[InstrumentPartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    InstrumentPartySubIDType[InstrumentPartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    InstrumentPartySubIDType[InstrumentPartySubIDType["USPerson"] = 48] = "USPerson";
    InstrumentPartySubIDType[InstrumentPartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    InstrumentPartySubIDType[InstrumentPartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    InstrumentPartySubIDType[InstrumentPartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    InstrumentPartySubIDType[InstrumentPartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    InstrumentPartySubIDType[InstrumentPartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    InstrumentPartySubIDType[InstrumentPartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    InstrumentPartySubIDType[InstrumentPartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    InstrumentPartySubIDType[InstrumentPartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    InstrumentPartySubIDType[InstrumentPartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    InstrumentPartySubIDType[InstrumentPartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    InstrumentPartySubIDType[InstrumentPartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    InstrumentPartySubIDType[InstrumentPartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    InstrumentPartySubIDType[InstrumentPartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    InstrumentPartySubIDType[InstrumentPartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    InstrumentPartySubIDType[InstrumentPartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    InstrumentPartySubIDType[InstrumentPartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    InstrumentPartySubIDType[InstrumentPartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    InstrumentPartySubIDType[InstrumentPartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    InstrumentPartySubIDType[InstrumentPartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    InstrumentPartySubIDType[InstrumentPartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    InstrumentPartySubIDType[InstrumentPartySubIDType["EndUser"] = 69] = "EndUser";
    InstrumentPartySubIDType[InstrumentPartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    InstrumentPartySubIDType[InstrumentPartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    InstrumentPartySubIDType[InstrumentPartySubIDType["Domicile"] = 72] = "Domicile";
    InstrumentPartySubIDType[InstrumentPartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    InstrumentPartySubIDType[InstrumentPartySubIDType["Payer"] = 74] = "Payer";
    InstrumentPartySubIDType[InstrumentPartySubIDType["Receiver"] = 75] = "Receiver";
    InstrumentPartySubIDType[InstrumentPartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(InstrumentPartySubIDType = exports.InstrumentPartySubIDType || (exports.InstrumentPartySubIDType = {}));
var AggressorIndicator;
(function (AggressorIndicator) {
    AggressorIndicator["OrderInitiatorIsAggressor"] = "Y";
    AggressorIndicator["OrderInitiatorIsPassive"] = "N";
})(AggressorIndicator = exports.AggressorIndicator || (exports.AggressorIndicator = {}));
var UnderlyingInstrumentPartyIDSource;
(function (UnderlyingInstrumentPartyIDSource) {
    UnderlyingInstrumentPartyIDSource["KoreanInvestorId"] = "1";
    UnderlyingInstrumentPartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    UnderlyingInstrumentPartyIDSource["TaiwaneseTradingAcct"] = "3";
    UnderlyingInstrumentPartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    UnderlyingInstrumentPartyIDSource["ChineseInvestorId"] = "5";
    UnderlyingInstrumentPartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    UnderlyingInstrumentPartyIDSource["UsSocialSecurityNumber"] = "7";
    UnderlyingInstrumentPartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    UnderlyingInstrumentPartyIDSource["AustralianBusinessNumber"] = "9";
    UnderlyingInstrumentPartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    UnderlyingInstrumentPartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    UnderlyingInstrumentPartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    UnderlyingInstrumentPartyIDSource["ProprietaryCustomCode"] = "D";
    UnderlyingInstrumentPartyIDSource["IsoCountryCode"] = "E";
    UnderlyingInstrumentPartyIDSource["AustralianTaxFileNumber"] = "A";
    UnderlyingInstrumentPartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    UnderlyingInstrumentPartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    UnderlyingInstrumentPartyIDSource["TaxId"] = "J";
    UnderlyingInstrumentPartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    UnderlyingInstrumentPartyIDSource["AustralianCompanyNumber"] = "K";
    UnderlyingInstrumentPartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    UnderlyingInstrumentPartyIDSource["CftcReportingFirmIdentifier"] = "M";
    UnderlyingInstrumentPartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    UnderlyingInstrumentPartyIDSource["InterimIdentifier"] = "O";
    UnderlyingInstrumentPartyIDSource["ShortCodeIdentifier"] = "P";
    UnderlyingInstrumentPartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(UnderlyingInstrumentPartyIDSource = exports.UnderlyingInstrumentPartyIDSource || (exports.UnderlyingInstrumentPartyIDSource = {}));
var UnderlyingInstrumentPartyRole;
(function (UnderlyingInstrumentPartyRole) {
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["InvestorId"] = 5] = "InvestorId";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ContraFirm"] = 17] = "ContraFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["Exchange"] = 22] = "Exchange";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["Custodian"] = 28] = "Custodian";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["Intermediary"] = 29] = "Intermediary";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["Agent"] = 30] = "Agent";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["SubCustodian"] = 31] = "SubCustodian";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["Beneficiary"] = 32] = "Beneficiary";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["InterestedParty"] = 33] = "InterestedParty";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ContraTrader"] = 37] = "ContraTrader";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["PositionAccount"] = 38] = "PositionAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ContraExchange"] = 42] = "ContraExchange";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["AssetManager"] = 49] = "AssetManager";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["SenderLocation"] = 54] = "SenderLocation";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["SessionId"] = 55] = "SessionId";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["MarketMaker"] = 66] = "MarketMaker";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["LocationId"] = 75] = "LocationId";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["DeskId"] = 76] = "DeskId";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["AwayMarket"] = 94] = "AwayMarket";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["MarginAccount"] = 100] = "MarginAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["DataRepository"] = 102] = "DataRepository";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["Correspondent"] = 107] = "Correspondent";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["Borrower"] = 110] = "Borrower";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["Guarantor"] = 112] = "Guarantor";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["HedgingParty"] = 115] = "HedgingParty";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["SalesPerson"] = 117] = "SalesPerson";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["Operator"] = 118] = "Operator";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    UnderlyingInstrumentPartyRole[UnderlyingInstrumentPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(UnderlyingInstrumentPartyRole = exports.UnderlyingInstrumentPartyRole || (exports.UnderlyingInstrumentPartyRole = {}));
var UnderlyingInstrumentPartySubIDType;
(function (UnderlyingInstrumentPartySubIDType) {
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["Firm"] = 1] = "Firm";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["Person"] = 2] = "Person";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["System"] = 3] = "System";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["Application"] = 4] = "Application";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["ContactName"] = 9] = "ContactName";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["Bic"] = 16] = "Bic";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["Department"] = 24] = "Department";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["Location"] = 31] = "Location";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["AddressCity"] = 34] = "AddressCity";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["USPerson"] = 48] = "USPerson";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["EndUser"] = 69] = "EndUser";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["Domicile"] = 72] = "Domicile";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["Payer"] = 74] = "Payer";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["Receiver"] = 75] = "Receiver";
    UnderlyingInstrumentPartySubIDType[UnderlyingInstrumentPartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(UnderlyingInstrumentPartySubIDType = exports.UnderlyingInstrumentPartySubIDType || (exports.UnderlyingInstrumentPartySubIDType = {}));
var MDQuoteType;
(function (MDQuoteType) {
    MDQuoteType[MDQuoteType["Indicative"] = 0] = "Indicative";
    MDQuoteType[MDQuoteType["Tradeable"] = 1] = "Tradeable";
    MDQuoteType[MDQuoteType["RestrictedTradeable"] = 2] = "RestrictedTradeable";
    MDQuoteType[MDQuoteType["Counter"] = 3] = "Counter";
    MDQuoteType[MDQuoteType["IndicativeAndTradeable"] = 4] = "IndicativeAndTradeable";
})(MDQuoteType = exports.MDQuoteType || (exports.MDQuoteType = {}));
var RefOrderIDSource;
(function (RefOrderIDSource) {
    RefOrderIDSource["SecondaryOrderId198"] = "0";
    RefOrderIDSource["OrderId37"] = "1";
    RefOrderIDSource["MdEntryId278"] = "2";
    RefOrderIDSource["QuoteEntryId299"] = "3";
    RefOrderIDSource["OriginalOrderId"] = "4";
    RefOrderIDSource["QuoteId117"] = "5";
    RefOrderIDSource["QuoteReqId131"] = "6";
})(RefOrderIDSource = exports.RefOrderIDSource || (exports.RefOrderIDSource = {}));
var DisplayWhen;
(function (DisplayWhen) {
    DisplayWhen["ImmediateAfterEachFill"] = "1";
    DisplayWhen["ExhaustWhenDisplayQty0"] = "2";
})(DisplayWhen = exports.DisplayWhen || (exports.DisplayWhen = {}));
var DisplayMethod;
(function (DisplayMethod) {
    DisplayMethod["InitialUseOriginalDisplayQty"] = "1";
    DisplayMethod["NewUseRefreshQty"] = "2";
    DisplayMethod["RandomRandomizeValue"] = "3";
    DisplayMethod["UndisclosedInvisibleOrder"] = "4";
})(DisplayMethod = exports.DisplayMethod || (exports.DisplayMethod = {}));
var PriceProtectionScope;
(function (PriceProtectionScope) {
    PriceProtectionScope["None"] = "0";
    PriceProtectionScope["LocalExchangeEcnAts"] = "1";
    PriceProtectionScope["NationalAcrossAllNationalMarkets"] = "2";
    PriceProtectionScope["GlobalAcrossAllMarkets"] = "3";
})(PriceProtectionScope = exports.PriceProtectionScope || (exports.PriceProtectionScope = {}));
var LotType;
(function (LotType) {
    LotType["OddLot"] = "1";
    LotType["RoundLot"] = "2";
    LotType["BlockLot"] = "3";
    LotType["RoundLotBasedUponUnitOfMeasure996"] = "4";
})(LotType = exports.LotType || (exports.LotType = {}));
var PegPriceType;
(function (PegPriceType) {
    PegPriceType[PegPriceType["LastPegLastSale"] = 1] = "LastPegLastSale";
    PegPriceType[PegPriceType["MidPricePegMidpriceOfInsideQuote"] = 2] = "MidPricePegMidpriceOfInsideQuote";
    PegPriceType[PegPriceType["OpeningPeg"] = 3] = "OpeningPeg";
    PegPriceType[PegPriceType["MarketPeg"] = 4] = "MarketPeg";
    PegPriceType[PegPriceType["PrimaryPegPrimaryMarketBuyAtBidOrSellAtOffer"] = 5] = "PrimaryPegPrimaryMarketBuyAtBidOrSellAtOffer";
    PegPriceType[PegPriceType["PegToVwap"] = 7] = "PegToVwap";
    PegPriceType[PegPriceType["TrailingStopPeg"] = 8] = "TrailingStopPeg";
    PegPriceType[PegPriceType["PegToLimitPrice"] = 9] = "PegToLimitPrice";
    PegPriceType[PegPriceType["ShortSaleMinimumPricePeg"] = 10] = "ShortSaleMinimumPricePeg";
})(PegPriceType = exports.PegPriceType || (exports.PegPriceType = {}));
var PegSecurityIDSource;
(function (PegSecurityIDSource) {
    PegSecurityIDSource["Cusip"] = "1";
    PegSecurityIDSource["Sedol"] = "2";
    PegSecurityIDSource["Quik"] = "3";
    PegSecurityIDSource["IsinNumber"] = "4";
    PegSecurityIDSource["RicCode"] = "5";
    PegSecurityIDSource["IsoCurrencyCode"] = "6";
    PegSecurityIDSource["IsoCountryCode"] = "7";
    PegSecurityIDSource["ExchangeSymbol"] = "8";
    PegSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    PegSecurityIDSource["BloombergSymbol"] = "A";
    PegSecurityIDSource["Wertpapier"] = "B";
    PegSecurityIDSource["Dutch"] = "C";
    PegSecurityIDSource["Valoren"] = "D";
    PegSecurityIDSource["Sicovam"] = "E";
    PegSecurityIDSource["Belgian"] = "F";
    PegSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    PegSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    PegSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    PegSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    PegSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    PegSecurityIDSource["LetterOfCredit"] = "L";
    PegSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    PegSecurityIDSource["MarkitRedEntityClip"] = "N";
    PegSecurityIDSource["MarkitRedPairClip"] = "P";
    PegSecurityIDSource["CftcCommodityCode"] = "Q";
    PegSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    PegSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    PegSecurityIDSource["LegalEntityIdentifier"] = "T";
    PegSecurityIDSource["Synthetic"] = "U";
    PegSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(PegSecurityIDSource = exports.PegSecurityIDSource || (exports.PegSecurityIDSource = {}));
var TriggerType;
(function (TriggerType) {
    TriggerType["PartialExecution"] = "1";
    TriggerType["SpecifiedTradingSession"] = "2";
    TriggerType["NextAuction"] = "3";
    TriggerType["PriceMovement"] = "4";
    TriggerType["OnOrderEntryOrOrderModificationEntry"] = "5";
})(TriggerType = exports.TriggerType || (exports.TriggerType = {}));
var TriggerAction;
(function (TriggerAction) {
    TriggerAction["Activate"] = "1";
    TriggerAction["Modify"] = "2";
    TriggerAction["Cancel"] = "3";
})(TriggerAction = exports.TriggerAction || (exports.TriggerAction = {}));
var TriggerSecurityIDSource;
(function (TriggerSecurityIDSource) {
    TriggerSecurityIDSource["Cusip"] = "1";
    TriggerSecurityIDSource["Sedol"] = "2";
    TriggerSecurityIDSource["Quik"] = "3";
    TriggerSecurityIDSource["IsinNumber"] = "4";
    TriggerSecurityIDSource["RicCode"] = "5";
    TriggerSecurityIDSource["IsoCurrencyCode"] = "6";
    TriggerSecurityIDSource["IsoCountryCode"] = "7";
    TriggerSecurityIDSource["ExchangeSymbol"] = "8";
    TriggerSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    TriggerSecurityIDSource["BloombergSymbol"] = "A";
    TriggerSecurityIDSource["Wertpapier"] = "B";
    TriggerSecurityIDSource["Dutch"] = "C";
    TriggerSecurityIDSource["Valoren"] = "D";
    TriggerSecurityIDSource["Sicovam"] = "E";
    TriggerSecurityIDSource["Belgian"] = "F";
    TriggerSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    TriggerSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    TriggerSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    TriggerSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    TriggerSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    TriggerSecurityIDSource["LetterOfCredit"] = "L";
    TriggerSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    TriggerSecurityIDSource["MarkitRedEntityClip"] = "N";
    TriggerSecurityIDSource["MarkitRedPairClip"] = "P";
    TriggerSecurityIDSource["CftcCommodityCode"] = "Q";
    TriggerSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    TriggerSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    TriggerSecurityIDSource["LegalEntityIdentifier"] = "T";
    TriggerSecurityIDSource["Synthetic"] = "U";
    TriggerSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(TriggerSecurityIDSource = exports.TriggerSecurityIDSource || (exports.TriggerSecurityIDSource = {}));
var TriggerPriceType;
(function (TriggerPriceType) {
    TriggerPriceType["BestOffer"] = "1";
    TriggerPriceType["LastTrade"] = "2";
    TriggerPriceType["BestBid"] = "3";
    TriggerPriceType["BestBidOrLastTrade"] = "4";
    TriggerPriceType["BestOfferOrLastTrade"] = "5";
    TriggerPriceType["BestMid"] = "6";
})(TriggerPriceType = exports.TriggerPriceType || (exports.TriggerPriceType = {}));
var TriggerPriceTypeScope;
(function (TriggerPriceTypeScope) {
    TriggerPriceTypeScope["None"] = "0";
    TriggerPriceTypeScope["LocalExchangeEcnAts"] = "1";
    TriggerPriceTypeScope["NationalAcrossAllNationalMarkets"] = "2";
    TriggerPriceTypeScope["GlobalAcrossAllMarkets"] = "3";
})(TriggerPriceTypeScope = exports.TriggerPriceTypeScope || (exports.TriggerPriceTypeScope = {}));
var TriggerPriceDirection;
(function (TriggerPriceDirection) {
    TriggerPriceDirection["TriggerIfThePriceOfTheSpecifiedTypeGoesUpToOrThroughTheSpecifiedTriggerPrice"] = "U";
    TriggerPriceDirection["TriggerIfThePriceOfTheSpecifiedTypeGoesDownToOrThroughTheSpecifiedTriggerPrice"] = "D";
})(TriggerPriceDirection = exports.TriggerPriceDirection || (exports.TriggerPriceDirection = {}));
var TriggerOrderType;
(function (TriggerOrderType) {
    TriggerOrderType["Market"] = "1";
    TriggerOrderType["Limit"] = "2";
})(TriggerOrderType = exports.TriggerOrderType || (exports.TriggerOrderType = {}));
var OrderCategory;
(function (OrderCategory) {
    OrderCategory["Order"] = "1";
    OrderCategory["Quote"] = "2";
    OrderCategory["PrivatelyNegotiatedTrade"] = "3";
    OrderCategory["MultilegOrder"] = "4";
    OrderCategory["LinkedOrder"] = "5";
    OrderCategory["QuoteRequest"] = "6";
    OrderCategory["ImpliedOrder"] = "7";
    OrderCategory["CrossOrder"] = "8";
    OrderCategory["StreamingPriceQuote"] = "9";
    OrderCategory["InternalCrossOrder"] = "A";
})(OrderCategory = exports.OrderCategory || (exports.OrderCategory = {}));
var RootPartyIDSource;
(function (RootPartyIDSource) {
    RootPartyIDSource["KoreanInvestorId"] = "1";
    RootPartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    RootPartyIDSource["TaiwaneseTradingAcct"] = "3";
    RootPartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    RootPartyIDSource["ChineseInvestorId"] = "5";
    RootPartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    RootPartyIDSource["UsSocialSecurityNumber"] = "7";
    RootPartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    RootPartyIDSource["AustralianBusinessNumber"] = "9";
    RootPartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    RootPartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    RootPartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    RootPartyIDSource["ProprietaryCustomCode"] = "D";
    RootPartyIDSource["IsoCountryCode"] = "E";
    RootPartyIDSource["AustralianTaxFileNumber"] = "A";
    RootPartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    RootPartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    RootPartyIDSource["TaxId"] = "J";
    RootPartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    RootPartyIDSource["AustralianCompanyNumber"] = "K";
    RootPartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    RootPartyIDSource["CftcReportingFirmIdentifier"] = "M";
    RootPartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    RootPartyIDSource["InterimIdentifier"] = "O";
    RootPartyIDSource["ShortCodeIdentifier"] = "P";
    RootPartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(RootPartyIDSource = exports.RootPartyIDSource || (exports.RootPartyIDSource = {}));
var RootPartyRole;
(function (RootPartyRole) {
    RootPartyRole[RootPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    RootPartyRole[RootPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    RootPartyRole[RootPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    RootPartyRole[RootPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    RootPartyRole[RootPartyRole["InvestorId"] = 5] = "InvestorId";
    RootPartyRole[RootPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    RootPartyRole[RootPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    RootPartyRole[RootPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    RootPartyRole[RootPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    RootPartyRole[RootPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    RootPartyRole[RootPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    RootPartyRole[RootPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    RootPartyRole[RootPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    RootPartyRole[RootPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    RootPartyRole[RootPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    RootPartyRole[RootPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    RootPartyRole[RootPartyRole["ContraFirm"] = 17] = "ContraFirm";
    RootPartyRole[RootPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    RootPartyRole[RootPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    RootPartyRole[RootPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    RootPartyRole[RootPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    RootPartyRole[RootPartyRole["Exchange"] = 22] = "Exchange";
    RootPartyRole[RootPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    RootPartyRole[RootPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    RootPartyRole[RootPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    RootPartyRole[RootPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    RootPartyRole[RootPartyRole["Custodian"] = 28] = "Custodian";
    RootPartyRole[RootPartyRole["Intermediary"] = 29] = "Intermediary";
    RootPartyRole[RootPartyRole["Agent"] = 30] = "Agent";
    RootPartyRole[RootPartyRole["SubCustodian"] = 31] = "SubCustodian";
    RootPartyRole[RootPartyRole["Beneficiary"] = 32] = "Beneficiary";
    RootPartyRole[RootPartyRole["InterestedParty"] = 33] = "InterestedParty";
    RootPartyRole[RootPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    RootPartyRole[RootPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    RootPartyRole[RootPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    RootPartyRole[RootPartyRole["ContraTrader"] = 37] = "ContraTrader";
    RootPartyRole[RootPartyRole["PositionAccount"] = 38] = "PositionAccount";
    RootPartyRole[RootPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    RootPartyRole[RootPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    RootPartyRole[RootPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    RootPartyRole[RootPartyRole["ContraExchange"] = 42] = "ContraExchange";
    RootPartyRole[RootPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    RootPartyRole[RootPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    RootPartyRole[RootPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    RootPartyRole[RootPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    RootPartyRole[RootPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    RootPartyRole[RootPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    RootPartyRole[RootPartyRole["AssetManager"] = 49] = "AssetManager";
    RootPartyRole[RootPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    RootPartyRole[RootPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    RootPartyRole[RootPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    RootPartyRole[RootPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    RootPartyRole[RootPartyRole["SenderLocation"] = 54] = "SenderLocation";
    RootPartyRole[RootPartyRole["SessionId"] = 55] = "SessionId";
    RootPartyRole[RootPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    RootPartyRole[RootPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    RootPartyRole[RootPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    RootPartyRole[RootPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    RootPartyRole[RootPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    RootPartyRole[RootPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    RootPartyRole[RootPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    RootPartyRole[RootPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    RootPartyRole[RootPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    RootPartyRole[RootPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    RootPartyRole[RootPartyRole["MarketMaker"] = 66] = "MarketMaker";
    RootPartyRole[RootPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    RootPartyRole[RootPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    RootPartyRole[RootPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    RootPartyRole[RootPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    RootPartyRole[RootPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    RootPartyRole[RootPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    RootPartyRole[RootPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    RootPartyRole[RootPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    RootPartyRole[RootPartyRole["LocationId"] = 75] = "LocationId";
    RootPartyRole[RootPartyRole["DeskId"] = 76] = "DeskId";
    RootPartyRole[RootPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    RootPartyRole[RootPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    RootPartyRole[RootPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    RootPartyRole[RootPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    RootPartyRole[RootPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    RootPartyRole[RootPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    RootPartyRole[RootPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    RootPartyRole[RootPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    RootPartyRole[RootPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    RootPartyRole[RootPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    RootPartyRole[RootPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    RootPartyRole[RootPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    RootPartyRole[RootPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    RootPartyRole[RootPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    RootPartyRole[RootPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    RootPartyRole[RootPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    RootPartyRole[RootPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    RootPartyRole[RootPartyRole["AwayMarket"] = 94] = "AwayMarket";
    RootPartyRole[RootPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    RootPartyRole[RootPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    RootPartyRole[RootPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    RootPartyRole[RootPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    RootPartyRole[RootPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    RootPartyRole[RootPartyRole["MarginAccount"] = 100] = "MarginAccount";
    RootPartyRole[RootPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    RootPartyRole[RootPartyRole["DataRepository"] = 102] = "DataRepository";
    RootPartyRole[RootPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    RootPartyRole[RootPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    RootPartyRole[RootPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    RootPartyRole[RootPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    RootPartyRole[RootPartyRole["Correspondent"] = 107] = "Correspondent";
    RootPartyRole[RootPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    RootPartyRole[RootPartyRole["Borrower"] = 110] = "Borrower";
    RootPartyRole[RootPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    RootPartyRole[RootPartyRole["Guarantor"] = 112] = "Guarantor";
    RootPartyRole[RootPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    RootPartyRole[RootPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    RootPartyRole[RootPartyRole["HedgingParty"] = 115] = "HedgingParty";
    RootPartyRole[RootPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    RootPartyRole[RootPartyRole["SalesPerson"] = 117] = "SalesPerson";
    RootPartyRole[RootPartyRole["Operator"] = 118] = "Operator";
    RootPartyRole[RootPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    RootPartyRole[RootPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    RootPartyRole[RootPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    RootPartyRole[RootPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(RootPartyRole = exports.RootPartyRole || (exports.RootPartyRole = {}));
var RootPartySubIDType;
(function (RootPartySubIDType) {
    RootPartySubIDType[RootPartySubIDType["Firm"] = 1] = "Firm";
    RootPartySubIDType[RootPartySubIDType["Person"] = 2] = "Person";
    RootPartySubIDType[RootPartySubIDType["System"] = 3] = "System";
    RootPartySubIDType[RootPartySubIDType["Application"] = 4] = "Application";
    RootPartySubIDType[RootPartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    RootPartySubIDType[RootPartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    RootPartySubIDType[RootPartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    RootPartySubIDType[RootPartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    RootPartySubIDType[RootPartySubIDType["ContactName"] = 9] = "ContactName";
    RootPartySubIDType[RootPartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    RootPartySubIDType[RootPartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    RootPartySubIDType[RootPartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    RootPartySubIDType[RootPartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    RootPartySubIDType[RootPartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    RootPartySubIDType[RootPartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    RootPartySubIDType[RootPartySubIDType["Bic"] = 16] = "Bic";
    RootPartySubIDType[RootPartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    RootPartySubIDType[RootPartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    RootPartySubIDType[RootPartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    RootPartySubIDType[RootPartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    RootPartySubIDType[RootPartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    RootPartySubIDType[RootPartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    RootPartySubIDType[RootPartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    RootPartySubIDType[RootPartySubIDType["Department"] = 24] = "Department";
    RootPartySubIDType[RootPartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    RootPartySubIDType[RootPartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    RootPartySubIDType[RootPartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    RootPartySubIDType[RootPartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    RootPartySubIDType[RootPartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    RootPartySubIDType[RootPartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    RootPartySubIDType[RootPartySubIDType["Location"] = 31] = "Location";
    RootPartySubIDType[RootPartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    RootPartySubIDType[RootPartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    RootPartySubIDType[RootPartySubIDType["AddressCity"] = 34] = "AddressCity";
    RootPartySubIDType[RootPartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    RootPartySubIDType[RootPartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    RootPartySubIDType[RootPartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    RootPartySubIDType[RootPartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    RootPartySubIDType[RootPartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    RootPartySubIDType[RootPartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    RootPartySubIDType[RootPartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    RootPartySubIDType[RootPartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    RootPartySubIDType[RootPartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    RootPartySubIDType[RootPartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    RootPartySubIDType[RootPartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    RootPartySubIDType[RootPartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    RootPartySubIDType[RootPartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    RootPartySubIDType[RootPartySubIDType["USPerson"] = 48] = "USPerson";
    RootPartySubIDType[RootPartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    RootPartySubIDType[RootPartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    RootPartySubIDType[RootPartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    RootPartySubIDType[RootPartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    RootPartySubIDType[RootPartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    RootPartySubIDType[RootPartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    RootPartySubIDType[RootPartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    RootPartySubIDType[RootPartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    RootPartySubIDType[RootPartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    RootPartySubIDType[RootPartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    RootPartySubIDType[RootPartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    RootPartySubIDType[RootPartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    RootPartySubIDType[RootPartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    RootPartySubIDType[RootPartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    RootPartySubIDType[RootPartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    RootPartySubIDType[RootPartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    RootPartySubIDType[RootPartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    RootPartySubIDType[RootPartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    RootPartySubIDType[RootPartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    RootPartySubIDType[RootPartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    RootPartySubIDType[RootPartySubIDType["EndUser"] = 69] = "EndUser";
    RootPartySubIDType[RootPartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    RootPartySubIDType[RootPartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    RootPartySubIDType[RootPartySubIDType["Domicile"] = 72] = "Domicile";
    RootPartySubIDType[RootPartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    RootPartySubIDType[RootPartySubIDType["Payer"] = 74] = "Payer";
    RootPartySubIDType[RootPartySubIDType["Receiver"] = 75] = "Receiver";
    RootPartySubIDType[RootPartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(RootPartySubIDType = exports.RootPartySubIDType || (exports.RootPartySubIDType = {}));
var TradeHandlingInstr;
(function (TradeHandlingInstr) {
    TradeHandlingInstr["TradeConfirmation"] = "0";
    TradeHandlingInstr["TwoPartyReport"] = "1";
    TradeHandlingInstr["OnePartyReportForMatching"] = "2";
    TradeHandlingInstr["OnePartyReportForPassThrough"] = "3";
    TradeHandlingInstr["AutomatedFloorOrderRouting"] = "4";
    TradeHandlingInstr["TwoPartyReportForClaim"] = "5";
    TradeHandlingInstr["OnePartyReport"] = "6";
    TradeHandlingInstr["ThirdPartyReportForPassThrough"] = "7";
    TradeHandlingInstr["OnePartyReportForAutoMatch"] = "8";
})(TradeHandlingInstr = exports.TradeHandlingInstr || (exports.TradeHandlingInstr = {}));
var OrigTradeHandlingInstr;
(function (OrigTradeHandlingInstr) {
    OrigTradeHandlingInstr["TradeConfirmation"] = "0";
    OrigTradeHandlingInstr["TwoPartyReport"] = "1";
    OrigTradeHandlingInstr["OnePartyReportForMatching"] = "2";
    OrigTradeHandlingInstr["OnePartyReportForPassThrough"] = "3";
    OrigTradeHandlingInstr["AutomatedFloorOrderRouting"] = "4";
    OrigTradeHandlingInstr["TwoPartyReportForClaim"] = "5";
    OrigTradeHandlingInstr["OnePartyReport"] = "6";
    OrigTradeHandlingInstr["ThirdPartyReportForPassThrough"] = "7";
    OrigTradeHandlingInstr["OnePartyReportForAutoMatch"] = "8";
})(OrigTradeHandlingInstr = exports.OrigTradeHandlingInstr || (exports.OrigTradeHandlingInstr = {}));
var ApplVerID;
(function (ApplVerID) {
    ApplVerID["Fix27"] = "0";
    ApplVerID["Fix30"] = "1";
    ApplVerID["Fix40"] = "2";
    ApplVerID["Fix41"] = "3";
    ApplVerID["Fix42"] = "4";
    ApplVerID["Fix43"] = "5";
    ApplVerID["Fix44"] = "6";
    ApplVerID["Fix50"] = "7";
    ApplVerID["Fix50Sp1"] = "8";
    ApplVerID["Fix50Sp2"] = "9";
})(ApplVerID = exports.ApplVerID || (exports.ApplVerID = {}));
var RefApplVerID;
(function (RefApplVerID) {
    RefApplVerID["Fix27"] = "0";
    RefApplVerID["Fix30"] = "1";
    RefApplVerID["Fix40"] = "2";
    RefApplVerID["Fix41"] = "3";
    RefApplVerID["Fix42"] = "4";
    RefApplVerID["Fix43"] = "5";
    RefApplVerID["Fix44"] = "6";
    RefApplVerID["Fix50"] = "7";
    RefApplVerID["Fix50Sp1"] = "8";
    RefApplVerID["Fix50Sp2"] = "9";
})(RefApplVerID = exports.RefApplVerID || (exports.RefApplVerID = {}));
var ExDestinationIDSource;
(function (ExDestinationIDSource) {
    ExDestinationIDSource["BicBankIdentificationCodeIso9362"] = "B";
    ExDestinationIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    ExDestinationIDSource["ProprietaryCustomCode"] = "D";
    ExDestinationIDSource["IsoCountryCode"] = "E";
    ExDestinationIDSource["MicIso10383MarketIdentifierCode"] = "G";
})(ExDestinationIDSource = exports.ExDestinationIDSource || (exports.ExDestinationIDSource = {}));
var DefaultApplVerID;
(function (DefaultApplVerID) {
    DefaultApplVerID["Fix27"] = "0";
    DefaultApplVerID["Fix30"] = "1";
    DefaultApplVerID["Fix40"] = "2";
    DefaultApplVerID["Fix41"] = "3";
    DefaultApplVerID["Fix42"] = "4";
    DefaultApplVerID["Fix43"] = "5";
    DefaultApplVerID["Fix44"] = "6";
    DefaultApplVerID["Fix50"] = "7";
    DefaultApplVerID["Fix50Sp1"] = "8";
    DefaultApplVerID["Fix50Sp2"] = "9";
})(DefaultApplVerID = exports.DefaultApplVerID || (exports.DefaultApplVerID = {}));
var ImpliedMarketIndicator;
(function (ImpliedMarketIndicator) {
    ImpliedMarketIndicator[ImpliedMarketIndicator["NotImplied"] = 0] = "NotImplied";
    ImpliedMarketIndicator[ImpliedMarketIndicator["ImpliedInTheExistenceOfAMultiLegInstrumentIsImpliedByTheLegsOfThatInstrument"] = 1] = "ImpliedInTheExistenceOfAMultiLegInstrumentIsImpliedByTheLegsOfThatInstrument";
    ImpliedMarketIndicator[ImpliedMarketIndicator["ImpliedOutTheExistenceOfTheUnderlyingLegsAreImpliedByTheMultiLegInstrument"] = 2] = "ImpliedOutTheExistenceOfTheUnderlyingLegsAreImpliedByTheMultiLegInstrument";
    ImpliedMarketIndicator[ImpliedMarketIndicator["BothImpliedInAndImpliedOut"] = 3] = "BothImpliedInAndImpliedOut";
})(ImpliedMarketIndicator = exports.ImpliedMarketIndicator || (exports.ImpliedMarketIndicator = {}));
var SettlObligMode;
(function (SettlObligMode) {
    SettlObligMode[SettlObligMode["Preliminary"] = 1] = "Preliminary";
    SettlObligMode[SettlObligMode["Final"] = 2] = "Final";
})(SettlObligMode = exports.SettlObligMode || (exports.SettlObligMode = {}));
var SettlObligTransType;
(function (SettlObligTransType) {
    SettlObligTransType["Cancel"] = "C";
    SettlObligTransType["New"] = "N";
    SettlObligTransType["Replace"] = "R";
    SettlObligTransType["Restate"] = "T";
})(SettlObligTransType = exports.SettlObligTransType || (exports.SettlObligTransType = {}));
var SettlObligSource;
(function (SettlObligSource) {
    SettlObligSource["InstructionsOfBroker"] = "1";
    SettlObligSource["InstructionsForInstitution"] = "2";
    SettlObligSource["Investor"] = "3";
    SettlObligSource["BuyersSettlementInstructions"] = "4";
    SettlObligSource["SellersSettlementInstructions"] = "5";
})(SettlObligSource = exports.SettlObligSource || (exports.SettlObligSource = {}));
var QuoteEntryStatus;
(function (QuoteEntryStatus) {
    QuoteEntryStatus[QuoteEntryStatus["Accepted"] = 0] = "Accepted";
    QuoteEntryStatus[QuoteEntryStatus["Rejected"] = 5] = "Rejected";
    QuoteEntryStatus[QuoteEntryStatus["RemovedFromMarket"] = 6] = "RemovedFromMarket";
    QuoteEntryStatus[QuoteEntryStatus["Expired"] = 7] = "Expired";
    QuoteEntryStatus[QuoteEntryStatus["LockedMarketWarning"] = 12] = "LockedMarketWarning";
    QuoteEntryStatus[QuoteEntryStatus["CrossMarketWarning"] = 13] = "CrossMarketWarning";
    QuoteEntryStatus[QuoteEntryStatus["CanceledDueToLockMarket"] = 14] = "CanceledDueToLockMarket";
    QuoteEntryStatus[QuoteEntryStatus["CanceledDueToCrossMarket"] = 15] = "CanceledDueToCrossMarket";
    QuoteEntryStatus[QuoteEntryStatus["Active"] = 16] = "Active";
})(QuoteEntryStatus = exports.QuoteEntryStatus || (exports.QuoteEntryStatus = {}));
var PrivateQuote;
(function (PrivateQuote) {
    PrivateQuote["PrivateQuote"] = "Y";
    PrivateQuote["PublicQuote"] = "N";
})(PrivateQuote = exports.PrivateQuote || (exports.PrivateQuote = {}));
var RespondentType;
(function (RespondentType) {
    RespondentType[RespondentType["AllMarketParticipants"] = 1] = "AllMarketParticipants";
    RespondentType[RespondentType["SpecifiedMarketParticipants"] = 2] = "SpecifiedMarketParticipants";
    RespondentType[RespondentType["AllMarketMakers"] = 3] = "AllMarketMakers";
    RespondentType[RespondentType["PrimaryMarketMakerS"] = 4] = "PrimaryMarketMakerS";
})(RespondentType = exports.RespondentType || (exports.RespondentType = {}));
var SecurityTradingEvent;
(function (SecurityTradingEvent) {
    SecurityTradingEvent[SecurityTradingEvent["OrderImbalanceAuctionIsExtended"] = 1] = "OrderImbalanceAuctionIsExtended";
    SecurityTradingEvent[SecurityTradingEvent["TradingResumesAfterHalt"] = 2] = "TradingResumesAfterHalt";
    SecurityTradingEvent[SecurityTradingEvent["PriceVolatilityInterruption"] = 3] = "PriceVolatilityInterruption";
    SecurityTradingEvent[SecurityTradingEvent["ChangeOfTradingSession"] = 4] = "ChangeOfTradingSession";
    SecurityTradingEvent[SecurityTradingEvent["ChangeOfTradingSubsession"] = 5] = "ChangeOfTradingSubsession";
    SecurityTradingEvent[SecurityTradingEvent["ChangeOfSecurityTradingStatus"] = 6] = "ChangeOfSecurityTradingStatus";
    SecurityTradingEvent[SecurityTradingEvent["ChangeOfBookType"] = 7] = "ChangeOfBookType";
    SecurityTradingEvent[SecurityTradingEvent["ChangeOfMarketDepth"] = 8] = "ChangeOfMarketDepth";
    SecurityTradingEvent[SecurityTradingEvent["CorporateAction"] = 9] = "CorporateAction";
})(SecurityTradingEvent = exports.SecurityTradingEvent || (exports.SecurityTradingEvent = {}));
var StatsType;
(function (StatsType) {
    StatsType[StatsType["ExchangeLast"] = 1] = "ExchangeLast";
    StatsType[StatsType["HighLowPrice"] = 2] = "HighLowPrice";
    StatsType[StatsType["AveragePriceVwapTwap"] = 3] = "AveragePriceVwapTwap";
    StatsType[StatsType["TurnoverPriceQty"] = 4] = "TurnoverPriceQty";
})(StatsType = exports.StatsType || (exports.StatsType = {}));
var MDSecSizeType;
(function (MDSecSizeType) {
    MDSecSizeType[MDSecSizeType["Customer"] = 1] = "Customer";
    MDSecSizeType[MDSecSizeType["CustomerProfessional"] = 2] = "CustomerProfessional";
    MDSecSizeType[MDSecSizeType["DoNotTradeThrough"] = 3] = "DoNotTradeThrough";
})(MDSecSizeType = exports.MDSecSizeType || (exports.MDSecSizeType = {}));
var PriceUnitOfMeasure;
(function (PriceUnitOfMeasure) {
    PriceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    PriceUnitOfMeasure["Allowances"] = "Alw";
    PriceUnitOfMeasure["Barrels"] = "Bbl";
    PriceUnitOfMeasure["CubicMeters"] = "CBM";
    PriceUnitOfMeasure["BoardFeet"] = "BDFT";
    PriceUnitOfMeasure["Gigajoules"] = "GJ";
    PriceUnitOfMeasure["Bushels"] = "Bu";
    PriceUnitOfMeasure["KilowattHours"] = "kWh";
    PriceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    PriceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    PriceUnitOfMeasure["MegawattHours"] = "MWh";
    PriceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    PriceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    PriceUnitOfMeasure["Therms"] = "thm";
    PriceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    PriceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    PriceUnitOfMeasure["HundredweightUs"] = "cwt";
    PriceUnitOfMeasure["Days"] = "day";
    PriceUnitOfMeasure["DryMetricTons"] = "dt";
    PriceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    PriceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    PriceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    PriceUnitOfMeasure["Grams"] = "g";
    PriceUnitOfMeasure["Gallons"] = "Gal";
    PriceUnitOfMeasure["GrossTons"] = "GT";
    PriceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    PriceUnitOfMeasure["IndexPoint"] = "IPNT";
    PriceUnitOfMeasure["Kilograms"] = "kg";
    PriceUnitOfMeasure["Kiloliters"] = "kL";
    PriceUnitOfMeasure["KilowattYear"] = "kW-a";
    PriceUnitOfMeasure["KilowattDay"] = "kW-d";
    PriceUnitOfMeasure["KilowattHour"] = "kW-h";
    PriceUnitOfMeasure["KilowattMonth"] = "kW-M";
    PriceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    PriceUnitOfMeasure["Liters"] = "L";
    PriceUnitOfMeasure["Pounds"] = "lbs";
    PriceUnitOfMeasure["MegawattYear"] = "MW-a";
    PriceUnitOfMeasure["MegawattDay"] = "MW-d";
    PriceUnitOfMeasure["MegawattHour"] = "MW-h";
    PriceUnitOfMeasure["MegawattMonth"] = "MW-M";
    PriceUnitOfMeasure["MegawattMinute"] = "MW-min";
    PriceUnitOfMeasure["TroyOunces"] = "oz_tr";
    PriceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    PriceUnitOfMeasure["MetricTons"] = "t";
    PriceUnitOfMeasure["TonsUs"] = "tn";
    PriceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    PriceUnitOfMeasure["UsDollars"] = "USD";
})(PriceUnitOfMeasure = exports.PriceUnitOfMeasure || (exports.PriceUnitOfMeasure = {}));
var SettlMethod;
(function (SettlMethod) {
    SettlMethod["CashSettlementRequired"] = "C";
    SettlMethod["PhysicalSettlementRequired"] = "P";
    SettlMethod["ElectionAtExercise"] = "E";
})(SettlMethod = exports.SettlMethod || (exports.SettlMethod = {}));
var ExerciseStyle;
(function (ExerciseStyle) {
    ExerciseStyle[ExerciseStyle["European"] = 0] = "European";
    ExerciseStyle[ExerciseStyle["American"] = 1] = "American";
    ExerciseStyle[ExerciseStyle["Bermuda"] = 2] = "Bermuda";
    ExerciseStyle[ExerciseStyle["Other"] = 99] = "Other";
})(ExerciseStyle = exports.ExerciseStyle || (exports.ExerciseStyle = {}));
var PriceQuoteMethod;
(function (PriceQuoteMethod) {
    PriceQuoteMethod["StandardMoneyPerUnitOfAPhysical"] = "STD";
    PriceQuoteMethod["Index"] = "INX";
    PriceQuoteMethod["InterestRateIndex"] = "INT";
    PriceQuoteMethod["PercentOfPar"] = "PCTPAR";
})(PriceQuoteMethod = exports.PriceQuoteMethod || (exports.PriceQuoteMethod = {}));
var ValuationMethod;
(function (ValuationMethod) {
    ValuationMethod["PremiumStyle"] = "EQTY";
    ValuationMethod["FuturesStyleMarkToMarket"] = "FUT";
    ValuationMethod["FuturesStyleWithAnAttachedCashAdjustment"] = "FUTDA";
    ValuationMethod["CdsStyleCollateralizationOfMarketToMarketAndCoupon"] = "CDS";
    ValuationMethod["CdsInDeliveryUseRecoveryRateToCalculateObligation"] = "CDSD";
})(ValuationMethod = exports.ValuationMethod || (exports.ValuationMethod = {}));
var ListMethod;
(function (ListMethod) {
    ListMethod[ListMethod["PreListedOnly"] = 0] = "PreListedOnly";
    ListMethod[ListMethod["UserRequested"] = 1] = "UserRequested";
})(ListMethod = exports.ListMethod || (exports.ListMethod = {}));
var TickRuleType;
(function (TickRuleType) {
    TickRuleType[TickRuleType["RegularTrading"] = 0] = "RegularTrading";
    TickRuleType[TickRuleType["VariableCabinet"] = 1] = "VariableCabinet";
    TickRuleType[TickRuleType["FixedCabinet"] = 2] = "FixedCabinet";
    TickRuleType[TickRuleType["TradedAsASpreadLeg"] = 3] = "TradedAsASpreadLeg";
    TickRuleType[TickRuleType["SettledAsASpreadLeg"] = 4] = "SettledAsASpreadLeg";
    TickRuleType[TickRuleType["TradedAsSpread"] = 5] = "TradedAsSpread";
})(TickRuleType = exports.TickRuleType || (exports.TickRuleType = {}));
var NestedInstrAttribType;
(function (NestedInstrAttribType) {
    NestedInstrAttribType[NestedInstrAttribType["FlatSecuritiesPayInterestOnACurrentBasisButAreTradedWithoutInterest"] = 1] = "FlatSecuritiesPayInterestOnACurrentBasisButAreTradedWithoutInterest";
    NestedInstrAttribType[NestedInstrAttribType["ZeroCoupon"] = 2] = "ZeroCoupon";
    NestedInstrAttribType[NestedInstrAttribType["InterestBearingForEuroCommercialPaperWhenNotIssuedAtDiscount"] = 3] = "InterestBearingForEuroCommercialPaperWhenNotIssuedAtDiscount";
    NestedInstrAttribType[NestedInstrAttribType["NoPeriodicPayments"] = 4] = "NoPeriodicPayments";
    NestedInstrAttribType[NestedInstrAttribType["VariableRate"] = 5] = "VariableRate";
    NestedInstrAttribType[NestedInstrAttribType["LessFeeForPut"] = 6] = "LessFeeForPut";
    NestedInstrAttribType[NestedInstrAttribType["SteppedCoupon"] = 7] = "SteppedCoupon";
    NestedInstrAttribType[NestedInstrAttribType["CouponPeriodIfNotSemiAnnual"] = 8] = "CouponPeriodIfNotSemiAnnual";
    NestedInstrAttribType[NestedInstrAttribType["WhenAndIfIssued"] = 9] = "WhenAndIfIssued";
    NestedInstrAttribType[NestedInstrAttribType["OriginalIssueDiscount"] = 10] = "OriginalIssueDiscount";
    NestedInstrAttribType[NestedInstrAttribType["CallablePuttable"] = 11] = "CallablePuttable";
    NestedInstrAttribType[NestedInstrAttribType["EscrowedToMaturity"] = 12] = "EscrowedToMaturity";
    NestedInstrAttribType[NestedInstrAttribType["EscrowedToRedemptionDateCallable"] = 13] = "EscrowedToRedemptionDateCallable";
    NestedInstrAttribType[NestedInstrAttribType["PreRefunded"] = 14] = "PreRefunded";
    NestedInstrAttribType[NestedInstrAttribType["InDefault"] = 15] = "InDefault";
    NestedInstrAttribType[NestedInstrAttribType["Unrated"] = 16] = "Unrated";
    NestedInstrAttribType[NestedInstrAttribType["Taxable"] = 17] = "Taxable";
    NestedInstrAttribType[NestedInstrAttribType["Indexed"] = 18] = "Indexed";
    NestedInstrAttribType[NestedInstrAttribType["SubjectToAlternativeMinimumTax"] = 19] = "SubjectToAlternativeMinimumTax";
    NestedInstrAttribType[NestedInstrAttribType["OriginalIssueDiscountPrice"] = 20] = "OriginalIssueDiscountPrice";
    NestedInstrAttribType[NestedInstrAttribType["CallableBelowMaturityValue"] = 21] = "CallableBelowMaturityValue";
    NestedInstrAttribType[NestedInstrAttribType["CallableWithoutNoticeByMailToHolderUnlessRegistered"] = 22] = "CallableWithoutNoticeByMailToHolderUnlessRegistered";
    NestedInstrAttribType[NestedInstrAttribType["PriceTickRulesForSecurity"] = 23] = "PriceTickRulesForSecurity";
    NestedInstrAttribType[NestedInstrAttribType["TradeTypeEligibilityDetailsForSecurity"] = 24] = "TradeTypeEligibilityDetailsForSecurity";
    NestedInstrAttribType[NestedInstrAttribType["InstrumentDenominator"] = 25] = "InstrumentDenominator";
    NestedInstrAttribType[NestedInstrAttribType["InstrumentNumerator"] = 26] = "InstrumentNumerator";
    NestedInstrAttribType[NestedInstrAttribType["InstrumentPricePrecision"] = 27] = "InstrumentPricePrecision";
    NestedInstrAttribType[NestedInstrAttribType["InstrumentStrikePrice"] = 28] = "InstrumentStrikePrice";
    NestedInstrAttribType[NestedInstrAttribType["TradeableIndicator"] = 29] = "TradeableIndicator";
    NestedInstrAttribType[NestedInstrAttribType["InstrumentIsEligibleToAcceptAnonymousOrders"] = 30] = "InstrumentIsEligibleToAcceptAnonymousOrders";
    NestedInstrAttribType[NestedInstrAttribType["MinimumGuaranteedFillVolume"] = 31] = "MinimumGuaranteedFillVolume";
    NestedInstrAttribType[NestedInstrAttribType["MinimumGuaranteedFillStatus"] = 32] = "MinimumGuaranteedFillStatus";
    NestedInstrAttribType[NestedInstrAttribType["TradeAtSettlementTasEligibility"] = 33] = "TradeAtSettlementTasEligibility";
    NestedInstrAttribType[NestedInstrAttribType["TestInstrument"] = 34] = "TestInstrument";
    NestedInstrAttribType[NestedInstrAttribType["DummyInstrument"] = 35] = "DummyInstrument";
    NestedInstrAttribType[NestedInstrAttribType["NegativeSettlementPriceEligibility"] = 36] = "NegativeSettlementPriceEligibility";
    NestedInstrAttribType[NestedInstrAttribType["NegativeStrikePriceEligibility"] = 37] = "NegativeStrikePriceEligibility";
    NestedInstrAttribType[NestedInstrAttribType["UsStandardContractIndicator"] = 38] = "UsStandardContractIndicator";
    NestedInstrAttribType[NestedInstrAttribType["Text"] = 99] = "Text";
})(NestedInstrAttribType = exports.NestedInstrAttribType || (exports.NestedInstrAttribType = {}));
var DerivativeSymbolSfx;
(function (DerivativeSymbolSfx) {
    DerivativeSymbolSfx["EucpWithLumpSumInterestRatherThanDiscountPrice"] = "CD";
    DerivativeSymbolSfx["WhenIssuedForASecurityToBeReissuedUnderAnOldCusipOrIsin"] = "WI";
})(DerivativeSymbolSfx = exports.DerivativeSymbolSfx || (exports.DerivativeSymbolSfx = {}));
var DerivativeSecurityIDSource;
(function (DerivativeSecurityIDSource) {
    DerivativeSecurityIDSource["Cusip"] = "1";
    DerivativeSecurityIDSource["Sedol"] = "2";
    DerivativeSecurityIDSource["Quik"] = "3";
    DerivativeSecurityIDSource["IsinNumber"] = "4";
    DerivativeSecurityIDSource["RicCode"] = "5";
    DerivativeSecurityIDSource["IsoCurrencyCode"] = "6";
    DerivativeSecurityIDSource["IsoCountryCode"] = "7";
    DerivativeSecurityIDSource["ExchangeSymbol"] = "8";
    DerivativeSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    DerivativeSecurityIDSource["BloombergSymbol"] = "A";
    DerivativeSecurityIDSource["Wertpapier"] = "B";
    DerivativeSecurityIDSource["Dutch"] = "C";
    DerivativeSecurityIDSource["Valoren"] = "D";
    DerivativeSecurityIDSource["Sicovam"] = "E";
    DerivativeSecurityIDSource["Belgian"] = "F";
    DerivativeSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    DerivativeSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    DerivativeSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    DerivativeSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    DerivativeSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    DerivativeSecurityIDSource["LetterOfCredit"] = "L";
    DerivativeSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    DerivativeSecurityIDSource["MarkitRedEntityClip"] = "N";
    DerivativeSecurityIDSource["MarkitRedPairClip"] = "P";
    DerivativeSecurityIDSource["CftcCommodityCode"] = "Q";
    DerivativeSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    DerivativeSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    DerivativeSecurityIDSource["LegalEntityIdentifier"] = "T";
    DerivativeSecurityIDSource["Synthetic"] = "U";
    DerivativeSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(DerivativeSecurityIDSource = exports.DerivativeSecurityIDSource || (exports.DerivativeSecurityIDSource = {}));
var DerivativeSecurityAltIDSource;
(function (DerivativeSecurityAltIDSource) {
    DerivativeSecurityAltIDSource["Cusip"] = "1";
    DerivativeSecurityAltIDSource["Sedol"] = "2";
    DerivativeSecurityAltIDSource["Quik"] = "3";
    DerivativeSecurityAltIDSource["IsinNumber"] = "4";
    DerivativeSecurityAltIDSource["RicCode"] = "5";
    DerivativeSecurityAltIDSource["IsoCurrencyCode"] = "6";
    DerivativeSecurityAltIDSource["IsoCountryCode"] = "7";
    DerivativeSecurityAltIDSource["ExchangeSymbol"] = "8";
    DerivativeSecurityAltIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    DerivativeSecurityAltIDSource["BloombergSymbol"] = "A";
    DerivativeSecurityAltIDSource["Wertpapier"] = "B";
    DerivativeSecurityAltIDSource["Dutch"] = "C";
    DerivativeSecurityAltIDSource["Valoren"] = "D";
    DerivativeSecurityAltIDSource["Sicovam"] = "E";
    DerivativeSecurityAltIDSource["Belgian"] = "F";
    DerivativeSecurityAltIDSource["CommonClearstreamAndEuroclear"] = "G";
    DerivativeSecurityAltIDSource["ClearingHouseClearingOrganization"] = "H";
    DerivativeSecurityAltIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    DerivativeSecurityAltIDSource["OptionPriceReportingAuthority"] = "J";
    DerivativeSecurityAltIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    DerivativeSecurityAltIDSource["LetterOfCredit"] = "L";
    DerivativeSecurityAltIDSource["MarketplaceAssignedIdentifier"] = "M";
    DerivativeSecurityAltIDSource["MarkitRedEntityClip"] = "N";
    DerivativeSecurityAltIDSource["MarkitRedPairClip"] = "P";
    DerivativeSecurityAltIDSource["CftcCommodityCode"] = "Q";
    DerivativeSecurityAltIDSource["IsdaCommodityReferencePrice"] = "R";
    DerivativeSecurityAltIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    DerivativeSecurityAltIDSource["LegalEntityIdentifier"] = "T";
    DerivativeSecurityAltIDSource["Synthetic"] = "U";
    DerivativeSecurityAltIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(DerivativeSecurityAltIDSource = exports.DerivativeSecurityAltIDSource || (exports.DerivativeSecurityAltIDSource = {}));
var CommUnitOfMeasure;
(function (CommUnitOfMeasure) {
    CommUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    CommUnitOfMeasure["Allowances"] = "Alw";
    CommUnitOfMeasure["Barrels"] = "Bbl";
    CommUnitOfMeasure["CubicMeters"] = "CBM";
    CommUnitOfMeasure["BoardFeet"] = "BDFT";
    CommUnitOfMeasure["Gigajoules"] = "GJ";
    CommUnitOfMeasure["Bushels"] = "Bu";
    CommUnitOfMeasure["KilowattHours"] = "kWh";
    CommUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    CommUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    CommUnitOfMeasure["MegawattHours"] = "MWh";
    CommUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    CommUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    CommUnitOfMeasure["Therms"] = "thm";
    CommUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    CommUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    CommUnitOfMeasure["HundredweightUs"] = "cwt";
    CommUnitOfMeasure["Days"] = "day";
    CommUnitOfMeasure["DryMetricTons"] = "dt";
    CommUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    CommUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    CommUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    CommUnitOfMeasure["Grams"] = "g";
    CommUnitOfMeasure["Gallons"] = "Gal";
    CommUnitOfMeasure["GrossTons"] = "GT";
    CommUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    CommUnitOfMeasure["IndexPoint"] = "IPNT";
    CommUnitOfMeasure["Kilograms"] = "kg";
    CommUnitOfMeasure["Kiloliters"] = "kL";
    CommUnitOfMeasure["KilowattYear"] = "kW-a";
    CommUnitOfMeasure["KilowattDay"] = "kW-d";
    CommUnitOfMeasure["KilowattHour"] = "kW-h";
    CommUnitOfMeasure["KilowattMonth"] = "kW-M";
    CommUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    CommUnitOfMeasure["Liters"] = "L";
    CommUnitOfMeasure["Pounds"] = "lbs";
    CommUnitOfMeasure["MegawattYear"] = "MW-a";
    CommUnitOfMeasure["MegawattDay"] = "MW-d";
    CommUnitOfMeasure["MegawattHour"] = "MW-h";
    CommUnitOfMeasure["MegawattMonth"] = "MW-M";
    CommUnitOfMeasure["MegawattMinute"] = "MW-min";
    CommUnitOfMeasure["TroyOunces"] = "oz_tr";
    CommUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    CommUnitOfMeasure["MetricTons"] = "t";
    CommUnitOfMeasure["TonsUs"] = "tn";
    CommUnitOfMeasure["MillionBarrels"] = "MMbbl";
    CommUnitOfMeasure["UsDollars"] = "USD";
})(CommUnitOfMeasure = exports.CommUnitOfMeasure || (exports.CommUnitOfMeasure = {}));
var DerivativeProduct;
(function (DerivativeProduct) {
    DerivativeProduct[DerivativeProduct["Agency"] = 1] = "Agency";
    DerivativeProduct[DerivativeProduct["Commodity"] = 2] = "Commodity";
    DerivativeProduct[DerivativeProduct["Corporate"] = 3] = "Corporate";
    DerivativeProduct[DerivativeProduct["Currency"] = 4] = "Currency";
    DerivativeProduct[DerivativeProduct["Equity"] = 5] = "Equity";
    DerivativeProduct[DerivativeProduct["Government"] = 6] = "Government";
    DerivativeProduct[DerivativeProduct["Index"] = 7] = "Index";
    DerivativeProduct[DerivativeProduct["Loan"] = 8] = "Loan";
    DerivativeProduct[DerivativeProduct["Moneymarket"] = 9] = "Moneymarket";
    DerivativeProduct[DerivativeProduct["Mortgage"] = 10] = "Mortgage";
    DerivativeProduct[DerivativeProduct["Municipal"] = 11] = "Municipal";
    DerivativeProduct[DerivativeProduct["Other"] = 12] = "Other";
    DerivativeProduct[DerivativeProduct["Financing"] = 13] = "Financing";
})(DerivativeProduct = exports.DerivativeProduct || (exports.DerivativeProduct = {}));
var DerivativeSecurityType;
(function (DerivativeSecurityType) {
    DerivativeSecurityType["EuroSupranationalCoupons"] = "EUSUPRA";
    DerivativeSecurityType["CorporateBond"] = "CORP";
    DerivativeSecurityType["ForeignExchangeContract"] = "FOR";
    DerivativeSecurityType["CommonStock"] = "CS";
    DerivativeSecurityType["Repurchase"] = "REPO";
    DerivativeSecurityType["BradyBond"] = "BRADY";
    DerivativeSecurityType["TermLoan"] = "TERM";
    DerivativeSecurityType["BankersAcceptance"] = "BA";
    DerivativeSecurityType["AssetBackedSecurities"] = "ABS";
    DerivativeSecurityType["OtherAnticipationNotesBanGanEtc"] = "AN";
    DerivativeSecurityType["MutualFund"] = "MF";
    DerivativeSecurityType["FederalAgencyCoupon"] = "FAC";
    DerivativeSecurityType["CorporatePrivatePlacement"] = "CPP";
    DerivativeSecurityType["PreferredStock"] = "PS";
    DerivativeSecurityType["Forward"] = "FORWARD";
    DerivativeSecurityType["CanadianTreasuryNotes"] = "CAN";
    DerivativeSecurityType["RevolverLoan"] = "RVLV";
    DerivativeSecurityType["BankDepositoryNote"] = "BDN";
    DerivativeSecurityType["CanadianMortgageBonds"] = "CMB";
    DerivativeSecurityType["CertificateOfObligation"] = "COFO";
    DerivativeSecurityType["MultilegInstrument"] = "MLEG";
    DerivativeSecurityType["NonDeliverableForward"] = "FXNDF";
    DerivativeSecurityType["Cap"] = "CAP";
    DerivativeSecurityType["FederalAgencyDiscountNote"] = "FADN";
    DerivativeSecurityType["ConvertibleBond"] = "CB";
    DerivativeSecurityType["CreditDefaultSwap"] = "CDS";
    DerivativeSecurityType["BuySellback"] = "BUYSELL";
    DerivativeSecurityType["CanadianTreasuryBills"] = "CTB";
    DerivativeSecurityType["RevolverTermLoan"] = "RVLVTRM";
    DerivativeSecurityType["BankNotes"] = "BN";
    DerivativeSecurityType["CorpMortgageBackedSecurities"] = "CMBS";
    DerivativeSecurityType["CertificateOfParticipation"] = "COFP";
    DerivativeSecurityType["NoSecurityType"] = "NONE";
    DerivativeSecurityType["FxSpot"] = "FXSPOT";
    DerivativeSecurityType["UsTreasuryNoteDeprecatedValueUseTnote"] = "UST";
    DerivativeSecurityType["PrivateExportFunding"] = "PEF";
    DerivativeSecurityType["DualCurrency"] = "DUAL";
    DerivativeSecurityType["SecuritiesLoan"] = "SECLOAN";
    DerivativeSecurityType["EuroSovereigns"] = "EUSOV";
    DerivativeSecurityType["BridgeLoan"] = "BRIDGE";
    DerivativeSecurityType["BillOfExchanges"] = "BOX";
    DerivativeSecurityType["CollateralizedMortgageObligation"] = "CMO";
    DerivativeSecurityType["GeneralObligationBonds"] = "GO";
    DerivativeSecurityType["FxForward"] = "FXFWD";
    DerivativeSecurityType["Collar"] = "CLLR";
    DerivativeSecurityType["UsTreasuryBillDeprecatedValueUseTbill"] = "USTB";
    DerivativeSecurityType["UsdSupranationalCoupons"] = "SUPRA";
    DerivativeSecurityType["EuroCorporateBond"] = "EUCORP";
    DerivativeSecurityType["SecuritiesPledge"] = "SECPLEDGE";
    DerivativeSecurityType["CanadianProvincialBonds"] = "PROV";
    DerivativeSecurityType["LetterOfCredit"] = "LOFC";
    DerivativeSecurityType["CanadianMoneyMarkets"] = "CAMM";
    DerivativeSecurityType["IoetteMortgage"] = "IET";
    DerivativeSecurityType["MandatoryTender"] = "MT";
    DerivativeSecurityType["FxSwap"] = "FXSWAP";
    DerivativeSecurityType["CommoditySwap"] = "CMDTYSWAP";
    DerivativeSecurityType["EuroCorporateFloatingRateNotes"] = "EUFRN";
    DerivativeSecurityType["TreasuryBillNonUs"] = "TB";
    DerivativeSecurityType["SwingLineFacility"] = "SWING";
    DerivativeSecurityType["CertificateOfDeposit"] = "CD";
    DerivativeSecurityType["MortgageBackedSecurities"] = "MBS";
    DerivativeSecurityType["RevenueAnticipationNote"] = "RAN";
    DerivativeSecurityType["WildcardEntryForUseOnSecurityDefinitionRequest"] = "?";
    DerivativeSecurityType["DeliveryVersusPledge"] = "DVPLDG";
    DerivativeSecurityType["Exotic"] = "EXOTIC";
    DerivativeSecurityType["UsCorporateFloatingRateNotes"] = "FRN";
    DerivativeSecurityType["OptionsOnCombo"] = "OOC";
    DerivativeSecurityType["UsTreasuryBond"] = "TBOND";
    DerivativeSecurityType["DebtorInPossession"] = "DINP";
    DerivativeSecurityType["CallLoans"] = "CL";
    DerivativeSecurityType["MortgageInterestOnly"] = "MIO";
    DerivativeSecurityType["RevenueBonds"] = "REV";
    DerivativeSecurityType["Cash"] = "CASH";
    DerivativeSecurityType["Floor"] = "FLR";
    DerivativeSecurityType["CollateralBasket"] = "COLLBSKT";
    DerivativeSecurityType["IndexedLinked"] = "XLINKD";
    DerivativeSecurityType["InterestStripFromAnyBondOrNote"] = "TINT";
    DerivativeSecurityType["Defaulted"] = "DEFLTED";
    DerivativeSecurityType["CommercialPaper"] = "CP";
    DerivativeSecurityType["MortgagePrincipalOnly"] = "MPO";
    DerivativeSecurityType["SpecialAssessment"] = "SPCLA";
    DerivativeSecurityType["ForwardRateAgreement"] = "FRA";
    DerivativeSecurityType["StructuredNotes"] = "STRUCT";
    DerivativeSecurityType["Future"] = "FUT";
    DerivativeSecurityType["UsTreasuryBill"] = "TBILL";
    DerivativeSecurityType["TreasuryInflationProtectedSecurities"] = "TIPS";
    DerivativeSecurityType["Withdrawn"] = "WITHDRN";
    DerivativeSecurityType["DepositNotes"] = "DN";
    DerivativeSecurityType["MortgagePrivatePlacement"] = "MPP";
    DerivativeSecurityType["SpecialObligation"] = "SPCLO";
    DerivativeSecurityType["YankeeCorporateBond"] = "YANK";
    DerivativeSecurityType["PrincipalStripOfACallableBondOrNote"] = "TCAL";
    DerivativeSecurityType["Replaced"] = "REPLACD";
    DerivativeSecurityType["EuroCertificateOfDeposit"] = "EUCD";
    DerivativeSecurityType["MiscellaneousPassThrough"] = "MPT";
    DerivativeSecurityType["SpecialTax"] = "SPCLT";
    DerivativeSecurityType["DerivativeForward"] = "FWD";
    DerivativeSecurityType["InterestRateSwap"] = "IRS";
    DerivativeSecurityType["PrincipalStripFromANonCallableBondOrNote"] = "TPRN";
    DerivativeSecurityType["Matured"] = "MATURED";
    DerivativeSecurityType["EuroCommercialPaper"] = "EUCP";
    DerivativeSecurityType["Pfandbriefe"] = "PFAND";
    DerivativeSecurityType["TaxAnticipationNote"] = "TAN";
    DerivativeSecurityType["TotalReturnSwap"] = "TRS";
    DerivativeSecurityType["UsTreasuryNote"] = "TNOTE";
    DerivativeSecurityType["AmendedRestated"] = "AMENDED";
    DerivativeSecurityType["LiquidityNote"] = "LQN";
    DerivativeSecurityType["ToBeAnnounced"] = "TBA";
    DerivativeSecurityType["TaxAllocation"] = "TAXA";
    DerivativeSecurityType["LoanLease"] = "LOANLEASE";
    DerivativeSecurityType["Retired"] = "RETIRED";
    DerivativeSecurityType["MediumTermNotes"] = "MTN";
    DerivativeSecurityType["TaxExemptCommercialPaper"] = "TECP";
    DerivativeSecurityType["OptionsOnFutures"] = "OOF";
    DerivativeSecurityType["Overnight"] = "ONITE";
    DerivativeSecurityType["TaxableMunicipalCp"] = "TMCP";
    DerivativeSecurityType["OptionsOnPhysicalUseNotRecommended"] = "OOP";
    DerivativeSecurityType["PromissoryNote"] = "PN";
    DerivativeSecurityType["ShortTermLoanNote"] = "STN";
    DerivativeSecurityType["TaxRevenueAnticipationNote"] = "TRAN";
    DerivativeSecurityType["Option"] = "OPT";
    DerivativeSecurityType["PlazosFijos"] = "PZFJ";
    DerivativeSecurityType["VariableRateDemandNote"] = "VRDN";
    DerivativeSecurityType["SecuredLiquidityNote"] = "SLQN";
    DerivativeSecurityType["Warrant"] = "WAR";
    DerivativeSecurityType["SpotForward"] = "SPOTFWD";
    DerivativeSecurityType["TimeDeposit"] = "TD";
    DerivativeSecurityType["SwapOption"] = "SWAPTION";
    DerivativeSecurityType["Transmission"] = "XMISSION";
    DerivativeSecurityType["TermLiquidityNote"] = "TLQN";
    DerivativeSecurityType["GeneralTypeForAContractBasedOnAnEstablishedIndex"] = "INDEX";
    DerivativeSecurityType["ExtendedCommNote"] = "XCN";
    DerivativeSecurityType["BondBasket"] = "BDBSKT";
    DerivativeSecurityType["YankeeCertificateOfDeposit"] = "YCD";
    DerivativeSecurityType["ContractForDifference"] = "CFD";
    DerivativeSecurityType["CorrelationSwap"] = "CRLTNSWAP";
    DerivativeSecurityType["DividendSwap"] = "DVDNDSWAP";
    DerivativeSecurityType["EquityBasket"] = "EQBSKT";
    DerivativeSecurityType["EquityForward"] = "EQFWD";
    DerivativeSecurityType["ReturnSwap"] = "RTRNSWAP";
    DerivativeSecurityType["VarianceSwap"] = "VARSWAP";
})(DerivativeSecurityType = exports.DerivativeSecurityType || (exports.DerivativeSecurityType = {}));
var DerivativeInstrmtAssignmentMethod;
(function (DerivativeInstrmtAssignmentMethod) {
    DerivativeInstrmtAssignmentMethod["ProRata"] = "P";
    DerivativeInstrmtAssignmentMethod["Random"] = "R";
})(DerivativeInstrmtAssignmentMethod = exports.DerivativeInstrmtAssignmentMethod || (exports.DerivativeInstrmtAssignmentMethod = {}));
var DerivativeSecurityStatus;
(function (DerivativeSecurityStatus) {
    DerivativeSecurityStatus["Active"] = "1";
    DerivativeSecurityStatus["Inactive"] = "2";
    DerivativeSecurityStatus["ActiveClosingOrdersOnly"] = "3";
    DerivativeSecurityStatus["Expired"] = "4";
    DerivativeSecurityStatus["Delisted"] = "5";
    DerivativeSecurityStatus["KnockedOut"] = "6";
    DerivativeSecurityStatus["KnockOutRevoked"] = "7";
    DerivativeSecurityStatus["PendingExpiry"] = "8";
    DerivativeSecurityStatus["Suspended"] = "9";
    DerivativeSecurityStatus["Published"] = "10";
    DerivativeSecurityStatus["PendingDeletion"] = "11";
})(DerivativeSecurityStatus = exports.DerivativeSecurityStatus || (exports.DerivativeSecurityStatus = {}));
var DerivativeUnitOfMeasure;
(function (DerivativeUnitOfMeasure) {
    DerivativeUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    DerivativeUnitOfMeasure["Allowances"] = "Alw";
    DerivativeUnitOfMeasure["Barrels"] = "Bbl";
    DerivativeUnitOfMeasure["CubicMeters"] = "CBM";
    DerivativeUnitOfMeasure["BoardFeet"] = "BDFT";
    DerivativeUnitOfMeasure["Gigajoules"] = "GJ";
    DerivativeUnitOfMeasure["Bushels"] = "Bu";
    DerivativeUnitOfMeasure["KilowattHours"] = "kWh";
    DerivativeUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    DerivativeUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    DerivativeUnitOfMeasure["MegawattHours"] = "MWh";
    DerivativeUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    DerivativeUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    DerivativeUnitOfMeasure["Therms"] = "thm";
    DerivativeUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    DerivativeUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    DerivativeUnitOfMeasure["HundredweightUs"] = "cwt";
    DerivativeUnitOfMeasure["Days"] = "day";
    DerivativeUnitOfMeasure["DryMetricTons"] = "dt";
    DerivativeUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    DerivativeUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    DerivativeUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    DerivativeUnitOfMeasure["Grams"] = "g";
    DerivativeUnitOfMeasure["Gallons"] = "Gal";
    DerivativeUnitOfMeasure["GrossTons"] = "GT";
    DerivativeUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    DerivativeUnitOfMeasure["IndexPoint"] = "IPNT";
    DerivativeUnitOfMeasure["Kilograms"] = "kg";
    DerivativeUnitOfMeasure["Kiloliters"] = "kL";
    DerivativeUnitOfMeasure["KilowattYear"] = "kW-a";
    DerivativeUnitOfMeasure["KilowattDay"] = "kW-d";
    DerivativeUnitOfMeasure["KilowattHour"] = "kW-h";
    DerivativeUnitOfMeasure["KilowattMonth"] = "kW-M";
    DerivativeUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    DerivativeUnitOfMeasure["Liters"] = "L";
    DerivativeUnitOfMeasure["Pounds"] = "lbs";
    DerivativeUnitOfMeasure["MegawattYear"] = "MW-a";
    DerivativeUnitOfMeasure["MegawattDay"] = "MW-d";
    DerivativeUnitOfMeasure["MegawattHour"] = "MW-h";
    DerivativeUnitOfMeasure["MegawattMonth"] = "MW-M";
    DerivativeUnitOfMeasure["MegawattMinute"] = "MW-min";
    DerivativeUnitOfMeasure["TroyOunces"] = "oz_tr";
    DerivativeUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    DerivativeUnitOfMeasure["MetricTons"] = "t";
    DerivativeUnitOfMeasure["TonsUs"] = "tn";
    DerivativeUnitOfMeasure["MillionBarrels"] = "MMbbl";
    DerivativeUnitOfMeasure["UsDollars"] = "USD";
})(DerivativeUnitOfMeasure = exports.DerivativeUnitOfMeasure || (exports.DerivativeUnitOfMeasure = {}));
var DerivativeTimeUnit;
(function (DerivativeTimeUnit) {
    DerivativeTimeUnit["Hour"] = "H";
    DerivativeTimeUnit["Minute"] = "Min";
    DerivativeTimeUnit["Second"] = "S";
    DerivativeTimeUnit["Day"] = "D";
    DerivativeTimeUnit["Week"] = "Wk";
    DerivativeTimeUnit["Month"] = "Mo";
    DerivativeTimeUnit["Year"] = "Yr";
    DerivativeTimeUnit["Quarter"] = "Q";
})(DerivativeTimeUnit = exports.DerivativeTimeUnit || (exports.DerivativeTimeUnit = {}));
var DerivativeEventType;
(function (DerivativeEventType) {
    DerivativeEventType[DerivativeEventType["Put"] = 1] = "Put";
    DerivativeEventType[DerivativeEventType["Call"] = 2] = "Call";
    DerivativeEventType[DerivativeEventType["Tender"] = 3] = "Tender";
    DerivativeEventType[DerivativeEventType["SinkingFundCall"] = 4] = "SinkingFundCall";
    DerivativeEventType[DerivativeEventType["Activation"] = 5] = "Activation";
    DerivativeEventType[DerivativeEventType["Inactivation"] = 6] = "Inactivation";
    DerivativeEventType[DerivativeEventType["LastEligibleTradeDate"] = 7] = "LastEligibleTradeDate";
    DerivativeEventType[DerivativeEventType["SwapStartDate"] = 8] = "SwapStartDate";
    DerivativeEventType[DerivativeEventType["SwapEndDate"] = 9] = "SwapEndDate";
    DerivativeEventType[DerivativeEventType["SwapRollDate"] = 10] = "SwapRollDate";
    DerivativeEventType[DerivativeEventType["SwapNextStartDate"] = 11] = "SwapNextStartDate";
    DerivativeEventType[DerivativeEventType["SwapNextRollDate"] = 12] = "SwapNextRollDate";
    DerivativeEventType[DerivativeEventType["FirstDeliveryDate"] = 13] = "FirstDeliveryDate";
    DerivativeEventType[DerivativeEventType["LastDeliveryDate"] = 14] = "LastDeliveryDate";
    DerivativeEventType[DerivativeEventType["InitialInventoryDueDate"] = 15] = "InitialInventoryDueDate";
    DerivativeEventType[DerivativeEventType["FinalInventoryDueDate"] = 16] = "FinalInventoryDueDate";
    DerivativeEventType[DerivativeEventType["FirstIntentDate"] = 17] = "FirstIntentDate";
    DerivativeEventType[DerivativeEventType["LastIntentDate"] = 18] = "LastIntentDate";
    DerivativeEventType[DerivativeEventType["PositionRemovalDate"] = 19] = "PositionRemovalDate";
    DerivativeEventType[DerivativeEventType["MinimumNotice"] = 20] = "MinimumNotice";
    DerivativeEventType[DerivativeEventType["DeliveryStartTime"] = 21] = "DeliveryStartTime";
    DerivativeEventType[DerivativeEventType["DeliveryEndTime"] = 22] = "DeliveryEndTime";
    DerivativeEventType[DerivativeEventType["FirstNoticeDate"] = 23] = "FirstNoticeDate";
    DerivativeEventType[DerivativeEventType["LastNoticeDate"] = 24] = "LastNoticeDate";
    DerivativeEventType[DerivativeEventType["FirstExerciseDate"] = 25] = "FirstExerciseDate";
    DerivativeEventType[DerivativeEventType["RedemptionDate"] = 26] = "RedemptionDate";
    DerivativeEventType[DerivativeEventType["TradeContinuationEffectiveDate"] = 27] = "TradeContinuationEffectiveDate";
    DerivativeEventType[DerivativeEventType["Other"] = 99] = "Other";
})(DerivativeEventType = exports.DerivativeEventType || (exports.DerivativeEventType = {}));
var DerivativeInstrumentPartyIDSource;
(function (DerivativeInstrumentPartyIDSource) {
    DerivativeInstrumentPartyIDSource["KoreanInvestorId"] = "1";
    DerivativeInstrumentPartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    DerivativeInstrumentPartyIDSource["TaiwaneseTradingAcct"] = "3";
    DerivativeInstrumentPartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    DerivativeInstrumentPartyIDSource["ChineseInvestorId"] = "5";
    DerivativeInstrumentPartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    DerivativeInstrumentPartyIDSource["UsSocialSecurityNumber"] = "7";
    DerivativeInstrumentPartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    DerivativeInstrumentPartyIDSource["AustralianBusinessNumber"] = "9";
    DerivativeInstrumentPartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    DerivativeInstrumentPartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    DerivativeInstrumentPartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    DerivativeInstrumentPartyIDSource["ProprietaryCustomCode"] = "D";
    DerivativeInstrumentPartyIDSource["IsoCountryCode"] = "E";
    DerivativeInstrumentPartyIDSource["AustralianTaxFileNumber"] = "A";
    DerivativeInstrumentPartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    DerivativeInstrumentPartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    DerivativeInstrumentPartyIDSource["TaxId"] = "J";
    DerivativeInstrumentPartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    DerivativeInstrumentPartyIDSource["AustralianCompanyNumber"] = "K";
    DerivativeInstrumentPartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    DerivativeInstrumentPartyIDSource["CftcReportingFirmIdentifier"] = "M";
    DerivativeInstrumentPartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    DerivativeInstrumentPartyIDSource["InterimIdentifier"] = "O";
    DerivativeInstrumentPartyIDSource["ShortCodeIdentifier"] = "P";
    DerivativeInstrumentPartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(DerivativeInstrumentPartyIDSource = exports.DerivativeInstrumentPartyIDSource || (exports.DerivativeInstrumentPartyIDSource = {}));
var DerivativeInstrumentPartyRole;
(function (DerivativeInstrumentPartyRole) {
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["InvestorId"] = 5] = "InvestorId";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ContraFirm"] = 17] = "ContraFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["Exchange"] = 22] = "Exchange";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["Custodian"] = 28] = "Custodian";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["Intermediary"] = 29] = "Intermediary";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["Agent"] = 30] = "Agent";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["SubCustodian"] = 31] = "SubCustodian";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["Beneficiary"] = 32] = "Beneficiary";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["InterestedParty"] = 33] = "InterestedParty";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ContraTrader"] = 37] = "ContraTrader";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["PositionAccount"] = 38] = "PositionAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ContraExchange"] = 42] = "ContraExchange";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["AssetManager"] = 49] = "AssetManager";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["SenderLocation"] = 54] = "SenderLocation";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["SessionId"] = 55] = "SessionId";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["MarketMaker"] = 66] = "MarketMaker";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["LocationId"] = 75] = "LocationId";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["DeskId"] = 76] = "DeskId";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["AwayMarket"] = 94] = "AwayMarket";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["MarginAccount"] = 100] = "MarginAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["DataRepository"] = 102] = "DataRepository";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["Correspondent"] = 107] = "Correspondent";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["Borrower"] = 110] = "Borrower";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["Guarantor"] = 112] = "Guarantor";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["HedgingParty"] = 115] = "HedgingParty";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["SalesPerson"] = 117] = "SalesPerson";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["Operator"] = 118] = "Operator";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    DerivativeInstrumentPartyRole[DerivativeInstrumentPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(DerivativeInstrumentPartyRole = exports.DerivativeInstrumentPartyRole || (exports.DerivativeInstrumentPartyRole = {}));
var DerivativeInstrumentPartySubIDType;
(function (DerivativeInstrumentPartySubIDType) {
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["Firm"] = 1] = "Firm";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["Person"] = 2] = "Person";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["System"] = 3] = "System";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["Application"] = 4] = "Application";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["ContactName"] = 9] = "ContactName";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["Bic"] = 16] = "Bic";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["Department"] = 24] = "Department";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["Location"] = 31] = "Location";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["AddressCity"] = 34] = "AddressCity";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["USPerson"] = 48] = "USPerson";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["EndUser"] = 69] = "EndUser";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["Domicile"] = 72] = "Domicile";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["Payer"] = 74] = "Payer";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["Receiver"] = 75] = "Receiver";
    DerivativeInstrumentPartySubIDType[DerivativeInstrumentPartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(DerivativeInstrumentPartySubIDType = exports.DerivativeInstrumentPartySubIDType || (exports.DerivativeInstrumentPartySubIDType = {}));
var DerivativeExerciseStyle;
(function (DerivativeExerciseStyle) {
    DerivativeExerciseStyle[DerivativeExerciseStyle["European"] = 0] = "European";
    DerivativeExerciseStyle[DerivativeExerciseStyle["American"] = 1] = "American";
    DerivativeExerciseStyle[DerivativeExerciseStyle["Bermuda"] = 2] = "Bermuda";
    DerivativeExerciseStyle[DerivativeExerciseStyle["Other"] = 99] = "Other";
})(DerivativeExerciseStyle = exports.DerivativeExerciseStyle || (exports.DerivativeExerciseStyle = {}));
var MaturityMonthYearIncrementUnits;
(function (MaturityMonthYearIncrementUnits) {
    MaturityMonthYearIncrementUnits[MaturityMonthYearIncrementUnits["Months"] = 0] = "Months";
    MaturityMonthYearIncrementUnits[MaturityMonthYearIncrementUnits["Days"] = 1] = "Days";
    MaturityMonthYearIncrementUnits[MaturityMonthYearIncrementUnits["Weeks"] = 2] = "Weeks";
    MaturityMonthYearIncrementUnits[MaturityMonthYearIncrementUnits["Years"] = 3] = "Years";
})(MaturityMonthYearIncrementUnits = exports.MaturityMonthYearIncrementUnits || (exports.MaturityMonthYearIncrementUnits = {}));
var MaturityMonthYearFormat;
(function (MaturityMonthYearFormat) {
    MaturityMonthYearFormat[MaturityMonthYearFormat["YearMonthOnlyDefault"] = 0] = "YearMonthOnlyDefault";
    MaturityMonthYearFormat[MaturityMonthYearFormat["YearMonthDay"] = 1] = "YearMonthDay";
    MaturityMonthYearFormat[MaturityMonthYearFormat["YearMonthWeek"] = 2] = "YearMonthWeek";
})(MaturityMonthYearFormat = exports.MaturityMonthYearFormat || (exports.MaturityMonthYearFormat = {}));
var StrikeExerciseStyle;
(function (StrikeExerciseStyle) {
    StrikeExerciseStyle[StrikeExerciseStyle["European"] = 0] = "European";
    StrikeExerciseStyle[StrikeExerciseStyle["American"] = 1] = "American";
    StrikeExerciseStyle[StrikeExerciseStyle["Bermuda"] = 2] = "Bermuda";
    StrikeExerciseStyle[StrikeExerciseStyle["Other"] = 99] = "Other";
})(StrikeExerciseStyle = exports.StrikeExerciseStyle || (exports.StrikeExerciseStyle = {}));
var SecondaryPriceLimitType;
(function (SecondaryPriceLimitType) {
    SecondaryPriceLimitType[SecondaryPriceLimitType["PriceDefault"] = 0] = "PriceDefault";
    SecondaryPriceLimitType[SecondaryPriceLimitType["Ticks"] = 1] = "Ticks";
    SecondaryPriceLimitType[SecondaryPriceLimitType["Percentage"] = 2] = "Percentage";
})(SecondaryPriceLimitType = exports.SecondaryPriceLimitType || (exports.SecondaryPriceLimitType = {}));
var PriceLimitType;
(function (PriceLimitType) {
    PriceLimitType[PriceLimitType["PriceDefault"] = 0] = "PriceDefault";
    PriceLimitType[PriceLimitType["Ticks"] = 1] = "Ticks";
    PriceLimitType[PriceLimitType["Percentage"] = 2] = "Percentage";
})(PriceLimitType = exports.PriceLimitType || (exports.PriceLimitType = {}));
var ExecInstValue;
(function (ExecInstValue) {
    ExecInstValue["StayOnOfferSide"] = "0";
    ExecInstValue["NotHeld"] = "1";
    ExecInstValue["Work"] = "2";
    ExecInstValue["GoAlong"] = "3";
    ExecInstValue["OverTheDay"] = "4";
    ExecInstValue["Held"] = "5";
    ExecInstValue["ParticipateDontInitiate"] = "6";
    ExecInstValue["StrictScale"] = "7";
    ExecInstValue["TryToScale"] = "8";
    ExecInstValue["StayOnBidSide"] = "9";
    ExecInstValue["NoCross"] = "A";
    ExecInstValue["OkToCross"] = "B";
    ExecInstValue["CallFirst"] = "C";
    ExecInstValue["PercentOfVolume"] = "D";
    ExecInstValue["DoNotIncreaseDni"] = "E";
    ExecInstValue["DoNotReduceDnr"] = "F";
    ExecInstValue["AllOrNoneAon"] = "G";
    ExecInstValue["ReinstateOnSystemFailure"] = "H";
    ExecInstValue["InstitutionsOnly"] = "I";
    ExecInstValue["ReinstateOnTradingHalt"] = "J";
    ExecInstValue["CancelOnTradingHalt"] = "K";
    ExecInstValue["LastPegLastSale"] = "L";
    ExecInstValue["MidPricePegMidpriceOfInsideQuote"] = "M";
    ExecInstValue["NonNegotiable"] = "N";
    ExecInstValue["OpeningPeg"] = "O";
    ExecInstValue["MarketPeg"] = "P";
    ExecInstValue["CancelOnSystemFailure"] = "Q";
    ExecInstValue["PrimaryPeg"] = "R";
    ExecInstValue["Suspend"] = "S";
    ExecInstValue["FixedPegToLocalBestBidOrOfferAtTimeOfOrder"] = "T";
    ExecInstValue["CustomerDisplayInstruction"] = "U";
    ExecInstValue["NettingForForex"] = "V";
    ExecInstValue["PegToVwap"] = "W";
    ExecInstValue["TradeAlong"] = "X";
    ExecInstValue["TryToStop"] = "Y";
    ExecInstValue["CancelIfNotBest"] = "Z";
    ExecInstValue["TrailingStopPeg"] = "a";
    ExecInstValue["StrictLimit"] = "b";
    ExecInstValue["IgnorePriceValidityChecks"] = "c";
    ExecInstValue["PegToLimitPrice"] = "d";
    ExecInstValue["WorkToTargetStrategy"] = "e";
    ExecInstValue["IntermarketSweep"] = "f";
    ExecInstValue["ExternalRoutingAllowed"] = "g";
    ExecInstValue["ExternalRoutingNotAllowed"] = "h";
    ExecInstValue["ImbalanceOnly"] = "i";
    ExecInstValue["SingleExecutionRequestedForBlockTrade"] = "j";
    ExecInstValue["BestExecution"] = "k";
    ExecInstValue["SuspendOnSystemFailure"] = "l";
    ExecInstValue["SuspendOnTradingHalt"] = "m";
    ExecInstValue["ReinstateOnConnectionLoss"] = "n";
    ExecInstValue["CancelOnConnectionLoss"] = "o";
    ExecInstValue["SuspendOnConnectionLoss"] = "p";
    ExecInstValue["Release"] = "q";
    ExecInstValue["ExecuteAsDeltaNeutralUsingVolatilityProvided"] = "r";
    ExecInstValue["ExecuteAsDurationNeutral"] = "s";
    ExecInstValue["ExecuteAsFxNeutral"] = "t";
    ExecInstValue["MinimumGuaranteedFillEligible"] = "u";
    ExecInstValue["BypassNonDisplayedLiquidity"] = "v";
    ExecInstValue["Lock"] = "w";
    ExecInstValue["IgnoreNotionalValueChecks"] = "x";
    ExecInstValue["TradeAtReferencePrice"] = "y";
})(ExecInstValue = exports.ExecInstValue || (exports.ExecInstValue = {}));
var DerivativeInstrAttribType;
(function (DerivativeInstrAttribType) {
    DerivativeInstrAttribType[DerivativeInstrAttribType["FlatSecuritiesPayInterestOnACurrentBasisButAreTradedWithoutInterest"] = 1] = "FlatSecuritiesPayInterestOnACurrentBasisButAreTradedWithoutInterest";
    DerivativeInstrAttribType[DerivativeInstrAttribType["ZeroCoupon"] = 2] = "ZeroCoupon";
    DerivativeInstrAttribType[DerivativeInstrAttribType["InterestBearingForEuroCommercialPaperWhenNotIssuedAtDiscount"] = 3] = "InterestBearingForEuroCommercialPaperWhenNotIssuedAtDiscount";
    DerivativeInstrAttribType[DerivativeInstrAttribType["NoPeriodicPayments"] = 4] = "NoPeriodicPayments";
    DerivativeInstrAttribType[DerivativeInstrAttribType["VariableRate"] = 5] = "VariableRate";
    DerivativeInstrAttribType[DerivativeInstrAttribType["LessFeeForPut"] = 6] = "LessFeeForPut";
    DerivativeInstrAttribType[DerivativeInstrAttribType["SteppedCoupon"] = 7] = "SteppedCoupon";
    DerivativeInstrAttribType[DerivativeInstrAttribType["CouponPeriodIfNotSemiAnnual"] = 8] = "CouponPeriodIfNotSemiAnnual";
    DerivativeInstrAttribType[DerivativeInstrAttribType["WhenAndIfIssued"] = 9] = "WhenAndIfIssued";
    DerivativeInstrAttribType[DerivativeInstrAttribType["OriginalIssueDiscount"] = 10] = "OriginalIssueDiscount";
    DerivativeInstrAttribType[DerivativeInstrAttribType["CallablePuttable"] = 11] = "CallablePuttable";
    DerivativeInstrAttribType[DerivativeInstrAttribType["EscrowedToMaturity"] = 12] = "EscrowedToMaturity";
    DerivativeInstrAttribType[DerivativeInstrAttribType["EscrowedToRedemptionDateCallable"] = 13] = "EscrowedToRedemptionDateCallable";
    DerivativeInstrAttribType[DerivativeInstrAttribType["PreRefunded"] = 14] = "PreRefunded";
    DerivativeInstrAttribType[DerivativeInstrAttribType["InDefault"] = 15] = "InDefault";
    DerivativeInstrAttribType[DerivativeInstrAttribType["Unrated"] = 16] = "Unrated";
    DerivativeInstrAttribType[DerivativeInstrAttribType["Taxable"] = 17] = "Taxable";
    DerivativeInstrAttribType[DerivativeInstrAttribType["Indexed"] = 18] = "Indexed";
    DerivativeInstrAttribType[DerivativeInstrAttribType["SubjectToAlternativeMinimumTax"] = 19] = "SubjectToAlternativeMinimumTax";
    DerivativeInstrAttribType[DerivativeInstrAttribType["OriginalIssueDiscountPrice"] = 20] = "OriginalIssueDiscountPrice";
    DerivativeInstrAttribType[DerivativeInstrAttribType["CallableBelowMaturityValue"] = 21] = "CallableBelowMaturityValue";
    DerivativeInstrAttribType[DerivativeInstrAttribType["CallableWithoutNoticeByMailToHolderUnlessRegistered"] = 22] = "CallableWithoutNoticeByMailToHolderUnlessRegistered";
    DerivativeInstrAttribType[DerivativeInstrAttribType["PriceTickRulesForSecurity"] = 23] = "PriceTickRulesForSecurity";
    DerivativeInstrAttribType[DerivativeInstrAttribType["TradeTypeEligibilityDetailsForSecurity"] = 24] = "TradeTypeEligibilityDetailsForSecurity";
    DerivativeInstrAttribType[DerivativeInstrAttribType["InstrumentDenominator"] = 25] = "InstrumentDenominator";
    DerivativeInstrAttribType[DerivativeInstrAttribType["InstrumentNumerator"] = 26] = "InstrumentNumerator";
    DerivativeInstrAttribType[DerivativeInstrAttribType["InstrumentPricePrecision"] = 27] = "InstrumentPricePrecision";
    DerivativeInstrAttribType[DerivativeInstrAttribType["InstrumentStrikePrice"] = 28] = "InstrumentStrikePrice";
    DerivativeInstrAttribType[DerivativeInstrAttribType["TradeableIndicator"] = 29] = "TradeableIndicator";
    DerivativeInstrAttribType[DerivativeInstrAttribType["InstrumentIsEligibleToAcceptAnonymousOrders"] = 30] = "InstrumentIsEligibleToAcceptAnonymousOrders";
    DerivativeInstrAttribType[DerivativeInstrAttribType["MinimumGuaranteedFillVolume"] = 31] = "MinimumGuaranteedFillVolume";
    DerivativeInstrAttribType[DerivativeInstrAttribType["MinimumGuaranteedFillStatus"] = 32] = "MinimumGuaranteedFillStatus";
    DerivativeInstrAttribType[DerivativeInstrAttribType["TradeAtSettlementTasEligibility"] = 33] = "TradeAtSettlementTasEligibility";
    DerivativeInstrAttribType[DerivativeInstrAttribType["TestInstrument"] = 34] = "TestInstrument";
    DerivativeInstrAttribType[DerivativeInstrAttribType["DummyInstrument"] = 35] = "DummyInstrument";
    DerivativeInstrAttribType[DerivativeInstrAttribType["NegativeSettlementPriceEligibility"] = 36] = "NegativeSettlementPriceEligibility";
    DerivativeInstrAttribType[DerivativeInstrAttribType["NegativeStrikePriceEligibility"] = 37] = "NegativeStrikePriceEligibility";
    DerivativeInstrAttribType[DerivativeInstrAttribType["UsStandardContractIndicator"] = 38] = "UsStandardContractIndicator";
    DerivativeInstrAttribType[DerivativeInstrAttribType["Text"] = 99] = "Text";
})(DerivativeInstrAttribType = exports.DerivativeInstrAttribType || (exports.DerivativeInstrAttribType = {}));
var DerivativePriceUnitOfMeasure;
(function (DerivativePriceUnitOfMeasure) {
    DerivativePriceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    DerivativePriceUnitOfMeasure["Allowances"] = "Alw";
    DerivativePriceUnitOfMeasure["Barrels"] = "Bbl";
    DerivativePriceUnitOfMeasure["CubicMeters"] = "CBM";
    DerivativePriceUnitOfMeasure["BoardFeet"] = "BDFT";
    DerivativePriceUnitOfMeasure["Gigajoules"] = "GJ";
    DerivativePriceUnitOfMeasure["Bushels"] = "Bu";
    DerivativePriceUnitOfMeasure["KilowattHours"] = "kWh";
    DerivativePriceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    DerivativePriceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    DerivativePriceUnitOfMeasure["MegawattHours"] = "MWh";
    DerivativePriceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    DerivativePriceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    DerivativePriceUnitOfMeasure["Therms"] = "thm";
    DerivativePriceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    DerivativePriceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    DerivativePriceUnitOfMeasure["HundredweightUs"] = "cwt";
    DerivativePriceUnitOfMeasure["Days"] = "day";
    DerivativePriceUnitOfMeasure["DryMetricTons"] = "dt";
    DerivativePriceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    DerivativePriceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    DerivativePriceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    DerivativePriceUnitOfMeasure["Grams"] = "g";
    DerivativePriceUnitOfMeasure["Gallons"] = "Gal";
    DerivativePriceUnitOfMeasure["GrossTons"] = "GT";
    DerivativePriceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    DerivativePriceUnitOfMeasure["IndexPoint"] = "IPNT";
    DerivativePriceUnitOfMeasure["Kilograms"] = "kg";
    DerivativePriceUnitOfMeasure["Kiloliters"] = "kL";
    DerivativePriceUnitOfMeasure["KilowattYear"] = "kW-a";
    DerivativePriceUnitOfMeasure["KilowattDay"] = "kW-d";
    DerivativePriceUnitOfMeasure["KilowattHour"] = "kW-h";
    DerivativePriceUnitOfMeasure["KilowattMonth"] = "kW-M";
    DerivativePriceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    DerivativePriceUnitOfMeasure["Liters"] = "L";
    DerivativePriceUnitOfMeasure["Pounds"] = "lbs";
    DerivativePriceUnitOfMeasure["MegawattYear"] = "MW-a";
    DerivativePriceUnitOfMeasure["MegawattDay"] = "MW-d";
    DerivativePriceUnitOfMeasure["MegawattHour"] = "MW-h";
    DerivativePriceUnitOfMeasure["MegawattMonth"] = "MW-M";
    DerivativePriceUnitOfMeasure["MegawattMinute"] = "MW-min";
    DerivativePriceUnitOfMeasure["TroyOunces"] = "oz_tr";
    DerivativePriceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    DerivativePriceUnitOfMeasure["MetricTons"] = "t";
    DerivativePriceUnitOfMeasure["TonsUs"] = "tn";
    DerivativePriceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    DerivativePriceUnitOfMeasure["UsDollars"] = "USD";
})(DerivativePriceUnitOfMeasure = exports.DerivativePriceUnitOfMeasure || (exports.DerivativePriceUnitOfMeasure = {}));
var DerivativeSettlMethod;
(function (DerivativeSettlMethod) {
    DerivativeSettlMethod["CashSettlementRequired"] = "C";
    DerivativeSettlMethod["PhysicalSettlementRequired"] = "P";
    DerivativeSettlMethod["ElectionAtExercise"] = "E";
})(DerivativeSettlMethod = exports.DerivativeSettlMethod || (exports.DerivativeSettlMethod = {}));
var DerivativePriceQuoteMethod;
(function (DerivativePriceQuoteMethod) {
    DerivativePriceQuoteMethod["StandardMoneyPerUnitOfAPhysical"] = "STD";
    DerivativePriceQuoteMethod["Index"] = "INX";
    DerivativePriceQuoteMethod["InterestRateIndex"] = "INT";
    DerivativePriceQuoteMethod["PercentOfPar"] = "PCTPAR";
})(DerivativePriceQuoteMethod = exports.DerivativePriceQuoteMethod || (exports.DerivativePriceQuoteMethod = {}));
var DerivativeValuationMethod;
(function (DerivativeValuationMethod) {
    DerivativeValuationMethod["PremiumStyle"] = "EQTY";
    DerivativeValuationMethod["FuturesStyleMarkToMarket"] = "FUT";
    DerivativeValuationMethod["FuturesStyleWithAnAttachedCashAdjustment"] = "FUTDA";
    DerivativeValuationMethod["CdsStyleCollateralizationOfMarketToMarketAndCoupon"] = "CDS";
    DerivativeValuationMethod["CdsInDeliveryUseRecoveryRateToCalculateObligation"] = "CDSD";
})(DerivativeValuationMethod = exports.DerivativeValuationMethod || (exports.DerivativeValuationMethod = {}));
var DerivativeListMethod;
(function (DerivativeListMethod) {
    DerivativeListMethod[DerivativeListMethod["PreListedOnly"] = 0] = "PreListedOnly";
    DerivativeListMethod[DerivativeListMethod["UserRequested"] = 1] = "UserRequested";
})(DerivativeListMethod = exports.DerivativeListMethod || (exports.DerivativeListMethod = {}));
var DerivativePutOrCall;
(function (DerivativePutOrCall) {
    DerivativePutOrCall[DerivativePutOrCall["Put"] = 0] = "Put";
    DerivativePutOrCall[DerivativePutOrCall["Call"] = 1] = "Call";
})(DerivativePutOrCall = exports.DerivativePutOrCall || (exports.DerivativePutOrCall = {}));
var ListUpdateAction;
(function (ListUpdateAction) {
    ListUpdateAction["Add"] = "A";
    ListUpdateAction["Delete"] = "D";
    ListUpdateAction["Modify"] = "M";
    ListUpdateAction["Snapshot"] = "S";
})(ListUpdateAction = exports.ListUpdateAction || (exports.ListUpdateAction = {}));
var TradSesUpdateAction;
(function (TradSesUpdateAction) {
    TradSesUpdateAction["Add"] = "A";
    TradSesUpdateAction["Delete"] = "D";
    TradSesUpdateAction["Modify"] = "M";
})(TradSesUpdateAction = exports.TradSesUpdateAction || (exports.TradSesUpdateAction = {}));
var ApplReqType;
(function (ApplReqType) {
    ApplReqType[ApplReqType["RetransmissionOfApplicationMessagesForTheSpecifiedApplications"] = 0] = "RetransmissionOfApplicationMessagesForTheSpecifiedApplications";
    ApplReqType[ApplReqType["SubscriptionToTheSpecifiedApplications"] = 1] = "SubscriptionToTheSpecifiedApplications";
    ApplReqType[ApplReqType["RequestForTheLastApplLastSeqNumPublishedForTheSpecifiedApplications"] = 2] = "RequestForTheLastApplLastSeqNumPublishedForTheSpecifiedApplications";
    ApplReqType[ApplReqType["RequestValidSetOfApplications"] = 3] = "RequestValidSetOfApplications";
    ApplReqType[ApplReqType["UnsubscribeToTheSpecifiedApplications"] = 4] = "UnsubscribeToTheSpecifiedApplications";
    ApplReqType[ApplReqType["CancelRetransmission"] = 5] = "CancelRetransmission";
    ApplReqType[ApplReqType["CancelRetransmissionAndUnsubscribeToTheSpecifiedApplications"] = 6] = "CancelRetransmissionAndUnsubscribeToTheSpecifiedApplications";
})(ApplReqType = exports.ApplReqType || (exports.ApplReqType = {}));
var ApplResponseType;
(function (ApplResponseType) {
    ApplResponseType[ApplResponseType["RequestSuccessfullyProcessed"] = 0] = "RequestSuccessfullyProcessed";
    ApplResponseType[ApplResponseType["ApplicationDoesNotExist"] = 1] = "ApplicationDoesNotExist";
    ApplResponseType[ApplResponseType["MessagesNotAvailable"] = 2] = "MessagesNotAvailable";
})(ApplResponseType = exports.ApplResponseType || (exports.ApplResponseType = {}));
var ApplResponseError;
(function (ApplResponseError) {
    ApplResponseError[ApplResponseError["ApplicationDoesNotExist"] = 0] = "ApplicationDoesNotExist";
    ApplResponseError[ApplResponseError["MessagesRequestedAreNotAvailable"] = 1] = "MessagesRequestedAreNotAvailable";
    ApplResponseError[ApplResponseError["UserNotAuthorizedForApplication"] = 2] = "UserNotAuthorizedForApplication";
})(ApplResponseError = exports.ApplResponseError || (exports.ApplResponseError = {}));
var LegPutOrCall;
(function (LegPutOrCall) {
    LegPutOrCall[LegPutOrCall["Put"] = 0] = "Put";
    LegPutOrCall[LegPutOrCall["Call"] = 1] = "Call";
})(LegPutOrCall = exports.LegPutOrCall || (exports.LegPutOrCall = {}));
var TradSesEvent;
(function (TradSesEvent) {
    TradSesEvent[TradSesEvent["TradingResumesAfterHalt"] = 0] = "TradingResumesAfterHalt";
    TradSesEvent[TradSesEvent["ChangeOfTradingSession"] = 1] = "ChangeOfTradingSession";
    TradSesEvent[TradSesEvent["ChangeOfTradingSubsession"] = 2] = "ChangeOfTradingSubsession";
    TradSesEvent[TradSesEvent["ChangeOfTradingStatus"] = 3] = "ChangeOfTradingStatus";
})(TradSesEvent = exports.TradSesEvent || (exports.TradSesEvent = {}));
var MassActionType;
(function (MassActionType) {
    MassActionType[MassActionType["SuspendOrders"] = 1] = "SuspendOrders";
    MassActionType[MassActionType["ReleaseOrdersFromSuspension"] = 2] = "ReleaseOrdersFromSuspension";
    MassActionType[MassActionType["CancelOrders"] = 3] = "CancelOrders";
})(MassActionType = exports.MassActionType || (exports.MassActionType = {}));
var MassActionScope;
(function (MassActionScope) {
    MassActionScope[MassActionScope["AllOrdersForASecurity"] = 1] = "AllOrdersForASecurity";
    MassActionScope[MassActionScope["AllOrdersForAnUnderlyingSecurity"] = 2] = "AllOrdersForAnUnderlyingSecurity";
    MassActionScope[MassActionScope["AllOrdersForAProduct"] = 3] = "AllOrdersForAProduct";
    MassActionScope[MassActionScope["AllOrdersForACfiCode"] = 4] = "AllOrdersForACfiCode";
    MassActionScope[MassActionScope["AllOrdersForASecurityType"] = 5] = "AllOrdersForASecurityType";
    MassActionScope[MassActionScope["AllOrdersForATradingSession"] = 6] = "AllOrdersForATradingSession";
    MassActionScope[MassActionScope["AllOrders"] = 7] = "AllOrders";
    MassActionScope[MassActionScope["AllOrdersForAMarket"] = 8] = "AllOrdersForAMarket";
    MassActionScope[MassActionScope["AllOrdersForAMarketSegmentOrMultipleSegments"] = 9] = "AllOrdersForAMarketSegmentOrMultipleSegments";
    MassActionScope[MassActionScope["AllOrdersForASecurityGroup"] = 10] = "AllOrdersForASecurityGroup";
    MassActionScope[MassActionScope["CancelForSecurityIssuer"] = 11] = "CancelForSecurityIssuer";
    MassActionScope[MassActionScope["CancelForIssuerOfUnderlyingSecurity"] = 12] = "CancelForIssuerOfUnderlyingSecurity";
})(MassActionScope = exports.MassActionScope || (exports.MassActionScope = {}));
var MassActionResponse;
(function (MassActionResponse) {
    MassActionResponse[MassActionResponse["RejectedSeeMassActionRejectReason1376"] = 0] = "RejectedSeeMassActionRejectReason1376";
    MassActionResponse[MassActionResponse["Accepted"] = 1] = "Accepted";
    MassActionResponse[MassActionResponse["Completed"] = 2] = "Completed";
})(MassActionResponse = exports.MassActionResponse || (exports.MassActionResponse = {}));
var MassActionRejectReason;
(function (MassActionRejectReason) {
    MassActionRejectReason[MassActionRejectReason["MassActionNotSupported"] = 0] = "MassActionNotSupported";
    MassActionRejectReason[MassActionRejectReason["InvalidOrUnknownSecurity"] = 1] = "InvalidOrUnknownSecurity";
    MassActionRejectReason[MassActionRejectReason["InvalidOrUnknownUnderlyingSecurity"] = 2] = "InvalidOrUnknownUnderlyingSecurity";
    MassActionRejectReason[MassActionRejectReason["InvalidOrUnknownProduct"] = 3] = "InvalidOrUnknownProduct";
    MassActionRejectReason[MassActionRejectReason["InvalidOrUnknownCfiCode"] = 4] = "InvalidOrUnknownCfiCode";
    MassActionRejectReason[MassActionRejectReason["InvalidOrUnknownSecurityType"] = 5] = "InvalidOrUnknownSecurityType";
    MassActionRejectReason[MassActionRejectReason["InvalidOrUnknownTradingSession"] = 6] = "InvalidOrUnknownTradingSession";
    MassActionRejectReason[MassActionRejectReason["InvalidOrUnknownMarket"] = 7] = "InvalidOrUnknownMarket";
    MassActionRejectReason[MassActionRejectReason["InvalidOrUnknownMarketSegment"] = 8] = "InvalidOrUnknownMarketSegment";
    MassActionRejectReason[MassActionRejectReason["InvalidOrUnknownSecurityGroup"] = 9] = "InvalidOrUnknownSecurityGroup";
    MassActionRejectReason[MassActionRejectReason["InvalidOrUnknownSecurityIssuer"] = 10] = "InvalidOrUnknownSecurityIssuer";
    MassActionRejectReason[MassActionRejectReason["InvalidOrUnknownIssuerOfUnderlyingSecurity"] = 11] = "InvalidOrUnknownIssuerOfUnderlyingSecurity";
    MassActionRejectReason[MassActionRejectReason["Other"] = 99] = "Other";
})(MassActionRejectReason = exports.MassActionRejectReason || (exports.MassActionRejectReason = {}));
var MultilegModel;
(function (MultilegModel) {
    MultilegModel[MultilegModel["PredefinedMultilegSecurity"] = 0] = "PredefinedMultilegSecurity";
    MultilegModel[MultilegModel["UserDefinedMultilegSecurity"] = 1] = "UserDefinedMultilegSecurity";
    MultilegModel[MultilegModel["UserDefinedNonSecuritizedMultileg"] = 2] = "UserDefinedNonSecuritizedMultileg";
})(MultilegModel = exports.MultilegModel || (exports.MultilegModel = {}));
var MultilegPriceMethod;
(function (MultilegPriceMethod) {
    MultilegPriceMethod[MultilegPriceMethod["NetPrice"] = 0] = "NetPrice";
    MultilegPriceMethod[MultilegPriceMethod["ReversedNetPrice"] = 1] = "ReversedNetPrice";
    MultilegPriceMethod[MultilegPriceMethod["YieldDifference"] = 2] = "YieldDifference";
    MultilegPriceMethod[MultilegPriceMethod["Individual"] = 3] = "Individual";
    MultilegPriceMethod[MultilegPriceMethod["ContractWeightedAveragePrice"] = 4] = "ContractWeightedAveragePrice";
    MultilegPriceMethod[MultilegPriceMethod["MultipliedPrice"] = 5] = "MultipliedPrice";
})(MultilegPriceMethod = exports.MultilegPriceMethod || (exports.MultilegPriceMethod = {}));
var LegExecInst;
(function (LegExecInst) {
    LegExecInst["StayOnOfferSide"] = "0";
    LegExecInst["NotHeld"] = "1";
    LegExecInst["Work"] = "2";
    LegExecInst["GoAlong"] = "3";
    LegExecInst["OverTheDay"] = "4";
    LegExecInst["Held"] = "5";
    LegExecInst["ParticipateDontInitiate"] = "6";
    LegExecInst["StrictScale"] = "7";
    LegExecInst["TryToScale"] = "8";
    LegExecInst["StayOnBidSide"] = "9";
    LegExecInst["NoCross"] = "A";
    LegExecInst["OkToCross"] = "B";
    LegExecInst["CallFirst"] = "C";
    LegExecInst["PercentOfVolume"] = "D";
    LegExecInst["DoNotIncreaseDni"] = "E";
    LegExecInst["DoNotReduceDnr"] = "F";
    LegExecInst["AllOrNoneAon"] = "G";
    LegExecInst["ReinstateOnSystemFailure"] = "H";
    LegExecInst["InstitutionsOnly"] = "I";
    LegExecInst["ReinstateOnTradingHalt"] = "J";
    LegExecInst["CancelOnTradingHalt"] = "K";
    LegExecInst["LastPegLastSale"] = "L";
    LegExecInst["MidPricePegMidpriceOfInsideQuote"] = "M";
    LegExecInst["NonNegotiable"] = "N";
    LegExecInst["OpeningPeg"] = "O";
    LegExecInst["MarketPeg"] = "P";
    LegExecInst["CancelOnSystemFailure"] = "Q";
    LegExecInst["PrimaryPeg"] = "R";
    LegExecInst["Suspend"] = "S";
    LegExecInst["FixedPegToLocalBestBidOrOfferAtTimeOfOrder"] = "T";
    LegExecInst["CustomerDisplayInstruction"] = "U";
    LegExecInst["NettingForForex"] = "V";
    LegExecInst["PegToVwap"] = "W";
    LegExecInst["TradeAlong"] = "X";
    LegExecInst["TryToStop"] = "Y";
    LegExecInst["CancelIfNotBest"] = "Z";
    LegExecInst["TrailingStopPeg"] = "a";
    LegExecInst["StrictLimit"] = "b";
    LegExecInst["IgnorePriceValidityChecks"] = "c";
    LegExecInst["PegToLimitPrice"] = "d";
    LegExecInst["WorkToTargetStrategy"] = "e";
    LegExecInst["IntermarketSweep"] = "f";
    LegExecInst["ExternalRoutingAllowed"] = "g";
    LegExecInst["ExternalRoutingNotAllowed"] = "h";
    LegExecInst["ImbalanceOnly"] = "i";
    LegExecInst["SingleExecutionRequestedForBlockTrade"] = "j";
    LegExecInst["BestExecution"] = "k";
    LegExecInst["SuspendOnSystemFailure"] = "l";
    LegExecInst["SuspendOnTradingHalt"] = "m";
    LegExecInst["ReinstateOnConnectionLoss"] = "n";
    LegExecInst["CancelOnConnectionLoss"] = "o";
    LegExecInst["SuspendOnConnectionLoss"] = "p";
    LegExecInst["Release"] = "q";
    LegExecInst["ExecuteAsDeltaNeutralUsingVolatilityProvided"] = "r";
    LegExecInst["ExecuteAsDurationNeutral"] = "s";
    LegExecInst["ExecuteAsFxNeutral"] = "t";
    LegExecInst["MinimumGuaranteedFillEligible"] = "u";
    LegExecInst["BypassNonDisplayedLiquidity"] = "v";
    LegExecInst["Lock"] = "w";
    LegExecInst["IgnoreNotionalValueChecks"] = "x";
    LegExecInst["TradeAtReferencePrice"] = "y";
})(LegExecInst = exports.LegExecInst || (exports.LegExecInst = {}));
var ContingencyType;
(function (ContingencyType) {
    ContingencyType[ContingencyType["OneCancelsTheOtherOco"] = 1] = "OneCancelsTheOtherOco";
    ContingencyType[ContingencyType["OneTriggersTheOtherOto"] = 2] = "OneTriggersTheOtherOto";
    ContingencyType[ContingencyType["OneUpdatesTheOtherOuoAbsoluteQuantityReduction"] = 3] = "OneUpdatesTheOtherOuoAbsoluteQuantityReduction";
    ContingencyType[ContingencyType["OneUpdatesTheOtherOuoProportionalQuantityReduction"] = 4] = "OneUpdatesTheOtherOuoProportionalQuantityReduction";
    ContingencyType[ContingencyType["BidAndOffer"] = 5] = "BidAndOffer";
    ContingencyType[ContingencyType["BidAndOfferOco"] = 6] = "BidAndOfferOco";
})(ContingencyType = exports.ContingencyType || (exports.ContingencyType = {}));
var ListRejectReason;
(function (ListRejectReason) {
    ListRejectReason[ListRejectReason["BrokerExchangeOption"] = 0] = "BrokerExchangeOption";
    ListRejectReason[ListRejectReason["ExchangeClosed"] = 2] = "ExchangeClosed";
    ListRejectReason[ListRejectReason["TooLateToEnter"] = 4] = "TooLateToEnter";
    ListRejectReason[ListRejectReason["UnknownOrder"] = 5] = "UnknownOrder";
    ListRejectReason[ListRejectReason["DuplicateOrderEGDupeClOrdId"] = 6] = "DuplicateOrderEGDupeClOrdId";
    ListRejectReason[ListRejectReason["UnsupportedOrderCharacteristic"] = 11] = "UnsupportedOrderCharacteristic";
    ListRejectReason[ListRejectReason["Other"] = 99] = "Other";
})(ListRejectReason = exports.ListRejectReason || (exports.ListRejectReason = {}));
var TrdRepPartyRole;
(function (TrdRepPartyRole) {
    TrdRepPartyRole[TrdRepPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    TrdRepPartyRole[TrdRepPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    TrdRepPartyRole[TrdRepPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    TrdRepPartyRole[TrdRepPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    TrdRepPartyRole[TrdRepPartyRole["InvestorId"] = 5] = "InvestorId";
    TrdRepPartyRole[TrdRepPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    TrdRepPartyRole[TrdRepPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    TrdRepPartyRole[TrdRepPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    TrdRepPartyRole[TrdRepPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    TrdRepPartyRole[TrdRepPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    TrdRepPartyRole[TrdRepPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    TrdRepPartyRole[TrdRepPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    TrdRepPartyRole[TrdRepPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    TrdRepPartyRole[TrdRepPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    TrdRepPartyRole[TrdRepPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    TrdRepPartyRole[TrdRepPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    TrdRepPartyRole[TrdRepPartyRole["ContraFirm"] = 17] = "ContraFirm";
    TrdRepPartyRole[TrdRepPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    TrdRepPartyRole[TrdRepPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    TrdRepPartyRole[TrdRepPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    TrdRepPartyRole[TrdRepPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    TrdRepPartyRole[TrdRepPartyRole["Exchange"] = 22] = "Exchange";
    TrdRepPartyRole[TrdRepPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    TrdRepPartyRole[TrdRepPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    TrdRepPartyRole[TrdRepPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    TrdRepPartyRole[TrdRepPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    TrdRepPartyRole[TrdRepPartyRole["Custodian"] = 28] = "Custodian";
    TrdRepPartyRole[TrdRepPartyRole["Intermediary"] = 29] = "Intermediary";
    TrdRepPartyRole[TrdRepPartyRole["Agent"] = 30] = "Agent";
    TrdRepPartyRole[TrdRepPartyRole["SubCustodian"] = 31] = "SubCustodian";
    TrdRepPartyRole[TrdRepPartyRole["Beneficiary"] = 32] = "Beneficiary";
    TrdRepPartyRole[TrdRepPartyRole["InterestedParty"] = 33] = "InterestedParty";
    TrdRepPartyRole[TrdRepPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    TrdRepPartyRole[TrdRepPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    TrdRepPartyRole[TrdRepPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    TrdRepPartyRole[TrdRepPartyRole["ContraTrader"] = 37] = "ContraTrader";
    TrdRepPartyRole[TrdRepPartyRole["PositionAccount"] = 38] = "PositionAccount";
    TrdRepPartyRole[TrdRepPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    TrdRepPartyRole[TrdRepPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    TrdRepPartyRole[TrdRepPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    TrdRepPartyRole[TrdRepPartyRole["ContraExchange"] = 42] = "ContraExchange";
    TrdRepPartyRole[TrdRepPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    TrdRepPartyRole[TrdRepPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    TrdRepPartyRole[TrdRepPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    TrdRepPartyRole[TrdRepPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    TrdRepPartyRole[TrdRepPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    TrdRepPartyRole[TrdRepPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    TrdRepPartyRole[TrdRepPartyRole["AssetManager"] = 49] = "AssetManager";
    TrdRepPartyRole[TrdRepPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    TrdRepPartyRole[TrdRepPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    TrdRepPartyRole[TrdRepPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    TrdRepPartyRole[TrdRepPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    TrdRepPartyRole[TrdRepPartyRole["SenderLocation"] = 54] = "SenderLocation";
    TrdRepPartyRole[TrdRepPartyRole["SessionId"] = 55] = "SessionId";
    TrdRepPartyRole[TrdRepPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    TrdRepPartyRole[TrdRepPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    TrdRepPartyRole[TrdRepPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    TrdRepPartyRole[TrdRepPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    TrdRepPartyRole[TrdRepPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    TrdRepPartyRole[TrdRepPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    TrdRepPartyRole[TrdRepPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    TrdRepPartyRole[TrdRepPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    TrdRepPartyRole[TrdRepPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    TrdRepPartyRole[TrdRepPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    TrdRepPartyRole[TrdRepPartyRole["MarketMaker"] = 66] = "MarketMaker";
    TrdRepPartyRole[TrdRepPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    TrdRepPartyRole[TrdRepPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    TrdRepPartyRole[TrdRepPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    TrdRepPartyRole[TrdRepPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    TrdRepPartyRole[TrdRepPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    TrdRepPartyRole[TrdRepPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    TrdRepPartyRole[TrdRepPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    TrdRepPartyRole[TrdRepPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    TrdRepPartyRole[TrdRepPartyRole["LocationId"] = 75] = "LocationId";
    TrdRepPartyRole[TrdRepPartyRole["DeskId"] = 76] = "DeskId";
    TrdRepPartyRole[TrdRepPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    TrdRepPartyRole[TrdRepPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    TrdRepPartyRole[TrdRepPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    TrdRepPartyRole[TrdRepPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    TrdRepPartyRole[TrdRepPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    TrdRepPartyRole[TrdRepPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    TrdRepPartyRole[TrdRepPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    TrdRepPartyRole[TrdRepPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    TrdRepPartyRole[TrdRepPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    TrdRepPartyRole[TrdRepPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    TrdRepPartyRole[TrdRepPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    TrdRepPartyRole[TrdRepPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    TrdRepPartyRole[TrdRepPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    TrdRepPartyRole[TrdRepPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    TrdRepPartyRole[TrdRepPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    TrdRepPartyRole[TrdRepPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    TrdRepPartyRole[TrdRepPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    TrdRepPartyRole[TrdRepPartyRole["AwayMarket"] = 94] = "AwayMarket";
    TrdRepPartyRole[TrdRepPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    TrdRepPartyRole[TrdRepPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    TrdRepPartyRole[TrdRepPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    TrdRepPartyRole[TrdRepPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    TrdRepPartyRole[TrdRepPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    TrdRepPartyRole[TrdRepPartyRole["MarginAccount"] = 100] = "MarginAccount";
    TrdRepPartyRole[TrdRepPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    TrdRepPartyRole[TrdRepPartyRole["DataRepository"] = 102] = "DataRepository";
    TrdRepPartyRole[TrdRepPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    TrdRepPartyRole[TrdRepPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    TrdRepPartyRole[TrdRepPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    TrdRepPartyRole[TrdRepPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    TrdRepPartyRole[TrdRepPartyRole["Correspondent"] = 107] = "Correspondent";
    TrdRepPartyRole[TrdRepPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    TrdRepPartyRole[TrdRepPartyRole["Borrower"] = 110] = "Borrower";
    TrdRepPartyRole[TrdRepPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    TrdRepPartyRole[TrdRepPartyRole["Guarantor"] = 112] = "Guarantor";
    TrdRepPartyRole[TrdRepPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    TrdRepPartyRole[TrdRepPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    TrdRepPartyRole[TrdRepPartyRole["HedgingParty"] = 115] = "HedgingParty";
    TrdRepPartyRole[TrdRepPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    TrdRepPartyRole[TrdRepPartyRole["SalesPerson"] = 117] = "SalesPerson";
    TrdRepPartyRole[TrdRepPartyRole["Operator"] = 118] = "Operator";
    TrdRepPartyRole[TrdRepPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    TrdRepPartyRole[TrdRepPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    TrdRepPartyRole[TrdRepPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    TrdRepPartyRole[TrdRepPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(TrdRepPartyRole = exports.TrdRepPartyRole || (exports.TrdRepPartyRole = {}));
var TradePublishIndicator;
(function (TradePublishIndicator) {
    TradePublishIndicator[TradePublishIndicator["DoNotPublishTrade"] = 0] = "DoNotPublishTrade";
    TradePublishIndicator[TradePublishIndicator["PublishTrade"] = 1] = "PublishTrade";
    TradePublishIndicator[TradePublishIndicator["DeferredPublication"] = 2] = "DeferredPublication";
})(TradePublishIndicator = exports.TradePublishIndicator || (exports.TradePublishIndicator = {}));
var MarketUpdateAction;
(function (MarketUpdateAction) {
    MarketUpdateAction["Add"] = "A";
    MarketUpdateAction["Delete"] = "D";
    MarketUpdateAction["Modify"] = "M";
})(MarketUpdateAction = exports.MarketUpdateAction || (exports.MarketUpdateAction = {}));
var SessionStatus;
(function (SessionStatus) {
    SessionStatus[SessionStatus["SessionActive"] = 0] = "SessionActive";
    SessionStatus[SessionStatus["SessionPasswordChanged"] = 1] = "SessionPasswordChanged";
    SessionStatus[SessionStatus["SessionPasswordDueToExpire"] = 2] = "SessionPasswordDueToExpire";
    SessionStatus[SessionStatus["NewSessionPasswordDoesNotComplyWithPolicy"] = 3] = "NewSessionPasswordDoesNotComplyWithPolicy";
    SessionStatus[SessionStatus["SessionLogoutComplete"] = 4] = "SessionLogoutComplete";
    SessionStatus[SessionStatus["InvalidUsernameOrPassword"] = 5] = "InvalidUsernameOrPassword";
    SessionStatus[SessionStatus["AccountLocked"] = 6] = "AccountLocked";
    SessionStatus[SessionStatus["LogonsAreNotAllowedAtThisTime"] = 7] = "LogonsAreNotAllowedAtThisTime";
    SessionStatus[SessionStatus["PasswordExpired"] = 8] = "PasswordExpired";
    SessionStatus[SessionStatus["ReceivedMsgSeqNum34IsTooLow"] = 9] = "ReceivedMsgSeqNum34IsTooLow";
    SessionStatus[SessionStatus["ReceivedNextExpectedMsgSeqNum789IsTooHigh"] = 10] = "ReceivedNextExpectedMsgSeqNum789IsTooHigh";
})(SessionStatus = exports.SessionStatus || (exports.SessionStatus = {}));
var Nested4PartySubIDType;
(function (Nested4PartySubIDType) {
    Nested4PartySubIDType[Nested4PartySubIDType["Firm"] = 1] = "Firm";
    Nested4PartySubIDType[Nested4PartySubIDType["Person"] = 2] = "Person";
    Nested4PartySubIDType[Nested4PartySubIDType["System"] = 3] = "System";
    Nested4PartySubIDType[Nested4PartySubIDType["Application"] = 4] = "Application";
    Nested4PartySubIDType[Nested4PartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    Nested4PartySubIDType[Nested4PartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    Nested4PartySubIDType[Nested4PartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    Nested4PartySubIDType[Nested4PartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    Nested4PartySubIDType[Nested4PartySubIDType["ContactName"] = 9] = "ContactName";
    Nested4PartySubIDType[Nested4PartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    Nested4PartySubIDType[Nested4PartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    Nested4PartySubIDType[Nested4PartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    Nested4PartySubIDType[Nested4PartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    Nested4PartySubIDType[Nested4PartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    Nested4PartySubIDType[Nested4PartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    Nested4PartySubIDType[Nested4PartySubIDType["Bic"] = 16] = "Bic";
    Nested4PartySubIDType[Nested4PartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    Nested4PartySubIDType[Nested4PartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    Nested4PartySubIDType[Nested4PartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    Nested4PartySubIDType[Nested4PartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    Nested4PartySubIDType[Nested4PartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    Nested4PartySubIDType[Nested4PartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    Nested4PartySubIDType[Nested4PartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    Nested4PartySubIDType[Nested4PartySubIDType["Department"] = 24] = "Department";
    Nested4PartySubIDType[Nested4PartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    Nested4PartySubIDType[Nested4PartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    Nested4PartySubIDType[Nested4PartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    Nested4PartySubIDType[Nested4PartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    Nested4PartySubIDType[Nested4PartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    Nested4PartySubIDType[Nested4PartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    Nested4PartySubIDType[Nested4PartySubIDType["Location"] = 31] = "Location";
    Nested4PartySubIDType[Nested4PartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    Nested4PartySubIDType[Nested4PartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    Nested4PartySubIDType[Nested4PartySubIDType["AddressCity"] = 34] = "AddressCity";
    Nested4PartySubIDType[Nested4PartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    Nested4PartySubIDType[Nested4PartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    Nested4PartySubIDType[Nested4PartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    Nested4PartySubIDType[Nested4PartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    Nested4PartySubIDType[Nested4PartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    Nested4PartySubIDType[Nested4PartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    Nested4PartySubIDType[Nested4PartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    Nested4PartySubIDType[Nested4PartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    Nested4PartySubIDType[Nested4PartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    Nested4PartySubIDType[Nested4PartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    Nested4PartySubIDType[Nested4PartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    Nested4PartySubIDType[Nested4PartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    Nested4PartySubIDType[Nested4PartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    Nested4PartySubIDType[Nested4PartySubIDType["USPerson"] = 48] = "USPerson";
    Nested4PartySubIDType[Nested4PartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    Nested4PartySubIDType[Nested4PartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    Nested4PartySubIDType[Nested4PartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    Nested4PartySubIDType[Nested4PartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    Nested4PartySubIDType[Nested4PartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    Nested4PartySubIDType[Nested4PartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    Nested4PartySubIDType[Nested4PartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    Nested4PartySubIDType[Nested4PartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    Nested4PartySubIDType[Nested4PartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    Nested4PartySubIDType[Nested4PartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    Nested4PartySubIDType[Nested4PartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    Nested4PartySubIDType[Nested4PartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    Nested4PartySubIDType[Nested4PartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    Nested4PartySubIDType[Nested4PartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    Nested4PartySubIDType[Nested4PartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    Nested4PartySubIDType[Nested4PartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    Nested4PartySubIDType[Nested4PartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    Nested4PartySubIDType[Nested4PartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    Nested4PartySubIDType[Nested4PartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    Nested4PartySubIDType[Nested4PartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    Nested4PartySubIDType[Nested4PartySubIDType["EndUser"] = 69] = "EndUser";
    Nested4PartySubIDType[Nested4PartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    Nested4PartySubIDType[Nested4PartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    Nested4PartySubIDType[Nested4PartySubIDType["Domicile"] = 72] = "Domicile";
    Nested4PartySubIDType[Nested4PartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    Nested4PartySubIDType[Nested4PartySubIDType["Payer"] = 74] = "Payer";
    Nested4PartySubIDType[Nested4PartySubIDType["Receiver"] = 75] = "Receiver";
    Nested4PartySubIDType[Nested4PartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(Nested4PartySubIDType = exports.Nested4PartySubIDType || (exports.Nested4PartySubIDType = {}));
var Nested4PartyIDSource;
(function (Nested4PartyIDSource) {
    Nested4PartyIDSource["KoreanInvestorId"] = "1";
    Nested4PartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    Nested4PartyIDSource["TaiwaneseTradingAcct"] = "3";
    Nested4PartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    Nested4PartyIDSource["ChineseInvestorId"] = "5";
    Nested4PartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    Nested4PartyIDSource["UsSocialSecurityNumber"] = "7";
    Nested4PartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    Nested4PartyIDSource["AustralianBusinessNumber"] = "9";
    Nested4PartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    Nested4PartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    Nested4PartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    Nested4PartyIDSource["ProprietaryCustomCode"] = "D";
    Nested4PartyIDSource["IsoCountryCode"] = "E";
    Nested4PartyIDSource["AustralianTaxFileNumber"] = "A";
    Nested4PartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    Nested4PartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    Nested4PartyIDSource["TaxId"] = "J";
    Nested4PartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    Nested4PartyIDSource["AustralianCompanyNumber"] = "K";
    Nested4PartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    Nested4PartyIDSource["CftcReportingFirmIdentifier"] = "M";
    Nested4PartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    Nested4PartyIDSource["InterimIdentifier"] = "O";
    Nested4PartyIDSource["ShortCodeIdentifier"] = "P";
    Nested4PartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(Nested4PartyIDSource = exports.Nested4PartyIDSource || (exports.Nested4PartyIDSource = {}));
var Nested4PartyRole;
(function (Nested4PartyRole) {
    Nested4PartyRole[Nested4PartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    Nested4PartyRole[Nested4PartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    Nested4PartyRole[Nested4PartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    Nested4PartyRole[Nested4PartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    Nested4PartyRole[Nested4PartyRole["InvestorId"] = 5] = "InvestorId";
    Nested4PartyRole[Nested4PartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    Nested4PartyRole[Nested4PartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    Nested4PartyRole[Nested4PartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    Nested4PartyRole[Nested4PartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    Nested4PartyRole[Nested4PartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    Nested4PartyRole[Nested4PartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    Nested4PartyRole[Nested4PartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    Nested4PartyRole[Nested4PartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    Nested4PartyRole[Nested4PartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    Nested4PartyRole[Nested4PartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    Nested4PartyRole[Nested4PartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    Nested4PartyRole[Nested4PartyRole["ContraFirm"] = 17] = "ContraFirm";
    Nested4PartyRole[Nested4PartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    Nested4PartyRole[Nested4PartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    Nested4PartyRole[Nested4PartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    Nested4PartyRole[Nested4PartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    Nested4PartyRole[Nested4PartyRole["Exchange"] = 22] = "Exchange";
    Nested4PartyRole[Nested4PartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    Nested4PartyRole[Nested4PartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    Nested4PartyRole[Nested4PartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    Nested4PartyRole[Nested4PartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    Nested4PartyRole[Nested4PartyRole["Custodian"] = 28] = "Custodian";
    Nested4PartyRole[Nested4PartyRole["Intermediary"] = 29] = "Intermediary";
    Nested4PartyRole[Nested4PartyRole["Agent"] = 30] = "Agent";
    Nested4PartyRole[Nested4PartyRole["SubCustodian"] = 31] = "SubCustodian";
    Nested4PartyRole[Nested4PartyRole["Beneficiary"] = 32] = "Beneficiary";
    Nested4PartyRole[Nested4PartyRole["InterestedParty"] = 33] = "InterestedParty";
    Nested4PartyRole[Nested4PartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    Nested4PartyRole[Nested4PartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    Nested4PartyRole[Nested4PartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    Nested4PartyRole[Nested4PartyRole["ContraTrader"] = 37] = "ContraTrader";
    Nested4PartyRole[Nested4PartyRole["PositionAccount"] = 38] = "PositionAccount";
    Nested4PartyRole[Nested4PartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    Nested4PartyRole[Nested4PartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    Nested4PartyRole[Nested4PartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    Nested4PartyRole[Nested4PartyRole["ContraExchange"] = 42] = "ContraExchange";
    Nested4PartyRole[Nested4PartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    Nested4PartyRole[Nested4PartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    Nested4PartyRole[Nested4PartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    Nested4PartyRole[Nested4PartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    Nested4PartyRole[Nested4PartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    Nested4PartyRole[Nested4PartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    Nested4PartyRole[Nested4PartyRole["AssetManager"] = 49] = "AssetManager";
    Nested4PartyRole[Nested4PartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    Nested4PartyRole[Nested4PartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    Nested4PartyRole[Nested4PartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    Nested4PartyRole[Nested4PartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    Nested4PartyRole[Nested4PartyRole["SenderLocation"] = 54] = "SenderLocation";
    Nested4PartyRole[Nested4PartyRole["SessionId"] = 55] = "SessionId";
    Nested4PartyRole[Nested4PartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    Nested4PartyRole[Nested4PartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    Nested4PartyRole[Nested4PartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    Nested4PartyRole[Nested4PartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    Nested4PartyRole[Nested4PartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    Nested4PartyRole[Nested4PartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    Nested4PartyRole[Nested4PartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    Nested4PartyRole[Nested4PartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    Nested4PartyRole[Nested4PartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    Nested4PartyRole[Nested4PartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    Nested4PartyRole[Nested4PartyRole["MarketMaker"] = 66] = "MarketMaker";
    Nested4PartyRole[Nested4PartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    Nested4PartyRole[Nested4PartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    Nested4PartyRole[Nested4PartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    Nested4PartyRole[Nested4PartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    Nested4PartyRole[Nested4PartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    Nested4PartyRole[Nested4PartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    Nested4PartyRole[Nested4PartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    Nested4PartyRole[Nested4PartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    Nested4PartyRole[Nested4PartyRole["LocationId"] = 75] = "LocationId";
    Nested4PartyRole[Nested4PartyRole["DeskId"] = 76] = "DeskId";
    Nested4PartyRole[Nested4PartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    Nested4PartyRole[Nested4PartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    Nested4PartyRole[Nested4PartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    Nested4PartyRole[Nested4PartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    Nested4PartyRole[Nested4PartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    Nested4PartyRole[Nested4PartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    Nested4PartyRole[Nested4PartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    Nested4PartyRole[Nested4PartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    Nested4PartyRole[Nested4PartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    Nested4PartyRole[Nested4PartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    Nested4PartyRole[Nested4PartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    Nested4PartyRole[Nested4PartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    Nested4PartyRole[Nested4PartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    Nested4PartyRole[Nested4PartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    Nested4PartyRole[Nested4PartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    Nested4PartyRole[Nested4PartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    Nested4PartyRole[Nested4PartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    Nested4PartyRole[Nested4PartyRole["AwayMarket"] = 94] = "AwayMarket";
    Nested4PartyRole[Nested4PartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    Nested4PartyRole[Nested4PartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    Nested4PartyRole[Nested4PartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    Nested4PartyRole[Nested4PartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    Nested4PartyRole[Nested4PartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    Nested4PartyRole[Nested4PartyRole["MarginAccount"] = 100] = "MarginAccount";
    Nested4PartyRole[Nested4PartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    Nested4PartyRole[Nested4PartyRole["DataRepository"] = 102] = "DataRepository";
    Nested4PartyRole[Nested4PartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    Nested4PartyRole[Nested4PartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    Nested4PartyRole[Nested4PartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    Nested4PartyRole[Nested4PartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    Nested4PartyRole[Nested4PartyRole["Correspondent"] = 107] = "Correspondent";
    Nested4PartyRole[Nested4PartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    Nested4PartyRole[Nested4PartyRole["Borrower"] = 110] = "Borrower";
    Nested4PartyRole[Nested4PartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    Nested4PartyRole[Nested4PartyRole["Guarantor"] = 112] = "Guarantor";
    Nested4PartyRole[Nested4PartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    Nested4PartyRole[Nested4PartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    Nested4PartyRole[Nested4PartyRole["HedgingParty"] = 115] = "HedgingParty";
    Nested4PartyRole[Nested4PartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    Nested4PartyRole[Nested4PartyRole["SalesPerson"] = 117] = "SalesPerson";
    Nested4PartyRole[Nested4PartyRole["Operator"] = 118] = "Operator";
    Nested4PartyRole[Nested4PartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    Nested4PartyRole[Nested4PartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    Nested4PartyRole[Nested4PartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    Nested4PartyRole[Nested4PartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(Nested4PartyRole = exports.Nested4PartyRole || (exports.Nested4PartyRole = {}));
var UnderlyingExerciseStyle;
(function (UnderlyingExerciseStyle) {
    UnderlyingExerciseStyle[UnderlyingExerciseStyle["European"] = 0] = "European";
    UnderlyingExerciseStyle[UnderlyingExerciseStyle["American"] = 1] = "American";
    UnderlyingExerciseStyle[UnderlyingExerciseStyle["Bermuda"] = 2] = "Bermuda";
    UnderlyingExerciseStyle[UnderlyingExerciseStyle["Other"] = 99] = "Other";
})(UnderlyingExerciseStyle = exports.UnderlyingExerciseStyle || (exports.UnderlyingExerciseStyle = {}));
var LegExerciseStyle;
(function (LegExerciseStyle) {
    LegExerciseStyle[LegExerciseStyle["European"] = 0] = "European";
    LegExerciseStyle[LegExerciseStyle["American"] = 1] = "American";
    LegExerciseStyle[LegExerciseStyle["Bermuda"] = 2] = "Bermuda";
    LegExerciseStyle[LegExerciseStyle["Other"] = 99] = "Other";
})(LegExerciseStyle = exports.LegExerciseStyle || (exports.LegExerciseStyle = {}));
var LegPriceUnitOfMeasure;
(function (LegPriceUnitOfMeasure) {
    LegPriceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegPriceUnitOfMeasure["Allowances"] = "Alw";
    LegPriceUnitOfMeasure["Barrels"] = "Bbl";
    LegPriceUnitOfMeasure["CubicMeters"] = "CBM";
    LegPriceUnitOfMeasure["BoardFeet"] = "BDFT";
    LegPriceUnitOfMeasure["Gigajoules"] = "GJ";
    LegPriceUnitOfMeasure["Bushels"] = "Bu";
    LegPriceUnitOfMeasure["KilowattHours"] = "kWh";
    LegPriceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegPriceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegPriceUnitOfMeasure["MegawattHours"] = "MWh";
    LegPriceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegPriceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegPriceUnitOfMeasure["Therms"] = "thm";
    LegPriceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegPriceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegPriceUnitOfMeasure["HundredweightUs"] = "cwt";
    LegPriceUnitOfMeasure["Days"] = "day";
    LegPriceUnitOfMeasure["DryMetricTons"] = "dt";
    LegPriceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegPriceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegPriceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegPriceUnitOfMeasure["Grams"] = "g";
    LegPriceUnitOfMeasure["Gallons"] = "Gal";
    LegPriceUnitOfMeasure["GrossTons"] = "GT";
    LegPriceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegPriceUnitOfMeasure["IndexPoint"] = "IPNT";
    LegPriceUnitOfMeasure["Kilograms"] = "kg";
    LegPriceUnitOfMeasure["Kiloliters"] = "kL";
    LegPriceUnitOfMeasure["KilowattYear"] = "kW-a";
    LegPriceUnitOfMeasure["KilowattDay"] = "kW-d";
    LegPriceUnitOfMeasure["KilowattHour"] = "kW-h";
    LegPriceUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegPriceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegPriceUnitOfMeasure["Liters"] = "L";
    LegPriceUnitOfMeasure["Pounds"] = "lbs";
    LegPriceUnitOfMeasure["MegawattYear"] = "MW-a";
    LegPriceUnitOfMeasure["MegawattDay"] = "MW-d";
    LegPriceUnitOfMeasure["MegawattHour"] = "MW-h";
    LegPriceUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegPriceUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegPriceUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegPriceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegPriceUnitOfMeasure["MetricTons"] = "t";
    LegPriceUnitOfMeasure["TonsUs"] = "tn";
    LegPriceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegPriceUnitOfMeasure["UsDollars"] = "USD";
})(LegPriceUnitOfMeasure = exports.LegPriceUnitOfMeasure || (exports.LegPriceUnitOfMeasure = {}));
var UnderlyingPriceUnitOfMeasure;
(function (UnderlyingPriceUnitOfMeasure) {
    UnderlyingPriceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingPriceUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingPriceUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingPriceUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingPriceUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingPriceUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingPriceUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingPriceUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingPriceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingPriceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingPriceUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingPriceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingPriceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingPriceUnitOfMeasure["Therms"] = "thm";
    UnderlyingPriceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingPriceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingPriceUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingPriceUnitOfMeasure["Days"] = "day";
    UnderlyingPriceUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingPriceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingPriceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingPriceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingPriceUnitOfMeasure["Grams"] = "g";
    UnderlyingPriceUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingPriceUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingPriceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingPriceUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingPriceUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingPriceUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingPriceUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingPriceUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingPriceUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingPriceUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingPriceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingPriceUnitOfMeasure["Liters"] = "L";
    UnderlyingPriceUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingPriceUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingPriceUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingPriceUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingPriceUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingPriceUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingPriceUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingPriceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingPriceUnitOfMeasure["MetricTons"] = "t";
    UnderlyingPriceUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingPriceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingPriceUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingPriceUnitOfMeasure = exports.UnderlyingPriceUnitOfMeasure || (exports.UnderlyingPriceUnitOfMeasure = {}));
var ApplReportType;
(function (ApplReportType) {
    ApplReportType[ApplReportType["ResetApplSeqNumToNewValueSpecifiedInApplNewSeqNum1399"] = 0] = "ResetApplSeqNumToNewValueSpecifiedInApplNewSeqNum1399";
    ApplReportType[ApplReportType["ReportsThatTheLastMessageHasBeenSentForTheApplIDsReferToRefApplLastSeqNum1357ForTheApplicationSequenceNumberOfTheLastMessage"] = 1] = "ReportsThatTheLastMessageHasBeenSentForTheApplIDsReferToRefApplLastSeqNum1357ForTheApplicationSequenceNumberOfTheLastMessage";
    ApplReportType[ApplReportType["HeartbeatMessageIndicatingThatApplicationIdentifiedByRefApplId1355IsStillAliveReferToRefApplLastSeqNum1357ForTheApplicationSequenceNumberOfThePreviousMessage"] = 2] = "HeartbeatMessageIndicatingThatApplicationIdentifiedByRefApplId1355IsStillAliveReferToRefApplLastSeqNum1357ForTheApplicationSequenceNumberOfThePreviousMessage";
    ApplReportType[ApplReportType["ApplicationMessageReSendCompleted"] = 3] = "ApplicationMessageReSendCompleted";
})(ApplReportType = exports.ApplReportType || (exports.ApplReportType = {}));
var OrderDelayUnit;
(function (OrderDelayUnit) {
    OrderDelayUnit[OrderDelayUnit["SecondsDefaultIfNotSpecified"] = 0] = "SecondsDefaultIfNotSpecified";
    OrderDelayUnit[OrderDelayUnit["TenthsOfASecond"] = 1] = "TenthsOfASecond";
    OrderDelayUnit[OrderDelayUnit["HundredthsOfASecond"] = 2] = "HundredthsOfASecond";
    OrderDelayUnit[OrderDelayUnit["Milliseconds"] = 3] = "Milliseconds";
    OrderDelayUnit[OrderDelayUnit["Microseconds"] = 4] = "Microseconds";
    OrderDelayUnit[OrderDelayUnit["Nanoseconds"] = 5] = "Nanoseconds";
    OrderDelayUnit[OrderDelayUnit["Minutes"] = 10] = "Minutes";
    OrderDelayUnit[OrderDelayUnit["Hours"] = 11] = "Hours";
    OrderDelayUnit[OrderDelayUnit["Days"] = 12] = "Days";
    OrderDelayUnit[OrderDelayUnit["Weeks"] = 13] = "Weeks";
    OrderDelayUnit[OrderDelayUnit["Months"] = 14] = "Months";
    OrderDelayUnit[OrderDelayUnit["Years"] = 15] = "Years";
})(OrderDelayUnit = exports.OrderDelayUnit || (exports.OrderDelayUnit = {}));
var VenueType;
(function (VenueType) {
    VenueType["ElectronicExchange"] = "E";
    VenueType["Pit"] = "P";
    VenueType["ExPit"] = "X";
    VenueType["Clearinghouse"] = "C";
    VenueType["RegisteredMarket"] = "R";
    VenueType["OffMarket"] = "O";
    VenueType["CentralLimitOrderBook"] = "B";
    VenueType["QuoteDrivenMarket"] = "Q";
    VenueType["DarkOrderBook"] = "D";
    VenueType["AuctionDrivenMarket"] = "A";
    VenueType["QuoteNegotiation"] = "N";
    VenueType["VoiceNeotiation"] = "V";
    VenueType["HybridMarket"] = "H";
})(VenueType = exports.VenueType || (exports.VenueType = {}));
var RefOrdIDReason;
(function (RefOrdIDReason) {
    RefOrdIDReason[RefOrdIDReason["GtcFromPreviousDay"] = 0] = "GtcFromPreviousDay";
    RefOrdIDReason[RefOrdIDReason["PartialFillRemaining"] = 1] = "PartialFillRemaining";
    RefOrdIDReason[RefOrdIDReason["OrderChanged"] = 2] = "OrderChanged";
})(RefOrdIDReason = exports.RefOrdIDReason || (exports.RefOrdIDReason = {}));
var OrigCustOrderCapacity;
(function (OrigCustOrderCapacity) {
    OrigCustOrderCapacity[OrigCustOrderCapacity["MemberTradingForTheirOwnAccount"] = 1] = "MemberTradingForTheirOwnAccount";
    OrigCustOrderCapacity[OrigCustOrderCapacity["ClearingFirmTradingForItsProprietaryAccount"] = 2] = "ClearingFirmTradingForItsProprietaryAccount";
    OrigCustOrderCapacity[OrigCustOrderCapacity["MemberTradingForAnotherMember"] = 3] = "MemberTradingForAnotherMember";
    OrigCustOrderCapacity[OrigCustOrderCapacity["AllOther"] = 4] = "AllOther";
})(OrigCustOrderCapacity = exports.OrigCustOrderCapacity || (exports.OrigCustOrderCapacity = {}));
var ModelType;
(function (ModelType) {
    ModelType[ModelType["UtilityProvidedStandardModel"] = 0] = "UtilityProvidedStandardModel";
    ModelType[ModelType["ProprietaryUserSuppliedModel"] = 1] = "ProprietaryUserSuppliedModel";
})(ModelType = exports.ModelType || (exports.ModelType = {}));
var ContractMultiplierUnit;
(function (ContractMultiplierUnit) {
    ContractMultiplierUnit[ContractMultiplierUnit["Shares"] = 0] = "Shares";
    ContractMultiplierUnit[ContractMultiplierUnit["Hours"] = 1] = "Hours";
    ContractMultiplierUnit[ContractMultiplierUnit["Days"] = 2] = "Days";
})(ContractMultiplierUnit = exports.ContractMultiplierUnit || (exports.ContractMultiplierUnit = {}));
var LegContractMultiplierUnit;
(function (LegContractMultiplierUnit) {
    LegContractMultiplierUnit[LegContractMultiplierUnit["Shares"] = 0] = "Shares";
    LegContractMultiplierUnit[LegContractMultiplierUnit["Hours"] = 1] = "Hours";
    LegContractMultiplierUnit[LegContractMultiplierUnit["Days"] = 2] = "Days";
})(LegContractMultiplierUnit = exports.LegContractMultiplierUnit || (exports.LegContractMultiplierUnit = {}));
var UnderlyingContractMultiplierUnit;
(function (UnderlyingContractMultiplierUnit) {
    UnderlyingContractMultiplierUnit[UnderlyingContractMultiplierUnit["Shares"] = 0] = "Shares";
    UnderlyingContractMultiplierUnit[UnderlyingContractMultiplierUnit["Hours"] = 1] = "Hours";
    UnderlyingContractMultiplierUnit[UnderlyingContractMultiplierUnit["Days"] = 2] = "Days";
})(UnderlyingContractMultiplierUnit = exports.UnderlyingContractMultiplierUnit || (exports.UnderlyingContractMultiplierUnit = {}));
var DerivativeContractMultiplierUnit;
(function (DerivativeContractMultiplierUnit) {
    DerivativeContractMultiplierUnit[DerivativeContractMultiplierUnit["Shares"] = 0] = "Shares";
    DerivativeContractMultiplierUnit[DerivativeContractMultiplierUnit["Hours"] = 1] = "Hours";
    DerivativeContractMultiplierUnit[DerivativeContractMultiplierUnit["Days"] = 2] = "Days";
})(DerivativeContractMultiplierUnit = exports.DerivativeContractMultiplierUnit || (exports.DerivativeContractMultiplierUnit = {}));
var FlowScheduleType;
(function (FlowScheduleType) {
    FlowScheduleType[FlowScheduleType["NercEasternOffPeak"] = 0] = "NercEasternOffPeak";
    FlowScheduleType[FlowScheduleType["NercWesternOffPeak"] = 1] = "NercWesternOffPeak";
    FlowScheduleType[FlowScheduleType["NercCalendarAllDaysInMonth"] = 2] = "NercCalendarAllDaysInMonth";
    FlowScheduleType[FlowScheduleType["NercEasternPeak"] = 3] = "NercEasternPeak";
    FlowScheduleType[FlowScheduleType["NercWesternPeak"] = 4] = "NercWesternPeak";
})(FlowScheduleType = exports.FlowScheduleType || (exports.FlowScheduleType = {}));
var LegFlowScheduleType;
(function (LegFlowScheduleType) {
    LegFlowScheduleType[LegFlowScheduleType["NercEasternOffPeak"] = 0] = "NercEasternOffPeak";
    LegFlowScheduleType[LegFlowScheduleType["NercWesternOffPeak"] = 1] = "NercWesternOffPeak";
    LegFlowScheduleType[LegFlowScheduleType["NercCalendarAllDaysInMonth"] = 2] = "NercCalendarAllDaysInMonth";
    LegFlowScheduleType[LegFlowScheduleType["NercEasternPeak"] = 3] = "NercEasternPeak";
    LegFlowScheduleType[LegFlowScheduleType["NercWesternPeak"] = 4] = "NercWesternPeak";
})(LegFlowScheduleType = exports.LegFlowScheduleType || (exports.LegFlowScheduleType = {}));
var UnderlyingFlowScheduleType;
(function (UnderlyingFlowScheduleType) {
    UnderlyingFlowScheduleType[UnderlyingFlowScheduleType["NercEasternOffPeak"] = 0] = "NercEasternOffPeak";
    UnderlyingFlowScheduleType[UnderlyingFlowScheduleType["NercWesternOffPeak"] = 1] = "NercWesternOffPeak";
    UnderlyingFlowScheduleType[UnderlyingFlowScheduleType["NercCalendarAllDaysInMonth"] = 2] = "NercCalendarAllDaysInMonth";
    UnderlyingFlowScheduleType[UnderlyingFlowScheduleType["NercEasternPeak"] = 3] = "NercEasternPeak";
    UnderlyingFlowScheduleType[UnderlyingFlowScheduleType["NercWesternPeak"] = 4] = "NercWesternPeak";
})(UnderlyingFlowScheduleType = exports.UnderlyingFlowScheduleType || (exports.UnderlyingFlowScheduleType = {}));
var DerivativeFlowScheduleType;
(function (DerivativeFlowScheduleType) {
    DerivativeFlowScheduleType[DerivativeFlowScheduleType["NercEasternOffPeak"] = 0] = "NercEasternOffPeak";
    DerivativeFlowScheduleType[DerivativeFlowScheduleType["NercWesternOffPeak"] = 1] = "NercWesternOffPeak";
    DerivativeFlowScheduleType[DerivativeFlowScheduleType["NercCalendarAllDaysInMonth"] = 2] = "NercCalendarAllDaysInMonth";
    DerivativeFlowScheduleType[DerivativeFlowScheduleType["NercEasternPeak"] = 3] = "NercEasternPeak";
    DerivativeFlowScheduleType[DerivativeFlowScheduleType["NercWesternPeak"] = 4] = "NercWesternPeak";
})(DerivativeFlowScheduleType = exports.DerivativeFlowScheduleType || (exports.DerivativeFlowScheduleType = {}));
var FillLiquidityInd;
(function (FillLiquidityInd) {
    FillLiquidityInd[FillLiquidityInd["AddedLiquidity"] = 1] = "AddedLiquidity";
    FillLiquidityInd[FillLiquidityInd["RemovedLiquidity"] = 2] = "RemovedLiquidity";
    FillLiquidityInd[FillLiquidityInd["LiquidityRoutedOut"] = 3] = "LiquidityRoutedOut";
    FillLiquidityInd[FillLiquidityInd["Auction"] = 4] = "Auction";
    FillLiquidityInd[FillLiquidityInd["TriggeredStopOrder"] = 5] = "TriggeredStopOrder";
    FillLiquidityInd[FillLiquidityInd["TriggeredContingencyOrder"] = 6] = "TriggeredContingencyOrder";
    FillLiquidityInd[FillLiquidityInd["TriggeredMarketOrder"] = 7] = "TriggeredMarketOrder";
})(FillLiquidityInd = exports.FillLiquidityInd || (exports.FillLiquidityInd = {}));
var SideLiquidityInd;
(function (SideLiquidityInd) {
    SideLiquidityInd[SideLiquidityInd["AddedLiquidity"] = 1] = "AddedLiquidity";
    SideLiquidityInd[SideLiquidityInd["RemovedLiquidity"] = 2] = "RemovedLiquidity";
    SideLiquidityInd[SideLiquidityInd["LiquidityRoutedOut"] = 3] = "LiquidityRoutedOut";
    SideLiquidityInd[SideLiquidityInd["Auction"] = 4] = "Auction";
    SideLiquidityInd[SideLiquidityInd["TriggeredStopOrder"] = 5] = "TriggeredStopOrder";
    SideLiquidityInd[SideLiquidityInd["TriggeredContingencyOrder"] = 6] = "TriggeredContingencyOrder";
    SideLiquidityInd[SideLiquidityInd["TriggeredMarketOrder"] = 7] = "TriggeredMarketOrder";
})(SideLiquidityInd = exports.SideLiquidityInd || (exports.SideLiquidityInd = {}));
var RateSource;
(function (RateSource) {
    RateSource[RateSource["Bloomberg"] = 0] = "Bloomberg";
    RateSource[RateSource["Reuters"] = 1] = "Reuters";
    RateSource[RateSource["Telerate"] = 2] = "Telerate";
    RateSource[RateSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    RateSource[RateSource["Other"] = 99] = "Other";
})(RateSource = exports.RateSource || (exports.RateSource = {}));
var RateSourceType;
(function (RateSourceType) {
    RateSourceType[RateSourceType["Primary"] = 0] = "Primary";
    RateSourceType[RateSourceType["Secondary"] = 1] = "Secondary";
})(RateSourceType = exports.RateSourceType || (exports.RateSourceType = {}));
var RestructuringType;
(function (RestructuringType) {
    RestructuringType["FullRestructuring"] = "FR";
    RestructuringType["ModifiedRestructuring"] = "MR";
    RestructuringType["ModifiedModRestructuring"] = "MM";
    RestructuringType["NoRestructuringSpecified"] = "XR";
})(RestructuringType = exports.RestructuringType || (exports.RestructuringType = {}));
var Seniority;
(function (Seniority) {
    Seniority["SeniorSecured"] = "SD";
    Seniority["Senior"] = "SR";
    Seniority["Subordinated"] = "SB";
})(Seniority = exports.Seniority || (exports.Seniority = {}));
var UnderlyingRestructuringType;
(function (UnderlyingRestructuringType) {
    UnderlyingRestructuringType["FullRestructuring"] = "FR";
    UnderlyingRestructuringType["ModifiedRestructuring"] = "MR";
    UnderlyingRestructuringType["ModifiedModRestructuring"] = "MM";
    UnderlyingRestructuringType["NoRestructuringSpecified"] = "XR";
})(UnderlyingRestructuringType = exports.UnderlyingRestructuringType || (exports.UnderlyingRestructuringType = {}));
var UnderlyingSeniority;
(function (UnderlyingSeniority) {
    UnderlyingSeniority["SeniorSecured"] = "SD";
    UnderlyingSeniority["Senior"] = "SR";
    UnderlyingSeniority["Subordinated"] = "SB";
})(UnderlyingSeniority = exports.UnderlyingSeniority || (exports.UnderlyingSeniority = {}));
var TargetPartyIDSource;
(function (TargetPartyIDSource) {
    TargetPartyIDSource["KoreanInvestorId"] = "1";
    TargetPartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    TargetPartyIDSource["TaiwaneseTradingAcct"] = "3";
    TargetPartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    TargetPartyIDSource["ChineseInvestorId"] = "5";
    TargetPartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    TargetPartyIDSource["UsSocialSecurityNumber"] = "7";
    TargetPartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    TargetPartyIDSource["AustralianBusinessNumber"] = "9";
    TargetPartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    TargetPartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    TargetPartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    TargetPartyIDSource["ProprietaryCustomCode"] = "D";
    TargetPartyIDSource["IsoCountryCode"] = "E";
    TargetPartyIDSource["AustralianTaxFileNumber"] = "A";
    TargetPartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    TargetPartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    TargetPartyIDSource["TaxId"] = "J";
    TargetPartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    TargetPartyIDSource["AustralianCompanyNumber"] = "K";
    TargetPartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    TargetPartyIDSource["CftcReportingFirmIdentifier"] = "M";
    TargetPartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    TargetPartyIDSource["InterimIdentifier"] = "O";
    TargetPartyIDSource["ShortCodeIdentifier"] = "P";
    TargetPartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(TargetPartyIDSource = exports.TargetPartyIDSource || (exports.TargetPartyIDSource = {}));
var TargetPartyRole;
(function (TargetPartyRole) {
    TargetPartyRole[TargetPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    TargetPartyRole[TargetPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    TargetPartyRole[TargetPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    TargetPartyRole[TargetPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    TargetPartyRole[TargetPartyRole["InvestorId"] = 5] = "InvestorId";
    TargetPartyRole[TargetPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    TargetPartyRole[TargetPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    TargetPartyRole[TargetPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    TargetPartyRole[TargetPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    TargetPartyRole[TargetPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    TargetPartyRole[TargetPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    TargetPartyRole[TargetPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    TargetPartyRole[TargetPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    TargetPartyRole[TargetPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    TargetPartyRole[TargetPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    TargetPartyRole[TargetPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    TargetPartyRole[TargetPartyRole["ContraFirm"] = 17] = "ContraFirm";
    TargetPartyRole[TargetPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    TargetPartyRole[TargetPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    TargetPartyRole[TargetPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    TargetPartyRole[TargetPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    TargetPartyRole[TargetPartyRole["Exchange"] = 22] = "Exchange";
    TargetPartyRole[TargetPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    TargetPartyRole[TargetPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    TargetPartyRole[TargetPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    TargetPartyRole[TargetPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    TargetPartyRole[TargetPartyRole["Custodian"] = 28] = "Custodian";
    TargetPartyRole[TargetPartyRole["Intermediary"] = 29] = "Intermediary";
    TargetPartyRole[TargetPartyRole["Agent"] = 30] = "Agent";
    TargetPartyRole[TargetPartyRole["SubCustodian"] = 31] = "SubCustodian";
    TargetPartyRole[TargetPartyRole["Beneficiary"] = 32] = "Beneficiary";
    TargetPartyRole[TargetPartyRole["InterestedParty"] = 33] = "InterestedParty";
    TargetPartyRole[TargetPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    TargetPartyRole[TargetPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    TargetPartyRole[TargetPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    TargetPartyRole[TargetPartyRole["ContraTrader"] = 37] = "ContraTrader";
    TargetPartyRole[TargetPartyRole["PositionAccount"] = 38] = "PositionAccount";
    TargetPartyRole[TargetPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    TargetPartyRole[TargetPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    TargetPartyRole[TargetPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    TargetPartyRole[TargetPartyRole["ContraExchange"] = 42] = "ContraExchange";
    TargetPartyRole[TargetPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    TargetPartyRole[TargetPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    TargetPartyRole[TargetPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    TargetPartyRole[TargetPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    TargetPartyRole[TargetPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    TargetPartyRole[TargetPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    TargetPartyRole[TargetPartyRole["AssetManager"] = 49] = "AssetManager";
    TargetPartyRole[TargetPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    TargetPartyRole[TargetPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    TargetPartyRole[TargetPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    TargetPartyRole[TargetPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    TargetPartyRole[TargetPartyRole["SenderLocation"] = 54] = "SenderLocation";
    TargetPartyRole[TargetPartyRole["SessionId"] = 55] = "SessionId";
    TargetPartyRole[TargetPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    TargetPartyRole[TargetPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    TargetPartyRole[TargetPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    TargetPartyRole[TargetPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    TargetPartyRole[TargetPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    TargetPartyRole[TargetPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    TargetPartyRole[TargetPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    TargetPartyRole[TargetPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    TargetPartyRole[TargetPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    TargetPartyRole[TargetPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    TargetPartyRole[TargetPartyRole["MarketMaker"] = 66] = "MarketMaker";
    TargetPartyRole[TargetPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    TargetPartyRole[TargetPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    TargetPartyRole[TargetPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    TargetPartyRole[TargetPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    TargetPartyRole[TargetPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    TargetPartyRole[TargetPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    TargetPartyRole[TargetPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    TargetPartyRole[TargetPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    TargetPartyRole[TargetPartyRole["LocationId"] = 75] = "LocationId";
    TargetPartyRole[TargetPartyRole["DeskId"] = 76] = "DeskId";
    TargetPartyRole[TargetPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    TargetPartyRole[TargetPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    TargetPartyRole[TargetPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    TargetPartyRole[TargetPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    TargetPartyRole[TargetPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    TargetPartyRole[TargetPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    TargetPartyRole[TargetPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    TargetPartyRole[TargetPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    TargetPartyRole[TargetPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    TargetPartyRole[TargetPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    TargetPartyRole[TargetPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    TargetPartyRole[TargetPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    TargetPartyRole[TargetPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    TargetPartyRole[TargetPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    TargetPartyRole[TargetPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    TargetPartyRole[TargetPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    TargetPartyRole[TargetPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    TargetPartyRole[TargetPartyRole["AwayMarket"] = 94] = "AwayMarket";
    TargetPartyRole[TargetPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    TargetPartyRole[TargetPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    TargetPartyRole[TargetPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    TargetPartyRole[TargetPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    TargetPartyRole[TargetPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    TargetPartyRole[TargetPartyRole["MarginAccount"] = 100] = "MarginAccount";
    TargetPartyRole[TargetPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    TargetPartyRole[TargetPartyRole["DataRepository"] = 102] = "DataRepository";
    TargetPartyRole[TargetPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    TargetPartyRole[TargetPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    TargetPartyRole[TargetPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    TargetPartyRole[TargetPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    TargetPartyRole[TargetPartyRole["Correspondent"] = 107] = "Correspondent";
    TargetPartyRole[TargetPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    TargetPartyRole[TargetPartyRole["Borrower"] = 110] = "Borrower";
    TargetPartyRole[TargetPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    TargetPartyRole[TargetPartyRole["Guarantor"] = 112] = "Guarantor";
    TargetPartyRole[TargetPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    TargetPartyRole[TargetPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    TargetPartyRole[TargetPartyRole["HedgingParty"] = 115] = "HedgingParty";
    TargetPartyRole[TargetPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    TargetPartyRole[TargetPartyRole["SalesPerson"] = 117] = "SalesPerson";
    TargetPartyRole[TargetPartyRole["Operator"] = 118] = "Operator";
    TargetPartyRole[TargetPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    TargetPartyRole[TargetPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    TargetPartyRole[TargetPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    TargetPartyRole[TargetPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(TargetPartyRole = exports.TargetPartyRole || (exports.TargetPartyRole = {}));
var SecurityListType;
(function (SecurityListType) {
    SecurityListType[SecurityListType["IndustryClassification"] = 1] = "IndustryClassification";
    SecurityListType[SecurityListType["TradingList"] = 2] = "TradingList";
    SecurityListType[SecurityListType["MarketMarketSegmentList"] = 3] = "MarketMarketSegmentList";
    SecurityListType[SecurityListType["NewspaperList"] = 4] = "NewspaperList";
})(SecurityListType = exports.SecurityListType || (exports.SecurityListType = {}));
var SecurityListTypeSource;
(function (SecurityListTypeSource) {
    SecurityListTypeSource[SecurityListTypeSource["IcbIndustryClassificationBenchmarkPublishedByDowJonesAndFtseWwwIcbenchmarkCom"] = 1] = "IcbIndustryClassificationBenchmarkPublishedByDowJonesAndFtseWwwIcbenchmarkCom";
    SecurityListTypeSource[SecurityListTypeSource["NaicsNorthAmericanIndustryClassificationSystemReplacedSicStandardIndustryClassificationWwwCensusGovNaicsOrWwwNaicsCom"] = 2] = "NaicsNorthAmericanIndustryClassificationSystemReplacedSicStandardIndustryClassificationWwwCensusGovNaicsOrWwwNaicsCom";
    SecurityListTypeSource[SecurityListTypeSource["GicsGlobalIndustryClassificationStandardPublishedByStandardsPoor"] = 3] = "GicsGlobalIndustryClassificationStandardPublishedByStandardsPoor";
})(SecurityListTypeSource = exports.SecurityListTypeSource || (exports.SecurityListTypeSource = {}));
var NewsCategory;
(function (NewsCategory) {
    NewsCategory[NewsCategory["CompanyNews"] = 0] = "CompanyNews";
    NewsCategory[NewsCategory["MarketplaceNews"] = 1] = "MarketplaceNews";
    NewsCategory[NewsCategory["FinancialMarketNews"] = 2] = "FinancialMarketNews";
    NewsCategory[NewsCategory["TechnicalNews"] = 3] = "TechnicalNews";
    NewsCategory[NewsCategory["OtherNews"] = 99] = "OtherNews";
})(NewsCategory = exports.NewsCategory || (exports.NewsCategory = {}));
var NewsRefType;
(function (NewsRefType) {
    NewsRefType[NewsRefType["Replacement"] = 0] = "Replacement";
    NewsRefType[NewsRefType["OtherLanguage"] = 1] = "OtherLanguage";
    NewsRefType[NewsRefType["Complimentary"] = 2] = "Complimentary";
    NewsRefType[NewsRefType["Withdrawal"] = 3] = "Withdrawal";
})(NewsRefType = exports.NewsRefType || (exports.NewsRefType = {}));
var StrikePriceDeterminationMethod;
(function (StrikePriceDeterminationMethod) {
    StrikePriceDeterminationMethod[StrikePriceDeterminationMethod["FixedStrikeDefaultIfNotSpecified"] = 1] = "FixedStrikeDefaultIfNotSpecified";
    StrikePriceDeterminationMethod[StrikePriceDeterminationMethod["StrikeSetAtExpirationToUnderlyingOrOtherValueLookbackFloating"] = 2] = "StrikeSetAtExpirationToUnderlyingOrOtherValueLookbackFloating";
    StrikePriceDeterminationMethod[StrikePriceDeterminationMethod["StrikeSetToAverageOfUnderlyingSettlementPriceAcrossTheLifeOfTheOption"] = 3] = "StrikeSetToAverageOfUnderlyingSettlementPriceAcrossTheLifeOfTheOption";
    StrikePriceDeterminationMethod[StrikePriceDeterminationMethod["StrikeSetToOptimalValue"] = 4] = "StrikeSetToOptimalValue";
})(StrikePriceDeterminationMethod = exports.StrikePriceDeterminationMethod || (exports.StrikePriceDeterminationMethod = {}));
var StrikePriceBoundaryMethod;
(function (StrikePriceBoundaryMethod) {
    StrikePriceBoundaryMethod[StrikePriceBoundaryMethod["LessThanUnderlyingPriceIsInTheMoneyItm"] = 1] = "LessThanUnderlyingPriceIsInTheMoneyItm";
    StrikePriceBoundaryMethod[StrikePriceBoundaryMethod["LessThanOrEqualToTheUnderlyingPriceIsInTheMoneyItm"] = 2] = "LessThanOrEqualToTheUnderlyingPriceIsInTheMoneyItm";
    StrikePriceBoundaryMethod[StrikePriceBoundaryMethod["EqualToTheUnderlyingPriceIsInTheMoneyItm"] = 3] = "EqualToTheUnderlyingPriceIsInTheMoneyItm";
    StrikePriceBoundaryMethod[StrikePriceBoundaryMethod["GreaterThanOrEqualToUnderlyingPriceIsInTheMoneyItm"] = 4] = "GreaterThanOrEqualToUnderlyingPriceIsInTheMoneyItm";
    StrikePriceBoundaryMethod[StrikePriceBoundaryMethod["GreaterThanUnderlyingIsInTheMoneyItm"] = 5] = "GreaterThanUnderlyingIsInTheMoneyItm";
})(StrikePriceBoundaryMethod = exports.StrikePriceBoundaryMethod || (exports.StrikePriceBoundaryMethod = {}));
var UnderlyingPriceDeterminationMethod;
(function (UnderlyingPriceDeterminationMethod) {
    UnderlyingPriceDeterminationMethod[UnderlyingPriceDeterminationMethod["Regular"] = 1] = "Regular";
    UnderlyingPriceDeterminationMethod[UnderlyingPriceDeterminationMethod["SpecialReference"] = 2] = "SpecialReference";
    UnderlyingPriceDeterminationMethod[UnderlyingPriceDeterminationMethod["OptimalValueLookback"] = 3] = "OptimalValueLookback";
    UnderlyingPriceDeterminationMethod[UnderlyingPriceDeterminationMethod["AverageValueAsianOption"] = 4] = "AverageValueAsianOption";
})(UnderlyingPriceDeterminationMethod = exports.UnderlyingPriceDeterminationMethod || (exports.UnderlyingPriceDeterminationMethod = {}));
var OptPayoutType;
(function (OptPayoutType) {
    OptPayoutType[OptPayoutType["Vanilla"] = 1] = "Vanilla";
    OptPayoutType[OptPayoutType["Capped"] = 2] = "Capped";
    OptPayoutType[OptPayoutType["Binary"] = 3] = "Binary";
})(OptPayoutType = exports.OptPayoutType || (exports.OptPayoutType = {}));
var ComplexEventType;
(function (ComplexEventType) {
    ComplexEventType[ComplexEventType["Capped"] = 1] = "Capped";
    ComplexEventType[ComplexEventType["Trigger"] = 2] = "Trigger";
    ComplexEventType[ComplexEventType["KnockInUp"] = 3] = "KnockInUp";
    ComplexEventType[ComplexEventType["KnockInDown"] = 4] = "KnockInDown";
    ComplexEventType[ComplexEventType["KnockOutUp"] = 5] = "KnockOutUp";
    ComplexEventType[ComplexEventType["KnockOutDown"] = 6] = "KnockOutDown";
    ComplexEventType[ComplexEventType["Underlying"] = 7] = "Underlying";
    ComplexEventType[ComplexEventType["ResetBarrier"] = 8] = "ResetBarrier";
    ComplexEventType[ComplexEventType["RollingBarrier"] = 9] = "RollingBarrier";
    ComplexEventType[ComplexEventType["OneTouch"] = 10] = "OneTouch";
    ComplexEventType[ComplexEventType["NoTouch"] = 11] = "NoTouch";
    ComplexEventType[ComplexEventType["DoubleOneTouch"] = 12] = "DoubleOneTouch";
    ComplexEventType[ComplexEventType["DoubleNoTouch"] = 13] = "DoubleNoTouch";
    ComplexEventType[ComplexEventType["ForeignExchangeComposite"] = 14] = "ForeignExchangeComposite";
    ComplexEventType[ComplexEventType["ForeignExchangeQuanto"] = 15] = "ForeignExchangeQuanto";
    ComplexEventType[ComplexEventType["ForeignExchangeCrossCurrency"] = 16] = "ForeignExchangeCrossCurrency";
    ComplexEventType[ComplexEventType["StrikeSpread"] = 17] = "StrikeSpread";
    ComplexEventType[ComplexEventType["CalendarSpread"] = 18] = "CalendarSpread";
    ComplexEventType[ComplexEventType["PriceObservationAsianOrLookback"] = 19] = "PriceObservationAsianOrLookback";
    ComplexEventType[ComplexEventType["PassThrough"] = 20] = "PassThrough";
    ComplexEventType[ComplexEventType["StrikeSchedule"] = 21] = "StrikeSchedule";
    ComplexEventType[ComplexEventType["EquityValuation"] = 22] = "EquityValuation";
    ComplexEventType[ComplexEventType["DividendValuation"] = 23] = "DividendValuation";
})(ComplexEventType = exports.ComplexEventType || (exports.ComplexEventType = {}));
var ComplexEventPriceBoundaryMethod;
(function (ComplexEventPriceBoundaryMethod) {
    ComplexEventPriceBoundaryMethod[ComplexEventPriceBoundaryMethod["LessThanComplexEventPrice1486"] = 1] = "LessThanComplexEventPrice1486";
    ComplexEventPriceBoundaryMethod[ComplexEventPriceBoundaryMethod["LessThanOrEqualToComplexEventPrice1486"] = 2] = "LessThanOrEqualToComplexEventPrice1486";
    ComplexEventPriceBoundaryMethod[ComplexEventPriceBoundaryMethod["EqualToComplexEventPrice1486"] = 3] = "EqualToComplexEventPrice1486";
    ComplexEventPriceBoundaryMethod[ComplexEventPriceBoundaryMethod["GreaterThanOrEqualToComplexEventPrice1486"] = 4] = "GreaterThanOrEqualToComplexEventPrice1486";
    ComplexEventPriceBoundaryMethod[ComplexEventPriceBoundaryMethod["GreaterThanComplexEventPrice1486"] = 5] = "GreaterThanComplexEventPrice1486";
})(ComplexEventPriceBoundaryMethod = exports.ComplexEventPriceBoundaryMethod || (exports.ComplexEventPriceBoundaryMethod = {}));
var ComplexEventPriceTimeType;
(function (ComplexEventPriceTimeType) {
    ComplexEventPriceTimeType[ComplexEventPriceTimeType["Expiration"] = 1] = "Expiration";
    ComplexEventPriceTimeType[ComplexEventPriceTimeType["ImmediateAtAnyTime"] = 2] = "ImmediateAtAnyTime";
    ComplexEventPriceTimeType[ComplexEventPriceTimeType["SpecifiedDateTime"] = 3] = "SpecifiedDateTime";
    ComplexEventPriceTimeType[ComplexEventPriceTimeType["Close"] = 4] = "Close";
    ComplexEventPriceTimeType[ComplexEventPriceTimeType["Open"] = 5] = "Open";
    ComplexEventPriceTimeType[ComplexEventPriceTimeType["OfficialSettlementPrice"] = 6] = "OfficialSettlementPrice";
    ComplexEventPriceTimeType[ComplexEventPriceTimeType["DerivativesClose"] = 7] = "DerivativesClose";
    ComplexEventPriceTimeType[ComplexEventPriceTimeType["AsSpecifiedInMasterConfirmation"] = 8] = "AsSpecifiedInMasterConfirmation";
})(ComplexEventPriceTimeType = exports.ComplexEventPriceTimeType || (exports.ComplexEventPriceTimeType = {}));
var ComplexEventCondition;
(function (ComplexEventCondition) {
    ComplexEventCondition[ComplexEventCondition["And"] = 1] = "And";
    ComplexEventCondition[ComplexEventCondition["Or"] = 2] = "Or";
})(ComplexEventCondition = exports.ComplexEventCondition || (exports.ComplexEventCondition = {}));
var StreamAsgnReqType;
(function (StreamAsgnReqType) {
    StreamAsgnReqType[StreamAsgnReqType["StreamAssignmentForNewCustomerS"] = 1] = "StreamAssignmentForNewCustomerS";
    StreamAsgnReqType[StreamAsgnReqType["StreamAssignmentForExistingCustomerS"] = 2] = "StreamAssignmentForExistingCustomerS";
})(StreamAsgnReqType = exports.StreamAsgnReqType || (exports.StreamAsgnReqType = {}));
var StreamAsgnRejReason;
(function (StreamAsgnRejReason) {
    StreamAsgnRejReason[StreamAsgnRejReason["UnknownClient"] = 0] = "UnknownClient";
    StreamAsgnRejReason[StreamAsgnRejReason["ExceedsMaximumSize"] = 1] = "ExceedsMaximumSize";
    StreamAsgnRejReason[StreamAsgnRejReason["UnknownOrInvalidCurrencyPair"] = 2] = "UnknownOrInvalidCurrencyPair";
    StreamAsgnRejReason[StreamAsgnRejReason["NoAvailableStream"] = 3] = "NoAvailableStream";
    StreamAsgnRejReason[StreamAsgnRejReason["Other"] = 99] = "Other";
})(StreamAsgnRejReason = exports.StreamAsgnRejReason || (exports.StreamAsgnRejReason = {}));
var StreamAsgnAckType;
(function (StreamAsgnAckType) {
    StreamAsgnAckType[StreamAsgnAckType["AssignmentAccepted"] = 0] = "AssignmentAccepted";
    StreamAsgnAckType[StreamAsgnAckType["AssignmentRejected"] = 1] = "AssignmentRejected";
})(StreamAsgnAckType = exports.StreamAsgnAckType || (exports.StreamAsgnAckType = {}));
var RequestedPartyRole;
(function (RequestedPartyRole) {
    RequestedPartyRole[RequestedPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    RequestedPartyRole[RequestedPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    RequestedPartyRole[RequestedPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    RequestedPartyRole[RequestedPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    RequestedPartyRole[RequestedPartyRole["InvestorId"] = 5] = "InvestorId";
    RequestedPartyRole[RequestedPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    RequestedPartyRole[RequestedPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    RequestedPartyRole[RequestedPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    RequestedPartyRole[RequestedPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    RequestedPartyRole[RequestedPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    RequestedPartyRole[RequestedPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    RequestedPartyRole[RequestedPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    RequestedPartyRole[RequestedPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    RequestedPartyRole[RequestedPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    RequestedPartyRole[RequestedPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    RequestedPartyRole[RequestedPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    RequestedPartyRole[RequestedPartyRole["ContraFirm"] = 17] = "ContraFirm";
    RequestedPartyRole[RequestedPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    RequestedPartyRole[RequestedPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    RequestedPartyRole[RequestedPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    RequestedPartyRole[RequestedPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    RequestedPartyRole[RequestedPartyRole["Exchange"] = 22] = "Exchange";
    RequestedPartyRole[RequestedPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    RequestedPartyRole[RequestedPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    RequestedPartyRole[RequestedPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    RequestedPartyRole[RequestedPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    RequestedPartyRole[RequestedPartyRole["Custodian"] = 28] = "Custodian";
    RequestedPartyRole[RequestedPartyRole["Intermediary"] = 29] = "Intermediary";
    RequestedPartyRole[RequestedPartyRole["Agent"] = 30] = "Agent";
    RequestedPartyRole[RequestedPartyRole["SubCustodian"] = 31] = "SubCustodian";
    RequestedPartyRole[RequestedPartyRole["Beneficiary"] = 32] = "Beneficiary";
    RequestedPartyRole[RequestedPartyRole["InterestedParty"] = 33] = "InterestedParty";
    RequestedPartyRole[RequestedPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    RequestedPartyRole[RequestedPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    RequestedPartyRole[RequestedPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    RequestedPartyRole[RequestedPartyRole["ContraTrader"] = 37] = "ContraTrader";
    RequestedPartyRole[RequestedPartyRole["PositionAccount"] = 38] = "PositionAccount";
    RequestedPartyRole[RequestedPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    RequestedPartyRole[RequestedPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    RequestedPartyRole[RequestedPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    RequestedPartyRole[RequestedPartyRole["ContraExchange"] = 42] = "ContraExchange";
    RequestedPartyRole[RequestedPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    RequestedPartyRole[RequestedPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    RequestedPartyRole[RequestedPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    RequestedPartyRole[RequestedPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    RequestedPartyRole[RequestedPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    RequestedPartyRole[RequestedPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    RequestedPartyRole[RequestedPartyRole["AssetManager"] = 49] = "AssetManager";
    RequestedPartyRole[RequestedPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    RequestedPartyRole[RequestedPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    RequestedPartyRole[RequestedPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    RequestedPartyRole[RequestedPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    RequestedPartyRole[RequestedPartyRole["SenderLocation"] = 54] = "SenderLocation";
    RequestedPartyRole[RequestedPartyRole["SessionId"] = 55] = "SessionId";
    RequestedPartyRole[RequestedPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    RequestedPartyRole[RequestedPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    RequestedPartyRole[RequestedPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    RequestedPartyRole[RequestedPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    RequestedPartyRole[RequestedPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    RequestedPartyRole[RequestedPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    RequestedPartyRole[RequestedPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    RequestedPartyRole[RequestedPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    RequestedPartyRole[RequestedPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    RequestedPartyRole[RequestedPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    RequestedPartyRole[RequestedPartyRole["MarketMaker"] = 66] = "MarketMaker";
    RequestedPartyRole[RequestedPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    RequestedPartyRole[RequestedPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    RequestedPartyRole[RequestedPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    RequestedPartyRole[RequestedPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    RequestedPartyRole[RequestedPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    RequestedPartyRole[RequestedPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    RequestedPartyRole[RequestedPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    RequestedPartyRole[RequestedPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    RequestedPartyRole[RequestedPartyRole["LocationId"] = 75] = "LocationId";
    RequestedPartyRole[RequestedPartyRole["DeskId"] = 76] = "DeskId";
    RequestedPartyRole[RequestedPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    RequestedPartyRole[RequestedPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    RequestedPartyRole[RequestedPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    RequestedPartyRole[RequestedPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    RequestedPartyRole[RequestedPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    RequestedPartyRole[RequestedPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    RequestedPartyRole[RequestedPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    RequestedPartyRole[RequestedPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    RequestedPartyRole[RequestedPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    RequestedPartyRole[RequestedPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    RequestedPartyRole[RequestedPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    RequestedPartyRole[RequestedPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    RequestedPartyRole[RequestedPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    RequestedPartyRole[RequestedPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    RequestedPartyRole[RequestedPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    RequestedPartyRole[RequestedPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    RequestedPartyRole[RequestedPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    RequestedPartyRole[RequestedPartyRole["AwayMarket"] = 94] = "AwayMarket";
    RequestedPartyRole[RequestedPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    RequestedPartyRole[RequestedPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    RequestedPartyRole[RequestedPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    RequestedPartyRole[RequestedPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    RequestedPartyRole[RequestedPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    RequestedPartyRole[RequestedPartyRole["MarginAccount"] = 100] = "MarginAccount";
    RequestedPartyRole[RequestedPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    RequestedPartyRole[RequestedPartyRole["DataRepository"] = 102] = "DataRepository";
    RequestedPartyRole[RequestedPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    RequestedPartyRole[RequestedPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    RequestedPartyRole[RequestedPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    RequestedPartyRole[RequestedPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    RequestedPartyRole[RequestedPartyRole["Correspondent"] = 107] = "Correspondent";
    RequestedPartyRole[RequestedPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    RequestedPartyRole[RequestedPartyRole["Borrower"] = 110] = "Borrower";
    RequestedPartyRole[RequestedPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    RequestedPartyRole[RequestedPartyRole["Guarantor"] = 112] = "Guarantor";
    RequestedPartyRole[RequestedPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    RequestedPartyRole[RequestedPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    RequestedPartyRole[RequestedPartyRole["HedgingParty"] = 115] = "HedgingParty";
    RequestedPartyRole[RequestedPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    RequestedPartyRole[RequestedPartyRole["SalesPerson"] = 117] = "SalesPerson";
    RequestedPartyRole[RequestedPartyRole["Operator"] = 118] = "Operator";
    RequestedPartyRole[RequestedPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    RequestedPartyRole[RequestedPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    RequestedPartyRole[RequestedPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    RequestedPartyRole[RequestedPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(RequestedPartyRole = exports.RequestedPartyRole || (exports.RequestedPartyRole = {}));
var RequestResult;
(function (RequestResult) {
    RequestResult[RequestResult["ValidRequest"] = 0] = "ValidRequest";
    RequestResult[RequestResult["InvalidOrUnsupportedRequest"] = 1] = "InvalidOrUnsupportedRequest";
    RequestResult[RequestResult["NoDataFoundThatMatchSelectionCriteria"] = 2] = "NoDataFoundThatMatchSelectionCriteria";
    RequestResult[RequestResult["NotAuthorizedToRetrieveData"] = 3] = "NotAuthorizedToRetrieveData";
    RequestResult[RequestResult["DataTemporarilyUnavailable"] = 4] = "DataTemporarilyUnavailable";
    RequestResult[RequestResult["RequestForDataNotSupported"] = 5] = "RequestForDataNotSupported";
    RequestResult[RequestResult["OtherFurtherInformationInRejectText1328Field"] = 99] = "OtherFurtherInformationInRejectText1328Field";
})(RequestResult = exports.RequestResult || (exports.RequestResult = {}));
var PartyRelationship;
(function (PartyRelationship) {
    PartyRelationship[PartyRelationship["IsAlso"] = 0] = "IsAlso";
    PartyRelationship[PartyRelationship["ClearsFor"] = 1] = "ClearsFor";
    PartyRelationship[PartyRelationship["ClearsThrough"] = 2] = "ClearsThrough";
    PartyRelationship[PartyRelationship["TradesFor"] = 3] = "TradesFor";
    PartyRelationship[PartyRelationship["TradesThrough"] = 4] = "TradesThrough";
    PartyRelationship[PartyRelationship["Sponsors"] = 5] = "Sponsors";
    PartyRelationship[PartyRelationship["SponsoredThrough"] = 6] = "SponsoredThrough";
    PartyRelationship[PartyRelationship["ProvidesGuaranteeFor"] = 7] = "ProvidesGuaranteeFor";
    PartyRelationship[PartyRelationship["IsGuaranteedBy"] = 8] = "IsGuaranteedBy";
    PartyRelationship[PartyRelationship["MemberOf"] = 9] = "MemberOf";
    PartyRelationship[PartyRelationship["HasMembers"] = 10] = "HasMembers";
    PartyRelationship[PartyRelationship["ProvidesMarketplaceFor"] = 11] = "ProvidesMarketplaceFor";
    PartyRelationship[PartyRelationship["ParticipantOfMarketplace"] = 12] = "ParticipantOfMarketplace";
    PartyRelationship[PartyRelationship["CarriesPositionsFor"] = 13] = "CarriesPositionsFor";
    PartyRelationship[PartyRelationship["PostsTradesTo"] = 14] = "PostsTradesTo";
    PartyRelationship[PartyRelationship["EntersTradesFor"] = 15] = "EntersTradesFor";
    PartyRelationship[PartyRelationship["EntersTradesThrough"] = 16] = "EntersTradesThrough";
    PartyRelationship[PartyRelationship["ProvidesQuotesTo"] = 17] = "ProvidesQuotesTo";
    PartyRelationship[PartyRelationship["RequestsQuotesFrom"] = 18] = "RequestsQuotesFrom";
    PartyRelationship[PartyRelationship["InvestsFor"] = 19] = "InvestsFor";
    PartyRelationship[PartyRelationship["InvestsThrough"] = 20] = "InvestsThrough";
    PartyRelationship[PartyRelationship["BrokersTradesFor"] = 21] = "BrokersTradesFor";
    PartyRelationship[PartyRelationship["BrokersTradesThrough"] = 22] = "BrokersTradesThrough";
    PartyRelationship[PartyRelationship["ProvidesTradingServicesFor"] = 23] = "ProvidesTradingServicesFor";
    PartyRelationship[PartyRelationship["UsesTradingServicesOf"] = 24] = "UsesTradingServicesOf";
    PartyRelationship[PartyRelationship["ApprovesOf"] = 25] = "ApprovesOf";
    PartyRelationship[PartyRelationship["ApprovedBy"] = 26] = "ApprovedBy";
    PartyRelationship[PartyRelationship["ParentFirmFor"] = 27] = "ParentFirmFor";
    PartyRelationship[PartyRelationship["SubsidiaryOf"] = 28] = "SubsidiaryOf";
    PartyRelationship[PartyRelationship["RegulatoryOwnerOf"] = 29] = "RegulatoryOwnerOf";
    PartyRelationship[PartyRelationship["OwnedByRegulatory"] = 30] = "OwnedByRegulatory";
    PartyRelationship[PartyRelationship["Controls"] = 31] = "Controls";
    PartyRelationship[PartyRelationship["IsControlledBy"] = 32] = "IsControlledBy";
    PartyRelationship[PartyRelationship["LegalTitledOwnerOf"] = 33] = "LegalTitledOwnerOf";
    PartyRelationship[PartyRelationship["OwnedByLegalTitle"] = 34] = "OwnedByLegalTitle";
    PartyRelationship[PartyRelationship["BeneficialOwnerOf"] = 35] = "BeneficialOwnerOf";
    PartyRelationship[PartyRelationship["OwnedByBeneficial"] = 36] = "OwnedByBeneficial";
    PartyRelationship[PartyRelationship["SettlesFor"] = 37] = "SettlesFor";
    PartyRelationship[PartyRelationship["SettlesThrough"] = 38] = "SettlesThrough";
})(PartyRelationship = exports.PartyRelationship || (exports.PartyRelationship = {}));
var PartyDetailAltIDSource;
(function (PartyDetailAltIDSource) {
    PartyDetailAltIDSource["KoreanInvestorId"] = "1";
    PartyDetailAltIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    PartyDetailAltIDSource["TaiwaneseTradingAcct"] = "3";
    PartyDetailAltIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    PartyDetailAltIDSource["ChineseInvestorId"] = "5";
    PartyDetailAltIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    PartyDetailAltIDSource["UsSocialSecurityNumber"] = "7";
    PartyDetailAltIDSource["UsEmployerOrTaxIdNumber"] = "8";
    PartyDetailAltIDSource["AustralianBusinessNumber"] = "9";
    PartyDetailAltIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    PartyDetailAltIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    PartyDetailAltIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    PartyDetailAltIDSource["ProprietaryCustomCode"] = "D";
    PartyDetailAltIDSource["IsoCountryCode"] = "E";
    PartyDetailAltIDSource["AustralianTaxFileNumber"] = "A";
    PartyDetailAltIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    PartyDetailAltIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    PartyDetailAltIDSource["TaxId"] = "J";
    PartyDetailAltIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    PartyDetailAltIDSource["AustralianCompanyNumber"] = "K";
    PartyDetailAltIDSource["AustralianRegisteredBodyNumber"] = "L";
    PartyDetailAltIDSource["CftcReportingFirmIdentifier"] = "M";
    PartyDetailAltIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    PartyDetailAltIDSource["InterimIdentifier"] = "O";
    PartyDetailAltIDSource["ShortCodeIdentifier"] = "P";
    PartyDetailAltIDSource["NationalIdOfNaturalPerson"] = "Q";
})(PartyDetailAltIDSource = exports.PartyDetailAltIDSource || (exports.PartyDetailAltIDSource = {}));
var PartyDetailAltSubIDType;
(function (PartyDetailAltSubIDType) {
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["Firm"] = 1] = "Firm";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["Person"] = 2] = "Person";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["System"] = 3] = "System";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["Application"] = 4] = "Application";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["PostalAddress"] = 6] = "PostalAddress";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["EmailAddress"] = 8] = "EmailAddress";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["ContactName"] = 9] = "ContactName";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["Bic"] = 16] = "Bic";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["FundAccountName"] = 19] = "FundAccountName";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["TelexNumber"] = 20] = "TelexNumber";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["FaxNumber"] = 21] = "FaxNumber";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["CashAccountName"] = 23] = "CashAccountName";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["Department"] = 24] = "Department";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["LocationDesk"] = 25] = "LocationDesk";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["MarketMaker"] = 28] = "MarketMaker";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["Location"] = 31] = "Location";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["AddressCity"] = 34] = "AddressCity";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["AddressStreet"] = 37] = "AddressStreet";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["MarketSegment"] = 40] = "MarketSegment";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["SwapDealer"] = 45] = "SwapDealer";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["USPerson"] = 48] = "USPerson";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["ReferenceText"] = 52] = "ReferenceText";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["EndUser"] = 69] = "EndUser";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["Domicile"] = 72] = "Domicile";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["Payer"] = 74] = "Payer";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["Receiver"] = 75] = "Receiver";
    PartyDetailAltSubIDType[PartyDetailAltSubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(PartyDetailAltSubIDType = exports.PartyDetailAltSubIDType || (exports.PartyDetailAltSubIDType = {}));
var TrdAckStatus;
(function (TrdAckStatus) {
    TrdAckStatus[TrdAckStatus["Accepted"] = 0] = "Accepted";
    TrdAckStatus[TrdAckStatus["Rejected"] = 1] = "Rejected";
    TrdAckStatus[TrdAckStatus["Received"] = 2] = "Received";
})(TrdAckStatus = exports.TrdAckStatus || (exports.TrdAckStatus = {}));
var RiskLimitType;
(function (RiskLimitType) {
    RiskLimitType[RiskLimitType["CreditLimit"] = 0] = "CreditLimit";
    RiskLimitType[RiskLimitType["GrossLimit"] = 1] = "GrossLimit";
    RiskLimitType[RiskLimitType["NetLimit"] = 2] = "NetLimit";
    RiskLimitType[RiskLimitType["Exposure"] = 3] = "Exposure";
    RiskLimitType[RiskLimitType["LongLimit"] = 4] = "LongLimit";
    RiskLimitType[RiskLimitType["ShortLimit"] = 5] = "ShortLimit";
    RiskLimitType[RiskLimitType["CashMargin"] = 6] = "CashMargin";
    RiskLimitType[RiskLimitType["AdditionalMargin"] = 7] = "AdditionalMargin";
    RiskLimitType[RiskLimitType["TotalMargin"] = 8] = "TotalMargin";
    RiskLimitType[RiskLimitType["LimitConsumed"] = 9] = "LimitConsumed";
    RiskLimitType[RiskLimitType["ClipSizeNotionalLimitPerTimePeriod"] = 10] = "ClipSizeNotionalLimitPerTimePeriod";
    RiskLimitType[RiskLimitType["MaximumNotionalOrderSize"] = 11] = "MaximumNotionalOrderSize";
    RiskLimitType[RiskLimitType["Dv01Pv01Limit"] = 12] = "Dv01Pv01Limit";
    RiskLimitType[RiskLimitType["Cs01Limit"] = 13] = "Cs01Limit";
    RiskLimitType[RiskLimitType["VolumeLimitPerTimePeriod"] = 14] = "VolumeLimitPerTimePeriod";
    RiskLimitType[RiskLimitType["VolumeFilledAsPercentOfOrderedVolumePerTimePeriod"] = 15] = "VolumeFilledAsPercentOfOrderedVolumePerTimePeriod";
    RiskLimitType[RiskLimitType["NotionalFilledAsPercentOfNotionalPerTimePeriod"] = 16] = "NotionalFilledAsPercentOfNotionalPerTimePeriod";
    RiskLimitType[RiskLimitType["TransactionExecutionLimitPerTimePeriod"] = 17] = "TransactionExecutionLimitPerTimePeriod";
})(RiskLimitType = exports.RiskLimitType || (exports.RiskLimitType = {}));
var InstrumentScopeOperator;
(function (InstrumentScopeOperator) {
    InstrumentScopeOperator[InstrumentScopeOperator["Include"] = 1] = "Include";
    InstrumentScopeOperator[InstrumentScopeOperator["Exclude"] = 2] = "Exclude";
})(InstrumentScopeOperator = exports.InstrumentScopeOperator || (exports.InstrumentScopeOperator = {}));
var InstrumentScopeSecurityIDSource;
(function (InstrumentScopeSecurityIDSource) {
    InstrumentScopeSecurityIDSource["Cusip"] = "1";
    InstrumentScopeSecurityIDSource["Sedol"] = "2";
    InstrumentScopeSecurityIDSource["Quik"] = "3";
    InstrumentScopeSecurityIDSource["IsinNumber"] = "4";
    InstrumentScopeSecurityIDSource["RicCode"] = "5";
    InstrumentScopeSecurityIDSource["IsoCurrencyCode"] = "6";
    InstrumentScopeSecurityIDSource["IsoCountryCode"] = "7";
    InstrumentScopeSecurityIDSource["ExchangeSymbol"] = "8";
    InstrumentScopeSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    InstrumentScopeSecurityIDSource["BloombergSymbol"] = "A";
    InstrumentScopeSecurityIDSource["Wertpapier"] = "B";
    InstrumentScopeSecurityIDSource["Dutch"] = "C";
    InstrumentScopeSecurityIDSource["Valoren"] = "D";
    InstrumentScopeSecurityIDSource["Sicovam"] = "E";
    InstrumentScopeSecurityIDSource["Belgian"] = "F";
    InstrumentScopeSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    InstrumentScopeSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    InstrumentScopeSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    InstrumentScopeSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    InstrumentScopeSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    InstrumentScopeSecurityIDSource["LetterOfCredit"] = "L";
    InstrumentScopeSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    InstrumentScopeSecurityIDSource["MarkitRedEntityClip"] = "N";
    InstrumentScopeSecurityIDSource["MarkitRedPairClip"] = "P";
    InstrumentScopeSecurityIDSource["CftcCommodityCode"] = "Q";
    InstrumentScopeSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    InstrumentScopeSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    InstrumentScopeSecurityIDSource["LegalEntityIdentifier"] = "T";
    InstrumentScopeSecurityIDSource["Synthetic"] = "U";
    InstrumentScopeSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(InstrumentScopeSecurityIDSource = exports.InstrumentScopeSecurityIDSource || (exports.InstrumentScopeSecurityIDSource = {}));
var InstrumentScopeProduct;
(function (InstrumentScopeProduct) {
    InstrumentScopeProduct[InstrumentScopeProduct["Agency"] = 1] = "Agency";
    InstrumentScopeProduct[InstrumentScopeProduct["Commodity"] = 2] = "Commodity";
    InstrumentScopeProduct[InstrumentScopeProduct["Corporate"] = 3] = "Corporate";
    InstrumentScopeProduct[InstrumentScopeProduct["Currency"] = 4] = "Currency";
    InstrumentScopeProduct[InstrumentScopeProduct["Equity"] = 5] = "Equity";
    InstrumentScopeProduct[InstrumentScopeProduct["Government"] = 6] = "Government";
    InstrumentScopeProduct[InstrumentScopeProduct["Index"] = 7] = "Index";
    InstrumentScopeProduct[InstrumentScopeProduct["Loan"] = 8] = "Loan";
    InstrumentScopeProduct[InstrumentScopeProduct["Moneymarket"] = 9] = "Moneymarket";
    InstrumentScopeProduct[InstrumentScopeProduct["Mortgage"] = 10] = "Mortgage";
    InstrumentScopeProduct[InstrumentScopeProduct["Municipal"] = 11] = "Municipal";
    InstrumentScopeProduct[InstrumentScopeProduct["Other"] = 12] = "Other";
    InstrumentScopeProduct[InstrumentScopeProduct["Financing"] = 13] = "Financing";
})(InstrumentScopeProduct = exports.InstrumentScopeProduct || (exports.InstrumentScopeProduct = {}));
var InstrumentScopeSecurityType;
(function (InstrumentScopeSecurityType) {
    InstrumentScopeSecurityType["EuroSupranationalCoupons"] = "EUSUPRA";
    InstrumentScopeSecurityType["CorporateBond"] = "CORP";
    InstrumentScopeSecurityType["ForeignExchangeContract"] = "FOR";
    InstrumentScopeSecurityType["CommonStock"] = "CS";
    InstrumentScopeSecurityType["Repurchase"] = "REPO";
    InstrumentScopeSecurityType["BradyBond"] = "BRADY";
    InstrumentScopeSecurityType["TermLoan"] = "TERM";
    InstrumentScopeSecurityType["BankersAcceptance"] = "BA";
    InstrumentScopeSecurityType["AssetBackedSecurities"] = "ABS";
    InstrumentScopeSecurityType["OtherAnticipationNotesBanGanEtc"] = "AN";
    InstrumentScopeSecurityType["MutualFund"] = "MF";
    InstrumentScopeSecurityType["FederalAgencyCoupon"] = "FAC";
    InstrumentScopeSecurityType["CorporatePrivatePlacement"] = "CPP";
    InstrumentScopeSecurityType["PreferredStock"] = "PS";
    InstrumentScopeSecurityType["Forward"] = "FORWARD";
    InstrumentScopeSecurityType["CanadianTreasuryNotes"] = "CAN";
    InstrumentScopeSecurityType["RevolverLoan"] = "RVLV";
    InstrumentScopeSecurityType["BankDepositoryNote"] = "BDN";
    InstrumentScopeSecurityType["CanadianMortgageBonds"] = "CMB";
    InstrumentScopeSecurityType["CertificateOfObligation"] = "COFO";
    InstrumentScopeSecurityType["MultilegInstrument"] = "MLEG";
    InstrumentScopeSecurityType["NonDeliverableForward"] = "FXNDF";
    InstrumentScopeSecurityType["Cap"] = "CAP";
    InstrumentScopeSecurityType["FederalAgencyDiscountNote"] = "FADN";
    InstrumentScopeSecurityType["ConvertibleBond"] = "CB";
    InstrumentScopeSecurityType["CreditDefaultSwap"] = "CDS";
    InstrumentScopeSecurityType["BuySellback"] = "BUYSELL";
    InstrumentScopeSecurityType["CanadianTreasuryBills"] = "CTB";
    InstrumentScopeSecurityType["RevolverTermLoan"] = "RVLVTRM";
    InstrumentScopeSecurityType["BankNotes"] = "BN";
    InstrumentScopeSecurityType["CorpMortgageBackedSecurities"] = "CMBS";
    InstrumentScopeSecurityType["CertificateOfParticipation"] = "COFP";
    InstrumentScopeSecurityType["NoSecurityType"] = "NONE";
    InstrumentScopeSecurityType["FxSpot"] = "FXSPOT";
    InstrumentScopeSecurityType["UsTreasuryNoteDeprecatedValueUseTnote"] = "UST";
    InstrumentScopeSecurityType["PrivateExportFunding"] = "PEF";
    InstrumentScopeSecurityType["DualCurrency"] = "DUAL";
    InstrumentScopeSecurityType["SecuritiesLoan"] = "SECLOAN";
    InstrumentScopeSecurityType["EuroSovereigns"] = "EUSOV";
    InstrumentScopeSecurityType["BridgeLoan"] = "BRIDGE";
    InstrumentScopeSecurityType["BillOfExchanges"] = "BOX";
    InstrumentScopeSecurityType["CollateralizedMortgageObligation"] = "CMO";
    InstrumentScopeSecurityType["GeneralObligationBonds"] = "GO";
    InstrumentScopeSecurityType["FxForward"] = "FXFWD";
    InstrumentScopeSecurityType["Collar"] = "CLLR";
    InstrumentScopeSecurityType["UsTreasuryBillDeprecatedValueUseTbill"] = "USTB";
    InstrumentScopeSecurityType["UsdSupranationalCoupons"] = "SUPRA";
    InstrumentScopeSecurityType["EuroCorporateBond"] = "EUCORP";
    InstrumentScopeSecurityType["SecuritiesPledge"] = "SECPLEDGE";
    InstrumentScopeSecurityType["CanadianProvincialBonds"] = "PROV";
    InstrumentScopeSecurityType["LetterOfCredit"] = "LOFC";
    InstrumentScopeSecurityType["CanadianMoneyMarkets"] = "CAMM";
    InstrumentScopeSecurityType["IoetteMortgage"] = "IET";
    InstrumentScopeSecurityType["MandatoryTender"] = "MT";
    InstrumentScopeSecurityType["FxSwap"] = "FXSWAP";
    InstrumentScopeSecurityType["CommoditySwap"] = "CMDTYSWAP";
    InstrumentScopeSecurityType["EuroCorporateFloatingRateNotes"] = "EUFRN";
    InstrumentScopeSecurityType["TreasuryBillNonUs"] = "TB";
    InstrumentScopeSecurityType["SwingLineFacility"] = "SWING";
    InstrumentScopeSecurityType["CertificateOfDeposit"] = "CD";
    InstrumentScopeSecurityType["MortgageBackedSecurities"] = "MBS";
    InstrumentScopeSecurityType["RevenueAnticipationNote"] = "RAN";
    InstrumentScopeSecurityType["WildcardEntryForUseOnSecurityDefinitionRequest"] = "?";
    InstrumentScopeSecurityType["DeliveryVersusPledge"] = "DVPLDG";
    InstrumentScopeSecurityType["Exotic"] = "EXOTIC";
    InstrumentScopeSecurityType["UsCorporateFloatingRateNotes"] = "FRN";
    InstrumentScopeSecurityType["OptionsOnCombo"] = "OOC";
    InstrumentScopeSecurityType["UsTreasuryBond"] = "TBOND";
    InstrumentScopeSecurityType["DebtorInPossession"] = "DINP";
    InstrumentScopeSecurityType["CallLoans"] = "CL";
    InstrumentScopeSecurityType["MortgageInterestOnly"] = "MIO";
    InstrumentScopeSecurityType["RevenueBonds"] = "REV";
    InstrumentScopeSecurityType["Cash"] = "CASH";
    InstrumentScopeSecurityType["Floor"] = "FLR";
    InstrumentScopeSecurityType["CollateralBasket"] = "COLLBSKT";
    InstrumentScopeSecurityType["IndexedLinked"] = "XLINKD";
    InstrumentScopeSecurityType["InterestStripFromAnyBondOrNote"] = "TINT";
    InstrumentScopeSecurityType["Defaulted"] = "DEFLTED";
    InstrumentScopeSecurityType["CommercialPaper"] = "CP";
    InstrumentScopeSecurityType["MortgagePrincipalOnly"] = "MPO";
    InstrumentScopeSecurityType["SpecialAssessment"] = "SPCLA";
    InstrumentScopeSecurityType["ForwardRateAgreement"] = "FRA";
    InstrumentScopeSecurityType["StructuredNotes"] = "STRUCT";
    InstrumentScopeSecurityType["Future"] = "FUT";
    InstrumentScopeSecurityType["UsTreasuryBill"] = "TBILL";
    InstrumentScopeSecurityType["TreasuryInflationProtectedSecurities"] = "TIPS";
    InstrumentScopeSecurityType["Withdrawn"] = "WITHDRN";
    InstrumentScopeSecurityType["DepositNotes"] = "DN";
    InstrumentScopeSecurityType["MortgagePrivatePlacement"] = "MPP";
    InstrumentScopeSecurityType["SpecialObligation"] = "SPCLO";
    InstrumentScopeSecurityType["YankeeCorporateBond"] = "YANK";
    InstrumentScopeSecurityType["PrincipalStripOfACallableBondOrNote"] = "TCAL";
    InstrumentScopeSecurityType["Replaced"] = "REPLACD";
    InstrumentScopeSecurityType["EuroCertificateOfDeposit"] = "EUCD";
    InstrumentScopeSecurityType["MiscellaneousPassThrough"] = "MPT";
    InstrumentScopeSecurityType["SpecialTax"] = "SPCLT";
    InstrumentScopeSecurityType["DerivativeForward"] = "FWD";
    InstrumentScopeSecurityType["InterestRateSwap"] = "IRS";
    InstrumentScopeSecurityType["PrincipalStripFromANonCallableBondOrNote"] = "TPRN";
    InstrumentScopeSecurityType["Matured"] = "MATURED";
    InstrumentScopeSecurityType["EuroCommercialPaper"] = "EUCP";
    InstrumentScopeSecurityType["Pfandbriefe"] = "PFAND";
    InstrumentScopeSecurityType["TaxAnticipationNote"] = "TAN";
    InstrumentScopeSecurityType["TotalReturnSwap"] = "TRS";
    InstrumentScopeSecurityType["UsTreasuryNote"] = "TNOTE";
    InstrumentScopeSecurityType["AmendedRestated"] = "AMENDED";
    InstrumentScopeSecurityType["LiquidityNote"] = "LQN";
    InstrumentScopeSecurityType["ToBeAnnounced"] = "TBA";
    InstrumentScopeSecurityType["TaxAllocation"] = "TAXA";
    InstrumentScopeSecurityType["LoanLease"] = "LOANLEASE";
    InstrumentScopeSecurityType["Retired"] = "RETIRED";
    InstrumentScopeSecurityType["MediumTermNotes"] = "MTN";
    InstrumentScopeSecurityType["TaxExemptCommercialPaper"] = "TECP";
    InstrumentScopeSecurityType["OptionsOnFutures"] = "OOF";
    InstrumentScopeSecurityType["Overnight"] = "ONITE";
    InstrumentScopeSecurityType["TaxableMunicipalCp"] = "TMCP";
    InstrumentScopeSecurityType["OptionsOnPhysicalUseNotRecommended"] = "OOP";
    InstrumentScopeSecurityType["PromissoryNote"] = "PN";
    InstrumentScopeSecurityType["ShortTermLoanNote"] = "STN";
    InstrumentScopeSecurityType["TaxRevenueAnticipationNote"] = "TRAN";
    InstrumentScopeSecurityType["Option"] = "OPT";
    InstrumentScopeSecurityType["PlazosFijos"] = "PZFJ";
    InstrumentScopeSecurityType["VariableRateDemandNote"] = "VRDN";
    InstrumentScopeSecurityType["SecuredLiquidityNote"] = "SLQN";
    InstrumentScopeSecurityType["Warrant"] = "WAR";
    InstrumentScopeSecurityType["SpotForward"] = "SPOTFWD";
    InstrumentScopeSecurityType["TimeDeposit"] = "TD";
    InstrumentScopeSecurityType["SwapOption"] = "SWAPTION";
    InstrumentScopeSecurityType["Transmission"] = "XMISSION";
    InstrumentScopeSecurityType["TermLiquidityNote"] = "TLQN";
    InstrumentScopeSecurityType["GeneralTypeForAContractBasedOnAnEstablishedIndex"] = "INDEX";
    InstrumentScopeSecurityType["ExtendedCommNote"] = "XCN";
    InstrumentScopeSecurityType["BondBasket"] = "BDBSKT";
    InstrumentScopeSecurityType["YankeeCertificateOfDeposit"] = "YCD";
    InstrumentScopeSecurityType["ContractForDifference"] = "CFD";
    InstrumentScopeSecurityType["CorrelationSwap"] = "CRLTNSWAP";
    InstrumentScopeSecurityType["DividendSwap"] = "DVDNDSWAP";
    InstrumentScopeSecurityType["EquityBasket"] = "EQBSKT";
    InstrumentScopeSecurityType["EquityForward"] = "EQFWD";
    InstrumentScopeSecurityType["ReturnSwap"] = "RTRNSWAP";
    InstrumentScopeSecurityType["VarianceSwap"] = "VARSWAP";
})(InstrumentScopeSecurityType = exports.InstrumentScopeSecurityType || (exports.InstrumentScopeSecurityType = {}));
var InstrumentScopePutOrCall;
(function (InstrumentScopePutOrCall) {
    InstrumentScopePutOrCall[InstrumentScopePutOrCall["Put"] = 0] = "Put";
    InstrumentScopePutOrCall[InstrumentScopePutOrCall["Call"] = 1] = "Call";
})(InstrumentScopePutOrCall = exports.InstrumentScopePutOrCall || (exports.InstrumentScopePutOrCall = {}));
var InstrumentScopeSettlType;
(function (InstrumentScopeSettlType) {
    InstrumentScopeSettlType["RegularFxSpotSettlementT1OrT2DependingOnCurrency"] = "0";
    InstrumentScopeSettlType["CashTodT0"] = "1";
    InstrumentScopeSettlType["NextDayTomT1"] = "2";
    InstrumentScopeSettlType["T2"] = "3";
    InstrumentScopeSettlType["T3"] = "4";
    InstrumentScopeSettlType["T4"] = "5";
    InstrumentScopeSettlType["Future"] = "6";
    InstrumentScopeSettlType["WhenAndIfIssued"] = "7";
    InstrumentScopeSettlType["SellersOption"] = "8";
    InstrumentScopeSettlType["T5"] = "9";
    InstrumentScopeSettlType["BrokenDate"] = "B";
    InstrumentScopeSettlType["FxSpotNextSettlementSpot1AkaNextDay"] = "C";
})(InstrumentScopeSettlType = exports.InstrumentScopeSettlType || (exports.InstrumentScopeSettlType = {}));
var RelatedPartyDetailIDSource;
(function (RelatedPartyDetailIDSource) {
    RelatedPartyDetailIDSource["KoreanInvestorId"] = "1";
    RelatedPartyDetailIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    RelatedPartyDetailIDSource["TaiwaneseTradingAcct"] = "3";
    RelatedPartyDetailIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    RelatedPartyDetailIDSource["ChineseInvestorId"] = "5";
    RelatedPartyDetailIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    RelatedPartyDetailIDSource["UsSocialSecurityNumber"] = "7";
    RelatedPartyDetailIDSource["UsEmployerOrTaxIdNumber"] = "8";
    RelatedPartyDetailIDSource["AustralianBusinessNumber"] = "9";
    RelatedPartyDetailIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    RelatedPartyDetailIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    RelatedPartyDetailIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    RelatedPartyDetailIDSource["ProprietaryCustomCode"] = "D";
    RelatedPartyDetailIDSource["IsoCountryCode"] = "E";
    RelatedPartyDetailIDSource["AustralianTaxFileNumber"] = "A";
    RelatedPartyDetailIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    RelatedPartyDetailIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    RelatedPartyDetailIDSource["TaxId"] = "J";
    RelatedPartyDetailIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    RelatedPartyDetailIDSource["AustralianCompanyNumber"] = "K";
    RelatedPartyDetailIDSource["AustralianRegisteredBodyNumber"] = "L";
    RelatedPartyDetailIDSource["CftcReportingFirmIdentifier"] = "M";
    RelatedPartyDetailIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    RelatedPartyDetailIDSource["InterimIdentifier"] = "O";
    RelatedPartyDetailIDSource["ShortCodeIdentifier"] = "P";
    RelatedPartyDetailIDSource["NationalIdOfNaturalPerson"] = "Q";
})(RelatedPartyDetailIDSource = exports.RelatedPartyDetailIDSource || (exports.RelatedPartyDetailIDSource = {}));
var RelatedPartyDetailRole;
(function (RelatedPartyDetailRole) {
    RelatedPartyDetailRole[RelatedPartyDetailRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    RelatedPartyDetailRole[RelatedPartyDetailRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["InvestorId"] = 5] = "InvestorId";
    RelatedPartyDetailRole[RelatedPartyDetailRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["EnteringFirm"] = 7] = "EnteringFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    RelatedPartyDetailRole[RelatedPartyDetailRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    RelatedPartyDetailRole[RelatedPartyDetailRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    RelatedPartyDetailRole[RelatedPartyDetailRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    RelatedPartyDetailRole[RelatedPartyDetailRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    RelatedPartyDetailRole[RelatedPartyDetailRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ContraFirm"] = 17] = "ContraFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    RelatedPartyDetailRole[RelatedPartyDetailRole["Exchange"] = 22] = "Exchange";
    RelatedPartyDetailRole[RelatedPartyDetailRole["CustomerAccount"] = 24] = "CustomerAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    RelatedPartyDetailRole[RelatedPartyDetailRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    RelatedPartyDetailRole[RelatedPartyDetailRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    RelatedPartyDetailRole[RelatedPartyDetailRole["Custodian"] = 28] = "Custodian";
    RelatedPartyDetailRole[RelatedPartyDetailRole["Intermediary"] = 29] = "Intermediary";
    RelatedPartyDetailRole[RelatedPartyDetailRole["Agent"] = 30] = "Agent";
    RelatedPartyDetailRole[RelatedPartyDetailRole["SubCustodian"] = 31] = "SubCustodian";
    RelatedPartyDetailRole[RelatedPartyDetailRole["Beneficiary"] = 32] = "Beneficiary";
    RelatedPartyDetailRole[RelatedPartyDetailRole["InterestedParty"] = 33] = "InterestedParty";
    RelatedPartyDetailRole[RelatedPartyDetailRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    RelatedPartyDetailRole[RelatedPartyDetailRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    RelatedPartyDetailRole[RelatedPartyDetailRole["EnteringTrader"] = 36] = "EnteringTrader";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ContraTrader"] = 37] = "ContraTrader";
    RelatedPartyDetailRole[RelatedPartyDetailRole["PositionAccount"] = 38] = "PositionAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    RelatedPartyDetailRole[RelatedPartyDetailRole["TransferToFirm"] = 40] = "TransferToFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ContraExchange"] = 42] = "ContraExchange";
    RelatedPartyDetailRole[RelatedPartyDetailRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    RelatedPartyDetailRole[RelatedPartyDetailRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ForeignFirm"] = 46] = "ForeignFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["AssetManager"] = 49] = "AssetManager";
    RelatedPartyDetailRole[RelatedPartyDetailRole["PledgorAccount"] = 50] = "PledgorAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    RelatedPartyDetailRole[RelatedPartyDetailRole["SenderLocation"] = 54] = "SenderLocation";
    RelatedPartyDetailRole[RelatedPartyDetailRole["SessionId"] = 55] = "SessionId";
    RelatedPartyDetailRole[RelatedPartyDetailRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    RelatedPartyDetailRole[RelatedPartyDetailRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    RelatedPartyDetailRole[RelatedPartyDetailRole["EnteringUnit"] = 58] = "EnteringUnit";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    RelatedPartyDetailRole[RelatedPartyDetailRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    RelatedPartyDetailRole[RelatedPartyDetailRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ReportOriginator"] = 62] = "ReportOriginator";
    RelatedPartyDetailRole[RelatedPartyDetailRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    RelatedPartyDetailRole[RelatedPartyDetailRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    RelatedPartyDetailRole[RelatedPartyDetailRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["MarketMaker"] = 66] = "MarketMaker";
    RelatedPartyDetailRole[RelatedPartyDetailRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    RelatedPartyDetailRole[RelatedPartyDetailRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    RelatedPartyDetailRole[RelatedPartyDetailRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    RelatedPartyDetailRole[RelatedPartyDetailRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    RelatedPartyDetailRole[RelatedPartyDetailRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    RelatedPartyDetailRole[RelatedPartyDetailRole["LocationId"] = 75] = "LocationId";
    RelatedPartyDetailRole[RelatedPartyDetailRole["DeskId"] = 76] = "DeskId";
    RelatedPartyDetailRole[RelatedPartyDetailRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    RelatedPartyDetailRole[RelatedPartyDetailRole["AllocationEntity"] = 78] = "AllocationEntity";
    RelatedPartyDetailRole[RelatedPartyDetailRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    RelatedPartyDetailRole[RelatedPartyDetailRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    RelatedPartyDetailRole[RelatedPartyDetailRole["BrokerCientId"] = 81] = "BrokerCientId";
    RelatedPartyDetailRole[RelatedPartyDetailRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ClearingAccount"] = 83] = "ClearingAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    RelatedPartyDetailRole[RelatedPartyDetailRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    RelatedPartyDetailRole[RelatedPartyDetailRole["InConcertGroup"] = 87] = "InConcertGroup";
    RelatedPartyDetailRole[RelatedPartyDetailRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    RelatedPartyDetailRole[RelatedPartyDetailRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["SettlementFirm"] = 90] = "SettlementFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["SettlementAccount"] = 91] = "SettlementAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    RelatedPartyDetailRole[RelatedPartyDetailRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    RelatedPartyDetailRole[RelatedPartyDetailRole["AwayMarket"] = 94] = "AwayMarket";
    RelatedPartyDetailRole[RelatedPartyDetailRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    RelatedPartyDetailRole[RelatedPartyDetailRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    RelatedPartyDetailRole[RelatedPartyDetailRole["MarginAccount"] = 100] = "MarginAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["DataRepository"] = 102] = "DataRepository";
    RelatedPartyDetailRole[RelatedPartyDetailRole["CalculationAgent"] = 103] = "CalculationAgent";
    RelatedPartyDetailRole[RelatedPartyDetailRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    RelatedPartyDetailRole[RelatedPartyDetailRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    RelatedPartyDetailRole[RelatedPartyDetailRole["Correspondent"] = 107] = "Correspondent";
    RelatedPartyDetailRole[RelatedPartyDetailRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    RelatedPartyDetailRole[RelatedPartyDetailRole["Borrower"] = 110] = "Borrower";
    RelatedPartyDetailRole[RelatedPartyDetailRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    RelatedPartyDetailRole[RelatedPartyDetailRole["Guarantor"] = 112] = "Guarantor";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    RelatedPartyDetailRole[RelatedPartyDetailRole["DeterminingParty"] = 114] = "DeterminingParty";
    RelatedPartyDetailRole[RelatedPartyDetailRole["HedgingParty"] = 115] = "HedgingParty";
    RelatedPartyDetailRole[RelatedPartyDetailRole["ReportingEntity"] = 116] = "ReportingEntity";
    RelatedPartyDetailRole[RelatedPartyDetailRole["SalesPerson"] = 117] = "SalesPerson";
    RelatedPartyDetailRole[RelatedPartyDetailRole["Operator"] = 118] = "Operator";
    RelatedPartyDetailRole[RelatedPartyDetailRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    RelatedPartyDetailRole[RelatedPartyDetailRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    RelatedPartyDetailRole[RelatedPartyDetailRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    RelatedPartyDetailRole[RelatedPartyDetailRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(RelatedPartyDetailRole = exports.RelatedPartyDetailRole || (exports.RelatedPartyDetailRole = {}));
var RelatedPartyDetailSubIDType;
(function (RelatedPartyDetailSubIDType) {
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["Firm"] = 1] = "Firm";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["Person"] = 2] = "Person";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["System"] = 3] = "System";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["Application"] = 4] = "Application";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["PostalAddress"] = 6] = "PostalAddress";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["EmailAddress"] = 8] = "EmailAddress";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["ContactName"] = 9] = "ContactName";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["Bic"] = 16] = "Bic";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["FundAccountName"] = 19] = "FundAccountName";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["TelexNumber"] = 20] = "TelexNumber";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["FaxNumber"] = 21] = "FaxNumber";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["CashAccountName"] = 23] = "CashAccountName";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["Department"] = 24] = "Department";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["LocationDesk"] = 25] = "LocationDesk";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["MarketMaker"] = 28] = "MarketMaker";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["Location"] = 31] = "Location";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["AddressCity"] = 34] = "AddressCity";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["AddressStreet"] = 37] = "AddressStreet";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["MarketSegment"] = 40] = "MarketSegment";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["SwapDealer"] = 45] = "SwapDealer";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["USPerson"] = 48] = "USPerson";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["ReferenceText"] = 52] = "ReferenceText";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["EndUser"] = 69] = "EndUser";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["Domicile"] = 72] = "Domicile";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["Payer"] = 74] = "Payer";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["Receiver"] = 75] = "Receiver";
    RelatedPartyDetailSubIDType[RelatedPartyDetailSubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(RelatedPartyDetailSubIDType = exports.RelatedPartyDetailSubIDType || (exports.RelatedPartyDetailSubIDType = {}));
var RelatedPartyDetailAltIDSource;
(function (RelatedPartyDetailAltIDSource) {
    RelatedPartyDetailAltIDSource["KoreanInvestorId"] = "1";
    RelatedPartyDetailAltIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    RelatedPartyDetailAltIDSource["TaiwaneseTradingAcct"] = "3";
    RelatedPartyDetailAltIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    RelatedPartyDetailAltIDSource["ChineseInvestorId"] = "5";
    RelatedPartyDetailAltIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    RelatedPartyDetailAltIDSource["UsSocialSecurityNumber"] = "7";
    RelatedPartyDetailAltIDSource["UsEmployerOrTaxIdNumber"] = "8";
    RelatedPartyDetailAltIDSource["AustralianBusinessNumber"] = "9";
    RelatedPartyDetailAltIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    RelatedPartyDetailAltIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    RelatedPartyDetailAltIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    RelatedPartyDetailAltIDSource["ProprietaryCustomCode"] = "D";
    RelatedPartyDetailAltIDSource["IsoCountryCode"] = "E";
    RelatedPartyDetailAltIDSource["AustralianTaxFileNumber"] = "A";
    RelatedPartyDetailAltIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    RelatedPartyDetailAltIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    RelatedPartyDetailAltIDSource["TaxId"] = "J";
    RelatedPartyDetailAltIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    RelatedPartyDetailAltIDSource["AustralianCompanyNumber"] = "K";
    RelatedPartyDetailAltIDSource["AustralianRegisteredBodyNumber"] = "L";
    RelatedPartyDetailAltIDSource["CftcReportingFirmIdentifier"] = "M";
    RelatedPartyDetailAltIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    RelatedPartyDetailAltIDSource["InterimIdentifier"] = "O";
    RelatedPartyDetailAltIDSource["ShortCodeIdentifier"] = "P";
    RelatedPartyDetailAltIDSource["NationalIdOfNaturalPerson"] = "Q";
})(RelatedPartyDetailAltIDSource = exports.RelatedPartyDetailAltIDSource || (exports.RelatedPartyDetailAltIDSource = {}));
var RelatedPartyDetailAltSubIDType;
(function (RelatedPartyDetailAltSubIDType) {
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["Firm"] = 1] = "Firm";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["Person"] = 2] = "Person";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["System"] = 3] = "System";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["Application"] = 4] = "Application";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["PostalAddress"] = 6] = "PostalAddress";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["EmailAddress"] = 8] = "EmailAddress";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["ContactName"] = 9] = "ContactName";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["Bic"] = 16] = "Bic";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["FundAccountName"] = 19] = "FundAccountName";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["TelexNumber"] = 20] = "TelexNumber";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["FaxNumber"] = 21] = "FaxNumber";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["CashAccountName"] = 23] = "CashAccountName";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["Department"] = 24] = "Department";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["LocationDesk"] = 25] = "LocationDesk";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["MarketMaker"] = 28] = "MarketMaker";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["Location"] = 31] = "Location";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["AddressCity"] = 34] = "AddressCity";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["AddressStreet"] = 37] = "AddressStreet";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["MarketSegment"] = 40] = "MarketSegment";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["SwapDealer"] = 45] = "SwapDealer";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["USPerson"] = 48] = "USPerson";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["ReferenceText"] = 52] = "ReferenceText";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["EndUser"] = 69] = "EndUser";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["Domicile"] = 72] = "Domicile";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["Payer"] = 74] = "Payer";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["Receiver"] = 75] = "Receiver";
    RelatedPartyDetailAltSubIDType[RelatedPartyDetailAltSubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(RelatedPartyDetailAltSubIDType = exports.RelatedPartyDetailAltSubIDType || (exports.RelatedPartyDetailAltSubIDType = {}));
var SwapSubClass;
(function (SwapSubClass) {
    SwapSubClass["Amortizing"] = "AMTZ";
    SwapSubClass["Compounding"] = "COMP";
})(SwapSubClass = exports.SwapSubClass || (exports.SwapSubClass = {}));
var SecurityClassificationReason;
(function (SecurityClassificationReason) {
    SecurityClassificationReason[SecurityClassificationReason["Fee"] = 0] = "Fee";
    SecurityClassificationReason[SecurityClassificationReason["CreditControls"] = 1] = "CreditControls";
    SecurityClassificationReason[SecurityClassificationReason["Margin"] = 2] = "Margin";
    SecurityClassificationReason[SecurityClassificationReason["EntitlementEligibility"] = 3] = "EntitlementEligibility";
    SecurityClassificationReason[SecurityClassificationReason["MarketData"] = 4] = "MarketData";
    SecurityClassificationReason[SecurityClassificationReason["AccountSelection"] = 5] = "AccountSelection";
    SecurityClassificationReason[SecurityClassificationReason["DeliveryProcess"] = 6] = "DeliveryProcess";
    SecurityClassificationReason[SecurityClassificationReason["Sector"] = 7] = "Sector";
})(SecurityClassificationReason = exports.SecurityClassificationReason || (exports.SecurityClassificationReason = {}));
var PosAmtReason;
(function (PosAmtReason) {
    PosAmtReason[PosAmtReason["OptionsSettlement"] = 0] = "OptionsSettlement";
    PosAmtReason[PosAmtReason["PendingErosionAdjustment"] = 1] = "PendingErosionAdjustment";
    PosAmtReason[PosAmtReason["FinalErosionAdjustment"] = 2] = "FinalErosionAdjustment";
    PosAmtReason[PosAmtReason["TearUpCouponAmount"] = 3] = "TearUpCouponAmount";
    PosAmtReason[PosAmtReason["PriceAlignmentInterest"] = 4] = "PriceAlignmentInterest";
    PosAmtReason[PosAmtReason["DeliveryInvoiceCharges"] = 5] = "DeliveryInvoiceCharges";
    PosAmtReason[PosAmtReason["DeliveryStorageCharges"] = 6] = "DeliveryStorageCharges";
})(PosAmtReason = exports.PosAmtReason || (exports.PosAmtReason = {}));
var LegPosAmtType;
(function (LegPosAmtType) {
    LegPosAmtType["CashAmountCorporateEvent"] = "CASH";
    LegPosAmtType["CashResidualAmount"] = "CRES";
    LegPosAmtType["FinalMarkToMarketAmount"] = "FMTM";
    LegPosAmtType["IncrementalMarkToMarket"] = "IMTM";
    LegPosAmtType["PremiumAmount"] = "PREM";
    LegPosAmtType["StartOfDayMarkToMarket"] = "SMTM";
    LegPosAmtType["TradeVariationAmount"] = "TVAR";
    LegPosAmtType["ValueAdjustedAmount"] = "VADJ";
    LegPosAmtType["SettlementValue"] = "SETL";
    LegPosAmtType["InitialTradeCouponAmount"] = "ICPN";
    LegPosAmtType["AccruedCouponAmount"] = "ACPN";
    LegPosAmtType["CouponAmount"] = "CPN";
    LegPosAmtType["IncrementalAccruedCoupon"] = "IACPN";
    LegPosAmtType["CollateralizedMarkToMarket"] = "CMTM";
    LegPosAmtType["IncrementalCollateralizedMarkToMarket"] = "ICMTM";
    LegPosAmtType["CompensationAmount"] = "DLV";
    LegPosAmtType["TotalBankedAmount"] = "BANK";
    LegPosAmtType["TotalCollateralizedAmount"] = "COLAT";
    LegPosAmtType["LongPairedSwapOrSwaptionNotionalValue"] = "LSNV";
    LegPosAmtType["ShortPairedSwapOrSwaptionNotionalValue"] = "SSNV";
    LegPosAmtType["StartOfDayAccruedCoupon"] = "SACPN";
    LegPosAmtType["NetPresentValue"] = "NPV";
    LegPosAmtType["StartOfDayNetPresentValue"] = "SNPV";
    LegPosAmtType["NetCashFlow"] = "NCF";
    LegPosAmtType["PresentValueOfAllFees"] = "PVFEES";
    LegPosAmtType["PresentValueOfOneBasisPoints"] = "PV01";
    LegPosAmtType["TheFiveYearEquivalentNotionalAmount"] = "5YREN";
    LegPosAmtType["UndiscountedMarkToMarket"] = "UMTM";
    LegPosAmtType["MarkToModel"] = "MTD";
    LegPosAmtType["MarkToMarketVariance"] = "VMTM";
    LegPosAmtType["MarkToModelVariance"] = "VMTD";
    LegPosAmtType["UpfrontPayment"] = "UPFRNT";
})(LegPosAmtType = exports.LegPosAmtType || (exports.LegPosAmtType = {}));
var LegPosAmtReason;
(function (LegPosAmtReason) {
    LegPosAmtReason[LegPosAmtReason["OptionsSettlement"] = 0] = "OptionsSettlement";
    LegPosAmtReason[LegPosAmtReason["PendingErosionAdjustment"] = 1] = "PendingErosionAdjustment";
    LegPosAmtReason[LegPosAmtReason["FinalErosionAdjustment"] = 2] = "FinalErosionAdjustment";
    LegPosAmtReason[LegPosAmtReason["TearUpCouponAmount"] = 3] = "TearUpCouponAmount";
    LegPosAmtReason[LegPosAmtReason["PriceAlignmentInterest"] = 4] = "PriceAlignmentInterest";
    LegPosAmtReason[LegPosAmtReason["DeliveryInvoiceCharges"] = 5] = "DeliveryInvoiceCharges";
    LegPosAmtReason[LegPosAmtReason["DeliveryStorageCharges"] = 6] = "DeliveryStorageCharges";
})(LegPosAmtReason = exports.LegPosAmtReason || (exports.LegPosAmtReason = {}));
var LegQtyType;
(function (LegQtyType) {
    LegQtyType[LegQtyType["UnitsSharesParCurrency"] = 0] = "UnitsSharesParCurrency";
    LegQtyType[LegQtyType["Contracts"] = 1] = "Contracts";
    LegQtyType[LegQtyType["UnitOfMeasurePerTimeUnit"] = 2] = "UnitOfMeasurePerTimeUnit";
})(LegQtyType = exports.LegQtyType || (exports.LegQtyType = {}));
var SideClearingTradePriceType;
(function (SideClearingTradePriceType) {
    SideClearingTradePriceType[SideClearingTradePriceType["TradeClearingAtExecutionPrice"] = 0] = "TradeClearingAtExecutionPrice";
    SideClearingTradePriceType[SideClearingTradePriceType["TradeClearingAtAlternateClearingPrice"] = 1] = "TradeClearingAtAlternateClearingPrice";
})(SideClearingTradePriceType = exports.SideClearingTradePriceType || (exports.SideClearingTradePriceType = {}));
var SecurityRejectReason;
(function (SecurityRejectReason) {
    SecurityRejectReason[SecurityRejectReason["InvalidInstrumentRequested"] = 1] = "InvalidInstrumentRequested";
    SecurityRejectReason[SecurityRejectReason["InstrumentAlreadyExists"] = 2] = "InstrumentAlreadyExists";
    SecurityRejectReason[SecurityRejectReason["RequestTypeNotSupported"] = 3] = "RequestTypeNotSupported";
    SecurityRejectReason[SecurityRejectReason["SystemUnavailableForInstrumentCreation"] = 4] = "SystemUnavailableForInstrumentCreation";
    SecurityRejectReason[SecurityRejectReason["IneligibleInstrumentGroup"] = 5] = "IneligibleInstrumentGroup";
    SecurityRejectReason[SecurityRejectReason["InstrumentIdUnavailable"] = 6] = "InstrumentIdUnavailable";
    SecurityRejectReason[SecurityRejectReason["InvalidOrMissingDataOnOptionLeg"] = 7] = "InvalidOrMissingDataOnOptionLeg";
    SecurityRejectReason[SecurityRejectReason["InvalidOrMissingDataOnFutureLeg"] = 8] = "InvalidOrMissingDataOnFutureLeg";
    SecurityRejectReason[SecurityRejectReason["InvalidOrMissingDataOnFxLeg"] = 10] = "InvalidOrMissingDataOnFxLeg";
    SecurityRejectReason[SecurityRejectReason["InvalidLegPriceSpecified"] = 11] = "InvalidLegPriceSpecified";
    SecurityRejectReason[SecurityRejectReason["InvalidInstrumentStructureSpecified"] = 12] = "InvalidInstrumentStructureSpecified";
})(SecurityRejectReason = exports.SecurityRejectReason || (exports.SecurityRejectReason = {}));
var ThrottleStatus;
(function (ThrottleStatus) {
    ThrottleStatus[ThrottleStatus["ThrottleLimitNotExceededNotQueued"] = 0] = "ThrottleLimitNotExceededNotQueued";
    ThrottleStatus[ThrottleStatus["QueuedDueToThrottleLimitExceeded"] = 1] = "QueuedDueToThrottleLimitExceeded";
})(ThrottleStatus = exports.ThrottleStatus || (exports.ThrottleStatus = {}));
var ThrottleAction;
(function (ThrottleAction) {
    ThrottleAction[ThrottleAction["QueueInbound"] = 0] = "QueueInbound";
    ThrottleAction[ThrottleAction["QueueOutbound"] = 1] = "QueueOutbound";
    ThrottleAction[ThrottleAction["Reject"] = 2] = "Reject";
    ThrottleAction[ThrottleAction["Disconnect"] = 3] = "Disconnect";
    ThrottleAction[ThrottleAction["Warning"] = 4] = "Warning";
})(ThrottleAction = exports.ThrottleAction || (exports.ThrottleAction = {}));
var ThrottleType;
(function (ThrottleType) {
    ThrottleType[ThrottleType["InboundRate"] = 0] = "InboundRate";
    ThrottleType[ThrottleType["OutstandingRequests"] = 1] = "OutstandingRequests";
})(ThrottleType = exports.ThrottleType || (exports.ThrottleType = {}));
var ThrottleTimeUnit;
(function (ThrottleTimeUnit) {
    ThrottleTimeUnit[ThrottleTimeUnit["SecondsDefaultIfNotSpecified"] = 0] = "SecondsDefaultIfNotSpecified";
    ThrottleTimeUnit[ThrottleTimeUnit["TenthsOfASecond"] = 1] = "TenthsOfASecond";
    ThrottleTimeUnit[ThrottleTimeUnit["HundredthsOfASecond"] = 2] = "HundredthsOfASecond";
    ThrottleTimeUnit[ThrottleTimeUnit["Milliseconds"] = 3] = "Milliseconds";
    ThrottleTimeUnit[ThrottleTimeUnit["Microseconds"] = 4] = "Microseconds";
    ThrottleTimeUnit[ThrottleTimeUnit["Nanoseconds"] = 5] = "Nanoseconds";
    ThrottleTimeUnit[ThrottleTimeUnit["Minutes"] = 10] = "Minutes";
    ThrottleTimeUnit[ThrottleTimeUnit["Hours"] = 11] = "Hours";
    ThrottleTimeUnit[ThrottleTimeUnit["Days"] = 12] = "Days";
    ThrottleTimeUnit[ThrottleTimeUnit["Weeks"] = 13] = "Weeks";
    ThrottleTimeUnit[ThrottleTimeUnit["Months"] = 14] = "Months";
    ThrottleTimeUnit[ThrottleTimeUnit["Years"] = 15] = "Years";
})(ThrottleTimeUnit = exports.ThrottleTimeUnit || (exports.ThrottleTimeUnit = {}));
var StreamAsgnType;
(function (StreamAsgnType) {
    StreamAsgnType[StreamAsgnType["Assignment"] = 1] = "Assignment";
    StreamAsgnType[StreamAsgnType["Rejected"] = 2] = "Rejected";
    StreamAsgnType[StreamAsgnType["TerminateUnassign"] = 3] = "TerminateUnassign";
})(StreamAsgnType = exports.StreamAsgnType || (exports.StreamAsgnType = {}));
var ThrottleMsgType;
(function (ThrottleMsgType) {
    ThrottleMsgType["Heartbeat"] = "0";
    ThrottleMsgType["TestRequest"] = "1";
    ThrottleMsgType["ResendRequest"] = "2";
    ThrottleMsgType["Reject"] = "3";
    ThrottleMsgType["SequenceReset"] = "4";
    ThrottleMsgType["Logout"] = "5";
    ThrottleMsgType["Ioi"] = "6";
    ThrottleMsgType["Advertisement"] = "7";
    ThrottleMsgType["ExecutionReport"] = "8";
    ThrottleMsgType["OrderCancelReject"] = "9";
    ThrottleMsgType["Logon"] = "A";
    ThrottleMsgType["News"] = "B";
    ThrottleMsgType["Email"] = "C";
    ThrottleMsgType["NewOrderSingle"] = "D";
    ThrottleMsgType["NewOrderList"] = "E";
    ThrottleMsgType["OrderCancelRequest"] = "F";
    ThrottleMsgType["OrderCancelReplaceRequest"] = "G";
    ThrottleMsgType["OrderStatusRequest"] = "H";
    ThrottleMsgType["AllocationInstruction"] = "J";
    ThrottleMsgType["ListCancelRequest"] = "K";
    ThrottleMsgType["ListExecute"] = "L";
    ThrottleMsgType["ListStatusRequest"] = "M";
    ThrottleMsgType["ListStatus"] = "N";
    ThrottleMsgType["AllocationInstructionAck"] = "P";
    ThrottleMsgType["DontKnowTrade"] = "Q";
    ThrottleMsgType["QuoteRequest"] = "R";
    ThrottleMsgType["Quote"] = "S";
    ThrottleMsgType["SettlementInstructions"] = "T";
    ThrottleMsgType["MarketDataRequest"] = "V";
    ThrottleMsgType["MarketDataSnapshotFullRefresh"] = "W";
    ThrottleMsgType["MarketDataIncrementalRefresh"] = "X";
    ThrottleMsgType["MarketDataRequestReject"] = "Y";
    ThrottleMsgType["QuoteCancel"] = "Z";
    ThrottleMsgType["QuoteStatusRequest"] = "a";
    ThrottleMsgType["MassQuoteAck"] = "b";
    ThrottleMsgType["SecurityDefinitionRequest"] = "c";
    ThrottleMsgType["SecurityDefinition"] = "d";
    ThrottleMsgType["SecurityStatusRequest"] = "e";
    ThrottleMsgType["SecurityStatus"] = "f";
    ThrottleMsgType["TradingSessionStatusRequest"] = "g";
    ThrottleMsgType["TradingSessionStatus"] = "h";
    ThrottleMsgType["MassQuote"] = "i";
    ThrottleMsgType["BusinessMessageReject"] = "j";
    ThrottleMsgType["BidRequest"] = "k";
    ThrottleMsgType["BidResponse"] = "l";
    ThrottleMsgType["ListStrikePrice"] = "m";
    ThrottleMsgType["XmLnonFix"] = "n";
    ThrottleMsgType["RegistrationInstructions"] = "o";
    ThrottleMsgType["RegistrationInstructionsResponse"] = "p";
    ThrottleMsgType["OrderMassCancelRequest"] = "q";
    ThrottleMsgType["OrderMassCancelReport"] = "r";
    ThrottleMsgType["NewOrderCross"] = "s";
    ThrottleMsgType["CrossOrderCancelReplaceRequest"] = "t";
    ThrottleMsgType["CrossOrderCancelRequest"] = "u";
    ThrottleMsgType["SecurityTypeRequest"] = "v";
    ThrottleMsgType["SecurityTypes"] = "w";
    ThrottleMsgType["SecurityListRequest"] = "x";
    ThrottleMsgType["SecurityList"] = "y";
    ThrottleMsgType["DerivativeSecurityListRequest"] = "z";
    ThrottleMsgType["DerivativeSecurityList"] = "AA";
    ThrottleMsgType["NewOrderMultileg"] = "AB";
    ThrottleMsgType["MultilegOrderCancelReplace"] = "AC";
    ThrottleMsgType["TradeCaptureReportRequest"] = "AD";
    ThrottleMsgType["TradeCaptureReport"] = "AE";
    ThrottleMsgType["OrderMassStatusRequest"] = "AF";
    ThrottleMsgType["QuoteRequestReject"] = "AG";
    ThrottleMsgType["RfqRequest"] = "AH";
    ThrottleMsgType["QuoteStatusReport"] = "AI";
    ThrottleMsgType["QuoteResponse"] = "AJ";
    ThrottleMsgType["Confirmation"] = "AK";
    ThrottleMsgType["PositionMaintenanceRequest"] = "AL";
    ThrottleMsgType["PositionMaintenanceReport"] = "AM";
    ThrottleMsgType["RequestForPositions"] = "AN";
    ThrottleMsgType["RequestForPositionsAck"] = "AO";
    ThrottleMsgType["PositionReport"] = "AP";
    ThrottleMsgType["TradeCaptureReportRequestAck"] = "AQ";
    ThrottleMsgType["TradeCaptureReportAck"] = "AR";
    ThrottleMsgType["AllocationReport"] = "AS";
    ThrottleMsgType["AllocationReportAck"] = "AT";
    ThrottleMsgType["ConfirmationAck"] = "AU";
    ThrottleMsgType["SettlementInstructionRequest"] = "AV";
    ThrottleMsgType["AssignmentReport"] = "AW";
    ThrottleMsgType["CollateralRequest"] = "AX";
    ThrottleMsgType["CollateralAssignment"] = "AY";
    ThrottleMsgType["CollateralResponse"] = "AZ";
    ThrottleMsgType["CollateralReport"] = "BA";
    ThrottleMsgType["CollateralInquiry"] = "BB";
    ThrottleMsgType["NetworkCounterpartySystemStatusRequest"] = "BC";
    ThrottleMsgType["NetworkCounterpartySystemStatusResponse"] = "BD";
    ThrottleMsgType["UserRequest"] = "BE";
    ThrottleMsgType["UserResponse"] = "BF";
    ThrottleMsgType["CollateralInquiryAck"] = "BG";
    ThrottleMsgType["ConfirmationRequest"] = "BH";
    ThrottleMsgType["ContraryIntentionReport"] = "BO";
    ThrottleMsgType["SecurityDefinitionUpdateReport"] = "BP";
    ThrottleMsgType["SecurityListUpdateReport"] = "BK";
    ThrottleMsgType["AdjustedPositionReport"] = "BL";
    ThrottleMsgType["AllocationInstructionAlert"] = "BM";
    ThrottleMsgType["ExecutionAck"] = "BN";
    ThrottleMsgType["TradingSessionList"] = "BJ";
    ThrottleMsgType["TradingSessionListRequest"] = "BI";
    ThrottleMsgType["SettlementObligationReport"] = "BQ";
    ThrottleMsgType["DerivativeSecurityListUpdateReport"] = "BR";
    ThrottleMsgType["TradingSessionListUpdateReport"] = "BS";
    ThrottleMsgType["MarketDefinitionRequest"] = "BT";
    ThrottleMsgType["MarketDefinition"] = "BU";
    ThrottleMsgType["MarketDefinitionUpdateReport"] = "BV";
    ThrottleMsgType["ApplicationMessageRequest"] = "BW";
    ThrottleMsgType["ApplicationMessageRequestAck"] = "BX";
    ThrottleMsgType["ApplicationMessageReport"] = "BY";
    ThrottleMsgType["OrderMassActionReport"] = "BZ";
    ThrottleMsgType["OrderMassActionRequest"] = "CA";
    ThrottleMsgType["UserNotification"] = "CB";
    ThrottleMsgType["StreamAssignmentRequest"] = "CC";
    ThrottleMsgType["StreamAssignmentReport"] = "CD";
    ThrottleMsgType["StreamAssignmentReportAck"] = "CE";
    ThrottleMsgType["PartyDetailsListRequest"] = "CF";
    ThrottleMsgType["PartyDetailsListReport"] = "CG";
    ThrottleMsgType["MarginRequirementInquiry"] = "CH";
    ThrottleMsgType["MarginRequirementInquiryAck"] = "CI";
    ThrottleMsgType["MarginRequirementReport"] = "CJ";
    ThrottleMsgType["PartyDetailsListUpdateReport"] = "CK";
    ThrottleMsgType["PartyRiskLimitsRequest"] = "CL";
    ThrottleMsgType["PartyRiskLimitsReport"] = "CM";
    ThrottleMsgType["SecurityMassStatusRequest"] = "CN";
    ThrottleMsgType["SecurityMassStatus"] = "CO";
    ThrottleMsgType["AccountSummaryReport"] = "CQ";
    ThrottleMsgType["PartyRiskLimitsUpdateReport"] = "CR";
    ThrottleMsgType["PartyRiskLimitsDefinitionRequest"] = "CS";
    ThrottleMsgType["PartyRiskLimitsDefinitionRequestAck"] = "CT";
    ThrottleMsgType["PartyEntitlementsRequest"] = "CU";
    ThrottleMsgType["PartyEntitlementsReport"] = "CV";
    ThrottleMsgType["QuoteAck"] = "CW";
    ThrottleMsgType["PartyDetailsDefinitionRequest"] = "CX";
    ThrottleMsgType["PartyDetailsDefinitionRequestAck"] = "CY";
    ThrottleMsgType["PartyEntitlementsUpdateReport"] = "CZ";
    ThrottleMsgType["PartyEntitlementsDefinitionRequest"] = "DA";
    ThrottleMsgType["PartyEntitlementsDefinitionRequestAck"] = "DB";
    ThrottleMsgType["TradeMatchReport"] = "DC";
    ThrottleMsgType["TradeMatchReportAck"] = "DD";
    ThrottleMsgType["PartyRiskLimitsReportAck"] = "DE";
    ThrottleMsgType["PartyRiskLimitCheckRequest"] = "DF";
    ThrottleMsgType["PartyRiskLimitCheckRequestAck"] = "DG";
    ThrottleMsgType["PartyActionRequest"] = "DH";
    ThrottleMsgType["PartyActionReport"] = "DI";
    ThrottleMsgType["MassOrder"] = "DJ";
    ThrottleMsgType["MassOrderAck"] = "DK";
    ThrottleMsgType["PositionTransferInstruction"] = "DL";
    ThrottleMsgType["PositionTransferInstructionAck"] = "DM";
    ThrottleMsgType["PositionTransferReport"] = "DN";
    ThrottleMsgType["MarketDataStatisticsRequest"] = "DO";
    ThrottleMsgType["MarketDataStatisticsReport"] = "DP";
    ThrottleMsgType["CollateralReportAck"] = "DQ";
    ThrottleMsgType["MarketDataReport"] = "DR";
    ThrottleMsgType["CrossRequest"] = "DS";
    ThrottleMsgType["CrossRequestAck"] = "DT";
})(ThrottleMsgType = exports.ThrottleMsgType || (exports.ThrottleMsgType = {}));
var MatchInst;
(function (MatchInst) {
    MatchInst[MatchInst["Match"] = 1] = "Match";
    MatchInst[MatchInst["DoNotMatch"] = 2] = "DoNotMatch";
})(MatchInst = exports.MatchInst || (exports.MatchInst = {}));
var TriggerScope;
(function (TriggerScope) {
    TriggerScope[TriggerScope["ThisOrderDefault"] = 0] = "ThisOrderDefault";
    TriggerScope[TriggerScope["OtherOrderUseRefId"] = 1] = "OtherOrderUseRefId";
    TriggerScope[TriggerScope["AllOtherOrdersForTheGivenSecurity"] = 2] = "AllOtherOrdersForTheGivenSecurity";
    TriggerScope[TriggerScope["AllOtherOrdersForTheGivenSecurityAndPrice"] = 3] = "AllOtherOrdersForTheGivenSecurityAndPrice";
    TriggerScope[TriggerScope["AllOtherOrdersForTheGivenSecurityAndSide"] = 4] = "AllOtherOrdersForTheGivenSecurityAndSide";
    TriggerScope[TriggerScope["AllOtherOrdersForTheGivenSecurityPriceAndSide"] = 5] = "AllOtherOrdersForTheGivenSecurityPriceAndSide";
})(TriggerScope = exports.TriggerScope || (exports.TriggerScope = {}));
var LimitAmtType;
(function (LimitAmtType) {
    LimitAmtType[LimitAmtType["CreditLimit"] = 0] = "CreditLimit";
    LimitAmtType[LimitAmtType["GrossPositionLimit"] = 1] = "GrossPositionLimit";
    LimitAmtType[LimitAmtType["NetPositionLimit"] = 2] = "NetPositionLimit";
    LimitAmtType[LimitAmtType["RiskExposureLimit"] = 3] = "RiskExposureLimit";
    LimitAmtType[LimitAmtType["LongPositionLimit"] = 4] = "LongPositionLimit";
    LimitAmtType[LimitAmtType["ShortPositionLimit"] = 5] = "ShortPositionLimit";
})(LimitAmtType = exports.LimitAmtType || (exports.LimitAmtType = {}));
var MarginReqmtInqQualifier;
(function (MarginReqmtInqQualifier) {
    MarginReqmtInqQualifier[MarginReqmtInqQualifier["Summary"] = 0] = "Summary";
    MarginReqmtInqQualifier[MarginReqmtInqQualifier["Detail"] = 1] = "Detail";
    MarginReqmtInqQualifier[MarginReqmtInqQualifier["ExcessDeficit"] = 2] = "ExcessDeficit";
    MarginReqmtInqQualifier[MarginReqmtInqQualifier["NetPosition"] = 3] = "NetPosition";
})(MarginReqmtInqQualifier = exports.MarginReqmtInqQualifier || (exports.MarginReqmtInqQualifier = {}));
var MarginReqmtRptType;
(function (MarginReqmtRptType) {
    MarginReqmtRptType[MarginReqmtRptType["Summary"] = 0] = "Summary";
    MarginReqmtRptType[MarginReqmtRptType["Detail"] = 1] = "Detail";
    MarginReqmtRptType[MarginReqmtRptType["ExcessDeficit"] = 2] = "ExcessDeficit";
})(MarginReqmtRptType = exports.MarginReqmtRptType || (exports.MarginReqmtRptType = {}));
var MarginReqmtInqStatus;
(function (MarginReqmtInqStatus) {
    MarginReqmtInqStatus[MarginReqmtInqStatus["Accepted"] = 0] = "Accepted";
    MarginReqmtInqStatus[MarginReqmtInqStatus["AcceptedWithWarnings"] = 1] = "AcceptedWithWarnings";
    MarginReqmtInqStatus[MarginReqmtInqStatus["Completed"] = 2] = "Completed";
    MarginReqmtInqStatus[MarginReqmtInqStatus["CompletedWithWarnings"] = 3] = "CompletedWithWarnings";
    MarginReqmtInqStatus[MarginReqmtInqStatus["Rejected"] = 4] = "Rejected";
})(MarginReqmtInqStatus = exports.MarginReqmtInqStatus || (exports.MarginReqmtInqStatus = {}));
var MarginReqmtInqResult;
(function (MarginReqmtInqResult) {
    MarginReqmtInqResult[MarginReqmtInqResult["SuccessfulDefault"] = 0] = "SuccessfulDefault";
    MarginReqmtInqResult[MarginReqmtInqResult["InvalidOrUnknownInstrument"] = 1] = "InvalidOrUnknownInstrument";
    MarginReqmtInqResult[MarginReqmtInqResult["InvalidOrUnknownMarginClass"] = 2] = "InvalidOrUnknownMarginClass";
    MarginReqmtInqResult[MarginReqmtInqResult["InvalidParties"] = 3] = "InvalidParties";
    MarginReqmtInqResult[MarginReqmtInqResult["InvalidTransportTypeRequested"] = 4] = "InvalidTransportTypeRequested";
    MarginReqmtInqResult[MarginReqmtInqResult["InvalidDestinationRequested"] = 5] = "InvalidDestinationRequested";
    MarginReqmtInqResult[MarginReqmtInqResult["NoMarginRequirementFound"] = 6] = "NoMarginRequirementFound";
    MarginReqmtInqResult[MarginReqmtInqResult["MarginRequirementInquiryQualifierNotSupported"] = 7] = "MarginRequirementInquiryQualifierNotSupported";
    MarginReqmtInqResult[MarginReqmtInqResult["UnauthorizedForMarginRequirementInquiry"] = 8] = "UnauthorizedForMarginRequirementInquiry";
    MarginReqmtInqResult[MarginReqmtInqResult["OtherFurtherInformationInText58Field"] = 99] = "OtherFurtherInformationInText58Field";
})(MarginReqmtInqResult = exports.MarginReqmtInqResult || (exports.MarginReqmtInqResult = {}));
var MarginAmtType;
(function (MarginAmtType) {
    MarginAmtType[MarginAmtType["AdditionalMargin"] = 1] = "AdditionalMargin";
    MarginAmtType[MarginAmtType["AdjustedMargin"] = 2] = "AdjustedMargin";
    MarginAmtType[MarginAmtType["UnadjustedMargin"] = 3] = "UnadjustedMargin";
    MarginAmtType[MarginAmtType["BinaryAddOnAmount"] = 4] = "BinaryAddOnAmount";
    MarginAmtType[MarginAmtType["CashBalanceAmount"] = 5] = "CashBalanceAmount";
    MarginAmtType[MarginAmtType["ConcentrationMargin"] = 6] = "ConcentrationMargin";
    MarginAmtType[MarginAmtType["CoreMargin"] = 7] = "CoreMargin";
    MarginAmtType[MarginAmtType["DeliveryMargin"] = 8] = "DeliveryMargin";
    MarginAmtType[MarginAmtType["DiscretionaryMargin"] = 9] = "DiscretionaryMargin";
    MarginAmtType[MarginAmtType["FuturesSpreadMargin"] = 10] = "FuturesSpreadMargin";
    MarginAmtType[MarginAmtType["InitialMargin"] = 11] = "InitialMargin";
    MarginAmtType[MarginAmtType["LiquidatingMargin"] = 12] = "LiquidatingMargin";
    MarginAmtType[MarginAmtType["MarginCallAmount"] = 13] = "MarginCallAmount";
    MarginAmtType[MarginAmtType["MarginDeficitAmountShortfall"] = 14] = "MarginDeficitAmountShortfall";
    MarginAmtType[MarginAmtType["MarginExcessAmountSurplus"] = 15] = "MarginExcessAmountSurplus";
    MarginAmtType[MarginAmtType["OptionPremiumAmount"] = 16] = "OptionPremiumAmount";
    MarginAmtType[MarginAmtType["PremiumMargin"] = 17] = "PremiumMargin";
    MarginAmtType[MarginAmtType["ReserveMargin"] = 18] = "ReserveMargin";
    MarginAmtType[MarginAmtType["SecurityCollateralAmount"] = 19] = "SecurityCollateralAmount";
    MarginAmtType[MarginAmtType["StressTestAddOnAmount"] = 20] = "StressTestAddOnAmount";
    MarginAmtType[MarginAmtType["SuperMargin"] = 21] = "SuperMargin";
    MarginAmtType[MarginAmtType["TotalMargin"] = 22] = "TotalMargin";
    MarginAmtType[MarginAmtType["VariationMargin"] = 23] = "VariationMargin";
    MarginAmtType[MarginAmtType["SecondaryVariationMargin"] = 24] = "SecondaryVariationMargin";
    MarginAmtType[MarginAmtType["RolledUpMarginDeficit"] = 25] = "RolledUpMarginDeficit";
    MarginAmtType[MarginAmtType["SpreadResponseMargin"] = 26] = "SpreadResponseMargin";
    MarginAmtType[MarginAmtType["SystemicRiskMargin"] = 27] = "SystemicRiskMargin";
    MarginAmtType[MarginAmtType["CurveRiskMargin"] = 28] = "CurveRiskMargin";
    MarginAmtType[MarginAmtType["IndexSpreadRiskMargin"] = 29] = "IndexSpreadRiskMargin";
    MarginAmtType[MarginAmtType["SectorRiskMargin"] = 30] = "SectorRiskMargin";
    MarginAmtType[MarginAmtType["JumpToDefaultRiskMargin"] = 31] = "JumpToDefaultRiskMargin";
    MarginAmtType[MarginAmtType["BasisRiskMargin"] = 32] = "BasisRiskMargin";
    MarginAmtType[MarginAmtType["InterestRateRiskMargin"] = 33] = "InterestRateRiskMargin";
    MarginAmtType[MarginAmtType["JumpToHealthRiskMargin"] = 34] = "JumpToHealthRiskMargin";
    MarginAmtType[MarginAmtType["OtherRiskMargin"] = 35] = "OtherRiskMargin";
})(MarginAmtType = exports.MarginAmtType || (exports.MarginAmtType = {}));
var RelatedInstrumentType;
(function (RelatedInstrumentType) {
    RelatedInstrumentType[RelatedInstrumentType["HedgesForInstrument"] = 1] = "HedgesForInstrument";
    RelatedInstrumentType[RelatedInstrumentType["Underlier"] = 2] = "Underlier";
    RelatedInstrumentType[RelatedInstrumentType["EquityEquivalent"] = 3] = "EquityEquivalent";
    RelatedInstrumentType[RelatedInstrumentType["NearestExchangeTradedContract"] = 4] = "NearestExchangeTradedContract";
    RelatedInstrumentType[RelatedInstrumentType["RetailEquivalentOfWholesaleInstrument"] = 5] = "RetailEquivalentOfWholesaleInstrument";
    RelatedInstrumentType[RelatedInstrumentType["Leg"] = 6] = "Leg";
})(RelatedInstrumentType = exports.RelatedInstrumentType || (exports.RelatedInstrumentType = {}));
var RelatedSecurityIDSource;
(function (RelatedSecurityIDSource) {
    RelatedSecurityIDSource["Cusip"] = "1";
    RelatedSecurityIDSource["Sedol"] = "2";
    RelatedSecurityIDSource["Quik"] = "3";
    RelatedSecurityIDSource["IsinNumber"] = "4";
    RelatedSecurityIDSource["RicCode"] = "5";
    RelatedSecurityIDSource["IsoCurrencyCode"] = "6";
    RelatedSecurityIDSource["IsoCountryCode"] = "7";
    RelatedSecurityIDSource["ExchangeSymbol"] = "8";
    RelatedSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    RelatedSecurityIDSource["BloombergSymbol"] = "A";
    RelatedSecurityIDSource["Wertpapier"] = "B";
    RelatedSecurityIDSource["Dutch"] = "C";
    RelatedSecurityIDSource["Valoren"] = "D";
    RelatedSecurityIDSource["Sicovam"] = "E";
    RelatedSecurityIDSource["Belgian"] = "F";
    RelatedSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    RelatedSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    RelatedSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    RelatedSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    RelatedSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    RelatedSecurityIDSource["LetterOfCredit"] = "L";
    RelatedSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    RelatedSecurityIDSource["MarkitRedEntityClip"] = "N";
    RelatedSecurityIDSource["MarkitRedPairClip"] = "P";
    RelatedSecurityIDSource["CftcCommodityCode"] = "Q";
    RelatedSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    RelatedSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    RelatedSecurityIDSource["LegalEntityIdentifier"] = "T";
    RelatedSecurityIDSource["Synthetic"] = "U";
    RelatedSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(RelatedSecurityIDSource = exports.RelatedSecurityIDSource || (exports.RelatedSecurityIDSource = {}));
var MarketMakerActivity;
(function (MarketMakerActivity) {
    MarketMakerActivity[MarketMakerActivity["NoParticipation"] = 0] = "NoParticipation";
    MarketMakerActivity[MarketMakerActivity["BuyParticipation"] = 1] = "BuyParticipation";
    MarketMakerActivity[MarketMakerActivity["SellParticipation"] = 2] = "SellParticipation";
    MarketMakerActivity[MarketMakerActivity["BothBuyAndSellParticipation"] = 3] = "BothBuyAndSellParticipation";
})(MarketMakerActivity = exports.MarketMakerActivity || (exports.MarketMakerActivity = {}));
var RequestingPartyIDSource;
(function (RequestingPartyIDSource) {
    RequestingPartyIDSource["KoreanInvestorId"] = "1";
    RequestingPartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    RequestingPartyIDSource["TaiwaneseTradingAcct"] = "3";
    RequestingPartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    RequestingPartyIDSource["ChineseInvestorId"] = "5";
    RequestingPartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    RequestingPartyIDSource["UsSocialSecurityNumber"] = "7";
    RequestingPartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    RequestingPartyIDSource["AustralianBusinessNumber"] = "9";
    RequestingPartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    RequestingPartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    RequestingPartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    RequestingPartyIDSource["ProprietaryCustomCode"] = "D";
    RequestingPartyIDSource["IsoCountryCode"] = "E";
    RequestingPartyIDSource["AustralianTaxFileNumber"] = "A";
    RequestingPartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    RequestingPartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    RequestingPartyIDSource["TaxId"] = "J";
    RequestingPartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    RequestingPartyIDSource["AustralianCompanyNumber"] = "K";
    RequestingPartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    RequestingPartyIDSource["CftcReportingFirmIdentifier"] = "M";
    RequestingPartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    RequestingPartyIDSource["InterimIdentifier"] = "O";
    RequestingPartyIDSource["ShortCodeIdentifier"] = "P";
    RequestingPartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(RequestingPartyIDSource = exports.RequestingPartyIDSource || (exports.RequestingPartyIDSource = {}));
var RequestingPartyRole;
(function (RequestingPartyRole) {
    RequestingPartyRole[RequestingPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    RequestingPartyRole[RequestingPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    RequestingPartyRole[RequestingPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    RequestingPartyRole[RequestingPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    RequestingPartyRole[RequestingPartyRole["InvestorId"] = 5] = "InvestorId";
    RequestingPartyRole[RequestingPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    RequestingPartyRole[RequestingPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    RequestingPartyRole[RequestingPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    RequestingPartyRole[RequestingPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    RequestingPartyRole[RequestingPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    RequestingPartyRole[RequestingPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    RequestingPartyRole[RequestingPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    RequestingPartyRole[RequestingPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    RequestingPartyRole[RequestingPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    RequestingPartyRole[RequestingPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    RequestingPartyRole[RequestingPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    RequestingPartyRole[RequestingPartyRole["ContraFirm"] = 17] = "ContraFirm";
    RequestingPartyRole[RequestingPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    RequestingPartyRole[RequestingPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    RequestingPartyRole[RequestingPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    RequestingPartyRole[RequestingPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    RequestingPartyRole[RequestingPartyRole["Exchange"] = 22] = "Exchange";
    RequestingPartyRole[RequestingPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    RequestingPartyRole[RequestingPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    RequestingPartyRole[RequestingPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    RequestingPartyRole[RequestingPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    RequestingPartyRole[RequestingPartyRole["Custodian"] = 28] = "Custodian";
    RequestingPartyRole[RequestingPartyRole["Intermediary"] = 29] = "Intermediary";
    RequestingPartyRole[RequestingPartyRole["Agent"] = 30] = "Agent";
    RequestingPartyRole[RequestingPartyRole["SubCustodian"] = 31] = "SubCustodian";
    RequestingPartyRole[RequestingPartyRole["Beneficiary"] = 32] = "Beneficiary";
    RequestingPartyRole[RequestingPartyRole["InterestedParty"] = 33] = "InterestedParty";
    RequestingPartyRole[RequestingPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    RequestingPartyRole[RequestingPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    RequestingPartyRole[RequestingPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    RequestingPartyRole[RequestingPartyRole["ContraTrader"] = 37] = "ContraTrader";
    RequestingPartyRole[RequestingPartyRole["PositionAccount"] = 38] = "PositionAccount";
    RequestingPartyRole[RequestingPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    RequestingPartyRole[RequestingPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    RequestingPartyRole[RequestingPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    RequestingPartyRole[RequestingPartyRole["ContraExchange"] = 42] = "ContraExchange";
    RequestingPartyRole[RequestingPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    RequestingPartyRole[RequestingPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    RequestingPartyRole[RequestingPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    RequestingPartyRole[RequestingPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    RequestingPartyRole[RequestingPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    RequestingPartyRole[RequestingPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    RequestingPartyRole[RequestingPartyRole["AssetManager"] = 49] = "AssetManager";
    RequestingPartyRole[RequestingPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    RequestingPartyRole[RequestingPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    RequestingPartyRole[RequestingPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    RequestingPartyRole[RequestingPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    RequestingPartyRole[RequestingPartyRole["SenderLocation"] = 54] = "SenderLocation";
    RequestingPartyRole[RequestingPartyRole["SessionId"] = 55] = "SessionId";
    RequestingPartyRole[RequestingPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    RequestingPartyRole[RequestingPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    RequestingPartyRole[RequestingPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    RequestingPartyRole[RequestingPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    RequestingPartyRole[RequestingPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    RequestingPartyRole[RequestingPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    RequestingPartyRole[RequestingPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    RequestingPartyRole[RequestingPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    RequestingPartyRole[RequestingPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    RequestingPartyRole[RequestingPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    RequestingPartyRole[RequestingPartyRole["MarketMaker"] = 66] = "MarketMaker";
    RequestingPartyRole[RequestingPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    RequestingPartyRole[RequestingPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    RequestingPartyRole[RequestingPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    RequestingPartyRole[RequestingPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    RequestingPartyRole[RequestingPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    RequestingPartyRole[RequestingPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    RequestingPartyRole[RequestingPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    RequestingPartyRole[RequestingPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    RequestingPartyRole[RequestingPartyRole["LocationId"] = 75] = "LocationId";
    RequestingPartyRole[RequestingPartyRole["DeskId"] = 76] = "DeskId";
    RequestingPartyRole[RequestingPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    RequestingPartyRole[RequestingPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    RequestingPartyRole[RequestingPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    RequestingPartyRole[RequestingPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    RequestingPartyRole[RequestingPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    RequestingPartyRole[RequestingPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    RequestingPartyRole[RequestingPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    RequestingPartyRole[RequestingPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    RequestingPartyRole[RequestingPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    RequestingPartyRole[RequestingPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    RequestingPartyRole[RequestingPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    RequestingPartyRole[RequestingPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    RequestingPartyRole[RequestingPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    RequestingPartyRole[RequestingPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    RequestingPartyRole[RequestingPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    RequestingPartyRole[RequestingPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    RequestingPartyRole[RequestingPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    RequestingPartyRole[RequestingPartyRole["AwayMarket"] = 94] = "AwayMarket";
    RequestingPartyRole[RequestingPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    RequestingPartyRole[RequestingPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    RequestingPartyRole[RequestingPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    RequestingPartyRole[RequestingPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    RequestingPartyRole[RequestingPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    RequestingPartyRole[RequestingPartyRole["MarginAccount"] = 100] = "MarginAccount";
    RequestingPartyRole[RequestingPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    RequestingPartyRole[RequestingPartyRole["DataRepository"] = 102] = "DataRepository";
    RequestingPartyRole[RequestingPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    RequestingPartyRole[RequestingPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    RequestingPartyRole[RequestingPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    RequestingPartyRole[RequestingPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    RequestingPartyRole[RequestingPartyRole["Correspondent"] = 107] = "Correspondent";
    RequestingPartyRole[RequestingPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    RequestingPartyRole[RequestingPartyRole["Borrower"] = 110] = "Borrower";
    RequestingPartyRole[RequestingPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    RequestingPartyRole[RequestingPartyRole["Guarantor"] = 112] = "Guarantor";
    RequestingPartyRole[RequestingPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    RequestingPartyRole[RequestingPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    RequestingPartyRole[RequestingPartyRole["HedgingParty"] = 115] = "HedgingParty";
    RequestingPartyRole[RequestingPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    RequestingPartyRole[RequestingPartyRole["SalesPerson"] = 117] = "SalesPerson";
    RequestingPartyRole[RequestingPartyRole["Operator"] = 118] = "Operator";
    RequestingPartyRole[RequestingPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    RequestingPartyRole[RequestingPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    RequestingPartyRole[RequestingPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    RequestingPartyRole[RequestingPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(RequestingPartyRole = exports.RequestingPartyRole || (exports.RequestingPartyRole = {}));
var RequestingPartySubIDType;
(function (RequestingPartySubIDType) {
    RequestingPartySubIDType[RequestingPartySubIDType["Firm"] = 1] = "Firm";
    RequestingPartySubIDType[RequestingPartySubIDType["Person"] = 2] = "Person";
    RequestingPartySubIDType[RequestingPartySubIDType["System"] = 3] = "System";
    RequestingPartySubIDType[RequestingPartySubIDType["Application"] = 4] = "Application";
    RequestingPartySubIDType[RequestingPartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    RequestingPartySubIDType[RequestingPartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    RequestingPartySubIDType[RequestingPartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    RequestingPartySubIDType[RequestingPartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    RequestingPartySubIDType[RequestingPartySubIDType["ContactName"] = 9] = "ContactName";
    RequestingPartySubIDType[RequestingPartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    RequestingPartySubIDType[RequestingPartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    RequestingPartySubIDType[RequestingPartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    RequestingPartySubIDType[RequestingPartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    RequestingPartySubIDType[RequestingPartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    RequestingPartySubIDType[RequestingPartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    RequestingPartySubIDType[RequestingPartySubIDType["Bic"] = 16] = "Bic";
    RequestingPartySubIDType[RequestingPartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    RequestingPartySubIDType[RequestingPartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    RequestingPartySubIDType[RequestingPartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    RequestingPartySubIDType[RequestingPartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    RequestingPartySubIDType[RequestingPartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    RequestingPartySubIDType[RequestingPartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    RequestingPartySubIDType[RequestingPartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    RequestingPartySubIDType[RequestingPartySubIDType["Department"] = 24] = "Department";
    RequestingPartySubIDType[RequestingPartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    RequestingPartySubIDType[RequestingPartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    RequestingPartySubIDType[RequestingPartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    RequestingPartySubIDType[RequestingPartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    RequestingPartySubIDType[RequestingPartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    RequestingPartySubIDType[RequestingPartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    RequestingPartySubIDType[RequestingPartySubIDType["Location"] = 31] = "Location";
    RequestingPartySubIDType[RequestingPartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    RequestingPartySubIDType[RequestingPartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    RequestingPartySubIDType[RequestingPartySubIDType["AddressCity"] = 34] = "AddressCity";
    RequestingPartySubIDType[RequestingPartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    RequestingPartySubIDType[RequestingPartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    RequestingPartySubIDType[RequestingPartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    RequestingPartySubIDType[RequestingPartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    RequestingPartySubIDType[RequestingPartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    RequestingPartySubIDType[RequestingPartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    RequestingPartySubIDType[RequestingPartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    RequestingPartySubIDType[RequestingPartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    RequestingPartySubIDType[RequestingPartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    RequestingPartySubIDType[RequestingPartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    RequestingPartySubIDType[RequestingPartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    RequestingPartySubIDType[RequestingPartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    RequestingPartySubIDType[RequestingPartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    RequestingPartySubIDType[RequestingPartySubIDType["USPerson"] = 48] = "USPerson";
    RequestingPartySubIDType[RequestingPartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    RequestingPartySubIDType[RequestingPartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    RequestingPartySubIDType[RequestingPartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    RequestingPartySubIDType[RequestingPartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    RequestingPartySubIDType[RequestingPartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    RequestingPartySubIDType[RequestingPartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    RequestingPartySubIDType[RequestingPartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    RequestingPartySubIDType[RequestingPartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    RequestingPartySubIDType[RequestingPartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    RequestingPartySubIDType[RequestingPartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    RequestingPartySubIDType[RequestingPartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    RequestingPartySubIDType[RequestingPartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    RequestingPartySubIDType[RequestingPartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    RequestingPartySubIDType[RequestingPartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    RequestingPartySubIDType[RequestingPartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    RequestingPartySubIDType[RequestingPartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    RequestingPartySubIDType[RequestingPartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    RequestingPartySubIDType[RequestingPartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    RequestingPartySubIDType[RequestingPartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    RequestingPartySubIDType[RequestingPartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    RequestingPartySubIDType[RequestingPartySubIDType["EndUser"] = 69] = "EndUser";
    RequestingPartySubIDType[RequestingPartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    RequestingPartySubIDType[RequestingPartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    RequestingPartySubIDType[RequestingPartySubIDType["Domicile"] = 72] = "Domicile";
    RequestingPartySubIDType[RequestingPartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    RequestingPartySubIDType[RequestingPartySubIDType["Payer"] = 74] = "Payer";
    RequestingPartySubIDType[RequestingPartySubIDType["Receiver"] = 75] = "Receiver";
    RequestingPartySubIDType[RequestingPartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(RequestingPartySubIDType = exports.RequestingPartySubIDType || (exports.RequestingPartySubIDType = {}));
var PartyDetailStatus;
(function (PartyDetailStatus) {
    PartyDetailStatus[PartyDetailStatus["ActiveDefaultIfNotSpecified"] = 0] = "ActiveDefaultIfNotSpecified";
    PartyDetailStatus[PartyDetailStatus["Suspended"] = 1] = "Suspended";
    PartyDetailStatus[PartyDetailStatus["Halted"] = 2] = "Halted";
})(PartyDetailStatus = exports.PartyDetailStatus || (exports.PartyDetailStatus = {}));
var PartyDetailRoleQualifier;
(function (PartyDetailRoleQualifier) {
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["Agency"] = 0] = "Agency";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["Principal"] = 1] = "Principal";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["Bank"] = 7] = "Bank";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["Hub"] = 8] = "Hub";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["Current"] = 18] = "Current";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["New"] = 19] = "New";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["Specialist"] = 21] = "Specialist";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["Algorithm"] = 22] = "Algorithm";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    PartyDetailRoleQualifier[PartyDetailRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(PartyDetailRoleQualifier = exports.PartyDetailRoleQualifier || (exports.PartyDetailRoleQualifier = {}));
var RelatedPartyDetailRoleQualifier;
(function (RelatedPartyDetailRoleQualifier) {
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["Agency"] = 0] = "Agency";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["Principal"] = 1] = "Principal";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["Bank"] = 7] = "Bank";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["Hub"] = 8] = "Hub";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["Current"] = 18] = "Current";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["New"] = 19] = "New";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["Specialist"] = 21] = "Specialist";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["Algorithm"] = 22] = "Algorithm";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    RelatedPartyDetailRoleQualifier[RelatedPartyDetailRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(RelatedPartyDetailRoleQualifier = exports.RelatedPartyDetailRoleQualifier || (exports.RelatedPartyDetailRoleQualifier = {}));
var SecurityMassTradingStatus;
(function (SecurityMassTradingStatus) {
    SecurityMassTradingStatus[SecurityMassTradingStatus["OpeningDelay"] = 1] = "OpeningDelay";
    SecurityMassTradingStatus[SecurityMassTradingStatus["TradingHalt"] = 2] = "TradingHalt";
    SecurityMassTradingStatus[SecurityMassTradingStatus["Resume"] = 3] = "Resume";
    SecurityMassTradingStatus[SecurityMassTradingStatus["NoOpenNoResume"] = 4] = "NoOpenNoResume";
    SecurityMassTradingStatus[SecurityMassTradingStatus["PriceIndication"] = 5] = "PriceIndication";
    SecurityMassTradingStatus[SecurityMassTradingStatus["TradingRangeIndication"] = 6] = "TradingRangeIndication";
    SecurityMassTradingStatus[SecurityMassTradingStatus["MarketImbalanceBuy"] = 7] = "MarketImbalanceBuy";
    SecurityMassTradingStatus[SecurityMassTradingStatus["MarketImbalanceSell"] = 8] = "MarketImbalanceSell";
    SecurityMassTradingStatus[SecurityMassTradingStatus["MarketOnCloseImbalanceBuy"] = 9] = "MarketOnCloseImbalanceBuy";
    SecurityMassTradingStatus[SecurityMassTradingStatus["MarketOnCloseImbalanceSell"] = 10] = "MarketOnCloseImbalanceSell";
    SecurityMassTradingStatus[SecurityMassTradingStatus["NoMarketImbalance"] = 12] = "NoMarketImbalance";
    SecurityMassTradingStatus[SecurityMassTradingStatus["NoMarketOnCloseImbalance"] = 13] = "NoMarketOnCloseImbalance";
    SecurityMassTradingStatus[SecurityMassTradingStatus["ItsPreOpening"] = 14] = "ItsPreOpening";
    SecurityMassTradingStatus[SecurityMassTradingStatus["NewPriceIndication"] = 15] = "NewPriceIndication";
    SecurityMassTradingStatus[SecurityMassTradingStatus["TradeDisseminationTime"] = 16] = "TradeDisseminationTime";
    SecurityMassTradingStatus[SecurityMassTradingStatus["ReadyToTradeStartOfSession"] = 17] = "ReadyToTradeStartOfSession";
    SecurityMassTradingStatus[SecurityMassTradingStatus["NotAvailableForTradingEndOfSession"] = 18] = "NotAvailableForTradingEndOfSession";
    SecurityMassTradingStatus[SecurityMassTradingStatus["NotTradedOnThisMarket"] = 19] = "NotTradedOnThisMarket";
    SecurityMassTradingStatus[SecurityMassTradingStatus["UnknownOrInvalid"] = 20] = "UnknownOrInvalid";
    SecurityMassTradingStatus[SecurityMassTradingStatus["PreOpen"] = 21] = "PreOpen";
    SecurityMassTradingStatus[SecurityMassTradingStatus["OpeningRotation"] = 22] = "OpeningRotation";
    SecurityMassTradingStatus[SecurityMassTradingStatus["FastMarket"] = 23] = "FastMarket";
    SecurityMassTradingStatus[SecurityMassTradingStatus["PreCrossSystemIsInAPreCrossStateAllowingMarketToRespondToEitherSideOfCross"] = 24] = "PreCrossSystemIsInAPreCrossStateAllowingMarketToRespondToEitherSideOfCross";
    SecurityMassTradingStatus[SecurityMassTradingStatus["CrossSystemHasCrossedAPercentageOfTheOrdersAndAllowsMarketToRespondPriorToCrossingRemainingPortion"] = 25] = "CrossSystemHasCrossedAPercentageOfTheOrdersAndAllowsMarketToRespondPriorToCrossingRemainingPortion";
    SecurityMassTradingStatus[SecurityMassTradingStatus["PostClose"] = 26] = "PostClose";
    SecurityMassTradingStatus[SecurityMassTradingStatus["NoCancel"] = 27] = "NoCancel";
})(SecurityMassTradingStatus = exports.SecurityMassTradingStatus || (exports.SecurityMassTradingStatus = {}));
var SecurityMassTradingEvent;
(function (SecurityMassTradingEvent) {
    SecurityMassTradingEvent[SecurityMassTradingEvent["OrderImbalanceAuctionIsExtended"] = 1] = "OrderImbalanceAuctionIsExtended";
    SecurityMassTradingEvent[SecurityMassTradingEvent["TradingResumesAfterHalt"] = 2] = "TradingResumesAfterHalt";
    SecurityMassTradingEvent[SecurityMassTradingEvent["PriceVolatilityInterruption"] = 3] = "PriceVolatilityInterruption";
    SecurityMassTradingEvent[SecurityMassTradingEvent["ChangeOfTradingSession"] = 4] = "ChangeOfTradingSession";
    SecurityMassTradingEvent[SecurityMassTradingEvent["ChangeOfTradingSubsession"] = 5] = "ChangeOfTradingSubsession";
    SecurityMassTradingEvent[SecurityMassTradingEvent["ChangeOfSecurityTradingStatus"] = 6] = "ChangeOfSecurityTradingStatus";
    SecurityMassTradingEvent[SecurityMassTradingEvent["ChangeOfBookType"] = 7] = "ChangeOfBookType";
    SecurityMassTradingEvent[SecurityMassTradingEvent["ChangeOfMarketDepth"] = 8] = "ChangeOfMarketDepth";
    SecurityMassTradingEvent[SecurityMassTradingEvent["CorporateAction"] = 9] = "CorporateAction";
})(SecurityMassTradingEvent = exports.SecurityMassTradingEvent || (exports.SecurityMassTradingEvent = {}));
var MassHaltReason;
(function (MassHaltReason) {
    MassHaltReason[MassHaltReason["NewsDissemination"] = 0] = "NewsDissemination";
    MassHaltReason[MassHaltReason["OrderInflux"] = 1] = "OrderInflux";
    MassHaltReason[MassHaltReason["OrderImbalance"] = 2] = "OrderImbalance";
    MassHaltReason[MassHaltReason["AdditionalInformation"] = 3] = "AdditionalInformation";
    MassHaltReason[MassHaltReason["NewsPending"] = 4] = "NewsPending";
    MassHaltReason[MassHaltReason["EquipmentChangeover"] = 5] = "EquipmentChangeover";
})(MassHaltReason = exports.MassHaltReason || (exports.MassHaltReason = {}));
var MDSecurityTradingStatus;
(function (MDSecurityTradingStatus) {
    MDSecurityTradingStatus[MDSecurityTradingStatus["OpeningDelay"] = 1] = "OpeningDelay";
    MDSecurityTradingStatus[MDSecurityTradingStatus["TradingHalt"] = 2] = "TradingHalt";
    MDSecurityTradingStatus[MDSecurityTradingStatus["Resume"] = 3] = "Resume";
    MDSecurityTradingStatus[MDSecurityTradingStatus["NoOpenNoResume"] = 4] = "NoOpenNoResume";
    MDSecurityTradingStatus[MDSecurityTradingStatus["PriceIndication"] = 5] = "PriceIndication";
    MDSecurityTradingStatus[MDSecurityTradingStatus["TradingRangeIndication"] = 6] = "TradingRangeIndication";
    MDSecurityTradingStatus[MDSecurityTradingStatus["MarketImbalanceBuy"] = 7] = "MarketImbalanceBuy";
    MDSecurityTradingStatus[MDSecurityTradingStatus["MarketImbalanceSell"] = 8] = "MarketImbalanceSell";
    MDSecurityTradingStatus[MDSecurityTradingStatus["MarketOnCloseImbalanceBuy"] = 9] = "MarketOnCloseImbalanceBuy";
    MDSecurityTradingStatus[MDSecurityTradingStatus["MarketOnCloseImbalanceSell"] = 10] = "MarketOnCloseImbalanceSell";
    MDSecurityTradingStatus[MDSecurityTradingStatus["NoMarketImbalance"] = 12] = "NoMarketImbalance";
    MDSecurityTradingStatus[MDSecurityTradingStatus["NoMarketOnCloseImbalance"] = 13] = "NoMarketOnCloseImbalance";
    MDSecurityTradingStatus[MDSecurityTradingStatus["ItsPreOpening"] = 14] = "ItsPreOpening";
    MDSecurityTradingStatus[MDSecurityTradingStatus["NewPriceIndication"] = 15] = "NewPriceIndication";
    MDSecurityTradingStatus[MDSecurityTradingStatus["TradeDisseminationTime"] = 16] = "TradeDisseminationTime";
    MDSecurityTradingStatus[MDSecurityTradingStatus["ReadyToTradeStartOfSession"] = 17] = "ReadyToTradeStartOfSession";
    MDSecurityTradingStatus[MDSecurityTradingStatus["NotAvailableForTradingEndOfSession"] = 18] = "NotAvailableForTradingEndOfSession";
    MDSecurityTradingStatus[MDSecurityTradingStatus["NotTradedOnThisMarket"] = 19] = "NotTradedOnThisMarket";
    MDSecurityTradingStatus[MDSecurityTradingStatus["UnknownOrInvalid"] = 20] = "UnknownOrInvalid";
    MDSecurityTradingStatus[MDSecurityTradingStatus["PreOpen"] = 21] = "PreOpen";
    MDSecurityTradingStatus[MDSecurityTradingStatus["OpeningRotation"] = 22] = "OpeningRotation";
    MDSecurityTradingStatus[MDSecurityTradingStatus["FastMarket"] = 23] = "FastMarket";
    MDSecurityTradingStatus[MDSecurityTradingStatus["PreCrossSystemIsInAPreCrossStateAllowingMarketToRespondToEitherSideOfCross"] = 24] = "PreCrossSystemIsInAPreCrossStateAllowingMarketToRespondToEitherSideOfCross";
    MDSecurityTradingStatus[MDSecurityTradingStatus["CrossSystemHasCrossedAPercentageOfTheOrdersAndAllowsMarketToRespondPriorToCrossingRemainingPortion"] = 25] = "CrossSystemHasCrossedAPercentageOfTheOrdersAndAllowsMarketToRespondPriorToCrossingRemainingPortion";
    MDSecurityTradingStatus[MDSecurityTradingStatus["PostClose"] = 26] = "PostClose";
    MDSecurityTradingStatus[MDSecurityTradingStatus["NoCancel"] = 27] = "NoCancel";
})(MDSecurityTradingStatus = exports.MDSecurityTradingStatus || (exports.MDSecurityTradingStatus = {}));
var MDHaltReason;
(function (MDHaltReason) {
    MDHaltReason[MDHaltReason["NewsDissemination"] = 0] = "NewsDissemination";
    MDHaltReason[MDHaltReason["OrderInflux"] = 1] = "OrderInflux";
    MDHaltReason[MDHaltReason["OrderImbalance"] = 2] = "OrderImbalance";
    MDHaltReason[MDHaltReason["AdditionalInformation"] = 3] = "AdditionalInformation";
    MDHaltReason[MDHaltReason["NewsPending"] = 4] = "NewsPending";
    MDHaltReason[MDHaltReason["EquipmentChangeover"] = 5] = "EquipmentChangeover";
})(MDHaltReason = exports.MDHaltReason || (exports.MDHaltReason = {}));
var ThrottleInst;
(function (ThrottleInst) {
    ThrottleInst[ThrottleInst["RejectIfThrottleLimitExceeded"] = 0] = "RejectIfThrottleLimitExceeded";
    ThrottleInst[ThrottleInst["QueueIfThrottleLimitExceeded"] = 1] = "QueueIfThrottleLimitExceeded";
})(ThrottleInst = exports.ThrottleInst || (exports.ThrottleInst = {}));
var ThrottleCountIndicator;
(function (ThrottleCountIndicator) {
    ThrottleCountIndicator[ThrottleCountIndicator["OutstandingRequestsUnchanged"] = 0] = "OutstandingRequestsUnchanged";
    ThrottleCountIndicator[ThrottleCountIndicator["OutstandingRequestsDecreased"] = 1] = "OutstandingRequestsDecreased";
})(ThrottleCountIndicator = exports.ThrottleCountIndicator || (exports.ThrottleCountIndicator = {}));
var ShortSaleRestriction;
(function (ShortSaleRestriction) {
    ShortSaleRestriction[ShortSaleRestriction["NoRestrictions"] = 0] = "NoRestrictions";
    ShortSaleRestriction[ShortSaleRestriction["SecurityIsNotShortable"] = 1] = "SecurityIsNotShortable";
    ShortSaleRestriction[ShortSaleRestriction["SecurityNotShortableAtOrBelowTheBestBid"] = 2] = "SecurityNotShortableAtOrBelowTheBestBid";
    ShortSaleRestriction[ShortSaleRestriction["SecurityIsNotShortableWithoutPreBorrow"] = 3] = "SecurityIsNotShortableWithoutPreBorrow";
})(ShortSaleRestriction = exports.ShortSaleRestriction || (exports.ShortSaleRestriction = {}));
var ShortSaleExemptionReason;
(function (ShortSaleExemptionReason) {
    ShortSaleExemptionReason[ShortSaleExemptionReason["ExemptionReasonUnknown"] = 0] = "ExemptionReasonUnknown";
    ShortSaleExemptionReason[ShortSaleExemptionReason["IncomeSellShortExempt"] = 1] = "IncomeSellShortExempt";
    ShortSaleExemptionReason[ShortSaleExemptionReason["AboveNationalBestBidBrokerDealerProvision"] = 2] = "AboveNationalBestBidBrokerDealerProvision";
    ShortSaleExemptionReason[ShortSaleExemptionReason["DelayedDelivery"] = 3] = "DelayedDelivery";
    ShortSaleExemptionReason[ShortSaleExemptionReason["OddLot"] = 4] = "OddLot";
    ShortSaleExemptionReason[ShortSaleExemptionReason["DomesticArbitrage"] = 5] = "DomesticArbitrage";
    ShortSaleExemptionReason[ShortSaleExemptionReason["InternationalArbitrage"] = 6] = "InternationalArbitrage";
    ShortSaleExemptionReason[ShortSaleExemptionReason["UnderwriterOrSyndicateDistribution"] = 7] = "UnderwriterOrSyndicateDistribution";
    ShortSaleExemptionReason[ShortSaleExemptionReason["RisklessPrincipal"] = 8] = "RisklessPrincipal";
    ShortSaleExemptionReason[ShortSaleExemptionReason["Vwap"] = 9] = "Vwap";
})(ShortSaleExemptionReason = exports.ShortSaleExemptionReason || (exports.ShortSaleExemptionReason = {}));
var LegShortSaleExemptionReason;
(function (LegShortSaleExemptionReason) {
    LegShortSaleExemptionReason[LegShortSaleExemptionReason["ExemptionReasonUnknown"] = 0] = "ExemptionReasonUnknown";
    LegShortSaleExemptionReason[LegShortSaleExemptionReason["IncomeSellShortExempt"] = 1] = "IncomeSellShortExempt";
    LegShortSaleExemptionReason[LegShortSaleExemptionReason["AboveNationalBestBidBrokerDealerProvision"] = 2] = "AboveNationalBestBidBrokerDealerProvision";
    LegShortSaleExemptionReason[LegShortSaleExemptionReason["DelayedDelivery"] = 3] = "DelayedDelivery";
    LegShortSaleExemptionReason[LegShortSaleExemptionReason["OddLot"] = 4] = "OddLot";
    LegShortSaleExemptionReason[LegShortSaleExemptionReason["DomesticArbitrage"] = 5] = "DomesticArbitrage";
    LegShortSaleExemptionReason[LegShortSaleExemptionReason["InternationalArbitrage"] = 6] = "InternationalArbitrage";
    LegShortSaleExemptionReason[LegShortSaleExemptionReason["UnderwriterOrSyndicateDistribution"] = 7] = "UnderwriterOrSyndicateDistribution";
    LegShortSaleExemptionReason[LegShortSaleExemptionReason["RisklessPrincipal"] = 8] = "RisklessPrincipal";
    LegShortSaleExemptionReason[LegShortSaleExemptionReason["Vwap"] = 9] = "Vwap";
})(LegShortSaleExemptionReason = exports.LegShortSaleExemptionReason || (exports.LegShortSaleExemptionReason = {}));
var SideShortSaleExemptionReason;
(function (SideShortSaleExemptionReason) {
    SideShortSaleExemptionReason[SideShortSaleExemptionReason["ExemptionReasonUnknown"] = 0] = "ExemptionReasonUnknown";
    SideShortSaleExemptionReason[SideShortSaleExemptionReason["IncomeSellShortExempt"] = 1] = "IncomeSellShortExempt";
    SideShortSaleExemptionReason[SideShortSaleExemptionReason["AboveNationalBestBidBrokerDealerProvision"] = 2] = "AboveNationalBestBidBrokerDealerProvision";
    SideShortSaleExemptionReason[SideShortSaleExemptionReason["DelayedDelivery"] = 3] = "DelayedDelivery";
    SideShortSaleExemptionReason[SideShortSaleExemptionReason["OddLot"] = 4] = "OddLot";
    SideShortSaleExemptionReason[SideShortSaleExemptionReason["DomesticArbitrage"] = 5] = "DomesticArbitrage";
    SideShortSaleExemptionReason[SideShortSaleExemptionReason["InternationalArbitrage"] = 6] = "InternationalArbitrage";
    SideShortSaleExemptionReason[SideShortSaleExemptionReason["UnderwriterOrSyndicateDistribution"] = 7] = "UnderwriterOrSyndicateDistribution";
    SideShortSaleExemptionReason[SideShortSaleExemptionReason["RisklessPrincipal"] = 8] = "RisklessPrincipal";
    SideShortSaleExemptionReason[SideShortSaleExemptionReason["Vwap"] = 9] = "Vwap";
})(SideShortSaleExemptionReason = exports.SideShortSaleExemptionReason || (exports.SideShortSaleExemptionReason = {}));
var PartyDetailIDSource;
(function (PartyDetailIDSource) {
    PartyDetailIDSource["KoreanInvestorId"] = "1";
    PartyDetailIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    PartyDetailIDSource["TaiwaneseTradingAcct"] = "3";
    PartyDetailIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    PartyDetailIDSource["ChineseInvestorId"] = "5";
    PartyDetailIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    PartyDetailIDSource["UsSocialSecurityNumber"] = "7";
    PartyDetailIDSource["UsEmployerOrTaxIdNumber"] = "8";
    PartyDetailIDSource["AustralianBusinessNumber"] = "9";
    PartyDetailIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    PartyDetailIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    PartyDetailIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    PartyDetailIDSource["ProprietaryCustomCode"] = "D";
    PartyDetailIDSource["IsoCountryCode"] = "E";
    PartyDetailIDSource["AustralianTaxFileNumber"] = "A";
    PartyDetailIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    PartyDetailIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    PartyDetailIDSource["TaxId"] = "J";
    PartyDetailIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    PartyDetailIDSource["AustralianCompanyNumber"] = "K";
    PartyDetailIDSource["AustralianRegisteredBodyNumber"] = "L";
    PartyDetailIDSource["CftcReportingFirmIdentifier"] = "M";
    PartyDetailIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    PartyDetailIDSource["InterimIdentifier"] = "O";
    PartyDetailIDSource["ShortCodeIdentifier"] = "P";
    PartyDetailIDSource["NationalIdOfNaturalPerson"] = "Q";
})(PartyDetailIDSource = exports.PartyDetailIDSource || (exports.PartyDetailIDSource = {}));
var PartyDetailRole;
(function (PartyDetailRole) {
    PartyDetailRole[PartyDetailRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    PartyDetailRole[PartyDetailRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    PartyDetailRole[PartyDetailRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    PartyDetailRole[PartyDetailRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    PartyDetailRole[PartyDetailRole["InvestorId"] = 5] = "InvestorId";
    PartyDetailRole[PartyDetailRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    PartyDetailRole[PartyDetailRole["EnteringFirm"] = 7] = "EnteringFirm";
    PartyDetailRole[PartyDetailRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    PartyDetailRole[PartyDetailRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    PartyDetailRole[PartyDetailRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    PartyDetailRole[PartyDetailRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    PartyDetailRole[PartyDetailRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    PartyDetailRole[PartyDetailRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    PartyDetailRole[PartyDetailRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    PartyDetailRole[PartyDetailRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    PartyDetailRole[PartyDetailRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    PartyDetailRole[PartyDetailRole["ContraFirm"] = 17] = "ContraFirm";
    PartyDetailRole[PartyDetailRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    PartyDetailRole[PartyDetailRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    PartyDetailRole[PartyDetailRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    PartyDetailRole[PartyDetailRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    PartyDetailRole[PartyDetailRole["Exchange"] = 22] = "Exchange";
    PartyDetailRole[PartyDetailRole["CustomerAccount"] = 24] = "CustomerAccount";
    PartyDetailRole[PartyDetailRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    PartyDetailRole[PartyDetailRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    PartyDetailRole[PartyDetailRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    PartyDetailRole[PartyDetailRole["Custodian"] = 28] = "Custodian";
    PartyDetailRole[PartyDetailRole["Intermediary"] = 29] = "Intermediary";
    PartyDetailRole[PartyDetailRole["Agent"] = 30] = "Agent";
    PartyDetailRole[PartyDetailRole["SubCustodian"] = 31] = "SubCustodian";
    PartyDetailRole[PartyDetailRole["Beneficiary"] = 32] = "Beneficiary";
    PartyDetailRole[PartyDetailRole["InterestedParty"] = 33] = "InterestedParty";
    PartyDetailRole[PartyDetailRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    PartyDetailRole[PartyDetailRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    PartyDetailRole[PartyDetailRole["EnteringTrader"] = 36] = "EnteringTrader";
    PartyDetailRole[PartyDetailRole["ContraTrader"] = 37] = "ContraTrader";
    PartyDetailRole[PartyDetailRole["PositionAccount"] = 38] = "PositionAccount";
    PartyDetailRole[PartyDetailRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    PartyDetailRole[PartyDetailRole["TransferToFirm"] = 40] = "TransferToFirm";
    PartyDetailRole[PartyDetailRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    PartyDetailRole[PartyDetailRole["ContraExchange"] = 42] = "ContraExchange";
    PartyDetailRole[PartyDetailRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    PartyDetailRole[PartyDetailRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    PartyDetailRole[PartyDetailRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    PartyDetailRole[PartyDetailRole["ForeignFirm"] = 46] = "ForeignFirm";
    PartyDetailRole[PartyDetailRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    PartyDetailRole[PartyDetailRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    PartyDetailRole[PartyDetailRole["AssetManager"] = 49] = "AssetManager";
    PartyDetailRole[PartyDetailRole["PledgorAccount"] = 50] = "PledgorAccount";
    PartyDetailRole[PartyDetailRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    PartyDetailRole[PartyDetailRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    PartyDetailRole[PartyDetailRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    PartyDetailRole[PartyDetailRole["SenderLocation"] = 54] = "SenderLocation";
    PartyDetailRole[PartyDetailRole["SessionId"] = 55] = "SessionId";
    PartyDetailRole[PartyDetailRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    PartyDetailRole[PartyDetailRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    PartyDetailRole[PartyDetailRole["EnteringUnit"] = 58] = "EnteringUnit";
    PartyDetailRole[PartyDetailRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    PartyDetailRole[PartyDetailRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    PartyDetailRole[PartyDetailRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    PartyDetailRole[PartyDetailRole["ReportOriginator"] = 62] = "ReportOriginator";
    PartyDetailRole[PartyDetailRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    PartyDetailRole[PartyDetailRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    PartyDetailRole[PartyDetailRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    PartyDetailRole[PartyDetailRole["MarketMaker"] = 66] = "MarketMaker";
    PartyDetailRole[PartyDetailRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    PartyDetailRole[PartyDetailRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    PartyDetailRole[PartyDetailRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    PartyDetailRole[PartyDetailRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    PartyDetailRole[PartyDetailRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    PartyDetailRole[PartyDetailRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    PartyDetailRole[PartyDetailRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    PartyDetailRole[PartyDetailRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    PartyDetailRole[PartyDetailRole["LocationId"] = 75] = "LocationId";
    PartyDetailRole[PartyDetailRole["DeskId"] = 76] = "DeskId";
    PartyDetailRole[PartyDetailRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    PartyDetailRole[PartyDetailRole["AllocationEntity"] = 78] = "AllocationEntity";
    PartyDetailRole[PartyDetailRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    PartyDetailRole[PartyDetailRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    PartyDetailRole[PartyDetailRole["BrokerCientId"] = 81] = "BrokerCientId";
    PartyDetailRole[PartyDetailRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    PartyDetailRole[PartyDetailRole["ClearingAccount"] = 83] = "ClearingAccount";
    PartyDetailRole[PartyDetailRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    PartyDetailRole[PartyDetailRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    PartyDetailRole[PartyDetailRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    PartyDetailRole[PartyDetailRole["InConcertGroup"] = 87] = "InConcertGroup";
    PartyDetailRole[PartyDetailRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    PartyDetailRole[PartyDetailRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    PartyDetailRole[PartyDetailRole["SettlementFirm"] = 90] = "SettlementFirm";
    PartyDetailRole[PartyDetailRole["SettlementAccount"] = 91] = "SettlementAccount";
    PartyDetailRole[PartyDetailRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    PartyDetailRole[PartyDetailRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    PartyDetailRole[PartyDetailRole["AwayMarket"] = 94] = "AwayMarket";
    PartyDetailRole[PartyDetailRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    PartyDetailRole[PartyDetailRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    PartyDetailRole[PartyDetailRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    PartyDetailRole[PartyDetailRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    PartyDetailRole[PartyDetailRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    PartyDetailRole[PartyDetailRole["MarginAccount"] = 100] = "MarginAccount";
    PartyDetailRole[PartyDetailRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    PartyDetailRole[PartyDetailRole["DataRepository"] = 102] = "DataRepository";
    PartyDetailRole[PartyDetailRole["CalculationAgent"] = 103] = "CalculationAgent";
    PartyDetailRole[PartyDetailRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    PartyDetailRole[PartyDetailRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    PartyDetailRole[PartyDetailRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    PartyDetailRole[PartyDetailRole["Correspondent"] = 107] = "Correspondent";
    PartyDetailRole[PartyDetailRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    PartyDetailRole[PartyDetailRole["Borrower"] = 110] = "Borrower";
    PartyDetailRole[PartyDetailRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    PartyDetailRole[PartyDetailRole["Guarantor"] = 112] = "Guarantor";
    PartyDetailRole[PartyDetailRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    PartyDetailRole[PartyDetailRole["DeterminingParty"] = 114] = "DeterminingParty";
    PartyDetailRole[PartyDetailRole["HedgingParty"] = 115] = "HedgingParty";
    PartyDetailRole[PartyDetailRole["ReportingEntity"] = 116] = "ReportingEntity";
    PartyDetailRole[PartyDetailRole["SalesPerson"] = 117] = "SalesPerson";
    PartyDetailRole[PartyDetailRole["Operator"] = 118] = "Operator";
    PartyDetailRole[PartyDetailRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    PartyDetailRole[PartyDetailRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    PartyDetailRole[PartyDetailRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    PartyDetailRole[PartyDetailRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(PartyDetailRole = exports.PartyDetailRole || (exports.PartyDetailRole = {}));
var PartyDetailSubIDType;
(function (PartyDetailSubIDType) {
    PartyDetailSubIDType[PartyDetailSubIDType["Firm"] = 1] = "Firm";
    PartyDetailSubIDType[PartyDetailSubIDType["Person"] = 2] = "Person";
    PartyDetailSubIDType[PartyDetailSubIDType["System"] = 3] = "System";
    PartyDetailSubIDType[PartyDetailSubIDType["Application"] = 4] = "Application";
    PartyDetailSubIDType[PartyDetailSubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    PartyDetailSubIDType[PartyDetailSubIDType["PostalAddress"] = 6] = "PostalAddress";
    PartyDetailSubIDType[PartyDetailSubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    PartyDetailSubIDType[PartyDetailSubIDType["EmailAddress"] = 8] = "EmailAddress";
    PartyDetailSubIDType[PartyDetailSubIDType["ContactName"] = 9] = "ContactName";
    PartyDetailSubIDType[PartyDetailSubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    PartyDetailSubIDType[PartyDetailSubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    PartyDetailSubIDType[PartyDetailSubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    PartyDetailSubIDType[PartyDetailSubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    PartyDetailSubIDType[PartyDetailSubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    PartyDetailSubIDType[PartyDetailSubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    PartyDetailSubIDType[PartyDetailSubIDType["Bic"] = 16] = "Bic";
    PartyDetailSubIDType[PartyDetailSubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    PartyDetailSubIDType[PartyDetailSubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    PartyDetailSubIDType[PartyDetailSubIDType["FundAccountName"] = 19] = "FundAccountName";
    PartyDetailSubIDType[PartyDetailSubIDType["TelexNumber"] = 20] = "TelexNumber";
    PartyDetailSubIDType[PartyDetailSubIDType["FaxNumber"] = 21] = "FaxNumber";
    PartyDetailSubIDType[PartyDetailSubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    PartyDetailSubIDType[PartyDetailSubIDType["CashAccountName"] = 23] = "CashAccountName";
    PartyDetailSubIDType[PartyDetailSubIDType["Department"] = 24] = "Department";
    PartyDetailSubIDType[PartyDetailSubIDType["LocationDesk"] = 25] = "LocationDesk";
    PartyDetailSubIDType[PartyDetailSubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    PartyDetailSubIDType[PartyDetailSubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    PartyDetailSubIDType[PartyDetailSubIDType["MarketMaker"] = 28] = "MarketMaker";
    PartyDetailSubIDType[PartyDetailSubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    PartyDetailSubIDType[PartyDetailSubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    PartyDetailSubIDType[PartyDetailSubIDType["Location"] = 31] = "Location";
    PartyDetailSubIDType[PartyDetailSubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    PartyDetailSubIDType[PartyDetailSubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    PartyDetailSubIDType[PartyDetailSubIDType["AddressCity"] = 34] = "AddressCity";
    PartyDetailSubIDType[PartyDetailSubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    PartyDetailSubIDType[PartyDetailSubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    PartyDetailSubIDType[PartyDetailSubIDType["AddressStreet"] = 37] = "AddressStreet";
    PartyDetailSubIDType[PartyDetailSubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    PartyDetailSubIDType[PartyDetailSubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    PartyDetailSubIDType[PartyDetailSubIDType["MarketSegment"] = 40] = "MarketSegment";
    PartyDetailSubIDType[PartyDetailSubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    PartyDetailSubIDType[PartyDetailSubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    PartyDetailSubIDType[PartyDetailSubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    PartyDetailSubIDType[PartyDetailSubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    PartyDetailSubIDType[PartyDetailSubIDType["SwapDealer"] = 45] = "SwapDealer";
    PartyDetailSubIDType[PartyDetailSubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    PartyDetailSubIDType[PartyDetailSubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    PartyDetailSubIDType[PartyDetailSubIDType["USPerson"] = 48] = "USPerson";
    PartyDetailSubIDType[PartyDetailSubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    PartyDetailSubIDType[PartyDetailSubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    PartyDetailSubIDType[PartyDetailSubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    PartyDetailSubIDType[PartyDetailSubIDType["ReferenceText"] = 52] = "ReferenceText";
    PartyDetailSubIDType[PartyDetailSubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    PartyDetailSubIDType[PartyDetailSubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    PartyDetailSubIDType[PartyDetailSubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    PartyDetailSubIDType[PartyDetailSubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    PartyDetailSubIDType[PartyDetailSubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    PartyDetailSubIDType[PartyDetailSubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    PartyDetailSubIDType[PartyDetailSubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    PartyDetailSubIDType[PartyDetailSubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    PartyDetailSubIDType[PartyDetailSubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    PartyDetailSubIDType[PartyDetailSubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    PartyDetailSubIDType[PartyDetailSubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    PartyDetailSubIDType[PartyDetailSubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    PartyDetailSubIDType[PartyDetailSubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    PartyDetailSubIDType[PartyDetailSubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    PartyDetailSubIDType[PartyDetailSubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    PartyDetailSubIDType[PartyDetailSubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    PartyDetailSubIDType[PartyDetailSubIDType["EndUser"] = 69] = "EndUser";
    PartyDetailSubIDType[PartyDetailSubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    PartyDetailSubIDType[PartyDetailSubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    PartyDetailSubIDType[PartyDetailSubIDType["Domicile"] = 72] = "Domicile";
    PartyDetailSubIDType[PartyDetailSubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    PartyDetailSubIDType[PartyDetailSubIDType["Payer"] = 74] = "Payer";
    PartyDetailSubIDType[PartyDetailSubIDType["Receiver"] = 75] = "Receiver";
    PartyDetailSubIDType[PartyDetailSubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(PartyDetailSubIDType = exports.PartyDetailSubIDType || (exports.PartyDetailSubIDType = {}));
var StrikeUnitOfMeasure;
(function (StrikeUnitOfMeasure) {
    StrikeUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    StrikeUnitOfMeasure["Allowances"] = "Alw";
    StrikeUnitOfMeasure["Barrels"] = "Bbl";
    StrikeUnitOfMeasure["CubicMeters"] = "CBM";
    StrikeUnitOfMeasure["BoardFeet"] = "BDFT";
    StrikeUnitOfMeasure["Gigajoules"] = "GJ";
    StrikeUnitOfMeasure["Bushels"] = "Bu";
    StrikeUnitOfMeasure["KilowattHours"] = "kWh";
    StrikeUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    StrikeUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    StrikeUnitOfMeasure["MegawattHours"] = "MWh";
    StrikeUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    StrikeUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    StrikeUnitOfMeasure["Therms"] = "thm";
    StrikeUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    StrikeUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    StrikeUnitOfMeasure["HundredweightUs"] = "cwt";
    StrikeUnitOfMeasure["Days"] = "day";
    StrikeUnitOfMeasure["DryMetricTons"] = "dt";
    StrikeUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    StrikeUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    StrikeUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    StrikeUnitOfMeasure["Grams"] = "g";
    StrikeUnitOfMeasure["Gallons"] = "Gal";
    StrikeUnitOfMeasure["GrossTons"] = "GT";
    StrikeUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    StrikeUnitOfMeasure["IndexPoint"] = "IPNT";
    StrikeUnitOfMeasure["Kilograms"] = "kg";
    StrikeUnitOfMeasure["Kiloliters"] = "kL";
    StrikeUnitOfMeasure["KilowattYear"] = "kW-a";
    StrikeUnitOfMeasure["KilowattDay"] = "kW-d";
    StrikeUnitOfMeasure["KilowattHour"] = "kW-h";
    StrikeUnitOfMeasure["KilowattMonth"] = "kW-M";
    StrikeUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    StrikeUnitOfMeasure["Liters"] = "L";
    StrikeUnitOfMeasure["Pounds"] = "lbs";
    StrikeUnitOfMeasure["MegawattYear"] = "MW-a";
    StrikeUnitOfMeasure["MegawattDay"] = "MW-d";
    StrikeUnitOfMeasure["MegawattHour"] = "MW-h";
    StrikeUnitOfMeasure["MegawattMonth"] = "MW-M";
    StrikeUnitOfMeasure["MegawattMinute"] = "MW-min";
    StrikeUnitOfMeasure["TroyOunces"] = "oz_tr";
    StrikeUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    StrikeUnitOfMeasure["MetricTons"] = "t";
    StrikeUnitOfMeasure["TonsUs"] = "tn";
    StrikeUnitOfMeasure["MillionBarrels"] = "MMbbl";
    StrikeUnitOfMeasure["UsDollars"] = "USD";
})(StrikeUnitOfMeasure = exports.StrikeUnitOfMeasure || (exports.StrikeUnitOfMeasure = {}));
var OrderOrigination;
(function (OrderOrigination) {
    OrderOrigination[OrderOrigination["OrderReceivedFromACustomer"] = 1] = "OrderReceivedFromACustomer";
    OrderOrigination[OrderOrigination["OrderReceivedFromWithinTheFirm"] = 2] = "OrderReceivedFromWithinTheFirm";
    OrderOrigination[OrderOrigination["OrderReceivedFromAnotherBrokerDealer"] = 3] = "OrderReceivedFromAnotherBrokerDealer";
    OrderOrigination[OrderOrigination["OrderReceivedFromACustomerOrOriginatedWithTheFirm"] = 4] = "OrderReceivedFromACustomerOrOriginatedWithTheFirm";
    OrderOrigination[OrderOrigination["OrderReceivedFromADirectAccessOrSponsoredAccessCustomer"] = 5] = "OrderReceivedFromADirectAccessOrSponsoredAccessCustomer";
})(OrderOrigination = exports.OrderOrigination || (exports.OrderOrigination = {}));
var AllocationRollupInstruction;
(function (AllocationRollupInstruction) {
    AllocationRollupInstruction[AllocationRollupInstruction["RollUp"] = 0] = "RollUp";
    AllocationRollupInstruction[AllocationRollupInstruction["DoNotRollUp"] = 1] = "DoNotRollUp";
})(AllocationRollupInstruction = exports.AllocationRollupInstruction || (exports.AllocationRollupInstruction = {}));
var AllocReversalStatus;
(function (AllocReversalStatus) {
    AllocReversalStatus[AllocReversalStatus["Completed"] = 0] = "Completed";
    AllocReversalStatus[AllocReversalStatus["Refused"] = 1] = "Refused";
    AllocReversalStatus[AllocReversalStatus["Cancelled"] = 2] = "Cancelled";
})(AllocReversalStatus = exports.AllocReversalStatus || (exports.AllocReversalStatus = {}));
var ObligationType;
(function (ObligationType) {
    ObligationType["Bond"] = "0";
    ObligationType["ConvertibleBond"] = "1";
    ObligationType["Mortgage"] = "2";
    ObligationType["Loan"] = "3";
})(ObligationType = exports.ObligationType || (exports.ObligationType = {}));
var TradePriceNegotiationMethod;
(function (TradePriceNegotiationMethod) {
    TradePriceNegotiationMethod[TradePriceNegotiationMethod["PercentOfPar"] = 0] = "PercentOfPar";
    TradePriceNegotiationMethod[TradePriceNegotiationMethod["DealSpread"] = 1] = "DealSpread";
    TradePriceNegotiationMethod[TradePriceNegotiationMethod["UpfrontPoints"] = 2] = "UpfrontPoints";
    TradePriceNegotiationMethod[TradePriceNegotiationMethod["UpfrontAmount"] = 3] = "UpfrontAmount";
    TradePriceNegotiationMethod[TradePriceNegotiationMethod["PercentOfParAndUpfrontAmount"] = 4] = "PercentOfParAndUpfrontAmount";
    TradePriceNegotiationMethod[TradePriceNegotiationMethod["DealSpreadAndUpfrontAmount"] = 5] = "DealSpreadAndUpfrontAmount";
    TradePriceNegotiationMethod[TradePriceNegotiationMethod["UpfrontPointsAndUpfrontAmount"] = 6] = "UpfrontPointsAndUpfrontAmount";
})(TradePriceNegotiationMethod = exports.TradePriceNegotiationMethod || (exports.TradePriceNegotiationMethod = {}));
var UpfrontPriceType;
(function (UpfrontPriceType) {
    UpfrontPriceType[UpfrontPriceType["PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome"] = 1] = "PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome";
    UpfrontPriceType[UpfrontPriceType["FixedAmountAbsoluteValue"] = 3] = "FixedAmountAbsoluteValue";
})(UpfrontPriceType = exports.UpfrontPriceType || (exports.UpfrontPriceType = {}));
var RiskLimitRequestType;
(function (RiskLimitRequestType) {
    RiskLimitRequestType[RiskLimitRequestType["DefinitionsDefault"] = 1] = "DefinitionsDefault";
    RiskLimitRequestType[RiskLimitRequestType["Utilization"] = 2] = "Utilization";
    RiskLimitRequestType[RiskLimitRequestType["DefinitionsAndUtilization"] = 3] = "DefinitionsAndUtilization";
})(RiskLimitRequestType = exports.RiskLimitRequestType || (exports.RiskLimitRequestType = {}));
var RiskLimitRequestResult;
(function (RiskLimitRequestResult) {
    RiskLimitRequestResult[RiskLimitRequestResult["SuccessfulDefault"] = 0] = "SuccessfulDefault";
    RiskLimitRequestResult[RiskLimitRequestResult["InvalidPartyIes"] = 1] = "InvalidPartyIes";
    RiskLimitRequestResult[RiskLimitRequestResult["InvalidRelatedPartyIes"] = 2] = "InvalidRelatedPartyIes";
    RiskLimitRequestResult[RiskLimitRequestResult["InvalidRiskLimitTypeS"] = 3] = "InvalidRiskLimitTypeS";
    RiskLimitRequestResult[RiskLimitRequestResult["InvalidRiskLimitIdS"] = 4] = "InvalidRiskLimitIdS";
    RiskLimitRequestResult[RiskLimitRequestResult["InvalidRiskLimitAmountS"] = 5] = "InvalidRiskLimitAmountS";
    RiskLimitRequestResult[RiskLimitRequestResult["InvalidRiskWarningLevelActionS"] = 6] = "InvalidRiskWarningLevelActionS";
    RiskLimitRequestResult[RiskLimitRequestResult["InvalidRiskInstrumentScopeS"] = 7] = "InvalidRiskInstrumentScopeS";
    RiskLimitRequestResult[RiskLimitRequestResult["RiskLimitActionsNotSupported"] = 8] = "RiskLimitActionsNotSupported";
    RiskLimitRequestResult[RiskLimitRequestResult["WarningLevelsNotSupported"] = 9] = "WarningLevelsNotSupported";
    RiskLimitRequestResult[RiskLimitRequestResult["WarningLevelActionsNotSupported"] = 10] = "WarningLevelActionsNotSupported";
    RiskLimitRequestResult[RiskLimitRequestResult["RiskInstrumentScopeNotSupported"] = 11] = "RiskInstrumentScopeNotSupported";
    RiskLimitRequestResult[RiskLimitRequestResult["RiskLimitNotApprovedForPartyIes"] = 12] = "RiskLimitNotApprovedForPartyIes";
    RiskLimitRequestResult[RiskLimitRequestResult["RiskLimitAlreadyDefinedForPartyIes"] = 13] = "RiskLimitAlreadyDefinedForPartyIes";
    RiskLimitRequestResult[RiskLimitRequestResult["InstrumentNotApprovedForPartyIes"] = 14] = "InstrumentNotApprovedForPartyIes";
    RiskLimitRequestResult[RiskLimitRequestResult["NotAuthorized"] = 98] = "NotAuthorized";
    RiskLimitRequestResult[RiskLimitRequestResult["Other"] = 99] = "Other";
})(RiskLimitRequestResult = exports.RiskLimitRequestResult || (exports.RiskLimitRequestResult = {}));
var RiskLimitRequestStatus;
(function (RiskLimitRequestStatus) {
    RiskLimitRequestStatus[RiskLimitRequestStatus["Accepted"] = 0] = "Accepted";
    RiskLimitRequestStatus[RiskLimitRequestStatus["AcceptedWithChanges"] = 1] = "AcceptedWithChanges";
    RiskLimitRequestStatus[RiskLimitRequestStatus["Rejected"] = 2] = "Rejected";
    RiskLimitRequestStatus[RiskLimitRequestStatus["AcceptancePending"] = 3] = "AcceptancePending";
})(RiskLimitRequestStatus = exports.RiskLimitRequestStatus || (exports.RiskLimitRequestStatus = {}));
var RiskLimitStatus;
(function (RiskLimitStatus) {
    RiskLimitStatus[RiskLimitStatus["Accepted"] = 0] = "Accepted";
    RiskLimitStatus[RiskLimitStatus["AcceptedWithChanges"] = 1] = "AcceptedWithChanges";
    RiskLimitStatus[RiskLimitStatus["Rejected"] = 2] = "Rejected";
})(RiskLimitStatus = exports.RiskLimitStatus || (exports.RiskLimitStatus = {}));
var RiskLimitResult;
(function (RiskLimitResult) {
    RiskLimitResult[RiskLimitResult["SuccessfulDefault"] = 0] = "SuccessfulDefault";
    RiskLimitResult[RiskLimitResult["InvalidPartyIes"] = 1] = "InvalidPartyIes";
    RiskLimitResult[RiskLimitResult["InvalidRelatedPartyIes"] = 2] = "InvalidRelatedPartyIes";
    RiskLimitResult[RiskLimitResult["InvalidRiskLimitTypeS"] = 3] = "InvalidRiskLimitTypeS";
    RiskLimitResult[RiskLimitResult["InvalidRiskLimitIdS"] = 4] = "InvalidRiskLimitIdS";
    RiskLimitResult[RiskLimitResult["InvalidRiskLimitAmountS"] = 5] = "InvalidRiskLimitAmountS";
    RiskLimitResult[RiskLimitResult["InvalidRiskWarningLevelActionS"] = 6] = "InvalidRiskWarningLevelActionS";
    RiskLimitResult[RiskLimitResult["InvalidRiskInstrumentScopeS"] = 7] = "InvalidRiskInstrumentScopeS";
    RiskLimitResult[RiskLimitResult["RiskLimitActionsNotSupported"] = 8] = "RiskLimitActionsNotSupported";
    RiskLimitResult[RiskLimitResult["WarningLevelsNotSupported"] = 9] = "WarningLevelsNotSupported";
    RiskLimitResult[RiskLimitResult["WarningLevelActionsNotSupported"] = 10] = "WarningLevelActionsNotSupported";
    RiskLimitResult[RiskLimitResult["RiskInstrumentScopeNotSupported"] = 11] = "RiskInstrumentScopeNotSupported";
    RiskLimitResult[RiskLimitResult["RiskLimitNotApprovedForPartyIes"] = 12] = "RiskLimitNotApprovedForPartyIes";
    RiskLimitResult[RiskLimitResult["RiskLimitAlreadyDefinedForPartyIes"] = 13] = "RiskLimitAlreadyDefinedForPartyIes";
    RiskLimitResult[RiskLimitResult["InstrumentNotApprovedForPartyIes"] = 14] = "InstrumentNotApprovedForPartyIes";
    RiskLimitResult[RiskLimitResult["NotAuthorized"] = 98] = "NotAuthorized";
    RiskLimitResult[RiskLimitResult["Other"] = 99] = "Other";
})(RiskLimitResult = exports.RiskLimitResult || (exports.RiskLimitResult = {}));
var RiskLimitAction;
(function (RiskLimitAction) {
    RiskLimitAction[RiskLimitAction["QueueInbound"] = 0] = "QueueInbound";
    RiskLimitAction[RiskLimitAction["QueueOutbound"] = 1] = "QueueOutbound";
    RiskLimitAction[RiskLimitAction["Reject"] = 2] = "Reject";
    RiskLimitAction[RiskLimitAction["Disconnect"] = 3] = "Disconnect";
    RiskLimitAction[RiskLimitAction["Warning"] = 4] = "Warning";
    RiskLimitAction[RiskLimitAction["PingCreditCheckModelWithRevalidation"] = 5] = "PingCreditCheckModelWithRevalidation";
    RiskLimitAction[RiskLimitAction["PingCreditCheckModelWithoutRevalidation"] = 6] = "PingCreditCheckModelWithoutRevalidation";
    RiskLimitAction[RiskLimitAction["PushCreditCheckModelWithRevalidation"] = 7] = "PushCreditCheckModelWithRevalidation";
    RiskLimitAction[RiskLimitAction["PushCreditCheckModelWithoutRevalidation"] = 8] = "PushCreditCheckModelWithoutRevalidation";
    RiskLimitAction[RiskLimitAction["Suspend"] = 9] = "Suspend";
    RiskLimitAction[RiskLimitAction["HaltTrading"] = 10] = "HaltTrading";
})(RiskLimitAction = exports.RiskLimitAction || (exports.RiskLimitAction = {}));
var RiskWarningLevelAction;
(function (RiskWarningLevelAction) {
    RiskWarningLevelAction[RiskWarningLevelAction["QueueInbound"] = 0] = "QueueInbound";
    RiskWarningLevelAction[RiskWarningLevelAction["QueueOutbound"] = 1] = "QueueOutbound";
    RiskWarningLevelAction[RiskWarningLevelAction["Reject"] = 2] = "Reject";
    RiskWarningLevelAction[RiskWarningLevelAction["Disconnect"] = 3] = "Disconnect";
    RiskWarningLevelAction[RiskWarningLevelAction["Warning"] = 4] = "Warning";
    RiskWarningLevelAction[RiskWarningLevelAction["PingCreditCheckModelWithRevalidation"] = 5] = "PingCreditCheckModelWithRevalidation";
    RiskWarningLevelAction[RiskWarningLevelAction["PingCreditCheckModelWithoutRevalidation"] = 6] = "PingCreditCheckModelWithoutRevalidation";
    RiskWarningLevelAction[RiskWarningLevelAction["PushCreditCheckModelWithRevalidation"] = 7] = "PushCreditCheckModelWithRevalidation";
    RiskWarningLevelAction[RiskWarningLevelAction["PushCreditCheckModelWithoutRevalidation"] = 8] = "PushCreditCheckModelWithoutRevalidation";
    RiskWarningLevelAction[RiskWarningLevelAction["Suspend"] = 9] = "Suspend";
    RiskWarningLevelAction[RiskWarningLevelAction["HaltTrading"] = 10] = "HaltTrading";
})(RiskWarningLevelAction = exports.RiskWarningLevelAction || (exports.RiskWarningLevelAction = {}));
var EntitlementType;
(function (EntitlementType) {
    EntitlementType[EntitlementType["Trade"] = 0] = "Trade";
    EntitlementType[EntitlementType["MakeMarkets"] = 1] = "MakeMarkets";
    EntitlementType[EntitlementType["HoldPositions"] = 2] = "HoldPositions";
    EntitlementType[EntitlementType["PerformGiveUps"] = 3] = "PerformGiveUps";
    EntitlementType[EntitlementType["SubmitIndicationsOfInterestIoIs"] = 4] = "SubmitIndicationsOfInterestIoIs";
    EntitlementType[EntitlementType["SubscribeToMarketData"] = 5] = "SubscribeToMarketData";
    EntitlementType[EntitlementType["ShortWithPreBorrow"] = 6] = "ShortWithPreBorrow";
    EntitlementType[EntitlementType["SubmitQuoteRequests"] = 7] = "SubmitQuoteRequests";
    EntitlementType[EntitlementType["RespondToQuoteRequests"] = 8] = "RespondToQuoteRequests";
})(EntitlementType = exports.EntitlementType || (exports.EntitlementType = {}));
var EntitlementAttribDatatype;
(function (EntitlementAttribDatatype) {
    EntitlementAttribDatatype[EntitlementAttribDatatype["Int"] = 1] = "Int";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Length"] = 2] = "Length";
    EntitlementAttribDatatype[EntitlementAttribDatatype["NumInGroup"] = 3] = "NumInGroup";
    EntitlementAttribDatatype[EntitlementAttribDatatype["SeqNum"] = 4] = "SeqNum";
    EntitlementAttribDatatype[EntitlementAttribDatatype["TagNum"] = 5] = "TagNum";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Float"] = 6] = "Float";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Qty"] = 7] = "Qty";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Price"] = 8] = "Price";
    EntitlementAttribDatatype[EntitlementAttribDatatype["PriceOffset"] = 9] = "PriceOffset";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Amt"] = 10] = "Amt";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Percentage"] = 11] = "Percentage";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Char"] = 12] = "Char";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Boolean"] = 13] = "Boolean";
    EntitlementAttribDatatype[EntitlementAttribDatatype["String"] = 14] = "String";
    EntitlementAttribDatatype[EntitlementAttribDatatype["MultipleCharValue"] = 15] = "MultipleCharValue";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Currency"] = 16] = "Currency";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Exchange"] = 17] = "Exchange";
    EntitlementAttribDatatype[EntitlementAttribDatatype["MonthYear"] = 18] = "MonthYear";
    EntitlementAttribDatatype[EntitlementAttribDatatype["UtcTimestamp"] = 19] = "UtcTimestamp";
    EntitlementAttribDatatype[EntitlementAttribDatatype["UtcTimeOnly"] = 20] = "UtcTimeOnly";
    EntitlementAttribDatatype[EntitlementAttribDatatype["LocalMktDate"] = 21] = "LocalMktDate";
    EntitlementAttribDatatype[EntitlementAttribDatatype["UtcDateOnly"] = 22] = "UtcDateOnly";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Data"] = 23] = "Data";
    EntitlementAttribDatatype[EntitlementAttribDatatype["MultipleStringValue"] = 24] = "MultipleStringValue";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Country"] = 25] = "Country";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Language"] = 26] = "Language";
    EntitlementAttribDatatype[EntitlementAttribDatatype["TzTimeOnly"] = 27] = "TzTimeOnly";
    EntitlementAttribDatatype[EntitlementAttribDatatype["TzTimestamp"] = 28] = "TzTimestamp";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Tenor"] = 29] = "Tenor";
    EntitlementAttribDatatype[EntitlementAttribDatatype["DayOfMonth"] = 30] = "DayOfMonth";
    EntitlementAttribDatatype[EntitlementAttribDatatype["XmlData"] = 31] = "XmlData";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Pattern"] = 32] = "Pattern";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Reserved100Plus"] = 33] = "Reserved100Plus";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Reserved1000Plus"] = 34] = "Reserved1000Plus";
    EntitlementAttribDatatype[EntitlementAttribDatatype["Reserved4000Plus"] = 35] = "Reserved4000Plus";
})(EntitlementAttribDatatype = exports.EntitlementAttribDatatype || (exports.EntitlementAttribDatatype = {}));
var TradSesControl;
(function (TradSesControl) {
    TradSesControl[TradSesControl["AutomaticDefault"] = 0] = "AutomaticDefault";
    TradSesControl[TradSesControl["Manual"] = 1] = "Manual";
})(TradSesControl = exports.TradSesControl || (exports.TradSesControl = {}));
var TradeVolType;
(function (TradeVolType) {
    TradeVolType[TradeVolType["NumberOfUnitsEGShareParCurrencyContractsDefault"] = 0] = "NumberOfUnitsEGShareParCurrencyContractsDefault";
    TradeVolType[TradeVolType["NumberOfRoundLots"] = 1] = "NumberOfRoundLots";
})(TradeVolType = exports.TradeVolType || (exports.TradeVolType = {}));
var OrderEventType;
(function (OrderEventType) {
    OrderEventType[OrderEventType["Added0New"] = 1] = "Added0New";
    OrderEventType[OrderEventType["Modified5Replaced"] = 2] = "Modified5Replaced";
    OrderEventType[OrderEventType["Deleted4Canceled"] = 3] = "Deleted4Canceled";
    OrderEventType[OrderEventType["PartiallyFilledFTrade"] = 4] = "PartiallyFilledFTrade";
    OrderEventType[OrderEventType["FilledFTrade"] = 5] = "FilledFTrade";
    OrderEventType[OrderEventType["Suspended9Suspended"] = 6] = "Suspended9Suspended";
    OrderEventType[OrderEventType["ReleasedNReleased"] = 7] = "ReleasedNReleased";
    OrderEventType[OrderEventType["RestatedDRestated"] = 8] = "RestatedDRestated";
    OrderEventType[OrderEventType["LockedMLocked"] = 9] = "LockedMLocked";
    OrderEventType[OrderEventType["TriggeredLTriggeredOrActivatedBySystem"] = 10] = "TriggeredLTriggeredOrActivatedBySystem";
    OrderEventType[OrderEventType["ActivatedLTriggeredOrActivatedBySystem"] = 11] = "ActivatedLTriggeredOrActivatedBySystem";
})(OrderEventType = exports.OrderEventType || (exports.OrderEventType = {}));
var OrderEventReason;
(function (OrderEventReason) {
    OrderEventReason[OrderEventReason["AddOrderRequest"] = 1] = "AddOrderRequest";
    OrderEventReason[OrderEventReason["ModifyOrderRequest"] = 2] = "ModifyOrderRequest";
    OrderEventReason[OrderEventReason["DeleteOrderRequest"] = 3] = "DeleteOrderRequest";
    OrderEventReason[OrderEventReason["OrderEnteredOutOfBand"] = 4] = "OrderEnteredOutOfBand";
    OrderEventReason[OrderEventReason["OrderModifiedOutOfBand"] = 5] = "OrderModifiedOutOfBand";
    OrderEventReason[OrderEventReason["OrderDeletedOutOfBand"] = 6] = "OrderDeletedOutOfBand";
    OrderEventReason[OrderEventReason["OrderActivatedOrTriggered"] = 7] = "OrderActivatedOrTriggered";
    OrderEventReason[OrderEventReason["OrderExpired"] = 8] = "OrderExpired";
    OrderEventReason[OrderEventReason["ReserveOrderRefreshed"] = 9] = "ReserveOrderRefreshed";
    OrderEventReason[OrderEventReason["AwayMarketBetter"] = 10] = "AwayMarketBetter";
    OrderEventReason[OrderEventReason["CorporateAction"] = 11] = "CorporateAction";
    OrderEventReason[OrderEventReason["StartOfDay"] = 12] = "StartOfDay";
    OrderEventReason[OrderEventReason["EndOfDay"] = 13] = "EndOfDay";
})(OrderEventReason = exports.OrderEventReason || (exports.OrderEventReason = {}));
var OrderEventLiquidityIndicator;
(function (OrderEventLiquidityIndicator) {
    OrderEventLiquidityIndicator[OrderEventLiquidityIndicator["AddedLiquidity"] = 1] = "AddedLiquidity";
    OrderEventLiquidityIndicator[OrderEventLiquidityIndicator["RemovedLiquidity"] = 2] = "RemovedLiquidity";
    OrderEventLiquidityIndicator[OrderEventLiquidityIndicator["LiquidityRoutedOut"] = 3] = "LiquidityRoutedOut";
    OrderEventLiquidityIndicator[OrderEventLiquidityIndicator["Auction"] = 4] = "Auction";
    OrderEventLiquidityIndicator[OrderEventLiquidityIndicator["TriggeredStopOrder"] = 5] = "TriggeredStopOrder";
    OrderEventLiquidityIndicator[OrderEventLiquidityIndicator["TriggeredContingencyOrder"] = 6] = "TriggeredContingencyOrder";
    OrderEventLiquidityIndicator[OrderEventLiquidityIndicator["TriggeredMarketOrder"] = 7] = "TriggeredMarketOrder";
})(OrderEventLiquidityIndicator = exports.OrderEventLiquidityIndicator || (exports.OrderEventLiquidityIndicator = {}));
var AuctionType;
(function (AuctionType) {
    AuctionType[AuctionType["None"] = 0] = "None";
    AuctionType[AuctionType["BlockOrderAuction"] = 1] = "BlockOrderAuction";
    AuctionType[AuctionType["DirectedOrderAuction"] = 2] = "DirectedOrderAuction";
    AuctionType[AuctionType["ExposureOrderAuction"] = 3] = "ExposureOrderAuction";
    AuctionType[AuctionType["FlashOrderAuction"] = 4] = "FlashOrderAuction";
    AuctionType[AuctionType["FacilitationOrderAuction"] = 5] = "FacilitationOrderAuction";
    AuctionType[AuctionType["SolicitationOrderAuction"] = 6] = "SolicitationOrderAuction";
    AuctionType[AuctionType["PriceImprovementMechanismPim"] = 7] = "PriceImprovementMechanismPim";
    AuctionType[AuctionType["DirectedOrderPriceImprovementMechanismPim"] = 8] = "DirectedOrderPriceImprovementMechanismPim";
})(AuctionType = exports.AuctionType || (exports.AuctionType = {}));
var AuctionInstruction;
(function (AuctionInstruction) {
    AuctionInstruction[AuctionInstruction["AutomaticAuctionPermittedDefault"] = 0] = "AutomaticAuctionPermittedDefault";
    AuctionInstruction[AuctionInstruction["AutomaticAuctionNotPermitted"] = 1] = "AutomaticAuctionNotPermitted";
})(AuctionInstruction = exports.AuctionInstruction || (exports.AuctionInstruction = {}));
var LockType;
(function (LockType) {
    LockType[LockType["NotLocked"] = 0] = "NotLocked";
    LockType[LockType["AwayMarketBetter"] = 1] = "AwayMarketBetter";
    LockType[LockType["ThreeTickLocked"] = 2] = "ThreeTickLocked";
    LockType[LockType["LockedByMarketMaker"] = 3] = "LockedByMarketMaker";
    LockType[LockType["DirectedOrderLock"] = 4] = "DirectedOrderLock";
    LockType[LockType["MultilegLock"] = 5] = "MultilegLock";
    LockType[LockType["MarketOrderLock"] = 6] = "MarketOrderLock";
    LockType[LockType["PreAssignmentLock"] = 7] = "PreAssignmentLock";
})(LockType = exports.LockType || (exports.LockType = {}));
var ReleaseInstruction;
(function (ReleaseInstruction) {
    ReleaseInstruction[ReleaseInstruction["IntermarketSweepOrderIso"] = 1] = "IntermarketSweepOrderIso";
    ReleaseInstruction[ReleaseInstruction["NoAwayMarketBetterCheck"] = 2] = "NoAwayMarketBetterCheck";
})(ReleaseInstruction = exports.ReleaseInstruction || (exports.ReleaseInstruction = {}));
var DisclosureType;
(function (DisclosureType) {
    DisclosureType[DisclosureType["Volume"] = 1] = "Volume";
    DisclosureType[DisclosureType["Price"] = 2] = "Price";
    DisclosureType[DisclosureType["Side"] = 3] = "Side";
    DisclosureType[DisclosureType["Aon"] = 4] = "Aon";
    DisclosureType[DisclosureType["General"] = 5] = "General";
    DisclosureType[DisclosureType["ClearingAccount"] = 6] = "ClearingAccount";
    DisclosureType[DisclosureType["CmtaAccount"] = 7] = "CmtaAccount";
})(DisclosureType = exports.DisclosureType || (exports.DisclosureType = {}));
var DisclosureInstruction;
(function (DisclosureInstruction) {
    DisclosureInstruction[DisclosureInstruction["No"] = 0] = "No";
    DisclosureInstruction[DisclosureInstruction["Yes"] = 1] = "Yes";
    DisclosureInstruction[DisclosureInstruction["UseDefaultSetting"] = 2] = "UseDefaultSetting";
})(DisclosureInstruction = exports.DisclosureInstruction || (exports.DisclosureInstruction = {}));
var TradingCapacity;
(function (TradingCapacity) {
    TradingCapacity[TradingCapacity["Customer"] = 1] = "Customer";
    TradingCapacity[TradingCapacity["CustomerProfessional"] = 2] = "CustomerProfessional";
    TradingCapacity[TradingCapacity["BrokerDealer"] = 3] = "BrokerDealer";
    TradingCapacity[TradingCapacity["CustomerBrokerDealer"] = 4] = "CustomerBrokerDealer";
    TradingCapacity[TradingCapacity["Principal"] = 5] = "Principal";
    TradingCapacity[TradingCapacity["MarketMaker"] = 6] = "MarketMaker";
    TradingCapacity[TradingCapacity["AwayMarketMaker"] = 7] = "AwayMarketMaker";
    TradingCapacity[TradingCapacity["SystematicInternaliser"] = 8] = "SystematicInternaliser";
})(TradingCapacity = exports.TradingCapacity || (exports.TradingCapacity = {}));
var ClearingAccountType;
(function (ClearingAccountType) {
    ClearingAccountType[ClearingAccountType["Customer"] = 1] = "Customer";
    ClearingAccountType[ClearingAccountType["Firm"] = 2] = "Firm";
    ClearingAccountType[ClearingAccountType["MarketMaker"] = 3] = "MarketMaker";
})(ClearingAccountType = exports.ClearingAccountType || (exports.ClearingAccountType = {}));
var LegClearingAccountType;
(function (LegClearingAccountType) {
    LegClearingAccountType[LegClearingAccountType["Customer"] = 1] = "Customer";
    LegClearingAccountType[LegClearingAccountType["Firm"] = 2] = "Firm";
    LegClearingAccountType[LegClearingAccountType["MarketMaker"] = 3] = "MarketMaker";
})(LegClearingAccountType = exports.LegClearingAccountType || (exports.LegClearingAccountType = {}));
var TargetPartyRoleQualifier;
(function (TargetPartyRoleQualifier) {
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["Agency"] = 0] = "Agency";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["Principal"] = 1] = "Principal";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["Bank"] = 7] = "Bank";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["Hub"] = 8] = "Hub";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["Current"] = 18] = "Current";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["New"] = 19] = "New";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    TargetPartyRoleQualifier[TargetPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(TargetPartyRoleQualifier = exports.TargetPartyRoleQualifier || (exports.TargetPartyRoleQualifier = {}));
var RelatedPriceSource;
(function (RelatedPriceSource) {
    RelatedPriceSource[RelatedPriceSource["NbbNationalBestBid"] = 1] = "NbbNationalBestBid";
    RelatedPriceSource[RelatedPriceSource["NboNationalBestOffer"] = 2] = "NboNationalBestOffer";
})(RelatedPriceSource = exports.RelatedPriceSource || (exports.RelatedPriceSource = {}));
var MinQtyMethod;
(function (MinQtyMethod) {
    MinQtyMethod[MinQtyMethod["OnceAppliesOnlyToFirstExecution"] = 1] = "OnceAppliesOnlyToFirstExecution";
    MinQtyMethod[MinQtyMethod["MultipleAppliesToEveryExecution"] = 2] = "MultipleAppliesToEveryExecution";
})(MinQtyMethod = exports.MinQtyMethod || (exports.MinQtyMethod = {}));
var Triggered;
(function (Triggered) {
    Triggered[Triggered["NotTriggeredDefault"] = 0] = "NotTriggeredDefault";
    Triggered[Triggered["Triggered"] = 1] = "Triggered";
    Triggered[Triggered["StopOrderTriggered"] = 2] = "StopOrderTriggered";
    Triggered[Triggered["OneCancelsTheOtherOcoOrderTriggered"] = 3] = "OneCancelsTheOtherOcoOrderTriggered";
    Triggered[Triggered["OneTriggersTheOtherOtoOrderTriggered"] = 4] = "OneTriggersTheOtherOtoOrderTriggered";
    Triggered[Triggered["OneUpdatesTheOtherOuoOrderTriggered"] = 5] = "OneUpdatesTheOtherOuoOrderTriggered";
})(Triggered = exports.Triggered || (exports.Triggered = {}));
var EventTimeUnit;
(function (EventTimeUnit) {
    EventTimeUnit["Hour"] = "H";
    EventTimeUnit["Minute"] = "Min";
    EventTimeUnit["Second"] = "S";
    EventTimeUnit["Day"] = "D";
    EventTimeUnit["Week"] = "Wk";
    EventTimeUnit["Month"] = "Mo";
    EventTimeUnit["Year"] = "Yr";
})(EventTimeUnit = exports.EventTimeUnit || (exports.EventTimeUnit = {}));
var ClearedIndicator;
(function (ClearedIndicator) {
    ClearedIndicator[ClearedIndicator["NotCleared"] = 0] = "NotCleared";
    ClearedIndicator[ClearedIndicator["Cleared"] = 1] = "Cleared";
    ClearedIndicator[ClearedIndicator["Submitted"] = 2] = "Submitted";
    ClearedIndicator[ClearedIndicator["Rejected"] = 3] = "Rejected";
})(ClearedIndicator = exports.ClearedIndicator || (exports.ClearedIndicator = {}));
var ContractRefPosType;
(function (ContractRefPosType) {
    ContractRefPosType[ContractRefPosType["TwoComponentIntercommoditySpread"] = 0] = "TwoComponentIntercommoditySpread";
    ContractRefPosType[ContractRefPosType["IndexOrBasket"] = 1] = "IndexOrBasket";
    ContractRefPosType[ContractRefPosType["TwoComponentLocationalBasis"] = 2] = "TwoComponentLocationalBasis";
    ContractRefPosType[ContractRefPosType["Other"] = 99] = "Other";
})(ContractRefPosType = exports.ContractRefPosType || (exports.ContractRefPosType = {}));
var PositionCapacity;
(function (PositionCapacity) {
    PositionCapacity[PositionCapacity["Principal"] = 0] = "Principal";
    PositionCapacity[PositionCapacity["Agent"] = 1] = "Agent";
    PositionCapacity[PositionCapacity["Customer"] = 2] = "Customer";
    PositionCapacity[PositionCapacity["Counterparty"] = 3] = "Counterparty";
})(PositionCapacity = exports.PositionCapacity || (exports.PositionCapacity = {}));
var PosQtyUnitOfMeasure;
(function (PosQtyUnitOfMeasure) {
    PosQtyUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    PosQtyUnitOfMeasure["Allowances"] = "Alw";
    PosQtyUnitOfMeasure["Barrels"] = "Bbl";
    PosQtyUnitOfMeasure["CubicMeters"] = "CBM";
    PosQtyUnitOfMeasure["BoardFeet"] = "BDFT";
    PosQtyUnitOfMeasure["Gigajoules"] = "GJ";
    PosQtyUnitOfMeasure["Bushels"] = "Bu";
    PosQtyUnitOfMeasure["KilowattHours"] = "kWh";
    PosQtyUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    PosQtyUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    PosQtyUnitOfMeasure["MegawattHours"] = "MWh";
    PosQtyUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    PosQtyUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    PosQtyUnitOfMeasure["Therms"] = "thm";
    PosQtyUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    PosQtyUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    PosQtyUnitOfMeasure["HundredweightUs"] = "cwt";
    PosQtyUnitOfMeasure["Days"] = "day";
    PosQtyUnitOfMeasure["DryMetricTons"] = "dt";
    PosQtyUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    PosQtyUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    PosQtyUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    PosQtyUnitOfMeasure["Grams"] = "g";
    PosQtyUnitOfMeasure["Gallons"] = "Gal";
    PosQtyUnitOfMeasure["GrossTons"] = "GT";
    PosQtyUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    PosQtyUnitOfMeasure["IndexPoint"] = "IPNT";
    PosQtyUnitOfMeasure["Kilograms"] = "kg";
    PosQtyUnitOfMeasure["Kiloliters"] = "kL";
    PosQtyUnitOfMeasure["KilowattYear"] = "kW-a";
    PosQtyUnitOfMeasure["KilowattDay"] = "kW-d";
    PosQtyUnitOfMeasure["KilowattHour"] = "kW-h";
    PosQtyUnitOfMeasure["KilowattMonth"] = "kW-M";
    PosQtyUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    PosQtyUnitOfMeasure["Liters"] = "L";
    PosQtyUnitOfMeasure["Pounds"] = "lbs";
    PosQtyUnitOfMeasure["MegawattYear"] = "MW-a";
    PosQtyUnitOfMeasure["MegawattDay"] = "MW-d";
    PosQtyUnitOfMeasure["MegawattHour"] = "MW-h";
    PosQtyUnitOfMeasure["MegawattMonth"] = "MW-M";
    PosQtyUnitOfMeasure["MegawattMinute"] = "MW-min";
    PosQtyUnitOfMeasure["TroyOunces"] = "oz_tr";
    PosQtyUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    PosQtyUnitOfMeasure["MetricTons"] = "t";
    PosQtyUnitOfMeasure["TonsUs"] = "tn";
    PosQtyUnitOfMeasure["MillionBarrels"] = "MMbbl";
    PosQtyUnitOfMeasure["UsDollars"] = "USD";
})(PosQtyUnitOfMeasure = exports.PosQtyUnitOfMeasure || (exports.PosQtyUnitOfMeasure = {}));
var TradePriceCondition;
(function (TradePriceCondition) {
    TradePriceCondition[TradePriceCondition["SpecialCumDividendCd"] = 0] = "SpecialCumDividendCd";
    TradePriceCondition[TradePriceCondition["SpecialCumRightsCr"] = 1] = "SpecialCumRightsCr";
    TradePriceCondition[TradePriceCondition["SpecialExDividendXd"] = 2] = "SpecialExDividendXd";
    TradePriceCondition[TradePriceCondition["SpecialExRightsXr"] = 3] = "SpecialExRightsXr";
    TradePriceCondition[TradePriceCondition["SpecialCumCouponCc"] = 4] = "SpecialCumCouponCc";
    TradePriceCondition[TradePriceCondition["SpecialCumCapitalRepaymentsCp"] = 5] = "SpecialCumCapitalRepaymentsCp";
    TradePriceCondition[TradePriceCondition["SpecialExCouponXc"] = 6] = "SpecialExCouponXc";
    TradePriceCondition[TradePriceCondition["SpecialExCapitalRepaymentsXp"] = 7] = "SpecialExCapitalRepaymentsXp";
    TradePriceCondition[TradePriceCondition["CashSettlementCs"] = 8] = "CashSettlementCs";
    TradePriceCondition[TradePriceCondition["SpecialCumBonusCb"] = 9] = "SpecialCumBonusCb";
    TradePriceCondition[TradePriceCondition["SpecialPriceSp"] = 10] = "SpecialPriceSp";
    TradePriceCondition[TradePriceCondition["SpecialExBonusXb"] = 11] = "SpecialExBonusXb";
    TradePriceCondition[TradePriceCondition["GuaranteedDeliveryGd"] = 12] = "GuaranteedDeliveryGd";
    TradePriceCondition[TradePriceCondition["SpecialDividend"] = 13] = "SpecialDividend";
    TradePriceCondition[TradePriceCondition["PriceImprovement"] = 14] = "PriceImprovement";
    TradePriceCondition[TradePriceCondition["NonPriceFormingTrade"] = 15] = "NonPriceFormingTrade";
    TradePriceCondition[TradePriceCondition["TradeExemptedFromTradingObligation"] = 16] = "TradeExemptedFromTradingObligation";
    TradePriceCondition[TradePriceCondition["PriceIsPending"] = 17] = "PriceIsPending";
    TradePriceCondition[TradePriceCondition["PriceIsNotApplicable"] = 18] = "PriceIsNotApplicable";
})(TradePriceCondition = exports.TradePriceCondition || (exports.TradePriceCondition = {}));
var TradeAllocStatus;
(function (TradeAllocStatus) {
    TradeAllocStatus[TradeAllocStatus["PendingClear"] = 0] = "PendingClear";
    TradeAllocStatus[TradeAllocStatus["Claimed"] = 1] = "Claimed";
    TradeAllocStatus[TradeAllocStatus["Cleared"] = 2] = "Cleared";
    TradeAllocStatus[TradeAllocStatus["Rejected"] = 3] = "Rejected";
})(TradeAllocStatus = exports.TradeAllocStatus || (exports.TradeAllocStatus = {}));
var TradeQtyType;
(function (TradeQtyType) {
    TradeQtyType[TradeQtyType["ClearedQuantity"] = 0] = "ClearedQuantity";
    TradeQtyType[TradeQtyType["LongSideClaimedQuantity"] = 1] = "LongSideClaimedQuantity";
    TradeQtyType[TradeQtyType["ShortSideClaimedQuantity"] = 2] = "ShortSideClaimedQuantity";
    TradeQtyType[TradeQtyType["LongSideRejectedQuantity"] = 3] = "LongSideRejectedQuantity";
    TradeQtyType[TradeQtyType["ShortSideRejectedQuantity"] = 4] = "ShortSideRejectedQuantity";
    TradeQtyType[TradeQtyType["PendingQuantity"] = 5] = "PendingQuantity";
    TradeQtyType[TradeQtyType["TransactionQuantity"] = 6] = "TransactionQuantity";
    TradeQtyType[TradeQtyType["RemainingTradeQuantity"] = 7] = "RemainingTradeQuantity";
    TradeQtyType[TradeQtyType["PreviousRemainingTradeQuantity"] = 8] = "PreviousRemainingTradeQuantity";
})(TradeQtyType = exports.TradeQtyType || (exports.TradeQtyType = {}));
var TradeAllocAmtType;
(function (TradeAllocAmtType) {
    TradeAllocAmtType["CashAmountCorporateEvent"] = "CASH";
    TradeAllocAmtType["CashResidualAmount"] = "CRES";
    TradeAllocAmtType["FinalMarkToMarketAmount"] = "FMTM";
    TradeAllocAmtType["IncrementalMarkToMarket"] = "IMTM";
    TradeAllocAmtType["PremiumAmount"] = "PREM";
    TradeAllocAmtType["StartOfDayMarkToMarket"] = "SMTM";
    TradeAllocAmtType["TradeVariationAmount"] = "TVAR";
    TradeAllocAmtType["ValueAdjustedAmount"] = "VADJ";
    TradeAllocAmtType["SettlementValue"] = "SETL";
    TradeAllocAmtType["InitialTradeCouponAmount"] = "ICPN";
    TradeAllocAmtType["AccruedCouponAmount"] = "ACPN";
    TradeAllocAmtType["CouponAmount"] = "CPN";
    TradeAllocAmtType["IncrementalAccruedCoupon"] = "IACPN";
    TradeAllocAmtType["CollateralizedMarkToMarket"] = "CMTM";
    TradeAllocAmtType["IncrementalCollateralizedMarkToMarket"] = "ICMTM";
    TradeAllocAmtType["CompensationAmount"] = "DLV";
    TradeAllocAmtType["TotalBankedAmount"] = "BANK";
    TradeAllocAmtType["TotalCollateralizedAmount"] = "COLAT";
    TradeAllocAmtType["LongPairedSwapOrSwaptionNotionalValue"] = "LSNV";
    TradeAllocAmtType["ShortPairedSwapOrSwaptionNotionalValue"] = "SSNV";
    TradeAllocAmtType["StartOfDayAccruedCoupon"] = "SACPN";
    TradeAllocAmtType["NetPresentValue"] = "NPV";
    TradeAllocAmtType["StartOfDayNetPresentValue"] = "SNPV";
    TradeAllocAmtType["NetCashFlow"] = "NCF";
    TradeAllocAmtType["PresentValueOfAllFees"] = "PVFEES";
    TradeAllocAmtType["PresentValueOfOneBasisPoints"] = "PV01";
    TradeAllocAmtType["TheFiveYearEquivalentNotionalAmount"] = "5YREN";
    TradeAllocAmtType["UndiscountedMarkToMarket"] = "UMTM";
    TradeAllocAmtType["MarkToModel"] = "MTD";
    TradeAllocAmtType["MarkToMarketVariance"] = "VMTM";
    TradeAllocAmtType["MarkToModelVariance"] = "VMTD";
    TradeAllocAmtType["UpfrontPayment"] = "UPFRNT";
})(TradeAllocAmtType = exports.TradeAllocAmtType || (exports.TradeAllocAmtType = {}));
var TradeAllocGroupInstruction;
(function (TradeAllocGroupInstruction) {
    TradeAllocGroupInstruction[TradeAllocGroupInstruction["AddToAnExistingAllocationGroupIfOneExists"] = 0] = "AddToAnExistingAllocationGroupIfOneExists";
    TradeAllocGroupInstruction[TradeAllocGroupInstruction["DoNotAddTheTradeToAnAllocationGroup"] = 1] = "DoNotAddTheTradeToAnAllocationGroup";
})(TradeAllocGroupInstruction = exports.TradeAllocGroupInstruction || (exports.TradeAllocGroupInstruction = {}));
var OffsetInstruction;
(function (OffsetInstruction) {
    OffsetInstruction[OffsetInstruction["Offset"] = 0] = "Offset";
    OffsetInstruction[OffsetInstruction["Onset"] = 1] = "Onset";
})(OffsetInstruction = exports.OffsetInstruction || (exports.OffsetInstruction = {}));
var TradeAllocAmtReason;
(function (TradeAllocAmtReason) {
    TradeAllocAmtReason[TradeAllocAmtReason["OptionsSettlement"] = 0] = "OptionsSettlement";
    TradeAllocAmtReason[TradeAllocAmtReason["PendingErosionAdjustment"] = 1] = "PendingErosionAdjustment";
    TradeAllocAmtReason[TradeAllocAmtReason["FinalErosionAdjustment"] = 2] = "FinalErosionAdjustment";
    TradeAllocAmtReason[TradeAllocAmtReason["TearUpCouponAmount"] = 3] = "TearUpCouponAmount";
    TradeAllocAmtReason[TradeAllocAmtReason["PriceAlignmentInterest"] = 4] = "PriceAlignmentInterest";
    TradeAllocAmtReason[TradeAllocAmtReason["DeliveryInvoiceCharges"] = 5] = "DeliveryInvoiceCharges";
    TradeAllocAmtReason[TradeAllocAmtReason["DeliveryStorageCharges"] = 6] = "DeliveryStorageCharges";
})(TradeAllocAmtReason = exports.TradeAllocAmtReason || (exports.TradeAllocAmtReason = {}));
var SideAvgPxIndicator;
(function (SideAvgPxIndicator) {
    SideAvgPxIndicator[SideAvgPxIndicator["NoAveragePricing"] = 0] = "NoAveragePricing";
    SideAvgPxIndicator[SideAvgPxIndicator["TradeIsPartOfTheAveragePriceGroupIdentifiedByTheSideAvgPxGroupId1854"] = 1] = "TradeIsPartOfTheAveragePriceGroupIdentifiedByTheSideAvgPxGroupId1854";
    SideAvgPxIndicator[SideAvgPxIndicator["LastTradeIsTheAveragePriceGroupIdentifiedByTheSideAvgPxGroupId1854"] = 2] = "LastTradeIsTheAveragePriceGroupIdentifiedByTheSideAvgPxGroupId1854";
})(SideAvgPxIndicator = exports.SideAvgPxIndicator || (exports.SideAvgPxIndicator = {}));
var RelatedTradeIDSource;
(function (RelatedTradeIDSource) {
    RelatedTradeIDSource[RelatedTradeIDSource["NonFixSource"] = 0] = "NonFixSource";
    RelatedTradeIDSource[RelatedTradeIDSource["TradeId"] = 1] = "TradeId";
    RelatedTradeIDSource[RelatedTradeIDSource["SecondaryTradeId"] = 2] = "SecondaryTradeId";
    RelatedTradeIDSource[RelatedTradeIDSource["TradeReportId"] = 3] = "TradeReportId";
    RelatedTradeIDSource[RelatedTradeIDSource["FirmTradeId"] = 4] = "FirmTradeId";
    RelatedTradeIDSource[RelatedTradeIDSource["SecondaryFirmTradeId"] = 5] = "SecondaryFirmTradeId";
    RelatedTradeIDSource[RelatedTradeIDSource["RegulatoryTradeId"] = 6] = "RegulatoryTradeId";
})(RelatedTradeIDSource = exports.RelatedTradeIDSource || (exports.RelatedTradeIDSource = {}));
var RelatedPositionIDSource;
(function (RelatedPositionIDSource) {
    RelatedPositionIDSource[RelatedPositionIDSource["PositionMaintenanceReportIdPosMaintRptId721"] = 1] = "PositionMaintenanceReportIdPosMaintRptId721";
    RelatedPositionIDSource[RelatedPositionIDSource["PositionTransferIdTransferId2437"] = 2] = "PositionTransferIdTransferId2437";
    RelatedPositionIDSource[RelatedPositionIDSource["PositionEntityIdPositionId2618"] = 3] = "PositionEntityIdPositionId2618";
})(RelatedPositionIDSource = exports.RelatedPositionIDSource || (exports.RelatedPositionIDSource = {}));
var QuoteAckStatus;
(function (QuoteAckStatus) {
    QuoteAckStatus[QuoteAckStatus["ReceivedNotYetProcessed"] = 0] = "ReceivedNotYetProcessed";
    QuoteAckStatus[QuoteAckStatus["Accepted"] = 1] = "Accepted";
    QuoteAckStatus[QuoteAckStatus["Rejected"] = 2] = "Rejected";
})(QuoteAckStatus = exports.QuoteAckStatus || (exports.QuoteAckStatus = {}));
var ValueCheckType;
(function (ValueCheckType) {
    ValueCheckType[ValueCheckType["PriceCheck"] = 1] = "PriceCheck";
    ValueCheckType[ValueCheckType["NotionalValueCheck"] = 2] = "NotionalValueCheck";
})(ValueCheckType = exports.ValueCheckType || (exports.ValueCheckType = {}));
var ValueCheckAction;
(function (ValueCheckAction) {
    ValueCheckAction[ValueCheckAction["DoNotCheck"] = 0] = "DoNotCheck";
    ValueCheckAction[ValueCheckAction["Check"] = 1] = "Check";
    ValueCheckAction[ValueCheckAction["BestEffort"] = 2] = "BestEffort";
})(ValueCheckAction = exports.ValueCheckAction || (exports.ValueCheckAction = {}));
var PartyDetailRequestResult;
(function (PartyDetailRequestResult) {
    PartyDetailRequestResult[PartyDetailRequestResult["SuccessfulDefault"] = 0] = "SuccessfulDefault";
    PartyDetailRequestResult[PartyDetailRequestResult["InvalidPartyIes"] = 1] = "InvalidPartyIes";
    PartyDetailRequestResult[PartyDetailRequestResult["InvalidRelatedPartyIes"] = 2] = "InvalidRelatedPartyIes";
    PartyDetailRequestResult[PartyDetailRequestResult["InvalidPartyStatusEs"] = 3] = "InvalidPartyStatusEs";
    PartyDetailRequestResult[PartyDetailRequestResult["NotAuthorized"] = 98] = "NotAuthorized";
    PartyDetailRequestResult[PartyDetailRequestResult["Other"] = 99] = "Other";
})(PartyDetailRequestResult = exports.PartyDetailRequestResult || (exports.PartyDetailRequestResult = {}));
var PartyDetailRequestStatus;
(function (PartyDetailRequestStatus) {
    PartyDetailRequestStatus[PartyDetailRequestStatus["Accepted"] = 0] = "Accepted";
    PartyDetailRequestStatus[PartyDetailRequestStatus["AcceptedWithChanges"] = 1] = "AcceptedWithChanges";
    PartyDetailRequestStatus[PartyDetailRequestStatus["Rejected"] = 2] = "Rejected";
    PartyDetailRequestStatus[PartyDetailRequestStatus["AcceptancePending"] = 3] = "AcceptancePending";
})(PartyDetailRequestStatus = exports.PartyDetailRequestStatus || (exports.PartyDetailRequestStatus = {}));
var PartyDetailDefinitionStatus;
(function (PartyDetailDefinitionStatus) {
    PartyDetailDefinitionStatus[PartyDetailDefinitionStatus["Accepted"] = 0] = "Accepted";
    PartyDetailDefinitionStatus[PartyDetailDefinitionStatus["AcceptedWithChanges"] = 1] = "AcceptedWithChanges";
    PartyDetailDefinitionStatus[PartyDetailDefinitionStatus["Rejected"] = 2] = "Rejected";
})(PartyDetailDefinitionStatus = exports.PartyDetailDefinitionStatus || (exports.PartyDetailDefinitionStatus = {}));
var PartyDetailDefinitionResult;
(function (PartyDetailDefinitionResult) {
    PartyDetailDefinitionResult[PartyDetailDefinitionResult["SuccessfulDefault"] = 0] = "SuccessfulDefault";
    PartyDetailDefinitionResult[PartyDetailDefinitionResult["InvalidPartyIes"] = 1] = "InvalidPartyIes";
    PartyDetailDefinitionResult[PartyDetailDefinitionResult["InvalidRelatedPartyIes"] = 2] = "InvalidRelatedPartyIes";
    PartyDetailDefinitionResult[PartyDetailDefinitionResult["InvalidPartyStatusEs"] = 3] = "InvalidPartyStatusEs";
    PartyDetailDefinitionResult[PartyDetailDefinitionResult["NotAuthorized"] = 98] = "NotAuthorized";
    PartyDetailDefinitionResult[PartyDetailDefinitionResult["Other"] = 99] = "Other";
})(PartyDetailDefinitionResult = exports.PartyDetailDefinitionResult || (exports.PartyDetailDefinitionResult = {}));
var EntitlementRequestResult;
(function (EntitlementRequestResult) {
    EntitlementRequestResult[EntitlementRequestResult["SuccessfulDefault"] = 0] = "SuccessfulDefault";
    EntitlementRequestResult[EntitlementRequestResult["InvalidPartyIes"] = 1] = "InvalidPartyIes";
    EntitlementRequestResult[EntitlementRequestResult["InvalidRelatedPartyIes"] = 2] = "InvalidRelatedPartyIes";
    EntitlementRequestResult[EntitlementRequestResult["InvalidEntitlementTypeS"] = 3] = "InvalidEntitlementTypeS";
    EntitlementRequestResult[EntitlementRequestResult["InvalidEntitlementIdSRefIdS"] = 4] = "InvalidEntitlementIdSRefIdS";
    EntitlementRequestResult[EntitlementRequestResult["InvalidEntitlementAttributeS"] = 5] = "InvalidEntitlementAttributeS";
    EntitlementRequestResult[EntitlementRequestResult["InvalidInstrumentScopeS"] = 6] = "InvalidInstrumentScopeS";
    EntitlementRequestResult[EntitlementRequestResult["InvalidMarketSegmentScopeS"] = 7] = "InvalidMarketSegmentScopeS";
    EntitlementRequestResult[EntitlementRequestResult["InvalidStartDate"] = 8] = "InvalidStartDate";
    EntitlementRequestResult[EntitlementRequestResult["InvalidEndDate"] = 9] = "InvalidEndDate";
    EntitlementRequestResult[EntitlementRequestResult["InstrumentScopeNotSupported"] = 10] = "InstrumentScopeNotSupported";
    EntitlementRequestResult[EntitlementRequestResult["MarketSegmentScopeNotSupported"] = 11] = "MarketSegmentScopeNotSupported";
    EntitlementRequestResult[EntitlementRequestResult["EntitlementNotApprovedForPartyIes"] = 12] = "EntitlementNotApprovedForPartyIes";
    EntitlementRequestResult[EntitlementRequestResult["EntitlementAlreadyDefinedForPartyIes"] = 13] = "EntitlementAlreadyDefinedForPartyIes";
    EntitlementRequestResult[EntitlementRequestResult["InstrumentNotApprovedForPartyIes"] = 14] = "InstrumentNotApprovedForPartyIes";
    EntitlementRequestResult[EntitlementRequestResult["NotAuthorized"] = 98] = "NotAuthorized";
    EntitlementRequestResult[EntitlementRequestResult["Other"] = 99] = "Other";
})(EntitlementRequestResult = exports.EntitlementRequestResult || (exports.EntitlementRequestResult = {}));
var EntitlementRequestStatus;
(function (EntitlementRequestStatus) {
    EntitlementRequestStatus[EntitlementRequestStatus["Accepted"] = 0] = "Accepted";
    EntitlementRequestStatus[EntitlementRequestStatus["AcceptedWithChanges"] = 1] = "AcceptedWithChanges";
    EntitlementRequestStatus[EntitlementRequestStatus["Rejected"] = 2] = "Rejected";
    EntitlementRequestStatus[EntitlementRequestStatus["AcceptancePending"] = 3] = "AcceptancePending";
})(EntitlementRequestStatus = exports.EntitlementRequestStatus || (exports.EntitlementRequestStatus = {}));
var EntitlementStatus;
(function (EntitlementStatus) {
    EntitlementStatus[EntitlementStatus["Accepted"] = 0] = "Accepted";
    EntitlementStatus[EntitlementStatus["AcceptedWithChanges"] = 1] = "AcceptedWithChanges";
    EntitlementStatus[EntitlementStatus["Rejected"] = 2] = "Rejected";
    EntitlementStatus[EntitlementStatus["Pending"] = 3] = "Pending";
    EntitlementStatus[EntitlementStatus["Requested"] = 4] = "Requested";
    EntitlementStatus[EntitlementStatus["Deferred"] = 5] = "Deferred";
})(EntitlementStatus = exports.EntitlementStatus || (exports.EntitlementStatus = {}));
var EntitlementResult;
(function (EntitlementResult) {
    EntitlementResult[EntitlementResult["SuccessfulDefault"] = 0] = "SuccessfulDefault";
    EntitlementResult[EntitlementResult["InvalidPartyIes"] = 1] = "InvalidPartyIes";
    EntitlementResult[EntitlementResult["InvalidRelatedPartyIes"] = 2] = "InvalidRelatedPartyIes";
    EntitlementResult[EntitlementResult["InvalidEntitlementTypeS"] = 3] = "InvalidEntitlementTypeS";
    EntitlementResult[EntitlementResult["InvalidEntitlementIdSRefIdS"] = 4] = "InvalidEntitlementIdSRefIdS";
    EntitlementResult[EntitlementResult["InvalidEntitlementAttributeS"] = 5] = "InvalidEntitlementAttributeS";
    EntitlementResult[EntitlementResult["InvalidInstrumentScopeS"] = 6] = "InvalidInstrumentScopeS";
    EntitlementResult[EntitlementResult["InvalidMarketSegmentScopeS"] = 7] = "InvalidMarketSegmentScopeS";
    EntitlementResult[EntitlementResult["InvalidStartDate"] = 8] = "InvalidStartDate";
    EntitlementResult[EntitlementResult["InvalidEndDate"] = 9] = "InvalidEndDate";
    EntitlementResult[EntitlementResult["InstrumentScopeNotSupported"] = 10] = "InstrumentScopeNotSupported";
    EntitlementResult[EntitlementResult["MarketSegmentScopeNotSupported"] = 11] = "MarketSegmentScopeNotSupported";
    EntitlementResult[EntitlementResult["EntitlementNotApprovedForPartyIes"] = 12] = "EntitlementNotApprovedForPartyIes";
    EntitlementResult[EntitlementResult["EntitlementAlreadyDefinedForPartyIes"] = 13] = "EntitlementAlreadyDefinedForPartyIes";
    EntitlementResult[EntitlementResult["InstrumentNotApprovedForPartyIes"] = 14] = "InstrumentNotApprovedForPartyIes";
    EntitlementResult[EntitlementResult["NotAuthorized"] = 98] = "NotAuthorized";
    EntitlementResult[EntitlementResult["Other"] = 99] = "Other";
})(EntitlementResult = exports.EntitlementResult || (exports.EntitlementResult = {}));
var SettlPriceUnitOfMeasure;
(function (SettlPriceUnitOfMeasure) {
    SettlPriceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    SettlPriceUnitOfMeasure["Allowances"] = "Alw";
    SettlPriceUnitOfMeasure["Barrels"] = "Bbl";
    SettlPriceUnitOfMeasure["CubicMeters"] = "CBM";
    SettlPriceUnitOfMeasure["BoardFeet"] = "BDFT";
    SettlPriceUnitOfMeasure["Gigajoules"] = "GJ";
    SettlPriceUnitOfMeasure["Bushels"] = "Bu";
    SettlPriceUnitOfMeasure["KilowattHours"] = "kWh";
    SettlPriceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    SettlPriceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    SettlPriceUnitOfMeasure["MegawattHours"] = "MWh";
    SettlPriceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    SettlPriceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    SettlPriceUnitOfMeasure["Therms"] = "thm";
    SettlPriceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    SettlPriceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    SettlPriceUnitOfMeasure["HundredweightUs"] = "cwt";
    SettlPriceUnitOfMeasure["Days"] = "day";
    SettlPriceUnitOfMeasure["DryMetricTons"] = "dt";
    SettlPriceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    SettlPriceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    SettlPriceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    SettlPriceUnitOfMeasure["Grams"] = "g";
    SettlPriceUnitOfMeasure["Gallons"] = "Gal";
    SettlPriceUnitOfMeasure["GrossTons"] = "GT";
    SettlPriceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    SettlPriceUnitOfMeasure["IndexPoint"] = "IPNT";
    SettlPriceUnitOfMeasure["Kilograms"] = "kg";
    SettlPriceUnitOfMeasure["Kiloliters"] = "kL";
    SettlPriceUnitOfMeasure["KilowattYear"] = "kW-a";
    SettlPriceUnitOfMeasure["KilowattDay"] = "kW-d";
    SettlPriceUnitOfMeasure["KilowattHour"] = "kW-h";
    SettlPriceUnitOfMeasure["KilowattMonth"] = "kW-M";
    SettlPriceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    SettlPriceUnitOfMeasure["Liters"] = "L";
    SettlPriceUnitOfMeasure["Pounds"] = "lbs";
    SettlPriceUnitOfMeasure["MegawattYear"] = "MW-a";
    SettlPriceUnitOfMeasure["MegawattDay"] = "MW-d";
    SettlPriceUnitOfMeasure["MegawattHour"] = "MW-h";
    SettlPriceUnitOfMeasure["MegawattMonth"] = "MW-M";
    SettlPriceUnitOfMeasure["MegawattMinute"] = "MW-min";
    SettlPriceUnitOfMeasure["TroyOunces"] = "oz_tr";
    SettlPriceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    SettlPriceUnitOfMeasure["MetricTons"] = "t";
    SettlPriceUnitOfMeasure["TonsUs"] = "tn";
    SettlPriceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    SettlPriceUnitOfMeasure["UsDollars"] = "USD";
})(SettlPriceUnitOfMeasure = exports.SettlPriceUnitOfMeasure || (exports.SettlPriceUnitOfMeasure = {}));
var TradeMatchAckStatus;
(function (TradeMatchAckStatus) {
    TradeMatchAckStatus[TradeMatchAckStatus["ReceivedNotYetProcessed"] = 0] = "ReceivedNotYetProcessed";
    TradeMatchAckStatus[TradeMatchAckStatus["Accepted"] = 1] = "Accepted";
    TradeMatchAckStatus[TradeMatchAckStatus["Rejected"] = 2] = "Rejected";
})(TradeMatchAckStatus = exports.TradeMatchAckStatus || (exports.TradeMatchAckStatus = {}));
var TradeMatchRejectReason;
(function (TradeMatchRejectReason) {
    TradeMatchRejectReason[TradeMatchRejectReason["Successful"] = 0] = "Successful";
    TradeMatchRejectReason[TradeMatchRejectReason["InvalidPartyInformation"] = 1] = "InvalidPartyInformation";
    TradeMatchRejectReason[TradeMatchRejectReason["UnknownInstrument"] = 2] = "UnknownInstrument";
    TradeMatchRejectReason[TradeMatchRejectReason["NotAuthorizedToReportTrades"] = 3] = "NotAuthorizedToReportTrades";
    TradeMatchRejectReason[TradeMatchRejectReason["InvalidTradeType"] = 4] = "InvalidTradeType";
    TradeMatchRejectReason[TradeMatchRejectReason["Other"] = 99] = "Other";
})(TradeMatchRejectReason = exports.TradeMatchRejectReason || (exports.TradeMatchRejectReason = {}));
var SideVenueType;
(function (SideVenueType) {
    SideVenueType["ElectronicExchange"] = "E";
    SideVenueType["Pit"] = "P";
    SideVenueType["ExPit"] = "X";
    SideVenueType["Clearinghouse"] = "C";
    SideVenueType["RegisteredMarket"] = "R";
    SideVenueType["OffMarket"] = "O";
    SideVenueType["CentralLimitOrderBook"] = "B";
    SideVenueType["QuoteDrivenMarket"] = "Q";
    SideVenueType["DarkOrderBook"] = "D";
    SideVenueType["AuctionDrivenMarket"] = "A";
    SideVenueType["QuoteNegotiation"] = "N";
    SideVenueType["VoiceNeotiation"] = "V";
    SideVenueType["HybridMarket"] = "H";
})(SideVenueType = exports.SideVenueType || (exports.SideVenueType = {}));
var RegulatoryTradeIDEvent;
(function (RegulatoryTradeIDEvent) {
    RegulatoryTradeIDEvent[RegulatoryTradeIDEvent["InitialBlockTrade"] = 0] = "InitialBlockTrade";
    RegulatoryTradeIDEvent[RegulatoryTradeIDEvent["Allocation"] = 1] = "Allocation";
    RegulatoryTradeIDEvent[RegulatoryTradeIDEvent["Clearing"] = 2] = "Clearing";
    RegulatoryTradeIDEvent[RegulatoryTradeIDEvent["Compression"] = 3] = "Compression";
    RegulatoryTradeIDEvent[RegulatoryTradeIDEvent["Novation"] = 4] = "Novation";
    RegulatoryTradeIDEvent[RegulatoryTradeIDEvent["Termination"] = 5] = "Termination";
    RegulatoryTradeIDEvent[RegulatoryTradeIDEvent["PostTradeValuation"] = 6] = "PostTradeValuation";
})(RegulatoryTradeIDEvent = exports.RegulatoryTradeIDEvent || (exports.RegulatoryTradeIDEvent = {}));
var RegulatoryTradeIDType;
(function (RegulatoryTradeIDType) {
    RegulatoryTradeIDType[RegulatoryTradeIDType["Current"] = 0] = "Current";
    RegulatoryTradeIDType[RegulatoryTradeIDType["Previous"] = 1] = "Previous";
    RegulatoryTradeIDType[RegulatoryTradeIDType["Block"] = 2] = "Block";
    RegulatoryTradeIDType[RegulatoryTradeIDType["Related"] = 3] = "Related";
    RegulatoryTradeIDType[RegulatoryTradeIDType["ClearedBlockTrade"] = 4] = "ClearedBlockTrade";
    RegulatoryTradeIDType[RegulatoryTradeIDType["TradingVenueTransactionIdentifier"] = 5] = "TradingVenueTransactionIdentifier";
})(RegulatoryTradeIDType = exports.RegulatoryTradeIDType || (exports.RegulatoryTradeIDType = {}));
var AllocRegulatoryTradeIDEvent;
(function (AllocRegulatoryTradeIDEvent) {
    AllocRegulatoryTradeIDEvent[AllocRegulatoryTradeIDEvent["InitialBlockTrade"] = 0] = "InitialBlockTrade";
    AllocRegulatoryTradeIDEvent[AllocRegulatoryTradeIDEvent["Allocation"] = 1] = "Allocation";
    AllocRegulatoryTradeIDEvent[AllocRegulatoryTradeIDEvent["Clearing"] = 2] = "Clearing";
    AllocRegulatoryTradeIDEvent[AllocRegulatoryTradeIDEvent["Compression"] = 3] = "Compression";
    AllocRegulatoryTradeIDEvent[AllocRegulatoryTradeIDEvent["Novation"] = 4] = "Novation";
    AllocRegulatoryTradeIDEvent[AllocRegulatoryTradeIDEvent["Termination"] = 5] = "Termination";
    AllocRegulatoryTradeIDEvent[AllocRegulatoryTradeIDEvent["PostTradeValuation"] = 6] = "PostTradeValuation";
})(AllocRegulatoryTradeIDEvent = exports.AllocRegulatoryTradeIDEvent || (exports.AllocRegulatoryTradeIDEvent = {}));
var AllocRegulatoryTradeIDType;
(function (AllocRegulatoryTradeIDType) {
    AllocRegulatoryTradeIDType[AllocRegulatoryTradeIDType["Current"] = 0] = "Current";
    AllocRegulatoryTradeIDType[AllocRegulatoryTradeIDType["Previous"] = 1] = "Previous";
    AllocRegulatoryTradeIDType[AllocRegulatoryTradeIDType["Block"] = 2] = "Block";
    AllocRegulatoryTradeIDType[AllocRegulatoryTradeIDType["Related"] = 3] = "Related";
    AllocRegulatoryTradeIDType[AllocRegulatoryTradeIDType["ClearedBlockTrade"] = 4] = "ClearedBlockTrade";
    AllocRegulatoryTradeIDType[AllocRegulatoryTradeIDType["TradingVenueTransactionIdentifier"] = 5] = "TradingVenueTransactionIdentifier";
})(AllocRegulatoryTradeIDType = exports.AllocRegulatoryTradeIDType || (exports.AllocRegulatoryTradeIDType = {}));
var ExposureDurationUnit;
(function (ExposureDurationUnit) {
    ExposureDurationUnit[ExposureDurationUnit["SecondsDefaultIfNotSpecified"] = 0] = "SecondsDefaultIfNotSpecified";
    ExposureDurationUnit[ExposureDurationUnit["TenthsOfASecond"] = 1] = "TenthsOfASecond";
    ExposureDurationUnit[ExposureDurationUnit["HundredthsOfASecond"] = 2] = "HundredthsOfASecond";
    ExposureDurationUnit[ExposureDurationUnit["Milliseconds"] = 3] = "Milliseconds";
    ExposureDurationUnit[ExposureDurationUnit["Microseconds"] = 4] = "Microseconds";
    ExposureDurationUnit[ExposureDurationUnit["Nanoseconds"] = 5] = "Nanoseconds";
    ExposureDurationUnit[ExposureDurationUnit["Minutes"] = 10] = "Minutes";
    ExposureDurationUnit[ExposureDurationUnit["Hours"] = 11] = "Hours";
    ExposureDurationUnit[ExposureDurationUnit["Days"] = 12] = "Days";
    ExposureDurationUnit[ExposureDurationUnit["Weeks"] = 13] = "Weeks";
    ExposureDurationUnit[ExposureDurationUnit["Months"] = 14] = "Months";
    ExposureDurationUnit[ExposureDurationUnit["Years"] = 15] = "Years";
})(ExposureDurationUnit = exports.ExposureDurationUnit || (exports.ExposureDurationUnit = {}));
var PriceMovementType;
(function (PriceMovementType) {
    PriceMovementType[PriceMovementType["Amount"] = 0] = "Amount";
    PriceMovementType[PriceMovementType["Percentage"] = 1] = "Percentage";
})(PriceMovementType = exports.PriceMovementType || (exports.PriceMovementType = {}));
var ClearingIntention;
(function (ClearingIntention) {
    ClearingIntention[ClearingIntention["DoNotIntendToClear"] = 0] = "DoNotIntendToClear";
    ClearingIntention[ClearingIntention["IntendToClear"] = 1] = "IntendToClear";
})(ClearingIntention = exports.ClearingIntention || (exports.ClearingIntention = {}));
var TradeClearingInstruction;
(function (TradeClearingInstruction) {
    TradeClearingInstruction[TradeClearingInstruction["ProcessNormally"] = 0] = "ProcessNormally";
    TradeClearingInstruction[TradeClearingInstruction["ExcludeFromAllNetting"] = 1] = "ExcludeFromAllNetting";
    TradeClearingInstruction[TradeClearingInstruction["BilateralNettingOnly"] = 2] = "BilateralNettingOnly";
    TradeClearingInstruction[TradeClearingInstruction["ExClearing"] = 3] = "ExClearing";
    TradeClearingInstruction[TradeClearingInstruction["SpecialTrade"] = 4] = "SpecialTrade";
    TradeClearingInstruction[TradeClearingInstruction["MultilateralNetting"] = 5] = "MultilateralNetting";
    TradeClearingInstruction[TradeClearingInstruction["ClearAgainstCentralCounterparty"] = 6] = "ClearAgainstCentralCounterparty";
    TradeClearingInstruction[TradeClearingInstruction["ExcludeFromCentralCounterparty"] = 7] = "ExcludeFromCentralCounterparty";
    TradeClearingInstruction[TradeClearingInstruction["ManualModePrePostingAndOrPreGiveup"] = 8] = "ManualModePrePostingAndOrPreGiveup";
    TradeClearingInstruction[TradeClearingInstruction["AutomaticPostingModeTradePostingToThePositionAccountNumberSpecified"] = 9] = "AutomaticPostingModeTradePostingToThePositionAccountNumberSpecified";
    TradeClearingInstruction[TradeClearingInstruction["AutomaticGiveUpModeTradeGiveUpToTheGiveUpDestinationNumberSpecified"] = 10] = "AutomaticGiveUpModeTradeGiveUpToTheGiveUpDestinationNumberSpecified";
    TradeClearingInstruction[TradeClearingInstruction["QualifiedServiceRepresentativeQsr"] = 11] = "QualifiedServiceRepresentativeQsr";
    TradeClearingInstruction[TradeClearingInstruction["CustomerTrade"] = 12] = "CustomerTrade";
    TradeClearingInstruction[TradeClearingInstruction["SelfClearing"] = 13] = "SelfClearing";
    TradeClearingInstruction[TradeClearingInstruction["BuyIn"] = 14] = "BuyIn";
})(TradeClearingInstruction = exports.TradeClearingInstruction || (exports.TradeClearingInstruction = {}));
var ConfirmationMethod;
(function (ConfirmationMethod) {
    ConfirmationMethod[ConfirmationMethod["NonElectronic"] = 0] = "NonElectronic";
    ConfirmationMethod[ConfirmationMethod["Electronic"] = 1] = "Electronic";
    ConfirmationMethod[ConfirmationMethod["Unconfirmed"] = 2] = "Unconfirmed";
})(ConfirmationMethod = exports.ConfirmationMethod || (exports.ConfirmationMethod = {}));
var VerificationMethod;
(function (VerificationMethod) {
    VerificationMethod[VerificationMethod["NonElectronic"] = 0] = "NonElectronic";
    VerificationMethod[VerificationMethod["Electronic"] = 1] = "Electronic";
})(VerificationMethod = exports.VerificationMethod || (exports.VerificationMethod = {}));
var ClearingRequirementException;
(function (ClearingRequirementException) {
    ClearingRequirementException[ClearingRequirementException["NoException"] = 0] = "NoException";
    ClearingRequirementException[ClearingRequirementException["Exception"] = 1] = "Exception";
    ClearingRequirementException[ClearingRequirementException["EndUserException"] = 2] = "EndUserException";
    ClearingRequirementException[ClearingRequirementException["InterAffiliateException"] = 3] = "InterAffiliateException";
    ClearingRequirementException[ClearingRequirementException["TreasuryAffiliateException"] = 4] = "TreasuryAffiliateException";
    ClearingRequirementException[ClearingRequirementException["CooperativeException"] = 5] = "CooperativeException";
})(ClearingRequirementException = exports.ClearingRequirementException || (exports.ClearingRequirementException = {}));
var IRSDirection;
(function (IRSDirection) {
    IRSDirection["PrincipalIsPayingFixedRate"] = "PAY";
    IRSDirection["PrincipalIsReceivingFixedRate"] = "RCV";
    IRSDirection["SwapIsFloatFloatOrFixedFixed"] = "NA";
})(IRSDirection = exports.IRSDirection || (exports.IRSDirection = {}));
var RegulatoryReportType;
(function (RegulatoryReportType) {
    RegulatoryReportType[RegulatoryReportType["RealTimeRt"] = 0] = "RealTimeRt";
    RegulatoryReportType[RegulatoryReportType["PrimaryEconomicTermsPet"] = 1] = "PrimaryEconomicTermsPet";
    RegulatoryReportType[RegulatoryReportType["Snapshot"] = 2] = "Snapshot";
    RegulatoryReportType[RegulatoryReportType["Confirmation"] = 3] = "Confirmation";
    RegulatoryReportType[RegulatoryReportType["CombinationOfRtAndPet"] = 4] = "CombinationOfRtAndPet";
    RegulatoryReportType[RegulatoryReportType["CombinationOfPetAndConfirmation"] = 5] = "CombinationOfPetAndConfirmation";
    RegulatoryReportType[RegulatoryReportType["CombinationOfRtPetAndConfirmation"] = 6] = "CombinationOfRtPetAndConfirmation";
    RegulatoryReportType[RegulatoryReportType["PostTradeValuation"] = 7] = "PostTradeValuation";
    RegulatoryReportType[RegulatoryReportType["Verification"] = 8] = "Verification";
    RegulatoryReportType[RegulatoryReportType["PostTradeEvent"] = 9] = "PostTradeEvent";
    RegulatoryReportType[RegulatoryReportType["PostTradeEventRtReportable"] = 10] = "PostTradeEventRtReportable";
    RegulatoryReportType[RegulatoryReportType["LimitedDetailsTrade"] = 11] = "LimitedDetailsTrade";
    RegulatoryReportType[RegulatoryReportType["DailyAggregatedTrade"] = 12] = "DailyAggregatedTrade";
    RegulatoryReportType[RegulatoryReportType["VolumeOmissionTrade"] = 13] = "VolumeOmissionTrade";
    RegulatoryReportType[RegulatoryReportType["FourWeeksAggregationTrade"] = 14] = "FourWeeksAggregationTrade";
    RegulatoryReportType[RegulatoryReportType["IndefiniteAggregationTrade"] = 15] = "IndefiniteAggregationTrade";
    RegulatoryReportType[RegulatoryReportType["VolumeOmissionTradeEligibleForSubsequentAggregatedEnrichment"] = 16] = "VolumeOmissionTradeEligibleForSubsequentAggregatedEnrichment";
    RegulatoryReportType[RegulatoryReportType["FullDetailsTradeOfLimitedDetailsTrade"] = 17] = "FullDetailsTradeOfLimitedDetailsTrade";
    RegulatoryReportType[RegulatoryReportType["FullDetailsOfDailyAggregatedTrade"] = 18] = "FullDetailsOfDailyAggregatedTrade";
    RegulatoryReportType[RegulatoryReportType["FullDetailsOfVolumeOmissionTrade"] = 19] = "FullDetailsOfVolumeOmissionTrade";
    RegulatoryReportType[RegulatoryReportType["FullDetailsOfFourWeeksAggregationTrade"] = 20] = "FullDetailsOfFourWeeksAggregationTrade";
    RegulatoryReportType[RegulatoryReportType["FullDetailsInAggregatedFormOfVolumeOmissionTradeEligibleForSubsequentAggregatedEnrichment"] = 21] = "FullDetailsInAggregatedFormOfVolumeOmissionTradeEligibleForSubsequentAggregatedEnrichment";
})(RegulatoryReportType = exports.RegulatoryReportType || (exports.RegulatoryReportType = {}));
var TradeCollateralization;
(function (TradeCollateralization) {
    TradeCollateralization[TradeCollateralization["Uncollateralized"] = 0] = "Uncollateralized";
    TradeCollateralization[TradeCollateralization["PartiallyCollateralized"] = 1] = "PartiallyCollateralized";
    TradeCollateralization[TradeCollateralization["OneWayCollaterallization"] = 2] = "OneWayCollaterallization";
    TradeCollateralization[TradeCollateralization["FullyCollateralized"] = 3] = "FullyCollateralized";
})(TradeCollateralization = exports.TradeCollateralization || (exports.TradeCollateralization = {}));
var TradeContinuation;
(function (TradeContinuation) {
    TradeContinuation[TradeContinuation["Novation"] = 0] = "Novation";
    TradeContinuation[TradeContinuation["PartialNovation"] = 1] = "PartialNovation";
    TradeContinuation[TradeContinuation["TradeUnwind"] = 2] = "TradeUnwind";
    TradeContinuation[TradeContinuation["PartialTradeUnwind"] = 3] = "PartialTradeUnwind";
    TradeContinuation[TradeContinuation["Exercise"] = 4] = "Exercise";
    TradeContinuation[TradeContinuation["CompressionNetting"] = 5] = "CompressionNetting";
    TradeContinuation[TradeContinuation["FullNetting"] = 6] = "FullNetting";
    TradeContinuation[TradeContinuation["PartialNetting"] = 7] = "PartialNetting";
    TradeContinuation[TradeContinuation["Amendment"] = 8] = "Amendment";
    TradeContinuation[TradeContinuation["Increase"] = 9] = "Increase";
    TradeContinuation[TradeContinuation["CreditEvent"] = 10] = "CreditEvent";
    TradeContinuation[TradeContinuation["StrategicRestructuring"] = 11] = "StrategicRestructuring";
    TradeContinuation[TradeContinuation["SuccessionEventReorganization"] = 12] = "SuccessionEventReorganization";
    TradeContinuation[TradeContinuation["SuccessionEventRenaming"] = 13] = "SuccessionEventRenaming";
    TradeContinuation[TradeContinuation["Porting"] = 14] = "Porting";
    TradeContinuation[TradeContinuation["Withdrawal"] = 15] = "Withdrawal";
    TradeContinuation[TradeContinuation["Void"] = 16] = "Void";
    TradeContinuation[TradeContinuation["AccountTransfer"] = 17] = "AccountTransfer";
    TradeContinuation[TradeContinuation["GiveUp"] = 18] = "GiveUp";
    TradeContinuation[TradeContinuation["TakeUp"] = 19] = "TakeUp";
    TradeContinuation[TradeContinuation["AveragePricing"] = 20] = "AveragePricing";
    TradeContinuation[TradeContinuation["Reversal"] = 21] = "Reversal";
    TradeContinuation[TradeContinuation["AllocationTradePosting"] = 22] = "AllocationTradePosting";
    TradeContinuation[TradeContinuation["Cascade"] = 23] = "Cascade";
    TradeContinuation[TradeContinuation["Delivery"] = 24] = "Delivery";
    TradeContinuation[TradeContinuation["OptionAssignment"] = 25] = "OptionAssignment";
    TradeContinuation[TradeContinuation["Expiration"] = 26] = "Expiration";
    TradeContinuation[TradeContinuation["Maturity"] = 27] = "Maturity";
    TradeContinuation[TradeContinuation["EqualPositionAdjustment"] = 28] = "EqualPositionAdjustment";
    TradeContinuation[TradeContinuation["UnequalPositionAdjustment"] = 29] = "UnequalPositionAdjustment";
    TradeContinuation[TradeContinuation["Correction"] = 30] = "Correction";
    TradeContinuation[TradeContinuation["OtherPriceFormingContinuationData"] = 99] = "OtherPriceFormingContinuationData";
})(TradeContinuation = exports.TradeContinuation || (exports.TradeContinuation = {}));
var AssetClass;
(function (AssetClass) {
    AssetClass[AssetClass["InterestRate"] = 1] = "InterestRate";
    AssetClass[AssetClass["Currency"] = 2] = "Currency";
    AssetClass[AssetClass["Credit"] = 3] = "Credit";
    AssetClass[AssetClass["Equity"] = 4] = "Equity";
    AssetClass[AssetClass["Commodity"] = 5] = "Commodity";
    AssetClass[AssetClass["Other"] = 6] = "Other";
    AssetClass[AssetClass["Cash"] = 7] = "Cash";
    AssetClass[AssetClass["Debt"] = 8] = "Debt";
    AssetClass[AssetClass["Fund"] = 9] = "Fund";
    AssetClass[AssetClass["LoanFacility"] = 10] = "LoanFacility";
})(AssetClass = exports.AssetClass || (exports.AssetClass = {}));
var AssetSubClass;
(function (AssetSubClass) {
    AssetSubClass[AssetSubClass["SingleCurrency"] = 1] = "SingleCurrency";
    AssetSubClass[AssetSubClass["CrossCurrency"] = 2] = "CrossCurrency";
    AssetSubClass[AssetSubClass["BasketForMultiCurrency"] = 3] = "BasketForMultiCurrency";
    AssetSubClass[AssetSubClass["SingleName"] = 4] = "SingleName";
    AssetSubClass[AssetSubClass["CreditIndex"] = 5] = "CreditIndex";
    AssetSubClass[AssetSubClass["IndexTranche"] = 6] = "IndexTranche";
    AssetSubClass[AssetSubClass["CreditBasket"] = 7] = "CreditBasket";
    AssetSubClass[AssetSubClass["Exotic"] = 8] = "Exotic";
    AssetSubClass[AssetSubClass["Common"] = 9] = "Common";
    AssetSubClass[AssetSubClass["Preferred"] = 10] = "Preferred";
    AssetSubClass[AssetSubClass["EquityIndex"] = 11] = "EquityIndex";
    AssetSubClass[AssetSubClass["EquityBasket"] = 12] = "EquityBasket";
    AssetSubClass[AssetSubClass["Metals"] = 13] = "Metals";
    AssetSubClass[AssetSubClass["Bullion"] = 14] = "Bullion";
    AssetSubClass[AssetSubClass["Energy"] = 15] = "Energy";
    AssetSubClass[AssetSubClass["CommodityIndex"] = 16] = "CommodityIndex";
    AssetSubClass[AssetSubClass["Agricultural"] = 17] = "Agricultural";
    AssetSubClass[AssetSubClass["Environmental"] = 18] = "Environmental";
    AssetSubClass[AssetSubClass["Freight"] = 19] = "Freight";
    AssetSubClass[AssetSubClass["Government"] = 20] = "Government";
    AssetSubClass[AssetSubClass["Agency"] = 21] = "Agency";
    AssetSubClass[AssetSubClass["Corporate"] = 22] = "Corporate";
    AssetSubClass[AssetSubClass["Financing"] = 23] = "Financing";
    AssetSubClass[AssetSubClass["MoneyMarket"] = 24] = "MoneyMarket";
    AssetSubClass[AssetSubClass["Mortgage"] = 25] = "Mortgage";
    AssetSubClass[AssetSubClass["Municipal"] = 26] = "Municipal";
    AssetSubClass[AssetSubClass["MutualFund"] = 27] = "MutualFund";
    AssetSubClass[AssetSubClass["CollectiveInvestmentVehicle"] = 28] = "CollectiveInvestmentVehicle";
    AssetSubClass[AssetSubClass["InvestmentProgram"] = 29] = "InvestmentProgram";
    AssetSubClass[AssetSubClass["SpecializedAccountProgram"] = 30] = "SpecializedAccountProgram";
    AssetSubClass[AssetSubClass["TermLoan"] = 31] = "TermLoan";
    AssetSubClass[AssetSubClass["BridgeLoan"] = 32] = "BridgeLoan";
    AssetSubClass[AssetSubClass["LetterOfCredit"] = 33] = "LetterOfCredit";
})(AssetSubClass = exports.AssetSubClass || (exports.AssetSubClass = {}));
var SwapClass;
(function (SwapClass) {
    SwapClass["BasisSwap"] = "BS";
    SwapClass["IndexSwap"] = "IX";
    SwapClass["BroadBasedSecuritySwap"] = "BB";
    SwapClass["BasketSwap"] = "SK";
})(SwapClass = exports.SwapClass || (exports.SwapClass = {}));
var CouponType;
(function (CouponType) {
    CouponType[CouponType["Zero"] = 0] = "Zero";
    CouponType[CouponType["FixedRate"] = 1] = "FixedRate";
    CouponType[CouponType["FloatingRate"] = 2] = "FloatingRate";
    CouponType[CouponType["Structured"] = 3] = "Structured";
})(CouponType = exports.CouponType || (exports.CouponType = {}));
var CouponFrequencyUnit;
(function (CouponFrequencyUnit) {
    CouponFrequencyUnit["Day"] = "D";
    CouponFrequencyUnit["Week"] = "Wk";
    CouponFrequencyUnit["Month"] = "Mo";
    CouponFrequencyUnit["Year"] = "Yr";
    CouponFrequencyUnit["Hour"] = "H";
    CouponFrequencyUnit["Minute"] = "Min";
    CouponFrequencyUnit["Second"] = "S";
    CouponFrequencyUnit["Term"] = "T";
})(CouponFrequencyUnit = exports.CouponFrequencyUnit || (exports.CouponFrequencyUnit = {}));
var CouponDayCount;
(function (CouponDayCount) {
    CouponDayCount[CouponDayCount["E11"] = 0] = "E11";
    CouponDayCount[CouponDayCount["E3036030U360OrBondBasis"] = 1] = "E3036030U360OrBondBasis";
    CouponDayCount[CouponDayCount["E30360Sia"] = 2] = "E30360Sia";
    CouponDayCount[CouponDayCount["E30360M"] = 3] = "E30360M";
    CouponDayCount[CouponDayCount["E30E360EurobondBasis"] = 4] = "E30E360EurobondBasis";
    CouponDayCount[CouponDayCount["E30E360Isda"] = 5] = "E30E360Isda";
    CouponDayCount[CouponDayCount["Act360"] = 6] = "Act360";
    CouponDayCount[CouponDayCount["Act365Fixed"] = 7] = "Act365Fixed";
    CouponDayCount[CouponDayCount["ActActAfb"] = 8] = "ActActAfb";
    CouponDayCount[CouponDayCount["ActActIcma"] = 9] = "ActActIcma";
    CouponDayCount[CouponDayCount["ActActIcsmaUltimo"] = 10] = "ActActIcsmaUltimo";
    CouponDayCount[CouponDayCount["ActActIsda"] = 11] = "ActActIsda";
    CouponDayCount[CouponDayCount["Bus252"] = 12] = "Bus252";
    CouponDayCount[CouponDayCount["E30E360"] = 13] = "E30E360";
    CouponDayCount[CouponDayCount["Act365L"] = 14] = "Act365L";
    CouponDayCount[CouponDayCount["Nl365"] = 15] = "Nl365";
    CouponDayCount[CouponDayCount["Nl360"] = 16] = "Nl360";
    CouponDayCount[CouponDayCount["Act364"] = 17] = "Act364";
})(CouponDayCount = exports.CouponDayCount || (exports.CouponDayCount = {}));
var ConvertibleBondEquityIDSource;
(function (ConvertibleBondEquityIDSource) {
    ConvertibleBondEquityIDSource["Cusip"] = "1";
    ConvertibleBondEquityIDSource["Sedol"] = "2";
    ConvertibleBondEquityIDSource["Quik"] = "3";
    ConvertibleBondEquityIDSource["IsinNumber"] = "4";
    ConvertibleBondEquityIDSource["RicCode"] = "5";
    ConvertibleBondEquityIDSource["IsoCurrencyCode"] = "6";
    ConvertibleBondEquityIDSource["IsoCountryCode"] = "7";
    ConvertibleBondEquityIDSource["ExchangeSymbol"] = "8";
    ConvertibleBondEquityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    ConvertibleBondEquityIDSource["BloombergSymbol"] = "A";
    ConvertibleBondEquityIDSource["Wertpapier"] = "B";
    ConvertibleBondEquityIDSource["Dutch"] = "C";
    ConvertibleBondEquityIDSource["Valoren"] = "D";
    ConvertibleBondEquityIDSource["Sicovam"] = "E";
    ConvertibleBondEquityIDSource["Belgian"] = "F";
    ConvertibleBondEquityIDSource["CommonClearstreamAndEuroclear"] = "G";
    ConvertibleBondEquityIDSource["ClearingHouseClearingOrganization"] = "H";
    ConvertibleBondEquityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    ConvertibleBondEquityIDSource["OptionPriceReportingAuthority"] = "J";
    ConvertibleBondEquityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    ConvertibleBondEquityIDSource["LetterOfCredit"] = "L";
    ConvertibleBondEquityIDSource["MarketplaceAssignedIdentifier"] = "M";
    ConvertibleBondEquityIDSource["MarkitRedEntityClip"] = "N";
    ConvertibleBondEquityIDSource["MarkitRedPairClip"] = "P";
    ConvertibleBondEquityIDSource["CftcCommodityCode"] = "Q";
    ConvertibleBondEquityIDSource["IsdaCommodityReferencePrice"] = "R";
    ConvertibleBondEquityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    ConvertibleBondEquityIDSource["LegalEntityIdentifier"] = "T";
    ConvertibleBondEquityIDSource["Synthetic"] = "U";
    ConvertibleBondEquityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(ConvertibleBondEquityIDSource = exports.ConvertibleBondEquityIDSource || (exports.ConvertibleBondEquityIDSource = {}));
var LienSeniority;
(function (LienSeniority) {
    LienSeniority[LienSeniority["Unknown"] = 0] = "Unknown";
    LienSeniority[LienSeniority["FirstLien"] = 1] = "FirstLien";
    LienSeniority[LienSeniority["SecondLien"] = 2] = "SecondLien";
    LienSeniority[LienSeniority["ThirdLien"] = 3] = "ThirdLien";
})(LienSeniority = exports.LienSeniority || (exports.LienSeniority = {}));
var LoanFacility;
(function (LoanFacility) {
    LoanFacility[LoanFacility["BridgeLoan"] = 0] = "BridgeLoan";
    LoanFacility[LoanFacility["LetterOfCredit"] = 1] = "LetterOfCredit";
    LoanFacility[LoanFacility["RevolvingLoan"] = 2] = "RevolvingLoan";
    LoanFacility[LoanFacility["SwinglineFunding"] = 3] = "SwinglineFunding";
    LoanFacility[LoanFacility["TermLoan"] = 4] = "TermLoan";
    LoanFacility[LoanFacility["TradeClaim"] = 5] = "TradeClaim";
})(LoanFacility = exports.LoanFacility || (exports.LoanFacility = {}));
var ReferenceEntityType;
(function (ReferenceEntityType) {
    ReferenceEntityType[ReferenceEntityType["Asian"] = 1] = "Asian";
    ReferenceEntityType[ReferenceEntityType["AustralianAndNewZealand"] = 2] = "AustralianAndNewZealand";
    ReferenceEntityType[ReferenceEntityType["EuropeanEmergingMarkets"] = 3] = "EuropeanEmergingMarkets";
    ReferenceEntityType[ReferenceEntityType["Japanese"] = 4] = "Japanese";
    ReferenceEntityType[ReferenceEntityType["NorthAmericanHighYield"] = 5] = "NorthAmericanHighYield";
    ReferenceEntityType[ReferenceEntityType["NorthAmericanInsurance"] = 6] = "NorthAmericanInsurance";
    ReferenceEntityType[ReferenceEntityType["NorthAmericanInvestmentGrade"] = 7] = "NorthAmericanInvestmentGrade";
    ReferenceEntityType[ReferenceEntityType["Singaporean"] = 8] = "Singaporean";
    ReferenceEntityType[ReferenceEntityType["WesternEuropean"] = 9] = "WesternEuropean";
    ReferenceEntityType[ReferenceEntityType["WesternEuropeanInsurance"] = 10] = "WesternEuropeanInsurance";
})(ReferenceEntityType = exports.ReferenceEntityType || (exports.ReferenceEntityType = {}));
var SideRegulatoryTradeIDEvent;
(function (SideRegulatoryTradeIDEvent) {
    SideRegulatoryTradeIDEvent[SideRegulatoryTradeIDEvent["InitialBlockTrade"] = 0] = "InitialBlockTrade";
    SideRegulatoryTradeIDEvent[SideRegulatoryTradeIDEvent["Allocation"] = 1] = "Allocation";
    SideRegulatoryTradeIDEvent[SideRegulatoryTradeIDEvent["Clearing"] = 2] = "Clearing";
    SideRegulatoryTradeIDEvent[SideRegulatoryTradeIDEvent["Compression"] = 3] = "Compression";
    SideRegulatoryTradeIDEvent[SideRegulatoryTradeIDEvent["Novation"] = 4] = "Novation";
    SideRegulatoryTradeIDEvent[SideRegulatoryTradeIDEvent["Termination"] = 5] = "Termination";
    SideRegulatoryTradeIDEvent[SideRegulatoryTradeIDEvent["PostTradeValuation"] = 6] = "PostTradeValuation";
})(SideRegulatoryTradeIDEvent = exports.SideRegulatoryTradeIDEvent || (exports.SideRegulatoryTradeIDEvent = {}));
var SideRegulatoryTradeIDType;
(function (SideRegulatoryTradeIDType) {
    SideRegulatoryTradeIDType[SideRegulatoryTradeIDType["Current"] = 0] = "Current";
    SideRegulatoryTradeIDType[SideRegulatoryTradeIDType["Previous"] = 1] = "Previous";
    SideRegulatoryTradeIDType[SideRegulatoryTradeIDType["Block"] = 2] = "Block";
    SideRegulatoryTradeIDType[SideRegulatoryTradeIDType["Related"] = 3] = "Related";
    SideRegulatoryTradeIDType[SideRegulatoryTradeIDType["ClearedBlockTrade"] = 4] = "ClearedBlockTrade";
    SideRegulatoryTradeIDType[SideRegulatoryTradeIDType["TradingVenueTransactionIdentifier"] = 5] = "TradingVenueTransactionIdentifier";
})(SideRegulatoryTradeIDType = exports.SideRegulatoryTradeIDType || (exports.SideRegulatoryTradeIDType = {}));
var SecondaryAssetClass;
(function (SecondaryAssetClass) {
    SecondaryAssetClass[SecondaryAssetClass["InterestRate"] = 1] = "InterestRate";
    SecondaryAssetClass[SecondaryAssetClass["Currency"] = 2] = "Currency";
    SecondaryAssetClass[SecondaryAssetClass["Credit"] = 3] = "Credit";
    SecondaryAssetClass[SecondaryAssetClass["Equity"] = 4] = "Equity";
    SecondaryAssetClass[SecondaryAssetClass["Commodity"] = 5] = "Commodity";
    SecondaryAssetClass[SecondaryAssetClass["Other"] = 6] = "Other";
    SecondaryAssetClass[SecondaryAssetClass["Cash"] = 7] = "Cash";
    SecondaryAssetClass[SecondaryAssetClass["Debt"] = 8] = "Debt";
    SecondaryAssetClass[SecondaryAssetClass["Fund"] = 9] = "Fund";
    SecondaryAssetClass[SecondaryAssetClass["LoanFacility"] = 10] = "LoanFacility";
})(SecondaryAssetClass = exports.SecondaryAssetClass || (exports.SecondaryAssetClass = {}));
var SecondaryAssetSubClass;
(function (SecondaryAssetSubClass) {
    SecondaryAssetSubClass[SecondaryAssetSubClass["SingleCurrency"] = 1] = "SingleCurrency";
    SecondaryAssetSubClass[SecondaryAssetSubClass["CrossCurrency"] = 2] = "CrossCurrency";
    SecondaryAssetSubClass[SecondaryAssetSubClass["BasketForMultiCurrency"] = 3] = "BasketForMultiCurrency";
    SecondaryAssetSubClass[SecondaryAssetSubClass["SingleName"] = 4] = "SingleName";
    SecondaryAssetSubClass[SecondaryAssetSubClass["CreditIndex"] = 5] = "CreditIndex";
    SecondaryAssetSubClass[SecondaryAssetSubClass["IndexTranche"] = 6] = "IndexTranche";
    SecondaryAssetSubClass[SecondaryAssetSubClass["CreditBasket"] = 7] = "CreditBasket";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Exotic"] = 8] = "Exotic";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Common"] = 9] = "Common";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Preferred"] = 10] = "Preferred";
    SecondaryAssetSubClass[SecondaryAssetSubClass["EquityIndex"] = 11] = "EquityIndex";
    SecondaryAssetSubClass[SecondaryAssetSubClass["EquityBasket"] = 12] = "EquityBasket";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Metals"] = 13] = "Metals";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Bullion"] = 14] = "Bullion";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Energy"] = 15] = "Energy";
    SecondaryAssetSubClass[SecondaryAssetSubClass["CommodityIndex"] = 16] = "CommodityIndex";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Agricultural"] = 17] = "Agricultural";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Environmental"] = 18] = "Environmental";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Freight"] = 19] = "Freight";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Government"] = 20] = "Government";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Agency"] = 21] = "Agency";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Corporate"] = 22] = "Corporate";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Financing"] = 23] = "Financing";
    SecondaryAssetSubClass[SecondaryAssetSubClass["MoneyMarket"] = 24] = "MoneyMarket";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Mortgage"] = 25] = "Mortgage";
    SecondaryAssetSubClass[SecondaryAssetSubClass["Municipal"] = 26] = "Municipal";
    SecondaryAssetSubClass[SecondaryAssetSubClass["MutualFund"] = 27] = "MutualFund";
    SecondaryAssetSubClass[SecondaryAssetSubClass["CollectiveInvestmentVehicle"] = 28] = "CollectiveInvestmentVehicle";
    SecondaryAssetSubClass[SecondaryAssetSubClass["InvestmentProgram"] = 29] = "InvestmentProgram";
    SecondaryAssetSubClass[SecondaryAssetSubClass["SpecializedAccountProgram"] = 30] = "SpecializedAccountProgram";
    SecondaryAssetSubClass[SecondaryAssetSubClass["TermLoan"] = 31] = "TermLoan";
    SecondaryAssetSubClass[SecondaryAssetSubClass["BridgeLoan"] = 32] = "BridgeLoan";
    SecondaryAssetSubClass[SecondaryAssetSubClass["LetterOfCredit"] = 33] = "LetterOfCredit";
})(SecondaryAssetSubClass = exports.SecondaryAssetSubClass || (exports.SecondaryAssetSubClass = {}));
var BlockTrdAllocIndicator;
(function (BlockTrdAllocIndicator) {
    BlockTrdAllocIndicator[BlockTrdAllocIndicator["BlockToBeAllocated"] = 0] = "BlockToBeAllocated";
    BlockTrdAllocIndicator[BlockTrdAllocIndicator["BlockNotToBeAllocated"] = 1] = "BlockNotToBeAllocated";
    BlockTrdAllocIndicator[BlockTrdAllocIndicator["AllocatedTrade"] = 2] = "AllocatedTrade";
})(BlockTrdAllocIndicator = exports.BlockTrdAllocIndicator || (exports.BlockTrdAllocIndicator = {}));
var UnderlyingEventType;
(function (UnderlyingEventType) {
    UnderlyingEventType[UnderlyingEventType["Put"] = 1] = "Put";
    UnderlyingEventType[UnderlyingEventType["Call"] = 2] = "Call";
    UnderlyingEventType[UnderlyingEventType["Tender"] = 3] = "Tender";
    UnderlyingEventType[UnderlyingEventType["SinkingFundCall"] = 4] = "SinkingFundCall";
    UnderlyingEventType[UnderlyingEventType["Activation"] = 5] = "Activation";
    UnderlyingEventType[UnderlyingEventType["Inactivation"] = 6] = "Inactivation";
    UnderlyingEventType[UnderlyingEventType["LastEligibleTradeDate"] = 7] = "LastEligibleTradeDate";
    UnderlyingEventType[UnderlyingEventType["SwapStartDate"] = 8] = "SwapStartDate";
    UnderlyingEventType[UnderlyingEventType["SwapEndDate"] = 9] = "SwapEndDate";
    UnderlyingEventType[UnderlyingEventType["SwapRollDate"] = 10] = "SwapRollDate";
    UnderlyingEventType[UnderlyingEventType["SwapNextStartDate"] = 11] = "SwapNextStartDate";
    UnderlyingEventType[UnderlyingEventType["SwapNextRollDate"] = 12] = "SwapNextRollDate";
    UnderlyingEventType[UnderlyingEventType["FirstDeliveryDate"] = 13] = "FirstDeliveryDate";
    UnderlyingEventType[UnderlyingEventType["LastDeliveryDate"] = 14] = "LastDeliveryDate";
    UnderlyingEventType[UnderlyingEventType["InitialInventoryDueDate"] = 15] = "InitialInventoryDueDate";
    UnderlyingEventType[UnderlyingEventType["FinalInventoryDueDate"] = 16] = "FinalInventoryDueDate";
    UnderlyingEventType[UnderlyingEventType["FirstIntentDate"] = 17] = "FirstIntentDate";
    UnderlyingEventType[UnderlyingEventType["LastIntentDate"] = 18] = "LastIntentDate";
    UnderlyingEventType[UnderlyingEventType["PositionRemovalDate"] = 19] = "PositionRemovalDate";
    UnderlyingEventType[UnderlyingEventType["MinimumNotice"] = 20] = "MinimumNotice";
    UnderlyingEventType[UnderlyingEventType["DeliveryStartTime"] = 21] = "DeliveryStartTime";
    UnderlyingEventType[UnderlyingEventType["DeliveryEndTime"] = 22] = "DeliveryEndTime";
    UnderlyingEventType[UnderlyingEventType["FirstNoticeDate"] = 23] = "FirstNoticeDate";
    UnderlyingEventType[UnderlyingEventType["LastNoticeDate"] = 24] = "LastNoticeDate";
    UnderlyingEventType[UnderlyingEventType["FirstExerciseDate"] = 25] = "FirstExerciseDate";
    UnderlyingEventType[UnderlyingEventType["RedemptionDate"] = 26] = "RedemptionDate";
    UnderlyingEventType[UnderlyingEventType["TradeContinuationEffectiveDate"] = 27] = "TradeContinuationEffectiveDate";
    UnderlyingEventType[UnderlyingEventType["Other"] = 99] = "Other";
})(UnderlyingEventType = exports.UnderlyingEventType || (exports.UnderlyingEventType = {}));
var UnderlyingCouponType;
(function (UnderlyingCouponType) {
    UnderlyingCouponType[UnderlyingCouponType["Zero"] = 0] = "Zero";
    UnderlyingCouponType[UnderlyingCouponType["FixedRate"] = 1] = "FixedRate";
    UnderlyingCouponType[UnderlyingCouponType["FloatingRate"] = 2] = "FloatingRate";
    UnderlyingCouponType[UnderlyingCouponType["Structured"] = 3] = "Structured";
})(UnderlyingCouponType = exports.UnderlyingCouponType || (exports.UnderlyingCouponType = {}));
var UnderlyingCouponFrequencyUnit;
(function (UnderlyingCouponFrequencyUnit) {
    UnderlyingCouponFrequencyUnit["Day"] = "D";
    UnderlyingCouponFrequencyUnit["Week"] = "Wk";
    UnderlyingCouponFrequencyUnit["Month"] = "Mo";
    UnderlyingCouponFrequencyUnit["Year"] = "Yr";
    UnderlyingCouponFrequencyUnit["Hour"] = "H";
    UnderlyingCouponFrequencyUnit["Minute"] = "Min";
    UnderlyingCouponFrequencyUnit["Second"] = "S";
    UnderlyingCouponFrequencyUnit["Term"] = "T";
})(UnderlyingCouponFrequencyUnit = exports.UnderlyingCouponFrequencyUnit || (exports.UnderlyingCouponFrequencyUnit = {}));
var UnderlyingCouponDayCount;
(function (UnderlyingCouponDayCount) {
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["E11"] = 0] = "E11";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["E3036030U360OrBondBasis"] = 1] = "E3036030U360OrBondBasis";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["E30360Sia"] = 2] = "E30360Sia";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["E30360M"] = 3] = "E30360M";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["E30E360EurobondBasis"] = 4] = "E30E360EurobondBasis";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["E30E360Isda"] = 5] = "E30E360Isda";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["Act360"] = 6] = "Act360";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["Act365Fixed"] = 7] = "Act365Fixed";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["ActActAfb"] = 8] = "ActActAfb";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["ActActIcma"] = 9] = "ActActIcma";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["ActActIcsmaUltimo"] = 10] = "ActActIcsmaUltimo";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["ActActIsda"] = 11] = "ActActIsda";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["Bus252"] = 12] = "Bus252";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["E30E360"] = 13] = "E30E360";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["Act365L"] = 14] = "Act365L";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["Nl365"] = 15] = "Nl365";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["Nl360"] = 16] = "Nl360";
    UnderlyingCouponDayCount[UnderlyingCouponDayCount["Act364"] = 17] = "Act364";
})(UnderlyingCouponDayCount = exports.UnderlyingCouponDayCount || (exports.UnderlyingCouponDayCount = {}));
var UnderlyingObligationIDSource;
(function (UnderlyingObligationIDSource) {
    UnderlyingObligationIDSource["Cusip"] = "1";
    UnderlyingObligationIDSource["Sedol"] = "2";
    UnderlyingObligationIDSource["Quik"] = "3";
    UnderlyingObligationIDSource["IsinNumber"] = "4";
    UnderlyingObligationIDSource["RicCode"] = "5";
    UnderlyingObligationIDSource["IsoCurrencyCode"] = "6";
    UnderlyingObligationIDSource["IsoCountryCode"] = "7";
    UnderlyingObligationIDSource["ExchangeSymbol"] = "8";
    UnderlyingObligationIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    UnderlyingObligationIDSource["BloombergSymbol"] = "A";
    UnderlyingObligationIDSource["Wertpapier"] = "B";
    UnderlyingObligationIDSource["Dutch"] = "C";
    UnderlyingObligationIDSource["Valoren"] = "D";
    UnderlyingObligationIDSource["Sicovam"] = "E";
    UnderlyingObligationIDSource["Belgian"] = "F";
    UnderlyingObligationIDSource["CommonClearstreamAndEuroclear"] = "G";
    UnderlyingObligationIDSource["ClearingHouseClearingOrganization"] = "H";
    UnderlyingObligationIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    UnderlyingObligationIDSource["OptionPriceReportingAuthority"] = "J";
    UnderlyingObligationIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    UnderlyingObligationIDSource["LetterOfCredit"] = "L";
    UnderlyingObligationIDSource["MarketplaceAssignedIdentifier"] = "M";
    UnderlyingObligationIDSource["MarkitRedEntityClip"] = "N";
    UnderlyingObligationIDSource["MarkitRedPairClip"] = "P";
    UnderlyingObligationIDSource["CftcCommodityCode"] = "Q";
    UnderlyingObligationIDSource["IsdaCommodityReferencePrice"] = "R";
    UnderlyingObligationIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    UnderlyingObligationIDSource["LegalEntityIdentifier"] = "T";
    UnderlyingObligationIDSource["Synthetic"] = "U";
    UnderlyingObligationIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(UnderlyingObligationIDSource = exports.UnderlyingObligationIDSource || (exports.UnderlyingObligationIDSource = {}));
var UnderlyingEquityIDSource;
(function (UnderlyingEquityIDSource) {
    UnderlyingEquityIDSource["Cusip"] = "1";
    UnderlyingEquityIDSource["Sedol"] = "2";
    UnderlyingEquityIDSource["Quik"] = "3";
    UnderlyingEquityIDSource["IsinNumber"] = "4";
    UnderlyingEquityIDSource["RicCode"] = "5";
    UnderlyingEquityIDSource["IsoCurrencyCode"] = "6";
    UnderlyingEquityIDSource["IsoCountryCode"] = "7";
    UnderlyingEquityIDSource["ExchangeSymbol"] = "8";
    UnderlyingEquityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    UnderlyingEquityIDSource["BloombergSymbol"] = "A";
    UnderlyingEquityIDSource["Wertpapier"] = "B";
    UnderlyingEquityIDSource["Dutch"] = "C";
    UnderlyingEquityIDSource["Valoren"] = "D";
    UnderlyingEquityIDSource["Sicovam"] = "E";
    UnderlyingEquityIDSource["Belgian"] = "F";
    UnderlyingEquityIDSource["CommonClearstreamAndEuroclear"] = "G";
    UnderlyingEquityIDSource["ClearingHouseClearingOrganization"] = "H";
    UnderlyingEquityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    UnderlyingEquityIDSource["OptionPriceReportingAuthority"] = "J";
    UnderlyingEquityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    UnderlyingEquityIDSource["LetterOfCredit"] = "L";
    UnderlyingEquityIDSource["MarketplaceAssignedIdentifier"] = "M";
    UnderlyingEquityIDSource["MarkitRedEntityClip"] = "N";
    UnderlyingEquityIDSource["MarkitRedPairClip"] = "P";
    UnderlyingEquityIDSource["CftcCommodityCode"] = "Q";
    UnderlyingEquityIDSource["IsdaCommodityReferencePrice"] = "R";
    UnderlyingEquityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    UnderlyingEquityIDSource["LegalEntityIdentifier"] = "T";
    UnderlyingEquityIDSource["Synthetic"] = "U";
    UnderlyingEquityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(UnderlyingEquityIDSource = exports.UnderlyingEquityIDSource || (exports.UnderlyingEquityIDSource = {}));
var UnderlyingLienSeniority;
(function (UnderlyingLienSeniority) {
    UnderlyingLienSeniority[UnderlyingLienSeniority["Unknown"] = 0] = "Unknown";
    UnderlyingLienSeniority[UnderlyingLienSeniority["FirstLien"] = 1] = "FirstLien";
    UnderlyingLienSeniority[UnderlyingLienSeniority["SecondLien"] = 2] = "SecondLien";
    UnderlyingLienSeniority[UnderlyingLienSeniority["ThirdLien"] = 3] = "ThirdLien";
})(UnderlyingLienSeniority = exports.UnderlyingLienSeniority || (exports.UnderlyingLienSeniority = {}));
var UnderlyingLoanFacility;
(function (UnderlyingLoanFacility) {
    UnderlyingLoanFacility[UnderlyingLoanFacility["BridgeLoan"] = 0] = "BridgeLoan";
    UnderlyingLoanFacility[UnderlyingLoanFacility["LetterOfCredit"] = 1] = "LetterOfCredit";
    UnderlyingLoanFacility[UnderlyingLoanFacility["RevolvingLoan"] = 2] = "RevolvingLoan";
    UnderlyingLoanFacility[UnderlyingLoanFacility["SwinglineFunding"] = 3] = "SwinglineFunding";
    UnderlyingLoanFacility[UnderlyingLoanFacility["TermLoan"] = 4] = "TermLoan";
    UnderlyingLoanFacility[UnderlyingLoanFacility["TradeClaim"] = 5] = "TradeClaim";
})(UnderlyingLoanFacility = exports.UnderlyingLoanFacility || (exports.UnderlyingLoanFacility = {}));
var UnderlyingReferenceEntityType;
(function (UnderlyingReferenceEntityType) {
    UnderlyingReferenceEntityType[UnderlyingReferenceEntityType["Asian"] = 1] = "Asian";
    UnderlyingReferenceEntityType[UnderlyingReferenceEntityType["AustralianAndNewZealand"] = 2] = "AustralianAndNewZealand";
    UnderlyingReferenceEntityType[UnderlyingReferenceEntityType["EuropeanEmergingMarkets"] = 3] = "EuropeanEmergingMarkets";
    UnderlyingReferenceEntityType[UnderlyingReferenceEntityType["Japanese"] = 4] = "Japanese";
    UnderlyingReferenceEntityType[UnderlyingReferenceEntityType["NorthAmericanHighYield"] = 5] = "NorthAmericanHighYield";
    UnderlyingReferenceEntityType[UnderlyingReferenceEntityType["NorthAmericanInsurance"] = 6] = "NorthAmericanInsurance";
    UnderlyingReferenceEntityType[UnderlyingReferenceEntityType["NorthAmericanInvestmentGrade"] = 7] = "NorthAmericanInvestmentGrade";
    UnderlyingReferenceEntityType[UnderlyingReferenceEntityType["Singaporean"] = 8] = "Singaporean";
    UnderlyingReferenceEntityType[UnderlyingReferenceEntityType["WesternEuropean"] = 9] = "WesternEuropean";
    UnderlyingReferenceEntityType[UnderlyingReferenceEntityType["WesternEuropeanInsurance"] = 10] = "WesternEuropeanInsurance";
})(UnderlyingReferenceEntityType = exports.UnderlyingReferenceEntityType || (exports.UnderlyingReferenceEntityType = {}));
var UnderlyingAssignmentMethod;
(function (UnderlyingAssignmentMethod) {
    UnderlyingAssignmentMethod["ProRata"] = "P";
    UnderlyingAssignmentMethod["Random"] = "R";
})(UnderlyingAssignmentMethod = exports.UnderlyingAssignmentMethod || (exports.UnderlyingAssignmentMethod = {}));
var UnderlyingSecurityStatus;
(function (UnderlyingSecurityStatus) {
    UnderlyingSecurityStatus["Active"] = "1";
    UnderlyingSecurityStatus["Inactive"] = "2";
    UnderlyingSecurityStatus["ActiveClosingOrdersOnly"] = "3";
    UnderlyingSecurityStatus["Expired"] = "4";
    UnderlyingSecurityStatus["Delisted"] = "5";
    UnderlyingSecurityStatus["KnockedOut"] = "6";
    UnderlyingSecurityStatus["KnockOutRevoked"] = "7";
    UnderlyingSecurityStatus["PendingExpiry"] = "8";
    UnderlyingSecurityStatus["Suspended"] = "9";
    UnderlyingSecurityStatus["Published"] = "10";
    UnderlyingSecurityStatus["PendingDeletion"] = "11";
})(UnderlyingSecurityStatus = exports.UnderlyingSecurityStatus || (exports.UnderlyingSecurityStatus = {}));
var UnderlyingObligationType;
(function (UnderlyingObligationType) {
    UnderlyingObligationType["Bond"] = "0";
    UnderlyingObligationType["ConvertibleBond"] = "1";
    UnderlyingObligationType["Mortgage"] = "2";
    UnderlyingObligationType["Loan"] = "3";
})(UnderlyingObligationType = exports.UnderlyingObligationType || (exports.UnderlyingObligationType = {}));
var UnderlyingAssetClass;
(function (UnderlyingAssetClass) {
    UnderlyingAssetClass[UnderlyingAssetClass["InterestRate"] = 1] = "InterestRate";
    UnderlyingAssetClass[UnderlyingAssetClass["Currency"] = 2] = "Currency";
    UnderlyingAssetClass[UnderlyingAssetClass["Credit"] = 3] = "Credit";
    UnderlyingAssetClass[UnderlyingAssetClass["Equity"] = 4] = "Equity";
    UnderlyingAssetClass[UnderlyingAssetClass["Commodity"] = 5] = "Commodity";
    UnderlyingAssetClass[UnderlyingAssetClass["Other"] = 6] = "Other";
    UnderlyingAssetClass[UnderlyingAssetClass["Cash"] = 7] = "Cash";
    UnderlyingAssetClass[UnderlyingAssetClass["Debt"] = 8] = "Debt";
    UnderlyingAssetClass[UnderlyingAssetClass["Fund"] = 9] = "Fund";
    UnderlyingAssetClass[UnderlyingAssetClass["LoanFacility"] = 10] = "LoanFacility";
})(UnderlyingAssetClass = exports.UnderlyingAssetClass || (exports.UnderlyingAssetClass = {}));
var UnderlyingAssetSubClass;
(function (UnderlyingAssetSubClass) {
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["SingleCurrency"] = 1] = "SingleCurrency";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["CrossCurrency"] = 2] = "CrossCurrency";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["BasketForMultiCurrency"] = 3] = "BasketForMultiCurrency";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["SingleName"] = 4] = "SingleName";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["CreditIndex"] = 5] = "CreditIndex";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["IndexTranche"] = 6] = "IndexTranche";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["CreditBasket"] = 7] = "CreditBasket";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Exotic"] = 8] = "Exotic";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Common"] = 9] = "Common";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Preferred"] = 10] = "Preferred";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["EquityIndex"] = 11] = "EquityIndex";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["EquityBasket"] = 12] = "EquityBasket";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Metals"] = 13] = "Metals";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Bullion"] = 14] = "Bullion";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Energy"] = 15] = "Energy";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["CommodityIndex"] = 16] = "CommodityIndex";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Agricultural"] = 17] = "Agricultural";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Environmental"] = 18] = "Environmental";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Freight"] = 19] = "Freight";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Government"] = 20] = "Government";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Agency"] = 21] = "Agency";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Corporate"] = 22] = "Corporate";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Financing"] = 23] = "Financing";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["MoneyMarket"] = 24] = "MoneyMarket";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Mortgage"] = 25] = "Mortgage";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["Municipal"] = 26] = "Municipal";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["MutualFund"] = 27] = "MutualFund";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["CollectiveInvestmentVehicle"] = 28] = "CollectiveInvestmentVehicle";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["InvestmentProgram"] = 29] = "InvestmentProgram";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["SpecializedAccountProgram"] = 30] = "SpecializedAccountProgram";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["TermLoan"] = 31] = "TermLoan";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["BridgeLoan"] = 32] = "BridgeLoan";
    UnderlyingAssetSubClass[UnderlyingAssetSubClass["LetterOfCredit"] = 33] = "LetterOfCredit";
})(UnderlyingAssetSubClass = exports.UnderlyingAssetSubClass || (exports.UnderlyingAssetSubClass = {}));
var UnderlyingSwapClass;
(function (UnderlyingSwapClass) {
    UnderlyingSwapClass["BasisSwap"] = "BS";
    UnderlyingSwapClass["IndexSwap"] = "IX";
    UnderlyingSwapClass["BroadBasedSecuritySwap"] = "BB";
    UnderlyingSwapClass["BasketSwap"] = "SK";
})(UnderlyingSwapClass = exports.UnderlyingSwapClass || (exports.UnderlyingSwapClass = {}));
var UnderlyingStrikePriceDeterminationMethod;
(function (UnderlyingStrikePriceDeterminationMethod) {
    UnderlyingStrikePriceDeterminationMethod[UnderlyingStrikePriceDeterminationMethod["FixedStrikeDefaultIfNotSpecified"] = 1] = "FixedStrikeDefaultIfNotSpecified";
    UnderlyingStrikePriceDeterminationMethod[UnderlyingStrikePriceDeterminationMethod["StrikeSetAtExpirationToUnderlyingOrOtherValueLookbackFloating"] = 2] = "StrikeSetAtExpirationToUnderlyingOrOtherValueLookbackFloating";
    UnderlyingStrikePriceDeterminationMethod[UnderlyingStrikePriceDeterminationMethod["StrikeSetToAverageOfUnderlyingSettlementPriceAcrossTheLifeOfTheOption"] = 3] = "StrikeSetToAverageOfUnderlyingSettlementPriceAcrossTheLifeOfTheOption";
    UnderlyingStrikePriceDeterminationMethod[UnderlyingStrikePriceDeterminationMethod["StrikeSetToOptimalValue"] = 4] = "StrikeSetToOptimalValue";
})(UnderlyingStrikePriceDeterminationMethod = exports.UnderlyingStrikePriceDeterminationMethod || (exports.UnderlyingStrikePriceDeterminationMethod = {}));
var UnderlyingStrikePriceBoundaryMethod;
(function (UnderlyingStrikePriceBoundaryMethod) {
    UnderlyingStrikePriceBoundaryMethod[UnderlyingStrikePriceBoundaryMethod["LessThanUnderlyingPriceIsInTheMoneyItm"] = 1] = "LessThanUnderlyingPriceIsInTheMoneyItm";
    UnderlyingStrikePriceBoundaryMethod[UnderlyingStrikePriceBoundaryMethod["LessThanOrEqualToTheUnderlyingPriceIsInTheMoneyItm"] = 2] = "LessThanOrEqualToTheUnderlyingPriceIsInTheMoneyItm";
    UnderlyingStrikePriceBoundaryMethod[UnderlyingStrikePriceBoundaryMethod["EqualToTheUnderlyingPriceIsInTheMoneyItm"] = 3] = "EqualToTheUnderlyingPriceIsInTheMoneyItm";
    UnderlyingStrikePriceBoundaryMethod[UnderlyingStrikePriceBoundaryMethod["GreaterThanOrEqualToUnderlyingPriceIsInTheMoneyItm"] = 4] = "GreaterThanOrEqualToUnderlyingPriceIsInTheMoneyItm";
    UnderlyingStrikePriceBoundaryMethod[UnderlyingStrikePriceBoundaryMethod["GreaterThanUnderlyingIsInTheMoneyItm"] = 5] = "GreaterThanUnderlyingIsInTheMoneyItm";
})(UnderlyingStrikePriceBoundaryMethod = exports.UnderlyingStrikePriceBoundaryMethod || (exports.UnderlyingStrikePriceBoundaryMethod = {}));
var UnderlyingOptPayoutType;
(function (UnderlyingOptPayoutType) {
    UnderlyingOptPayoutType[UnderlyingOptPayoutType["Vanilla"] = 1] = "Vanilla";
    UnderlyingOptPayoutType[UnderlyingOptPayoutType["Capped"] = 2] = "Capped";
    UnderlyingOptPayoutType[UnderlyingOptPayoutType["Binary"] = 3] = "Binary";
})(UnderlyingOptPayoutType = exports.UnderlyingOptPayoutType || (exports.UnderlyingOptPayoutType = {}));
var UnderlyingPriceQuoteMethod;
(function (UnderlyingPriceQuoteMethod) {
    UnderlyingPriceQuoteMethod["StandardMoneyPerUnitOfAPhysical"] = "STD";
    UnderlyingPriceQuoteMethod["Index"] = "INX";
    UnderlyingPriceQuoteMethod["InterestRateIndex"] = "INT";
    UnderlyingPriceQuoteMethod["PercentOfPar"] = "PCTPAR";
})(UnderlyingPriceQuoteMethod = exports.UnderlyingPriceQuoteMethod || (exports.UnderlyingPriceQuoteMethod = {}));
var UnderlyingValuationMethod;
(function (UnderlyingValuationMethod) {
    UnderlyingValuationMethod["PremiumStyle"] = "EQTY";
    UnderlyingValuationMethod["FuturesStyleMarkToMarket"] = "FUT";
    UnderlyingValuationMethod["FuturesStyleWithAnAttachedCashAdjustment"] = "FUTDA";
    UnderlyingValuationMethod["CdsStyleCollateralizationOfMarketToMarketAndCoupon"] = "CDS";
    UnderlyingValuationMethod["CdsInDeliveryUseRecoveryRateToCalculateObligation"] = "CDSD";
})(UnderlyingValuationMethod = exports.UnderlyingValuationMethod || (exports.UnderlyingValuationMethod = {}));
var UnderlyingListMethod;
(function (UnderlyingListMethod) {
    UnderlyingListMethod[UnderlyingListMethod["PreListedOnly"] = 0] = "PreListedOnly";
    UnderlyingListMethod[UnderlyingListMethod["UserRequested"] = 1] = "UserRequested";
})(UnderlyingListMethod = exports.UnderlyingListMethod || (exports.UnderlyingListMethod = {}));
var UnderlyingShortSaleRestriction;
(function (UnderlyingShortSaleRestriction) {
    UnderlyingShortSaleRestriction[UnderlyingShortSaleRestriction["NoRestrictions"] = 0] = "NoRestrictions";
    UnderlyingShortSaleRestriction[UnderlyingShortSaleRestriction["SecurityIsNotShortable"] = 1] = "SecurityIsNotShortable";
    UnderlyingShortSaleRestriction[UnderlyingShortSaleRestriction["SecurityNotShortableAtOrBelowTheBestBid"] = 2] = "SecurityNotShortableAtOrBelowTheBestBid";
    UnderlyingShortSaleRestriction[UnderlyingShortSaleRestriction["SecurityIsNotShortableWithoutPreBorrow"] = 3] = "SecurityIsNotShortableWithoutPreBorrow";
})(UnderlyingShortSaleRestriction = exports.UnderlyingShortSaleRestriction || (exports.UnderlyingShortSaleRestriction = {}));
var UnderlyingComplexEventType;
(function (UnderlyingComplexEventType) {
    UnderlyingComplexEventType[UnderlyingComplexEventType["Capped"] = 1] = "Capped";
    UnderlyingComplexEventType[UnderlyingComplexEventType["Trigger"] = 2] = "Trigger";
    UnderlyingComplexEventType[UnderlyingComplexEventType["KnockInUp"] = 3] = "KnockInUp";
    UnderlyingComplexEventType[UnderlyingComplexEventType["KnockInDown"] = 4] = "KnockInDown";
    UnderlyingComplexEventType[UnderlyingComplexEventType["KnockOutUp"] = 5] = "KnockOutUp";
    UnderlyingComplexEventType[UnderlyingComplexEventType["KnockOutDown"] = 6] = "KnockOutDown";
    UnderlyingComplexEventType[UnderlyingComplexEventType["Underlying"] = 7] = "Underlying";
    UnderlyingComplexEventType[UnderlyingComplexEventType["ResetBarrier"] = 8] = "ResetBarrier";
    UnderlyingComplexEventType[UnderlyingComplexEventType["RollingBarrier"] = 9] = "RollingBarrier";
    UnderlyingComplexEventType[UnderlyingComplexEventType["OneTouch"] = 10] = "OneTouch";
    UnderlyingComplexEventType[UnderlyingComplexEventType["NoTouch"] = 11] = "NoTouch";
    UnderlyingComplexEventType[UnderlyingComplexEventType["DoubleOneTouch"] = 12] = "DoubleOneTouch";
    UnderlyingComplexEventType[UnderlyingComplexEventType["DoubleNoTouch"] = 13] = "DoubleNoTouch";
    UnderlyingComplexEventType[UnderlyingComplexEventType["ForeignExchangeComposite"] = 14] = "ForeignExchangeComposite";
    UnderlyingComplexEventType[UnderlyingComplexEventType["ForeignExchangeQuanto"] = 15] = "ForeignExchangeQuanto";
    UnderlyingComplexEventType[UnderlyingComplexEventType["ForeignExchangeCrossCurrency"] = 16] = "ForeignExchangeCrossCurrency";
    UnderlyingComplexEventType[UnderlyingComplexEventType["StrikeSpread"] = 17] = "StrikeSpread";
    UnderlyingComplexEventType[UnderlyingComplexEventType["CalendarSpread"] = 18] = "CalendarSpread";
    UnderlyingComplexEventType[UnderlyingComplexEventType["PriceObservationAsianOrLookback"] = 19] = "PriceObservationAsianOrLookback";
    UnderlyingComplexEventType[UnderlyingComplexEventType["PassThrough"] = 20] = "PassThrough";
    UnderlyingComplexEventType[UnderlyingComplexEventType["StrikeSchedule"] = 21] = "StrikeSchedule";
    UnderlyingComplexEventType[UnderlyingComplexEventType["EquityValuation"] = 22] = "EquityValuation";
    UnderlyingComplexEventType[UnderlyingComplexEventType["DividendValuation"] = 23] = "DividendValuation";
})(UnderlyingComplexEventType = exports.UnderlyingComplexEventType || (exports.UnderlyingComplexEventType = {}));
var UnderlyingComplexEventPriceBoundaryMethod;
(function (UnderlyingComplexEventPriceBoundaryMethod) {
    UnderlyingComplexEventPriceBoundaryMethod[UnderlyingComplexEventPriceBoundaryMethod["LessThanComplexEventPrice1486"] = 1] = "LessThanComplexEventPrice1486";
    UnderlyingComplexEventPriceBoundaryMethod[UnderlyingComplexEventPriceBoundaryMethod["LessThanOrEqualToComplexEventPrice1486"] = 2] = "LessThanOrEqualToComplexEventPrice1486";
    UnderlyingComplexEventPriceBoundaryMethod[UnderlyingComplexEventPriceBoundaryMethod["EqualToComplexEventPrice1486"] = 3] = "EqualToComplexEventPrice1486";
    UnderlyingComplexEventPriceBoundaryMethod[UnderlyingComplexEventPriceBoundaryMethod["GreaterThanOrEqualToComplexEventPrice1486"] = 4] = "GreaterThanOrEqualToComplexEventPrice1486";
    UnderlyingComplexEventPriceBoundaryMethod[UnderlyingComplexEventPriceBoundaryMethod["GreaterThanComplexEventPrice1486"] = 5] = "GreaterThanComplexEventPrice1486";
})(UnderlyingComplexEventPriceBoundaryMethod = exports.UnderlyingComplexEventPriceBoundaryMethod || (exports.UnderlyingComplexEventPriceBoundaryMethod = {}));
var UnderlyingComplexEventPriceTimeType;
(function (UnderlyingComplexEventPriceTimeType) {
    UnderlyingComplexEventPriceTimeType[UnderlyingComplexEventPriceTimeType["Expiration"] = 1] = "Expiration";
    UnderlyingComplexEventPriceTimeType[UnderlyingComplexEventPriceTimeType["ImmediateAtAnyTime"] = 2] = "ImmediateAtAnyTime";
    UnderlyingComplexEventPriceTimeType[UnderlyingComplexEventPriceTimeType["SpecifiedDateTime"] = 3] = "SpecifiedDateTime";
    UnderlyingComplexEventPriceTimeType[UnderlyingComplexEventPriceTimeType["Close"] = 4] = "Close";
    UnderlyingComplexEventPriceTimeType[UnderlyingComplexEventPriceTimeType["Open"] = 5] = "Open";
    UnderlyingComplexEventPriceTimeType[UnderlyingComplexEventPriceTimeType["OfficialSettlementPrice"] = 6] = "OfficialSettlementPrice";
    UnderlyingComplexEventPriceTimeType[UnderlyingComplexEventPriceTimeType["DerivativesClose"] = 7] = "DerivativesClose";
    UnderlyingComplexEventPriceTimeType[UnderlyingComplexEventPriceTimeType["AsSpecifiedInMasterConfirmation"] = 8] = "AsSpecifiedInMasterConfirmation";
})(UnderlyingComplexEventPriceTimeType = exports.UnderlyingComplexEventPriceTimeType || (exports.UnderlyingComplexEventPriceTimeType = {}));
var UnderlyingComplexEventCondition;
(function (UnderlyingComplexEventCondition) {
    UnderlyingComplexEventCondition[UnderlyingComplexEventCondition["And"] = 1] = "And";
    UnderlyingComplexEventCondition[UnderlyingComplexEventCondition["Or"] = 2] = "Or";
})(UnderlyingComplexEventCondition = exports.UnderlyingComplexEventCondition || (exports.UnderlyingComplexEventCondition = {}));
var LegEventType;
(function (LegEventType) {
    LegEventType[LegEventType["Put"] = 1] = "Put";
    LegEventType[LegEventType["Call"] = 2] = "Call";
    LegEventType[LegEventType["Tender"] = 3] = "Tender";
    LegEventType[LegEventType["SinkingFundCall"] = 4] = "SinkingFundCall";
    LegEventType[LegEventType["Activation"] = 5] = "Activation";
    LegEventType[LegEventType["Inactivation"] = 6] = "Inactivation";
    LegEventType[LegEventType["LastEligibleTradeDate"] = 7] = "LastEligibleTradeDate";
    LegEventType[LegEventType["SwapStartDate"] = 8] = "SwapStartDate";
    LegEventType[LegEventType["SwapEndDate"] = 9] = "SwapEndDate";
    LegEventType[LegEventType["SwapRollDate"] = 10] = "SwapRollDate";
    LegEventType[LegEventType["SwapNextStartDate"] = 11] = "SwapNextStartDate";
    LegEventType[LegEventType["SwapNextRollDate"] = 12] = "SwapNextRollDate";
    LegEventType[LegEventType["FirstDeliveryDate"] = 13] = "FirstDeliveryDate";
    LegEventType[LegEventType["LastDeliveryDate"] = 14] = "LastDeliveryDate";
    LegEventType[LegEventType["InitialInventoryDueDate"] = 15] = "InitialInventoryDueDate";
    LegEventType[LegEventType["FinalInventoryDueDate"] = 16] = "FinalInventoryDueDate";
    LegEventType[LegEventType["FirstIntentDate"] = 17] = "FirstIntentDate";
    LegEventType[LegEventType["LastIntentDate"] = 18] = "LastIntentDate";
    LegEventType[LegEventType["PositionRemovalDate"] = 19] = "PositionRemovalDate";
    LegEventType[LegEventType["MinimumNotice"] = 20] = "MinimumNotice";
    LegEventType[LegEventType["DeliveryStartTime"] = 21] = "DeliveryStartTime";
    LegEventType[LegEventType["DeliveryEndTime"] = 22] = "DeliveryEndTime";
    LegEventType[LegEventType["FirstNoticeDate"] = 23] = "FirstNoticeDate";
    LegEventType[LegEventType["LastNoticeDate"] = 24] = "LastNoticeDate";
    LegEventType[LegEventType["FirstExerciseDate"] = 25] = "FirstExerciseDate";
    LegEventType[LegEventType["RedemptionDate"] = 26] = "RedemptionDate";
    LegEventType[LegEventType["TradeContinuationEffectiveDate"] = 27] = "TradeContinuationEffectiveDate";
    LegEventType[LegEventType["Other"] = 99] = "Other";
})(LegEventType = exports.LegEventType || (exports.LegEventType = {}));
var LegEventTimeUnit;
(function (LegEventTimeUnit) {
    LegEventTimeUnit["Hour"] = "H";
    LegEventTimeUnit["Minute"] = "Min";
    LegEventTimeUnit["Second"] = "S";
    LegEventTimeUnit["Day"] = "D";
    LegEventTimeUnit["Week"] = "Wk";
    LegEventTimeUnit["Month"] = "Mo";
    LegEventTimeUnit["Year"] = "Yr";
})(LegEventTimeUnit = exports.LegEventTimeUnit || (exports.LegEventTimeUnit = {}));
var LegAssetClass;
(function (LegAssetClass) {
    LegAssetClass[LegAssetClass["InterestRate"] = 1] = "InterestRate";
    LegAssetClass[LegAssetClass["Currency"] = 2] = "Currency";
    LegAssetClass[LegAssetClass["Credit"] = 3] = "Credit";
    LegAssetClass[LegAssetClass["Equity"] = 4] = "Equity";
    LegAssetClass[LegAssetClass["Commodity"] = 5] = "Commodity";
    LegAssetClass[LegAssetClass["Other"] = 6] = "Other";
    LegAssetClass[LegAssetClass["Cash"] = 7] = "Cash";
    LegAssetClass[LegAssetClass["Debt"] = 8] = "Debt";
    LegAssetClass[LegAssetClass["Fund"] = 9] = "Fund";
    LegAssetClass[LegAssetClass["LoanFacility"] = 10] = "LoanFacility";
})(LegAssetClass = exports.LegAssetClass || (exports.LegAssetClass = {}));
var LegAssetSubClass;
(function (LegAssetSubClass) {
    LegAssetSubClass[LegAssetSubClass["SingleCurrency"] = 1] = "SingleCurrency";
    LegAssetSubClass[LegAssetSubClass["CrossCurrency"] = 2] = "CrossCurrency";
    LegAssetSubClass[LegAssetSubClass["BasketForMultiCurrency"] = 3] = "BasketForMultiCurrency";
    LegAssetSubClass[LegAssetSubClass["SingleName"] = 4] = "SingleName";
    LegAssetSubClass[LegAssetSubClass["CreditIndex"] = 5] = "CreditIndex";
    LegAssetSubClass[LegAssetSubClass["IndexTranche"] = 6] = "IndexTranche";
    LegAssetSubClass[LegAssetSubClass["CreditBasket"] = 7] = "CreditBasket";
    LegAssetSubClass[LegAssetSubClass["Exotic"] = 8] = "Exotic";
    LegAssetSubClass[LegAssetSubClass["Common"] = 9] = "Common";
    LegAssetSubClass[LegAssetSubClass["Preferred"] = 10] = "Preferred";
    LegAssetSubClass[LegAssetSubClass["EquityIndex"] = 11] = "EquityIndex";
    LegAssetSubClass[LegAssetSubClass["EquityBasket"] = 12] = "EquityBasket";
    LegAssetSubClass[LegAssetSubClass["Metals"] = 13] = "Metals";
    LegAssetSubClass[LegAssetSubClass["Bullion"] = 14] = "Bullion";
    LegAssetSubClass[LegAssetSubClass["Energy"] = 15] = "Energy";
    LegAssetSubClass[LegAssetSubClass["CommodityIndex"] = 16] = "CommodityIndex";
    LegAssetSubClass[LegAssetSubClass["Agricultural"] = 17] = "Agricultural";
    LegAssetSubClass[LegAssetSubClass["Environmental"] = 18] = "Environmental";
    LegAssetSubClass[LegAssetSubClass["Freight"] = 19] = "Freight";
    LegAssetSubClass[LegAssetSubClass["Government"] = 20] = "Government";
    LegAssetSubClass[LegAssetSubClass["Agency"] = 21] = "Agency";
    LegAssetSubClass[LegAssetSubClass["Corporate"] = 22] = "Corporate";
    LegAssetSubClass[LegAssetSubClass["Financing"] = 23] = "Financing";
    LegAssetSubClass[LegAssetSubClass["MoneyMarket"] = 24] = "MoneyMarket";
    LegAssetSubClass[LegAssetSubClass["Mortgage"] = 25] = "Mortgage";
    LegAssetSubClass[LegAssetSubClass["Municipal"] = 26] = "Municipal";
    LegAssetSubClass[LegAssetSubClass["MutualFund"] = 27] = "MutualFund";
    LegAssetSubClass[LegAssetSubClass["CollectiveInvestmentVehicle"] = 28] = "CollectiveInvestmentVehicle";
    LegAssetSubClass[LegAssetSubClass["InvestmentProgram"] = 29] = "InvestmentProgram";
    LegAssetSubClass[LegAssetSubClass["SpecializedAccountProgram"] = 30] = "SpecializedAccountProgram";
    LegAssetSubClass[LegAssetSubClass["TermLoan"] = 31] = "TermLoan";
    LegAssetSubClass[LegAssetSubClass["BridgeLoan"] = 32] = "BridgeLoan";
    LegAssetSubClass[LegAssetSubClass["LetterOfCredit"] = 33] = "LetterOfCredit";
})(LegAssetSubClass = exports.LegAssetSubClass || (exports.LegAssetSubClass = {}));
var LegSwapClass;
(function (LegSwapClass) {
    LegSwapClass["BasisSwap"] = "BS";
    LegSwapClass["IndexSwap"] = "IX";
    LegSwapClass["BroadBasedSecuritySwap"] = "BB";
    LegSwapClass["BasketSwap"] = "SK";
})(LegSwapClass = exports.LegSwapClass || (exports.LegSwapClass = {}));
var LegSecondaryAssetClass;
(function (LegSecondaryAssetClass) {
    LegSecondaryAssetClass[LegSecondaryAssetClass["InterestRate"] = 1] = "InterestRate";
    LegSecondaryAssetClass[LegSecondaryAssetClass["Currency"] = 2] = "Currency";
    LegSecondaryAssetClass[LegSecondaryAssetClass["Credit"] = 3] = "Credit";
    LegSecondaryAssetClass[LegSecondaryAssetClass["Equity"] = 4] = "Equity";
    LegSecondaryAssetClass[LegSecondaryAssetClass["Commodity"] = 5] = "Commodity";
    LegSecondaryAssetClass[LegSecondaryAssetClass["Other"] = 6] = "Other";
    LegSecondaryAssetClass[LegSecondaryAssetClass["Cash"] = 7] = "Cash";
    LegSecondaryAssetClass[LegSecondaryAssetClass["Debt"] = 8] = "Debt";
    LegSecondaryAssetClass[LegSecondaryAssetClass["Fund"] = 9] = "Fund";
    LegSecondaryAssetClass[LegSecondaryAssetClass["LoanFacility"] = 10] = "LoanFacility";
})(LegSecondaryAssetClass = exports.LegSecondaryAssetClass || (exports.LegSecondaryAssetClass = {}));
var LegSecondaryAssetSubClass;
(function (LegSecondaryAssetSubClass) {
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["SingleCurrency"] = 1] = "SingleCurrency";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["CrossCurrency"] = 2] = "CrossCurrency";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["BasketForMultiCurrency"] = 3] = "BasketForMultiCurrency";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["SingleName"] = 4] = "SingleName";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["CreditIndex"] = 5] = "CreditIndex";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["IndexTranche"] = 6] = "IndexTranche";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["CreditBasket"] = 7] = "CreditBasket";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Exotic"] = 8] = "Exotic";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Common"] = 9] = "Common";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Preferred"] = 10] = "Preferred";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["EquityIndex"] = 11] = "EquityIndex";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["EquityBasket"] = 12] = "EquityBasket";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Metals"] = 13] = "Metals";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Bullion"] = 14] = "Bullion";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Energy"] = 15] = "Energy";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["CommodityIndex"] = 16] = "CommodityIndex";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Agricultural"] = 17] = "Agricultural";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Environmental"] = 18] = "Environmental";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Freight"] = 19] = "Freight";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Government"] = 20] = "Government";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Agency"] = 21] = "Agency";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Corporate"] = 22] = "Corporate";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Financing"] = 23] = "Financing";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["MoneyMarket"] = 24] = "MoneyMarket";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Mortgage"] = 25] = "Mortgage";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["Municipal"] = 26] = "Municipal";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["MutualFund"] = 27] = "MutualFund";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["CollectiveInvestmentVehicle"] = 28] = "CollectiveInvestmentVehicle";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["InvestmentProgram"] = 29] = "InvestmentProgram";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["SpecializedAccountProgram"] = 30] = "SpecializedAccountProgram";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["TermLoan"] = 31] = "TermLoan";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["BridgeLoan"] = 32] = "BridgeLoan";
    LegSecondaryAssetSubClass[LegSecondaryAssetSubClass["LetterOfCredit"] = 33] = "LetterOfCredit";
})(LegSecondaryAssetSubClass = exports.LegSecondaryAssetSubClass || (exports.LegSecondaryAssetSubClass = {}));
var UnderlyingSecondaryAssetClass;
(function (UnderlyingSecondaryAssetClass) {
    UnderlyingSecondaryAssetClass[UnderlyingSecondaryAssetClass["InterestRate"] = 1] = "InterestRate";
    UnderlyingSecondaryAssetClass[UnderlyingSecondaryAssetClass["Currency"] = 2] = "Currency";
    UnderlyingSecondaryAssetClass[UnderlyingSecondaryAssetClass["Credit"] = 3] = "Credit";
    UnderlyingSecondaryAssetClass[UnderlyingSecondaryAssetClass["Equity"] = 4] = "Equity";
    UnderlyingSecondaryAssetClass[UnderlyingSecondaryAssetClass["Commodity"] = 5] = "Commodity";
    UnderlyingSecondaryAssetClass[UnderlyingSecondaryAssetClass["Other"] = 6] = "Other";
    UnderlyingSecondaryAssetClass[UnderlyingSecondaryAssetClass["Cash"] = 7] = "Cash";
    UnderlyingSecondaryAssetClass[UnderlyingSecondaryAssetClass["Debt"] = 8] = "Debt";
    UnderlyingSecondaryAssetClass[UnderlyingSecondaryAssetClass["Fund"] = 9] = "Fund";
    UnderlyingSecondaryAssetClass[UnderlyingSecondaryAssetClass["LoanFacility"] = 10] = "LoanFacility";
})(UnderlyingSecondaryAssetClass = exports.UnderlyingSecondaryAssetClass || (exports.UnderlyingSecondaryAssetClass = {}));
var UnderlyingSecondaryAssetSubClass;
(function (UnderlyingSecondaryAssetSubClass) {
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["SingleCurrency"] = 1] = "SingleCurrency";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["CrossCurrency"] = 2] = "CrossCurrency";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["BasketForMultiCurrency"] = 3] = "BasketForMultiCurrency";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["SingleName"] = 4] = "SingleName";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["CreditIndex"] = 5] = "CreditIndex";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["IndexTranche"] = 6] = "IndexTranche";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["CreditBasket"] = 7] = "CreditBasket";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Exotic"] = 8] = "Exotic";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Common"] = 9] = "Common";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Preferred"] = 10] = "Preferred";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["EquityIndex"] = 11] = "EquityIndex";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["EquityBasket"] = 12] = "EquityBasket";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Metals"] = 13] = "Metals";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Bullion"] = 14] = "Bullion";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Energy"] = 15] = "Energy";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["CommodityIndex"] = 16] = "CommodityIndex";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Agricultural"] = 17] = "Agricultural";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Environmental"] = 18] = "Environmental";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Freight"] = 19] = "Freight";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Government"] = 20] = "Government";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Agency"] = 21] = "Agency";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Corporate"] = 22] = "Corporate";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Financing"] = 23] = "Financing";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["MoneyMarket"] = 24] = "MoneyMarket";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Mortgage"] = 25] = "Mortgage";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["Municipal"] = 26] = "Municipal";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["MutualFund"] = 27] = "MutualFund";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["CollectiveInvestmentVehicle"] = 28] = "CollectiveInvestmentVehicle";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["InvestmentProgram"] = 29] = "InvestmentProgram";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["SpecializedAccountProgram"] = 30] = "SpecializedAccountProgram";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["TermLoan"] = 31] = "TermLoan";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["BridgeLoan"] = 32] = "BridgeLoan";
    UnderlyingSecondaryAssetSubClass[UnderlyingSecondaryAssetSubClass["LetterOfCredit"] = 33] = "LetterOfCredit";
})(UnderlyingSecondaryAssetSubClass = exports.UnderlyingSecondaryAssetSubClass || (exports.UnderlyingSecondaryAssetSubClass = {}));
var MarginAmtFXRateCalc;
(function (MarginAmtFXRateCalc) {
    MarginAmtFXRateCalc["Divide"] = "D";
    MarginAmtFXRateCalc["Multiply"] = "M";
})(MarginAmtFXRateCalc = exports.MarginAmtFXRateCalc || (exports.MarginAmtFXRateCalc = {}));
var CollateralFXRateCalc;
(function (CollateralFXRateCalc) {
    CollateralFXRateCalc["Divide"] = "D";
    CollateralFXRateCalc["Multiply"] = "M";
})(CollateralFXRateCalc = exports.CollateralFXRateCalc || (exports.CollateralFXRateCalc = {}));
var PayCollectFXRateCalc;
(function (PayCollectFXRateCalc) {
    PayCollectFXRateCalc["Divide"] = "D";
    PayCollectFXRateCalc["Multiply"] = "M";
})(PayCollectFXRateCalc = exports.PayCollectFXRateCalc || (exports.PayCollectFXRateCalc = {}));
var PositionFXRateCalc;
(function (PositionFXRateCalc) {
    PositionFXRateCalc["Divide"] = "D";
    PositionFXRateCalc["Multiply"] = "M";
})(PositionFXRateCalc = exports.PositionFXRateCalc || (exports.PositionFXRateCalc = {}));
var AttachmentEncodingType;
(function (AttachmentEncodingType) {
    AttachmentEncodingType[AttachmentEncodingType["Base64Encoding"] = 0] = "Base64Encoding";
    AttachmentEncodingType[AttachmentEncodingType["UnencodedBinaryContent"] = 1] = "UnencodedBinaryContent";
})(AttachmentEncodingType = exports.AttachmentEncodingType || (exports.AttachmentEncodingType = {}));
var NegotiationMethod;
(function (NegotiationMethod) {
    NegotiationMethod[NegotiationMethod["AutoSpot"] = 0] = "AutoSpot";
    NegotiationMethod[NegotiationMethod["NegotiatedSpot"] = 1] = "NegotiatedSpot";
    NegotiationMethod[NegotiationMethod["TheSpotPriceForTheReferenceOrBenchmarkSecurityIsToBeNegotiatedViaPhoneOrVoice"] = 2] = "TheSpotPriceForTheReferenceOrBenchmarkSecurityIsToBeNegotiatedViaPhoneOrVoice";
})(NegotiationMethod = exports.NegotiationMethod || (exports.NegotiationMethod = {}));
var ComplexOptPayoutPaySide;
(function (ComplexOptPayoutPaySide) {
    ComplexOptPayoutPaySide[ComplexOptPayoutPaySide["Buy"] = 1] = "Buy";
    ComplexOptPayoutPaySide[ComplexOptPayoutPaySide["Sell"] = 2] = "Sell";
})(ComplexOptPayoutPaySide = exports.ComplexOptPayoutPaySide || (exports.ComplexOptPayoutPaySide = {}));
var ComplexOptPayoutReceiveSide;
(function (ComplexOptPayoutReceiveSide) {
    ComplexOptPayoutReceiveSide[ComplexOptPayoutReceiveSide["Buy"] = 1] = "Buy";
    ComplexOptPayoutReceiveSide[ComplexOptPayoutReceiveSide["Sell"] = 2] = "Sell";
})(ComplexOptPayoutReceiveSide = exports.ComplexOptPayoutReceiveSide || (exports.ComplexOptPayoutReceiveSide = {}));
var ComplexOptPayoutTime;
(function (ComplexOptPayoutTime) {
    ComplexOptPayoutTime[ComplexOptPayoutTime["Close"] = 0] = "Close";
    ComplexOptPayoutTime[ComplexOptPayoutTime["Open"] = 1] = "Open";
    ComplexOptPayoutTime[ComplexOptPayoutTime["OfficialSettlement"] = 2] = "OfficialSettlement";
    ComplexOptPayoutTime[ComplexOptPayoutTime["ValuationTime"] = 3] = "ValuationTime";
    ComplexOptPayoutTime[ComplexOptPayoutTime["ExchangeSettlementTime"] = 4] = "ExchangeSettlementTime";
    ComplexOptPayoutTime[ComplexOptPayoutTime["DerivativesClose"] = 5] = "DerivativesClose";
    ComplexOptPayoutTime[ComplexOptPayoutTime["AsSpecifiedInMasterConfirmation"] = 6] = "AsSpecifiedInMasterConfirmation";
})(ComplexOptPayoutTime = exports.ComplexOptPayoutTime || (exports.ComplexOptPayoutTime = {}));
var ComplexEventQuoteBasis;
(function (ComplexEventQuoteBasis) {
    ComplexEventQuoteBasis[ComplexEventQuoteBasis["Currency1PerCurrency2"] = 0] = "Currency1PerCurrency2";
    ComplexEventQuoteBasis[ComplexEventQuoteBasis["Currency2PerCurrency1"] = 1] = "Currency2PerCurrency1";
})(ComplexEventQuoteBasis = exports.ComplexEventQuoteBasis || (exports.ComplexEventQuoteBasis = {}));
var ComplexEventCalculationAgent;
(function (ComplexEventCalculationAgent) {
    ComplexEventCalculationAgent[ComplexEventCalculationAgent["ExercisingParty"] = 0] = "ExercisingParty";
    ComplexEventCalculationAgent[ComplexEventCalculationAgent["NonExercisingParty"] = 1] = "NonExercisingParty";
    ComplexEventCalculationAgent[ComplexEventCalculationAgent["AsSpecifiedInTheMasterAgreement"] = 2] = "AsSpecifiedInTheMasterAgreement";
    ComplexEventCalculationAgent[ComplexEventCalculationAgent["AsSpecifiedInTheStandardTermsSupplement"] = 3] = "AsSpecifiedInTheStandardTermsSupplement";
})(ComplexEventCalculationAgent = exports.ComplexEventCalculationAgent || (exports.ComplexEventCalculationAgent = {}));
var ComplexEventCreditEventNotifyingParty;
(function (ComplexEventCreditEventNotifyingParty) {
    ComplexEventCreditEventNotifyingParty[ComplexEventCreditEventNotifyingParty["SellerNotifies"] = 0] = "SellerNotifies";
    ComplexEventCreditEventNotifyingParty[ComplexEventCreditEventNotifyingParty["BuyerNotifies"] = 1] = "BuyerNotifies";
    ComplexEventCreditEventNotifyingParty[ComplexEventCreditEventNotifyingParty["SellerOrBuyerNotifies"] = 2] = "SellerOrBuyerNotifies";
})(ComplexEventCreditEventNotifyingParty = exports.ComplexEventCreditEventNotifyingParty || (exports.ComplexEventCreditEventNotifyingParty = {}));
var StrategyType;
(function (StrategyType) {
    StrategyType["Straddle"] = "STD";
    StrategyType["Strangle"] = "STG";
    StrategyType["Butterfly"] = "BF";
    StrategyType["Condor"] = "CNDR";
    StrategyType["CallableInversibleSnowball"] = "CISN";
    StrategyType["Other"] = "OTHER";
})(StrategyType = exports.StrategyType || (exports.StrategyType = {}));
var SettlDisruptionProvision;
(function (SettlDisruptionProvision) {
    SettlDisruptionProvision[SettlDisruptionProvision["Negotiation"] = 1] = "Negotiation";
    SettlDisruptionProvision[SettlDisruptionProvision["CancellationAndPayment"] = 2] = "CancellationAndPayment";
})(SettlDisruptionProvision = exports.SettlDisruptionProvision || (exports.SettlDisruptionProvision = {}));
var InstrumentRoundingDirection;
(function (InstrumentRoundingDirection) {
    InstrumentRoundingDirection["RoundToNearest"] = "0";
    InstrumentRoundingDirection["RoundDown"] = "1";
    InstrumentRoundingDirection["RoundUp"] = "2";
})(InstrumentRoundingDirection = exports.InstrumentRoundingDirection || (exports.InstrumentRoundingDirection = {}));
var LegInstrmtAssignmentMethod;
(function (LegInstrmtAssignmentMethod) {
    LegInstrmtAssignmentMethod["ProRata"] = "P";
    LegInstrmtAssignmentMethod["Random"] = "R";
})(LegInstrmtAssignmentMethod = exports.LegInstrmtAssignmentMethod || (exports.LegInstrmtAssignmentMethod = {}));
var LegSecurityStatus;
(function (LegSecurityStatus) {
    LegSecurityStatus["Active"] = "1";
    LegSecurityStatus["Inactive"] = "2";
    LegSecurityStatus["ActiveClosingOrdersOnly"] = "3";
    LegSecurityStatus["Expired"] = "4";
    LegSecurityStatus["Delisted"] = "5";
    LegSecurityStatus["KnockedOut"] = "6";
    LegSecurityStatus["KnockOutRevoked"] = "7";
    LegSecurityStatus["PendingExpiry"] = "8";
    LegSecurityStatus["Suspended"] = "9";
    LegSecurityStatus["Published"] = "10";
    LegSecurityStatus["PendingDeletion"] = "11";
})(LegSecurityStatus = exports.LegSecurityStatus || (exports.LegSecurityStatus = {}));
var LegRestructuringType;
(function (LegRestructuringType) {
    LegRestructuringType["FullRestructuring"] = "FR";
    LegRestructuringType["ModifiedRestructuring"] = "MR";
    LegRestructuringType["ModifiedModRestructuring"] = "MM";
    LegRestructuringType["NoRestructuringSpecified"] = "XR";
})(LegRestructuringType = exports.LegRestructuringType || (exports.LegRestructuringType = {}));
var LegSeniority;
(function (LegSeniority) {
    LegSeniority["SeniorSecured"] = "SD";
    LegSeniority["Senior"] = "SR";
    LegSeniority["Subordinated"] = "SB";
})(LegSeniority = exports.LegSeniority || (exports.LegSeniority = {}));
var LegObligationType;
(function (LegObligationType) {
    LegObligationType["Bond"] = "0";
    LegObligationType["ConvertibleBond"] = "1";
    LegObligationType["Mortgage"] = "2";
    LegObligationType["Loan"] = "3";
})(LegObligationType = exports.LegObligationType || (exports.LegObligationType = {}));
var LegSwapSubClass;
(function (LegSwapSubClass) {
    LegSwapSubClass["Amortizing"] = "AMTZ";
    LegSwapSubClass["Compounding"] = "COMP";
})(LegSwapSubClass = exports.LegSwapSubClass || (exports.LegSwapSubClass = {}));
var LegCouponType;
(function (LegCouponType) {
    LegCouponType[LegCouponType["Zero"] = 0] = "Zero";
    LegCouponType[LegCouponType["FixedRate"] = 1] = "FixedRate";
    LegCouponType[LegCouponType["FloatingRate"] = 2] = "FloatingRate";
    LegCouponType[LegCouponType["Structured"] = 3] = "Structured";
})(LegCouponType = exports.LegCouponType || (exports.LegCouponType = {}));
var LegCouponFrequencyUnit;
(function (LegCouponFrequencyUnit) {
    LegCouponFrequencyUnit["Day"] = "D";
    LegCouponFrequencyUnit["Week"] = "Wk";
    LegCouponFrequencyUnit["Month"] = "Mo";
    LegCouponFrequencyUnit["Year"] = "Yr";
    LegCouponFrequencyUnit["Hour"] = "H";
    LegCouponFrequencyUnit["Minute"] = "Min";
    LegCouponFrequencyUnit["Second"] = "S";
    LegCouponFrequencyUnit["Term"] = "T";
})(LegCouponFrequencyUnit = exports.LegCouponFrequencyUnit || (exports.LegCouponFrequencyUnit = {}));
var LegCouponDayCount;
(function (LegCouponDayCount) {
    LegCouponDayCount[LegCouponDayCount["E11"] = 0] = "E11";
    LegCouponDayCount[LegCouponDayCount["E3036030U360OrBondBasis"] = 1] = "E3036030U360OrBondBasis";
    LegCouponDayCount[LegCouponDayCount["E30360Sia"] = 2] = "E30360Sia";
    LegCouponDayCount[LegCouponDayCount["E30360M"] = 3] = "E30360M";
    LegCouponDayCount[LegCouponDayCount["E30E360EurobondBasis"] = 4] = "E30E360EurobondBasis";
    LegCouponDayCount[LegCouponDayCount["E30E360Isda"] = 5] = "E30E360Isda";
    LegCouponDayCount[LegCouponDayCount["Act360"] = 6] = "Act360";
    LegCouponDayCount[LegCouponDayCount["Act365Fixed"] = 7] = "Act365Fixed";
    LegCouponDayCount[LegCouponDayCount["ActActAfb"] = 8] = "ActActAfb";
    LegCouponDayCount[LegCouponDayCount["ActActIcma"] = 9] = "ActActIcma";
    LegCouponDayCount[LegCouponDayCount["ActActIcsmaUltimo"] = 10] = "ActActIcsmaUltimo";
    LegCouponDayCount[LegCouponDayCount["ActActIsda"] = 11] = "ActActIsda";
    LegCouponDayCount[LegCouponDayCount["Bus252"] = 12] = "Bus252";
    LegCouponDayCount[LegCouponDayCount["E30E360"] = 13] = "E30E360";
    LegCouponDayCount[LegCouponDayCount["Act365L"] = 14] = "Act365L";
    LegCouponDayCount[LegCouponDayCount["Nl365"] = 15] = "Nl365";
    LegCouponDayCount[LegCouponDayCount["Nl360"] = 16] = "Nl360";
    LegCouponDayCount[LegCouponDayCount["Act364"] = 17] = "Act364";
})(LegCouponDayCount = exports.LegCouponDayCount || (exports.LegCouponDayCount = {}));
var LegConvertibleBondEquityIDSource;
(function (LegConvertibleBondEquityIDSource) {
    LegConvertibleBondEquityIDSource["Cusip"] = "1";
    LegConvertibleBondEquityIDSource["Sedol"] = "2";
    LegConvertibleBondEquityIDSource["Quik"] = "3";
    LegConvertibleBondEquityIDSource["IsinNumber"] = "4";
    LegConvertibleBondEquityIDSource["RicCode"] = "5";
    LegConvertibleBondEquityIDSource["IsoCurrencyCode"] = "6";
    LegConvertibleBondEquityIDSource["IsoCountryCode"] = "7";
    LegConvertibleBondEquityIDSource["ExchangeSymbol"] = "8";
    LegConvertibleBondEquityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    LegConvertibleBondEquityIDSource["BloombergSymbol"] = "A";
    LegConvertibleBondEquityIDSource["Wertpapier"] = "B";
    LegConvertibleBondEquityIDSource["Dutch"] = "C";
    LegConvertibleBondEquityIDSource["Valoren"] = "D";
    LegConvertibleBondEquityIDSource["Sicovam"] = "E";
    LegConvertibleBondEquityIDSource["Belgian"] = "F";
    LegConvertibleBondEquityIDSource["CommonClearstreamAndEuroclear"] = "G";
    LegConvertibleBondEquityIDSource["ClearingHouseClearingOrganization"] = "H";
    LegConvertibleBondEquityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    LegConvertibleBondEquityIDSource["OptionPriceReportingAuthority"] = "J";
    LegConvertibleBondEquityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    LegConvertibleBondEquityIDSource["LetterOfCredit"] = "L";
    LegConvertibleBondEquityIDSource["MarketplaceAssignedIdentifier"] = "M";
    LegConvertibleBondEquityIDSource["MarkitRedEntityClip"] = "N";
    LegConvertibleBondEquityIDSource["MarkitRedPairClip"] = "P";
    LegConvertibleBondEquityIDSource["CftcCommodityCode"] = "Q";
    LegConvertibleBondEquityIDSource["IsdaCommodityReferencePrice"] = "R";
    LegConvertibleBondEquityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    LegConvertibleBondEquityIDSource["LegalEntityIdentifier"] = "T";
    LegConvertibleBondEquityIDSource["Synthetic"] = "U";
    LegConvertibleBondEquityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(LegConvertibleBondEquityIDSource = exports.LegConvertibleBondEquityIDSource || (exports.LegConvertibleBondEquityIDSource = {}));
var LegLienSeniority;
(function (LegLienSeniority) {
    LegLienSeniority[LegLienSeniority["Unknown"] = 0] = "Unknown";
    LegLienSeniority[LegLienSeniority["FirstLien"] = 1] = "FirstLien";
    LegLienSeniority[LegLienSeniority["SecondLien"] = 2] = "SecondLien";
    LegLienSeniority[LegLienSeniority["ThirdLien"] = 3] = "ThirdLien";
})(LegLienSeniority = exports.LegLienSeniority || (exports.LegLienSeniority = {}));
var LegLoanFacility;
(function (LegLoanFacility) {
    LegLoanFacility[LegLoanFacility["BridgeLoan"] = 0] = "BridgeLoan";
    LegLoanFacility[LegLoanFacility["LetterOfCredit"] = 1] = "LetterOfCredit";
    LegLoanFacility[LegLoanFacility["RevolvingLoan"] = 2] = "RevolvingLoan";
    LegLoanFacility[LegLoanFacility["SwinglineFunding"] = 3] = "SwinglineFunding";
    LegLoanFacility[LegLoanFacility["TermLoan"] = 4] = "TermLoan";
    LegLoanFacility[LegLoanFacility["TradeClaim"] = 5] = "TradeClaim";
})(LegLoanFacility = exports.LegLoanFacility || (exports.LegLoanFacility = {}));
var LegReferenceEntityType;
(function (LegReferenceEntityType) {
    LegReferenceEntityType[LegReferenceEntityType["Asian"] = 1] = "Asian";
    LegReferenceEntityType[LegReferenceEntityType["AustralianAndNewZealand"] = 2] = "AustralianAndNewZealand";
    LegReferenceEntityType[LegReferenceEntityType["EuropeanEmergingMarkets"] = 3] = "EuropeanEmergingMarkets";
    LegReferenceEntityType[LegReferenceEntityType["Japanese"] = 4] = "Japanese";
    LegReferenceEntityType[LegReferenceEntityType["NorthAmericanHighYield"] = 5] = "NorthAmericanHighYield";
    LegReferenceEntityType[LegReferenceEntityType["NorthAmericanInsurance"] = 6] = "NorthAmericanInsurance";
    LegReferenceEntityType[LegReferenceEntityType["NorthAmericanInvestmentGrade"] = 7] = "NorthAmericanInvestmentGrade";
    LegReferenceEntityType[LegReferenceEntityType["Singaporean"] = 8] = "Singaporean";
    LegReferenceEntityType[LegReferenceEntityType["WesternEuropean"] = 9] = "WesternEuropean";
    LegReferenceEntityType[LegReferenceEntityType["WesternEuropeanInsurance"] = 10] = "WesternEuropeanInsurance";
})(LegReferenceEntityType = exports.LegReferenceEntityType || (exports.LegReferenceEntityType = {}));
var LegStrikeUnitOfMeasure;
(function (LegStrikeUnitOfMeasure) {
    LegStrikeUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegStrikeUnitOfMeasure["Allowances"] = "Alw";
    LegStrikeUnitOfMeasure["Barrels"] = "Bbl";
    LegStrikeUnitOfMeasure["CubicMeters"] = "CBM";
    LegStrikeUnitOfMeasure["BoardFeet"] = "BDFT";
    LegStrikeUnitOfMeasure["Gigajoules"] = "GJ";
    LegStrikeUnitOfMeasure["Bushels"] = "Bu";
    LegStrikeUnitOfMeasure["KilowattHours"] = "kWh";
    LegStrikeUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegStrikeUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegStrikeUnitOfMeasure["MegawattHours"] = "MWh";
    LegStrikeUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegStrikeUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegStrikeUnitOfMeasure["Therms"] = "thm";
    LegStrikeUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegStrikeUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegStrikeUnitOfMeasure["HundredweightUs"] = "cwt";
    LegStrikeUnitOfMeasure["Days"] = "day";
    LegStrikeUnitOfMeasure["DryMetricTons"] = "dt";
    LegStrikeUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegStrikeUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegStrikeUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegStrikeUnitOfMeasure["Grams"] = "g";
    LegStrikeUnitOfMeasure["Gallons"] = "Gal";
    LegStrikeUnitOfMeasure["GrossTons"] = "GT";
    LegStrikeUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegStrikeUnitOfMeasure["IndexPoint"] = "IPNT";
    LegStrikeUnitOfMeasure["Kilograms"] = "kg";
    LegStrikeUnitOfMeasure["Kiloliters"] = "kL";
    LegStrikeUnitOfMeasure["KilowattYear"] = "kW-a";
    LegStrikeUnitOfMeasure["KilowattDay"] = "kW-d";
    LegStrikeUnitOfMeasure["KilowattHour"] = "kW-h";
    LegStrikeUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegStrikeUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegStrikeUnitOfMeasure["Liters"] = "L";
    LegStrikeUnitOfMeasure["Pounds"] = "lbs";
    LegStrikeUnitOfMeasure["MegawattYear"] = "MW-a";
    LegStrikeUnitOfMeasure["MegawattDay"] = "MW-d";
    LegStrikeUnitOfMeasure["MegawattHour"] = "MW-h";
    LegStrikeUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegStrikeUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegStrikeUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegStrikeUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegStrikeUnitOfMeasure["MetricTons"] = "t";
    LegStrikeUnitOfMeasure["TonsUs"] = "tn";
    LegStrikeUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegStrikeUnitOfMeasure["UsDollars"] = "USD";
})(LegStrikeUnitOfMeasure = exports.LegStrikeUnitOfMeasure || (exports.LegStrikeUnitOfMeasure = {}));
var LegStrikePriceDeterminationMethod;
(function (LegStrikePriceDeterminationMethod) {
    LegStrikePriceDeterminationMethod[LegStrikePriceDeterminationMethod["FixedStrikeDefaultIfNotSpecified"] = 1] = "FixedStrikeDefaultIfNotSpecified";
    LegStrikePriceDeterminationMethod[LegStrikePriceDeterminationMethod["StrikeSetAtExpirationToUnderlyingOrOtherValueLookbackFloating"] = 2] = "StrikeSetAtExpirationToUnderlyingOrOtherValueLookbackFloating";
    LegStrikePriceDeterminationMethod[LegStrikePriceDeterminationMethod["StrikeSetToAverageOfUnderlyingSettlementPriceAcrossTheLifeOfTheOption"] = 3] = "StrikeSetToAverageOfUnderlyingSettlementPriceAcrossTheLifeOfTheOption";
    LegStrikePriceDeterminationMethod[LegStrikePriceDeterminationMethod["StrikeSetToOptimalValue"] = 4] = "StrikeSetToOptimalValue";
})(LegStrikePriceDeterminationMethod = exports.LegStrikePriceDeterminationMethod || (exports.LegStrikePriceDeterminationMethod = {}));
var LegStrikePriceBoundaryMethod;
(function (LegStrikePriceBoundaryMethod) {
    LegStrikePriceBoundaryMethod[LegStrikePriceBoundaryMethod["LessThanUnderlyingPriceIsInTheMoneyItm"] = 1] = "LessThanUnderlyingPriceIsInTheMoneyItm";
    LegStrikePriceBoundaryMethod[LegStrikePriceBoundaryMethod["LessThanOrEqualToTheUnderlyingPriceIsInTheMoneyItm"] = 2] = "LessThanOrEqualToTheUnderlyingPriceIsInTheMoneyItm";
    LegStrikePriceBoundaryMethod[LegStrikePriceBoundaryMethod["EqualToTheUnderlyingPriceIsInTheMoneyItm"] = 3] = "EqualToTheUnderlyingPriceIsInTheMoneyItm";
    LegStrikePriceBoundaryMethod[LegStrikePriceBoundaryMethod["GreaterThanOrEqualToUnderlyingPriceIsInTheMoneyItm"] = 4] = "GreaterThanOrEqualToUnderlyingPriceIsInTheMoneyItm";
    LegStrikePriceBoundaryMethod[LegStrikePriceBoundaryMethod["GreaterThanUnderlyingIsInTheMoneyItm"] = 5] = "GreaterThanUnderlyingIsInTheMoneyItm";
})(LegStrikePriceBoundaryMethod = exports.LegStrikePriceBoundaryMethod || (exports.LegStrikePriceBoundaryMethod = {}));
var LegUnderlyingPriceDeterminationMethod;
(function (LegUnderlyingPriceDeterminationMethod) {
    LegUnderlyingPriceDeterminationMethod[LegUnderlyingPriceDeterminationMethod["Regular"] = 1] = "Regular";
    LegUnderlyingPriceDeterminationMethod[LegUnderlyingPriceDeterminationMethod["SpecialReference"] = 2] = "SpecialReference";
    LegUnderlyingPriceDeterminationMethod[LegUnderlyingPriceDeterminationMethod["OptimalValueLookback"] = 3] = "OptimalValueLookback";
    LegUnderlyingPriceDeterminationMethod[LegUnderlyingPriceDeterminationMethod["AverageValueAsianOption"] = 4] = "AverageValueAsianOption";
})(LegUnderlyingPriceDeterminationMethod = exports.LegUnderlyingPriceDeterminationMethod || (exports.LegUnderlyingPriceDeterminationMethod = {}));
var LegSettlMethod;
(function (LegSettlMethod) {
    LegSettlMethod["CashSettlementRequired"] = "C";
    LegSettlMethod["PhysicalSettlementRequired"] = "P";
    LegSettlMethod["ElectionAtExercise"] = "E";
})(LegSettlMethod = exports.LegSettlMethod || (exports.LegSettlMethod = {}));
var LegOptPayoutType;
(function (LegOptPayoutType) {
    LegOptPayoutType[LegOptPayoutType["Vanilla"] = 1] = "Vanilla";
    LegOptPayoutType[LegOptPayoutType["Capped"] = 2] = "Capped";
    LegOptPayoutType[LegOptPayoutType["Binary"] = 3] = "Binary";
})(LegOptPayoutType = exports.LegOptPayoutType || (exports.LegOptPayoutType = {}));
var LegPriceQuoteMethod;
(function (LegPriceQuoteMethod) {
    LegPriceQuoteMethod["StandardMoneyPerUnitOfAPhysical"] = "STD";
    LegPriceQuoteMethod["Index"] = "INX";
    LegPriceQuoteMethod["InterestRateIndex"] = "INT";
    LegPriceQuoteMethod["PercentOfPar"] = "PCTPAR";
})(LegPriceQuoteMethod = exports.LegPriceQuoteMethod || (exports.LegPriceQuoteMethod = {}));
var LegValuationMethod;
(function (LegValuationMethod) {
    LegValuationMethod["PremiumStyle"] = "EQTY";
    LegValuationMethod["FuturesStyleMarkToMarket"] = "FUT";
    LegValuationMethod["FuturesStyleWithAnAttachedCashAdjustment"] = "FUTDA";
    LegValuationMethod["CdsStyleCollateralizationOfMarketToMarketAndCoupon"] = "CDS";
    LegValuationMethod["CdsInDeliveryUseRecoveryRateToCalculateObligation"] = "CDSD";
})(LegValuationMethod = exports.LegValuationMethod || (exports.LegValuationMethod = {}));
var LegListMethod;
(function (LegListMethod) {
    LegListMethod[LegListMethod["PreListedOnly"] = 0] = "PreListedOnly";
    LegListMethod[LegListMethod["UserRequested"] = 1] = "UserRequested";
})(LegListMethod = exports.LegListMethod || (exports.LegListMethod = {}));
var LegCPProgram;
(function (LegCPProgram) {
    LegCPProgram[LegCPProgram["E3A3"] = 1] = "E3A3";
    LegCPProgram[LegCPProgram["E42"] = 2] = "E42";
    LegCPProgram[LegCPProgram["E3A2"] = 3] = "E3A2";
    LegCPProgram[LegCPProgram["E3A33C7"] = 4] = "E3A33C7";
    LegCPProgram[LegCPProgram["E3A4"] = 5] = "E3A4";
    LegCPProgram[LegCPProgram["E3A5"] = 6] = "E3A5";
    LegCPProgram[LegCPProgram["E3A7"] = 7] = "E3A7";
    LegCPProgram[LegCPProgram["E3C7"] = 8] = "E3C7";
    LegCPProgram[LegCPProgram["Other"] = 99] = "Other";
})(LegCPProgram = exports.LegCPProgram || (exports.LegCPProgram = {}));
var LegShortSaleRestriction;
(function (LegShortSaleRestriction) {
    LegShortSaleRestriction[LegShortSaleRestriction["NoRestrictions"] = 0] = "NoRestrictions";
    LegShortSaleRestriction[LegShortSaleRestriction["SecurityIsNotShortable"] = 1] = "SecurityIsNotShortable";
    LegShortSaleRestriction[LegShortSaleRestriction["SecurityNotShortableAtOrBelowTheBestBid"] = 2] = "SecurityNotShortableAtOrBelowTheBestBid";
    LegShortSaleRestriction[LegShortSaleRestriction["SecurityIsNotShortableWithoutPreBorrow"] = 3] = "SecurityIsNotShortableWithoutPreBorrow";
})(LegShortSaleRestriction = exports.LegShortSaleRestriction || (exports.LegShortSaleRestriction = {}));
var AssetGroup;
(function (AssetGroup) {
    AssetGroup[AssetGroup["Financials"] = 1] = "Financials";
    AssetGroup[AssetGroup["Commodities"] = 2] = "Commodities";
    AssetGroup[AssetGroup["AlternativeInvestments"] = 3] = "AlternativeInvestments";
})(AssetGroup = exports.AssetGroup || (exports.AssetGroup = {}));
var LegStrategyType;
(function (LegStrategyType) {
    LegStrategyType["Straddle"] = "STD";
    LegStrategyType["Strangle"] = "STG";
    LegStrategyType["Butterfly"] = "BF";
    LegStrategyType["Condor"] = "CNDR";
    LegStrategyType["CallableInversibleSnowball"] = "CISN";
    LegStrategyType["Other"] = "OTHER";
})(LegStrategyType = exports.LegStrategyType || (exports.LegStrategyType = {}));
var LegSettlDisruptionProvision;
(function (LegSettlDisruptionProvision) {
    LegSettlDisruptionProvision[LegSettlDisruptionProvision["Negotiation"] = 1] = "Negotiation";
    LegSettlDisruptionProvision[LegSettlDisruptionProvision["CancellationAndPayment"] = 2] = "CancellationAndPayment";
})(LegSettlDisruptionProvision = exports.LegSettlDisruptionProvision || (exports.LegSettlDisruptionProvision = {}));
var LegInstrumentRoundingDirection;
(function (LegInstrumentRoundingDirection) {
    LegInstrumentRoundingDirection["RoundToNearest"] = "0";
    LegInstrumentRoundingDirection["RoundDown"] = "1";
    LegInstrumentRoundingDirection["RoundUp"] = "2";
})(LegInstrumentRoundingDirection = exports.LegInstrumentRoundingDirection || (exports.LegInstrumentRoundingDirection = {}));
var LegComplexEventType;
(function (LegComplexEventType) {
    LegComplexEventType[LegComplexEventType["Capped"] = 1] = "Capped";
    LegComplexEventType[LegComplexEventType["Trigger"] = 2] = "Trigger";
    LegComplexEventType[LegComplexEventType["KnockInUp"] = 3] = "KnockInUp";
    LegComplexEventType[LegComplexEventType["KnockInDown"] = 4] = "KnockInDown";
    LegComplexEventType[LegComplexEventType["KnockOutUp"] = 5] = "KnockOutUp";
    LegComplexEventType[LegComplexEventType["KnockOutDown"] = 6] = "KnockOutDown";
    LegComplexEventType[LegComplexEventType["Underlying"] = 7] = "Underlying";
    LegComplexEventType[LegComplexEventType["ResetBarrier"] = 8] = "ResetBarrier";
    LegComplexEventType[LegComplexEventType["RollingBarrier"] = 9] = "RollingBarrier";
    LegComplexEventType[LegComplexEventType["OneTouch"] = 10] = "OneTouch";
    LegComplexEventType[LegComplexEventType["NoTouch"] = 11] = "NoTouch";
    LegComplexEventType[LegComplexEventType["DoubleOneTouch"] = 12] = "DoubleOneTouch";
    LegComplexEventType[LegComplexEventType["DoubleNoTouch"] = 13] = "DoubleNoTouch";
    LegComplexEventType[LegComplexEventType["ForeignExchangeComposite"] = 14] = "ForeignExchangeComposite";
    LegComplexEventType[LegComplexEventType["ForeignExchangeQuanto"] = 15] = "ForeignExchangeQuanto";
    LegComplexEventType[LegComplexEventType["ForeignExchangeCrossCurrency"] = 16] = "ForeignExchangeCrossCurrency";
    LegComplexEventType[LegComplexEventType["StrikeSpread"] = 17] = "StrikeSpread";
    LegComplexEventType[LegComplexEventType["CalendarSpread"] = 18] = "CalendarSpread";
    LegComplexEventType[LegComplexEventType["PriceObservationAsianOrLookback"] = 19] = "PriceObservationAsianOrLookback";
    LegComplexEventType[LegComplexEventType["PassThrough"] = 20] = "PassThrough";
    LegComplexEventType[LegComplexEventType["StrikeSchedule"] = 21] = "StrikeSchedule";
    LegComplexEventType[LegComplexEventType["EquityValuation"] = 22] = "EquityValuation";
    LegComplexEventType[LegComplexEventType["DividendValuation"] = 23] = "DividendValuation";
})(LegComplexEventType = exports.LegComplexEventType || (exports.LegComplexEventType = {}));
var LegComplexOptPayoutPaySide;
(function (LegComplexOptPayoutPaySide) {
    LegComplexOptPayoutPaySide[LegComplexOptPayoutPaySide["Buy"] = 1] = "Buy";
    LegComplexOptPayoutPaySide[LegComplexOptPayoutPaySide["Sell"] = 2] = "Sell";
})(LegComplexOptPayoutPaySide = exports.LegComplexOptPayoutPaySide || (exports.LegComplexOptPayoutPaySide = {}));
var LegComplexOptPayoutReceiveSide;
(function (LegComplexOptPayoutReceiveSide) {
    LegComplexOptPayoutReceiveSide[LegComplexOptPayoutReceiveSide["Buy"] = 1] = "Buy";
    LegComplexOptPayoutReceiveSide[LegComplexOptPayoutReceiveSide["Sell"] = 2] = "Sell";
})(LegComplexOptPayoutReceiveSide = exports.LegComplexOptPayoutReceiveSide || (exports.LegComplexOptPayoutReceiveSide = {}));
var LegComplexOptPayoutTime;
(function (LegComplexOptPayoutTime) {
    LegComplexOptPayoutTime[LegComplexOptPayoutTime["Close"] = 0] = "Close";
    LegComplexOptPayoutTime[LegComplexOptPayoutTime["Open"] = 1] = "Open";
    LegComplexOptPayoutTime[LegComplexOptPayoutTime["OfficialSettlement"] = 2] = "OfficialSettlement";
    LegComplexOptPayoutTime[LegComplexOptPayoutTime["ValuationTime"] = 3] = "ValuationTime";
    LegComplexOptPayoutTime[LegComplexOptPayoutTime["ExchangeSettlementTime"] = 4] = "ExchangeSettlementTime";
    LegComplexOptPayoutTime[LegComplexOptPayoutTime["DerivativesClose"] = 5] = "DerivativesClose";
    LegComplexOptPayoutTime[LegComplexOptPayoutTime["AsSpecifiedInMasterConfirmation"] = 6] = "AsSpecifiedInMasterConfirmation";
})(LegComplexOptPayoutTime = exports.LegComplexOptPayoutTime || (exports.LegComplexOptPayoutTime = {}));
var LegComplexEventPriceBoundaryMethod;
(function (LegComplexEventPriceBoundaryMethod) {
    LegComplexEventPriceBoundaryMethod[LegComplexEventPriceBoundaryMethod["LessThanComplexEventPrice1486"] = 1] = "LessThanComplexEventPrice1486";
    LegComplexEventPriceBoundaryMethod[LegComplexEventPriceBoundaryMethod["LessThanOrEqualToComplexEventPrice1486"] = 2] = "LessThanOrEqualToComplexEventPrice1486";
    LegComplexEventPriceBoundaryMethod[LegComplexEventPriceBoundaryMethod["EqualToComplexEventPrice1486"] = 3] = "EqualToComplexEventPrice1486";
    LegComplexEventPriceBoundaryMethod[LegComplexEventPriceBoundaryMethod["GreaterThanOrEqualToComplexEventPrice1486"] = 4] = "GreaterThanOrEqualToComplexEventPrice1486";
    LegComplexEventPriceBoundaryMethod[LegComplexEventPriceBoundaryMethod["GreaterThanComplexEventPrice1486"] = 5] = "GreaterThanComplexEventPrice1486";
})(LegComplexEventPriceBoundaryMethod = exports.LegComplexEventPriceBoundaryMethod || (exports.LegComplexEventPriceBoundaryMethod = {}));
var LegComplexEventPriceTimeType;
(function (LegComplexEventPriceTimeType) {
    LegComplexEventPriceTimeType[LegComplexEventPriceTimeType["Expiration"] = 1] = "Expiration";
    LegComplexEventPriceTimeType[LegComplexEventPriceTimeType["ImmediateAtAnyTime"] = 2] = "ImmediateAtAnyTime";
    LegComplexEventPriceTimeType[LegComplexEventPriceTimeType["SpecifiedDateTime"] = 3] = "SpecifiedDateTime";
    LegComplexEventPriceTimeType[LegComplexEventPriceTimeType["Close"] = 4] = "Close";
    LegComplexEventPriceTimeType[LegComplexEventPriceTimeType["Open"] = 5] = "Open";
    LegComplexEventPriceTimeType[LegComplexEventPriceTimeType["OfficialSettlementPrice"] = 6] = "OfficialSettlementPrice";
    LegComplexEventPriceTimeType[LegComplexEventPriceTimeType["DerivativesClose"] = 7] = "DerivativesClose";
    LegComplexEventPriceTimeType[LegComplexEventPriceTimeType["AsSpecifiedInMasterConfirmation"] = 8] = "AsSpecifiedInMasterConfirmation";
})(LegComplexEventPriceTimeType = exports.LegComplexEventPriceTimeType || (exports.LegComplexEventPriceTimeType = {}));
var LegComplexEventCondition;
(function (LegComplexEventCondition) {
    LegComplexEventCondition[LegComplexEventCondition["And"] = 1] = "And";
    LegComplexEventCondition[LegComplexEventCondition["Or"] = 2] = "Or";
})(LegComplexEventCondition = exports.LegComplexEventCondition || (exports.LegComplexEventCondition = {}));
var LegComplexEventQuoteBasis;
(function (LegComplexEventQuoteBasis) {
    LegComplexEventQuoteBasis[LegComplexEventQuoteBasis["Currency1PerCurrency2"] = 0] = "Currency1PerCurrency2";
    LegComplexEventQuoteBasis[LegComplexEventQuoteBasis["Currency2PerCurrency1"] = 1] = "Currency2PerCurrency1";
})(LegComplexEventQuoteBasis = exports.LegComplexEventQuoteBasis || (exports.LegComplexEventQuoteBasis = {}));
var LegComplexEventCalculationAgent;
(function (LegComplexEventCalculationAgent) {
    LegComplexEventCalculationAgent[LegComplexEventCalculationAgent["ExercisingParty"] = 0] = "ExercisingParty";
    LegComplexEventCalculationAgent[LegComplexEventCalculationAgent["NonExercisingParty"] = 1] = "NonExercisingParty";
    LegComplexEventCalculationAgent[LegComplexEventCalculationAgent["AsSpecifiedInTheMasterAgreement"] = 2] = "AsSpecifiedInTheMasterAgreement";
    LegComplexEventCalculationAgent[LegComplexEventCalculationAgent["AsSpecifiedInTheStandardTermsSupplement"] = 3] = "AsSpecifiedInTheStandardTermsSupplement";
})(LegComplexEventCalculationAgent = exports.LegComplexEventCalculationAgent || (exports.LegComplexEventCalculationAgent = {}));
var LegComplexEventCreditEventNotifyingParty;
(function (LegComplexEventCreditEventNotifyingParty) {
    LegComplexEventCreditEventNotifyingParty[LegComplexEventCreditEventNotifyingParty["SellerNotifies"] = 0] = "SellerNotifies";
    LegComplexEventCreditEventNotifyingParty[LegComplexEventCreditEventNotifyingParty["BuyerNotifies"] = 1] = "BuyerNotifies";
    LegComplexEventCreditEventNotifyingParty[LegComplexEventCreditEventNotifyingParty["SellerOrBuyerNotifies"] = 2] = "SellerOrBuyerNotifies";
})(LegComplexEventCreditEventNotifyingParty = exports.LegComplexEventCreditEventNotifyingParty || (exports.LegComplexEventCreditEventNotifyingParty = {}));
var LegInstrumentPartyIDSource;
(function (LegInstrumentPartyIDSource) {
    LegInstrumentPartyIDSource["KoreanInvestorId"] = "1";
    LegInstrumentPartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    LegInstrumentPartyIDSource["TaiwaneseTradingAcct"] = "3";
    LegInstrumentPartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    LegInstrumentPartyIDSource["ChineseInvestorId"] = "5";
    LegInstrumentPartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    LegInstrumentPartyIDSource["UsSocialSecurityNumber"] = "7";
    LegInstrumentPartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    LegInstrumentPartyIDSource["AustralianBusinessNumber"] = "9";
    LegInstrumentPartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    LegInstrumentPartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    LegInstrumentPartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    LegInstrumentPartyIDSource["ProprietaryCustomCode"] = "D";
    LegInstrumentPartyIDSource["IsoCountryCode"] = "E";
    LegInstrumentPartyIDSource["AustralianTaxFileNumber"] = "A";
    LegInstrumentPartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    LegInstrumentPartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    LegInstrumentPartyIDSource["TaxId"] = "J";
    LegInstrumentPartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    LegInstrumentPartyIDSource["AustralianCompanyNumber"] = "K";
    LegInstrumentPartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    LegInstrumentPartyIDSource["CftcReportingFirmIdentifier"] = "M";
    LegInstrumentPartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    LegInstrumentPartyIDSource["InterimIdentifier"] = "O";
    LegInstrumentPartyIDSource["ShortCodeIdentifier"] = "P";
    LegInstrumentPartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(LegInstrumentPartyIDSource = exports.LegInstrumentPartyIDSource || (exports.LegInstrumentPartyIDSource = {}));
var LegInstrumentPartyRole;
(function (LegInstrumentPartyRole) {
    LegInstrumentPartyRole[LegInstrumentPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    LegInstrumentPartyRole[LegInstrumentPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["InvestorId"] = 5] = "InvestorId";
    LegInstrumentPartyRole[LegInstrumentPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    LegInstrumentPartyRole[LegInstrumentPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    LegInstrumentPartyRole[LegInstrumentPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    LegInstrumentPartyRole[LegInstrumentPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    LegInstrumentPartyRole[LegInstrumentPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    LegInstrumentPartyRole[LegInstrumentPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ContraFirm"] = 17] = "ContraFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    LegInstrumentPartyRole[LegInstrumentPartyRole["Exchange"] = 22] = "Exchange";
    LegInstrumentPartyRole[LegInstrumentPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    LegInstrumentPartyRole[LegInstrumentPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    LegInstrumentPartyRole[LegInstrumentPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    LegInstrumentPartyRole[LegInstrumentPartyRole["Custodian"] = 28] = "Custodian";
    LegInstrumentPartyRole[LegInstrumentPartyRole["Intermediary"] = 29] = "Intermediary";
    LegInstrumentPartyRole[LegInstrumentPartyRole["Agent"] = 30] = "Agent";
    LegInstrumentPartyRole[LegInstrumentPartyRole["SubCustodian"] = 31] = "SubCustodian";
    LegInstrumentPartyRole[LegInstrumentPartyRole["Beneficiary"] = 32] = "Beneficiary";
    LegInstrumentPartyRole[LegInstrumentPartyRole["InterestedParty"] = 33] = "InterestedParty";
    LegInstrumentPartyRole[LegInstrumentPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    LegInstrumentPartyRole[LegInstrumentPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    LegInstrumentPartyRole[LegInstrumentPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ContraTrader"] = 37] = "ContraTrader";
    LegInstrumentPartyRole[LegInstrumentPartyRole["PositionAccount"] = 38] = "PositionAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    LegInstrumentPartyRole[LegInstrumentPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ContraExchange"] = 42] = "ContraExchange";
    LegInstrumentPartyRole[LegInstrumentPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    LegInstrumentPartyRole[LegInstrumentPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["AssetManager"] = 49] = "AssetManager";
    LegInstrumentPartyRole[LegInstrumentPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    LegInstrumentPartyRole[LegInstrumentPartyRole["SenderLocation"] = 54] = "SenderLocation";
    LegInstrumentPartyRole[LegInstrumentPartyRole["SessionId"] = 55] = "SessionId";
    LegInstrumentPartyRole[LegInstrumentPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    LegInstrumentPartyRole[LegInstrumentPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    LegInstrumentPartyRole[LegInstrumentPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    LegInstrumentPartyRole[LegInstrumentPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    LegInstrumentPartyRole[LegInstrumentPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    LegInstrumentPartyRole[LegInstrumentPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    LegInstrumentPartyRole[LegInstrumentPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    LegInstrumentPartyRole[LegInstrumentPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["MarketMaker"] = 66] = "MarketMaker";
    LegInstrumentPartyRole[LegInstrumentPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    LegInstrumentPartyRole[LegInstrumentPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    LegInstrumentPartyRole[LegInstrumentPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    LegInstrumentPartyRole[LegInstrumentPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    LegInstrumentPartyRole[LegInstrumentPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    LegInstrumentPartyRole[LegInstrumentPartyRole["LocationId"] = 75] = "LocationId";
    LegInstrumentPartyRole[LegInstrumentPartyRole["DeskId"] = 76] = "DeskId";
    LegInstrumentPartyRole[LegInstrumentPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    LegInstrumentPartyRole[LegInstrumentPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    LegInstrumentPartyRole[LegInstrumentPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    LegInstrumentPartyRole[LegInstrumentPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    LegInstrumentPartyRole[LegInstrumentPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    LegInstrumentPartyRole[LegInstrumentPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    LegInstrumentPartyRole[LegInstrumentPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    LegInstrumentPartyRole[LegInstrumentPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    LegInstrumentPartyRole[LegInstrumentPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    LegInstrumentPartyRole[LegInstrumentPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    LegInstrumentPartyRole[LegInstrumentPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    LegInstrumentPartyRole[LegInstrumentPartyRole["AwayMarket"] = 94] = "AwayMarket";
    LegInstrumentPartyRole[LegInstrumentPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    LegInstrumentPartyRole[LegInstrumentPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    LegInstrumentPartyRole[LegInstrumentPartyRole["MarginAccount"] = 100] = "MarginAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["DataRepository"] = 102] = "DataRepository";
    LegInstrumentPartyRole[LegInstrumentPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    LegInstrumentPartyRole[LegInstrumentPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    LegInstrumentPartyRole[LegInstrumentPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    LegInstrumentPartyRole[LegInstrumentPartyRole["Correspondent"] = 107] = "Correspondent";
    LegInstrumentPartyRole[LegInstrumentPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    LegInstrumentPartyRole[LegInstrumentPartyRole["Borrower"] = 110] = "Borrower";
    LegInstrumentPartyRole[LegInstrumentPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    LegInstrumentPartyRole[LegInstrumentPartyRole["Guarantor"] = 112] = "Guarantor";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    LegInstrumentPartyRole[LegInstrumentPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    LegInstrumentPartyRole[LegInstrumentPartyRole["HedgingParty"] = 115] = "HedgingParty";
    LegInstrumentPartyRole[LegInstrumentPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    LegInstrumentPartyRole[LegInstrumentPartyRole["SalesPerson"] = 117] = "SalesPerson";
    LegInstrumentPartyRole[LegInstrumentPartyRole["Operator"] = 118] = "Operator";
    LegInstrumentPartyRole[LegInstrumentPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    LegInstrumentPartyRole[LegInstrumentPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    LegInstrumentPartyRole[LegInstrumentPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    LegInstrumentPartyRole[LegInstrumentPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(LegInstrumentPartyRole = exports.LegInstrumentPartyRole || (exports.LegInstrumentPartyRole = {}));
var LegInstrumentPartySubIDType;
(function (LegInstrumentPartySubIDType) {
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["Firm"] = 1] = "Firm";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["Person"] = 2] = "Person";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["System"] = 3] = "System";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["Application"] = 4] = "Application";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["ContactName"] = 9] = "ContactName";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["Bic"] = 16] = "Bic";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["Department"] = 24] = "Department";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["Location"] = 31] = "Location";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["AddressCity"] = 34] = "AddressCity";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["USPerson"] = 48] = "USPerson";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["EndUser"] = 69] = "EndUser";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["Domicile"] = 72] = "Domicile";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["Payer"] = 74] = "Payer";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["Receiver"] = 75] = "Receiver";
    LegInstrumentPartySubIDType[LegInstrumentPartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(LegInstrumentPartySubIDType = exports.LegInstrumentPartySubIDType || (exports.LegInstrumentPartySubIDType = {}));
var UnderlyingComplexOptPayoutPaySide;
(function (UnderlyingComplexOptPayoutPaySide) {
    UnderlyingComplexOptPayoutPaySide[UnderlyingComplexOptPayoutPaySide["Buy"] = 1] = "Buy";
    UnderlyingComplexOptPayoutPaySide[UnderlyingComplexOptPayoutPaySide["Sell"] = 2] = "Sell";
})(UnderlyingComplexOptPayoutPaySide = exports.UnderlyingComplexOptPayoutPaySide || (exports.UnderlyingComplexOptPayoutPaySide = {}));
var UnderlyingComplexOptPayoutReceiveSide;
(function (UnderlyingComplexOptPayoutReceiveSide) {
    UnderlyingComplexOptPayoutReceiveSide[UnderlyingComplexOptPayoutReceiveSide["Buy"] = 1] = "Buy";
    UnderlyingComplexOptPayoutReceiveSide[UnderlyingComplexOptPayoutReceiveSide["Sell"] = 2] = "Sell";
})(UnderlyingComplexOptPayoutReceiveSide = exports.UnderlyingComplexOptPayoutReceiveSide || (exports.UnderlyingComplexOptPayoutReceiveSide = {}));
var UnderlyingComplexOptPayoutTime;
(function (UnderlyingComplexOptPayoutTime) {
    UnderlyingComplexOptPayoutTime[UnderlyingComplexOptPayoutTime["Close"] = 0] = "Close";
    UnderlyingComplexOptPayoutTime[UnderlyingComplexOptPayoutTime["Open"] = 1] = "Open";
    UnderlyingComplexOptPayoutTime[UnderlyingComplexOptPayoutTime["OfficialSettlement"] = 2] = "OfficialSettlement";
    UnderlyingComplexOptPayoutTime[UnderlyingComplexOptPayoutTime["ValuationTime"] = 3] = "ValuationTime";
    UnderlyingComplexOptPayoutTime[UnderlyingComplexOptPayoutTime["ExchangeSettlementTime"] = 4] = "ExchangeSettlementTime";
    UnderlyingComplexOptPayoutTime[UnderlyingComplexOptPayoutTime["DerivativesClose"] = 5] = "DerivativesClose";
    UnderlyingComplexOptPayoutTime[UnderlyingComplexOptPayoutTime["AsSpecifiedInMasterConfirmation"] = 6] = "AsSpecifiedInMasterConfirmation";
})(UnderlyingComplexOptPayoutTime = exports.UnderlyingComplexOptPayoutTime || (exports.UnderlyingComplexOptPayoutTime = {}));
var UnderlyingComplexEventQuoteBasis;
(function (UnderlyingComplexEventQuoteBasis) {
    UnderlyingComplexEventQuoteBasis[UnderlyingComplexEventQuoteBasis["Currency1PerCurrency2"] = 0] = "Currency1PerCurrency2";
    UnderlyingComplexEventQuoteBasis[UnderlyingComplexEventQuoteBasis["Currency2PerCurrency1"] = 1] = "Currency2PerCurrency1";
})(UnderlyingComplexEventQuoteBasis = exports.UnderlyingComplexEventQuoteBasis || (exports.UnderlyingComplexEventQuoteBasis = {}));
var UnderlyingComplexEventCalculationAgent;
(function (UnderlyingComplexEventCalculationAgent) {
    UnderlyingComplexEventCalculationAgent[UnderlyingComplexEventCalculationAgent["ExercisingParty"] = 0] = "ExercisingParty";
    UnderlyingComplexEventCalculationAgent[UnderlyingComplexEventCalculationAgent["NonExercisingParty"] = 1] = "NonExercisingParty";
    UnderlyingComplexEventCalculationAgent[UnderlyingComplexEventCalculationAgent["AsSpecifiedInTheMasterAgreement"] = 2] = "AsSpecifiedInTheMasterAgreement";
    UnderlyingComplexEventCalculationAgent[UnderlyingComplexEventCalculationAgent["AsSpecifiedInTheStandardTermsSupplement"] = 3] = "AsSpecifiedInTheStandardTermsSupplement";
})(UnderlyingComplexEventCalculationAgent = exports.UnderlyingComplexEventCalculationAgent || (exports.UnderlyingComplexEventCalculationAgent = {}));
var UnderlyingComplexEventCreditEventNotifyingParty;
(function (UnderlyingComplexEventCreditEventNotifyingParty) {
    UnderlyingComplexEventCreditEventNotifyingParty[UnderlyingComplexEventCreditEventNotifyingParty["SellerNotifies"] = 0] = "SellerNotifies";
    UnderlyingComplexEventCreditEventNotifyingParty[UnderlyingComplexEventCreditEventNotifyingParty["BuyerNotifies"] = 1] = "BuyerNotifies";
    UnderlyingComplexEventCreditEventNotifyingParty[UnderlyingComplexEventCreditEventNotifyingParty["SellerOrBuyerNotifies"] = 2] = "SellerOrBuyerNotifies";
})(UnderlyingComplexEventCreditEventNotifyingParty = exports.UnderlyingComplexEventCreditEventNotifyingParty || (exports.UnderlyingComplexEventCreditEventNotifyingParty = {}));
var UnderlyingSwapSubClass;
(function (UnderlyingSwapSubClass) {
    UnderlyingSwapSubClass["Amortizing"] = "AMTZ";
    UnderlyingSwapSubClass["Compounding"] = "COMP";
})(UnderlyingSwapSubClass = exports.UnderlyingSwapSubClass || (exports.UnderlyingSwapSubClass = {}));
var UnderlyingStrikeUnitOfMeasure;
(function (UnderlyingStrikeUnitOfMeasure) {
    UnderlyingStrikeUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingStrikeUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingStrikeUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingStrikeUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingStrikeUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingStrikeUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingStrikeUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingStrikeUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingStrikeUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingStrikeUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingStrikeUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingStrikeUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingStrikeUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingStrikeUnitOfMeasure["Therms"] = "thm";
    UnderlyingStrikeUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingStrikeUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingStrikeUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingStrikeUnitOfMeasure["Days"] = "day";
    UnderlyingStrikeUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingStrikeUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingStrikeUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingStrikeUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingStrikeUnitOfMeasure["Grams"] = "g";
    UnderlyingStrikeUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingStrikeUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingStrikeUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingStrikeUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingStrikeUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingStrikeUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingStrikeUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingStrikeUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingStrikeUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingStrikeUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingStrikeUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingStrikeUnitOfMeasure["Liters"] = "L";
    UnderlyingStrikeUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingStrikeUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingStrikeUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingStrikeUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingStrikeUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingStrikeUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingStrikeUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingStrikeUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingStrikeUnitOfMeasure["MetricTons"] = "t";
    UnderlyingStrikeUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingStrikeUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingStrikeUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingStrikeUnitOfMeasure = exports.UnderlyingStrikeUnitOfMeasure || (exports.UnderlyingStrikeUnitOfMeasure = {}));
var UnderlyingStrategyType;
(function (UnderlyingStrategyType) {
    UnderlyingStrategyType["Straddle"] = "STD";
    UnderlyingStrategyType["Strangle"] = "STG";
    UnderlyingStrategyType["Butterfly"] = "BF";
    UnderlyingStrategyType["Condor"] = "CNDR";
    UnderlyingStrategyType["CallableInversibleSnowball"] = "CISN";
    UnderlyingStrategyType["Other"] = "OTHER";
})(UnderlyingStrategyType = exports.UnderlyingStrategyType || (exports.UnderlyingStrategyType = {}));
var UnderlyingSettlDisruptionProvision;
(function (UnderlyingSettlDisruptionProvision) {
    UnderlyingSettlDisruptionProvision[UnderlyingSettlDisruptionProvision["Negotiation"] = 1] = "Negotiation";
    UnderlyingSettlDisruptionProvision[UnderlyingSettlDisruptionProvision["CancellationAndPayment"] = 2] = "CancellationAndPayment";
})(UnderlyingSettlDisruptionProvision = exports.UnderlyingSettlDisruptionProvision || (exports.UnderlyingSettlDisruptionProvision = {}));
var UnderlyingInstrumentRoundingDirection;
(function (UnderlyingInstrumentRoundingDirection) {
    UnderlyingInstrumentRoundingDirection["RoundToNearest"] = "0";
    UnderlyingInstrumentRoundingDirection["RoundDown"] = "1";
    UnderlyingInstrumentRoundingDirection["RoundUp"] = "2";
})(UnderlyingInstrumentRoundingDirection = exports.UnderlyingInstrumentRoundingDirection || (exports.UnderlyingInstrumentRoundingDirection = {}));
var RiskLimitReportStatus;
(function (RiskLimitReportStatus) {
    RiskLimitReportStatus[RiskLimitReportStatus["Accepted"] = 0] = "Accepted";
    RiskLimitReportStatus[RiskLimitReportStatus["Rejected"] = 1] = "Rejected";
})(RiskLimitReportStatus = exports.RiskLimitReportStatus || (exports.RiskLimitReportStatus = {}));
var RiskLimitReportRejectReason;
(function (RiskLimitReportRejectReason) {
    RiskLimitReportRejectReason[RiskLimitReportRejectReason["UnknownRiskLimitReportId1667"] = 0] = "UnknownRiskLimitReportId1667";
    RiskLimitReportRejectReason[RiskLimitReportRejectReason["UnknownParty"] = 1] = "UnknownParty";
    RiskLimitReportRejectReason[RiskLimitReportRejectReason["Other"] = 99] = "Other";
})(RiskLimitReportRejectReason = exports.RiskLimitReportRejectReason || (exports.RiskLimitReportRejectReason = {}));
var RiskLimitCheckTransType;
(function (RiskLimitCheckTransType) {
    RiskLimitCheckTransType[RiskLimitCheckTransType["New"] = 0] = "New";
    RiskLimitCheckTransType[RiskLimitCheckTransType["Cancel"] = 1] = "Cancel";
    RiskLimitCheckTransType[RiskLimitCheckTransType["Replace"] = 2] = "Replace";
})(RiskLimitCheckTransType = exports.RiskLimitCheckTransType || (exports.RiskLimitCheckTransType = {}));
var RiskLimitCheckType;
(function (RiskLimitCheckType) {
    RiskLimitCheckType[RiskLimitCheckType["Submit"] = 0] = "Submit";
    RiskLimitCheckType[RiskLimitCheckType["LimitConsumed"] = 1] = "LimitConsumed";
})(RiskLimitCheckType = exports.RiskLimitCheckType || (exports.RiskLimitCheckType = {}));
var RiskLimitCheckRequestType;
(function (RiskLimitCheckRequestType) {
    RiskLimitCheckRequestType[RiskLimitCheckRequestType["AllOrNoneDefaultIfNotSpecified"] = 0] = "AllOrNoneDefaultIfNotSpecified";
    RiskLimitCheckRequestType[RiskLimitCheckRequestType["Partial"] = 1] = "Partial";
})(RiskLimitCheckRequestType = exports.RiskLimitCheckRequestType || (exports.RiskLimitCheckRequestType = {}));
var RiskLimitCheckRequestStatus;
(function (RiskLimitCheckRequestStatus) {
    RiskLimitCheckRequestStatus[RiskLimitCheckRequestStatus["Approved"] = 0] = "Approved";
    RiskLimitCheckRequestStatus[RiskLimitCheckRequestStatus["PartiallyApproved"] = 1] = "PartiallyApproved";
    RiskLimitCheckRequestStatus[RiskLimitCheckRequestStatus["Rejected"] = 2] = "Rejected";
    RiskLimitCheckRequestStatus[RiskLimitCheckRequestStatus["ApprovalPending"] = 3] = "ApprovalPending";
    RiskLimitCheckRequestStatus[RiskLimitCheckRequestStatus["Cancelled"] = 4] = "Cancelled";
})(RiskLimitCheckRequestStatus = exports.RiskLimitCheckRequestStatus || (exports.RiskLimitCheckRequestStatus = {}));
var RiskLimitCheckRequestResult;
(function (RiskLimitCheckRequestResult) {
    RiskLimitCheckRequestResult[RiskLimitCheckRequestResult["SuccessfulDefault"] = 0] = "SuccessfulDefault";
    RiskLimitCheckRequestResult[RiskLimitCheckRequestResult["InvalidParty"] = 1] = "InvalidParty";
    RiskLimitCheckRequestResult[RiskLimitCheckRequestResult["RequestedAmountExceedsCreditLimit"] = 2] = "RequestedAmountExceedsCreditLimit";
    RiskLimitCheckRequestResult[RiskLimitCheckRequestResult["RequestedAmountExceedsClipSizeLimit"] = 3] = "RequestedAmountExceedsClipSizeLimit";
    RiskLimitCheckRequestResult[RiskLimitCheckRequestResult["RequestExceedsMaximumNotionalOrderAmount"] = 4] = "RequestExceedsMaximumNotionalOrderAmount";
    RiskLimitCheckRequestResult[RiskLimitCheckRequestResult["Other"] = 99] = "Other";
})(RiskLimitCheckRequestResult = exports.RiskLimitCheckRequestResult || (exports.RiskLimitCheckRequestResult = {}));
var PartyActionType;
(function (PartyActionType) {
    PartyActionType[PartyActionType["Suspend"] = 0] = "Suspend";
    PartyActionType[PartyActionType["HaltTrading"] = 1] = "HaltTrading";
    PartyActionType[PartyActionType["Reinstate"] = 2] = "Reinstate";
})(PartyActionType = exports.PartyActionType || (exports.PartyActionType = {}));
var PartyActionResponse;
(function (PartyActionResponse) {
    PartyActionResponse[PartyActionResponse["Accepted"] = 0] = "Accepted";
    PartyActionResponse[PartyActionResponse["Completed"] = 1] = "Completed";
    PartyActionResponse[PartyActionResponse["Rejected"] = 2] = "Rejected";
})(PartyActionResponse = exports.PartyActionResponse || (exports.PartyActionResponse = {}));
var PartyActionRejectReason;
(function (PartyActionRejectReason) {
    PartyActionRejectReason[PartyActionRejectReason["InvalidPartyOrParties"] = 0] = "InvalidPartyOrParties";
    PartyActionRejectReason[PartyActionRejectReason["UnknownRequestingParty"] = 1] = "UnknownRequestingParty";
    PartyActionRejectReason[PartyActionRejectReason["NotAuthorized"] = 98] = "NotAuthorized";
    PartyActionRejectReason[PartyActionRejectReason["Other"] = 99] = "Other";
})(PartyActionRejectReason = exports.PartyActionRejectReason || (exports.PartyActionRejectReason = {}));
var RefRiskLimitCheckIDType;
(function (RefRiskLimitCheckIDType) {
    RefRiskLimitCheckIDType[RefRiskLimitCheckIDType["RiskLimitRequestId1666"] = 0] = "RiskLimitRequestId1666";
    RefRiskLimitCheckIDType[RefRiskLimitCheckIDType["RiskLimitCheckId2319"] = 1] = "RiskLimitCheckId2319";
    RefRiskLimitCheckIDType[RefRiskLimitCheckIDType["OutOfBandIdentifier"] = 3] = "OutOfBandIdentifier";
})(RefRiskLimitCheckIDType = exports.RefRiskLimitCheckIDType || (exports.RefRiskLimitCheckIDType = {}));
var RiskLimitVelocityUnit;
(function (RiskLimitVelocityUnit) {
    RiskLimitVelocityUnit["Hour"] = "H";
    RiskLimitVelocityUnit["Minute"] = "Min";
    RiskLimitVelocityUnit["Second"] = "S";
    RiskLimitVelocityUnit["Day"] = "D";
    RiskLimitVelocityUnit["Week"] = "Wk";
    RiskLimitVelocityUnit["Month"] = "Mo";
    RiskLimitVelocityUnit["Year"] = "Yr";
    RiskLimitVelocityUnit["Quarter"] = "Q";
})(RiskLimitVelocityUnit = exports.RiskLimitVelocityUnit || (exports.RiskLimitVelocityUnit = {}));
var RequestingPartyRoleQualifier;
(function (RequestingPartyRoleQualifier) {
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["Agency"] = 0] = "Agency";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["Principal"] = 1] = "Principal";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["Bank"] = 7] = "Bank";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["Hub"] = 8] = "Hub";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["Current"] = 18] = "Current";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["New"] = 19] = "New";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    RequestingPartyRoleQualifier[RequestingPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(RequestingPartyRoleQualifier = exports.RequestingPartyRoleQualifier || (exports.RequestingPartyRoleQualifier = {}));
var RiskLimitCheckModelType;
(function (RiskLimitCheckModelType) {
    RiskLimitCheckModelType[RiskLimitCheckModelType["NoneDefaultIfNotSpecified"] = 0] = "NoneDefaultIfNotSpecified";
    RiskLimitCheckModelType[RiskLimitCheckModelType["PlusOneModel"] = 1] = "PlusOneModel";
    RiskLimitCheckModelType[RiskLimitCheckModelType["PingModel"] = 2] = "PingModel";
    RiskLimitCheckModelType[RiskLimitCheckModelType["PushModel"] = 3] = "PushModel";
})(RiskLimitCheckModelType = exports.RiskLimitCheckModelType || (exports.RiskLimitCheckModelType = {}));
var RiskLimitCheckStatus;
(function (RiskLimitCheckStatus) {
    RiskLimitCheckStatus[RiskLimitCheckStatus["Accepted"] = 0] = "Accepted";
    RiskLimitCheckStatus[RiskLimitCheckStatus["Rejected"] = 1] = "Rejected";
    RiskLimitCheckStatus[RiskLimitCheckStatus["ClaimRequired"] = 2] = "ClaimRequired";
    RiskLimitCheckStatus[RiskLimitCheckStatus["PreDefinedLimitCheckSucceeded"] = 3] = "PreDefinedLimitCheckSucceeded";
    RiskLimitCheckStatus[RiskLimitCheckStatus["PreDefinedLimitCheckFailed"] = 4] = "PreDefinedLimitCheckFailed";
    RiskLimitCheckStatus[RiskLimitCheckStatus["PreDefinedAutoAcceptRuleInvoked"] = 5] = "PreDefinedAutoAcceptRuleInvoked";
    RiskLimitCheckStatus[RiskLimitCheckStatus["PreDefinedAutoRejectRuleInvoked"] = 6] = "PreDefinedAutoRejectRuleInvoked";
    RiskLimitCheckStatus[RiskLimitCheckStatus["AcceptedByClearingFirm"] = 7] = "AcceptedByClearingFirm";
    RiskLimitCheckStatus[RiskLimitCheckStatus["RejectedByClearingFirm"] = 8] = "RejectedByClearingFirm";
    RiskLimitCheckStatus[RiskLimitCheckStatus["Pending"] = 9] = "Pending";
    RiskLimitCheckStatus[RiskLimitCheckStatus["AcceptedByCreditHub"] = 10] = "AcceptedByCreditHub";
    RiskLimitCheckStatus[RiskLimitCheckStatus["RejectedByCreditHub"] = 11] = "RejectedByCreditHub";
    RiskLimitCheckStatus[RiskLimitCheckStatus["PendingCreditHubCheck"] = 12] = "PendingCreditHubCheck";
    RiskLimitCheckStatus[RiskLimitCheckStatus["AcceptedByExecutionVenue"] = 13] = "AcceptedByExecutionVenue";
    RiskLimitCheckStatus[RiskLimitCheckStatus["RejectedByExecutionVenue"] = 14] = "RejectedByExecutionVenue";
})(RiskLimitCheckStatus = exports.RiskLimitCheckStatus || (exports.RiskLimitCheckStatus = {}));
var SideRiskLimitCheckStatus;
(function (SideRiskLimitCheckStatus) {
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["Accepted"] = 0] = "Accepted";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["Rejected"] = 1] = "Rejected";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["ClaimRequired"] = 2] = "ClaimRequired";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["PreDefinedLimitCheckSucceeded"] = 3] = "PreDefinedLimitCheckSucceeded";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["PreDefinedLimitCheckFailed"] = 4] = "PreDefinedLimitCheckFailed";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["PreDefinedAutoAcceptRuleInvoked"] = 5] = "PreDefinedAutoAcceptRuleInvoked";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["PreDefinedAutoRejectRuleInvoked"] = 6] = "PreDefinedAutoRejectRuleInvoked";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["AcceptedByClearingFirm"] = 7] = "AcceptedByClearingFirm";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["RejectedByClearingFirm"] = 8] = "RejectedByClearingFirm";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["Pending"] = 9] = "Pending";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["AcceptedByCreditHub"] = 10] = "AcceptedByCreditHub";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["RejectedByCreditHub"] = 11] = "RejectedByCreditHub";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["PendingCreditHubCheck"] = 12] = "PendingCreditHubCheck";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["AcceptedByExecutionVenue"] = 13] = "AcceptedByExecutionVenue";
    SideRiskLimitCheckStatus[SideRiskLimitCheckStatus["RejectedByExecutionVenue"] = 14] = "RejectedByExecutionVenue";
})(SideRiskLimitCheckStatus = exports.SideRiskLimitCheckStatus || (exports.SideRiskLimitCheckStatus = {}));
var RegulatoryTransactionType;
(function (RegulatoryTransactionType) {
    RegulatoryTransactionType[RegulatoryTransactionType["NoneDefaultIfNotSpecified"] = 0] = "NoneDefaultIfNotSpecified";
    RegulatoryTransactionType[RegulatoryTransactionType["SwapExecutionFacilitySefRequiredTransaction"] = 1] = "SwapExecutionFacilitySefRequiredTransaction";
    RegulatoryTransactionType[RegulatoryTransactionType["SwapExecutionFacilitySefPermittedTransaction"] = 2] = "SwapExecutionFacilitySefPermittedTransaction";
})(RegulatoryTransactionType = exports.RegulatoryTransactionType || (exports.RegulatoryTransactionType = {}));
var LegAssetGroup;
(function (LegAssetGroup) {
    LegAssetGroup[LegAssetGroup["Financials"] = 1] = "Financials";
    LegAssetGroup[LegAssetGroup["Commodities"] = 2] = "Commodities";
    LegAssetGroup[LegAssetGroup["AlternativeInvestments"] = 3] = "AlternativeInvestments";
})(LegAssetGroup = exports.LegAssetGroup || (exports.LegAssetGroup = {}));
var PartyRiskLimitStatus;
(function (PartyRiskLimitStatus) {
    PartyRiskLimitStatus[PartyRiskLimitStatus["Disabled"] = 0] = "Disabled";
    PartyRiskLimitStatus[PartyRiskLimitStatus["Enabled"] = 1] = "Enabled";
})(PartyRiskLimitStatus = exports.PartyRiskLimitStatus || (exports.PartyRiskLimitStatus = {}));
var RemunerationIndicator;
(function (RemunerationIndicator) {
    RemunerationIndicator[RemunerationIndicator["NoRemunerationPaid"] = 0] = "NoRemunerationPaid";
    RemunerationIndicator[RemunerationIndicator["RemunerationPaid"] = 1] = "RemunerationPaid";
})(RemunerationIndicator = exports.RemunerationIndicator || (exports.RemunerationIndicator = {}));
var PosReportAction;
(function (PosReportAction) {
    PosReportAction[PosReportAction["New"] = 1] = "New";
    PosReportAction[PosReportAction["Replace"] = 2] = "Replace";
    PosReportAction[PosReportAction["Cancel"] = 3] = "Cancel";
    PosReportAction[PosReportAction["Reverse"] = 4] = "Reverse";
})(PosReportAction = exports.PosReportAction || (exports.PosReportAction = {}));
var SettlPriceFxRateCalc;
(function (SettlPriceFxRateCalc) {
    SettlPriceFxRateCalc["Multiply"] = "M";
    SettlPriceFxRateCalc["Divide"] = "D";
})(SettlPriceFxRateCalc = exports.SettlPriceFxRateCalc || (exports.SettlPriceFxRateCalc = {}));
var TaxonomyType;
(function (TaxonomyType) {
    TaxonomyType["IsinOrAlternateInstrumentIdentifierPlusCfi"] = "I";
    TaxonomyType["InterimTaxonomy"] = "E";
})(TaxonomyType = exports.TaxonomyType || (exports.TaxonomyType = {}));
var PartyRoleQualifier;
(function (PartyRoleQualifier) {
    PartyRoleQualifier[PartyRoleQualifier["Agency"] = 0] = "Agency";
    PartyRoleQualifier[PartyRoleQualifier["Principal"] = 1] = "Principal";
    PartyRoleQualifier[PartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    PartyRoleQualifier[PartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    PartyRoleQualifier[PartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    PartyRoleQualifier[PartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    PartyRoleQualifier[PartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    PartyRoleQualifier[PartyRoleQualifier["Bank"] = 7] = "Bank";
    PartyRoleQualifier[PartyRoleQualifier["Hub"] = 8] = "Hub";
    PartyRoleQualifier[PartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    PartyRoleQualifier[PartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    PartyRoleQualifier[PartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    PartyRoleQualifier[PartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    PartyRoleQualifier[PartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    PartyRoleQualifier[PartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    PartyRoleQualifier[PartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    PartyRoleQualifier[PartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    PartyRoleQualifier[PartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    PartyRoleQualifier[PartyRoleQualifier["Current"] = 18] = "Current";
    PartyRoleQualifier[PartyRoleQualifier["New"] = 19] = "New";
    PartyRoleQualifier[PartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    PartyRoleQualifier[PartyRoleQualifier["Specialist"] = 21] = "Specialist";
    PartyRoleQualifier[PartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    PartyRoleQualifier[PartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    PartyRoleQualifier[PartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    PartyRoleQualifier[PartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    PartyRoleQualifier[PartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    PartyRoleQualifier[PartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(PartyRoleQualifier = exports.PartyRoleQualifier || (exports.PartyRoleQualifier = {}));
var DerivativeInstrumentPartyRoleQualifier;
(function (DerivativeInstrumentPartyRoleQualifier) {
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["Agency"] = 0] = "Agency";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["Principal"] = 1] = "Principal";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["Bank"] = 7] = "Bank";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["Hub"] = 8] = "Hub";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["Current"] = 18] = "Current";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["New"] = 19] = "New";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    DerivativeInstrumentPartyRoleQualifier[DerivativeInstrumentPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(DerivativeInstrumentPartyRoleQualifier = exports.DerivativeInstrumentPartyRoleQualifier || (exports.DerivativeInstrumentPartyRoleQualifier = {}));
var InstrumentPartyRoleQualifier;
(function (InstrumentPartyRoleQualifier) {
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["Agency"] = 0] = "Agency";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["Principal"] = 1] = "Principal";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["Bank"] = 7] = "Bank";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["Hub"] = 8] = "Hub";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["Current"] = 18] = "Current";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["New"] = 19] = "New";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    InstrumentPartyRoleQualifier[InstrumentPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(InstrumentPartyRoleQualifier = exports.InstrumentPartyRoleQualifier || (exports.InstrumentPartyRoleQualifier = {}));
var LegInstrumentPartyRoleQualifier;
(function (LegInstrumentPartyRoleQualifier) {
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["Agency"] = 0] = "Agency";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["Principal"] = 1] = "Principal";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["Bank"] = 7] = "Bank";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["Hub"] = 8] = "Hub";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["Current"] = 18] = "Current";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["New"] = 19] = "New";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    LegInstrumentPartyRoleQualifier[LegInstrumentPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(LegInstrumentPartyRoleQualifier = exports.LegInstrumentPartyRoleQualifier || (exports.LegInstrumentPartyRoleQualifier = {}));
var LegProvisionPartyRoleQualifier;
(function (LegProvisionPartyRoleQualifier) {
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["Agency"] = 0] = "Agency";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["Principal"] = 1] = "Principal";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["Bank"] = 7] = "Bank";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["Hub"] = 8] = "Hub";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["Current"] = 18] = "Current";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["New"] = 19] = "New";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    LegProvisionPartyRoleQualifier[LegProvisionPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(LegProvisionPartyRoleQualifier = exports.LegProvisionPartyRoleQualifier || (exports.LegProvisionPartyRoleQualifier = {}));
var Nested2PartyRoleQualifier;
(function (Nested2PartyRoleQualifier) {
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["Agency"] = 0] = "Agency";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["Principal"] = 1] = "Principal";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["Bank"] = 7] = "Bank";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["Hub"] = 8] = "Hub";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["Current"] = 18] = "Current";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["New"] = 19] = "New";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["Specialist"] = 21] = "Specialist";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    Nested2PartyRoleQualifier[Nested2PartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(Nested2PartyRoleQualifier = exports.Nested2PartyRoleQualifier || (exports.Nested2PartyRoleQualifier = {}));
var Nested3PartyRoleQualifier;
(function (Nested3PartyRoleQualifier) {
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["Agency"] = 0] = "Agency";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["Principal"] = 1] = "Principal";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["Bank"] = 7] = "Bank";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["Hub"] = 8] = "Hub";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["Current"] = 18] = "Current";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["New"] = 19] = "New";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["Specialist"] = 21] = "Specialist";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    Nested3PartyRoleQualifier[Nested3PartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(Nested3PartyRoleQualifier = exports.Nested3PartyRoleQualifier || (exports.Nested3PartyRoleQualifier = {}));
var Nested4PartyRoleQualifier;
(function (Nested4PartyRoleQualifier) {
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["Agency"] = 0] = "Agency";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["Principal"] = 1] = "Principal";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["Bank"] = 7] = "Bank";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["Hub"] = 8] = "Hub";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["Current"] = 18] = "Current";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["New"] = 19] = "New";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["Specialist"] = 21] = "Specialist";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    Nested4PartyRoleQualifier[Nested4PartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(Nested4PartyRoleQualifier = exports.Nested4PartyRoleQualifier || (exports.Nested4PartyRoleQualifier = {}));
var NestedPartyRoleQualifier;
(function (NestedPartyRoleQualifier) {
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["Agency"] = 0] = "Agency";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["Principal"] = 1] = "Principal";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["Bank"] = 7] = "Bank";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["Hub"] = 8] = "Hub";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["Current"] = 18] = "Current";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["New"] = 19] = "New";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    NestedPartyRoleQualifier[NestedPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(NestedPartyRoleQualifier = exports.NestedPartyRoleQualifier || (exports.NestedPartyRoleQualifier = {}));
var ProvisionPartyRoleQualifier;
(function (ProvisionPartyRoleQualifier) {
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["Agency"] = 0] = "Agency";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["Principal"] = 1] = "Principal";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["Bank"] = 7] = "Bank";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["Hub"] = 8] = "Hub";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["Current"] = 18] = "Current";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["New"] = 19] = "New";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    ProvisionPartyRoleQualifier[ProvisionPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(ProvisionPartyRoleQualifier = exports.ProvisionPartyRoleQualifier || (exports.ProvisionPartyRoleQualifier = {}));
var RequestedPartyRoleQualifier;
(function (RequestedPartyRoleQualifier) {
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["Agency"] = 0] = "Agency";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["Principal"] = 1] = "Principal";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["Bank"] = 7] = "Bank";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["Hub"] = 8] = "Hub";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["Current"] = 18] = "Current";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["New"] = 19] = "New";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    RequestedPartyRoleQualifier[RequestedPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(RequestedPartyRoleQualifier = exports.RequestedPartyRoleQualifier || (exports.RequestedPartyRoleQualifier = {}));
var TradeContingency;
(function (TradeContingency) {
    TradeContingency[TradeContingency["DoesNotApplyDefaultIfNotSpecified"] = 0] = "DoesNotApplyDefaultIfNotSpecified";
    TradeContingency[TradeContingency["ContingentTrade"] = 1] = "ContingentTrade";
    TradeContingency[TradeContingency["NonContingentTrade"] = 2] = "NonContingentTrade";
})(TradeContingency = exports.TradeContingency || (exports.TradeContingency = {}));
var RootPartyRoleQualifier;
(function (RootPartyRoleQualifier) {
    RootPartyRoleQualifier[RootPartyRoleQualifier["Agency"] = 0] = "Agency";
    RootPartyRoleQualifier[RootPartyRoleQualifier["Principal"] = 1] = "Principal";
    RootPartyRoleQualifier[RootPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    RootPartyRoleQualifier[RootPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    RootPartyRoleQualifier[RootPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    RootPartyRoleQualifier[RootPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    RootPartyRoleQualifier[RootPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    RootPartyRoleQualifier[RootPartyRoleQualifier["Bank"] = 7] = "Bank";
    RootPartyRoleQualifier[RootPartyRoleQualifier["Hub"] = 8] = "Hub";
    RootPartyRoleQualifier[RootPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    RootPartyRoleQualifier[RootPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    RootPartyRoleQualifier[RootPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    RootPartyRoleQualifier[RootPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    RootPartyRoleQualifier[RootPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    RootPartyRoleQualifier[RootPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    RootPartyRoleQualifier[RootPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    RootPartyRoleQualifier[RootPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    RootPartyRoleQualifier[RootPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    RootPartyRoleQualifier[RootPartyRoleQualifier["Current"] = 18] = "Current";
    RootPartyRoleQualifier[RootPartyRoleQualifier["New"] = 19] = "New";
    RootPartyRoleQualifier[RootPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    RootPartyRoleQualifier[RootPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    RootPartyRoleQualifier[RootPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    RootPartyRoleQualifier[RootPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    RootPartyRoleQualifier[RootPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    RootPartyRoleQualifier[RootPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    RootPartyRoleQualifier[RootPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    RootPartyRoleQualifier[RootPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(RootPartyRoleQualifier = exports.RootPartyRoleQualifier || (exports.RootPartyRoleQualifier = {}));
var SettlPartyRoleQualifier;
(function (SettlPartyRoleQualifier) {
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["Agency"] = 0] = "Agency";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["Principal"] = 1] = "Principal";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["Bank"] = 7] = "Bank";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["Hub"] = 8] = "Hub";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["Current"] = 18] = "Current";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["New"] = 19] = "New";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    SettlPartyRoleQualifier[SettlPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(SettlPartyRoleQualifier = exports.SettlPartyRoleQualifier || (exports.SettlPartyRoleQualifier = {}));
var UnderlyingInstrumentPartyRoleQualifier;
(function (UnderlyingInstrumentPartyRoleQualifier) {
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["Agency"] = 0] = "Agency";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["Principal"] = 1] = "Principal";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["Bank"] = 7] = "Bank";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["Hub"] = 8] = "Hub";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["Current"] = 18] = "Current";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["New"] = 19] = "New";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    UnderlyingInstrumentPartyRoleQualifier[UnderlyingInstrumentPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(UnderlyingInstrumentPartyRoleQualifier = exports.UnderlyingInstrumentPartyRoleQualifier || (exports.UnderlyingInstrumentPartyRoleQualifier = {}));
var AllocRefRiskLimitCheckIDType;
(function (AllocRefRiskLimitCheckIDType) {
    AllocRefRiskLimitCheckIDType[AllocRefRiskLimitCheckIDType["RiskLimitRequestId1666"] = 0] = "RiskLimitRequestId1666";
    AllocRefRiskLimitCheckIDType[AllocRefRiskLimitCheckIDType["RiskLimitCheckId2319"] = 1] = "RiskLimitCheckId2319";
    AllocRefRiskLimitCheckIDType[AllocRefRiskLimitCheckIDType["OutOfBandIdentifier"] = 3] = "OutOfBandIdentifier";
})(AllocRefRiskLimitCheckIDType = exports.AllocRefRiskLimitCheckIDType || (exports.AllocRefRiskLimitCheckIDType = {}));
var LimitRole;
(function (LimitRole) {
    LimitRole[LimitRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    LimitRole[LimitRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    LimitRole[LimitRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    LimitRole[LimitRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    LimitRole[LimitRole["InvestorId"] = 5] = "InvestorId";
    LimitRole[LimitRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    LimitRole[LimitRole["EnteringFirm"] = 7] = "EnteringFirm";
    LimitRole[LimitRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    LimitRole[LimitRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    LimitRole[LimitRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    LimitRole[LimitRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    LimitRole[LimitRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    LimitRole[LimitRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    LimitRole[LimitRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    LimitRole[LimitRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    LimitRole[LimitRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    LimitRole[LimitRole["ContraFirm"] = 17] = "ContraFirm";
    LimitRole[LimitRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    LimitRole[LimitRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    LimitRole[LimitRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    LimitRole[LimitRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    LimitRole[LimitRole["Exchange"] = 22] = "Exchange";
    LimitRole[LimitRole["CustomerAccount"] = 24] = "CustomerAccount";
    LimitRole[LimitRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    LimitRole[LimitRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    LimitRole[LimitRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    LimitRole[LimitRole["Custodian"] = 28] = "Custodian";
    LimitRole[LimitRole["Intermediary"] = 29] = "Intermediary";
    LimitRole[LimitRole["Agent"] = 30] = "Agent";
    LimitRole[LimitRole["SubCustodian"] = 31] = "SubCustodian";
    LimitRole[LimitRole["Beneficiary"] = 32] = "Beneficiary";
    LimitRole[LimitRole["InterestedParty"] = 33] = "InterestedParty";
    LimitRole[LimitRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    LimitRole[LimitRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    LimitRole[LimitRole["EnteringTrader"] = 36] = "EnteringTrader";
    LimitRole[LimitRole["ContraTrader"] = 37] = "ContraTrader";
    LimitRole[LimitRole["PositionAccount"] = 38] = "PositionAccount";
    LimitRole[LimitRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    LimitRole[LimitRole["TransferToFirm"] = 40] = "TransferToFirm";
    LimitRole[LimitRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    LimitRole[LimitRole["ContraExchange"] = 42] = "ContraExchange";
    LimitRole[LimitRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    LimitRole[LimitRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    LimitRole[LimitRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    LimitRole[LimitRole["ForeignFirm"] = 46] = "ForeignFirm";
    LimitRole[LimitRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    LimitRole[LimitRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    LimitRole[LimitRole["AssetManager"] = 49] = "AssetManager";
    LimitRole[LimitRole["PledgorAccount"] = 50] = "PledgorAccount";
    LimitRole[LimitRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    LimitRole[LimitRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    LimitRole[LimitRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    LimitRole[LimitRole["SenderLocation"] = 54] = "SenderLocation";
    LimitRole[LimitRole["SessionId"] = 55] = "SessionId";
    LimitRole[LimitRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    LimitRole[LimitRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    LimitRole[LimitRole["EnteringUnit"] = 58] = "EnteringUnit";
    LimitRole[LimitRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    LimitRole[LimitRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    LimitRole[LimitRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    LimitRole[LimitRole["ReportOriginator"] = 62] = "ReportOriginator";
    LimitRole[LimitRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    LimitRole[LimitRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    LimitRole[LimitRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    LimitRole[LimitRole["MarketMaker"] = 66] = "MarketMaker";
    LimitRole[LimitRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    LimitRole[LimitRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    LimitRole[LimitRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    LimitRole[LimitRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    LimitRole[LimitRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    LimitRole[LimitRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    LimitRole[LimitRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    LimitRole[LimitRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    LimitRole[LimitRole["LocationId"] = 75] = "LocationId";
    LimitRole[LimitRole["DeskId"] = 76] = "DeskId";
    LimitRole[LimitRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    LimitRole[LimitRole["AllocationEntity"] = 78] = "AllocationEntity";
    LimitRole[LimitRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    LimitRole[LimitRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    LimitRole[LimitRole["BrokerCientId"] = 81] = "BrokerCientId";
    LimitRole[LimitRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    LimitRole[LimitRole["ClearingAccount"] = 83] = "ClearingAccount";
    LimitRole[LimitRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    LimitRole[LimitRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    LimitRole[LimitRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    LimitRole[LimitRole["InConcertGroup"] = 87] = "InConcertGroup";
    LimitRole[LimitRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    LimitRole[LimitRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    LimitRole[LimitRole["SettlementFirm"] = 90] = "SettlementFirm";
    LimitRole[LimitRole["SettlementAccount"] = 91] = "SettlementAccount";
    LimitRole[LimitRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    LimitRole[LimitRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    LimitRole[LimitRole["AwayMarket"] = 94] = "AwayMarket";
    LimitRole[LimitRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    LimitRole[LimitRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    LimitRole[LimitRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    LimitRole[LimitRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    LimitRole[LimitRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    LimitRole[LimitRole["MarginAccount"] = 100] = "MarginAccount";
    LimitRole[LimitRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    LimitRole[LimitRole["DataRepository"] = 102] = "DataRepository";
    LimitRole[LimitRole["CalculationAgent"] = 103] = "CalculationAgent";
    LimitRole[LimitRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    LimitRole[LimitRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    LimitRole[LimitRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    LimitRole[LimitRole["Correspondent"] = 107] = "Correspondent";
    LimitRole[LimitRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    LimitRole[LimitRole["Borrower"] = 110] = "Borrower";
    LimitRole[LimitRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    LimitRole[LimitRole["Guarantor"] = 112] = "Guarantor";
    LimitRole[LimitRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    LimitRole[LimitRole["DeterminingParty"] = 114] = "DeterminingParty";
    LimitRole[LimitRole["HedgingParty"] = 115] = "HedgingParty";
    LimitRole[LimitRole["ReportingEntity"] = 116] = "ReportingEntity";
    LimitRole[LimitRole["SalesPerson"] = 117] = "SalesPerson";
    LimitRole[LimitRole["Operator"] = 118] = "Operator";
    LimitRole[LimitRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    LimitRole[LimitRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    LimitRole[LimitRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    LimitRole[LimitRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(LimitRole = exports.LimitRole || (exports.LimitRole = {}));
var RegulatoryTradeIDScope;
(function (RegulatoryTradeIDScope) {
    RegulatoryTradeIDScope[RegulatoryTradeIDScope["ClearingMember"] = 1] = "ClearingMember";
    RegulatoryTradeIDScope[RegulatoryTradeIDScope["Client"] = 2] = "Client";
})(RegulatoryTradeIDScope = exports.RegulatoryTradeIDScope || (exports.RegulatoryTradeIDScope = {}));
var SideRegulatoryTradeIDScope;
(function (SideRegulatoryTradeIDScope) {
    SideRegulatoryTradeIDScope[SideRegulatoryTradeIDScope["ClearingMember"] = 1] = "ClearingMember";
    SideRegulatoryTradeIDScope[SideRegulatoryTradeIDScope["Client"] = 2] = "Client";
})(SideRegulatoryTradeIDScope = exports.SideRegulatoryTradeIDScope || (exports.SideRegulatoryTradeIDScope = {}));
var AllocRegulatoryTradeIDScope;
(function (AllocRegulatoryTradeIDScope) {
    AllocRegulatoryTradeIDScope[AllocRegulatoryTradeIDScope["ClearingMember"] = 1] = "ClearingMember";
    AllocRegulatoryTradeIDScope[AllocRegulatoryTradeIDScope["Client"] = 2] = "Client";
})(AllocRegulatoryTradeIDScope = exports.AllocRegulatoryTradeIDScope || (exports.AllocRegulatoryTradeIDScope = {}));
var EntitlementSubType;
(function (EntitlementSubType) {
    EntitlementSubType[EntitlementSubType["OrderEntry"] = 1] = "OrderEntry";
    EntitlementSubType[EntitlementSubType["HitLift"] = 2] = "HitLift";
    EntitlementSubType[EntitlementSubType["ViewIndicativePrices"] = 3] = "ViewIndicativePrices";
    EntitlementSubType[EntitlementSubType["ViewExecutablePrices"] = 4] = "ViewExecutablePrices";
    EntitlementSubType[EntitlementSubType["SingleQuote"] = 5] = "SingleQuote";
    EntitlementSubType[EntitlementSubType["StreamingQuotes"] = 6] = "StreamingQuotes";
    EntitlementSubType[EntitlementSubType["SingleBroker"] = 7] = "SingleBroker";
    EntitlementSubType[EntitlementSubType["MultiBrokers"] = 8] = "MultiBrokers";
})(EntitlementSubType = exports.EntitlementSubType || (exports.EntitlementSubType = {}));
var QuoteModelType;
(function (QuoteModelType) {
    QuoteModelType[QuoteModelType["QuoteEntry"] = 1] = "QuoteEntry";
    QuoteModelType[QuoteModelType["QuoteModification"] = 2] = "QuoteModification";
})(QuoteModelType = exports.QuoteModelType || (exports.QuoteModelType = {}));
var ExecMethod;
(function (ExecMethod) {
    ExecMethod[ExecMethod["UndefinedUnspecifiedDefaultWhenNotSpecified"] = 0] = "UndefinedUnspecifiedDefaultWhenNotSpecified";
    ExecMethod[ExecMethod["Manual"] = 1] = "Manual";
    ExecMethod[ExecMethod["Automated"] = 2] = "Automated";
    ExecMethod[ExecMethod["VoiceBrokered"] = 3] = "VoiceBrokered";
})(ExecMethod = exports.ExecMethod || (exports.ExecMethod = {}));
var RelatedToSecurityIDSource;
(function (RelatedToSecurityIDSource) {
    RelatedToSecurityIDSource["Cusip"] = "1";
    RelatedToSecurityIDSource["Sedol"] = "2";
    RelatedToSecurityIDSource["Quik"] = "3";
    RelatedToSecurityIDSource["IsinNumber"] = "4";
    RelatedToSecurityIDSource["RicCode"] = "5";
    RelatedToSecurityIDSource["IsoCurrencyCode"] = "6";
    RelatedToSecurityIDSource["IsoCountryCode"] = "7";
    RelatedToSecurityIDSource["ExchangeSymbol"] = "8";
    RelatedToSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    RelatedToSecurityIDSource["BloombergSymbol"] = "A";
    RelatedToSecurityIDSource["Wertpapier"] = "B";
    RelatedToSecurityIDSource["Dutch"] = "C";
    RelatedToSecurityIDSource["Valoren"] = "D";
    RelatedToSecurityIDSource["Sicovam"] = "E";
    RelatedToSecurityIDSource["Belgian"] = "F";
    RelatedToSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    RelatedToSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    RelatedToSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    RelatedToSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    RelatedToSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    RelatedToSecurityIDSource["LetterOfCredit"] = "L";
    RelatedToSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    RelatedToSecurityIDSource["MarkitRedEntityClip"] = "N";
    RelatedToSecurityIDSource["MarkitRedPairClip"] = "P";
    RelatedToSecurityIDSource["CftcCommodityCode"] = "Q";
    RelatedToSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    RelatedToSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    RelatedToSecurityIDSource["LegalEntityIdentifier"] = "T";
    RelatedToSecurityIDSource["Synthetic"] = "U";
    RelatedToSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(RelatedToSecurityIDSource = exports.RelatedToSecurityIDSource || (exports.RelatedToSecurityIDSource = {}));
var MassOrderRequestStatus;
(function (MassOrderRequestStatus) {
    MassOrderRequestStatus[MassOrderRequestStatus["Accepted"] = 1] = "Accepted";
    MassOrderRequestStatus[MassOrderRequestStatus["AcceptedWithAdditionalEvents"] = 2] = "AcceptedWithAdditionalEvents";
    MassOrderRequestStatus[MassOrderRequestStatus["Rejected"] = 3] = "Rejected";
})(MassOrderRequestStatus = exports.MassOrderRequestStatus || (exports.MassOrderRequestStatus = {}));
var MassOrderRequestResult;
(function (MassOrderRequestResult) {
    MassOrderRequestResult[MassOrderRequestResult["Successful"] = 0] = "Successful";
    MassOrderRequestResult[MassOrderRequestResult["ResponseLevelNotSupported"] = 1] = "ResponseLevelNotSupported";
    MassOrderRequestResult[MassOrderRequestResult["InvalidMarket"] = 2] = "InvalidMarket";
    MassOrderRequestResult[MassOrderRequestResult["InvalidMarketSegment"] = 3] = "InvalidMarketSegment";
    MassOrderRequestResult[MassOrderRequestResult["Other"] = 99] = "Other";
})(MassOrderRequestResult = exports.MassOrderRequestResult || (exports.MassOrderRequestResult = {}));
var OrderResponseLevel;
(function (OrderResponseLevel) {
    OrderResponseLevel[OrderResponseLevel["NoAcknowledgement"] = 0] = "NoAcknowledgement";
    OrderResponseLevel[OrderResponseLevel["MinimumAcknowledgement"] = 1] = "MinimumAcknowledgement";
    OrderResponseLevel[OrderResponseLevel["AcknowledgeEachOrder"] = 2] = "AcknowledgeEachOrder";
    OrderResponseLevel[OrderResponseLevel["SummaryAcknowledgement"] = 3] = "SummaryAcknowledgement";
})(OrderResponseLevel = exports.OrderResponseLevel || (exports.OrderResponseLevel = {}));
var OrderEntryAction;
(function (OrderEntryAction) {
    OrderEntryAction["Add"] = "1";
    OrderEntryAction["Modify"] = "2";
    OrderEntryAction["DeleteCancel"] = "3";
    OrderEntryAction["Suspend"] = "4";
    OrderEntryAction["Release"] = "5";
})(OrderEntryAction = exports.OrderEntryAction || (exports.OrderEntryAction = {}));
var ExecTypeReason;
(function (ExecTypeReason) {
    ExecTypeReason[ExecTypeReason["OrderAddedUponRequest"] = 1] = "OrderAddedUponRequest";
    ExecTypeReason[ExecTypeReason["OrderReplacedUponRequest"] = 2] = "OrderReplacedUponRequest";
    ExecTypeReason[ExecTypeReason["OrderCancelledUponRequest"] = 3] = "OrderCancelledUponRequest";
    ExecTypeReason[ExecTypeReason["UnsolicitedOrderCancellation"] = 4] = "UnsolicitedOrderCancellation";
    ExecTypeReason[ExecTypeReason["NonRestingOrderAddedUponRequest"] = 5] = "NonRestingOrderAddedUponRequest";
    ExecTypeReason[ExecTypeReason["OrderReplacedWithNonRestingOrderUponRequest"] = 6] = "OrderReplacedWithNonRestingOrderUponRequest";
    ExecTypeReason[ExecTypeReason["TriggerOrderReplacedUponRequest"] = 7] = "TriggerOrderReplacedUponRequest";
    ExecTypeReason[ExecTypeReason["SuspendedOrderReplacedUponRequest"] = 8] = "SuspendedOrderReplacedUponRequest";
    ExecTypeReason[ExecTypeReason["SuspendedOrderCanceledUponRequest"] = 9] = "SuspendedOrderCanceledUponRequest";
    ExecTypeReason[ExecTypeReason["OrderCancellationPending"] = 10] = "OrderCancellationPending";
    ExecTypeReason[ExecTypeReason["PendingCancellationExecuted"] = 11] = "PendingCancellationExecuted";
    ExecTypeReason[ExecTypeReason["RestingOrderTriggered"] = 12] = "RestingOrderTriggered";
    ExecTypeReason[ExecTypeReason["SuspendedOrderActivated"] = 13] = "SuspendedOrderActivated";
    ExecTypeReason[ExecTypeReason["ActiveOrderSuspended"] = 14] = "ActiveOrderSuspended";
    ExecTypeReason[ExecTypeReason["OrderExpired"] = 15] = "OrderExpired";
})(ExecTypeReason = exports.ExecTypeReason || (exports.ExecTypeReason = {}));
var TargetPartySubIDType;
(function (TargetPartySubIDType) {
    TargetPartySubIDType[TargetPartySubIDType["Firm"] = 1] = "Firm";
    TargetPartySubIDType[TargetPartySubIDType["Person"] = 2] = "Person";
    TargetPartySubIDType[TargetPartySubIDType["System"] = 3] = "System";
    TargetPartySubIDType[TargetPartySubIDType["Application"] = 4] = "Application";
    TargetPartySubIDType[TargetPartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    TargetPartySubIDType[TargetPartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    TargetPartySubIDType[TargetPartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    TargetPartySubIDType[TargetPartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    TargetPartySubIDType[TargetPartySubIDType["ContactName"] = 9] = "ContactName";
    TargetPartySubIDType[TargetPartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    TargetPartySubIDType[TargetPartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    TargetPartySubIDType[TargetPartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    TargetPartySubIDType[TargetPartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    TargetPartySubIDType[TargetPartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    TargetPartySubIDType[TargetPartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    TargetPartySubIDType[TargetPartySubIDType["Bic"] = 16] = "Bic";
    TargetPartySubIDType[TargetPartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    TargetPartySubIDType[TargetPartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    TargetPartySubIDType[TargetPartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    TargetPartySubIDType[TargetPartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    TargetPartySubIDType[TargetPartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    TargetPartySubIDType[TargetPartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    TargetPartySubIDType[TargetPartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    TargetPartySubIDType[TargetPartySubIDType["Department"] = 24] = "Department";
    TargetPartySubIDType[TargetPartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    TargetPartySubIDType[TargetPartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    TargetPartySubIDType[TargetPartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    TargetPartySubIDType[TargetPartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    TargetPartySubIDType[TargetPartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    TargetPartySubIDType[TargetPartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    TargetPartySubIDType[TargetPartySubIDType["Location"] = 31] = "Location";
    TargetPartySubIDType[TargetPartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    TargetPartySubIDType[TargetPartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    TargetPartySubIDType[TargetPartySubIDType["AddressCity"] = 34] = "AddressCity";
    TargetPartySubIDType[TargetPartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    TargetPartySubIDType[TargetPartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    TargetPartySubIDType[TargetPartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    TargetPartySubIDType[TargetPartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    TargetPartySubIDType[TargetPartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    TargetPartySubIDType[TargetPartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    TargetPartySubIDType[TargetPartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    TargetPartySubIDType[TargetPartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    TargetPartySubIDType[TargetPartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    TargetPartySubIDType[TargetPartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    TargetPartySubIDType[TargetPartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    TargetPartySubIDType[TargetPartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    TargetPartySubIDType[TargetPartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    TargetPartySubIDType[TargetPartySubIDType["USPerson"] = 48] = "USPerson";
    TargetPartySubIDType[TargetPartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    TargetPartySubIDType[TargetPartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    TargetPartySubIDType[TargetPartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    TargetPartySubIDType[TargetPartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    TargetPartySubIDType[TargetPartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    TargetPartySubIDType[TargetPartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    TargetPartySubIDType[TargetPartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    TargetPartySubIDType[TargetPartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    TargetPartySubIDType[TargetPartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    TargetPartySubIDType[TargetPartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    TargetPartySubIDType[TargetPartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    TargetPartySubIDType[TargetPartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    TargetPartySubIDType[TargetPartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    TargetPartySubIDType[TargetPartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    TargetPartySubIDType[TargetPartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    TargetPartySubIDType[TargetPartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    TargetPartySubIDType[TargetPartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    TargetPartySubIDType[TargetPartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    TargetPartySubIDType[TargetPartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    TargetPartySubIDType[TargetPartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    TargetPartySubIDType[TargetPartySubIDType["EndUser"] = 69] = "EndUser";
    TargetPartySubIDType[TargetPartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    TargetPartySubIDType[TargetPartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    TargetPartySubIDType[TargetPartySubIDType["Domicile"] = 72] = "Domicile";
    TargetPartySubIDType[TargetPartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    TargetPartySubIDType[TargetPartySubIDType["Payer"] = 74] = "Payer";
    TargetPartySubIDType[TargetPartySubIDType["Receiver"] = 75] = "Receiver";
    TargetPartySubIDType[TargetPartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(TargetPartySubIDType = exports.TargetPartySubIDType || (exports.TargetPartySubIDType = {}));
var TransferTransType;
(function (TransferTransType) {
    TransferTransType[TransferTransType["New"] = 0] = "New";
    TransferTransType[TransferTransType["Replace"] = 1] = "Replace";
    TransferTransType[TransferTransType["Cancel"] = 2] = "Cancel";
})(TransferTransType = exports.TransferTransType || (exports.TransferTransType = {}));
var TransferType;
(function (TransferType) {
    TransferType[TransferType["RequestTransfer"] = 0] = "RequestTransfer";
    TransferType[TransferType["AcceptTransfer"] = 1] = "AcceptTransfer";
    TransferType[TransferType["DeclineTransfer"] = 2] = "DeclineTransfer";
})(TransferType = exports.TransferType || (exports.TransferType = {}));
var TransferScope;
(function (TransferScope) {
    TransferScope[TransferScope["InterFirmTransfer"] = 0] = "InterFirmTransfer";
    TransferScope[TransferScope["IntraFirmTransfer"] = 1] = "IntraFirmTransfer";
    TransferScope[TransferScope["ClearingMemberTradeAssignment"] = 2] = "ClearingMemberTradeAssignment";
})(TransferScope = exports.TransferScope || (exports.TransferScope = {}));
var TransferStatus;
(function (TransferStatus) {
    TransferStatus[TransferStatus["Received"] = 0] = "Received";
    TransferStatus[TransferStatus["RejectedByIntermediary"] = 1] = "RejectedByIntermediary";
    TransferStatus[TransferStatus["AcceptPending"] = 2] = "AcceptPending";
    TransferStatus[TransferStatus["Accepted"] = 3] = "Accepted";
    TransferStatus[TransferStatus["Declined"] = 4] = "Declined";
    TransferStatus[TransferStatus["Cancelled"] = 5] = "Cancelled";
})(TransferStatus = exports.TransferStatus || (exports.TransferStatus = {}));
var TransferRejectReason;
(function (TransferRejectReason) {
    TransferRejectReason[TransferRejectReason["Success"] = 0] = "Success";
    TransferRejectReason[TransferRejectReason["InvalidParty"] = 1] = "InvalidParty";
    TransferRejectReason[TransferRejectReason["UnknownInstrument"] = 2] = "UnknownInstrument";
    TransferRejectReason[TransferRejectReason["NotAuthorizedToSubmitTransfers"] = 3] = "NotAuthorizedToSubmitTransfers";
    TransferRejectReason[TransferRejectReason["UnknownPosition"] = 4] = "UnknownPosition";
    TransferRejectReason[TransferRejectReason["Other"] = 99] = "Other";
})(TransferRejectReason = exports.TransferRejectReason || (exports.TransferRejectReason = {}));
var TransferReportType;
(function (TransferReportType) {
    TransferReportType[TransferReportType["Submit"] = 0] = "Submit";
    TransferReportType[TransferReportType["Alleged"] = 1] = "Alleged";
})(TransferReportType = exports.TransferReportType || (exports.TransferReportType = {}));
var AggressorSide;
(function (AggressorSide) {
    AggressorSide["Buy"] = "1";
    AggressorSide["Sell"] = "2";
    AggressorSide["BuyMinus"] = "3";
    AggressorSide["SellPlus"] = "4";
    AggressorSide["SellShort"] = "5";
    AggressorSide["SellShortExempt"] = "6";
    AggressorSide["Undisclosed"] = "7";
    AggressorSide["CrossOrdersWhereCounterpartyIsAnExchangeValidForAllMessagesExceptIoIs"] = "8";
    AggressorSide["CrossShort"] = "9";
    AggressorSide["CrossShortExempt"] = "A";
    AggressorSide["AsDefinedForUseWithMultilegInstruments"] = "B";
    AggressorSide["OppositeForUseWithMultilegInstruments"] = "C";
    AggressorSide["SubscribeEGCiv"] = "D";
    AggressorSide["RedeemEGCiv"] = "E";
    AggressorSide["LendFinancingIdentifiesDirectionOfCollateral"] = "F";
    AggressorSide["BorrowFinancingIdentifiesDirectionOfCollateral"] = "G";
    AggressorSide["SellUndisclosed"] = "H";
})(AggressorSide = exports.AggressorSide || (exports.AggressorSide = {}));
var MDStatisticType;
(function (MDStatisticType) {
    MDStatisticType[MDStatisticType["Count"] = 1] = "Count";
    MDStatisticType[MDStatisticType["AverageVolume"] = 2] = "AverageVolume";
    MDStatisticType[MDStatisticType["TotalVolume"] = 3] = "TotalVolume";
    MDStatisticType[MDStatisticType["Distribution"] = 4] = "Distribution";
    MDStatisticType[MDStatisticType["Ratio"] = 5] = "Ratio";
    MDStatisticType[MDStatisticType["Liquidity"] = 6] = "Liquidity";
    MDStatisticType[MDStatisticType["VolumeWeightedAveragePriceVwap"] = 7] = "VolumeWeightedAveragePriceVwap";
    MDStatisticType[MDStatisticType["Volatility"] = 8] = "Volatility";
    MDStatisticType[MDStatisticType["Duration"] = 9] = "Duration";
    MDStatisticType[MDStatisticType["Tick"] = 10] = "Tick";
    MDStatisticType[MDStatisticType["AverageTurnover"] = 11] = "AverageTurnover";
    MDStatisticType[MDStatisticType["TotalTurnover"] = 12] = "TotalTurnover";
    MDStatisticType[MDStatisticType["High"] = 13] = "High";
    MDStatisticType[MDStatisticType["Low"] = 14] = "Low";
    MDStatisticType[MDStatisticType["Midpoint"] = 15] = "Midpoint";
    MDStatisticType[MDStatisticType["First"] = 16] = "First";
    MDStatisticType[MDStatisticType["Last"] = 17] = "Last";
    MDStatisticType[MDStatisticType["Final"] = 18] = "Final";
    MDStatisticType[MDStatisticType["ExchangeBest"] = 19] = "ExchangeBest";
    MDStatisticType[MDStatisticType["ExchangeBestWithVolume"] = 20] = "ExchangeBestWithVolume";
    MDStatisticType[MDStatisticType["ConsolidatedBest"] = 21] = "ConsolidatedBest";
    MDStatisticType[MDStatisticType["ConsolidatedBestWithVolume"] = 22] = "ConsolidatedBestWithVolume";
    MDStatisticType[MDStatisticType["TimeWeightedAveragePriceTwap"] = 23] = "TimeWeightedAveragePriceTwap";
})(MDStatisticType = exports.MDStatisticType || (exports.MDStatisticType = {}));
var MDStatisticScope;
(function (MDStatisticScope) {
    MDStatisticScope[MDStatisticScope["BidPrices"] = 1] = "BidPrices";
    MDStatisticScope[MDStatisticScope["OfferPrices"] = 2] = "OfferPrices";
    MDStatisticScope[MDStatisticScope["BidDepth"] = 3] = "BidDepth";
    MDStatisticScope[MDStatisticScope["OfferDepth"] = 4] = "OfferDepth";
    MDStatisticScope[MDStatisticScope["Orders"] = 5] = "Orders";
    MDStatisticScope[MDStatisticScope["Quotes"] = 6] = "Quotes";
    MDStatisticScope[MDStatisticScope["OrdersAndQuotes"] = 7] = "OrdersAndQuotes";
    MDStatisticScope[MDStatisticScope["Trades"] = 8] = "Trades";
    MDStatisticScope[MDStatisticScope["TradePrices"] = 9] = "TradePrices";
    MDStatisticScope[MDStatisticScope["AuctionPrices"] = 10] = "AuctionPrices";
    MDStatisticScope[MDStatisticScope["OpeningPrices"] = 11] = "OpeningPrices";
    MDStatisticScope[MDStatisticScope["ClosingPrices"] = 12] = "ClosingPrices";
    MDStatisticScope[MDStatisticScope["SettlementPrices"] = 13] = "SettlementPrices";
    MDStatisticScope[MDStatisticScope["UnderlyingPrices"] = 14] = "UnderlyingPrices";
    MDStatisticScope[MDStatisticScope["OpenInterest"] = 15] = "OpenInterest";
    MDStatisticScope[MDStatisticScope["IndexValues"] = 16] = "IndexValues";
    MDStatisticScope[MDStatisticScope["MarginRates"] = 17] = "MarginRates";
})(MDStatisticScope = exports.MDStatisticScope || (exports.MDStatisticScope = {}));
var MDStatisticSubScope;
(function (MDStatisticSubScope) {
    MDStatisticSubScope[MDStatisticSubScope["Visible"] = 1] = "Visible";
    MDStatisticSubScope[MDStatisticSubScope["Hidden"] = 2] = "Hidden";
    MDStatisticSubScope[MDStatisticSubScope["Indicative"] = 3] = "Indicative";
    MDStatisticSubScope[MDStatisticSubScope["Tradeable"] = 4] = "Tradeable";
    MDStatisticSubScope[MDStatisticSubScope["Passive"] = 5] = "Passive";
    MDStatisticSubScope[MDStatisticSubScope["MarketConsensus"] = 6] = "MarketConsensus";
})(MDStatisticSubScope = exports.MDStatisticSubScope || (exports.MDStatisticSubScope = {}));
var MDStatisticScopeType;
(function (MDStatisticScopeType) {
    MDStatisticScopeType[MDStatisticScopeType["EntryRate"] = 1] = "EntryRate";
    MDStatisticScopeType[MDStatisticScopeType["ModificationRate"] = 2] = "ModificationRate";
    MDStatisticScopeType[MDStatisticScopeType["CancelRate"] = 3] = "CancelRate";
    MDStatisticScopeType[MDStatisticScopeType["DownwardMove"] = 4] = "DownwardMove";
    MDStatisticScopeType[MDStatisticScopeType["UpwardMove"] = 5] = "UpwardMove";
})(MDStatisticScopeType = exports.MDStatisticScopeType || (exports.MDStatisticScopeType = {}));
var MDStatisticFrequencyUnit;
(function (MDStatisticFrequencyUnit) {
    MDStatisticFrequencyUnit[MDStatisticFrequencyUnit["SecondsDefaultIfNotSpecified"] = 0] = "SecondsDefaultIfNotSpecified";
    MDStatisticFrequencyUnit[MDStatisticFrequencyUnit["TenthsOfASecond"] = 1] = "TenthsOfASecond";
    MDStatisticFrequencyUnit[MDStatisticFrequencyUnit["HundredthsOfASecond"] = 2] = "HundredthsOfASecond";
    MDStatisticFrequencyUnit[MDStatisticFrequencyUnit["Milliseconds"] = 3] = "Milliseconds";
    MDStatisticFrequencyUnit[MDStatisticFrequencyUnit["Microseconds"] = 4] = "Microseconds";
    MDStatisticFrequencyUnit[MDStatisticFrequencyUnit["Nanoseconds"] = 5] = "Nanoseconds";
    MDStatisticFrequencyUnit[MDStatisticFrequencyUnit["Minutes"] = 10] = "Minutes";
    MDStatisticFrequencyUnit[MDStatisticFrequencyUnit["Hours"] = 11] = "Hours";
    MDStatisticFrequencyUnit[MDStatisticFrequencyUnit["Days"] = 12] = "Days";
    MDStatisticFrequencyUnit[MDStatisticFrequencyUnit["Weeks"] = 13] = "Weeks";
    MDStatisticFrequencyUnit[MDStatisticFrequencyUnit["Months"] = 14] = "Months";
    MDStatisticFrequencyUnit[MDStatisticFrequencyUnit["Years"] = 15] = "Years";
})(MDStatisticFrequencyUnit = exports.MDStatisticFrequencyUnit || (exports.MDStatisticFrequencyUnit = {}));
var MDStatisticDelayUnit;
(function (MDStatisticDelayUnit) {
    MDStatisticDelayUnit[MDStatisticDelayUnit["SecondsDefaultIfNotSpecified"] = 0] = "SecondsDefaultIfNotSpecified";
    MDStatisticDelayUnit[MDStatisticDelayUnit["TenthsOfASecond"] = 1] = "TenthsOfASecond";
    MDStatisticDelayUnit[MDStatisticDelayUnit["HundredthsOfASecond"] = 2] = "HundredthsOfASecond";
    MDStatisticDelayUnit[MDStatisticDelayUnit["Milliseconds"] = 3] = "Milliseconds";
    MDStatisticDelayUnit[MDStatisticDelayUnit["Microseconds"] = 4] = "Microseconds";
    MDStatisticDelayUnit[MDStatisticDelayUnit["Nanoseconds"] = 5] = "Nanoseconds";
    MDStatisticDelayUnit[MDStatisticDelayUnit["Minutes"] = 10] = "Minutes";
    MDStatisticDelayUnit[MDStatisticDelayUnit["Hours"] = 11] = "Hours";
    MDStatisticDelayUnit[MDStatisticDelayUnit["Days"] = 12] = "Days";
    MDStatisticDelayUnit[MDStatisticDelayUnit["Weeks"] = 13] = "Weeks";
    MDStatisticDelayUnit[MDStatisticDelayUnit["Months"] = 14] = "Months";
    MDStatisticDelayUnit[MDStatisticDelayUnit["Years"] = 15] = "Years";
})(MDStatisticDelayUnit = exports.MDStatisticDelayUnit || (exports.MDStatisticDelayUnit = {}));
var MDStatisticIntervalType;
(function (MDStatisticIntervalType) {
    MDStatisticIntervalType[MDStatisticIntervalType["SlidingWindow"] = 1] = "SlidingWindow";
    MDStatisticIntervalType[MDStatisticIntervalType["SlidingWindowPeak"] = 2] = "SlidingWindowPeak";
    MDStatisticIntervalType[MDStatisticIntervalType["FixedDateRange"] = 3] = "FixedDateRange";
    MDStatisticIntervalType[MDStatisticIntervalType["FixedTimeRange"] = 4] = "FixedTimeRange";
    MDStatisticIntervalType[MDStatisticIntervalType["CurrentTimeUnit"] = 5] = "CurrentTimeUnit";
    MDStatisticIntervalType[MDStatisticIntervalType["PreviousTimeUnit"] = 6] = "PreviousTimeUnit";
    MDStatisticIntervalType[MDStatisticIntervalType["MaximumRange"] = 7] = "MaximumRange";
    MDStatisticIntervalType[MDStatisticIntervalType["MaximumRangeUpToPreviousTimeUnit"] = 8] = "MaximumRangeUpToPreviousTimeUnit";
})(MDStatisticIntervalType = exports.MDStatisticIntervalType || (exports.MDStatisticIntervalType = {}));
var MDStatisticIntervalTypeUnit;
(function (MDStatisticIntervalTypeUnit) {
    MDStatisticIntervalTypeUnit["Hour"] = "H";
    MDStatisticIntervalTypeUnit["Minute"] = "Min";
    MDStatisticIntervalTypeUnit["Second"] = "S";
    MDStatisticIntervalTypeUnit["Day"] = "D";
    MDStatisticIntervalTypeUnit["Week"] = "Wk";
    MDStatisticIntervalTypeUnit["Month"] = "Mo";
    MDStatisticIntervalTypeUnit["Year"] = "Yr";
    MDStatisticIntervalTypeUnit["Quarter"] = "Q";
})(MDStatisticIntervalTypeUnit = exports.MDStatisticIntervalTypeUnit || (exports.MDStatisticIntervalTypeUnit = {}));
var MDStatisticIntervalUnit;
(function (MDStatisticIntervalUnit) {
    MDStatisticIntervalUnit[MDStatisticIntervalUnit["SecondsDefaultIfNotSpecified"] = 0] = "SecondsDefaultIfNotSpecified";
    MDStatisticIntervalUnit[MDStatisticIntervalUnit["TenthsOfASecond"] = 1] = "TenthsOfASecond";
    MDStatisticIntervalUnit[MDStatisticIntervalUnit["HundredthsOfASecond"] = 2] = "HundredthsOfASecond";
    MDStatisticIntervalUnit[MDStatisticIntervalUnit["Milliseconds"] = 3] = "Milliseconds";
    MDStatisticIntervalUnit[MDStatisticIntervalUnit["Microseconds"] = 4] = "Microseconds";
    MDStatisticIntervalUnit[MDStatisticIntervalUnit["Nanoseconds"] = 5] = "Nanoseconds";
    MDStatisticIntervalUnit[MDStatisticIntervalUnit["Minutes"] = 10] = "Minutes";
    MDStatisticIntervalUnit[MDStatisticIntervalUnit["Hours"] = 11] = "Hours";
    MDStatisticIntervalUnit[MDStatisticIntervalUnit["Days"] = 12] = "Days";
    MDStatisticIntervalUnit[MDStatisticIntervalUnit["Weeks"] = 13] = "Weeks";
    MDStatisticIntervalUnit[MDStatisticIntervalUnit["Months"] = 14] = "Months";
    MDStatisticIntervalUnit[MDStatisticIntervalUnit["Years"] = 15] = "Years";
})(MDStatisticIntervalUnit = exports.MDStatisticIntervalUnit || (exports.MDStatisticIntervalUnit = {}));
var MDStatisticRatioType;
(function (MDStatisticRatioType) {
    MDStatisticRatioType[MDStatisticRatioType["BuyersToSellers"] = 1] = "BuyersToSellers";
    MDStatisticRatioType[MDStatisticRatioType["UpticksToDownticks"] = 2] = "UpticksToDownticks";
    MDStatisticRatioType[MDStatisticRatioType["MarketMakerToNonMarketMaker"] = 3] = "MarketMakerToNonMarketMaker";
    MDStatisticRatioType[MDStatisticRatioType["AutomatedToNonAutomated"] = 4] = "AutomatedToNonAutomated";
    MDStatisticRatioType[MDStatisticRatioType["OrdersToTrades"] = 5] = "OrdersToTrades";
    MDStatisticRatioType[MDStatisticRatioType["QuotesToTrades"] = 6] = "QuotesToTrades";
    MDStatisticRatioType[MDStatisticRatioType["OrdersAndQuotesToTrades"] = 7] = "OrdersAndQuotesToTrades";
})(MDStatisticRatioType = exports.MDStatisticRatioType || (exports.MDStatisticRatioType = {}));
var MDStatisticRequestResult;
(function (MDStatisticRequestResult) {
    MDStatisticRequestResult[MDStatisticRequestResult["SuccessfulDefault"] = 0] = "SuccessfulDefault";
    MDStatisticRequestResult[MDStatisticRequestResult["InvalidOrUnknownMarket"] = 1] = "InvalidOrUnknownMarket";
    MDStatisticRequestResult[MDStatisticRequestResult["InvalidOrUnknownMarketSegment"] = 2] = "InvalidOrUnknownMarketSegment";
    MDStatisticRequestResult[MDStatisticRequestResult["InvalidOrUnknownSecurityList"] = 3] = "InvalidOrUnknownSecurityList";
    MDStatisticRequestResult[MDStatisticRequestResult["InvalidOrUnknownInstrumentS"] = 4] = "InvalidOrUnknownInstrumentS";
    MDStatisticRequestResult[MDStatisticRequestResult["InvalidParties"] = 5] = "InvalidParties";
    MDStatisticRequestResult[MDStatisticRequestResult["TradeDateOutOfSupportedRange"] = 6] = "TradeDateOutOfSupportedRange";
    MDStatisticRequestResult[MDStatisticRequestResult["StatisticTypeNotSupported"] = 7] = "StatisticTypeNotSupported";
    MDStatisticRequestResult[MDStatisticRequestResult["ScopeOrSubScopeNotSupported"] = 8] = "ScopeOrSubScopeNotSupported";
    MDStatisticRequestResult[MDStatisticRequestResult["ScopeTypeNotSupported"] = 9] = "ScopeTypeNotSupported";
    MDStatisticRequestResult[MDStatisticRequestResult["MarketDepthNotSupported"] = 10] = "MarketDepthNotSupported";
    MDStatisticRequestResult[MDStatisticRequestResult["FrequencyNotSupported"] = 11] = "FrequencyNotSupported";
    MDStatisticRequestResult[MDStatisticRequestResult["StatisticIntervalNotSupported"] = 12] = "StatisticIntervalNotSupported";
    MDStatisticRequestResult[MDStatisticRequestResult["StatisticDateRangeNotSupported"] = 13] = "StatisticDateRangeNotSupported";
    MDStatisticRequestResult[MDStatisticRequestResult["StatisticTimeRangeNotSupported"] = 14] = "StatisticTimeRangeNotSupported";
    MDStatisticRequestResult[MDStatisticRequestResult["RatioTypeNotSupported"] = 15] = "RatioTypeNotSupported";
    MDStatisticRequestResult[MDStatisticRequestResult["InvalidOrUnknownTradeInputSource"] = 16] = "InvalidOrUnknownTradeInputSource";
    MDStatisticRequestResult[MDStatisticRequestResult["InvalidOrUnknownTradingSession"] = 17] = "InvalidOrUnknownTradingSession";
    MDStatisticRequestResult[MDStatisticRequestResult["UnauthorizedForStatisticRequest"] = 18] = "UnauthorizedForStatisticRequest";
    MDStatisticRequestResult[MDStatisticRequestResult["OtherFurtherInformationInText58Field"] = 99] = "OtherFurtherInformationInText58Field";
})(MDStatisticRequestResult = exports.MDStatisticRequestResult || (exports.MDStatisticRequestResult = {}));
var MDStatisticStatus;
(function (MDStatisticStatus) {
    MDStatisticStatus[MDStatisticStatus["ActiveDefault"] = 1] = "ActiveDefault";
    MDStatisticStatus[MDStatisticStatus["InactiveNotDisseminated"] = 2] = "InactiveNotDisseminated";
})(MDStatisticStatus = exports.MDStatisticStatus || (exports.MDStatisticStatus = {}));
var MDStatisticValueType;
(function (MDStatisticValueType) {
    MDStatisticValueType[MDStatisticValueType["Absolute"] = 1] = "Absolute";
    MDStatisticValueType[MDStatisticValueType["Percentage"] = 2] = "Percentage";
})(MDStatisticValueType = exports.MDStatisticValueType || (exports.MDStatisticValueType = {}));
var MDStatisticValueUnit;
(function (MDStatisticValueUnit) {
    MDStatisticValueUnit[MDStatisticValueUnit["SecondsDefaultIfNotSpecified"] = 0] = "SecondsDefaultIfNotSpecified";
    MDStatisticValueUnit[MDStatisticValueUnit["TenthsOfASecond"] = 1] = "TenthsOfASecond";
    MDStatisticValueUnit[MDStatisticValueUnit["HundredthsOfASecond"] = 2] = "HundredthsOfASecond";
    MDStatisticValueUnit[MDStatisticValueUnit["Milliseconds"] = 3] = "Milliseconds";
    MDStatisticValueUnit[MDStatisticValueUnit["Microseconds"] = 4] = "Microseconds";
    MDStatisticValueUnit[MDStatisticValueUnit["Nanoseconds"] = 5] = "Nanoseconds";
    MDStatisticValueUnit[MDStatisticValueUnit["Minutes"] = 10] = "Minutes";
    MDStatisticValueUnit[MDStatisticValueUnit["Hours"] = 11] = "Hours";
    MDStatisticValueUnit[MDStatisticValueUnit["Days"] = 12] = "Days";
    MDStatisticValueUnit[MDStatisticValueUnit["Weeks"] = 13] = "Weeks";
    MDStatisticValueUnit[MDStatisticValueUnit["Months"] = 14] = "Months";
    MDStatisticValueUnit[MDStatisticValueUnit["Years"] = 15] = "Years";
})(MDStatisticValueUnit = exports.MDStatisticValueUnit || (exports.MDStatisticValueUnit = {}));
var AllocRiskLimitCheckStatus;
(function (AllocRiskLimitCheckStatus) {
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["Accepted"] = 0] = "Accepted";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["Rejected"] = 1] = "Rejected";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["ClaimRequired"] = 2] = "ClaimRequired";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["PreDefinedLimitCheckSucceeded"] = 3] = "PreDefinedLimitCheckSucceeded";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["PreDefinedLimitCheckFailed"] = 4] = "PreDefinedLimitCheckFailed";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["PreDefinedAutoAcceptRuleInvoked"] = 5] = "PreDefinedAutoAcceptRuleInvoked";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["PreDefinedAutoRejectRuleInvoked"] = 6] = "PreDefinedAutoRejectRuleInvoked";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["AcceptedByClearingFirm"] = 7] = "AcceptedByClearingFirm";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["RejectedByClearingFirm"] = 8] = "RejectedByClearingFirm";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["Pending"] = 9] = "Pending";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["AcceptedByCreditHub"] = 10] = "AcceptedByCreditHub";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["RejectedByCreditHub"] = 11] = "RejectedByCreditHub";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["PendingCreditHubCheck"] = 12] = "PendingCreditHubCheck";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["AcceptedByExecutionVenue"] = 13] = "AcceptedByExecutionVenue";
    AllocRiskLimitCheckStatus[AllocRiskLimitCheckStatus["RejectedByExecutionVenue"] = 14] = "RejectedByExecutionVenue";
})(AllocRiskLimitCheckStatus = exports.AllocRiskLimitCheckStatus || (exports.AllocRiskLimitCheckStatus = {}));
var CollRptRejectReason;
(function (CollRptRejectReason) {
    CollRptRejectReason[CollRptRejectReason["UnknownTradeOrTransaction"] = 0] = "UnknownTradeOrTransaction";
    CollRptRejectReason[CollRptRejectReason["UnknownOrInvalidInstrument"] = 1] = "UnknownOrInvalidInstrument";
    CollRptRejectReason[CollRptRejectReason["UnknownOrInvalidCounterparty"] = 2] = "UnknownOrInvalidCounterparty";
    CollRptRejectReason[CollRptRejectReason["UnknownOrInvalidPosition"] = 3] = "UnknownOrInvalidPosition";
    CollRptRejectReason[CollRptRejectReason["UnacceptableOrInvalidTypeOfCollateral"] = 4] = "UnacceptableOrInvalidTypeOfCollateral";
    CollRptRejectReason[CollRptRejectReason["Other"] = 99] = "Other";
})(CollRptRejectReason = exports.CollRptRejectReason || (exports.CollRptRejectReason = {}));
var CollRptStatus;
(function (CollRptStatus) {
    CollRptStatus[CollRptStatus["AcceptedSuccessfullyProcessed"] = 0] = "AcceptedSuccessfullyProcessed";
    CollRptStatus[CollRptStatus["ReceivedNotYetProcessed"] = 1] = "ReceivedNotYetProcessed";
    CollRptStatus[CollRptStatus["Rejected"] = 2] = "Rejected";
})(CollRptStatus = exports.CollRptStatus || (exports.CollRptStatus = {}));
var UnderlyingAssetGroup;
(function (UnderlyingAssetGroup) {
    UnderlyingAssetGroup[UnderlyingAssetGroup["Financials"] = 1] = "Financials";
    UnderlyingAssetGroup[UnderlyingAssetGroup["Commodities"] = 2] = "Commodities";
    UnderlyingAssetGroup[UnderlyingAssetGroup["AlternativeInvestments"] = 3] = "AlternativeInvestments";
})(UnderlyingAssetGroup = exports.UnderlyingAssetGroup || (exports.UnderlyingAssetGroup = {}));
var LegDeliveryType;
(function (LegDeliveryType) {
    LegDeliveryType[LegDeliveryType["VersusPaymentDeliverIfSellOrReceiveIfBuyVsAgainstPayment"] = 0] = "VersusPaymentDeliverIfSellOrReceiveIfBuyVsAgainstPayment";
    LegDeliveryType[LegDeliveryType["FreeDeliverIfSellOrReceiveIfBuyFree"] = 1] = "FreeDeliverIfSellOrReceiveIfBuyFree";
    LegDeliveryType[LegDeliveryType["TriParty"] = 2] = "TriParty";
    LegDeliveryType[LegDeliveryType["HoldInCustody"] = 3] = "HoldInCustody";
})(LegDeliveryType = exports.LegDeliveryType || (exports.LegDeliveryType = {}));
var LegTerminationType;
(function (LegTerminationType) {
    LegTerminationType[LegTerminationType["Overnight"] = 1] = "Overnight";
    LegTerminationType[LegTerminationType["Term"] = 2] = "Term";
    LegTerminationType[LegTerminationType["Flexible"] = 3] = "Flexible";
    LegTerminationType[LegTerminationType["Open"] = 4] = "Open";
})(LegTerminationType = exports.LegTerminationType || (exports.LegTerminationType = {}));
var CrossedIndicator;
(function (CrossedIndicator) {
    CrossedIndicator[CrossedIndicator["NoCross"] = 0] = "NoCross";
    CrossedIndicator[CrossedIndicator["CrossRejected"] = 1] = "CrossRejected";
    CrossedIndicator[CrossedIndicator["CrossAccepted"] = 2] = "CrossAccepted";
})(CrossedIndicator = exports.CrossedIndicator || (exports.CrossedIndicator = {}));
var TradeReportingIndicator;
(function (TradeReportingIndicator) {
    TradeReportingIndicator[TradeReportingIndicator["TradeHasNotYetBeenReported"] = 0] = "TradeHasNotYetBeenReported";
    TradeReportingIndicator[TradeReportingIndicator["TradeHasBeenReportedByATradingVenueAsAnOnBookTrade"] = 1] = "TradeHasBeenReportedByATradingVenueAsAnOnBookTrade";
    TradeReportingIndicator[TradeReportingIndicator["TradeHasBeenReportedAsASystematicInternaliserSellerTrade"] = 2] = "TradeHasBeenReportedAsASystematicInternaliserSellerTrade";
    TradeReportingIndicator[TradeReportingIndicator["TradeHasBeenReportedAsASystematicInternaliserBuyerTrade"] = 3] = "TradeHasBeenReportedAsASystematicInternaliserBuyerTrade";
    TradeReportingIndicator[TradeReportingIndicator["TradeHasBeenReportedAsANonSystematicInternaliserSellerTrade"] = 4] = "TradeHasBeenReportedAsANonSystematicInternaliserSellerTrade";
    TradeReportingIndicator[TradeReportingIndicator["TradeHasBeenReportedUnderASubDelegationArrangementByAnInvestmentFirmToAReportingFacilityEGApaOnBehalfOfAnotherInvestmentFirm"] = 5] = "TradeHasBeenReportedUnderASubDelegationArrangementByAnInvestmentFirmToAReportingFacilityEGApaOnBehalfOfAnotherInvestmentFirm";
})(TradeReportingIndicator = exports.TradeReportingIndicator || (exports.TradeReportingIndicator = {}));
var RelativeValueType;
(function (RelativeValueType) {
    RelativeValueType[RelativeValueType["AssetSwapSpread"] = 1] = "AssetSwapSpread";
    RelativeValueType[RelativeValueType["OvernightIndexedSwapSpread"] = 2] = "OvernightIndexedSwapSpread";
    RelativeValueType[RelativeValueType["ZeroVolatilitySpread"] = 3] = "ZeroVolatilitySpread";
    RelativeValueType[RelativeValueType["DiscountMargin"] = 4] = "DiscountMargin";
    RelativeValueType[RelativeValueType["InterpolatedSpread"] = 5] = "InterpolatedSpread";
    RelativeValueType[RelativeValueType["OptionAdjustedSpread"] = 6] = "OptionAdjustedSpread";
    RelativeValueType[RelativeValueType["GSpread"] = 7] = "GSpread";
    RelativeValueType[RelativeValueType["CdsBasis"] = 8] = "CdsBasis";
    RelativeValueType[RelativeValueType["CdsInterpolatedBasis"] = 9] = "CdsInterpolatedBasis";
})(RelativeValueType = exports.RelativeValueType || (exports.RelativeValueType = {}));
var RelativeValueSide;
(function (RelativeValueSide) {
    RelativeValueSide[RelativeValueSide["Bid"] = 1] = "Bid";
    RelativeValueSide[RelativeValueSide["Mid"] = 2] = "Mid";
    RelativeValueSide[RelativeValueSide["Offer"] = 3] = "Offer";
})(RelativeValueSide = exports.RelativeValueSide || (exports.RelativeValueSide = {}));
var MDReportEvent;
(function (MDReportEvent) {
    MDReportEvent[MDReportEvent["StartOfInstrumentReferenceData"] = 1] = "StartOfInstrumentReferenceData";
    MDReportEvent[MDReportEvent["EndOfInstrumentReferenceData"] = 2] = "EndOfInstrumentReferenceData";
    MDReportEvent[MDReportEvent["StartOfOffMarketTrades"] = 3] = "StartOfOffMarketTrades";
    MDReportEvent[MDReportEvent["EndOfOffMarketTrades"] = 4] = "EndOfOffMarketTrades";
    MDReportEvent[MDReportEvent["StartOfOrderBookTrades"] = 5] = "StartOfOrderBookTrades";
    MDReportEvent[MDReportEvent["EndOfOrderBookTrades"] = 6] = "EndOfOrderBookTrades";
    MDReportEvent[MDReportEvent["StartOfOpenInterest"] = 7] = "StartOfOpenInterest";
    MDReportEvent[MDReportEvent["EndOfOpenInterest"] = 8] = "EndOfOpenInterest";
    MDReportEvent[MDReportEvent["StartOfSettlementPrices"] = 9] = "StartOfSettlementPrices";
    MDReportEvent[MDReportEvent["EndOfSettlementPrices"] = 10] = "EndOfSettlementPrices";
    MDReportEvent[MDReportEvent["StartOfStatisticsReferenceData"] = 11] = "StartOfStatisticsReferenceData";
    MDReportEvent[MDReportEvent["EndOfStatisticsReferenceData"] = 12] = "EndOfStatisticsReferenceData";
    MDReportEvent[MDReportEvent["StartOfStatistics"] = 13] = "StartOfStatistics";
    MDReportEvent[MDReportEvent["EndOfStatistics"] = 14] = "EndOfStatistics";
})(MDReportEvent = exports.MDReportEvent || (exports.MDReportEvent = {}));
var MarketSegmentStatus;
(function (MarketSegmentStatus) {
    MarketSegmentStatus[MarketSegmentStatus["Active"] = 1] = "Active";
    MarketSegmentStatus[MarketSegmentStatus["Inactive"] = 2] = "Inactive";
    MarketSegmentStatus[MarketSegmentStatus["Published"] = 3] = "Published";
})(MarketSegmentStatus = exports.MarketSegmentStatus || (exports.MarketSegmentStatus = {}));
var MarketSegmentType;
(function (MarketSegmentType) {
    MarketSegmentType[MarketSegmentType["Pool"] = 1] = "Pool";
    MarketSegmentType[MarketSegmentType["Retail"] = 2] = "Retail";
    MarketSegmentType[MarketSegmentType["Wholesale"] = 3] = "Wholesale";
})(MarketSegmentType = exports.MarketSegmentType || (exports.MarketSegmentType = {}));
var MarketSegmentSubType;
(function (MarketSegmentSubType) {
    MarketSegmentSubType[MarketSegmentSubType["InterProductSpread"] = 1] = "InterProductSpread";
})(MarketSegmentSubType = exports.MarketSegmentSubType || (exports.MarketSegmentSubType = {}));
var MarketSegmentRelationship;
(function (MarketSegmentRelationship) {
    MarketSegmentRelationship[MarketSegmentRelationship["MarketSegmentPoolMember"] = 1] = "MarketSegmentPoolMember";
    MarketSegmentRelationship[MarketSegmentRelationship["RetailSegment"] = 2] = "RetailSegment";
    MarketSegmentRelationship[MarketSegmentRelationship["WholesaleSegment"] = 3] = "WholesaleSegment";
})(MarketSegmentRelationship = exports.MarketSegmentRelationship || (exports.MarketSegmentRelationship = {}));
var QuoteSideIndicator;
(function (QuoteSideIndicator) {
    QuoteSideIndicator["SingleSidedQuotesAreNotAllowed"] = "N";
    QuoteSideIndicator["SingleSidedQuotesAreAllowed"] = "Y";
})(QuoteSideIndicator = exports.QuoteSideIndicator || (exports.QuoteSideIndicator = {}));
var MarketDepthTimeIntervalUnit;
(function (MarketDepthTimeIntervalUnit) {
    MarketDepthTimeIntervalUnit[MarketDepthTimeIntervalUnit["SecondsDefaultIfNotSpecified"] = 0] = "SecondsDefaultIfNotSpecified";
    MarketDepthTimeIntervalUnit[MarketDepthTimeIntervalUnit["TenthsOfASecond"] = 1] = "TenthsOfASecond";
    MarketDepthTimeIntervalUnit[MarketDepthTimeIntervalUnit["HundredthsOfASecond"] = 2] = "HundredthsOfASecond";
    MarketDepthTimeIntervalUnit[MarketDepthTimeIntervalUnit["Milliseconds"] = 3] = "Milliseconds";
    MarketDepthTimeIntervalUnit[MarketDepthTimeIntervalUnit["Microseconds"] = 4] = "Microseconds";
    MarketDepthTimeIntervalUnit[MarketDepthTimeIntervalUnit["Nanoseconds"] = 5] = "Nanoseconds";
    MarketDepthTimeIntervalUnit[MarketDepthTimeIntervalUnit["Minutes"] = 10] = "Minutes";
    MarketDepthTimeIntervalUnit[MarketDepthTimeIntervalUnit["Hours"] = 11] = "Hours";
    MarketDepthTimeIntervalUnit[MarketDepthTimeIntervalUnit["Days"] = 12] = "Days";
    MarketDepthTimeIntervalUnit[MarketDepthTimeIntervalUnit["Weeks"] = 13] = "Weeks";
    MarketDepthTimeIntervalUnit[MarketDepthTimeIntervalUnit["Months"] = 14] = "Months";
    MarketDepthTimeIntervalUnit[MarketDepthTimeIntervalUnit["Years"] = 15] = "Years";
})(MarketDepthTimeIntervalUnit = exports.MarketDepthTimeIntervalUnit || (exports.MarketDepthTimeIntervalUnit = {}));
var MDRecoveryTimeIntervalUnit;
(function (MDRecoveryTimeIntervalUnit) {
    MDRecoveryTimeIntervalUnit[MDRecoveryTimeIntervalUnit["SecondsDefaultIfNotSpecified"] = 0] = "SecondsDefaultIfNotSpecified";
    MDRecoveryTimeIntervalUnit[MDRecoveryTimeIntervalUnit["TenthsOfASecond"] = 1] = "TenthsOfASecond";
    MDRecoveryTimeIntervalUnit[MDRecoveryTimeIntervalUnit["HundredthsOfASecond"] = 2] = "HundredthsOfASecond";
    MDRecoveryTimeIntervalUnit[MDRecoveryTimeIntervalUnit["Milliseconds"] = 3] = "Milliseconds";
    MDRecoveryTimeIntervalUnit[MDRecoveryTimeIntervalUnit["Microseconds"] = 4] = "Microseconds";
    MDRecoveryTimeIntervalUnit[MDRecoveryTimeIntervalUnit["Nanoseconds"] = 5] = "Nanoseconds";
    MDRecoveryTimeIntervalUnit[MDRecoveryTimeIntervalUnit["Minutes"] = 10] = "Minutes";
    MDRecoveryTimeIntervalUnit[MDRecoveryTimeIntervalUnit["Hours"] = 11] = "Hours";
    MDRecoveryTimeIntervalUnit[MDRecoveryTimeIntervalUnit["Days"] = 12] = "Days";
    MDRecoveryTimeIntervalUnit[MDRecoveryTimeIntervalUnit["Weeks"] = 13] = "Weeks";
    MDRecoveryTimeIntervalUnit[MDRecoveryTimeIntervalUnit["Months"] = 14] = "Months";
    MDRecoveryTimeIntervalUnit[MDRecoveryTimeIntervalUnit["Years"] = 15] = "Years";
})(MDRecoveryTimeIntervalUnit = exports.MDRecoveryTimeIntervalUnit || (exports.MDRecoveryTimeIntervalUnit = {}));
var CustomerPriority;
(function (CustomerPriority) {
    CustomerPriority[CustomerPriority["NoPriority"] = 0] = "NoPriority";
    CustomerPriority[CustomerPriority["UnconditionalPriority"] = 1] = "UnconditionalPriority";
})(CustomerPriority = exports.CustomerPriority || (exports.CustomerPriority = {}));
var SettlSubMethod;
(function (SettlSubMethod) {
    SettlSubMethod[SettlSubMethod["Shares"] = 1] = "Shares";
    SettlSubMethod[SettlSubMethod["Derivatives"] = 2] = "Derivatives";
    SettlSubMethod[SettlSubMethod["PaymentVsPayment"] = 3] = "PaymentVsPayment";
    SettlSubMethod[SettlSubMethod["Notional"] = 4] = "Notional";
    SettlSubMethod[SettlSubMethod["Cascade"] = 5] = "Cascade";
    SettlSubMethod[SettlSubMethod["Repurchase"] = 6] = "Repurchase";
    SettlSubMethod[SettlSubMethod["Other"] = 99] = "Other";
})(SettlSubMethod = exports.SettlSubMethod || (exports.SettlSubMethod = {}));
var BusinessDayType;
(function (BusinessDayType) {
    BusinessDayType[BusinessDayType["NotApplicable"] = 0] = "NotApplicable";
    BusinessDayType[BusinessDayType["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    BusinessDayType[BusinessDayType["FollowingDay"] = 2] = "FollowingDay";
    BusinessDayType[BusinessDayType["FloatingRateNote"] = 3] = "FloatingRateNote";
    BusinessDayType[BusinessDayType["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    BusinessDayType[BusinessDayType["PrecedingDay"] = 5] = "PrecedingDay";
    BusinessDayType[BusinessDayType["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    BusinessDayType[BusinessDayType["NearestDay"] = 7] = "NearestDay";
})(BusinessDayType = exports.BusinessDayType || (exports.BusinessDayType = {}));
var CalculationMethod;
(function (CalculationMethod) {
    CalculationMethod[CalculationMethod["AutomaticDefault"] = 0] = "AutomaticDefault";
    CalculationMethod[CalculationMethod["Manual"] = 1] = "Manual";
})(CalculationMethod = exports.CalculationMethod || (exports.CalculationMethod = {}));
var OrderAttributeType;
(function (OrderAttributeType) {
    OrderAttributeType[OrderAttributeType["AggregatedOrder"] = 0] = "AggregatedOrder";
    OrderAttributeType[OrderAttributeType["PendingAllocation"] = 1] = "PendingAllocation";
    OrderAttributeType[OrderAttributeType["LiquidityProvisionActivityOrder"] = 2] = "LiquidityProvisionActivityOrder";
    OrderAttributeType[OrderAttributeType["RiskReductionOrder"] = 3] = "RiskReductionOrder";
    OrderAttributeType[OrderAttributeType["AlgorithmicOrder"] = 4] = "AlgorithmicOrder";
    OrderAttributeType[OrderAttributeType["SystemicInternaliserOrder"] = 5] = "SystemicInternaliserOrder";
    OrderAttributeType[OrderAttributeType["AllExecutionsForTheOrderAreToBeSubmittedToAnApa"] = 6] = "AllExecutionsForTheOrderAreToBeSubmittedToAnApa";
    OrderAttributeType[OrderAttributeType["OrderExecutionInstructedByClient"] = 7] = "OrderExecutionInstructedByClient";
    OrderAttributeType[OrderAttributeType["LargeInScale"] = 8] = "LargeInScale";
    OrderAttributeType[OrderAttributeType["Hidden"] = 9] = "Hidden";
})(OrderAttributeType = exports.OrderAttributeType || (exports.OrderAttributeType = {}));
var ComplexEventPVFinalPriceElectionFallback;
(function (ComplexEventPVFinalPriceElectionFallback) {
    ComplexEventPVFinalPriceElectionFallback[ComplexEventPVFinalPriceElectionFallback["Close"] = 0] = "Close";
    ComplexEventPVFinalPriceElectionFallback[ComplexEventPVFinalPriceElectionFallback["HedgeElection"] = 1] = "HedgeElection";
})(ComplexEventPVFinalPriceElectionFallback = exports.ComplexEventPVFinalPriceElectionFallback || (exports.ComplexEventPVFinalPriceElectionFallback = {}));
var StrikeIndexQuote;
(function (StrikeIndexQuote) {
    StrikeIndexQuote[StrikeIndexQuote["Bid"] = 0] = "Bid";
    StrikeIndexQuote[StrikeIndexQuote["Mid"] = 1] = "Mid";
    StrikeIndexQuote[StrikeIndexQuote["Offer"] = 2] = "Offer";
})(StrikeIndexQuote = exports.StrikeIndexQuote || (exports.StrikeIndexQuote = {}));
var ExtraordinaryEventAdjustmentMethod;
(function (ExtraordinaryEventAdjustmentMethod) {
    ExtraordinaryEventAdjustmentMethod[ExtraordinaryEventAdjustmentMethod["CalculationAgent"] = 0] = "CalculationAgent";
    ExtraordinaryEventAdjustmentMethod[ExtraordinaryEventAdjustmentMethod["OptionsExchange"] = 1] = "OptionsExchange";
})(ExtraordinaryEventAdjustmentMethod = exports.ExtraordinaryEventAdjustmentMethod || (exports.ExtraordinaryEventAdjustmentMethod = {}));
var LegStrikeIndexQuote;
(function (LegStrikeIndexQuote) {
    LegStrikeIndexQuote[LegStrikeIndexQuote["Bid"] = 0] = "Bid";
    LegStrikeIndexQuote[LegStrikeIndexQuote["Mid"] = 1] = "Mid";
    LegStrikeIndexQuote[LegStrikeIndexQuote["Offer"] = 2] = "Offer";
})(LegStrikeIndexQuote = exports.LegStrikeIndexQuote || (exports.LegStrikeIndexQuote = {}));
var LegExtraordinaryEventAdjustmentMethod;
(function (LegExtraordinaryEventAdjustmentMethod) {
    LegExtraordinaryEventAdjustmentMethod[LegExtraordinaryEventAdjustmentMethod["CalculationAgent"] = 0] = "CalculationAgent";
    LegExtraordinaryEventAdjustmentMethod[LegExtraordinaryEventAdjustmentMethod["OptionsExchange"] = 1] = "OptionsExchange";
})(LegExtraordinaryEventAdjustmentMethod = exports.LegExtraordinaryEventAdjustmentMethod || (exports.LegExtraordinaryEventAdjustmentMethod = {}));
var LegComplexEventPVFinalPriceElectionFallback;
(function (LegComplexEventPVFinalPriceElectionFallback) {
    LegComplexEventPVFinalPriceElectionFallback[LegComplexEventPVFinalPriceElectionFallback["Close"] = 0] = "Close";
    LegComplexEventPVFinalPriceElectionFallback[LegComplexEventPVFinalPriceElectionFallback["HedgeElection"] = 1] = "HedgeElection";
})(LegComplexEventPVFinalPriceElectionFallback = exports.LegComplexEventPVFinalPriceElectionFallback || (exports.LegComplexEventPVFinalPriceElectionFallback = {}));
var UnderlyingComplexEventPVFinalPriceElectionFallback;
(function (UnderlyingComplexEventPVFinalPriceElectionFallback) {
    UnderlyingComplexEventPVFinalPriceElectionFallback[UnderlyingComplexEventPVFinalPriceElectionFallback["Close"] = 0] = "Close";
    UnderlyingComplexEventPVFinalPriceElectionFallback[UnderlyingComplexEventPVFinalPriceElectionFallback["HedgeElection"] = 1] = "HedgeElection";
})(UnderlyingComplexEventPVFinalPriceElectionFallback = exports.UnderlyingComplexEventPVFinalPriceElectionFallback || (exports.UnderlyingComplexEventPVFinalPriceElectionFallback = {}));
var UnderlyingNotionalAdjustments;
(function (UnderlyingNotionalAdjustments) {
    UnderlyingNotionalAdjustments[UnderlyingNotionalAdjustments["Execution"] = 0] = "Execution";
    UnderlyingNotionalAdjustments[UnderlyingNotionalAdjustments["PortfolioRebalancing"] = 1] = "PortfolioRebalancing";
    UnderlyingNotionalAdjustments[UnderlyingNotionalAdjustments["Standrd"] = 2] = "Standrd";
})(UnderlyingNotionalAdjustments = exports.UnderlyingNotionalAdjustments || (exports.UnderlyingNotionalAdjustments = {}));
var UnderlyingFutureIDSource;
(function (UnderlyingFutureIDSource) {
    UnderlyingFutureIDSource["Cusip"] = "1";
    UnderlyingFutureIDSource["Sedol"] = "2";
    UnderlyingFutureIDSource["Quik"] = "3";
    UnderlyingFutureIDSource["IsinNumber"] = "4";
    UnderlyingFutureIDSource["RicCode"] = "5";
    UnderlyingFutureIDSource["IsoCurrencyCode"] = "6";
    UnderlyingFutureIDSource["IsoCountryCode"] = "7";
    UnderlyingFutureIDSource["ExchangeSymbol"] = "8";
    UnderlyingFutureIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    UnderlyingFutureIDSource["BloombergSymbol"] = "A";
    UnderlyingFutureIDSource["Wertpapier"] = "B";
    UnderlyingFutureIDSource["Dutch"] = "C";
    UnderlyingFutureIDSource["Valoren"] = "D";
    UnderlyingFutureIDSource["Sicovam"] = "E";
    UnderlyingFutureIDSource["Belgian"] = "F";
    UnderlyingFutureIDSource["CommonClearstreamAndEuroclear"] = "G";
    UnderlyingFutureIDSource["ClearingHouseClearingOrganization"] = "H";
    UnderlyingFutureIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    UnderlyingFutureIDSource["OptionPriceReportingAuthority"] = "J";
    UnderlyingFutureIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    UnderlyingFutureIDSource["LetterOfCredit"] = "L";
    UnderlyingFutureIDSource["MarketplaceAssignedIdentifier"] = "M";
    UnderlyingFutureIDSource["MarkitRedEntityClip"] = "N";
    UnderlyingFutureIDSource["MarkitRedPairClip"] = "P";
    UnderlyingFutureIDSource["CftcCommodityCode"] = "Q";
    UnderlyingFutureIDSource["IsdaCommodityReferencePrice"] = "R";
    UnderlyingFutureIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    UnderlyingFutureIDSource["LegalEntityIdentifier"] = "T";
    UnderlyingFutureIDSource["Synthetic"] = "U";
    UnderlyingFutureIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(UnderlyingFutureIDSource = exports.UnderlyingFutureIDSource || (exports.UnderlyingFutureIDSource = {}));
var UnderlyingStrikeIndexQuote;
(function (UnderlyingStrikeIndexQuote) {
    UnderlyingStrikeIndexQuote[UnderlyingStrikeIndexQuote["Bid"] = 0] = "Bid";
    UnderlyingStrikeIndexQuote[UnderlyingStrikeIndexQuote["Mid"] = 1] = "Mid";
    UnderlyingStrikeIndexQuote[UnderlyingStrikeIndexQuote["Offer"] = 2] = "Offer";
})(UnderlyingStrikeIndexQuote = exports.UnderlyingStrikeIndexQuote || (exports.UnderlyingStrikeIndexQuote = {}));
var UnderlyingExtraordinaryEventAdjustmentMethod;
(function (UnderlyingExtraordinaryEventAdjustmentMethod) {
    UnderlyingExtraordinaryEventAdjustmentMethod[UnderlyingExtraordinaryEventAdjustmentMethod["CalculationAgent"] = 0] = "CalculationAgent";
    UnderlyingExtraordinaryEventAdjustmentMethod[UnderlyingExtraordinaryEventAdjustmentMethod["OptionsExchange"] = 1] = "OptionsExchange";
})(UnderlyingExtraordinaryEventAdjustmentMethod = exports.UnderlyingExtraordinaryEventAdjustmentMethod || (exports.UnderlyingExtraordinaryEventAdjustmentMethod = {}));
var CollateralAmountType;
(function (CollateralAmountType) {
    CollateralAmountType[CollateralAmountType["MarketValuationTheDefault"] = 0] = "MarketValuationTheDefault";
    CollateralAmountType[CollateralAmountType["PortfolioValueBeforeProcessingPledgeRequest"] = 1] = "PortfolioValueBeforeProcessingPledgeRequest";
    CollateralAmountType[CollateralAmountType["ValueConfirmedAsLockedUpForProcessingAPledgeRequest"] = 2] = "ValueConfirmedAsLockedUpForProcessingAPledgeRequest";
    CollateralAmountType[CollateralAmountType["CreditValueOfCollateralAtCcpProcessingAPledgeRequest"] = 3] = "CreditValueOfCollateralAtCcpProcessingAPledgeRequest";
    CollateralAmountType[CollateralAmountType["AdditionalCollateralValue"] = 4] = "AdditionalCollateralValue";
})(CollateralAmountType = exports.CollateralAmountType || (exports.CollateralAmountType = {}));
var CommissionAmountType;
(function (CommissionAmountType) {
    CommissionAmountType[CommissionAmountType["Unspecified"] = 0] = "Unspecified";
    CommissionAmountType[CommissionAmountType["Acceptance"] = 1] = "Acceptance";
    CommissionAmountType[CommissionAmountType["Broker"] = 2] = "Broker";
    CommissionAmountType[CommissionAmountType["ClearingBroker"] = 3] = "ClearingBroker";
    CommissionAmountType[CommissionAmountType["Retail"] = 4] = "Retail";
    CommissionAmountType[CommissionAmountType["SalesCommission"] = 5] = "SalesCommission";
    CommissionAmountType[CommissionAmountType["LocalCommission"] = 6] = "LocalCommission";
})(CommissionAmountType = exports.CommissionAmountType || (exports.CommissionAmountType = {}));
var CommissionBasis;
(function (CommissionBasis) {
    CommissionBasis["AmountPerUnit"] = "1";
    CommissionBasis["Percent"] = "2";
    CommissionBasis["Absolute"] = "3";
    CommissionBasis["PercentageWaivedCashDiscountBasis"] = "4";
    CommissionBasis["PercentageWaivedEnhancedUnitsBasis"] = "5";
    CommissionBasis["PointsPerBondOrContract"] = "6";
    CommissionBasis["BasisPoints"] = "7";
    CommissionBasis["AmountPerContract"] = "8";
})(CommissionBasis = exports.CommissionBasis || (exports.CommissionBasis = {}));
var CommissionUnitOfMeasure;
(function (CommissionUnitOfMeasure) {
    CommissionUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    CommissionUnitOfMeasure["Allowances"] = "Alw";
    CommissionUnitOfMeasure["Barrels"] = "Bbl";
    CommissionUnitOfMeasure["CubicMeters"] = "CBM";
    CommissionUnitOfMeasure["BoardFeet"] = "BDFT";
    CommissionUnitOfMeasure["Gigajoules"] = "GJ";
    CommissionUnitOfMeasure["Bushels"] = "Bu";
    CommissionUnitOfMeasure["KilowattHours"] = "kWh";
    CommissionUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    CommissionUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    CommissionUnitOfMeasure["MegawattHours"] = "MWh";
    CommissionUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    CommissionUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    CommissionUnitOfMeasure["Therms"] = "thm";
    CommissionUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    CommissionUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    CommissionUnitOfMeasure["HundredweightUs"] = "cwt";
    CommissionUnitOfMeasure["Days"] = "day";
    CommissionUnitOfMeasure["DryMetricTons"] = "dt";
    CommissionUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    CommissionUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    CommissionUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    CommissionUnitOfMeasure["Grams"] = "g";
    CommissionUnitOfMeasure["Gallons"] = "Gal";
    CommissionUnitOfMeasure["GrossTons"] = "GT";
    CommissionUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    CommissionUnitOfMeasure["IndexPoint"] = "IPNT";
    CommissionUnitOfMeasure["Kilograms"] = "kg";
    CommissionUnitOfMeasure["Kiloliters"] = "kL";
    CommissionUnitOfMeasure["KilowattYear"] = "kW-a";
    CommissionUnitOfMeasure["KilowattDay"] = "kW-d";
    CommissionUnitOfMeasure["KilowattHour"] = "kW-h";
    CommissionUnitOfMeasure["KilowattMonth"] = "kW-M";
    CommissionUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    CommissionUnitOfMeasure["Liters"] = "L";
    CommissionUnitOfMeasure["Pounds"] = "lbs";
    CommissionUnitOfMeasure["MegawattYear"] = "MW-a";
    CommissionUnitOfMeasure["MegawattDay"] = "MW-d";
    CommissionUnitOfMeasure["MegawattHour"] = "MW-h";
    CommissionUnitOfMeasure["MegawattMonth"] = "MW-M";
    CommissionUnitOfMeasure["MegawattMinute"] = "MW-min";
    CommissionUnitOfMeasure["TroyOunces"] = "oz_tr";
    CommissionUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    CommissionUnitOfMeasure["MetricTons"] = "t";
    CommissionUnitOfMeasure["TonsUs"] = "tn";
    CommissionUnitOfMeasure["MillionBarrels"] = "MMbbl";
    CommissionUnitOfMeasure["UsDollars"] = "USD";
})(CommissionUnitOfMeasure = exports.CommissionUnitOfMeasure || (exports.CommissionUnitOfMeasure = {}));
var AllocCommissionAmountType;
(function (AllocCommissionAmountType) {
    AllocCommissionAmountType[AllocCommissionAmountType["Unspecified"] = 0] = "Unspecified";
    AllocCommissionAmountType[AllocCommissionAmountType["Acceptance"] = 1] = "Acceptance";
    AllocCommissionAmountType[AllocCommissionAmountType["Broker"] = 2] = "Broker";
    AllocCommissionAmountType[AllocCommissionAmountType["ClearingBroker"] = 3] = "ClearingBroker";
    AllocCommissionAmountType[AllocCommissionAmountType["Retail"] = 4] = "Retail";
    AllocCommissionAmountType[AllocCommissionAmountType["SalesCommission"] = 5] = "SalesCommission";
    AllocCommissionAmountType[AllocCommissionAmountType["LocalCommission"] = 6] = "LocalCommission";
})(AllocCommissionAmountType = exports.AllocCommissionAmountType || (exports.AllocCommissionAmountType = {}));
var AllocCommissionBasis;
(function (AllocCommissionBasis) {
    AllocCommissionBasis["AmountPerUnit"] = "1";
    AllocCommissionBasis["Percent"] = "2";
    AllocCommissionBasis["Absolute"] = "3";
    AllocCommissionBasis["PercentageWaivedCashDiscountBasis"] = "4";
    AllocCommissionBasis["PercentageWaivedEnhancedUnitsBasis"] = "5";
    AllocCommissionBasis["PointsPerBondOrContract"] = "6";
    AllocCommissionBasis["BasisPoints"] = "7";
    AllocCommissionBasis["AmountPerContract"] = "8";
})(AllocCommissionBasis = exports.AllocCommissionBasis || (exports.AllocCommissionBasis = {}));
var AllocCommissionUnitOfMeasure;
(function (AllocCommissionUnitOfMeasure) {
    AllocCommissionUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    AllocCommissionUnitOfMeasure["Allowances"] = "Alw";
    AllocCommissionUnitOfMeasure["Barrels"] = "Bbl";
    AllocCommissionUnitOfMeasure["CubicMeters"] = "CBM";
    AllocCommissionUnitOfMeasure["BoardFeet"] = "BDFT";
    AllocCommissionUnitOfMeasure["Gigajoules"] = "GJ";
    AllocCommissionUnitOfMeasure["Bushels"] = "Bu";
    AllocCommissionUnitOfMeasure["KilowattHours"] = "kWh";
    AllocCommissionUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    AllocCommissionUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    AllocCommissionUnitOfMeasure["MegawattHours"] = "MWh";
    AllocCommissionUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    AllocCommissionUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    AllocCommissionUnitOfMeasure["Therms"] = "thm";
    AllocCommissionUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    AllocCommissionUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    AllocCommissionUnitOfMeasure["HundredweightUs"] = "cwt";
    AllocCommissionUnitOfMeasure["Days"] = "day";
    AllocCommissionUnitOfMeasure["DryMetricTons"] = "dt";
    AllocCommissionUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    AllocCommissionUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    AllocCommissionUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    AllocCommissionUnitOfMeasure["Grams"] = "g";
    AllocCommissionUnitOfMeasure["Gallons"] = "Gal";
    AllocCommissionUnitOfMeasure["GrossTons"] = "GT";
    AllocCommissionUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    AllocCommissionUnitOfMeasure["IndexPoint"] = "IPNT";
    AllocCommissionUnitOfMeasure["Kilograms"] = "kg";
    AllocCommissionUnitOfMeasure["Kiloliters"] = "kL";
    AllocCommissionUnitOfMeasure["KilowattYear"] = "kW-a";
    AllocCommissionUnitOfMeasure["KilowattDay"] = "kW-d";
    AllocCommissionUnitOfMeasure["KilowattHour"] = "kW-h";
    AllocCommissionUnitOfMeasure["KilowattMonth"] = "kW-M";
    AllocCommissionUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    AllocCommissionUnitOfMeasure["Liters"] = "L";
    AllocCommissionUnitOfMeasure["Pounds"] = "lbs";
    AllocCommissionUnitOfMeasure["MegawattYear"] = "MW-a";
    AllocCommissionUnitOfMeasure["MegawattDay"] = "MW-d";
    AllocCommissionUnitOfMeasure["MegawattHour"] = "MW-h";
    AllocCommissionUnitOfMeasure["MegawattMonth"] = "MW-M";
    AllocCommissionUnitOfMeasure["MegawattMinute"] = "MW-min";
    AllocCommissionUnitOfMeasure["TroyOunces"] = "oz_tr";
    AllocCommissionUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    AllocCommissionUnitOfMeasure["MetricTons"] = "t";
    AllocCommissionUnitOfMeasure["TonsUs"] = "tn";
    AllocCommissionUnitOfMeasure["MillionBarrels"] = "MMbbl";
    AllocCommissionUnitOfMeasure["UsDollars"] = "USD";
})(AllocCommissionUnitOfMeasure = exports.AllocCommissionUnitOfMeasure || (exports.AllocCommissionUnitOfMeasure = {}));
var AlgorithmicTradeIndicator;
(function (AlgorithmicTradeIndicator) {
    AlgorithmicTradeIndicator[AlgorithmicTradeIndicator["NonAlgorithmicTrade"] = 0] = "NonAlgorithmicTrade";
    AlgorithmicTradeIndicator[AlgorithmicTradeIndicator["AlgorithmicTrade"] = 1] = "AlgorithmicTrade";
})(AlgorithmicTradeIndicator = exports.AlgorithmicTradeIndicator || (exports.AlgorithmicTradeIndicator = {}));
var TrdRegPublicationType;
(function (TrdRegPublicationType) {
    TrdRegPublicationType[TrdRegPublicationType["PreTradeTransparencyWaiver"] = 0] = "PreTradeTransparencyWaiver";
    TrdRegPublicationType[TrdRegPublicationType["PostTradeDeferral"] = 1] = "PostTradeDeferral";
    TrdRegPublicationType[TrdRegPublicationType["ExemptFromPublication"] = 2] = "ExemptFromPublication";
})(TrdRegPublicationType = exports.TrdRegPublicationType || (exports.TrdRegPublicationType = {}));
var TrdRegPublicationReason;
(function (TrdRegPublicationReason) {
    TrdRegPublicationReason[TrdRegPublicationReason["NoPrecedingOrderInBookAsTransactionPriceSetWithinAverageSpreadOfALiquidInstrument"] = 0] = "NoPrecedingOrderInBookAsTransactionPriceSetWithinAverageSpreadOfALiquidInstrument";
    TrdRegPublicationReason[TrdRegPublicationReason["NoPrecedingOrderInBookAsTransactionPriceDependsOnSystemSetReferencePriceForAnIlliquidInstrument"] = 1] = "NoPrecedingOrderInBookAsTransactionPriceDependsOnSystemSetReferencePriceForAnIlliquidInstrument";
    TrdRegPublicationReason[TrdRegPublicationReason["NoPrecedingOrderInBookAsTransactionPriceIsForTransactionSubjectToConditionsOtherThanCurrentMarketPrice"] = 2] = "NoPrecedingOrderInBookAsTransactionPriceIsForTransactionSubjectToConditionsOtherThanCurrentMarketPrice";
    TrdRegPublicationReason[TrdRegPublicationReason["NoPublicPriceForPrecedingOrderAsPublicReferencePriceWasUsedForMatchingOrders"] = 3] = "NoPublicPriceForPrecedingOrderAsPublicReferencePriceWasUsedForMatchingOrders";
    TrdRegPublicationReason[TrdRegPublicationReason["NoPublicPriceQuotedAsInstrumentIsIlliquid"] = 4] = "NoPublicPriceQuotedAsInstrumentIsIlliquid";
    TrdRegPublicationReason[TrdRegPublicationReason["NoPublicPriceQuotedBySystematicInternaliserAsOrderIsAboveStandardMarketSize"] = 5] = "NoPublicPriceQuotedBySystematicInternaliserAsOrderIsAboveStandardMarketSize";
    TrdRegPublicationReason[TrdRegPublicationReason["DeferralDueToLargeInScale"] = 6] = "DeferralDueToLargeInScale";
    TrdRegPublicationReason[TrdRegPublicationReason["DeferralDueToIlliquidInstrument"] = 7] = "DeferralDueToIlliquidInstrument";
    TrdRegPublicationReason[TrdRegPublicationReason["DeferralDueToSizeSpecific"] = 8] = "DeferralDueToSizeSpecific";
    TrdRegPublicationReason[TrdRegPublicationReason["NoPublicPriceAndOrSizeQuotedAsTransactionIsLargeInScale"] = 9] = "NoPublicPriceAndOrSizeQuotedAsTransactionIsLargeInScale";
    TrdRegPublicationReason[TrdRegPublicationReason["NoPublicPriceAndOrSizeQuotedDueToOrderBeingHidden"] = 10] = "NoPublicPriceAndOrSizeQuotedDueToOrderBeingHidden";
    TrdRegPublicationReason[TrdRegPublicationReason["ExemptedDueToSecuritiesFinancingTransaction"] = 11] = "ExemptedDueToSecuritiesFinancingTransaction";
    TrdRegPublicationReason[TrdRegPublicationReason["ExemptedDueToEuropeanSystemOfCentralBanksEscbPolicyTransaction"] = 12] = "ExemptedDueToEuropeanSystemOfCentralBanksEscbPolicyTransaction";
})(TrdRegPublicationReason = exports.TrdRegPublicationReason || (exports.TrdRegPublicationReason = {}));
var SideTradeReportingIndicator;
(function (SideTradeReportingIndicator) {
    SideTradeReportingIndicator[SideTradeReportingIndicator["TradeHasNotYetBeenReported"] = 0] = "TradeHasNotYetBeenReported";
    SideTradeReportingIndicator[SideTradeReportingIndicator["TradeHasBeenReportedByATradingVenueAsAnOnBookTrade"] = 1] = "TradeHasBeenReportedByATradingVenueAsAnOnBookTrade";
    SideTradeReportingIndicator[SideTradeReportingIndicator["TradeHasBeenReportedAsASystematicInternaliserSellerTrade"] = 2] = "TradeHasBeenReportedAsASystematicInternaliserSellerTrade";
    SideTradeReportingIndicator[SideTradeReportingIndicator["TradeHasBeenReportedAsASystematicInternaliserBuyerTrade"] = 3] = "TradeHasBeenReportedAsASystematicInternaliserBuyerTrade";
    SideTradeReportingIndicator[SideTradeReportingIndicator["TradeHasBeenReportedAsANonSystematicInternaliserSellerTrade"] = 4] = "TradeHasBeenReportedAsANonSystematicInternaliserSellerTrade";
    SideTradeReportingIndicator[SideTradeReportingIndicator["TradeHasBeenReportedUnderASubDelegationArrangementByAnInvestmentFirmToAReportingFacilityEGApaOnBehalfOfAnotherInvestmentFirm"] = 5] = "TradeHasBeenReportedUnderASubDelegationArrangementByAnInvestmentFirmToAReportingFacilityEGApaOnBehalfOfAnotherInvestmentFirm";
})(SideTradeReportingIndicator = exports.SideTradeReportingIndicator || (exports.SideTradeReportingIndicator = {}));
var MassActionReason;
(function (MassActionReason) {
    MassActionReason[MassActionReason["NoSpecialReasonDefault"] = 0] = "NoSpecialReasonDefault";
    MassActionReason[MassActionReason["TradingRiskControl"] = 1] = "TradingRiskControl";
    MassActionReason[MassActionReason["ClearingRiskControl"] = 2] = "ClearingRiskControl";
    MassActionReason[MassActionReason["MarketMakerProtection"] = 3] = "MarketMakerProtection";
    MassActionReason[MassActionReason["StopTrading"] = 4] = "StopTrading";
    MassActionReason[MassActionReason["EmergencyAction"] = 5] = "EmergencyAction";
    MassActionReason[MassActionReason["SessionLossOrLogout"] = 6] = "SessionLossOrLogout";
    MassActionReason[MassActionReason["DuplicateLogin"] = 7] = "DuplicateLogin";
    MassActionReason[MassActionReason["ProductNotTraded"] = 8] = "ProductNotTraded";
    MassActionReason[MassActionReason["InstrumentNotTraded"] = 9] = "InstrumentNotTraded";
    MassActionReason[MassActionReason["ComplexInstrumentDeleted"] = 10] = "ComplexInstrumentDeleted";
    MassActionReason[MassActionReason["CircuitBreakerActivated"] = 11] = "CircuitBreakerActivated";
    MassActionReason[MassActionReason["Other"] = 99] = "Other";
})(MassActionReason = exports.MassActionReason || (exports.MassActionReason = {}));
var NotAffectedReason;
(function (NotAffectedReason) {
    NotAffectedReason[NotAffectedReason["OrderSuspended"] = 0] = "OrderSuspended";
    NotAffectedReason[NotAffectedReason["InstrumentSuspended"] = 1] = "InstrumentSuspended";
})(NotAffectedReason = exports.NotAffectedReason || (exports.NotAffectedReason = {}));
var OrderOwnershipIndicator;
(function (OrderOwnershipIndicator) {
    OrderOwnershipIndicator[OrderOwnershipIndicator["NoChangeOfOwnershipDefault"] = 0] = "NoChangeOfOwnershipDefault";
    OrderOwnershipIndicator[OrderOwnershipIndicator["ChangeOfOwnershipToExecutingParty"] = 1] = "ChangeOfOwnershipToExecutingParty";
    OrderOwnershipIndicator[OrderOwnershipIndicator["ChangeOfOwnershipToEnteringParty"] = 2] = "ChangeOfOwnershipToEnteringParty";
    OrderOwnershipIndicator[OrderOwnershipIndicator["ChangeOfOwnershipToSpecifiedParty"] = 3] = "ChangeOfOwnershipToSpecifiedParty";
})(OrderOwnershipIndicator = exports.OrderOwnershipIndicator || (exports.OrderOwnershipIndicator = {}));
var InTheMoneyCondition;
(function (InTheMoneyCondition) {
    InTheMoneyCondition[InTheMoneyCondition["StandardInTheMoney"] = 0] = "StandardInTheMoney";
    InTheMoneyCondition[InTheMoneyCondition["AtTheMoneyIsInTheMoney"] = 1] = "AtTheMoneyIsInTheMoney";
    InTheMoneyCondition[InTheMoneyCondition["AtTheMoneyCallIsInTheMoney"] = 2] = "AtTheMoneyCallIsInTheMoney";
    InTheMoneyCondition[InTheMoneyCondition["AtTheMoneyPutIsInTheMoney"] = 3] = "AtTheMoneyPutIsInTheMoney";
})(InTheMoneyCondition = exports.InTheMoneyCondition || (exports.InTheMoneyCondition = {}));
var LegInTheMoneyCondition;
(function (LegInTheMoneyCondition) {
    LegInTheMoneyCondition[LegInTheMoneyCondition["StandardInTheMoney"] = 0] = "StandardInTheMoney";
    LegInTheMoneyCondition[LegInTheMoneyCondition["AtTheMoneyIsInTheMoney"] = 1] = "AtTheMoneyIsInTheMoney";
    LegInTheMoneyCondition[LegInTheMoneyCondition["AtTheMoneyCallIsInTheMoney"] = 2] = "AtTheMoneyCallIsInTheMoney";
    LegInTheMoneyCondition[LegInTheMoneyCondition["AtTheMoneyPutIsInTheMoney"] = 3] = "AtTheMoneyPutIsInTheMoney";
})(LegInTheMoneyCondition = exports.LegInTheMoneyCondition || (exports.LegInTheMoneyCondition = {}));
var UnderlyingInTheMoneyCondition;
(function (UnderlyingInTheMoneyCondition) {
    UnderlyingInTheMoneyCondition[UnderlyingInTheMoneyCondition["StandardInTheMoney"] = 0] = "StandardInTheMoney";
    UnderlyingInTheMoneyCondition[UnderlyingInTheMoneyCondition["AtTheMoneyIsInTheMoney"] = 1] = "AtTheMoneyIsInTheMoney";
    UnderlyingInTheMoneyCondition[UnderlyingInTheMoneyCondition["AtTheMoneyCallIsInTheMoney"] = 2] = "AtTheMoneyCallIsInTheMoney";
    UnderlyingInTheMoneyCondition[UnderlyingInTheMoneyCondition["AtTheMoneyPutIsInTheMoney"] = 3] = "AtTheMoneyPutIsInTheMoney";
})(UnderlyingInTheMoneyCondition = exports.UnderlyingInTheMoneyCondition || (exports.UnderlyingInTheMoneyCondition = {}));
var DerivativeInTheMoneyCondition;
(function (DerivativeInTheMoneyCondition) {
    DerivativeInTheMoneyCondition[DerivativeInTheMoneyCondition["StandardInTheMoney"] = 0] = "StandardInTheMoney";
    DerivativeInTheMoneyCondition[DerivativeInTheMoneyCondition["AtTheMoneyIsInTheMoney"] = 1] = "AtTheMoneyIsInTheMoney";
    DerivativeInTheMoneyCondition[DerivativeInTheMoneyCondition["AtTheMoneyCallIsInTheMoney"] = 2] = "AtTheMoneyCallIsInTheMoney";
    DerivativeInTheMoneyCondition[DerivativeInTheMoneyCondition["AtTheMoneyPutIsInTheMoney"] = 3] = "AtTheMoneyPutIsInTheMoney";
})(DerivativeInTheMoneyCondition = exports.DerivativeInTheMoneyCondition || (exports.DerivativeInTheMoneyCondition = {}));
var SideCollateralAmountType;
(function (SideCollateralAmountType) {
    SideCollateralAmountType[SideCollateralAmountType["MarketValuationTheDefault"] = 0] = "MarketValuationTheDefault";
    SideCollateralAmountType[SideCollateralAmountType["PortfolioValueBeforeProcessingPledgeRequest"] = 1] = "PortfolioValueBeforeProcessingPledgeRequest";
    SideCollateralAmountType[SideCollateralAmountType["ValueConfirmedAsLockedUpForProcessingAPledgeRequest"] = 2] = "ValueConfirmedAsLockedUpForProcessingAPledgeRequest";
    SideCollateralAmountType[SideCollateralAmountType["CreditValueOfCollateralAtCcpProcessingAPledgeRequest"] = 3] = "CreditValueOfCollateralAtCcpProcessingAPledgeRequest";
    SideCollateralAmountType[SideCollateralAmountType["AdditionalCollateralValue"] = 4] = "AdditionalCollateralValue";
})(SideCollateralAmountType = exports.SideCollateralAmountType || (exports.SideCollateralAmountType = {}));
var SideCollateralFXRateCalc;
(function (SideCollateralFXRateCalc) {
    SideCollateralFXRateCalc["Divide"] = "D";
    SideCollateralFXRateCalc["Multiply"] = "M";
})(SideCollateralFXRateCalc = exports.SideCollateralFXRateCalc || (exports.SideCollateralFXRateCalc = {}));
var ExDestinationType;
(function (ExDestinationType) {
    ExDestinationType[ExDestinationType["NoRestriction"] = 0] = "NoRestriction";
    ExDestinationType[ExDestinationType["CanBeTradedOnlyOnATradingVenue"] = 1] = "CanBeTradedOnlyOnATradingVenue";
    ExDestinationType[ExDestinationType["CanBeTradedOnlyOnASystematicInternaliserSi"] = 2] = "CanBeTradedOnlyOnASystematicInternaliserSi";
    ExDestinationType[ExDestinationType["CanBeTradedOnATradingVenueOrSystematicInternaliserSi"] = 3] = "CanBeTradedOnATradingVenueOrSystematicInternaliserSi";
})(ExDestinationType = exports.ExDestinationType || (exports.ExDestinationType = {}));
var AdditionalTermBondSecurityIDSource;
(function (AdditionalTermBondSecurityIDSource) {
    AdditionalTermBondSecurityIDSource["Cusip"] = "1";
    AdditionalTermBondSecurityIDSource["Sedol"] = "2";
    AdditionalTermBondSecurityIDSource["Quik"] = "3";
    AdditionalTermBondSecurityIDSource["IsinNumber"] = "4";
    AdditionalTermBondSecurityIDSource["RicCode"] = "5";
    AdditionalTermBondSecurityIDSource["IsoCurrencyCode"] = "6";
    AdditionalTermBondSecurityIDSource["IsoCountryCode"] = "7";
    AdditionalTermBondSecurityIDSource["ExchangeSymbol"] = "8";
    AdditionalTermBondSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    AdditionalTermBondSecurityIDSource["BloombergSymbol"] = "A";
    AdditionalTermBondSecurityIDSource["Wertpapier"] = "B";
    AdditionalTermBondSecurityIDSource["Dutch"] = "C";
    AdditionalTermBondSecurityIDSource["Valoren"] = "D";
    AdditionalTermBondSecurityIDSource["Sicovam"] = "E";
    AdditionalTermBondSecurityIDSource["Belgian"] = "F";
    AdditionalTermBondSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    AdditionalTermBondSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    AdditionalTermBondSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    AdditionalTermBondSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    AdditionalTermBondSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    AdditionalTermBondSecurityIDSource["LetterOfCredit"] = "L";
    AdditionalTermBondSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    AdditionalTermBondSecurityIDSource["MarkitRedEntityClip"] = "N";
    AdditionalTermBondSecurityIDSource["MarkitRedPairClip"] = "P";
    AdditionalTermBondSecurityIDSource["CftcCommodityCode"] = "Q";
    AdditionalTermBondSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    AdditionalTermBondSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    AdditionalTermBondSecurityIDSource["LegalEntityIdentifier"] = "T";
    AdditionalTermBondSecurityIDSource["Synthetic"] = "U";
    AdditionalTermBondSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(AdditionalTermBondSecurityIDSource = exports.AdditionalTermBondSecurityIDSource || (exports.AdditionalTermBondSecurityIDSource = {}));
var AdditionalTermBondSeniority;
(function (AdditionalTermBondSeniority) {
    AdditionalTermBondSeniority["SeniorSecured"] = "SD";
    AdditionalTermBondSeniority["Senior"] = "SR";
    AdditionalTermBondSeniority["Subordinated"] = "SB";
})(AdditionalTermBondSeniority = exports.AdditionalTermBondSeniority || (exports.AdditionalTermBondSeniority = {}));
var AdditionalTermBondCouponType;
(function (AdditionalTermBondCouponType) {
    AdditionalTermBondCouponType[AdditionalTermBondCouponType["Zero"] = 0] = "Zero";
    AdditionalTermBondCouponType[AdditionalTermBondCouponType["FixedRate"] = 1] = "FixedRate";
    AdditionalTermBondCouponType[AdditionalTermBondCouponType["FloatingRate"] = 2] = "FloatingRate";
    AdditionalTermBondCouponType[AdditionalTermBondCouponType["Structured"] = 3] = "Structured";
})(AdditionalTermBondCouponType = exports.AdditionalTermBondCouponType || (exports.AdditionalTermBondCouponType = {}));
var AdditionalTermBondCouponFrequencyUnit;
(function (AdditionalTermBondCouponFrequencyUnit) {
    AdditionalTermBondCouponFrequencyUnit["Day"] = "D";
    AdditionalTermBondCouponFrequencyUnit["Week"] = "Wk";
    AdditionalTermBondCouponFrequencyUnit["Month"] = "Mo";
    AdditionalTermBondCouponFrequencyUnit["Year"] = "Yr";
    AdditionalTermBondCouponFrequencyUnit["Hour"] = "H";
    AdditionalTermBondCouponFrequencyUnit["Minute"] = "Min";
    AdditionalTermBondCouponFrequencyUnit["Second"] = "S";
    AdditionalTermBondCouponFrequencyUnit["Term"] = "T";
})(AdditionalTermBondCouponFrequencyUnit = exports.AdditionalTermBondCouponFrequencyUnit || (exports.AdditionalTermBondCouponFrequencyUnit = {}));
var AdditionalTermBondDayCount;
(function (AdditionalTermBondDayCount) {
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["E11"] = 0] = "E11";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["E3036030U360OrBondBasis"] = 1] = "E3036030U360OrBondBasis";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["E30360Sia"] = 2] = "E30360Sia";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["E30360M"] = 3] = "E30360M";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["E30E360EurobondBasis"] = 4] = "E30E360EurobondBasis";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["E30E360Isda"] = 5] = "E30E360Isda";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["Act360"] = 6] = "Act360";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["Act365Fixed"] = 7] = "Act365Fixed";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["ActActAfb"] = 8] = "ActActAfb";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["ActActIcma"] = 9] = "ActActIcma";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["ActActIcsmaUltimo"] = 10] = "ActActIcsmaUltimo";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["ActActIsda"] = 11] = "ActActIsda";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["Bus252"] = 12] = "Bus252";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["E30E360"] = 13] = "E30E360";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["Act365L"] = 14] = "Act365L";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["Nl365"] = 15] = "Nl365";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["Nl360"] = 16] = "Nl360";
    AdditionalTermBondDayCount[AdditionalTermBondDayCount["Act364"] = 17] = "Act364";
})(AdditionalTermBondDayCount = exports.AdditionalTermBondDayCount || (exports.AdditionalTermBondDayCount = {}));
var CashSettlQuoteMethod;
(function (CashSettlQuoteMethod) {
    CashSettlQuoteMethod[CashSettlQuoteMethod["Bid"] = 0] = "Bid";
    CashSettlQuoteMethod[CashSettlQuoteMethod["Mid"] = 1] = "Mid";
    CashSettlQuoteMethod[CashSettlQuoteMethod["Offer"] = 2] = "Offer";
})(CashSettlQuoteMethod = exports.CashSettlQuoteMethod || (exports.CashSettlQuoteMethod = {}));
var CashSettlValuationMethod;
(function (CashSettlValuationMethod) {
    CashSettlValuationMethod[CashSettlValuationMethod["Market"] = 0] = "Market";
    CashSettlValuationMethod[CashSettlValuationMethod["Highest"] = 1] = "Highest";
    CashSettlValuationMethod[CashSettlValuationMethod["AverageMarket"] = 2] = "AverageMarket";
    CashSettlValuationMethod[CashSettlValuationMethod["AverageHighest"] = 3] = "AverageHighest";
    CashSettlValuationMethod[CashSettlValuationMethod["BlendedMarket"] = 4] = "BlendedMarket";
    CashSettlValuationMethod[CashSettlValuationMethod["BlendedHighest"] = 5] = "BlendedHighest";
    CashSettlValuationMethod[CashSettlValuationMethod["AverageBlendedMarket"] = 6] = "AverageBlendedMarket";
    CashSettlValuationMethod[CashSettlValuationMethod["AverageBlendedHighest"] = 7] = "AverageBlendedHighest";
})(CashSettlValuationMethod = exports.CashSettlValuationMethod || (exports.CashSettlValuationMethod = {}));
var StreamType;
(function (StreamType) {
    StreamType[StreamType["PaymentCashSettlement"] = 0] = "PaymentCashSettlement";
    StreamType[StreamType["PhysicalDelivery"] = 1] = "PhysicalDelivery";
})(StreamType = exports.StreamType || (exports.StreamType = {}));
var StreamPaySide;
(function (StreamPaySide) {
    StreamPaySide[StreamPaySide["Buy"] = 1] = "Buy";
    StreamPaySide[StreamPaySide["Sell"] = 2] = "Sell";
})(StreamPaySide = exports.StreamPaySide || (exports.StreamPaySide = {}));
var StreamReceiveSide;
(function (StreamReceiveSide) {
    StreamReceiveSide[StreamReceiveSide["Buy"] = 1] = "Buy";
    StreamReceiveSide[StreamReceiveSide["Sell"] = 2] = "Sell";
})(StreamReceiveSide = exports.StreamReceiveSide || (exports.StreamReceiveSide = {}));
var UnderlyingStreamEffectiveDateBusinessDayConvention;
(function (UnderlyingStreamEffectiveDateBusinessDayConvention) {
    UnderlyingStreamEffectiveDateBusinessDayConvention[UnderlyingStreamEffectiveDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingStreamEffectiveDateBusinessDayConvention[UnderlyingStreamEffectiveDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingStreamEffectiveDateBusinessDayConvention[UnderlyingStreamEffectiveDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingStreamEffectiveDateBusinessDayConvention[UnderlyingStreamEffectiveDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingStreamEffectiveDateBusinessDayConvention[UnderlyingStreamEffectiveDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingStreamEffectiveDateBusinessDayConvention[UnderlyingStreamEffectiveDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingStreamEffectiveDateBusinessDayConvention[UnderlyingStreamEffectiveDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingStreamEffectiveDateBusinessDayConvention[UnderlyingStreamEffectiveDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingStreamEffectiveDateBusinessDayConvention = exports.UnderlyingStreamEffectiveDateBusinessDayConvention || (exports.UnderlyingStreamEffectiveDateBusinessDayConvention = {}));
var UnderlyingStreamEffectiveDateOffsetUnit;
(function (UnderlyingStreamEffectiveDateOffsetUnit) {
    UnderlyingStreamEffectiveDateOffsetUnit["Day"] = "D";
    UnderlyingStreamEffectiveDateOffsetUnit["Week"] = "Wk";
    UnderlyingStreamEffectiveDateOffsetUnit["Month"] = "Mo";
    UnderlyingStreamEffectiveDateOffsetUnit["Year"] = "Yr";
})(UnderlyingStreamEffectiveDateOffsetUnit = exports.UnderlyingStreamEffectiveDateOffsetUnit || (exports.UnderlyingStreamEffectiveDateOffsetUnit = {}));
var UnderlyingStreamEffectiveDateOffsetDayType;
(function (UnderlyingStreamEffectiveDateOffsetDayType) {
    UnderlyingStreamEffectiveDateOffsetDayType[UnderlyingStreamEffectiveDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingStreamEffectiveDateOffsetDayType[UnderlyingStreamEffectiveDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingStreamEffectiveDateOffsetDayType[UnderlyingStreamEffectiveDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingStreamEffectiveDateOffsetDayType[UnderlyingStreamEffectiveDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingStreamEffectiveDateOffsetDayType[UnderlyingStreamEffectiveDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingStreamEffectiveDateOffsetDayType[UnderlyingStreamEffectiveDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingStreamEffectiveDateOffsetDayType = exports.UnderlyingStreamEffectiveDateOffsetDayType || (exports.UnderlyingStreamEffectiveDateOffsetDayType = {}));
var StreamTerminationDateBusinessDayConvention;
(function (StreamTerminationDateBusinessDayConvention) {
    StreamTerminationDateBusinessDayConvention[StreamTerminationDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    StreamTerminationDateBusinessDayConvention[StreamTerminationDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    StreamTerminationDateBusinessDayConvention[StreamTerminationDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    StreamTerminationDateBusinessDayConvention[StreamTerminationDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    StreamTerminationDateBusinessDayConvention[StreamTerminationDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    StreamTerminationDateBusinessDayConvention[StreamTerminationDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    StreamTerminationDateBusinessDayConvention[StreamTerminationDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    StreamTerminationDateBusinessDayConvention[StreamTerminationDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(StreamTerminationDateBusinessDayConvention = exports.StreamTerminationDateBusinessDayConvention || (exports.StreamTerminationDateBusinessDayConvention = {}));
var StreamTerminationDateOffsetUnit;
(function (StreamTerminationDateOffsetUnit) {
    StreamTerminationDateOffsetUnit["Day"] = "D";
    StreamTerminationDateOffsetUnit["Week"] = "Wk";
    StreamTerminationDateOffsetUnit["Month"] = "Mo";
    StreamTerminationDateOffsetUnit["Year"] = "Yr";
})(StreamTerminationDateOffsetUnit = exports.StreamTerminationDateOffsetUnit || (exports.StreamTerminationDateOffsetUnit = {}));
var StreamTerminationDateOffsetDayType;
(function (StreamTerminationDateOffsetDayType) {
    StreamTerminationDateOffsetDayType[StreamTerminationDateOffsetDayType["Business"] = 0] = "Business";
    StreamTerminationDateOffsetDayType[StreamTerminationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    StreamTerminationDateOffsetDayType[StreamTerminationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    StreamTerminationDateOffsetDayType[StreamTerminationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    StreamTerminationDateOffsetDayType[StreamTerminationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    StreamTerminationDateOffsetDayType[StreamTerminationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(StreamTerminationDateOffsetDayType = exports.StreamTerminationDateOffsetDayType || (exports.StreamTerminationDateOffsetDayType = {}));
var StreamCalculationPeriodBusinessDayConvention;
(function (StreamCalculationPeriodBusinessDayConvention) {
    StreamCalculationPeriodBusinessDayConvention[StreamCalculationPeriodBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    StreamCalculationPeriodBusinessDayConvention[StreamCalculationPeriodBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    StreamCalculationPeriodBusinessDayConvention[StreamCalculationPeriodBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    StreamCalculationPeriodBusinessDayConvention[StreamCalculationPeriodBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    StreamCalculationPeriodBusinessDayConvention[StreamCalculationPeriodBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    StreamCalculationPeriodBusinessDayConvention[StreamCalculationPeriodBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    StreamCalculationPeriodBusinessDayConvention[StreamCalculationPeriodBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    StreamCalculationPeriodBusinessDayConvention[StreamCalculationPeriodBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(StreamCalculationPeriodBusinessDayConvention = exports.StreamCalculationPeriodBusinessDayConvention || (exports.StreamCalculationPeriodBusinessDayConvention = {}));
var StreamFirstPeriodStartDateBusinessDayConvention;
(function (StreamFirstPeriodStartDateBusinessDayConvention) {
    StreamFirstPeriodStartDateBusinessDayConvention[StreamFirstPeriodStartDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    StreamFirstPeriodStartDateBusinessDayConvention[StreamFirstPeriodStartDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    StreamFirstPeriodStartDateBusinessDayConvention[StreamFirstPeriodStartDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    StreamFirstPeriodStartDateBusinessDayConvention[StreamFirstPeriodStartDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    StreamFirstPeriodStartDateBusinessDayConvention[StreamFirstPeriodStartDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    StreamFirstPeriodStartDateBusinessDayConvention[StreamFirstPeriodStartDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    StreamFirstPeriodStartDateBusinessDayConvention[StreamFirstPeriodStartDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    StreamFirstPeriodStartDateBusinessDayConvention[StreamFirstPeriodStartDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(StreamFirstPeriodStartDateBusinessDayConvention = exports.StreamFirstPeriodStartDateBusinessDayConvention || (exports.StreamFirstPeriodStartDateBusinessDayConvention = {}));
var StreamCalculationFrequencyUnit;
(function (StreamCalculationFrequencyUnit) {
    StreamCalculationFrequencyUnit["Day"] = "D";
    StreamCalculationFrequencyUnit["Week"] = "Wk";
    StreamCalculationFrequencyUnit["Month"] = "Mo";
    StreamCalculationFrequencyUnit["Year"] = "Yr";
    StreamCalculationFrequencyUnit["Hour"] = "H";
    StreamCalculationFrequencyUnit["Minute"] = "Min";
    StreamCalculationFrequencyUnit["Second"] = "S";
    StreamCalculationFrequencyUnit["Term"] = "T";
})(StreamCalculationFrequencyUnit = exports.StreamCalculationFrequencyUnit || (exports.StreamCalculationFrequencyUnit = {}));
var StreamCalculationRollConvention;
(function (StreamCalculationRollConvention) {
    StreamCalculationRollConvention["E1stDayOfTheMonth"] = "1";
    StreamCalculationRollConvention["E2ndDayOfTheMonth"] = "2";
    StreamCalculationRollConvention["E3rdDayOfTheMonth"] = "3";
    StreamCalculationRollConvention["E4thDayOfTheMonth"] = "4";
    StreamCalculationRollConvention["E5thDayOfTheMonth"] = "5";
    StreamCalculationRollConvention["E6ThdDayOfTheMonth"] = "6";
    StreamCalculationRollConvention["E7thDayOfTheMonth"] = "7";
    StreamCalculationRollConvention["E8thDayOfTheMonth"] = "8";
    StreamCalculationRollConvention["E9thDayOfTheMonth"] = "9";
    StreamCalculationRollConvention["E10thDayOfTheMonth"] = "10";
    StreamCalculationRollConvention["E11ThDayOfTheMonth"] = "11";
    StreamCalculationRollConvention["E12ThDayOfTheMonth"] = "12";
    StreamCalculationRollConvention["E13ThDayOfTheMonth"] = "13";
    StreamCalculationRollConvention["E14thDayOfTheMonth"] = "14";
    StreamCalculationRollConvention["E15thDayOfTheMonth"] = "15";
    StreamCalculationRollConvention["E16thDayOfTheMonth"] = "16";
    StreamCalculationRollConvention["E17thDayOfTheMonth"] = "17";
    StreamCalculationRollConvention["E18thDayOfTheMonth"] = "18";
    StreamCalculationRollConvention["E19thDayOfTheMonth"] = "19";
    StreamCalculationRollConvention["E20thDayOfTheMonth"] = "20";
    StreamCalculationRollConvention["E21stDayOfTheMonth"] = "21";
    StreamCalculationRollConvention["E22ndDayOfTheMonth"] = "22";
    StreamCalculationRollConvention["E23rdDayOfTheMonth"] = "23";
    StreamCalculationRollConvention["E24thDayOfTheMonth"] = "24";
    StreamCalculationRollConvention["E25thDayOfTheMonth"] = "25";
    StreamCalculationRollConvention["E26thDayOfTheMonth"] = "26";
    StreamCalculationRollConvention["E27thDayOfTheMonth"] = "27";
    StreamCalculationRollConvention["E28thDayOfTheMonth"] = "28";
    StreamCalculationRollConvention["E29thDayOfTheMonth"] = "29";
    StreamCalculationRollConvention["E30thDayOfTheMonth"] = "30";
    StreamCalculationRollConvention["TheEndOfTheMonth"] = "EOM";
    StreamCalculationRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    StreamCalculationRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    StreamCalculationRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    StreamCalculationRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    StreamCalculationRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    StreamCalculationRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    StreamCalculationRollConvention["NoAdjustment"] = "NONE";
    StreamCalculationRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    StreamCalculationRollConvention["Monday"] = "MON";
    StreamCalculationRollConvention["Tuesday"] = "TUE";
    StreamCalculationRollConvention["Wednesday"] = "WED";
    StreamCalculationRollConvention["Thursday"] = "THU";
    StreamCalculationRollConvention["Friday"] = "FRI";
    StreamCalculationRollConvention["Saturday"] = "SAT";
    StreamCalculationRollConvention["Sunday"] = "SUN";
})(StreamCalculationRollConvention = exports.StreamCalculationRollConvention || (exports.StreamCalculationRollConvention = {}));
var LegPaymentStreamNonDeliverableSettlRateSource;
(function (LegPaymentStreamNonDeliverableSettlRateSource) {
    LegPaymentStreamNonDeliverableSettlRateSource[LegPaymentStreamNonDeliverableSettlRateSource["Bloomberg"] = 0] = "Bloomberg";
    LegPaymentStreamNonDeliverableSettlRateSource[LegPaymentStreamNonDeliverableSettlRateSource["Reuters"] = 1] = "Reuters";
    LegPaymentStreamNonDeliverableSettlRateSource[LegPaymentStreamNonDeliverableSettlRateSource["Telerate"] = 2] = "Telerate";
    LegPaymentStreamNonDeliverableSettlRateSource[LegPaymentStreamNonDeliverableSettlRateSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    LegPaymentStreamNonDeliverableSettlRateSource[LegPaymentStreamNonDeliverableSettlRateSource["Other"] = 99] = "Other";
})(LegPaymentStreamNonDeliverableSettlRateSource = exports.LegPaymentStreamNonDeliverableSettlRateSource || (exports.LegPaymentStreamNonDeliverableSettlRateSource = {}));
var SettlRatePostponementCalculationAgent;
(function (SettlRatePostponementCalculationAgent) {
    SettlRatePostponementCalculationAgent[SettlRatePostponementCalculationAgent["ExercisingParty"] = 0] = "ExercisingParty";
    SettlRatePostponementCalculationAgent[SettlRatePostponementCalculationAgent["NonExercisingParty"] = 1] = "NonExercisingParty";
    SettlRatePostponementCalculationAgent[SettlRatePostponementCalculationAgent["AsSpecifiedInTheMasterAgreement"] = 2] = "AsSpecifiedInTheMasterAgreement";
    SettlRatePostponementCalculationAgent[SettlRatePostponementCalculationAgent["AsSpecifiedInTheStandardTermsSupplement"] = 3] = "AsSpecifiedInTheStandardTermsSupplement";
})(SettlRatePostponementCalculationAgent = exports.SettlRatePostponementCalculationAgent || (exports.SettlRatePostponementCalculationAgent = {}));
var ProvisionType;
(function (ProvisionType) {
    ProvisionType[ProvisionType["MandatoryEarlyTermination"] = 0] = "MandatoryEarlyTermination";
    ProvisionType[ProvisionType["OptionalEarlyTermination"] = 1] = "OptionalEarlyTermination";
    ProvisionType[ProvisionType["Cancelable"] = 2] = "Cancelable";
    ProvisionType[ProvisionType["Extendible"] = 3] = "Extendible";
    ProvisionType[ProvisionType["MutualEarlyTermination"] = 4] = "MutualEarlyTermination";
})(ProvisionType = exports.ProvisionType || (exports.ProvisionType = {}));
var ProvisionDateBusinessDayConvention;
(function (ProvisionDateBusinessDayConvention) {
    ProvisionDateBusinessDayConvention[ProvisionDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    ProvisionDateBusinessDayConvention[ProvisionDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    ProvisionDateBusinessDayConvention[ProvisionDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    ProvisionDateBusinessDayConvention[ProvisionDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    ProvisionDateBusinessDayConvention[ProvisionDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    ProvisionDateBusinessDayConvention[ProvisionDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    ProvisionDateBusinessDayConvention[ProvisionDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    ProvisionDateBusinessDayConvention[ProvisionDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(ProvisionDateBusinessDayConvention = exports.ProvisionDateBusinessDayConvention || (exports.ProvisionDateBusinessDayConvention = {}));
var ProvisionDateTenorUnit;
(function (ProvisionDateTenorUnit) {
    ProvisionDateTenorUnit["Day"] = "D";
    ProvisionDateTenorUnit["Week"] = "Wk";
    ProvisionDateTenorUnit["Month"] = "Mo";
    ProvisionDateTenorUnit["Year"] = "Yr";
})(ProvisionDateTenorUnit = exports.ProvisionDateTenorUnit || (exports.ProvisionDateTenorUnit = {}));
var ProvisionCalculationAgent;
(function (ProvisionCalculationAgent) {
    ProvisionCalculationAgent[ProvisionCalculationAgent["ExercisingParty"] = 0] = "ExercisingParty";
    ProvisionCalculationAgent[ProvisionCalculationAgent["NonExercisingParty"] = 1] = "NonExercisingParty";
    ProvisionCalculationAgent[ProvisionCalculationAgent["AsSpecifiedInTheMasterAgreement"] = 2] = "AsSpecifiedInTheMasterAgreement";
    ProvisionCalculationAgent[ProvisionCalculationAgent["AsSpecifiedInTheStandardTermsSupplement"] = 3] = "AsSpecifiedInTheStandardTermsSupplement";
})(ProvisionCalculationAgent = exports.ProvisionCalculationAgent || (exports.ProvisionCalculationAgent = {}));
var ProvisionOptionSinglePartyBuyerSide;
(function (ProvisionOptionSinglePartyBuyerSide) {
    ProvisionOptionSinglePartyBuyerSide[ProvisionOptionSinglePartyBuyerSide["Buy"] = 1] = "Buy";
    ProvisionOptionSinglePartyBuyerSide[ProvisionOptionSinglePartyBuyerSide["Sell"] = 2] = "Sell";
})(ProvisionOptionSinglePartyBuyerSide = exports.ProvisionOptionSinglePartyBuyerSide || (exports.ProvisionOptionSinglePartyBuyerSide = {}));
var ProvisionOptionSinglePartySellerSide;
(function (ProvisionOptionSinglePartySellerSide) {
    ProvisionOptionSinglePartySellerSide[ProvisionOptionSinglePartySellerSide["Buy"] = 1] = "Buy";
    ProvisionOptionSinglePartySellerSide[ProvisionOptionSinglePartySellerSide["Sell"] = 2] = "Sell";
})(ProvisionOptionSinglePartySellerSide = exports.ProvisionOptionSinglePartySellerSide || (exports.ProvisionOptionSinglePartySellerSide = {}));
var ProvisionOptionExerciseStyle;
(function (ProvisionOptionExerciseStyle) {
    ProvisionOptionExerciseStyle[ProvisionOptionExerciseStyle["European"] = 0] = "European";
    ProvisionOptionExerciseStyle[ProvisionOptionExerciseStyle["American"] = 1] = "American";
    ProvisionOptionExerciseStyle[ProvisionOptionExerciseStyle["Bermuda"] = 2] = "Bermuda";
    ProvisionOptionExerciseStyle[ProvisionOptionExerciseStyle["Other"] = 99] = "Other";
})(ProvisionOptionExerciseStyle = exports.ProvisionOptionExerciseStyle || (exports.ProvisionOptionExerciseStyle = {}));
var ProvisionCashSettlMethod;
(function (ProvisionCashSettlMethod) {
    ProvisionCashSettlMethod[ProvisionCashSettlMethod["CashPrice"] = 0] = "CashPrice";
    ProvisionCashSettlMethod[ProvisionCashSettlMethod["CashPriceAlternate"] = 1] = "CashPriceAlternate";
    ProvisionCashSettlMethod[ProvisionCashSettlMethod["ParYieldCurveAdjusted"] = 2] = "ParYieldCurveAdjusted";
    ProvisionCashSettlMethod[ProvisionCashSettlMethod["ZeroCouponYieldCurveAdjusted"] = 3] = "ZeroCouponYieldCurveAdjusted";
    ProvisionCashSettlMethod[ProvisionCashSettlMethod["ParYieldCurveUnadjusted"] = 4] = "ParYieldCurveUnadjusted";
    ProvisionCashSettlMethod[ProvisionCashSettlMethod["CrossCurrency"] = 5] = "CrossCurrency";
    ProvisionCashSettlMethod[ProvisionCashSettlMethod["CollateralizedPrice"] = 6] = "CollateralizedPrice";
})(ProvisionCashSettlMethod = exports.ProvisionCashSettlMethod || (exports.ProvisionCashSettlMethod = {}));
var ProvisionCashSettlQuoteType;
(function (ProvisionCashSettlQuoteType) {
    ProvisionCashSettlQuoteType[ProvisionCashSettlQuoteType["Bid"] = 0] = "Bid";
    ProvisionCashSettlQuoteType[ProvisionCashSettlQuoteType["Mid"] = 1] = "Mid";
    ProvisionCashSettlQuoteType[ProvisionCashSettlQuoteType["Offer"] = 2] = "Offer";
    ProvisionCashSettlQuoteType[ProvisionCashSettlQuoteType["ExercisingPartyPays"] = 3] = "ExercisingPartyPays";
})(ProvisionCashSettlQuoteType = exports.ProvisionCashSettlQuoteType || (exports.ProvisionCashSettlQuoteType = {}));
var ProvisionCashSettlQuoteSource;
(function (ProvisionCashSettlQuoteSource) {
    ProvisionCashSettlQuoteSource[ProvisionCashSettlQuoteSource["Bloomberg"] = 0] = "Bloomberg";
    ProvisionCashSettlQuoteSource[ProvisionCashSettlQuoteSource["Reuters"] = 1] = "Reuters";
    ProvisionCashSettlQuoteSource[ProvisionCashSettlQuoteSource["Telerate"] = 2] = "Telerate";
    ProvisionCashSettlQuoteSource[ProvisionCashSettlQuoteSource["Other"] = 99] = "Other";
})(ProvisionCashSettlQuoteSource = exports.ProvisionCashSettlQuoteSource || (exports.ProvisionCashSettlQuoteSource = {}));
var ProvisionCashSettlValueDateBusinessDayConvention;
(function (ProvisionCashSettlValueDateBusinessDayConvention) {
    ProvisionCashSettlValueDateBusinessDayConvention[ProvisionCashSettlValueDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    ProvisionCashSettlValueDateBusinessDayConvention[ProvisionCashSettlValueDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    ProvisionCashSettlValueDateBusinessDayConvention[ProvisionCashSettlValueDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    ProvisionCashSettlValueDateBusinessDayConvention[ProvisionCashSettlValueDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    ProvisionCashSettlValueDateBusinessDayConvention[ProvisionCashSettlValueDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    ProvisionCashSettlValueDateBusinessDayConvention[ProvisionCashSettlValueDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    ProvisionCashSettlValueDateBusinessDayConvention[ProvisionCashSettlValueDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    ProvisionCashSettlValueDateBusinessDayConvention[ProvisionCashSettlValueDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(ProvisionCashSettlValueDateBusinessDayConvention = exports.ProvisionCashSettlValueDateBusinessDayConvention || (exports.ProvisionCashSettlValueDateBusinessDayConvention = {}));
var ProvisionCashSettlValueDateOffsetUnit;
(function (ProvisionCashSettlValueDateOffsetUnit) {
    ProvisionCashSettlValueDateOffsetUnit["Day"] = "D";
    ProvisionCashSettlValueDateOffsetUnit["Week"] = "Wk";
    ProvisionCashSettlValueDateOffsetUnit["Month"] = "Mo";
    ProvisionCashSettlValueDateOffsetUnit["Year"] = "Yr";
})(ProvisionCashSettlValueDateOffsetUnit = exports.ProvisionCashSettlValueDateOffsetUnit || (exports.ProvisionCashSettlValueDateOffsetUnit = {}));
var ProvisionCashSettlValueDateOffsetDayType;
(function (ProvisionCashSettlValueDateOffsetDayType) {
    ProvisionCashSettlValueDateOffsetDayType[ProvisionCashSettlValueDateOffsetDayType["Business"] = 0] = "Business";
    ProvisionCashSettlValueDateOffsetDayType[ProvisionCashSettlValueDateOffsetDayType["Calendar"] = 1] = "Calendar";
    ProvisionCashSettlValueDateOffsetDayType[ProvisionCashSettlValueDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    ProvisionCashSettlValueDateOffsetDayType[ProvisionCashSettlValueDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    ProvisionCashSettlValueDateOffsetDayType[ProvisionCashSettlValueDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    ProvisionCashSettlValueDateOffsetDayType[ProvisionCashSettlValueDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(ProvisionCashSettlValueDateOffsetDayType = exports.ProvisionCashSettlValueDateOffsetDayType || (exports.ProvisionCashSettlValueDateOffsetDayType = {}));
var ProvisionOptionExerciseBusinessDayConvention;
(function (ProvisionOptionExerciseBusinessDayConvention) {
    ProvisionOptionExerciseBusinessDayConvention[ProvisionOptionExerciseBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    ProvisionOptionExerciseBusinessDayConvention[ProvisionOptionExerciseBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    ProvisionOptionExerciseBusinessDayConvention[ProvisionOptionExerciseBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    ProvisionOptionExerciseBusinessDayConvention[ProvisionOptionExerciseBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    ProvisionOptionExerciseBusinessDayConvention[ProvisionOptionExerciseBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    ProvisionOptionExerciseBusinessDayConvention[ProvisionOptionExerciseBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    ProvisionOptionExerciseBusinessDayConvention[ProvisionOptionExerciseBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    ProvisionOptionExerciseBusinessDayConvention[ProvisionOptionExerciseBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(ProvisionOptionExerciseBusinessDayConvention = exports.ProvisionOptionExerciseBusinessDayConvention || (exports.ProvisionOptionExerciseBusinessDayConvention = {}));
var ProvisionOptionExerciseEarliestDateOffsetUnit;
(function (ProvisionOptionExerciseEarliestDateOffsetUnit) {
    ProvisionOptionExerciseEarliestDateOffsetUnit["Day"] = "D";
    ProvisionOptionExerciseEarliestDateOffsetUnit["Week"] = "Wk";
    ProvisionOptionExerciseEarliestDateOffsetUnit["Month"] = "Mo";
    ProvisionOptionExerciseEarliestDateOffsetUnit["Year"] = "Yr";
})(ProvisionOptionExerciseEarliestDateOffsetUnit = exports.ProvisionOptionExerciseEarliestDateOffsetUnit || (exports.ProvisionOptionExerciseEarliestDateOffsetUnit = {}));
var ProvisionOptionExerciseFrequencyUnit;
(function (ProvisionOptionExerciseFrequencyUnit) {
    ProvisionOptionExerciseFrequencyUnit["Day"] = "D";
    ProvisionOptionExerciseFrequencyUnit["Week"] = "Wk";
    ProvisionOptionExerciseFrequencyUnit["Month"] = "Mo";
    ProvisionOptionExerciseFrequencyUnit["Year"] = "Yr";
    ProvisionOptionExerciseFrequencyUnit["Hour"] = "H";
    ProvisionOptionExerciseFrequencyUnit["Minute"] = "Min";
    ProvisionOptionExerciseFrequencyUnit["Second"] = "S";
    ProvisionOptionExerciseFrequencyUnit["Term"] = "T";
})(ProvisionOptionExerciseFrequencyUnit = exports.ProvisionOptionExerciseFrequencyUnit || (exports.ProvisionOptionExerciseFrequencyUnit = {}));
var ProvisionOptionExerciseStartDateOffsetUnit;
(function (ProvisionOptionExerciseStartDateOffsetUnit) {
    ProvisionOptionExerciseStartDateOffsetUnit["Day"] = "D";
    ProvisionOptionExerciseStartDateOffsetUnit["Week"] = "Wk";
    ProvisionOptionExerciseStartDateOffsetUnit["Month"] = "Mo";
    ProvisionOptionExerciseStartDateOffsetUnit["Year"] = "Yr";
})(ProvisionOptionExerciseStartDateOffsetUnit = exports.ProvisionOptionExerciseStartDateOffsetUnit || (exports.ProvisionOptionExerciseStartDateOffsetUnit = {}));
var ProvisionOptionExerciseStartDateOffsetDayType;
(function (ProvisionOptionExerciseStartDateOffsetDayType) {
    ProvisionOptionExerciseStartDateOffsetDayType[ProvisionOptionExerciseStartDateOffsetDayType["Business"] = 0] = "Business";
    ProvisionOptionExerciseStartDateOffsetDayType[ProvisionOptionExerciseStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    ProvisionOptionExerciseStartDateOffsetDayType[ProvisionOptionExerciseStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    ProvisionOptionExerciseStartDateOffsetDayType[ProvisionOptionExerciseStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    ProvisionOptionExerciseStartDateOffsetDayType[ProvisionOptionExerciseStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    ProvisionOptionExerciseStartDateOffsetDayType[ProvisionOptionExerciseStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(ProvisionOptionExerciseStartDateOffsetDayType = exports.ProvisionOptionExerciseStartDateOffsetDayType || (exports.ProvisionOptionExerciseStartDateOffsetDayType = {}));
var ProvisionOptionExerciseFixedDateType;
(function (ProvisionOptionExerciseFixedDateType) {
    ProvisionOptionExerciseFixedDateType[ProvisionOptionExerciseFixedDateType["Unadjusted"] = 0] = "Unadjusted";
    ProvisionOptionExerciseFixedDateType[ProvisionOptionExerciseFixedDateType["Adjusted"] = 1] = "Adjusted";
})(ProvisionOptionExerciseFixedDateType = exports.ProvisionOptionExerciseFixedDateType || (exports.ProvisionOptionExerciseFixedDateType = {}));
var ProvisionOptionExpirationDateBusinessDayConvention;
(function (ProvisionOptionExpirationDateBusinessDayConvention) {
    ProvisionOptionExpirationDateBusinessDayConvention[ProvisionOptionExpirationDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    ProvisionOptionExpirationDateBusinessDayConvention[ProvisionOptionExpirationDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    ProvisionOptionExpirationDateBusinessDayConvention[ProvisionOptionExpirationDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    ProvisionOptionExpirationDateBusinessDayConvention[ProvisionOptionExpirationDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    ProvisionOptionExpirationDateBusinessDayConvention[ProvisionOptionExpirationDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    ProvisionOptionExpirationDateBusinessDayConvention[ProvisionOptionExpirationDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    ProvisionOptionExpirationDateBusinessDayConvention[ProvisionOptionExpirationDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    ProvisionOptionExpirationDateBusinessDayConvention[ProvisionOptionExpirationDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(ProvisionOptionExpirationDateBusinessDayConvention = exports.ProvisionOptionExpirationDateBusinessDayConvention || (exports.ProvisionOptionExpirationDateBusinessDayConvention = {}));
var ProvisionOptionExpirationDateOffsetUnit;
(function (ProvisionOptionExpirationDateOffsetUnit) {
    ProvisionOptionExpirationDateOffsetUnit["Day"] = "D";
    ProvisionOptionExpirationDateOffsetUnit["Week"] = "Wk";
    ProvisionOptionExpirationDateOffsetUnit["Month"] = "Mo";
    ProvisionOptionExpirationDateOffsetUnit["Year"] = "Yr";
})(ProvisionOptionExpirationDateOffsetUnit = exports.ProvisionOptionExpirationDateOffsetUnit || (exports.ProvisionOptionExpirationDateOffsetUnit = {}));
var ProvisionOptionExpirationDateOffsetDayType;
(function (ProvisionOptionExpirationDateOffsetDayType) {
    ProvisionOptionExpirationDateOffsetDayType[ProvisionOptionExpirationDateOffsetDayType["Business"] = 0] = "Business";
    ProvisionOptionExpirationDateOffsetDayType[ProvisionOptionExpirationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    ProvisionOptionExpirationDateOffsetDayType[ProvisionOptionExpirationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    ProvisionOptionExpirationDateOffsetDayType[ProvisionOptionExpirationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    ProvisionOptionExpirationDateOffsetDayType[ProvisionOptionExpirationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    ProvisionOptionExpirationDateOffsetDayType[ProvisionOptionExpirationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(ProvisionOptionExpirationDateOffsetDayType = exports.ProvisionOptionExpirationDateOffsetDayType || (exports.ProvisionOptionExpirationDateOffsetDayType = {}));
var ProvisionOptionRelevantUnderlyingDateBusinessDayConvention;
(function (ProvisionOptionRelevantUnderlyingDateBusinessDayConvention) {
    ProvisionOptionRelevantUnderlyingDateBusinessDayConvention[ProvisionOptionRelevantUnderlyingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    ProvisionOptionRelevantUnderlyingDateBusinessDayConvention[ProvisionOptionRelevantUnderlyingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    ProvisionOptionRelevantUnderlyingDateBusinessDayConvention[ProvisionOptionRelevantUnderlyingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    ProvisionOptionRelevantUnderlyingDateBusinessDayConvention[ProvisionOptionRelevantUnderlyingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    ProvisionOptionRelevantUnderlyingDateBusinessDayConvention[ProvisionOptionRelevantUnderlyingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    ProvisionOptionRelevantUnderlyingDateBusinessDayConvention[ProvisionOptionRelevantUnderlyingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    ProvisionOptionRelevantUnderlyingDateBusinessDayConvention[ProvisionOptionRelevantUnderlyingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    ProvisionOptionRelevantUnderlyingDateBusinessDayConvention[ProvisionOptionRelevantUnderlyingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(ProvisionOptionRelevantUnderlyingDateBusinessDayConvention = exports.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention || (exports.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention = {}));
var ProvisionOptionRelevantUnderlyingDateOffsetUnit;
(function (ProvisionOptionRelevantUnderlyingDateOffsetUnit) {
    ProvisionOptionRelevantUnderlyingDateOffsetUnit["Day"] = "D";
    ProvisionOptionRelevantUnderlyingDateOffsetUnit["Week"] = "Wk";
    ProvisionOptionRelevantUnderlyingDateOffsetUnit["Month"] = "Mo";
    ProvisionOptionRelevantUnderlyingDateOffsetUnit["Year"] = "Yr";
})(ProvisionOptionRelevantUnderlyingDateOffsetUnit = exports.ProvisionOptionRelevantUnderlyingDateOffsetUnit || (exports.ProvisionOptionRelevantUnderlyingDateOffsetUnit = {}));
var ProvisionOptionRelevantUnderlyingDateOffsetDayType;
(function (ProvisionOptionRelevantUnderlyingDateOffsetDayType) {
    ProvisionOptionRelevantUnderlyingDateOffsetDayType[ProvisionOptionRelevantUnderlyingDateOffsetDayType["Business"] = 0] = "Business";
    ProvisionOptionRelevantUnderlyingDateOffsetDayType[ProvisionOptionRelevantUnderlyingDateOffsetDayType["Calendar"] = 1] = "Calendar";
    ProvisionOptionRelevantUnderlyingDateOffsetDayType[ProvisionOptionRelevantUnderlyingDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    ProvisionOptionRelevantUnderlyingDateOffsetDayType[ProvisionOptionRelevantUnderlyingDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    ProvisionOptionRelevantUnderlyingDateOffsetDayType[ProvisionOptionRelevantUnderlyingDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    ProvisionOptionRelevantUnderlyingDateOffsetDayType[ProvisionOptionRelevantUnderlyingDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(ProvisionOptionRelevantUnderlyingDateOffsetDayType = exports.ProvisionOptionRelevantUnderlyingDateOffsetDayType || (exports.ProvisionOptionRelevantUnderlyingDateOffsetDayType = {}));
var ProvisionCashSettlPaymentDateBusinessDayConvention;
(function (ProvisionCashSettlPaymentDateBusinessDayConvention) {
    ProvisionCashSettlPaymentDateBusinessDayConvention[ProvisionCashSettlPaymentDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    ProvisionCashSettlPaymentDateBusinessDayConvention[ProvisionCashSettlPaymentDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    ProvisionCashSettlPaymentDateBusinessDayConvention[ProvisionCashSettlPaymentDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    ProvisionCashSettlPaymentDateBusinessDayConvention[ProvisionCashSettlPaymentDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    ProvisionCashSettlPaymentDateBusinessDayConvention[ProvisionCashSettlPaymentDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    ProvisionCashSettlPaymentDateBusinessDayConvention[ProvisionCashSettlPaymentDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    ProvisionCashSettlPaymentDateBusinessDayConvention[ProvisionCashSettlPaymentDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    ProvisionCashSettlPaymentDateBusinessDayConvention[ProvisionCashSettlPaymentDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(ProvisionCashSettlPaymentDateBusinessDayConvention = exports.ProvisionCashSettlPaymentDateBusinessDayConvention || (exports.ProvisionCashSettlPaymentDateBusinessDayConvention = {}));
var ProvisionCashSettlPaymentDateOffsetUnit;
(function (ProvisionCashSettlPaymentDateOffsetUnit) {
    ProvisionCashSettlPaymentDateOffsetUnit["Day"] = "D";
    ProvisionCashSettlPaymentDateOffsetUnit["Week"] = "Wk";
    ProvisionCashSettlPaymentDateOffsetUnit["Month"] = "Mo";
    ProvisionCashSettlPaymentDateOffsetUnit["Year"] = "Yr";
})(ProvisionCashSettlPaymentDateOffsetUnit = exports.ProvisionCashSettlPaymentDateOffsetUnit || (exports.ProvisionCashSettlPaymentDateOffsetUnit = {}));
var ProvisionCashSettlPaymentDateOffsetDayType;
(function (ProvisionCashSettlPaymentDateOffsetDayType) {
    ProvisionCashSettlPaymentDateOffsetDayType[ProvisionCashSettlPaymentDateOffsetDayType["Business"] = 0] = "Business";
    ProvisionCashSettlPaymentDateOffsetDayType[ProvisionCashSettlPaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    ProvisionCashSettlPaymentDateOffsetDayType[ProvisionCashSettlPaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    ProvisionCashSettlPaymentDateOffsetDayType[ProvisionCashSettlPaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    ProvisionCashSettlPaymentDateOffsetDayType[ProvisionCashSettlPaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    ProvisionCashSettlPaymentDateOffsetDayType[ProvisionCashSettlPaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(ProvisionCashSettlPaymentDateOffsetDayType = exports.ProvisionCashSettlPaymentDateOffsetDayType || (exports.ProvisionCashSettlPaymentDateOffsetDayType = {}));
var ProvisionCashSettlPaymentDateType;
(function (ProvisionCashSettlPaymentDateType) {
    ProvisionCashSettlPaymentDateType[ProvisionCashSettlPaymentDateType["Unadjusted"] = 0] = "Unadjusted";
    ProvisionCashSettlPaymentDateType[ProvisionCashSettlPaymentDateType["Adjusted"] = 1] = "Adjusted";
})(ProvisionCashSettlPaymentDateType = exports.ProvisionCashSettlPaymentDateType || (exports.ProvisionCashSettlPaymentDateType = {}));
var ProvisionPartyIDSource;
(function (ProvisionPartyIDSource) {
    ProvisionPartyIDSource["KoreanInvestorId"] = "1";
    ProvisionPartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    ProvisionPartyIDSource["TaiwaneseTradingAcct"] = "3";
    ProvisionPartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    ProvisionPartyIDSource["ChineseInvestorId"] = "5";
    ProvisionPartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    ProvisionPartyIDSource["UsSocialSecurityNumber"] = "7";
    ProvisionPartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    ProvisionPartyIDSource["AustralianBusinessNumber"] = "9";
    ProvisionPartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    ProvisionPartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    ProvisionPartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    ProvisionPartyIDSource["ProprietaryCustomCode"] = "D";
    ProvisionPartyIDSource["IsoCountryCode"] = "E";
    ProvisionPartyIDSource["AustralianTaxFileNumber"] = "A";
    ProvisionPartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    ProvisionPartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    ProvisionPartyIDSource["TaxId"] = "J";
    ProvisionPartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    ProvisionPartyIDSource["AustralianCompanyNumber"] = "K";
    ProvisionPartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    ProvisionPartyIDSource["CftcReportingFirmIdentifier"] = "M";
    ProvisionPartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    ProvisionPartyIDSource["InterimIdentifier"] = "O";
    ProvisionPartyIDSource["ShortCodeIdentifier"] = "P";
    ProvisionPartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(ProvisionPartyIDSource = exports.ProvisionPartyIDSource || (exports.ProvisionPartyIDSource = {}));
var ProvisionPartyRole;
(function (ProvisionPartyRole) {
    ProvisionPartyRole[ProvisionPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    ProvisionPartyRole[ProvisionPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    ProvisionPartyRole[ProvisionPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    ProvisionPartyRole[ProvisionPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    ProvisionPartyRole[ProvisionPartyRole["InvestorId"] = 5] = "InvestorId";
    ProvisionPartyRole[ProvisionPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    ProvisionPartyRole[ProvisionPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    ProvisionPartyRole[ProvisionPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    ProvisionPartyRole[ProvisionPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    ProvisionPartyRole[ProvisionPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    ProvisionPartyRole[ProvisionPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    ProvisionPartyRole[ProvisionPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    ProvisionPartyRole[ProvisionPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    ProvisionPartyRole[ProvisionPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    ProvisionPartyRole[ProvisionPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    ProvisionPartyRole[ProvisionPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    ProvisionPartyRole[ProvisionPartyRole["ContraFirm"] = 17] = "ContraFirm";
    ProvisionPartyRole[ProvisionPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    ProvisionPartyRole[ProvisionPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    ProvisionPartyRole[ProvisionPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    ProvisionPartyRole[ProvisionPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    ProvisionPartyRole[ProvisionPartyRole["Exchange"] = 22] = "Exchange";
    ProvisionPartyRole[ProvisionPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    ProvisionPartyRole[ProvisionPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    ProvisionPartyRole[ProvisionPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    ProvisionPartyRole[ProvisionPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    ProvisionPartyRole[ProvisionPartyRole["Custodian"] = 28] = "Custodian";
    ProvisionPartyRole[ProvisionPartyRole["Intermediary"] = 29] = "Intermediary";
    ProvisionPartyRole[ProvisionPartyRole["Agent"] = 30] = "Agent";
    ProvisionPartyRole[ProvisionPartyRole["SubCustodian"] = 31] = "SubCustodian";
    ProvisionPartyRole[ProvisionPartyRole["Beneficiary"] = 32] = "Beneficiary";
    ProvisionPartyRole[ProvisionPartyRole["InterestedParty"] = 33] = "InterestedParty";
    ProvisionPartyRole[ProvisionPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    ProvisionPartyRole[ProvisionPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    ProvisionPartyRole[ProvisionPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    ProvisionPartyRole[ProvisionPartyRole["ContraTrader"] = 37] = "ContraTrader";
    ProvisionPartyRole[ProvisionPartyRole["PositionAccount"] = 38] = "PositionAccount";
    ProvisionPartyRole[ProvisionPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    ProvisionPartyRole[ProvisionPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    ProvisionPartyRole[ProvisionPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    ProvisionPartyRole[ProvisionPartyRole["ContraExchange"] = 42] = "ContraExchange";
    ProvisionPartyRole[ProvisionPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    ProvisionPartyRole[ProvisionPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    ProvisionPartyRole[ProvisionPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    ProvisionPartyRole[ProvisionPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    ProvisionPartyRole[ProvisionPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    ProvisionPartyRole[ProvisionPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    ProvisionPartyRole[ProvisionPartyRole["AssetManager"] = 49] = "AssetManager";
    ProvisionPartyRole[ProvisionPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    ProvisionPartyRole[ProvisionPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    ProvisionPartyRole[ProvisionPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    ProvisionPartyRole[ProvisionPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    ProvisionPartyRole[ProvisionPartyRole["SenderLocation"] = 54] = "SenderLocation";
    ProvisionPartyRole[ProvisionPartyRole["SessionId"] = 55] = "SessionId";
    ProvisionPartyRole[ProvisionPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    ProvisionPartyRole[ProvisionPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    ProvisionPartyRole[ProvisionPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    ProvisionPartyRole[ProvisionPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    ProvisionPartyRole[ProvisionPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    ProvisionPartyRole[ProvisionPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    ProvisionPartyRole[ProvisionPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    ProvisionPartyRole[ProvisionPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    ProvisionPartyRole[ProvisionPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    ProvisionPartyRole[ProvisionPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    ProvisionPartyRole[ProvisionPartyRole["MarketMaker"] = 66] = "MarketMaker";
    ProvisionPartyRole[ProvisionPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    ProvisionPartyRole[ProvisionPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    ProvisionPartyRole[ProvisionPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    ProvisionPartyRole[ProvisionPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    ProvisionPartyRole[ProvisionPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    ProvisionPartyRole[ProvisionPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    ProvisionPartyRole[ProvisionPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    ProvisionPartyRole[ProvisionPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    ProvisionPartyRole[ProvisionPartyRole["LocationId"] = 75] = "LocationId";
    ProvisionPartyRole[ProvisionPartyRole["DeskId"] = 76] = "DeskId";
    ProvisionPartyRole[ProvisionPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    ProvisionPartyRole[ProvisionPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    ProvisionPartyRole[ProvisionPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    ProvisionPartyRole[ProvisionPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    ProvisionPartyRole[ProvisionPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    ProvisionPartyRole[ProvisionPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    ProvisionPartyRole[ProvisionPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    ProvisionPartyRole[ProvisionPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    ProvisionPartyRole[ProvisionPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    ProvisionPartyRole[ProvisionPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    ProvisionPartyRole[ProvisionPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    ProvisionPartyRole[ProvisionPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    ProvisionPartyRole[ProvisionPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    ProvisionPartyRole[ProvisionPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    ProvisionPartyRole[ProvisionPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    ProvisionPartyRole[ProvisionPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    ProvisionPartyRole[ProvisionPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    ProvisionPartyRole[ProvisionPartyRole["AwayMarket"] = 94] = "AwayMarket";
    ProvisionPartyRole[ProvisionPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    ProvisionPartyRole[ProvisionPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    ProvisionPartyRole[ProvisionPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    ProvisionPartyRole[ProvisionPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    ProvisionPartyRole[ProvisionPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    ProvisionPartyRole[ProvisionPartyRole["MarginAccount"] = 100] = "MarginAccount";
    ProvisionPartyRole[ProvisionPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    ProvisionPartyRole[ProvisionPartyRole["DataRepository"] = 102] = "DataRepository";
    ProvisionPartyRole[ProvisionPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    ProvisionPartyRole[ProvisionPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    ProvisionPartyRole[ProvisionPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    ProvisionPartyRole[ProvisionPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    ProvisionPartyRole[ProvisionPartyRole["Correspondent"] = 107] = "Correspondent";
    ProvisionPartyRole[ProvisionPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    ProvisionPartyRole[ProvisionPartyRole["Borrower"] = 110] = "Borrower";
    ProvisionPartyRole[ProvisionPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    ProvisionPartyRole[ProvisionPartyRole["Guarantor"] = 112] = "Guarantor";
    ProvisionPartyRole[ProvisionPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    ProvisionPartyRole[ProvisionPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    ProvisionPartyRole[ProvisionPartyRole["HedgingParty"] = 115] = "HedgingParty";
    ProvisionPartyRole[ProvisionPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    ProvisionPartyRole[ProvisionPartyRole["SalesPerson"] = 117] = "SalesPerson";
    ProvisionPartyRole[ProvisionPartyRole["Operator"] = 118] = "Operator";
    ProvisionPartyRole[ProvisionPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    ProvisionPartyRole[ProvisionPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    ProvisionPartyRole[ProvisionPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    ProvisionPartyRole[ProvisionPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(ProvisionPartyRole = exports.ProvisionPartyRole || (exports.ProvisionPartyRole = {}));
var ProvisionPartySubIDType;
(function (ProvisionPartySubIDType) {
    ProvisionPartySubIDType[ProvisionPartySubIDType["Firm"] = 1] = "Firm";
    ProvisionPartySubIDType[ProvisionPartySubIDType["Person"] = 2] = "Person";
    ProvisionPartySubIDType[ProvisionPartySubIDType["System"] = 3] = "System";
    ProvisionPartySubIDType[ProvisionPartySubIDType["Application"] = 4] = "Application";
    ProvisionPartySubIDType[ProvisionPartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    ProvisionPartySubIDType[ProvisionPartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    ProvisionPartySubIDType[ProvisionPartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    ProvisionPartySubIDType[ProvisionPartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    ProvisionPartySubIDType[ProvisionPartySubIDType["ContactName"] = 9] = "ContactName";
    ProvisionPartySubIDType[ProvisionPartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    ProvisionPartySubIDType[ProvisionPartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    ProvisionPartySubIDType[ProvisionPartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    ProvisionPartySubIDType[ProvisionPartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    ProvisionPartySubIDType[ProvisionPartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    ProvisionPartySubIDType[ProvisionPartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    ProvisionPartySubIDType[ProvisionPartySubIDType["Bic"] = 16] = "Bic";
    ProvisionPartySubIDType[ProvisionPartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    ProvisionPartySubIDType[ProvisionPartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    ProvisionPartySubIDType[ProvisionPartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    ProvisionPartySubIDType[ProvisionPartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    ProvisionPartySubIDType[ProvisionPartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    ProvisionPartySubIDType[ProvisionPartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    ProvisionPartySubIDType[ProvisionPartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    ProvisionPartySubIDType[ProvisionPartySubIDType["Department"] = 24] = "Department";
    ProvisionPartySubIDType[ProvisionPartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    ProvisionPartySubIDType[ProvisionPartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    ProvisionPartySubIDType[ProvisionPartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    ProvisionPartySubIDType[ProvisionPartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    ProvisionPartySubIDType[ProvisionPartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    ProvisionPartySubIDType[ProvisionPartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    ProvisionPartySubIDType[ProvisionPartySubIDType["Location"] = 31] = "Location";
    ProvisionPartySubIDType[ProvisionPartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    ProvisionPartySubIDType[ProvisionPartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    ProvisionPartySubIDType[ProvisionPartySubIDType["AddressCity"] = 34] = "AddressCity";
    ProvisionPartySubIDType[ProvisionPartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    ProvisionPartySubIDType[ProvisionPartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    ProvisionPartySubIDType[ProvisionPartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    ProvisionPartySubIDType[ProvisionPartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    ProvisionPartySubIDType[ProvisionPartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    ProvisionPartySubIDType[ProvisionPartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    ProvisionPartySubIDType[ProvisionPartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    ProvisionPartySubIDType[ProvisionPartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    ProvisionPartySubIDType[ProvisionPartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    ProvisionPartySubIDType[ProvisionPartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    ProvisionPartySubIDType[ProvisionPartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    ProvisionPartySubIDType[ProvisionPartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    ProvisionPartySubIDType[ProvisionPartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    ProvisionPartySubIDType[ProvisionPartySubIDType["USPerson"] = 48] = "USPerson";
    ProvisionPartySubIDType[ProvisionPartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    ProvisionPartySubIDType[ProvisionPartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    ProvisionPartySubIDType[ProvisionPartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    ProvisionPartySubIDType[ProvisionPartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    ProvisionPartySubIDType[ProvisionPartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    ProvisionPartySubIDType[ProvisionPartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    ProvisionPartySubIDType[ProvisionPartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    ProvisionPartySubIDType[ProvisionPartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    ProvisionPartySubIDType[ProvisionPartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    ProvisionPartySubIDType[ProvisionPartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    ProvisionPartySubIDType[ProvisionPartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    ProvisionPartySubIDType[ProvisionPartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    ProvisionPartySubIDType[ProvisionPartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    ProvisionPartySubIDType[ProvisionPartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    ProvisionPartySubIDType[ProvisionPartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    ProvisionPartySubIDType[ProvisionPartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    ProvisionPartySubIDType[ProvisionPartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    ProvisionPartySubIDType[ProvisionPartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    ProvisionPartySubIDType[ProvisionPartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    ProvisionPartySubIDType[ProvisionPartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    ProvisionPartySubIDType[ProvisionPartySubIDType["EndUser"] = 69] = "EndUser";
    ProvisionPartySubIDType[ProvisionPartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    ProvisionPartySubIDType[ProvisionPartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    ProvisionPartySubIDType[ProvisionPartySubIDType["Domicile"] = 72] = "Domicile";
    ProvisionPartySubIDType[ProvisionPartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    ProvisionPartySubIDType[ProvisionPartySubIDType["Payer"] = 74] = "Payer";
    ProvisionPartySubIDType[ProvisionPartySubIDType["Receiver"] = 75] = "Receiver";
    ProvisionPartySubIDType[ProvisionPartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(ProvisionPartySubIDType = exports.ProvisionPartySubIDType || (exports.ProvisionPartySubIDType = {}));
var ProtectionTermEventUnit;
(function (ProtectionTermEventUnit) {
    ProtectionTermEventUnit["Day"] = "D";
    ProtectionTermEventUnit["Week"] = "Wk";
    ProtectionTermEventUnit["Month"] = "Mo";
    ProtectionTermEventUnit["Year"] = "Yr";
})(ProtectionTermEventUnit = exports.ProtectionTermEventUnit || (exports.ProtectionTermEventUnit = {}));
var ProtectionTermEventDayType;
(function (ProtectionTermEventDayType) {
    ProtectionTermEventDayType[ProtectionTermEventDayType["Business"] = 0] = "Business";
    ProtectionTermEventDayType[ProtectionTermEventDayType["Calendar"] = 1] = "Calendar";
    ProtectionTermEventDayType[ProtectionTermEventDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    ProtectionTermEventDayType[ProtectionTermEventDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    ProtectionTermEventDayType[ProtectionTermEventDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    ProtectionTermEventDayType[ProtectionTermEventDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(ProtectionTermEventDayType = exports.ProtectionTermEventDayType || (exports.ProtectionTermEventDayType = {}));
var ProtectionTermEventQualifier;
(function (ProtectionTermEventQualifier) {
    ProtectionTermEventQualifier["RetructuringMultipleHoldingObligations"] = "H";
    ProtectionTermEventQualifier["RestructuringMultipleCreditEventNotices"] = "E";
    ProtectionTermEventQualifier["FloatingRateInterestShortfall"] = "C";
})(ProtectionTermEventQualifier = exports.ProtectionTermEventQualifier || (exports.ProtectionTermEventQualifier = {}));
var PaymentType;
(function (PaymentType) {
    PaymentType[PaymentType["Brokerage"] = 0] = "Brokerage";
    PaymentType[PaymentType["UpfrontFee"] = 1] = "UpfrontFee";
    PaymentType[PaymentType["IndependentAmountCollateral"] = 2] = "IndependentAmountCollateral";
    PaymentType[PaymentType["PrincipalExchange"] = 3] = "PrincipalExchange";
    PaymentType[PaymentType["NovationTermination"] = 4] = "NovationTermination";
    PaymentType[PaymentType["EarlyTerminationProvision"] = 5] = "EarlyTerminationProvision";
    PaymentType[PaymentType["CancelableProvision"] = 6] = "CancelableProvision";
    PaymentType[PaymentType["ExtendibleProvision"] = 7] = "ExtendibleProvision";
    PaymentType[PaymentType["CapRateProvision"] = 8] = "CapRateProvision";
    PaymentType[PaymentType["FloorRateProvision"] = 9] = "FloorRateProvision";
    PaymentType[PaymentType["OptionPremium"] = 10] = "OptionPremium";
    PaymentType[PaymentType["SettlementPayment"] = 11] = "SettlementPayment";
    PaymentType[PaymentType["CashSettlement"] = 12] = "CashSettlement";
    PaymentType[PaymentType["Other"] = 99] = "Other";
})(PaymentType = exports.PaymentType || (exports.PaymentType = {}));
var PaymentPaySide;
(function (PaymentPaySide) {
    PaymentPaySide[PaymentPaySide["Buy"] = 1] = "Buy";
    PaymentPaySide[PaymentPaySide["Sell"] = 2] = "Sell";
})(PaymentPaySide = exports.PaymentPaySide || (exports.PaymentPaySide = {}));
var PaymentReceiveSide;
(function (PaymentReceiveSide) {
    PaymentReceiveSide[PaymentReceiveSide["Buy"] = 1] = "Buy";
    PaymentReceiveSide[PaymentReceiveSide["Sell"] = 2] = "Sell";
})(PaymentReceiveSide = exports.PaymentReceiveSide || (exports.PaymentReceiveSide = {}));
var PaymentBusinessDayConvention;
(function (PaymentBusinessDayConvention) {
    PaymentBusinessDayConvention[PaymentBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    PaymentBusinessDayConvention[PaymentBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    PaymentBusinessDayConvention[PaymentBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    PaymentBusinessDayConvention[PaymentBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    PaymentBusinessDayConvention[PaymentBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    PaymentBusinessDayConvention[PaymentBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    PaymentBusinessDayConvention[PaymentBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    PaymentBusinessDayConvention[PaymentBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(PaymentBusinessDayConvention = exports.PaymentBusinessDayConvention || (exports.PaymentBusinessDayConvention = {}));
var PaymentSettlStyle;
(function (PaymentSettlStyle) {
    PaymentSettlStyle[PaymentSettlStyle["Standard"] = 0] = "Standard";
    PaymentSettlStyle[PaymentSettlStyle["Net"] = 1] = "Net";
    PaymentSettlStyle[PaymentSettlStyle["StandardAndNet"] = 2] = "StandardAndNet";
})(PaymentSettlStyle = exports.PaymentSettlStyle || (exports.PaymentSettlStyle = {}));
var PaymentSettlPartyIDSource;
(function (PaymentSettlPartyIDSource) {
    PaymentSettlPartyIDSource["KoreanInvestorId"] = "1";
    PaymentSettlPartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    PaymentSettlPartyIDSource["TaiwaneseTradingAcct"] = "3";
    PaymentSettlPartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    PaymentSettlPartyIDSource["ChineseInvestorId"] = "5";
    PaymentSettlPartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    PaymentSettlPartyIDSource["UsSocialSecurityNumber"] = "7";
    PaymentSettlPartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    PaymentSettlPartyIDSource["AustralianBusinessNumber"] = "9";
    PaymentSettlPartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    PaymentSettlPartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    PaymentSettlPartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    PaymentSettlPartyIDSource["ProprietaryCustomCode"] = "D";
    PaymentSettlPartyIDSource["IsoCountryCode"] = "E";
    PaymentSettlPartyIDSource["AustralianTaxFileNumber"] = "A";
    PaymentSettlPartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    PaymentSettlPartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    PaymentSettlPartyIDSource["TaxId"] = "J";
    PaymentSettlPartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    PaymentSettlPartyIDSource["AustralianCompanyNumber"] = "K";
    PaymentSettlPartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    PaymentSettlPartyIDSource["CftcReportingFirmIdentifier"] = "M";
    PaymentSettlPartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    PaymentSettlPartyIDSource["InterimIdentifier"] = "O";
    PaymentSettlPartyIDSource["ShortCodeIdentifier"] = "P";
    PaymentSettlPartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(PaymentSettlPartyIDSource = exports.PaymentSettlPartyIDSource || (exports.PaymentSettlPartyIDSource = {}));
var PaymentSettlPartyRole;
(function (PaymentSettlPartyRole) {
    PaymentSettlPartyRole[PaymentSettlPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    PaymentSettlPartyRole[PaymentSettlPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["InvestorId"] = 5] = "InvestorId";
    PaymentSettlPartyRole[PaymentSettlPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    PaymentSettlPartyRole[PaymentSettlPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    PaymentSettlPartyRole[PaymentSettlPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    PaymentSettlPartyRole[PaymentSettlPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    PaymentSettlPartyRole[PaymentSettlPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    PaymentSettlPartyRole[PaymentSettlPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ContraFirm"] = 17] = "ContraFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    PaymentSettlPartyRole[PaymentSettlPartyRole["Exchange"] = 22] = "Exchange";
    PaymentSettlPartyRole[PaymentSettlPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    PaymentSettlPartyRole[PaymentSettlPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    PaymentSettlPartyRole[PaymentSettlPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    PaymentSettlPartyRole[PaymentSettlPartyRole["Custodian"] = 28] = "Custodian";
    PaymentSettlPartyRole[PaymentSettlPartyRole["Intermediary"] = 29] = "Intermediary";
    PaymentSettlPartyRole[PaymentSettlPartyRole["Agent"] = 30] = "Agent";
    PaymentSettlPartyRole[PaymentSettlPartyRole["SubCustodian"] = 31] = "SubCustodian";
    PaymentSettlPartyRole[PaymentSettlPartyRole["Beneficiary"] = 32] = "Beneficiary";
    PaymentSettlPartyRole[PaymentSettlPartyRole["InterestedParty"] = 33] = "InterestedParty";
    PaymentSettlPartyRole[PaymentSettlPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    PaymentSettlPartyRole[PaymentSettlPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    PaymentSettlPartyRole[PaymentSettlPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ContraTrader"] = 37] = "ContraTrader";
    PaymentSettlPartyRole[PaymentSettlPartyRole["PositionAccount"] = 38] = "PositionAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    PaymentSettlPartyRole[PaymentSettlPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ContraExchange"] = 42] = "ContraExchange";
    PaymentSettlPartyRole[PaymentSettlPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    PaymentSettlPartyRole[PaymentSettlPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["AssetManager"] = 49] = "AssetManager";
    PaymentSettlPartyRole[PaymentSettlPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    PaymentSettlPartyRole[PaymentSettlPartyRole["SenderLocation"] = 54] = "SenderLocation";
    PaymentSettlPartyRole[PaymentSettlPartyRole["SessionId"] = 55] = "SessionId";
    PaymentSettlPartyRole[PaymentSettlPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    PaymentSettlPartyRole[PaymentSettlPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    PaymentSettlPartyRole[PaymentSettlPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    PaymentSettlPartyRole[PaymentSettlPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    PaymentSettlPartyRole[PaymentSettlPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    PaymentSettlPartyRole[PaymentSettlPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    PaymentSettlPartyRole[PaymentSettlPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    PaymentSettlPartyRole[PaymentSettlPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["MarketMaker"] = 66] = "MarketMaker";
    PaymentSettlPartyRole[PaymentSettlPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    PaymentSettlPartyRole[PaymentSettlPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    PaymentSettlPartyRole[PaymentSettlPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    PaymentSettlPartyRole[PaymentSettlPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    PaymentSettlPartyRole[PaymentSettlPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    PaymentSettlPartyRole[PaymentSettlPartyRole["LocationId"] = 75] = "LocationId";
    PaymentSettlPartyRole[PaymentSettlPartyRole["DeskId"] = 76] = "DeskId";
    PaymentSettlPartyRole[PaymentSettlPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    PaymentSettlPartyRole[PaymentSettlPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    PaymentSettlPartyRole[PaymentSettlPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    PaymentSettlPartyRole[PaymentSettlPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    PaymentSettlPartyRole[PaymentSettlPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    PaymentSettlPartyRole[PaymentSettlPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    PaymentSettlPartyRole[PaymentSettlPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    PaymentSettlPartyRole[PaymentSettlPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    PaymentSettlPartyRole[PaymentSettlPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    PaymentSettlPartyRole[PaymentSettlPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    PaymentSettlPartyRole[PaymentSettlPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    PaymentSettlPartyRole[PaymentSettlPartyRole["AwayMarket"] = 94] = "AwayMarket";
    PaymentSettlPartyRole[PaymentSettlPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    PaymentSettlPartyRole[PaymentSettlPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    PaymentSettlPartyRole[PaymentSettlPartyRole["MarginAccount"] = 100] = "MarginAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["DataRepository"] = 102] = "DataRepository";
    PaymentSettlPartyRole[PaymentSettlPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    PaymentSettlPartyRole[PaymentSettlPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    PaymentSettlPartyRole[PaymentSettlPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    PaymentSettlPartyRole[PaymentSettlPartyRole["Correspondent"] = 107] = "Correspondent";
    PaymentSettlPartyRole[PaymentSettlPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    PaymentSettlPartyRole[PaymentSettlPartyRole["Borrower"] = 110] = "Borrower";
    PaymentSettlPartyRole[PaymentSettlPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    PaymentSettlPartyRole[PaymentSettlPartyRole["Guarantor"] = 112] = "Guarantor";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    PaymentSettlPartyRole[PaymentSettlPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    PaymentSettlPartyRole[PaymentSettlPartyRole["HedgingParty"] = 115] = "HedgingParty";
    PaymentSettlPartyRole[PaymentSettlPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    PaymentSettlPartyRole[PaymentSettlPartyRole["SalesPerson"] = 117] = "SalesPerson";
    PaymentSettlPartyRole[PaymentSettlPartyRole["Operator"] = 118] = "Operator";
    PaymentSettlPartyRole[PaymentSettlPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    PaymentSettlPartyRole[PaymentSettlPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    PaymentSettlPartyRole[PaymentSettlPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    PaymentSettlPartyRole[PaymentSettlPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(PaymentSettlPartyRole = exports.PaymentSettlPartyRole || (exports.PaymentSettlPartyRole = {}));
var PaymentSettlPartyRoleQualifier;
(function (PaymentSettlPartyRoleQualifier) {
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["Agency"] = 0] = "Agency";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["Principal"] = 1] = "Principal";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["Bank"] = 7] = "Bank";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["Hub"] = 8] = "Hub";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["Current"] = 18] = "Current";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["New"] = 19] = "New";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    PaymentSettlPartyRoleQualifier[PaymentSettlPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(PaymentSettlPartyRoleQualifier = exports.PaymentSettlPartyRoleQualifier || (exports.PaymentSettlPartyRoleQualifier = {}));
var PaymentSettlPartySubIDType;
(function (PaymentSettlPartySubIDType) {
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["Firm"] = 1] = "Firm";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["Person"] = 2] = "Person";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["System"] = 3] = "System";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["Application"] = 4] = "Application";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["ContactName"] = 9] = "ContactName";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["Bic"] = 16] = "Bic";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["Department"] = 24] = "Department";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["Location"] = 31] = "Location";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["AddressCity"] = 34] = "AddressCity";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["USPerson"] = 48] = "USPerson";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["EndUser"] = 69] = "EndUser";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["Domicile"] = 72] = "Domicile";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["Payer"] = 74] = "Payer";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["Receiver"] = 75] = "Receiver";
    PaymentSettlPartySubIDType[PaymentSettlPartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(PaymentSettlPartySubIDType = exports.PaymentSettlPartySubIDType || (exports.PaymentSettlPartySubIDType = {}));
var LegStreamType;
(function (LegStreamType) {
    LegStreamType[LegStreamType["PaymentCashSettlement"] = 0] = "PaymentCashSettlement";
    LegStreamType[LegStreamType["PhysicalDelivery"] = 1] = "PhysicalDelivery";
})(LegStreamType = exports.LegStreamType || (exports.LegStreamType = {}));
var LegStreamPaySide;
(function (LegStreamPaySide) {
    LegStreamPaySide[LegStreamPaySide["Buy"] = 1] = "Buy";
    LegStreamPaySide[LegStreamPaySide["Sell"] = 2] = "Sell";
})(LegStreamPaySide = exports.LegStreamPaySide || (exports.LegStreamPaySide = {}));
var LegStreamReceiveSide;
(function (LegStreamReceiveSide) {
    LegStreamReceiveSide[LegStreamReceiveSide["Buy"] = 1] = "Buy";
    LegStreamReceiveSide[LegStreamReceiveSide["Sell"] = 2] = "Sell";
})(LegStreamReceiveSide = exports.LegStreamReceiveSide || (exports.LegStreamReceiveSide = {}));
var LegStreamEffectiveDateBusinessDayConvention;
(function (LegStreamEffectiveDateBusinessDayConvention) {
    LegStreamEffectiveDateBusinessDayConvention[LegStreamEffectiveDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegStreamEffectiveDateBusinessDayConvention[LegStreamEffectiveDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegStreamEffectiveDateBusinessDayConvention[LegStreamEffectiveDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegStreamEffectiveDateBusinessDayConvention[LegStreamEffectiveDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegStreamEffectiveDateBusinessDayConvention[LegStreamEffectiveDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegStreamEffectiveDateBusinessDayConvention[LegStreamEffectiveDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegStreamEffectiveDateBusinessDayConvention[LegStreamEffectiveDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegStreamEffectiveDateBusinessDayConvention[LegStreamEffectiveDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegStreamEffectiveDateBusinessDayConvention = exports.LegStreamEffectiveDateBusinessDayConvention || (exports.LegStreamEffectiveDateBusinessDayConvention = {}));
var LegStreamEffectiveDateOffsetUnit;
(function (LegStreamEffectiveDateOffsetUnit) {
    LegStreamEffectiveDateOffsetUnit["Day"] = "D";
    LegStreamEffectiveDateOffsetUnit["Week"] = "Wk";
    LegStreamEffectiveDateOffsetUnit["Month"] = "Mo";
    LegStreamEffectiveDateOffsetUnit["Year"] = "Yr";
})(LegStreamEffectiveDateOffsetUnit = exports.LegStreamEffectiveDateOffsetUnit || (exports.LegStreamEffectiveDateOffsetUnit = {}));
var LegStreamEffectiveDateOffsetDayType;
(function (LegStreamEffectiveDateOffsetDayType) {
    LegStreamEffectiveDateOffsetDayType[LegStreamEffectiveDateOffsetDayType["Business"] = 0] = "Business";
    LegStreamEffectiveDateOffsetDayType[LegStreamEffectiveDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegStreamEffectiveDateOffsetDayType[LegStreamEffectiveDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegStreamEffectiveDateOffsetDayType[LegStreamEffectiveDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegStreamEffectiveDateOffsetDayType[LegStreamEffectiveDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegStreamEffectiveDateOffsetDayType[LegStreamEffectiveDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegStreamEffectiveDateOffsetDayType = exports.LegStreamEffectiveDateOffsetDayType || (exports.LegStreamEffectiveDateOffsetDayType = {}));
var LegStreamTerminationDateBusinessDayConvention;
(function (LegStreamTerminationDateBusinessDayConvention) {
    LegStreamTerminationDateBusinessDayConvention[LegStreamTerminationDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegStreamTerminationDateBusinessDayConvention[LegStreamTerminationDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegStreamTerminationDateBusinessDayConvention[LegStreamTerminationDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegStreamTerminationDateBusinessDayConvention[LegStreamTerminationDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegStreamTerminationDateBusinessDayConvention[LegStreamTerminationDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegStreamTerminationDateBusinessDayConvention[LegStreamTerminationDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegStreamTerminationDateBusinessDayConvention[LegStreamTerminationDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegStreamTerminationDateBusinessDayConvention[LegStreamTerminationDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegStreamTerminationDateBusinessDayConvention = exports.LegStreamTerminationDateBusinessDayConvention || (exports.LegStreamTerminationDateBusinessDayConvention = {}));
var LegStreamTerminationDateOffsetUnit;
(function (LegStreamTerminationDateOffsetUnit) {
    LegStreamTerminationDateOffsetUnit["Day"] = "D";
    LegStreamTerminationDateOffsetUnit["Week"] = "Wk";
    LegStreamTerminationDateOffsetUnit["Month"] = "Mo";
    LegStreamTerminationDateOffsetUnit["Year"] = "Yr";
})(LegStreamTerminationDateOffsetUnit = exports.LegStreamTerminationDateOffsetUnit || (exports.LegStreamTerminationDateOffsetUnit = {}));
var LegStreamTerminationDateOffsetDayType;
(function (LegStreamTerminationDateOffsetDayType) {
    LegStreamTerminationDateOffsetDayType[LegStreamTerminationDateOffsetDayType["Business"] = 0] = "Business";
    LegStreamTerminationDateOffsetDayType[LegStreamTerminationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegStreamTerminationDateOffsetDayType[LegStreamTerminationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegStreamTerminationDateOffsetDayType[LegStreamTerminationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegStreamTerminationDateOffsetDayType[LegStreamTerminationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegStreamTerminationDateOffsetDayType[LegStreamTerminationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegStreamTerminationDateOffsetDayType = exports.LegStreamTerminationDateOffsetDayType || (exports.LegStreamTerminationDateOffsetDayType = {}));
var LegStreamCalculationPeriodBusinessDayConvention;
(function (LegStreamCalculationPeriodBusinessDayConvention) {
    LegStreamCalculationPeriodBusinessDayConvention[LegStreamCalculationPeriodBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegStreamCalculationPeriodBusinessDayConvention[LegStreamCalculationPeriodBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegStreamCalculationPeriodBusinessDayConvention[LegStreamCalculationPeriodBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegStreamCalculationPeriodBusinessDayConvention[LegStreamCalculationPeriodBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegStreamCalculationPeriodBusinessDayConvention[LegStreamCalculationPeriodBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegStreamCalculationPeriodBusinessDayConvention[LegStreamCalculationPeriodBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegStreamCalculationPeriodBusinessDayConvention[LegStreamCalculationPeriodBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegStreamCalculationPeriodBusinessDayConvention[LegStreamCalculationPeriodBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegStreamCalculationPeriodBusinessDayConvention = exports.LegStreamCalculationPeriodBusinessDayConvention || (exports.LegStreamCalculationPeriodBusinessDayConvention = {}));
var LegStreamFirstPeriodStartDateBusinessDayConvention;
(function (LegStreamFirstPeriodStartDateBusinessDayConvention) {
    LegStreamFirstPeriodStartDateBusinessDayConvention[LegStreamFirstPeriodStartDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegStreamFirstPeriodStartDateBusinessDayConvention[LegStreamFirstPeriodStartDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegStreamFirstPeriodStartDateBusinessDayConvention[LegStreamFirstPeriodStartDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegStreamFirstPeriodStartDateBusinessDayConvention[LegStreamFirstPeriodStartDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegStreamFirstPeriodStartDateBusinessDayConvention[LegStreamFirstPeriodStartDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegStreamFirstPeriodStartDateBusinessDayConvention[LegStreamFirstPeriodStartDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegStreamFirstPeriodStartDateBusinessDayConvention[LegStreamFirstPeriodStartDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegStreamFirstPeriodStartDateBusinessDayConvention[LegStreamFirstPeriodStartDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegStreamFirstPeriodStartDateBusinessDayConvention = exports.LegStreamFirstPeriodStartDateBusinessDayConvention || (exports.LegStreamFirstPeriodStartDateBusinessDayConvention = {}));
var LegStreamCalculationFrequencyUnit;
(function (LegStreamCalculationFrequencyUnit) {
    LegStreamCalculationFrequencyUnit["Day"] = "D";
    LegStreamCalculationFrequencyUnit["Week"] = "Wk";
    LegStreamCalculationFrequencyUnit["Month"] = "Mo";
    LegStreamCalculationFrequencyUnit["Year"] = "Yr";
    LegStreamCalculationFrequencyUnit["Hour"] = "H";
    LegStreamCalculationFrequencyUnit["Minute"] = "Min";
    LegStreamCalculationFrequencyUnit["Second"] = "S";
    LegStreamCalculationFrequencyUnit["Term"] = "T";
})(LegStreamCalculationFrequencyUnit = exports.LegStreamCalculationFrequencyUnit || (exports.LegStreamCalculationFrequencyUnit = {}));
var LegStreamCalculationRollConvention;
(function (LegStreamCalculationRollConvention) {
    LegStreamCalculationRollConvention["E1stDayOfTheMonth"] = "1";
    LegStreamCalculationRollConvention["E2ndDayOfTheMonth"] = "2";
    LegStreamCalculationRollConvention["E3rdDayOfTheMonth"] = "3";
    LegStreamCalculationRollConvention["E4thDayOfTheMonth"] = "4";
    LegStreamCalculationRollConvention["E5thDayOfTheMonth"] = "5";
    LegStreamCalculationRollConvention["E6ThdDayOfTheMonth"] = "6";
    LegStreamCalculationRollConvention["E7thDayOfTheMonth"] = "7";
    LegStreamCalculationRollConvention["E8thDayOfTheMonth"] = "8";
    LegStreamCalculationRollConvention["E9thDayOfTheMonth"] = "9";
    LegStreamCalculationRollConvention["E10thDayOfTheMonth"] = "10";
    LegStreamCalculationRollConvention["E11ThDayOfTheMonth"] = "11";
    LegStreamCalculationRollConvention["E12ThDayOfTheMonth"] = "12";
    LegStreamCalculationRollConvention["E13ThDayOfTheMonth"] = "13";
    LegStreamCalculationRollConvention["E14thDayOfTheMonth"] = "14";
    LegStreamCalculationRollConvention["E15thDayOfTheMonth"] = "15";
    LegStreamCalculationRollConvention["E16thDayOfTheMonth"] = "16";
    LegStreamCalculationRollConvention["E17thDayOfTheMonth"] = "17";
    LegStreamCalculationRollConvention["E18thDayOfTheMonth"] = "18";
    LegStreamCalculationRollConvention["E19thDayOfTheMonth"] = "19";
    LegStreamCalculationRollConvention["E20thDayOfTheMonth"] = "20";
    LegStreamCalculationRollConvention["E21stDayOfTheMonth"] = "21";
    LegStreamCalculationRollConvention["E22ndDayOfTheMonth"] = "22";
    LegStreamCalculationRollConvention["E23rdDayOfTheMonth"] = "23";
    LegStreamCalculationRollConvention["E24thDayOfTheMonth"] = "24";
    LegStreamCalculationRollConvention["E25thDayOfTheMonth"] = "25";
    LegStreamCalculationRollConvention["E26thDayOfTheMonth"] = "26";
    LegStreamCalculationRollConvention["E27thDayOfTheMonth"] = "27";
    LegStreamCalculationRollConvention["E28thDayOfTheMonth"] = "28";
    LegStreamCalculationRollConvention["E29thDayOfTheMonth"] = "29";
    LegStreamCalculationRollConvention["E30thDayOfTheMonth"] = "30";
    LegStreamCalculationRollConvention["TheEndOfTheMonth"] = "EOM";
    LegStreamCalculationRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    LegStreamCalculationRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    LegStreamCalculationRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    LegStreamCalculationRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    LegStreamCalculationRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    LegStreamCalculationRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    LegStreamCalculationRollConvention["NoAdjustment"] = "NONE";
    LegStreamCalculationRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    LegStreamCalculationRollConvention["Monday"] = "MON";
    LegStreamCalculationRollConvention["Tuesday"] = "TUE";
    LegStreamCalculationRollConvention["Wednesday"] = "WED";
    LegStreamCalculationRollConvention["Thursday"] = "THU";
    LegStreamCalculationRollConvention["Friday"] = "FRI";
    LegStreamCalculationRollConvention["Saturday"] = "SAT";
    LegStreamCalculationRollConvention["Sunday"] = "SUN";
})(LegStreamCalculationRollConvention = exports.LegStreamCalculationRollConvention || (exports.LegStreamCalculationRollConvention = {}));
var LegPaymentStreamType;
(function (LegPaymentStreamType) {
    LegPaymentStreamType[LegPaymentStreamType["PeriodicDefault"] = 0] = "PeriodicDefault";
    LegPaymentStreamType[LegPaymentStreamType["Initial"] = 1] = "Initial";
    LegPaymentStreamType[LegPaymentStreamType["Single"] = 2] = "Single";
    LegPaymentStreamType[LegPaymentStreamType["Dividend"] = 3] = "Dividend";
    LegPaymentStreamType[LegPaymentStreamType["Interest"] = 4] = "Interest";
    LegPaymentStreamType[LegPaymentStreamType["DividendReturn"] = 5] = "DividendReturn";
    LegPaymentStreamType[LegPaymentStreamType["PriceReturn"] = 6] = "PriceReturn";
    LegPaymentStreamType[LegPaymentStreamType["TotalReturn"] = 7] = "TotalReturn";
    LegPaymentStreamType[LegPaymentStreamType["Variance"] = 8] = "Variance";
    LegPaymentStreamType[LegPaymentStreamType["Correlation"] = 9] = "Correlation";
})(LegPaymentStreamType = exports.LegPaymentStreamType || (exports.LegPaymentStreamType = {}));
var LegPaymentStreamDayCount;
(function (LegPaymentStreamDayCount) {
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["E11"] = 0] = "E11";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["E3036030U360OrBondBasis"] = 1] = "E3036030U360OrBondBasis";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["E30360Sia"] = 2] = "E30360Sia";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["E30360M"] = 3] = "E30360M";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["E30E360EurobondBasis"] = 4] = "E30E360EurobondBasis";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["E30E360Isda"] = 5] = "E30E360Isda";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["Act360"] = 6] = "Act360";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["Act365Fixed"] = 7] = "Act365Fixed";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["ActActAfb"] = 8] = "ActActAfb";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["ActActIcma"] = 9] = "ActActIcma";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["ActActIcsmaUltimo"] = 10] = "ActActIcsmaUltimo";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["ActActIsda"] = 11] = "ActActIsda";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["Bus252"] = 12] = "Bus252";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["E30E360"] = 13] = "E30E360";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["Act365L"] = 14] = "Act365L";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["Nl365"] = 15] = "Nl365";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["Nl360"] = 16] = "Nl360";
    LegPaymentStreamDayCount[LegPaymentStreamDayCount["Act364"] = 17] = "Act364";
})(LegPaymentStreamDayCount = exports.LegPaymentStreamDayCount || (exports.LegPaymentStreamDayCount = {}));
var LegPaymentStreamDiscountType;
(function (LegPaymentStreamDiscountType) {
    LegPaymentStreamDiscountType[LegPaymentStreamDiscountType["Standard"] = 0] = "Standard";
    LegPaymentStreamDiscountType[LegPaymentStreamDiscountType["ForwardRateAgreementFra"] = 1] = "ForwardRateAgreementFra";
})(LegPaymentStreamDiscountType = exports.LegPaymentStreamDiscountType || (exports.LegPaymentStreamDiscountType = {}));
var LegPaymentStreamDiscountRateDayCount;
(function (LegPaymentStreamDiscountRateDayCount) {
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["E11"] = 0] = "E11";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["E3036030U360OrBondBasis"] = 1] = "E3036030U360OrBondBasis";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["E30360Sia"] = 2] = "E30360Sia";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["E30360M"] = 3] = "E30360M";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["E30E360EurobondBasis"] = 4] = "E30E360EurobondBasis";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["E30E360Isda"] = 5] = "E30E360Isda";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["Act360"] = 6] = "Act360";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["Act365Fixed"] = 7] = "Act365Fixed";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["ActActAfb"] = 8] = "ActActAfb";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["ActActIcma"] = 9] = "ActActIcma";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["ActActIcsmaUltimo"] = 10] = "ActActIcsmaUltimo";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["ActActIsda"] = 11] = "ActActIsda";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["Bus252"] = 12] = "Bus252";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["E30E360"] = 13] = "E30E360";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["Act365L"] = 14] = "Act365L";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["Nl365"] = 15] = "Nl365";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["Nl360"] = 16] = "Nl360";
    LegPaymentStreamDiscountRateDayCount[LegPaymentStreamDiscountRateDayCount["Act364"] = 17] = "Act364";
})(LegPaymentStreamDiscountRateDayCount = exports.LegPaymentStreamDiscountRateDayCount || (exports.LegPaymentStreamDiscountRateDayCount = {}));
var LegPaymentStreamCompoundingMethod;
(function (LegPaymentStreamCompoundingMethod) {
    LegPaymentStreamCompoundingMethod[LegPaymentStreamCompoundingMethod["None"] = 0] = "None";
    LegPaymentStreamCompoundingMethod[LegPaymentStreamCompoundingMethod["Flat"] = 1] = "Flat";
    LegPaymentStreamCompoundingMethod[LegPaymentStreamCompoundingMethod["Straight"] = 2] = "Straight";
    LegPaymentStreamCompoundingMethod[LegPaymentStreamCompoundingMethod["SpreadExclusive"] = 3] = "SpreadExclusive";
})(LegPaymentStreamCompoundingMethod = exports.LegPaymentStreamCompoundingMethod || (exports.LegPaymentStreamCompoundingMethod = {}));
var LegPaymentStreamPaymentDateBusinessDayConvention;
(function (LegPaymentStreamPaymentDateBusinessDayConvention) {
    LegPaymentStreamPaymentDateBusinessDayConvention[LegPaymentStreamPaymentDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegPaymentStreamPaymentDateBusinessDayConvention[LegPaymentStreamPaymentDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegPaymentStreamPaymentDateBusinessDayConvention[LegPaymentStreamPaymentDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegPaymentStreamPaymentDateBusinessDayConvention[LegPaymentStreamPaymentDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegPaymentStreamPaymentDateBusinessDayConvention[LegPaymentStreamPaymentDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegPaymentStreamPaymentDateBusinessDayConvention[LegPaymentStreamPaymentDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegPaymentStreamPaymentDateBusinessDayConvention[LegPaymentStreamPaymentDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegPaymentStreamPaymentDateBusinessDayConvention[LegPaymentStreamPaymentDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegPaymentStreamPaymentDateBusinessDayConvention = exports.LegPaymentStreamPaymentDateBusinessDayConvention || (exports.LegPaymentStreamPaymentDateBusinessDayConvention = {}));
var LegPaymentStreamPaymentFrequencyUnit;
(function (LegPaymentStreamPaymentFrequencyUnit) {
    LegPaymentStreamPaymentFrequencyUnit["Day"] = "D";
    LegPaymentStreamPaymentFrequencyUnit["Week"] = "Wk";
    LegPaymentStreamPaymentFrequencyUnit["Month"] = "Mo";
    LegPaymentStreamPaymentFrequencyUnit["Year"] = "Yr";
    LegPaymentStreamPaymentFrequencyUnit["Term"] = "T";
})(LegPaymentStreamPaymentFrequencyUnit = exports.LegPaymentStreamPaymentFrequencyUnit || (exports.LegPaymentStreamPaymentFrequencyUnit = {}));
var LegPaymentStreamPaymentRollConvention;
(function (LegPaymentStreamPaymentRollConvention) {
    LegPaymentStreamPaymentRollConvention["E1stDayOfTheMonth"] = "1";
    LegPaymentStreamPaymentRollConvention["E2ndDayOfTheMonth"] = "2";
    LegPaymentStreamPaymentRollConvention["E3rdDayOfTheMonth"] = "3";
    LegPaymentStreamPaymentRollConvention["E4thDayOfTheMonth"] = "4";
    LegPaymentStreamPaymentRollConvention["E5thDayOfTheMonth"] = "5";
    LegPaymentStreamPaymentRollConvention["E6ThdDayOfTheMonth"] = "6";
    LegPaymentStreamPaymentRollConvention["E7thDayOfTheMonth"] = "7";
    LegPaymentStreamPaymentRollConvention["E8thDayOfTheMonth"] = "8";
    LegPaymentStreamPaymentRollConvention["E9thDayOfTheMonth"] = "9";
    LegPaymentStreamPaymentRollConvention["E10thDayOfTheMonth"] = "10";
    LegPaymentStreamPaymentRollConvention["E11ThDayOfTheMonth"] = "11";
    LegPaymentStreamPaymentRollConvention["E12ThDayOfTheMonth"] = "12";
    LegPaymentStreamPaymentRollConvention["E13ThDayOfTheMonth"] = "13";
    LegPaymentStreamPaymentRollConvention["E14thDayOfTheMonth"] = "14";
    LegPaymentStreamPaymentRollConvention["E15thDayOfTheMonth"] = "15";
    LegPaymentStreamPaymentRollConvention["E16thDayOfTheMonth"] = "16";
    LegPaymentStreamPaymentRollConvention["E17thDayOfTheMonth"] = "17";
    LegPaymentStreamPaymentRollConvention["E18thDayOfTheMonth"] = "18";
    LegPaymentStreamPaymentRollConvention["E19thDayOfTheMonth"] = "19";
    LegPaymentStreamPaymentRollConvention["E20thDayOfTheMonth"] = "20";
    LegPaymentStreamPaymentRollConvention["E21stDayOfTheMonth"] = "21";
    LegPaymentStreamPaymentRollConvention["E22ndDayOfTheMonth"] = "22";
    LegPaymentStreamPaymentRollConvention["E23rdDayOfTheMonth"] = "23";
    LegPaymentStreamPaymentRollConvention["E24thDayOfTheMonth"] = "24";
    LegPaymentStreamPaymentRollConvention["E25thDayOfTheMonth"] = "25";
    LegPaymentStreamPaymentRollConvention["E26thDayOfTheMonth"] = "26";
    LegPaymentStreamPaymentRollConvention["E27thDayOfTheMonth"] = "27";
    LegPaymentStreamPaymentRollConvention["E28thDayOfTheMonth"] = "28";
    LegPaymentStreamPaymentRollConvention["E29thDayOfTheMonth"] = "29";
    LegPaymentStreamPaymentRollConvention["E30thDayOfTheMonth"] = "30";
    LegPaymentStreamPaymentRollConvention["TheEndOfTheMonth"] = "EOM";
    LegPaymentStreamPaymentRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    LegPaymentStreamPaymentRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    LegPaymentStreamPaymentRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    LegPaymentStreamPaymentRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    LegPaymentStreamPaymentRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    LegPaymentStreamPaymentRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    LegPaymentStreamPaymentRollConvention["NoAdjustment"] = "NONE";
    LegPaymentStreamPaymentRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    LegPaymentStreamPaymentRollConvention["Monday"] = "MON";
    LegPaymentStreamPaymentRollConvention["Tuesday"] = "TUE";
    LegPaymentStreamPaymentRollConvention["Wednesday"] = "WED";
    LegPaymentStreamPaymentRollConvention["Thursday"] = "THU";
    LegPaymentStreamPaymentRollConvention["Friday"] = "FRI";
    LegPaymentStreamPaymentRollConvention["Saturday"] = "SAT";
    LegPaymentStreamPaymentRollConvention["Sunday"] = "SUN";
})(LegPaymentStreamPaymentRollConvention = exports.LegPaymentStreamPaymentRollConvention || (exports.LegPaymentStreamPaymentRollConvention = {}));
var LegPaymentStreamPaymentDateOffsetUnit;
(function (LegPaymentStreamPaymentDateOffsetUnit) {
    LegPaymentStreamPaymentDateOffsetUnit["Day"] = "D";
    LegPaymentStreamPaymentDateOffsetUnit["Week"] = "Wk";
    LegPaymentStreamPaymentDateOffsetUnit["Month"] = "Mo";
    LegPaymentStreamPaymentDateOffsetUnit["Year"] = "Yr";
})(LegPaymentStreamPaymentDateOffsetUnit = exports.LegPaymentStreamPaymentDateOffsetUnit || (exports.LegPaymentStreamPaymentDateOffsetUnit = {}));
var LegPaymentStreamPaymentDateOffsetDayType;
(function (LegPaymentStreamPaymentDateOffsetDayType) {
    LegPaymentStreamPaymentDateOffsetDayType[LegPaymentStreamPaymentDateOffsetDayType["Business"] = 0] = "Business";
    LegPaymentStreamPaymentDateOffsetDayType[LegPaymentStreamPaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStreamPaymentDateOffsetDayType[LegPaymentStreamPaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStreamPaymentDateOffsetDayType[LegPaymentStreamPaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStreamPaymentDateOffsetDayType[LegPaymentStreamPaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStreamPaymentDateOffsetDayType[LegPaymentStreamPaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStreamPaymentDateOffsetDayType = exports.LegPaymentStreamPaymentDateOffsetDayType || (exports.LegPaymentStreamPaymentDateOffsetDayType = {}));
var LegPaymentStreamResetDateBusinessDayConvention;
(function (LegPaymentStreamResetDateBusinessDayConvention) {
    LegPaymentStreamResetDateBusinessDayConvention[LegPaymentStreamResetDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegPaymentStreamResetDateBusinessDayConvention[LegPaymentStreamResetDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegPaymentStreamResetDateBusinessDayConvention[LegPaymentStreamResetDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegPaymentStreamResetDateBusinessDayConvention[LegPaymentStreamResetDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegPaymentStreamResetDateBusinessDayConvention[LegPaymentStreamResetDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegPaymentStreamResetDateBusinessDayConvention[LegPaymentStreamResetDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegPaymentStreamResetDateBusinessDayConvention[LegPaymentStreamResetDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegPaymentStreamResetDateBusinessDayConvention[LegPaymentStreamResetDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegPaymentStreamResetDateBusinessDayConvention = exports.LegPaymentStreamResetDateBusinessDayConvention || (exports.LegPaymentStreamResetDateBusinessDayConvention = {}));
var LegPaymentStreamResetFrequencyUnit;
(function (LegPaymentStreamResetFrequencyUnit) {
    LegPaymentStreamResetFrequencyUnit["Day"] = "D";
    LegPaymentStreamResetFrequencyUnit["Week"] = "Wk";
    LegPaymentStreamResetFrequencyUnit["Month"] = "Mo";
    LegPaymentStreamResetFrequencyUnit["Year"] = "Yr";
    LegPaymentStreamResetFrequencyUnit["Hour"] = "H";
    LegPaymentStreamResetFrequencyUnit["Minute"] = "Min";
    LegPaymentStreamResetFrequencyUnit["Second"] = "S";
    LegPaymentStreamResetFrequencyUnit["Term"] = "T";
})(LegPaymentStreamResetFrequencyUnit = exports.LegPaymentStreamResetFrequencyUnit || (exports.LegPaymentStreamResetFrequencyUnit = {}));
var LegPaymentStreamResetWeeklyRollConvention;
(function (LegPaymentStreamResetWeeklyRollConvention) {
    LegPaymentStreamResetWeeklyRollConvention["Monday"] = "MON";
    LegPaymentStreamResetWeeklyRollConvention["Tuesday"] = "TUE";
    LegPaymentStreamResetWeeklyRollConvention["Wednesday"] = "WED";
    LegPaymentStreamResetWeeklyRollConvention["Thursday"] = "THU";
    LegPaymentStreamResetWeeklyRollConvention["Friday"] = "FRI";
    LegPaymentStreamResetWeeklyRollConvention["Saturday"] = "SAT";
    LegPaymentStreamResetWeeklyRollConvention["Sunday"] = "SUN";
})(LegPaymentStreamResetWeeklyRollConvention = exports.LegPaymentStreamResetWeeklyRollConvention || (exports.LegPaymentStreamResetWeeklyRollConvention = {}));
var LegPaymentStreamInitialFixingDateBusinessDayConvention;
(function (LegPaymentStreamInitialFixingDateBusinessDayConvention) {
    LegPaymentStreamInitialFixingDateBusinessDayConvention[LegPaymentStreamInitialFixingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegPaymentStreamInitialFixingDateBusinessDayConvention[LegPaymentStreamInitialFixingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegPaymentStreamInitialFixingDateBusinessDayConvention[LegPaymentStreamInitialFixingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegPaymentStreamInitialFixingDateBusinessDayConvention[LegPaymentStreamInitialFixingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegPaymentStreamInitialFixingDateBusinessDayConvention[LegPaymentStreamInitialFixingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegPaymentStreamInitialFixingDateBusinessDayConvention[LegPaymentStreamInitialFixingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegPaymentStreamInitialFixingDateBusinessDayConvention[LegPaymentStreamInitialFixingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegPaymentStreamInitialFixingDateBusinessDayConvention[LegPaymentStreamInitialFixingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegPaymentStreamInitialFixingDateBusinessDayConvention = exports.LegPaymentStreamInitialFixingDateBusinessDayConvention || (exports.LegPaymentStreamInitialFixingDateBusinessDayConvention = {}));
var LegPaymentStreamInitialFixingDateOffsetUnit;
(function (LegPaymentStreamInitialFixingDateOffsetUnit) {
    LegPaymentStreamInitialFixingDateOffsetUnit["Day"] = "D";
    LegPaymentStreamInitialFixingDateOffsetUnit["Week"] = "Wk";
    LegPaymentStreamInitialFixingDateOffsetUnit["Month"] = "Mo";
    LegPaymentStreamInitialFixingDateOffsetUnit["Year"] = "Yr";
})(LegPaymentStreamInitialFixingDateOffsetUnit = exports.LegPaymentStreamInitialFixingDateOffsetUnit || (exports.LegPaymentStreamInitialFixingDateOffsetUnit = {}));
var LegPaymentStreamInitialFixingDateOffsetDayType;
(function (LegPaymentStreamInitialFixingDateOffsetDayType) {
    LegPaymentStreamInitialFixingDateOffsetDayType[LegPaymentStreamInitialFixingDateOffsetDayType["Business"] = 0] = "Business";
    LegPaymentStreamInitialFixingDateOffsetDayType[LegPaymentStreamInitialFixingDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStreamInitialFixingDateOffsetDayType[LegPaymentStreamInitialFixingDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStreamInitialFixingDateOffsetDayType[LegPaymentStreamInitialFixingDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStreamInitialFixingDateOffsetDayType[LegPaymentStreamInitialFixingDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStreamInitialFixingDateOffsetDayType[LegPaymentStreamInitialFixingDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStreamInitialFixingDateOffsetDayType = exports.LegPaymentStreamInitialFixingDateOffsetDayType || (exports.LegPaymentStreamInitialFixingDateOffsetDayType = {}));
var LegPaymentStreamFixingDateBusinessDayConvention;
(function (LegPaymentStreamFixingDateBusinessDayConvention) {
    LegPaymentStreamFixingDateBusinessDayConvention[LegPaymentStreamFixingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegPaymentStreamFixingDateBusinessDayConvention[LegPaymentStreamFixingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegPaymentStreamFixingDateBusinessDayConvention[LegPaymentStreamFixingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegPaymentStreamFixingDateBusinessDayConvention[LegPaymentStreamFixingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegPaymentStreamFixingDateBusinessDayConvention[LegPaymentStreamFixingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegPaymentStreamFixingDateBusinessDayConvention[LegPaymentStreamFixingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegPaymentStreamFixingDateBusinessDayConvention[LegPaymentStreamFixingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegPaymentStreamFixingDateBusinessDayConvention[LegPaymentStreamFixingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegPaymentStreamFixingDateBusinessDayConvention = exports.LegPaymentStreamFixingDateBusinessDayConvention || (exports.LegPaymentStreamFixingDateBusinessDayConvention = {}));
var LegPaymentStreamFixingDateOffsetUnit;
(function (LegPaymentStreamFixingDateOffsetUnit) {
    LegPaymentStreamFixingDateOffsetUnit["Day"] = "D";
    LegPaymentStreamFixingDateOffsetUnit["Week"] = "Wk";
    LegPaymentStreamFixingDateOffsetUnit["Month"] = "Mo";
    LegPaymentStreamFixingDateOffsetUnit["Year"] = "Yr";
})(LegPaymentStreamFixingDateOffsetUnit = exports.LegPaymentStreamFixingDateOffsetUnit || (exports.LegPaymentStreamFixingDateOffsetUnit = {}));
var LegPaymentStreamFixingDateOffsetDayType;
(function (LegPaymentStreamFixingDateOffsetDayType) {
    LegPaymentStreamFixingDateOffsetDayType[LegPaymentStreamFixingDateOffsetDayType["Business"] = 0] = "Business";
    LegPaymentStreamFixingDateOffsetDayType[LegPaymentStreamFixingDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStreamFixingDateOffsetDayType[LegPaymentStreamFixingDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStreamFixingDateOffsetDayType[LegPaymentStreamFixingDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStreamFixingDateOffsetDayType[LegPaymentStreamFixingDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStreamFixingDateOffsetDayType[LegPaymentStreamFixingDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStreamFixingDateOffsetDayType = exports.LegPaymentStreamFixingDateOffsetDayType || (exports.LegPaymentStreamFixingDateOffsetDayType = {}));
var LegPaymentStreamRateCutoffDateOffsetUnit;
(function (LegPaymentStreamRateCutoffDateOffsetUnit) {
    LegPaymentStreamRateCutoffDateOffsetUnit["Day"] = "D";
    LegPaymentStreamRateCutoffDateOffsetUnit["Week"] = "Wk";
    LegPaymentStreamRateCutoffDateOffsetUnit["Month"] = "Mo";
    LegPaymentStreamRateCutoffDateOffsetUnit["Year"] = "Yr";
})(LegPaymentStreamRateCutoffDateOffsetUnit = exports.LegPaymentStreamRateCutoffDateOffsetUnit || (exports.LegPaymentStreamRateCutoffDateOffsetUnit = {}));
var LegPaymentStreamRateCutoffDateOffsetDayType;
(function (LegPaymentStreamRateCutoffDateOffsetDayType) {
    LegPaymentStreamRateCutoffDateOffsetDayType[LegPaymentStreamRateCutoffDateOffsetDayType["Business"] = 0] = "Business";
    LegPaymentStreamRateCutoffDateOffsetDayType[LegPaymentStreamRateCutoffDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStreamRateCutoffDateOffsetDayType[LegPaymentStreamRateCutoffDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStreamRateCutoffDateOffsetDayType[LegPaymentStreamRateCutoffDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStreamRateCutoffDateOffsetDayType[LegPaymentStreamRateCutoffDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStreamRateCutoffDateOffsetDayType[LegPaymentStreamRateCutoffDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStreamRateCutoffDateOffsetDayType = exports.LegPaymentStreamRateCutoffDateOffsetDayType || (exports.LegPaymentStreamRateCutoffDateOffsetDayType = {}));
var LegPaymentStreamRateIndexSource;
(function (LegPaymentStreamRateIndexSource) {
    LegPaymentStreamRateIndexSource[LegPaymentStreamRateIndexSource["Bloomberg"] = 0] = "Bloomberg";
    LegPaymentStreamRateIndexSource[LegPaymentStreamRateIndexSource["Reuters"] = 1] = "Reuters";
    LegPaymentStreamRateIndexSource[LegPaymentStreamRateIndexSource["Telerate"] = 2] = "Telerate";
    LegPaymentStreamRateIndexSource[LegPaymentStreamRateIndexSource["Other"] = 99] = "Other";
})(LegPaymentStreamRateIndexSource = exports.LegPaymentStreamRateIndexSource || (exports.LegPaymentStreamRateIndexSource = {}));
var LegPaymentStreamRateIndexCurveUnit;
(function (LegPaymentStreamRateIndexCurveUnit) {
    LegPaymentStreamRateIndexCurveUnit["Day"] = "D";
    LegPaymentStreamRateIndexCurveUnit["Week"] = "Wk";
    LegPaymentStreamRateIndexCurveUnit["Month"] = "Mo";
    LegPaymentStreamRateIndexCurveUnit["Year"] = "Yr";
})(LegPaymentStreamRateIndexCurveUnit = exports.LegPaymentStreamRateIndexCurveUnit || (exports.LegPaymentStreamRateIndexCurveUnit = {}));
var LegPaymentStreamRateSpreadPositionType;
(function (LegPaymentStreamRateSpreadPositionType) {
    LegPaymentStreamRateSpreadPositionType[LegPaymentStreamRateSpreadPositionType["Short"] = 0] = "Short";
    LegPaymentStreamRateSpreadPositionType[LegPaymentStreamRateSpreadPositionType["Long"] = 1] = "Long";
})(LegPaymentStreamRateSpreadPositionType = exports.LegPaymentStreamRateSpreadPositionType || (exports.LegPaymentStreamRateSpreadPositionType = {}));
var LegPaymentStreamRateTreatment;
(function (LegPaymentStreamRateTreatment) {
    LegPaymentStreamRateTreatment[LegPaymentStreamRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    LegPaymentStreamRateTreatment[LegPaymentStreamRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(LegPaymentStreamRateTreatment = exports.LegPaymentStreamRateTreatment || (exports.LegPaymentStreamRateTreatment = {}));
var LegPaymentStreamCapRateBuySide;
(function (LegPaymentStreamCapRateBuySide) {
    LegPaymentStreamCapRateBuySide[LegPaymentStreamCapRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegPaymentStreamCapRateBuySide[LegPaymentStreamCapRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegPaymentStreamCapRateBuySide = exports.LegPaymentStreamCapRateBuySide || (exports.LegPaymentStreamCapRateBuySide = {}));
var LegPaymentStreamCapRateSellSide;
(function (LegPaymentStreamCapRateSellSide) {
    LegPaymentStreamCapRateSellSide[LegPaymentStreamCapRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegPaymentStreamCapRateSellSide[LegPaymentStreamCapRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegPaymentStreamCapRateSellSide = exports.LegPaymentStreamCapRateSellSide || (exports.LegPaymentStreamCapRateSellSide = {}));
var LegPaymentStreamFloorRateBuySide;
(function (LegPaymentStreamFloorRateBuySide) {
    LegPaymentStreamFloorRateBuySide[LegPaymentStreamFloorRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegPaymentStreamFloorRateBuySide[LegPaymentStreamFloorRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegPaymentStreamFloorRateBuySide = exports.LegPaymentStreamFloorRateBuySide || (exports.LegPaymentStreamFloorRateBuySide = {}));
var LegPaymentStreamFloorRateSellSide;
(function (LegPaymentStreamFloorRateSellSide) {
    LegPaymentStreamFloorRateSellSide[LegPaymentStreamFloorRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegPaymentStreamFloorRateSellSide[LegPaymentStreamFloorRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegPaymentStreamFloorRateSellSide = exports.LegPaymentStreamFloorRateSellSide || (exports.LegPaymentStreamFloorRateSellSide = {}));
var LegPaymentStreamFinalRateRoundingDirection;
(function (LegPaymentStreamFinalRateRoundingDirection) {
    LegPaymentStreamFinalRateRoundingDirection["RoundToNearest"] = "0";
    LegPaymentStreamFinalRateRoundingDirection["RoundDown"] = "1";
    LegPaymentStreamFinalRateRoundingDirection["RoundUp"] = "2";
})(LegPaymentStreamFinalRateRoundingDirection = exports.LegPaymentStreamFinalRateRoundingDirection || (exports.LegPaymentStreamFinalRateRoundingDirection = {}));
var LegPaymentStreamAveragingMethod;
(function (LegPaymentStreamAveragingMethod) {
    LegPaymentStreamAveragingMethod[LegPaymentStreamAveragingMethod["Unweighted"] = 0] = "Unweighted";
    LegPaymentStreamAveragingMethod[LegPaymentStreamAveragingMethod["Weighted"] = 1] = "Weighted";
})(LegPaymentStreamAveragingMethod = exports.LegPaymentStreamAveragingMethod || (exports.LegPaymentStreamAveragingMethod = {}));
var LegPaymentStreamNegativeRateTreatment;
(function (LegPaymentStreamNegativeRateTreatment) {
    LegPaymentStreamNegativeRateTreatment[LegPaymentStreamNegativeRateTreatment["ZeroInterestRateMethod"] = 0] = "ZeroInterestRateMethod";
    LegPaymentStreamNegativeRateTreatment[LegPaymentStreamNegativeRateTreatment["NegativeInterestRateMethod"] = 1] = "NegativeInterestRateMethod";
})(LegPaymentStreamNegativeRateTreatment = exports.LegPaymentStreamNegativeRateTreatment || (exports.LegPaymentStreamNegativeRateTreatment = {}));
var LegPaymentStreamInflationLagUnit;
(function (LegPaymentStreamInflationLagUnit) {
    LegPaymentStreamInflationLagUnit["Day"] = "D";
    LegPaymentStreamInflationLagUnit["Week"] = "Wk";
    LegPaymentStreamInflationLagUnit["Month"] = "Mo";
    LegPaymentStreamInflationLagUnit["Year"] = "Yr";
})(LegPaymentStreamInflationLagUnit = exports.LegPaymentStreamInflationLagUnit || (exports.LegPaymentStreamInflationLagUnit = {}));
var LegPaymentStreamInflationLagDayType;
(function (LegPaymentStreamInflationLagDayType) {
    LegPaymentStreamInflationLagDayType[LegPaymentStreamInflationLagDayType["Business"] = 0] = "Business";
    LegPaymentStreamInflationLagDayType[LegPaymentStreamInflationLagDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStreamInflationLagDayType[LegPaymentStreamInflationLagDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStreamInflationLagDayType[LegPaymentStreamInflationLagDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStreamInflationLagDayType[LegPaymentStreamInflationLagDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStreamInflationLagDayType[LegPaymentStreamInflationLagDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStreamInflationLagDayType = exports.LegPaymentStreamInflationLagDayType || (exports.LegPaymentStreamInflationLagDayType = {}));
var LegPaymentStreamInflationInterpolationMethod;
(function (LegPaymentStreamInflationInterpolationMethod) {
    LegPaymentStreamInflationInterpolationMethod[LegPaymentStreamInflationInterpolationMethod["None"] = 0] = "None";
    LegPaymentStreamInflationInterpolationMethod[LegPaymentStreamInflationInterpolationMethod["LinearZeroYield"] = 1] = "LinearZeroYield";
})(LegPaymentStreamInflationInterpolationMethod = exports.LegPaymentStreamInflationInterpolationMethod || (exports.LegPaymentStreamInflationInterpolationMethod = {}));
var LegPaymentStreamInflationIndexSource;
(function (LegPaymentStreamInflationIndexSource) {
    LegPaymentStreamInflationIndexSource[LegPaymentStreamInflationIndexSource["Bloomberg"] = 0] = "Bloomberg";
    LegPaymentStreamInflationIndexSource[LegPaymentStreamInflationIndexSource["Reuters"] = 1] = "Reuters";
    LegPaymentStreamInflationIndexSource[LegPaymentStreamInflationIndexSource["Telerate"] = 2] = "Telerate";
    LegPaymentStreamInflationIndexSource[LegPaymentStreamInflationIndexSource["Other"] = 99] = "Other";
})(LegPaymentStreamInflationIndexSource = exports.LegPaymentStreamInflationIndexSource || (exports.LegPaymentStreamInflationIndexSource = {}));
var LegPaymentStreamFRADiscounting;
(function (LegPaymentStreamFRADiscounting) {
    LegPaymentStreamFRADiscounting[LegPaymentStreamFRADiscounting["None"] = 0] = "None";
    LegPaymentStreamFRADiscounting[LegPaymentStreamFRADiscounting["InternationalSwapsAndDerivativesAssociationIsda"] = 1] = "InternationalSwapsAndDerivativesAssociationIsda";
    LegPaymentStreamFRADiscounting[LegPaymentStreamFRADiscounting["AustralianFinancialMarketsAssociationAfma"] = 2] = "AustralianFinancialMarketsAssociationAfma";
})(LegPaymentStreamFRADiscounting = exports.LegPaymentStreamFRADiscounting || (exports.LegPaymentStreamFRADiscounting = {}));
var LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention;
(function (LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention) {
    LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention = exports.LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention || (exports.LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention = {}));
var LegPaymentStreamNonDeliverableFixingDatesOffsetUnit;
(function (LegPaymentStreamNonDeliverableFixingDatesOffsetUnit) {
    LegPaymentStreamNonDeliverableFixingDatesOffsetUnit["Day"] = "D";
    LegPaymentStreamNonDeliverableFixingDatesOffsetUnit["Week"] = "Wk";
    LegPaymentStreamNonDeliverableFixingDatesOffsetUnit["Month"] = "Mo";
    LegPaymentStreamNonDeliverableFixingDatesOffsetUnit["Year"] = "Yr";
})(LegPaymentStreamNonDeliverableFixingDatesOffsetUnit = exports.LegPaymentStreamNonDeliverableFixingDatesOffsetUnit || (exports.LegPaymentStreamNonDeliverableFixingDatesOffsetUnit = {}));
var LegPaymentStreamNonDeliverableFixingDatesOffsetDayType;
(function (LegPaymentStreamNonDeliverableFixingDatesOffsetDayType) {
    LegPaymentStreamNonDeliverableFixingDatesOffsetDayType[LegPaymentStreamNonDeliverableFixingDatesOffsetDayType["Business"] = 0] = "Business";
    LegPaymentStreamNonDeliverableFixingDatesOffsetDayType[LegPaymentStreamNonDeliverableFixingDatesOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStreamNonDeliverableFixingDatesOffsetDayType[LegPaymentStreamNonDeliverableFixingDatesOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStreamNonDeliverableFixingDatesOffsetDayType[LegPaymentStreamNonDeliverableFixingDatesOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStreamNonDeliverableFixingDatesOffsetDayType[LegPaymentStreamNonDeliverableFixingDatesOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStreamNonDeliverableFixingDatesOffsetDayType[LegPaymentStreamNonDeliverableFixingDatesOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStreamNonDeliverableFixingDatesOffsetDayType = exports.LegPaymentStreamNonDeliverableFixingDatesOffsetDayType || (exports.LegPaymentStreamNonDeliverableFixingDatesOffsetDayType = {}));
var LegSettlRateFallbackRateSource;
(function (LegSettlRateFallbackRateSource) {
    LegSettlRateFallbackRateSource[LegSettlRateFallbackRateSource["Bloomberg"] = 0] = "Bloomberg";
    LegSettlRateFallbackRateSource[LegSettlRateFallbackRateSource["Reuters"] = 1] = "Reuters";
    LegSettlRateFallbackRateSource[LegSettlRateFallbackRateSource["Telerate"] = 2] = "Telerate";
    LegSettlRateFallbackRateSource[LegSettlRateFallbackRateSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    LegSettlRateFallbackRateSource[LegSettlRateFallbackRateSource["Other"] = 99] = "Other";
})(LegSettlRateFallbackRateSource = exports.LegSettlRateFallbackRateSource || (exports.LegSettlRateFallbackRateSource = {}));
var LegNonDeliverableFixingDateType;
(function (LegNonDeliverableFixingDateType) {
    LegNonDeliverableFixingDateType[LegNonDeliverableFixingDateType["Unadjusted"] = 0] = "Unadjusted";
    LegNonDeliverableFixingDateType[LegNonDeliverableFixingDateType["Adjusted"] = 1] = "Adjusted";
})(LegNonDeliverableFixingDateType = exports.LegNonDeliverableFixingDateType || (exports.LegNonDeliverableFixingDateType = {}));
var PaymentStreamNonDeliverableSettlRateSource;
(function (PaymentStreamNonDeliverableSettlRateSource) {
    PaymentStreamNonDeliverableSettlRateSource[PaymentStreamNonDeliverableSettlRateSource["Bloomberg"] = 0] = "Bloomberg";
    PaymentStreamNonDeliverableSettlRateSource[PaymentStreamNonDeliverableSettlRateSource["Reuters"] = 1] = "Reuters";
    PaymentStreamNonDeliverableSettlRateSource[PaymentStreamNonDeliverableSettlRateSource["Telerate"] = 2] = "Telerate";
    PaymentStreamNonDeliverableSettlRateSource[PaymentStreamNonDeliverableSettlRateSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    PaymentStreamNonDeliverableSettlRateSource[PaymentStreamNonDeliverableSettlRateSource["Other"] = 99] = "Other";
})(PaymentStreamNonDeliverableSettlRateSource = exports.PaymentStreamNonDeliverableSettlRateSource || (exports.PaymentStreamNonDeliverableSettlRateSource = {}));
var SettlRateFallbackRateSource;
(function (SettlRateFallbackRateSource) {
    SettlRateFallbackRateSource[SettlRateFallbackRateSource["Bloomberg"] = 0] = "Bloomberg";
    SettlRateFallbackRateSource[SettlRateFallbackRateSource["Reuters"] = 1] = "Reuters";
    SettlRateFallbackRateSource[SettlRateFallbackRateSource["Telerate"] = 2] = "Telerate";
    SettlRateFallbackRateSource[SettlRateFallbackRateSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    SettlRateFallbackRateSource[SettlRateFallbackRateSource["Other"] = 99] = "Other";
})(SettlRateFallbackRateSource = exports.SettlRateFallbackRateSource || (exports.SettlRateFallbackRateSource = {}));
var LegPaymentScheduleType;
(function (LegPaymentScheduleType) {
    LegPaymentScheduleType[LegPaymentScheduleType["Notional"] = 0] = "Notional";
    LegPaymentScheduleType[LegPaymentScheduleType["CashFlow"] = 1] = "CashFlow";
    LegPaymentScheduleType[LegPaymentScheduleType["FxLinkedNotional"] = 2] = "FxLinkedNotional";
    LegPaymentScheduleType[LegPaymentScheduleType["FixedRate"] = 3] = "FixedRate";
    LegPaymentScheduleType[LegPaymentScheduleType["FutureValueNotional"] = 4] = "FutureValueNotional";
    LegPaymentScheduleType[LegPaymentScheduleType["KnownAmount"] = 5] = "KnownAmount";
    LegPaymentScheduleType[LegPaymentScheduleType["FloatingRateMultiplier"] = 6] = "FloatingRateMultiplier";
    LegPaymentScheduleType[LegPaymentScheduleType["Spread"] = 7] = "Spread";
    LegPaymentScheduleType[LegPaymentScheduleType["CapRate"] = 8] = "CapRate";
    LegPaymentScheduleType[LegPaymentScheduleType["FloorRate"] = 9] = "FloorRate";
    LegPaymentScheduleType[LegPaymentScheduleType["NonDeliverableSettlementPaymentDates"] = 10] = "NonDeliverableSettlementPaymentDates";
    LegPaymentScheduleType[LegPaymentScheduleType["NonDeliverableSettlementCalculationDates"] = 11] = "NonDeliverableSettlementCalculationDates";
    LegPaymentScheduleType[LegPaymentScheduleType["NonDeliverableFixingDates"] = 12] = "NonDeliverableFixingDates";
    LegPaymentScheduleType[LegPaymentScheduleType["SettlementPeriodNotional"] = 13] = "SettlementPeriodNotional";
    LegPaymentScheduleType[LegPaymentScheduleType["SettlementPeriodPrice"] = 14] = "SettlementPeriodPrice";
    LegPaymentScheduleType[LegPaymentScheduleType["CalculationPeriod"] = 15] = "CalculationPeriod";
    LegPaymentScheduleType[LegPaymentScheduleType["DividendAccrualRateMultiplier"] = 16] = "DividendAccrualRateMultiplier";
    LegPaymentScheduleType[LegPaymentScheduleType["DividendAccrualRateSpread"] = 17] = "DividendAccrualRateSpread";
    LegPaymentScheduleType[LegPaymentScheduleType["DividendAccrualCapRate"] = 18] = "DividendAccrualCapRate";
    LegPaymentScheduleType[LegPaymentScheduleType["DividendAccrualFloorRate"] = 19] = "DividendAccrualFloorRate";
    LegPaymentScheduleType[LegPaymentScheduleType["CompoundingRateMultiplier"] = 20] = "CompoundingRateMultiplier";
    LegPaymentScheduleType[LegPaymentScheduleType["CompoundingRateSpread"] = 21] = "CompoundingRateSpread";
    LegPaymentScheduleType[LegPaymentScheduleType["CompoundingCapRate"] = 22] = "CompoundingCapRate";
    LegPaymentScheduleType[LegPaymentScheduleType["CompoundingFloorRate"] = 23] = "CompoundingFloorRate";
})(LegPaymentScheduleType = exports.LegPaymentScheduleType || (exports.LegPaymentScheduleType = {}));
var LegPaymentScheduleStubType;
(function (LegPaymentScheduleStubType) {
    LegPaymentScheduleStubType[LegPaymentScheduleStubType["Initial"] = 0] = "Initial";
    LegPaymentScheduleStubType[LegPaymentScheduleStubType["Final"] = 1] = "Final";
    LegPaymentScheduleStubType[LegPaymentScheduleStubType["CompoundingInitial"] = 2] = "CompoundingInitial";
    LegPaymentScheduleStubType[LegPaymentScheduleStubType["CompoundingFinal"] = 3] = "CompoundingFinal";
})(LegPaymentScheduleStubType = exports.LegPaymentScheduleStubType || (exports.LegPaymentScheduleStubType = {}));
var LegPaymentSchedulePaySide;
(function (LegPaymentSchedulePaySide) {
    LegPaymentSchedulePaySide[LegPaymentSchedulePaySide["Buy"] = 1] = "Buy";
    LegPaymentSchedulePaySide[LegPaymentSchedulePaySide["Sell"] = 2] = "Sell";
})(LegPaymentSchedulePaySide = exports.LegPaymentSchedulePaySide || (exports.LegPaymentSchedulePaySide = {}));
var LegPaymentScheduleReceiveSide;
(function (LegPaymentScheduleReceiveSide) {
    LegPaymentScheduleReceiveSide[LegPaymentScheduleReceiveSide["Buy"] = 1] = "Buy";
    LegPaymentScheduleReceiveSide[LegPaymentScheduleReceiveSide["Sell"] = 2] = "Sell";
})(LegPaymentScheduleReceiveSide = exports.LegPaymentScheduleReceiveSide || (exports.LegPaymentScheduleReceiveSide = {}));
var LegPaymentScheduleRateSpreadPositionType;
(function (LegPaymentScheduleRateSpreadPositionType) {
    LegPaymentScheduleRateSpreadPositionType[LegPaymentScheduleRateSpreadPositionType["Short"] = 0] = "Short";
    LegPaymentScheduleRateSpreadPositionType[LegPaymentScheduleRateSpreadPositionType["Long"] = 1] = "Long";
})(LegPaymentScheduleRateSpreadPositionType = exports.LegPaymentScheduleRateSpreadPositionType || (exports.LegPaymentScheduleRateSpreadPositionType = {}));
var LegPaymentScheduleRateTreatment;
(function (LegPaymentScheduleRateTreatment) {
    LegPaymentScheduleRateTreatment[LegPaymentScheduleRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    LegPaymentScheduleRateTreatment[LegPaymentScheduleRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(LegPaymentScheduleRateTreatment = exports.LegPaymentScheduleRateTreatment || (exports.LegPaymentScheduleRateTreatment = {}));
var LegPaymentScheduleStepFrequencyUnit;
(function (LegPaymentScheduleStepFrequencyUnit) {
    LegPaymentScheduleStepFrequencyUnit["Day"] = "D";
    LegPaymentScheduleStepFrequencyUnit["Week"] = "Wk";
    LegPaymentScheduleStepFrequencyUnit["Month"] = "Mo";
    LegPaymentScheduleStepFrequencyUnit["Year"] = "Yr";
    LegPaymentScheduleStepFrequencyUnit["Hour"] = "H";
    LegPaymentScheduleStepFrequencyUnit["Minute"] = "Min";
    LegPaymentScheduleStepFrequencyUnit["Second"] = "S";
    LegPaymentScheduleStepFrequencyUnit["Term"] = "T";
})(LegPaymentScheduleStepFrequencyUnit = exports.LegPaymentScheduleStepFrequencyUnit || (exports.LegPaymentScheduleStepFrequencyUnit = {}));
var LegPaymentScheduleStepRelativeTo;
(function (LegPaymentScheduleStepRelativeTo) {
    LegPaymentScheduleStepRelativeTo[LegPaymentScheduleStepRelativeTo["Initial"] = 0] = "Initial";
    LegPaymentScheduleStepRelativeTo[LegPaymentScheduleStepRelativeTo["Previous"] = 1] = "Previous";
})(LegPaymentScheduleStepRelativeTo = exports.LegPaymentScheduleStepRelativeTo || (exports.LegPaymentScheduleStepRelativeTo = {}));
var LegPaymentScheduleFixingDateBusinessDayConvention;
(function (LegPaymentScheduleFixingDateBusinessDayConvention) {
    LegPaymentScheduleFixingDateBusinessDayConvention[LegPaymentScheduleFixingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegPaymentScheduleFixingDateBusinessDayConvention[LegPaymentScheduleFixingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegPaymentScheduleFixingDateBusinessDayConvention[LegPaymentScheduleFixingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegPaymentScheduleFixingDateBusinessDayConvention[LegPaymentScheduleFixingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegPaymentScheduleFixingDateBusinessDayConvention[LegPaymentScheduleFixingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegPaymentScheduleFixingDateBusinessDayConvention[LegPaymentScheduleFixingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegPaymentScheduleFixingDateBusinessDayConvention[LegPaymentScheduleFixingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegPaymentScheduleFixingDateBusinessDayConvention[LegPaymentScheduleFixingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegPaymentScheduleFixingDateBusinessDayConvention = exports.LegPaymentScheduleFixingDateBusinessDayConvention || (exports.LegPaymentScheduleFixingDateBusinessDayConvention = {}));
var LegPaymentScheduleFixingDateOffsetUnit;
(function (LegPaymentScheduleFixingDateOffsetUnit) {
    LegPaymentScheduleFixingDateOffsetUnit["Day"] = "D";
    LegPaymentScheduleFixingDateOffsetUnit["Week"] = "Wk";
    LegPaymentScheduleFixingDateOffsetUnit["Month"] = "Mo";
    LegPaymentScheduleFixingDateOffsetUnit["Year"] = "Yr";
})(LegPaymentScheduleFixingDateOffsetUnit = exports.LegPaymentScheduleFixingDateOffsetUnit || (exports.LegPaymentScheduleFixingDateOffsetUnit = {}));
var LegPaymentScheduleFixingDateOffsetDayType;
(function (LegPaymentScheduleFixingDateOffsetDayType) {
    LegPaymentScheduleFixingDateOffsetDayType[LegPaymentScheduleFixingDateOffsetDayType["Business"] = 0] = "Business";
    LegPaymentScheduleFixingDateOffsetDayType[LegPaymentScheduleFixingDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentScheduleFixingDateOffsetDayType[LegPaymentScheduleFixingDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentScheduleFixingDateOffsetDayType[LegPaymentScheduleFixingDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentScheduleFixingDateOffsetDayType[LegPaymentScheduleFixingDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentScheduleFixingDateOffsetDayType[LegPaymentScheduleFixingDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentScheduleFixingDateOffsetDayType = exports.LegPaymentScheduleFixingDateOffsetDayType || (exports.LegPaymentScheduleFixingDateOffsetDayType = {}));
var LegPaymentScheduleInterimExchangeDatesBusinessDayConvention;
(function (LegPaymentScheduleInterimExchangeDatesBusinessDayConvention) {
    LegPaymentScheduleInterimExchangeDatesBusinessDayConvention[LegPaymentScheduleInterimExchangeDatesBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegPaymentScheduleInterimExchangeDatesBusinessDayConvention[LegPaymentScheduleInterimExchangeDatesBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegPaymentScheduleInterimExchangeDatesBusinessDayConvention[LegPaymentScheduleInterimExchangeDatesBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegPaymentScheduleInterimExchangeDatesBusinessDayConvention[LegPaymentScheduleInterimExchangeDatesBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegPaymentScheduleInterimExchangeDatesBusinessDayConvention[LegPaymentScheduleInterimExchangeDatesBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegPaymentScheduleInterimExchangeDatesBusinessDayConvention[LegPaymentScheduleInterimExchangeDatesBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegPaymentScheduleInterimExchangeDatesBusinessDayConvention[LegPaymentScheduleInterimExchangeDatesBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegPaymentScheduleInterimExchangeDatesBusinessDayConvention[LegPaymentScheduleInterimExchangeDatesBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegPaymentScheduleInterimExchangeDatesBusinessDayConvention = exports.LegPaymentScheduleInterimExchangeDatesBusinessDayConvention || (exports.LegPaymentScheduleInterimExchangeDatesBusinessDayConvention = {}));
var LegPaymentScheduleInterimExchangeDatesOffsetUnit;
(function (LegPaymentScheduleInterimExchangeDatesOffsetUnit) {
    LegPaymentScheduleInterimExchangeDatesOffsetUnit["Day"] = "D";
    LegPaymentScheduleInterimExchangeDatesOffsetUnit["Week"] = "Wk";
    LegPaymentScheduleInterimExchangeDatesOffsetUnit["Month"] = "Mo";
    LegPaymentScheduleInterimExchangeDatesOffsetUnit["Year"] = "Yr";
})(LegPaymentScheduleInterimExchangeDatesOffsetUnit = exports.LegPaymentScheduleInterimExchangeDatesOffsetUnit || (exports.LegPaymentScheduleInterimExchangeDatesOffsetUnit = {}));
var LegPaymentScheduleInterimExchangeDatesOffsetDayType;
(function (LegPaymentScheduleInterimExchangeDatesOffsetDayType) {
    LegPaymentScheduleInterimExchangeDatesOffsetDayType[LegPaymentScheduleInterimExchangeDatesOffsetDayType["Business"] = 0] = "Business";
    LegPaymentScheduleInterimExchangeDatesOffsetDayType[LegPaymentScheduleInterimExchangeDatesOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentScheduleInterimExchangeDatesOffsetDayType[LegPaymentScheduleInterimExchangeDatesOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentScheduleInterimExchangeDatesOffsetDayType[LegPaymentScheduleInterimExchangeDatesOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentScheduleInterimExchangeDatesOffsetDayType[LegPaymentScheduleInterimExchangeDatesOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentScheduleInterimExchangeDatesOffsetDayType[LegPaymentScheduleInterimExchangeDatesOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentScheduleInterimExchangeDatesOffsetDayType = exports.LegPaymentScheduleInterimExchangeDatesOffsetDayType || (exports.LegPaymentScheduleInterimExchangeDatesOffsetDayType = {}));
var LegPaymentScheduleRateSource;
(function (LegPaymentScheduleRateSource) {
    LegPaymentScheduleRateSource[LegPaymentScheduleRateSource["Bloomberg"] = 0] = "Bloomberg";
    LegPaymentScheduleRateSource[LegPaymentScheduleRateSource["Reuters"] = 1] = "Reuters";
    LegPaymentScheduleRateSource[LegPaymentScheduleRateSource["Telerate"] = 2] = "Telerate";
    LegPaymentScheduleRateSource[LegPaymentScheduleRateSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    LegPaymentScheduleRateSource[LegPaymentScheduleRateSource["Other"] = 99] = "Other";
})(LegPaymentScheduleRateSource = exports.LegPaymentScheduleRateSource || (exports.LegPaymentScheduleRateSource = {}));
var LegPaymentScheduleRateSourceType;
(function (LegPaymentScheduleRateSourceType) {
    LegPaymentScheduleRateSourceType[LegPaymentScheduleRateSourceType["Primary"] = 0] = "Primary";
    LegPaymentScheduleRateSourceType[LegPaymentScheduleRateSourceType["Secondary"] = 1] = "Secondary";
})(LegPaymentScheduleRateSourceType = exports.LegPaymentScheduleRateSourceType || (exports.LegPaymentScheduleRateSourceType = {}));
var LegPaymentStubType;
(function (LegPaymentStubType) {
    LegPaymentStubType[LegPaymentStubType["Initial"] = 0] = "Initial";
    LegPaymentStubType[LegPaymentStubType["Final"] = 1] = "Final";
    LegPaymentStubType[LegPaymentStubType["CompoundingInitial"] = 2] = "CompoundingInitial";
    LegPaymentStubType[LegPaymentStubType["CompoundingFinal"] = 3] = "CompoundingFinal";
})(LegPaymentStubType = exports.LegPaymentStubType || (exports.LegPaymentStubType = {}));
var LegPaymentStubLength;
(function (LegPaymentStubLength) {
    LegPaymentStubLength[LegPaymentStubLength["Short"] = 0] = "Short";
    LegPaymentStubLength[LegPaymentStubLength["Long"] = 1] = "Long";
})(LegPaymentStubLength = exports.LegPaymentStubLength || (exports.LegPaymentStubLength = {}));
var LegPaymentStubIndexSource;
(function (LegPaymentStubIndexSource) {
    LegPaymentStubIndexSource[LegPaymentStubIndexSource["Bloomberg"] = 0] = "Bloomberg";
    LegPaymentStubIndexSource[LegPaymentStubIndexSource["Reuters"] = 1] = "Reuters";
    LegPaymentStubIndexSource[LegPaymentStubIndexSource["Telerate"] = 2] = "Telerate";
    LegPaymentStubIndexSource[LegPaymentStubIndexSource["Other"] = 99] = "Other";
})(LegPaymentStubIndexSource = exports.LegPaymentStubIndexSource || (exports.LegPaymentStubIndexSource = {}));
var LegPaymentStubIndexCurveUnit;
(function (LegPaymentStubIndexCurveUnit) {
    LegPaymentStubIndexCurveUnit["Day"] = "D";
    LegPaymentStubIndexCurveUnit["Week"] = "Wk";
    LegPaymentStubIndexCurveUnit["Month"] = "Mo";
    LegPaymentStubIndexCurveUnit["Year"] = "Yr";
})(LegPaymentStubIndexCurveUnit = exports.LegPaymentStubIndexCurveUnit || (exports.LegPaymentStubIndexCurveUnit = {}));
var LegPaymentStubIndexRateSpreadPositionType;
(function (LegPaymentStubIndexRateSpreadPositionType) {
    LegPaymentStubIndexRateSpreadPositionType[LegPaymentStubIndexRateSpreadPositionType["Short"] = 0] = "Short";
    LegPaymentStubIndexRateSpreadPositionType[LegPaymentStubIndexRateSpreadPositionType["Long"] = 1] = "Long";
})(LegPaymentStubIndexRateSpreadPositionType = exports.LegPaymentStubIndexRateSpreadPositionType || (exports.LegPaymentStubIndexRateSpreadPositionType = {}));
var LegPaymentStubIndexRateTreatment;
(function (LegPaymentStubIndexRateTreatment) {
    LegPaymentStubIndexRateTreatment[LegPaymentStubIndexRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    LegPaymentStubIndexRateTreatment[LegPaymentStubIndexRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(LegPaymentStubIndexRateTreatment = exports.LegPaymentStubIndexRateTreatment || (exports.LegPaymentStubIndexRateTreatment = {}));
var LegPaymentStubIndexCapRateBuySide;
(function (LegPaymentStubIndexCapRateBuySide) {
    LegPaymentStubIndexCapRateBuySide[LegPaymentStubIndexCapRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegPaymentStubIndexCapRateBuySide[LegPaymentStubIndexCapRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegPaymentStubIndexCapRateBuySide = exports.LegPaymentStubIndexCapRateBuySide || (exports.LegPaymentStubIndexCapRateBuySide = {}));
var LegPaymentStubIndexCapRateSellSide;
(function (LegPaymentStubIndexCapRateSellSide) {
    LegPaymentStubIndexCapRateSellSide[LegPaymentStubIndexCapRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegPaymentStubIndexCapRateSellSide[LegPaymentStubIndexCapRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegPaymentStubIndexCapRateSellSide = exports.LegPaymentStubIndexCapRateSellSide || (exports.LegPaymentStubIndexCapRateSellSide = {}));
var LegPaymentStubIndexFloorRateBuySide;
(function (LegPaymentStubIndexFloorRateBuySide) {
    LegPaymentStubIndexFloorRateBuySide[LegPaymentStubIndexFloorRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegPaymentStubIndexFloorRateBuySide[LegPaymentStubIndexFloorRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegPaymentStubIndexFloorRateBuySide = exports.LegPaymentStubIndexFloorRateBuySide || (exports.LegPaymentStubIndexFloorRateBuySide = {}));
var LegPaymentStubIndexFloorRateSellSide;
(function (LegPaymentStubIndexFloorRateSellSide) {
    LegPaymentStubIndexFloorRateSellSide[LegPaymentStubIndexFloorRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegPaymentStubIndexFloorRateSellSide[LegPaymentStubIndexFloorRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegPaymentStubIndexFloorRateSellSide = exports.LegPaymentStubIndexFloorRateSellSide || (exports.LegPaymentStubIndexFloorRateSellSide = {}));
var LegPaymentStubIndex2Source;
(function (LegPaymentStubIndex2Source) {
    LegPaymentStubIndex2Source[LegPaymentStubIndex2Source["Bloomberg"] = 0] = "Bloomberg";
    LegPaymentStubIndex2Source[LegPaymentStubIndex2Source["Reuters"] = 1] = "Reuters";
    LegPaymentStubIndex2Source[LegPaymentStubIndex2Source["Telerate"] = 2] = "Telerate";
    LegPaymentStubIndex2Source[LegPaymentStubIndex2Source["Other"] = 99] = "Other";
})(LegPaymentStubIndex2Source = exports.LegPaymentStubIndex2Source || (exports.LegPaymentStubIndex2Source = {}));
var LegPaymentStubIndex2CurveUnit;
(function (LegPaymentStubIndex2CurveUnit) {
    LegPaymentStubIndex2CurveUnit["Day"] = "D";
    LegPaymentStubIndex2CurveUnit["Week"] = "Wk";
    LegPaymentStubIndex2CurveUnit["Month"] = "Mo";
    LegPaymentStubIndex2CurveUnit["Year"] = "Yr";
})(LegPaymentStubIndex2CurveUnit = exports.LegPaymentStubIndex2CurveUnit || (exports.LegPaymentStubIndex2CurveUnit = {}));
var LegPaymentStubIndex2RateSpreadPositionType;
(function (LegPaymentStubIndex2RateSpreadPositionType) {
    LegPaymentStubIndex2RateSpreadPositionType[LegPaymentStubIndex2RateSpreadPositionType["Short"] = 0] = "Short";
    LegPaymentStubIndex2RateSpreadPositionType[LegPaymentStubIndex2RateSpreadPositionType["Long"] = 1] = "Long";
})(LegPaymentStubIndex2RateSpreadPositionType = exports.LegPaymentStubIndex2RateSpreadPositionType || (exports.LegPaymentStubIndex2RateSpreadPositionType = {}));
var LegPaymentStubIndex2RateTreatment;
(function (LegPaymentStubIndex2RateTreatment) {
    LegPaymentStubIndex2RateTreatment[LegPaymentStubIndex2RateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    LegPaymentStubIndex2RateTreatment[LegPaymentStubIndex2RateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(LegPaymentStubIndex2RateTreatment = exports.LegPaymentStubIndex2RateTreatment || (exports.LegPaymentStubIndex2RateTreatment = {}));
var LegProvisionType;
(function (LegProvisionType) {
    LegProvisionType[LegProvisionType["MandatoryEarlyTermination"] = 0] = "MandatoryEarlyTermination";
    LegProvisionType[LegProvisionType["OptionalEarlyTermination"] = 1] = "OptionalEarlyTermination";
    LegProvisionType[LegProvisionType["Cancelable"] = 2] = "Cancelable";
    LegProvisionType[LegProvisionType["Extendible"] = 3] = "Extendible";
    LegProvisionType[LegProvisionType["MutualEarlyTermination"] = 4] = "MutualEarlyTermination";
})(LegProvisionType = exports.LegProvisionType || (exports.LegProvisionType = {}));
var LegProvisionDateBusinessDayConvention;
(function (LegProvisionDateBusinessDayConvention) {
    LegProvisionDateBusinessDayConvention[LegProvisionDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegProvisionDateBusinessDayConvention[LegProvisionDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegProvisionDateBusinessDayConvention[LegProvisionDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegProvisionDateBusinessDayConvention[LegProvisionDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegProvisionDateBusinessDayConvention[LegProvisionDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegProvisionDateBusinessDayConvention[LegProvisionDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegProvisionDateBusinessDayConvention[LegProvisionDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegProvisionDateBusinessDayConvention[LegProvisionDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegProvisionDateBusinessDayConvention = exports.LegProvisionDateBusinessDayConvention || (exports.LegProvisionDateBusinessDayConvention = {}));
var LegProvisionDateTenorUnit;
(function (LegProvisionDateTenorUnit) {
    LegProvisionDateTenorUnit["Day"] = "D";
    LegProvisionDateTenorUnit["Week"] = "Wk";
    LegProvisionDateTenorUnit["Month"] = "Mo";
    LegProvisionDateTenorUnit["Year"] = "Yr";
})(LegProvisionDateTenorUnit = exports.LegProvisionDateTenorUnit || (exports.LegProvisionDateTenorUnit = {}));
var LegProvisionCalculationAgent;
(function (LegProvisionCalculationAgent) {
    LegProvisionCalculationAgent[LegProvisionCalculationAgent["ExercisingParty"] = 0] = "ExercisingParty";
    LegProvisionCalculationAgent[LegProvisionCalculationAgent["NonExercisingParty"] = 1] = "NonExercisingParty";
    LegProvisionCalculationAgent[LegProvisionCalculationAgent["AsSpecifiedInTheMasterAgreement"] = 2] = "AsSpecifiedInTheMasterAgreement";
    LegProvisionCalculationAgent[LegProvisionCalculationAgent["AsSpecifiedInTheStandardTermsSupplement"] = 3] = "AsSpecifiedInTheStandardTermsSupplement";
})(LegProvisionCalculationAgent = exports.LegProvisionCalculationAgent || (exports.LegProvisionCalculationAgent = {}));
var LegProvisionOptionSinglePartyBuyerSide;
(function (LegProvisionOptionSinglePartyBuyerSide) {
    LegProvisionOptionSinglePartyBuyerSide[LegProvisionOptionSinglePartyBuyerSide["Buy"] = 1] = "Buy";
    LegProvisionOptionSinglePartyBuyerSide[LegProvisionOptionSinglePartyBuyerSide["Sell"] = 2] = "Sell";
})(LegProvisionOptionSinglePartyBuyerSide = exports.LegProvisionOptionSinglePartyBuyerSide || (exports.LegProvisionOptionSinglePartyBuyerSide = {}));
var LegProvisionOptionSinglePartySellerSide;
(function (LegProvisionOptionSinglePartySellerSide) {
    LegProvisionOptionSinglePartySellerSide[LegProvisionOptionSinglePartySellerSide["Buy"] = 1] = "Buy";
    LegProvisionOptionSinglePartySellerSide[LegProvisionOptionSinglePartySellerSide["Sell"] = 2] = "Sell";
})(LegProvisionOptionSinglePartySellerSide = exports.LegProvisionOptionSinglePartySellerSide || (exports.LegProvisionOptionSinglePartySellerSide = {}));
var LegProvisionOptionExerciseStyle;
(function (LegProvisionOptionExerciseStyle) {
    LegProvisionOptionExerciseStyle[LegProvisionOptionExerciseStyle["European"] = 0] = "European";
    LegProvisionOptionExerciseStyle[LegProvisionOptionExerciseStyle["American"] = 1] = "American";
    LegProvisionOptionExerciseStyle[LegProvisionOptionExerciseStyle["Bermuda"] = 2] = "Bermuda";
    LegProvisionOptionExerciseStyle[LegProvisionOptionExerciseStyle["Other"] = 99] = "Other";
})(LegProvisionOptionExerciseStyle = exports.LegProvisionOptionExerciseStyle || (exports.LegProvisionOptionExerciseStyle = {}));
var LegProvisionCashSettlMethod;
(function (LegProvisionCashSettlMethod) {
    LegProvisionCashSettlMethod[LegProvisionCashSettlMethod["CashPrice"] = 0] = "CashPrice";
    LegProvisionCashSettlMethod[LegProvisionCashSettlMethod["CashPriceAlternate"] = 1] = "CashPriceAlternate";
    LegProvisionCashSettlMethod[LegProvisionCashSettlMethod["ParYieldCurveAdjusted"] = 2] = "ParYieldCurveAdjusted";
    LegProvisionCashSettlMethod[LegProvisionCashSettlMethod["ZeroCouponYieldCurveAdjusted"] = 3] = "ZeroCouponYieldCurveAdjusted";
    LegProvisionCashSettlMethod[LegProvisionCashSettlMethod["ParYieldCurveUnadjusted"] = 4] = "ParYieldCurveUnadjusted";
    LegProvisionCashSettlMethod[LegProvisionCashSettlMethod["CrossCurrency"] = 5] = "CrossCurrency";
    LegProvisionCashSettlMethod[LegProvisionCashSettlMethod["CollateralizedPrice"] = 6] = "CollateralizedPrice";
})(LegProvisionCashSettlMethod = exports.LegProvisionCashSettlMethod || (exports.LegProvisionCashSettlMethod = {}));
var LegProvisionCashSettlQuoteType;
(function (LegProvisionCashSettlQuoteType) {
    LegProvisionCashSettlQuoteType[LegProvisionCashSettlQuoteType["Bid"] = 0] = "Bid";
    LegProvisionCashSettlQuoteType[LegProvisionCashSettlQuoteType["Mid"] = 1] = "Mid";
    LegProvisionCashSettlQuoteType[LegProvisionCashSettlQuoteType["Offer"] = 2] = "Offer";
    LegProvisionCashSettlQuoteType[LegProvisionCashSettlQuoteType["ExercisingPartyPays"] = 3] = "ExercisingPartyPays";
})(LegProvisionCashSettlQuoteType = exports.LegProvisionCashSettlQuoteType || (exports.LegProvisionCashSettlQuoteType = {}));
var LegProvisionCashSettlQuoteSource;
(function (LegProvisionCashSettlQuoteSource) {
    LegProvisionCashSettlQuoteSource[LegProvisionCashSettlQuoteSource["Bloomberg"] = 0] = "Bloomberg";
    LegProvisionCashSettlQuoteSource[LegProvisionCashSettlQuoteSource["Reuters"] = 1] = "Reuters";
    LegProvisionCashSettlQuoteSource[LegProvisionCashSettlQuoteSource["Telerate"] = 2] = "Telerate";
    LegProvisionCashSettlQuoteSource[LegProvisionCashSettlQuoteSource["Other"] = 99] = "Other";
})(LegProvisionCashSettlQuoteSource = exports.LegProvisionCashSettlQuoteSource || (exports.LegProvisionCashSettlQuoteSource = {}));
var LegProvisionCashSettlPaymentDateType;
(function (LegProvisionCashSettlPaymentDateType) {
    LegProvisionCashSettlPaymentDateType[LegProvisionCashSettlPaymentDateType["Unadjusted"] = 0] = "Unadjusted";
    LegProvisionCashSettlPaymentDateType[LegProvisionCashSettlPaymentDateType["Adjusted"] = 1] = "Adjusted";
})(LegProvisionCashSettlPaymentDateType = exports.LegProvisionCashSettlPaymentDateType || (exports.LegProvisionCashSettlPaymentDateType = {}));
var LegProvisionOptionExerciseBusinessDayConvention;
(function (LegProvisionOptionExerciseBusinessDayConvention) {
    LegProvisionOptionExerciseBusinessDayConvention[LegProvisionOptionExerciseBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegProvisionOptionExerciseBusinessDayConvention[LegProvisionOptionExerciseBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegProvisionOptionExerciseBusinessDayConvention[LegProvisionOptionExerciseBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegProvisionOptionExerciseBusinessDayConvention[LegProvisionOptionExerciseBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegProvisionOptionExerciseBusinessDayConvention[LegProvisionOptionExerciseBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegProvisionOptionExerciseBusinessDayConvention[LegProvisionOptionExerciseBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegProvisionOptionExerciseBusinessDayConvention[LegProvisionOptionExerciseBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegProvisionOptionExerciseBusinessDayConvention[LegProvisionOptionExerciseBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegProvisionOptionExerciseBusinessDayConvention = exports.LegProvisionOptionExerciseBusinessDayConvention || (exports.LegProvisionOptionExerciseBusinessDayConvention = {}));
var LegProvisionOptionExerciseEarliestDateOffsetUnit;
(function (LegProvisionOptionExerciseEarliestDateOffsetUnit) {
    LegProvisionOptionExerciseEarliestDateOffsetUnit["Day"] = "D";
    LegProvisionOptionExerciseEarliestDateOffsetUnit["Week"] = "Wk";
    LegProvisionOptionExerciseEarliestDateOffsetUnit["Month"] = "Mo";
    LegProvisionOptionExerciseEarliestDateOffsetUnit["Year"] = "Yr";
})(LegProvisionOptionExerciseEarliestDateOffsetUnit = exports.LegProvisionOptionExerciseEarliestDateOffsetUnit || (exports.LegProvisionOptionExerciseEarliestDateOffsetUnit = {}));
var LegProvisionOptionExerciseFrequencyUnit;
(function (LegProvisionOptionExerciseFrequencyUnit) {
    LegProvisionOptionExerciseFrequencyUnit["Day"] = "D";
    LegProvisionOptionExerciseFrequencyUnit["Week"] = "Wk";
    LegProvisionOptionExerciseFrequencyUnit["Month"] = "Mo";
    LegProvisionOptionExerciseFrequencyUnit["Year"] = "Yr";
    LegProvisionOptionExerciseFrequencyUnit["Hour"] = "H";
    LegProvisionOptionExerciseFrequencyUnit["Minute"] = "Min";
    LegProvisionOptionExerciseFrequencyUnit["Second"] = "S";
    LegProvisionOptionExerciseFrequencyUnit["Term"] = "T";
})(LegProvisionOptionExerciseFrequencyUnit = exports.LegProvisionOptionExerciseFrequencyUnit || (exports.LegProvisionOptionExerciseFrequencyUnit = {}));
var LegProvisionOptionExerciseStartDateOffsetUnit;
(function (LegProvisionOptionExerciseStartDateOffsetUnit) {
    LegProvisionOptionExerciseStartDateOffsetUnit["Day"] = "D";
    LegProvisionOptionExerciseStartDateOffsetUnit["Week"] = "Wk";
    LegProvisionOptionExerciseStartDateOffsetUnit["Month"] = "Mo";
    LegProvisionOptionExerciseStartDateOffsetUnit["Year"] = "Yr";
})(LegProvisionOptionExerciseStartDateOffsetUnit = exports.LegProvisionOptionExerciseStartDateOffsetUnit || (exports.LegProvisionOptionExerciseStartDateOffsetUnit = {}));
var LegProvisionOptionExerciseStartDateOffsetDayType;
(function (LegProvisionOptionExerciseStartDateOffsetDayType) {
    LegProvisionOptionExerciseStartDateOffsetDayType[LegProvisionOptionExerciseStartDateOffsetDayType["Business"] = 0] = "Business";
    LegProvisionOptionExerciseStartDateOffsetDayType[LegProvisionOptionExerciseStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegProvisionOptionExerciseStartDateOffsetDayType[LegProvisionOptionExerciseStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegProvisionOptionExerciseStartDateOffsetDayType[LegProvisionOptionExerciseStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegProvisionOptionExerciseStartDateOffsetDayType[LegProvisionOptionExerciseStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegProvisionOptionExerciseStartDateOffsetDayType[LegProvisionOptionExerciseStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegProvisionOptionExerciseStartDateOffsetDayType = exports.LegProvisionOptionExerciseStartDateOffsetDayType || (exports.LegProvisionOptionExerciseStartDateOffsetDayType = {}));
var LegProvisionOptionExerciseFixedDateType;
(function (LegProvisionOptionExerciseFixedDateType) {
    LegProvisionOptionExerciseFixedDateType[LegProvisionOptionExerciseFixedDateType["Unadjusted"] = 0] = "Unadjusted";
    LegProvisionOptionExerciseFixedDateType[LegProvisionOptionExerciseFixedDateType["Adjusted"] = 1] = "Adjusted";
})(LegProvisionOptionExerciseFixedDateType = exports.LegProvisionOptionExerciseFixedDateType || (exports.LegProvisionOptionExerciseFixedDateType = {}));
var LegProvisionOptionExpirationDateBusinessDayConvention;
(function (LegProvisionOptionExpirationDateBusinessDayConvention) {
    LegProvisionOptionExpirationDateBusinessDayConvention[LegProvisionOptionExpirationDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegProvisionOptionExpirationDateBusinessDayConvention[LegProvisionOptionExpirationDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegProvisionOptionExpirationDateBusinessDayConvention[LegProvisionOptionExpirationDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegProvisionOptionExpirationDateBusinessDayConvention[LegProvisionOptionExpirationDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegProvisionOptionExpirationDateBusinessDayConvention[LegProvisionOptionExpirationDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegProvisionOptionExpirationDateBusinessDayConvention[LegProvisionOptionExpirationDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegProvisionOptionExpirationDateBusinessDayConvention[LegProvisionOptionExpirationDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegProvisionOptionExpirationDateBusinessDayConvention[LegProvisionOptionExpirationDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegProvisionOptionExpirationDateBusinessDayConvention = exports.LegProvisionOptionExpirationDateBusinessDayConvention || (exports.LegProvisionOptionExpirationDateBusinessDayConvention = {}));
var LegProvisionOptionExpirationDateOffsetUnit;
(function (LegProvisionOptionExpirationDateOffsetUnit) {
    LegProvisionOptionExpirationDateOffsetUnit["Day"] = "D";
    LegProvisionOptionExpirationDateOffsetUnit["Week"] = "Wk";
    LegProvisionOptionExpirationDateOffsetUnit["Month"] = "Mo";
    LegProvisionOptionExpirationDateOffsetUnit["Year"] = "Yr";
})(LegProvisionOptionExpirationDateOffsetUnit = exports.LegProvisionOptionExpirationDateOffsetUnit || (exports.LegProvisionOptionExpirationDateOffsetUnit = {}));
var LegProvisionOptionExpirationDateOffsetDayType;
(function (LegProvisionOptionExpirationDateOffsetDayType) {
    LegProvisionOptionExpirationDateOffsetDayType[LegProvisionOptionExpirationDateOffsetDayType["Business"] = 0] = "Business";
    LegProvisionOptionExpirationDateOffsetDayType[LegProvisionOptionExpirationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegProvisionOptionExpirationDateOffsetDayType[LegProvisionOptionExpirationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegProvisionOptionExpirationDateOffsetDayType[LegProvisionOptionExpirationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegProvisionOptionExpirationDateOffsetDayType[LegProvisionOptionExpirationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegProvisionOptionExpirationDateOffsetDayType[LegProvisionOptionExpirationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegProvisionOptionExpirationDateOffsetDayType = exports.LegProvisionOptionExpirationDateOffsetDayType || (exports.LegProvisionOptionExpirationDateOffsetDayType = {}));
var LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention;
(function (LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention) {
    LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention[LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention[LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention[LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention[LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention[LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention[LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention[LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention[LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention = exports.LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention || (exports.LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention = {}));
var LegProvisionOptionRelevantUnderlyingDateOffsetUnit;
(function (LegProvisionOptionRelevantUnderlyingDateOffsetUnit) {
    LegProvisionOptionRelevantUnderlyingDateOffsetUnit["Day"] = "D";
    LegProvisionOptionRelevantUnderlyingDateOffsetUnit["Week"] = "Wk";
    LegProvisionOptionRelevantUnderlyingDateOffsetUnit["Month"] = "Mo";
    LegProvisionOptionRelevantUnderlyingDateOffsetUnit["Year"] = "Yr";
})(LegProvisionOptionRelevantUnderlyingDateOffsetUnit = exports.LegProvisionOptionRelevantUnderlyingDateOffsetUnit || (exports.LegProvisionOptionRelevantUnderlyingDateOffsetUnit = {}));
var LegProvisionOptionRelevantUnderlyingDateOffsetDayType;
(function (LegProvisionOptionRelevantUnderlyingDateOffsetDayType) {
    LegProvisionOptionRelevantUnderlyingDateOffsetDayType[LegProvisionOptionRelevantUnderlyingDateOffsetDayType["Business"] = 0] = "Business";
    LegProvisionOptionRelevantUnderlyingDateOffsetDayType[LegProvisionOptionRelevantUnderlyingDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegProvisionOptionRelevantUnderlyingDateOffsetDayType[LegProvisionOptionRelevantUnderlyingDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegProvisionOptionRelevantUnderlyingDateOffsetDayType[LegProvisionOptionRelevantUnderlyingDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegProvisionOptionRelevantUnderlyingDateOffsetDayType[LegProvisionOptionRelevantUnderlyingDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegProvisionOptionRelevantUnderlyingDateOffsetDayType[LegProvisionOptionRelevantUnderlyingDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegProvisionOptionRelevantUnderlyingDateOffsetDayType = exports.LegProvisionOptionRelevantUnderlyingDateOffsetDayType || (exports.LegProvisionOptionRelevantUnderlyingDateOffsetDayType = {}));
var LegProvisionCashSettlPaymentDateBusinessDayConvention;
(function (LegProvisionCashSettlPaymentDateBusinessDayConvention) {
    LegProvisionCashSettlPaymentDateBusinessDayConvention[LegProvisionCashSettlPaymentDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegProvisionCashSettlPaymentDateBusinessDayConvention[LegProvisionCashSettlPaymentDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegProvisionCashSettlPaymentDateBusinessDayConvention[LegProvisionCashSettlPaymentDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegProvisionCashSettlPaymentDateBusinessDayConvention[LegProvisionCashSettlPaymentDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegProvisionCashSettlPaymentDateBusinessDayConvention[LegProvisionCashSettlPaymentDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegProvisionCashSettlPaymentDateBusinessDayConvention[LegProvisionCashSettlPaymentDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegProvisionCashSettlPaymentDateBusinessDayConvention[LegProvisionCashSettlPaymentDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegProvisionCashSettlPaymentDateBusinessDayConvention[LegProvisionCashSettlPaymentDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegProvisionCashSettlPaymentDateBusinessDayConvention = exports.LegProvisionCashSettlPaymentDateBusinessDayConvention || (exports.LegProvisionCashSettlPaymentDateBusinessDayConvention = {}));
var LegProvisionCashSettlPaymentDateOffsetUnit;
(function (LegProvisionCashSettlPaymentDateOffsetUnit) {
    LegProvisionCashSettlPaymentDateOffsetUnit["Day"] = "D";
    LegProvisionCashSettlPaymentDateOffsetUnit["Week"] = "Wk";
    LegProvisionCashSettlPaymentDateOffsetUnit["Month"] = "Mo";
    LegProvisionCashSettlPaymentDateOffsetUnit["Year"] = "Yr";
})(LegProvisionCashSettlPaymentDateOffsetUnit = exports.LegProvisionCashSettlPaymentDateOffsetUnit || (exports.LegProvisionCashSettlPaymentDateOffsetUnit = {}));
var LegProvisionCashSettlPaymentDateOffsetDayType;
(function (LegProvisionCashSettlPaymentDateOffsetDayType) {
    LegProvisionCashSettlPaymentDateOffsetDayType[LegProvisionCashSettlPaymentDateOffsetDayType["Business"] = 0] = "Business";
    LegProvisionCashSettlPaymentDateOffsetDayType[LegProvisionCashSettlPaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegProvisionCashSettlPaymentDateOffsetDayType[LegProvisionCashSettlPaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegProvisionCashSettlPaymentDateOffsetDayType[LegProvisionCashSettlPaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegProvisionCashSettlPaymentDateOffsetDayType[LegProvisionCashSettlPaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegProvisionCashSettlPaymentDateOffsetDayType[LegProvisionCashSettlPaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegProvisionCashSettlPaymentDateOffsetDayType = exports.LegProvisionCashSettlPaymentDateOffsetDayType || (exports.LegProvisionCashSettlPaymentDateOffsetDayType = {}));
var LegProvisionCashSettlValueDateBusinessDayConvention;
(function (LegProvisionCashSettlValueDateBusinessDayConvention) {
    LegProvisionCashSettlValueDateBusinessDayConvention[LegProvisionCashSettlValueDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegProvisionCashSettlValueDateBusinessDayConvention[LegProvisionCashSettlValueDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegProvisionCashSettlValueDateBusinessDayConvention[LegProvisionCashSettlValueDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegProvisionCashSettlValueDateBusinessDayConvention[LegProvisionCashSettlValueDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegProvisionCashSettlValueDateBusinessDayConvention[LegProvisionCashSettlValueDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegProvisionCashSettlValueDateBusinessDayConvention[LegProvisionCashSettlValueDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegProvisionCashSettlValueDateBusinessDayConvention[LegProvisionCashSettlValueDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegProvisionCashSettlValueDateBusinessDayConvention[LegProvisionCashSettlValueDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegProvisionCashSettlValueDateBusinessDayConvention = exports.LegProvisionCashSettlValueDateBusinessDayConvention || (exports.LegProvisionCashSettlValueDateBusinessDayConvention = {}));
var LegProvisionCashSettlValueDateOffsetUnit;
(function (LegProvisionCashSettlValueDateOffsetUnit) {
    LegProvisionCashSettlValueDateOffsetUnit["Day"] = "D";
    LegProvisionCashSettlValueDateOffsetUnit["Week"] = "Wk";
    LegProvisionCashSettlValueDateOffsetUnit["Month"] = "Mo";
    LegProvisionCashSettlValueDateOffsetUnit["Year"] = "Yr";
})(LegProvisionCashSettlValueDateOffsetUnit = exports.LegProvisionCashSettlValueDateOffsetUnit || (exports.LegProvisionCashSettlValueDateOffsetUnit = {}));
var LegProvisionCashSettlValueDateOffsetDayType;
(function (LegProvisionCashSettlValueDateOffsetDayType) {
    LegProvisionCashSettlValueDateOffsetDayType[LegProvisionCashSettlValueDateOffsetDayType["Business"] = 0] = "Business";
    LegProvisionCashSettlValueDateOffsetDayType[LegProvisionCashSettlValueDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegProvisionCashSettlValueDateOffsetDayType[LegProvisionCashSettlValueDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegProvisionCashSettlValueDateOffsetDayType[LegProvisionCashSettlValueDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegProvisionCashSettlValueDateOffsetDayType[LegProvisionCashSettlValueDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegProvisionCashSettlValueDateOffsetDayType[LegProvisionCashSettlValueDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegProvisionCashSettlValueDateOffsetDayType = exports.LegProvisionCashSettlValueDateOffsetDayType || (exports.LegProvisionCashSettlValueDateOffsetDayType = {}));
var LegProvisionPartyIDSource;
(function (LegProvisionPartyIDSource) {
    LegProvisionPartyIDSource["KoreanInvestorId"] = "1";
    LegProvisionPartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    LegProvisionPartyIDSource["TaiwaneseTradingAcct"] = "3";
    LegProvisionPartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    LegProvisionPartyIDSource["ChineseInvestorId"] = "5";
    LegProvisionPartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    LegProvisionPartyIDSource["UsSocialSecurityNumber"] = "7";
    LegProvisionPartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    LegProvisionPartyIDSource["AustralianBusinessNumber"] = "9";
    LegProvisionPartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    LegProvisionPartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    LegProvisionPartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    LegProvisionPartyIDSource["ProprietaryCustomCode"] = "D";
    LegProvisionPartyIDSource["IsoCountryCode"] = "E";
    LegProvisionPartyIDSource["AustralianTaxFileNumber"] = "A";
    LegProvisionPartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    LegProvisionPartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    LegProvisionPartyIDSource["TaxId"] = "J";
    LegProvisionPartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    LegProvisionPartyIDSource["AustralianCompanyNumber"] = "K";
    LegProvisionPartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    LegProvisionPartyIDSource["CftcReportingFirmIdentifier"] = "M";
    LegProvisionPartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    LegProvisionPartyIDSource["InterimIdentifier"] = "O";
    LegProvisionPartyIDSource["ShortCodeIdentifier"] = "P";
    LegProvisionPartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(LegProvisionPartyIDSource = exports.LegProvisionPartyIDSource || (exports.LegProvisionPartyIDSource = {}));
var LegProvisionPartyRole;
(function (LegProvisionPartyRole) {
    LegProvisionPartyRole[LegProvisionPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    LegProvisionPartyRole[LegProvisionPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    LegProvisionPartyRole[LegProvisionPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    LegProvisionPartyRole[LegProvisionPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["InvestorId"] = 5] = "InvestorId";
    LegProvisionPartyRole[LegProvisionPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    LegProvisionPartyRole[LegProvisionPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    LegProvisionPartyRole[LegProvisionPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    LegProvisionPartyRole[LegProvisionPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    LegProvisionPartyRole[LegProvisionPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    LegProvisionPartyRole[LegProvisionPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    LegProvisionPartyRole[LegProvisionPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    LegProvisionPartyRole[LegProvisionPartyRole["ContraFirm"] = 17] = "ContraFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    LegProvisionPartyRole[LegProvisionPartyRole["Exchange"] = 22] = "Exchange";
    LegProvisionPartyRole[LegProvisionPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    LegProvisionPartyRole[LegProvisionPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    LegProvisionPartyRole[LegProvisionPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    LegProvisionPartyRole[LegProvisionPartyRole["Custodian"] = 28] = "Custodian";
    LegProvisionPartyRole[LegProvisionPartyRole["Intermediary"] = 29] = "Intermediary";
    LegProvisionPartyRole[LegProvisionPartyRole["Agent"] = 30] = "Agent";
    LegProvisionPartyRole[LegProvisionPartyRole["SubCustodian"] = 31] = "SubCustodian";
    LegProvisionPartyRole[LegProvisionPartyRole["Beneficiary"] = 32] = "Beneficiary";
    LegProvisionPartyRole[LegProvisionPartyRole["InterestedParty"] = 33] = "InterestedParty";
    LegProvisionPartyRole[LegProvisionPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    LegProvisionPartyRole[LegProvisionPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    LegProvisionPartyRole[LegProvisionPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    LegProvisionPartyRole[LegProvisionPartyRole["ContraTrader"] = 37] = "ContraTrader";
    LegProvisionPartyRole[LegProvisionPartyRole["PositionAccount"] = 38] = "PositionAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    LegProvisionPartyRole[LegProvisionPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["ContraExchange"] = 42] = "ContraExchange";
    LegProvisionPartyRole[LegProvisionPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    LegProvisionPartyRole[LegProvisionPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    LegProvisionPartyRole[LegProvisionPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["AssetManager"] = 49] = "AssetManager";
    LegProvisionPartyRole[LegProvisionPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    LegProvisionPartyRole[LegProvisionPartyRole["SenderLocation"] = 54] = "SenderLocation";
    LegProvisionPartyRole[LegProvisionPartyRole["SessionId"] = 55] = "SessionId";
    LegProvisionPartyRole[LegProvisionPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    LegProvisionPartyRole[LegProvisionPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    LegProvisionPartyRole[LegProvisionPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    LegProvisionPartyRole[LegProvisionPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    LegProvisionPartyRole[LegProvisionPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    LegProvisionPartyRole[LegProvisionPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    LegProvisionPartyRole[LegProvisionPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    LegProvisionPartyRole[LegProvisionPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    LegProvisionPartyRole[LegProvisionPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    LegProvisionPartyRole[LegProvisionPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    LegProvisionPartyRole[LegProvisionPartyRole["MarketMaker"] = 66] = "MarketMaker";
    LegProvisionPartyRole[LegProvisionPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    LegProvisionPartyRole[LegProvisionPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    LegProvisionPartyRole[LegProvisionPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    LegProvisionPartyRole[LegProvisionPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    LegProvisionPartyRole[LegProvisionPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    LegProvisionPartyRole[LegProvisionPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    LegProvisionPartyRole[LegProvisionPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    LegProvisionPartyRole[LegProvisionPartyRole["LocationId"] = 75] = "LocationId";
    LegProvisionPartyRole[LegProvisionPartyRole["DeskId"] = 76] = "DeskId";
    LegProvisionPartyRole[LegProvisionPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    LegProvisionPartyRole[LegProvisionPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    LegProvisionPartyRole[LegProvisionPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    LegProvisionPartyRole[LegProvisionPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    LegProvisionPartyRole[LegProvisionPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    LegProvisionPartyRole[LegProvisionPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    LegProvisionPartyRole[LegProvisionPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    LegProvisionPartyRole[LegProvisionPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    LegProvisionPartyRole[LegProvisionPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    LegProvisionPartyRole[LegProvisionPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    LegProvisionPartyRole[LegProvisionPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    LegProvisionPartyRole[LegProvisionPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    LegProvisionPartyRole[LegProvisionPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    LegProvisionPartyRole[LegProvisionPartyRole["AwayMarket"] = 94] = "AwayMarket";
    LegProvisionPartyRole[LegProvisionPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    LegProvisionPartyRole[LegProvisionPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    LegProvisionPartyRole[LegProvisionPartyRole["MarginAccount"] = 100] = "MarginAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["DataRepository"] = 102] = "DataRepository";
    LegProvisionPartyRole[LegProvisionPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    LegProvisionPartyRole[LegProvisionPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    LegProvisionPartyRole[LegProvisionPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    LegProvisionPartyRole[LegProvisionPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    LegProvisionPartyRole[LegProvisionPartyRole["Correspondent"] = 107] = "Correspondent";
    LegProvisionPartyRole[LegProvisionPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    LegProvisionPartyRole[LegProvisionPartyRole["Borrower"] = 110] = "Borrower";
    LegProvisionPartyRole[LegProvisionPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    LegProvisionPartyRole[LegProvisionPartyRole["Guarantor"] = 112] = "Guarantor";
    LegProvisionPartyRole[LegProvisionPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    LegProvisionPartyRole[LegProvisionPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    LegProvisionPartyRole[LegProvisionPartyRole["HedgingParty"] = 115] = "HedgingParty";
    LegProvisionPartyRole[LegProvisionPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    LegProvisionPartyRole[LegProvisionPartyRole["SalesPerson"] = 117] = "SalesPerson";
    LegProvisionPartyRole[LegProvisionPartyRole["Operator"] = 118] = "Operator";
    LegProvisionPartyRole[LegProvisionPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    LegProvisionPartyRole[LegProvisionPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    LegProvisionPartyRole[LegProvisionPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    LegProvisionPartyRole[LegProvisionPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(LegProvisionPartyRole = exports.LegProvisionPartyRole || (exports.LegProvisionPartyRole = {}));
var LegProvisionPartySubIDType;
(function (LegProvisionPartySubIDType) {
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["Firm"] = 1] = "Firm";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["Person"] = 2] = "Person";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["System"] = 3] = "System";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["Application"] = 4] = "Application";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["ContactName"] = 9] = "ContactName";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["Bic"] = 16] = "Bic";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["Department"] = 24] = "Department";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["Location"] = 31] = "Location";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["AddressCity"] = 34] = "AddressCity";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["USPerson"] = 48] = "USPerson";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["EndUser"] = 69] = "EndUser";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["Domicile"] = 72] = "Domicile";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["Payer"] = 74] = "Payer";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["Receiver"] = 75] = "Receiver";
    LegProvisionPartySubIDType[LegProvisionPartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(LegProvisionPartySubIDType = exports.LegProvisionPartySubIDType || (exports.LegProvisionPartySubIDType = {}));
var UnderlyingStreamType;
(function (UnderlyingStreamType) {
    UnderlyingStreamType[UnderlyingStreamType["PaymentCashSettlement"] = 0] = "PaymentCashSettlement";
    UnderlyingStreamType[UnderlyingStreamType["PhysicalDelivery"] = 1] = "PhysicalDelivery";
})(UnderlyingStreamType = exports.UnderlyingStreamType || (exports.UnderlyingStreamType = {}));
var UnderlyingStreamPaySide;
(function (UnderlyingStreamPaySide) {
    UnderlyingStreamPaySide[UnderlyingStreamPaySide["Buy"] = 1] = "Buy";
    UnderlyingStreamPaySide[UnderlyingStreamPaySide["Sell"] = 2] = "Sell";
})(UnderlyingStreamPaySide = exports.UnderlyingStreamPaySide || (exports.UnderlyingStreamPaySide = {}));
var UnderlyingStreamReceiveSide;
(function (UnderlyingStreamReceiveSide) {
    UnderlyingStreamReceiveSide[UnderlyingStreamReceiveSide["Buy"] = 1] = "Buy";
    UnderlyingStreamReceiveSide[UnderlyingStreamReceiveSide["Sell"] = 2] = "Sell";
})(UnderlyingStreamReceiveSide = exports.UnderlyingStreamReceiveSide || (exports.UnderlyingStreamReceiveSide = {}));
var UnderlyingStreamTerminationDateBusinessDayConvention;
(function (UnderlyingStreamTerminationDateBusinessDayConvention) {
    UnderlyingStreamTerminationDateBusinessDayConvention[UnderlyingStreamTerminationDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingStreamTerminationDateBusinessDayConvention[UnderlyingStreamTerminationDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingStreamTerminationDateBusinessDayConvention[UnderlyingStreamTerminationDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingStreamTerminationDateBusinessDayConvention[UnderlyingStreamTerminationDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingStreamTerminationDateBusinessDayConvention[UnderlyingStreamTerminationDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingStreamTerminationDateBusinessDayConvention[UnderlyingStreamTerminationDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingStreamTerminationDateBusinessDayConvention[UnderlyingStreamTerminationDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingStreamTerminationDateBusinessDayConvention[UnderlyingStreamTerminationDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingStreamTerminationDateBusinessDayConvention = exports.UnderlyingStreamTerminationDateBusinessDayConvention || (exports.UnderlyingStreamTerminationDateBusinessDayConvention = {}));
var UnderlyingStreamTerminationDateOffsetUnit;
(function (UnderlyingStreamTerminationDateOffsetUnit) {
    UnderlyingStreamTerminationDateOffsetUnit["Day"] = "D";
    UnderlyingStreamTerminationDateOffsetUnit["Week"] = "Wk";
    UnderlyingStreamTerminationDateOffsetUnit["Month"] = "Mo";
    UnderlyingStreamTerminationDateOffsetUnit["Year"] = "Yr";
})(UnderlyingStreamTerminationDateOffsetUnit = exports.UnderlyingStreamTerminationDateOffsetUnit || (exports.UnderlyingStreamTerminationDateOffsetUnit = {}));
var UnderlyingStreamTerminationDateOffsetDayType;
(function (UnderlyingStreamTerminationDateOffsetDayType) {
    UnderlyingStreamTerminationDateOffsetDayType[UnderlyingStreamTerminationDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingStreamTerminationDateOffsetDayType[UnderlyingStreamTerminationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingStreamTerminationDateOffsetDayType[UnderlyingStreamTerminationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingStreamTerminationDateOffsetDayType[UnderlyingStreamTerminationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingStreamTerminationDateOffsetDayType[UnderlyingStreamTerminationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingStreamTerminationDateOffsetDayType[UnderlyingStreamTerminationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingStreamTerminationDateOffsetDayType = exports.UnderlyingStreamTerminationDateOffsetDayType || (exports.UnderlyingStreamTerminationDateOffsetDayType = {}));
var UnderlyingStreamCalculationPeriodBusinessDayConvention;
(function (UnderlyingStreamCalculationPeriodBusinessDayConvention) {
    UnderlyingStreamCalculationPeriodBusinessDayConvention[UnderlyingStreamCalculationPeriodBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingStreamCalculationPeriodBusinessDayConvention[UnderlyingStreamCalculationPeriodBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingStreamCalculationPeriodBusinessDayConvention[UnderlyingStreamCalculationPeriodBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingStreamCalculationPeriodBusinessDayConvention[UnderlyingStreamCalculationPeriodBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingStreamCalculationPeriodBusinessDayConvention[UnderlyingStreamCalculationPeriodBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingStreamCalculationPeriodBusinessDayConvention[UnderlyingStreamCalculationPeriodBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingStreamCalculationPeriodBusinessDayConvention[UnderlyingStreamCalculationPeriodBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingStreamCalculationPeriodBusinessDayConvention[UnderlyingStreamCalculationPeriodBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingStreamCalculationPeriodBusinessDayConvention = exports.UnderlyingStreamCalculationPeriodBusinessDayConvention || (exports.UnderlyingStreamCalculationPeriodBusinessDayConvention = {}));
var UnderlyingStreamFirstPeriodStartDateBusinessDayConvention;
(function (UnderlyingStreamFirstPeriodStartDateBusinessDayConvention) {
    UnderlyingStreamFirstPeriodStartDateBusinessDayConvention[UnderlyingStreamFirstPeriodStartDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingStreamFirstPeriodStartDateBusinessDayConvention[UnderlyingStreamFirstPeriodStartDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingStreamFirstPeriodStartDateBusinessDayConvention[UnderlyingStreamFirstPeriodStartDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingStreamFirstPeriodStartDateBusinessDayConvention[UnderlyingStreamFirstPeriodStartDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingStreamFirstPeriodStartDateBusinessDayConvention[UnderlyingStreamFirstPeriodStartDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingStreamFirstPeriodStartDateBusinessDayConvention[UnderlyingStreamFirstPeriodStartDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingStreamFirstPeriodStartDateBusinessDayConvention[UnderlyingStreamFirstPeriodStartDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingStreamFirstPeriodStartDateBusinessDayConvention[UnderlyingStreamFirstPeriodStartDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingStreamFirstPeriodStartDateBusinessDayConvention = exports.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention || (exports.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention = {}));
var UnderlyingStreamCalculationFrequencyUnit;
(function (UnderlyingStreamCalculationFrequencyUnit) {
    UnderlyingStreamCalculationFrequencyUnit["Day"] = "D";
    UnderlyingStreamCalculationFrequencyUnit["Week"] = "Wk";
    UnderlyingStreamCalculationFrequencyUnit["Month"] = "Mo";
    UnderlyingStreamCalculationFrequencyUnit["Year"] = "Yr";
    UnderlyingStreamCalculationFrequencyUnit["Hour"] = "H";
    UnderlyingStreamCalculationFrequencyUnit["Minute"] = "Min";
    UnderlyingStreamCalculationFrequencyUnit["Second"] = "S";
    UnderlyingStreamCalculationFrequencyUnit["Term"] = "T";
})(UnderlyingStreamCalculationFrequencyUnit = exports.UnderlyingStreamCalculationFrequencyUnit || (exports.UnderlyingStreamCalculationFrequencyUnit = {}));
var UnderlyingStreamCalculationRollConvention;
(function (UnderlyingStreamCalculationRollConvention) {
    UnderlyingStreamCalculationRollConvention["E1stDayOfTheMonth"] = "1";
    UnderlyingStreamCalculationRollConvention["E2ndDayOfTheMonth"] = "2";
    UnderlyingStreamCalculationRollConvention["E3rdDayOfTheMonth"] = "3";
    UnderlyingStreamCalculationRollConvention["E4thDayOfTheMonth"] = "4";
    UnderlyingStreamCalculationRollConvention["E5thDayOfTheMonth"] = "5";
    UnderlyingStreamCalculationRollConvention["E6ThdDayOfTheMonth"] = "6";
    UnderlyingStreamCalculationRollConvention["E7thDayOfTheMonth"] = "7";
    UnderlyingStreamCalculationRollConvention["E8thDayOfTheMonth"] = "8";
    UnderlyingStreamCalculationRollConvention["E9thDayOfTheMonth"] = "9";
    UnderlyingStreamCalculationRollConvention["E10thDayOfTheMonth"] = "10";
    UnderlyingStreamCalculationRollConvention["E11ThDayOfTheMonth"] = "11";
    UnderlyingStreamCalculationRollConvention["E12ThDayOfTheMonth"] = "12";
    UnderlyingStreamCalculationRollConvention["E13ThDayOfTheMonth"] = "13";
    UnderlyingStreamCalculationRollConvention["E14thDayOfTheMonth"] = "14";
    UnderlyingStreamCalculationRollConvention["E15thDayOfTheMonth"] = "15";
    UnderlyingStreamCalculationRollConvention["E16thDayOfTheMonth"] = "16";
    UnderlyingStreamCalculationRollConvention["E17thDayOfTheMonth"] = "17";
    UnderlyingStreamCalculationRollConvention["E18thDayOfTheMonth"] = "18";
    UnderlyingStreamCalculationRollConvention["E19thDayOfTheMonth"] = "19";
    UnderlyingStreamCalculationRollConvention["E20thDayOfTheMonth"] = "20";
    UnderlyingStreamCalculationRollConvention["E21stDayOfTheMonth"] = "21";
    UnderlyingStreamCalculationRollConvention["E22ndDayOfTheMonth"] = "22";
    UnderlyingStreamCalculationRollConvention["E23rdDayOfTheMonth"] = "23";
    UnderlyingStreamCalculationRollConvention["E24thDayOfTheMonth"] = "24";
    UnderlyingStreamCalculationRollConvention["E25thDayOfTheMonth"] = "25";
    UnderlyingStreamCalculationRollConvention["E26thDayOfTheMonth"] = "26";
    UnderlyingStreamCalculationRollConvention["E27thDayOfTheMonth"] = "27";
    UnderlyingStreamCalculationRollConvention["E28thDayOfTheMonth"] = "28";
    UnderlyingStreamCalculationRollConvention["E29thDayOfTheMonth"] = "29";
    UnderlyingStreamCalculationRollConvention["E30thDayOfTheMonth"] = "30";
    UnderlyingStreamCalculationRollConvention["TheEndOfTheMonth"] = "EOM";
    UnderlyingStreamCalculationRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    UnderlyingStreamCalculationRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    UnderlyingStreamCalculationRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    UnderlyingStreamCalculationRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    UnderlyingStreamCalculationRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    UnderlyingStreamCalculationRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    UnderlyingStreamCalculationRollConvention["NoAdjustment"] = "NONE";
    UnderlyingStreamCalculationRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    UnderlyingStreamCalculationRollConvention["Monday"] = "MON";
    UnderlyingStreamCalculationRollConvention["Tuesday"] = "TUE";
    UnderlyingStreamCalculationRollConvention["Wednesday"] = "WED";
    UnderlyingStreamCalculationRollConvention["Thursday"] = "THU";
    UnderlyingStreamCalculationRollConvention["Friday"] = "FRI";
    UnderlyingStreamCalculationRollConvention["Saturday"] = "SAT";
    UnderlyingStreamCalculationRollConvention["Sunday"] = "SUN";
})(UnderlyingStreamCalculationRollConvention = exports.UnderlyingStreamCalculationRollConvention || (exports.UnderlyingStreamCalculationRollConvention = {}));
var UnderlyingPaymentStreamType;
(function (UnderlyingPaymentStreamType) {
    UnderlyingPaymentStreamType[UnderlyingPaymentStreamType["PeriodicDefault"] = 0] = "PeriodicDefault";
    UnderlyingPaymentStreamType[UnderlyingPaymentStreamType["Initial"] = 1] = "Initial";
    UnderlyingPaymentStreamType[UnderlyingPaymentStreamType["Single"] = 2] = "Single";
    UnderlyingPaymentStreamType[UnderlyingPaymentStreamType["Dividend"] = 3] = "Dividend";
    UnderlyingPaymentStreamType[UnderlyingPaymentStreamType["Interest"] = 4] = "Interest";
    UnderlyingPaymentStreamType[UnderlyingPaymentStreamType["DividendReturn"] = 5] = "DividendReturn";
    UnderlyingPaymentStreamType[UnderlyingPaymentStreamType["PriceReturn"] = 6] = "PriceReturn";
    UnderlyingPaymentStreamType[UnderlyingPaymentStreamType["TotalReturn"] = 7] = "TotalReturn";
    UnderlyingPaymentStreamType[UnderlyingPaymentStreamType["Variance"] = 8] = "Variance";
    UnderlyingPaymentStreamType[UnderlyingPaymentStreamType["Correlation"] = 9] = "Correlation";
})(UnderlyingPaymentStreamType = exports.UnderlyingPaymentStreamType || (exports.UnderlyingPaymentStreamType = {}));
var UnderlyingPaymentStreamDayCount;
(function (UnderlyingPaymentStreamDayCount) {
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["E11"] = 0] = "E11";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["E3036030U360OrBondBasis"] = 1] = "E3036030U360OrBondBasis";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["E30360Sia"] = 2] = "E30360Sia";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["E30360M"] = 3] = "E30360M";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["E30E360EurobondBasis"] = 4] = "E30E360EurobondBasis";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["E30E360Isda"] = 5] = "E30E360Isda";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["Act360"] = 6] = "Act360";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["Act365Fixed"] = 7] = "Act365Fixed";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["ActActAfb"] = 8] = "ActActAfb";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["ActActIcma"] = 9] = "ActActIcma";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["ActActIcsmaUltimo"] = 10] = "ActActIcsmaUltimo";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["ActActIsda"] = 11] = "ActActIsda";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["Bus252"] = 12] = "Bus252";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["E30E360"] = 13] = "E30E360";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["Act365L"] = 14] = "Act365L";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["Nl365"] = 15] = "Nl365";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["Nl360"] = 16] = "Nl360";
    UnderlyingPaymentStreamDayCount[UnderlyingPaymentStreamDayCount["Act364"] = 17] = "Act364";
})(UnderlyingPaymentStreamDayCount = exports.UnderlyingPaymentStreamDayCount || (exports.UnderlyingPaymentStreamDayCount = {}));
var UnderlyingPaymentStreamDiscountType;
(function (UnderlyingPaymentStreamDiscountType) {
    UnderlyingPaymentStreamDiscountType[UnderlyingPaymentStreamDiscountType["Standard"] = 0] = "Standard";
    UnderlyingPaymentStreamDiscountType[UnderlyingPaymentStreamDiscountType["ForwardRateAgreementFra"] = 1] = "ForwardRateAgreementFra";
})(UnderlyingPaymentStreamDiscountType = exports.UnderlyingPaymentStreamDiscountType || (exports.UnderlyingPaymentStreamDiscountType = {}));
var UnderlyingPaymentStreamDiscountRateDayCount;
(function (UnderlyingPaymentStreamDiscountRateDayCount) {
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["E11"] = 0] = "E11";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["E3036030U360OrBondBasis"] = 1] = "E3036030U360OrBondBasis";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["E30360Sia"] = 2] = "E30360Sia";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["E30360M"] = 3] = "E30360M";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["E30E360EurobondBasis"] = 4] = "E30E360EurobondBasis";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["E30E360Isda"] = 5] = "E30E360Isda";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["Act360"] = 6] = "Act360";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["Act365Fixed"] = 7] = "Act365Fixed";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["ActActAfb"] = 8] = "ActActAfb";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["ActActIcma"] = 9] = "ActActIcma";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["ActActIcsmaUltimo"] = 10] = "ActActIcsmaUltimo";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["ActActIsda"] = 11] = "ActActIsda";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["Bus252"] = 12] = "Bus252";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["E30E360"] = 13] = "E30E360";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["Act365L"] = 14] = "Act365L";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["Nl365"] = 15] = "Nl365";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["Nl360"] = 16] = "Nl360";
    UnderlyingPaymentStreamDiscountRateDayCount[UnderlyingPaymentStreamDiscountRateDayCount["Act364"] = 17] = "Act364";
})(UnderlyingPaymentStreamDiscountRateDayCount = exports.UnderlyingPaymentStreamDiscountRateDayCount || (exports.UnderlyingPaymentStreamDiscountRateDayCount = {}));
var UnderlyingPaymentStreamCompoundingMethod;
(function (UnderlyingPaymentStreamCompoundingMethod) {
    UnderlyingPaymentStreamCompoundingMethod[UnderlyingPaymentStreamCompoundingMethod["None"] = 0] = "None";
    UnderlyingPaymentStreamCompoundingMethod[UnderlyingPaymentStreamCompoundingMethod["Flat"] = 1] = "Flat";
    UnderlyingPaymentStreamCompoundingMethod[UnderlyingPaymentStreamCompoundingMethod["Straight"] = 2] = "Straight";
    UnderlyingPaymentStreamCompoundingMethod[UnderlyingPaymentStreamCompoundingMethod["SpreadExclusive"] = 3] = "SpreadExclusive";
})(UnderlyingPaymentStreamCompoundingMethod = exports.UnderlyingPaymentStreamCompoundingMethod || (exports.UnderlyingPaymentStreamCompoundingMethod = {}));
var UnderlyingPaymentStreamPaymentDateBusinessDayConvention;
(function (UnderlyingPaymentStreamPaymentDateBusinessDayConvention) {
    UnderlyingPaymentStreamPaymentDateBusinessDayConvention[UnderlyingPaymentStreamPaymentDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingPaymentStreamPaymentDateBusinessDayConvention[UnderlyingPaymentStreamPaymentDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingPaymentStreamPaymentDateBusinessDayConvention[UnderlyingPaymentStreamPaymentDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingPaymentStreamPaymentDateBusinessDayConvention[UnderlyingPaymentStreamPaymentDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingPaymentStreamPaymentDateBusinessDayConvention[UnderlyingPaymentStreamPaymentDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingPaymentStreamPaymentDateBusinessDayConvention[UnderlyingPaymentStreamPaymentDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingPaymentStreamPaymentDateBusinessDayConvention[UnderlyingPaymentStreamPaymentDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingPaymentStreamPaymentDateBusinessDayConvention[UnderlyingPaymentStreamPaymentDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingPaymentStreamPaymentDateBusinessDayConvention = exports.UnderlyingPaymentStreamPaymentDateBusinessDayConvention || (exports.UnderlyingPaymentStreamPaymentDateBusinessDayConvention = {}));
var UnderlyingPaymentStreamPaymentFrequencyUnit;
(function (UnderlyingPaymentStreamPaymentFrequencyUnit) {
    UnderlyingPaymentStreamPaymentFrequencyUnit["Day"] = "D";
    UnderlyingPaymentStreamPaymentFrequencyUnit["Week"] = "Wk";
    UnderlyingPaymentStreamPaymentFrequencyUnit["Month"] = "Mo";
    UnderlyingPaymentStreamPaymentFrequencyUnit["Year"] = "Yr";
    UnderlyingPaymentStreamPaymentFrequencyUnit["Term"] = "T";
})(UnderlyingPaymentStreamPaymentFrequencyUnit = exports.UnderlyingPaymentStreamPaymentFrequencyUnit || (exports.UnderlyingPaymentStreamPaymentFrequencyUnit = {}));
var UnderlyingPaymentStreamPaymentRollConvention;
(function (UnderlyingPaymentStreamPaymentRollConvention) {
    UnderlyingPaymentStreamPaymentRollConvention["E1stDayOfTheMonth"] = "1";
    UnderlyingPaymentStreamPaymentRollConvention["E2ndDayOfTheMonth"] = "2";
    UnderlyingPaymentStreamPaymentRollConvention["E3rdDayOfTheMonth"] = "3";
    UnderlyingPaymentStreamPaymentRollConvention["E4thDayOfTheMonth"] = "4";
    UnderlyingPaymentStreamPaymentRollConvention["E5thDayOfTheMonth"] = "5";
    UnderlyingPaymentStreamPaymentRollConvention["E6ThdDayOfTheMonth"] = "6";
    UnderlyingPaymentStreamPaymentRollConvention["E7thDayOfTheMonth"] = "7";
    UnderlyingPaymentStreamPaymentRollConvention["E8thDayOfTheMonth"] = "8";
    UnderlyingPaymentStreamPaymentRollConvention["E9thDayOfTheMonth"] = "9";
    UnderlyingPaymentStreamPaymentRollConvention["E10thDayOfTheMonth"] = "10";
    UnderlyingPaymentStreamPaymentRollConvention["E11ThDayOfTheMonth"] = "11";
    UnderlyingPaymentStreamPaymentRollConvention["E12ThDayOfTheMonth"] = "12";
    UnderlyingPaymentStreamPaymentRollConvention["E13ThDayOfTheMonth"] = "13";
    UnderlyingPaymentStreamPaymentRollConvention["E14thDayOfTheMonth"] = "14";
    UnderlyingPaymentStreamPaymentRollConvention["E15thDayOfTheMonth"] = "15";
    UnderlyingPaymentStreamPaymentRollConvention["E16thDayOfTheMonth"] = "16";
    UnderlyingPaymentStreamPaymentRollConvention["E17thDayOfTheMonth"] = "17";
    UnderlyingPaymentStreamPaymentRollConvention["E18thDayOfTheMonth"] = "18";
    UnderlyingPaymentStreamPaymentRollConvention["E19thDayOfTheMonth"] = "19";
    UnderlyingPaymentStreamPaymentRollConvention["E20thDayOfTheMonth"] = "20";
    UnderlyingPaymentStreamPaymentRollConvention["E21stDayOfTheMonth"] = "21";
    UnderlyingPaymentStreamPaymentRollConvention["E22ndDayOfTheMonth"] = "22";
    UnderlyingPaymentStreamPaymentRollConvention["E23rdDayOfTheMonth"] = "23";
    UnderlyingPaymentStreamPaymentRollConvention["E24thDayOfTheMonth"] = "24";
    UnderlyingPaymentStreamPaymentRollConvention["E25thDayOfTheMonth"] = "25";
    UnderlyingPaymentStreamPaymentRollConvention["E26thDayOfTheMonth"] = "26";
    UnderlyingPaymentStreamPaymentRollConvention["E27thDayOfTheMonth"] = "27";
    UnderlyingPaymentStreamPaymentRollConvention["E28thDayOfTheMonth"] = "28";
    UnderlyingPaymentStreamPaymentRollConvention["E29thDayOfTheMonth"] = "29";
    UnderlyingPaymentStreamPaymentRollConvention["E30thDayOfTheMonth"] = "30";
    UnderlyingPaymentStreamPaymentRollConvention["TheEndOfTheMonth"] = "EOM";
    UnderlyingPaymentStreamPaymentRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    UnderlyingPaymentStreamPaymentRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    UnderlyingPaymentStreamPaymentRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    UnderlyingPaymentStreamPaymentRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    UnderlyingPaymentStreamPaymentRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    UnderlyingPaymentStreamPaymentRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    UnderlyingPaymentStreamPaymentRollConvention["NoAdjustment"] = "NONE";
    UnderlyingPaymentStreamPaymentRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    UnderlyingPaymentStreamPaymentRollConvention["Monday"] = "MON";
    UnderlyingPaymentStreamPaymentRollConvention["Tuesday"] = "TUE";
    UnderlyingPaymentStreamPaymentRollConvention["Wednesday"] = "WED";
    UnderlyingPaymentStreamPaymentRollConvention["Thursday"] = "THU";
    UnderlyingPaymentStreamPaymentRollConvention["Friday"] = "FRI";
    UnderlyingPaymentStreamPaymentRollConvention["Saturday"] = "SAT";
    UnderlyingPaymentStreamPaymentRollConvention["Sunday"] = "SUN";
})(UnderlyingPaymentStreamPaymentRollConvention = exports.UnderlyingPaymentStreamPaymentRollConvention || (exports.UnderlyingPaymentStreamPaymentRollConvention = {}));
var UnderlyingPaymentStreamPaymentDateOffsetUnit;
(function (UnderlyingPaymentStreamPaymentDateOffsetUnit) {
    UnderlyingPaymentStreamPaymentDateOffsetUnit["Day"] = "D";
    UnderlyingPaymentStreamPaymentDateOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentStreamPaymentDateOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentStreamPaymentDateOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamPaymentDateOffsetUnit = exports.UnderlyingPaymentStreamPaymentDateOffsetUnit || (exports.UnderlyingPaymentStreamPaymentDateOffsetUnit = {}));
var UnderlyingPaymentStreamPaymentDateOffsetDayType;
(function (UnderlyingPaymentStreamPaymentDateOffsetDayType) {
    UnderlyingPaymentStreamPaymentDateOffsetDayType[UnderlyingPaymentStreamPaymentDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStreamPaymentDateOffsetDayType[UnderlyingPaymentStreamPaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStreamPaymentDateOffsetDayType[UnderlyingPaymentStreamPaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStreamPaymentDateOffsetDayType[UnderlyingPaymentStreamPaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStreamPaymentDateOffsetDayType[UnderlyingPaymentStreamPaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStreamPaymentDateOffsetDayType[UnderlyingPaymentStreamPaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStreamPaymentDateOffsetDayType = exports.UnderlyingPaymentStreamPaymentDateOffsetDayType || (exports.UnderlyingPaymentStreamPaymentDateOffsetDayType = {}));
var UnderlyingPaymentStreamResetDateBusinessDayConvention;
(function (UnderlyingPaymentStreamResetDateBusinessDayConvention) {
    UnderlyingPaymentStreamResetDateBusinessDayConvention[UnderlyingPaymentStreamResetDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingPaymentStreamResetDateBusinessDayConvention[UnderlyingPaymentStreamResetDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingPaymentStreamResetDateBusinessDayConvention[UnderlyingPaymentStreamResetDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingPaymentStreamResetDateBusinessDayConvention[UnderlyingPaymentStreamResetDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingPaymentStreamResetDateBusinessDayConvention[UnderlyingPaymentStreamResetDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingPaymentStreamResetDateBusinessDayConvention[UnderlyingPaymentStreamResetDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingPaymentStreamResetDateBusinessDayConvention[UnderlyingPaymentStreamResetDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingPaymentStreamResetDateBusinessDayConvention[UnderlyingPaymentStreamResetDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingPaymentStreamResetDateBusinessDayConvention = exports.UnderlyingPaymentStreamResetDateBusinessDayConvention || (exports.UnderlyingPaymentStreamResetDateBusinessDayConvention = {}));
var UnderlyingPaymentStreamResetFrequencyUnit;
(function (UnderlyingPaymentStreamResetFrequencyUnit) {
    UnderlyingPaymentStreamResetFrequencyUnit["Day"] = "D";
    UnderlyingPaymentStreamResetFrequencyUnit["Week"] = "Wk";
    UnderlyingPaymentStreamResetFrequencyUnit["Month"] = "Mo";
    UnderlyingPaymentStreamResetFrequencyUnit["Year"] = "Yr";
    UnderlyingPaymentStreamResetFrequencyUnit["Hour"] = "H";
    UnderlyingPaymentStreamResetFrequencyUnit["Minute"] = "Min";
    UnderlyingPaymentStreamResetFrequencyUnit["Second"] = "S";
    UnderlyingPaymentStreamResetFrequencyUnit["Term"] = "T";
})(UnderlyingPaymentStreamResetFrequencyUnit = exports.UnderlyingPaymentStreamResetFrequencyUnit || (exports.UnderlyingPaymentStreamResetFrequencyUnit = {}));
var UnderlyingPaymentStreamResetWeeklyRollConvention;
(function (UnderlyingPaymentStreamResetWeeklyRollConvention) {
    UnderlyingPaymentStreamResetWeeklyRollConvention["Monday"] = "MON";
    UnderlyingPaymentStreamResetWeeklyRollConvention["Tuesday"] = "TUE";
    UnderlyingPaymentStreamResetWeeklyRollConvention["Wednesday"] = "WED";
    UnderlyingPaymentStreamResetWeeklyRollConvention["Thursday"] = "THU";
    UnderlyingPaymentStreamResetWeeklyRollConvention["Friday"] = "FRI";
    UnderlyingPaymentStreamResetWeeklyRollConvention["Saturday"] = "SAT";
    UnderlyingPaymentStreamResetWeeklyRollConvention["Sunday"] = "SUN";
})(UnderlyingPaymentStreamResetWeeklyRollConvention = exports.UnderlyingPaymentStreamResetWeeklyRollConvention || (exports.UnderlyingPaymentStreamResetWeeklyRollConvention = {}));
var UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention;
(function (UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention) {
    UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention[UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention[UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention[UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention[UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention[UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention[UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention[UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention[UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention = exports.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention || (exports.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention = {}));
var UnderlyingPaymentStreamInitialFixingDateOffsetUnit;
(function (UnderlyingPaymentStreamInitialFixingDateOffsetUnit) {
    UnderlyingPaymentStreamInitialFixingDateOffsetUnit["Day"] = "D";
    UnderlyingPaymentStreamInitialFixingDateOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentStreamInitialFixingDateOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentStreamInitialFixingDateOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamInitialFixingDateOffsetUnit = exports.UnderlyingPaymentStreamInitialFixingDateOffsetUnit || (exports.UnderlyingPaymentStreamInitialFixingDateOffsetUnit = {}));
var UnderlyingPaymentStreamInitialFixingDateOffsetDayType;
(function (UnderlyingPaymentStreamInitialFixingDateOffsetDayType) {
    UnderlyingPaymentStreamInitialFixingDateOffsetDayType[UnderlyingPaymentStreamInitialFixingDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStreamInitialFixingDateOffsetDayType[UnderlyingPaymentStreamInitialFixingDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStreamInitialFixingDateOffsetDayType[UnderlyingPaymentStreamInitialFixingDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStreamInitialFixingDateOffsetDayType[UnderlyingPaymentStreamInitialFixingDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStreamInitialFixingDateOffsetDayType[UnderlyingPaymentStreamInitialFixingDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStreamInitialFixingDateOffsetDayType[UnderlyingPaymentStreamInitialFixingDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStreamInitialFixingDateOffsetDayType = exports.UnderlyingPaymentStreamInitialFixingDateOffsetDayType || (exports.UnderlyingPaymentStreamInitialFixingDateOffsetDayType = {}));
var UnderlyingPaymentStreamFixingDateBusinessDayConvention;
(function (UnderlyingPaymentStreamFixingDateBusinessDayConvention) {
    UnderlyingPaymentStreamFixingDateBusinessDayConvention[UnderlyingPaymentStreamFixingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingPaymentStreamFixingDateBusinessDayConvention[UnderlyingPaymentStreamFixingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingPaymentStreamFixingDateBusinessDayConvention[UnderlyingPaymentStreamFixingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingPaymentStreamFixingDateBusinessDayConvention[UnderlyingPaymentStreamFixingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingPaymentStreamFixingDateBusinessDayConvention[UnderlyingPaymentStreamFixingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingPaymentStreamFixingDateBusinessDayConvention[UnderlyingPaymentStreamFixingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingPaymentStreamFixingDateBusinessDayConvention[UnderlyingPaymentStreamFixingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingPaymentStreamFixingDateBusinessDayConvention[UnderlyingPaymentStreamFixingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingPaymentStreamFixingDateBusinessDayConvention = exports.UnderlyingPaymentStreamFixingDateBusinessDayConvention || (exports.UnderlyingPaymentStreamFixingDateBusinessDayConvention = {}));
var UnderlyingPaymentStreamFixingDateOffsetUnit;
(function (UnderlyingPaymentStreamFixingDateOffsetUnit) {
    UnderlyingPaymentStreamFixingDateOffsetUnit["Day"] = "D";
    UnderlyingPaymentStreamFixingDateOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentStreamFixingDateOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentStreamFixingDateOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamFixingDateOffsetUnit = exports.UnderlyingPaymentStreamFixingDateOffsetUnit || (exports.UnderlyingPaymentStreamFixingDateOffsetUnit = {}));
var UnderlyingPaymentStreamFixingDateOffsetDayType;
(function (UnderlyingPaymentStreamFixingDateOffsetDayType) {
    UnderlyingPaymentStreamFixingDateOffsetDayType[UnderlyingPaymentStreamFixingDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStreamFixingDateOffsetDayType[UnderlyingPaymentStreamFixingDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStreamFixingDateOffsetDayType[UnderlyingPaymentStreamFixingDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStreamFixingDateOffsetDayType[UnderlyingPaymentStreamFixingDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStreamFixingDateOffsetDayType[UnderlyingPaymentStreamFixingDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStreamFixingDateOffsetDayType[UnderlyingPaymentStreamFixingDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStreamFixingDateOffsetDayType = exports.UnderlyingPaymentStreamFixingDateOffsetDayType || (exports.UnderlyingPaymentStreamFixingDateOffsetDayType = {}));
var UnderlyingPaymentStreamRateCutoffDateOffsetUnit;
(function (UnderlyingPaymentStreamRateCutoffDateOffsetUnit) {
    UnderlyingPaymentStreamRateCutoffDateOffsetUnit["Day"] = "D";
    UnderlyingPaymentStreamRateCutoffDateOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentStreamRateCutoffDateOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentStreamRateCutoffDateOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamRateCutoffDateOffsetUnit = exports.UnderlyingPaymentStreamRateCutoffDateOffsetUnit || (exports.UnderlyingPaymentStreamRateCutoffDateOffsetUnit = {}));
var UnderlyingPaymentStreamRateCutoffDateOffsetDayType;
(function (UnderlyingPaymentStreamRateCutoffDateOffsetDayType) {
    UnderlyingPaymentStreamRateCutoffDateOffsetDayType[UnderlyingPaymentStreamRateCutoffDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStreamRateCutoffDateOffsetDayType[UnderlyingPaymentStreamRateCutoffDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStreamRateCutoffDateOffsetDayType[UnderlyingPaymentStreamRateCutoffDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStreamRateCutoffDateOffsetDayType[UnderlyingPaymentStreamRateCutoffDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStreamRateCutoffDateOffsetDayType[UnderlyingPaymentStreamRateCutoffDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStreamRateCutoffDateOffsetDayType[UnderlyingPaymentStreamRateCutoffDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStreamRateCutoffDateOffsetDayType = exports.UnderlyingPaymentStreamRateCutoffDateOffsetDayType || (exports.UnderlyingPaymentStreamRateCutoffDateOffsetDayType = {}));
var UnderlyingPaymentStreamRateIndexSource;
(function (UnderlyingPaymentStreamRateIndexSource) {
    UnderlyingPaymentStreamRateIndexSource[UnderlyingPaymentStreamRateIndexSource["Bloomberg"] = 0] = "Bloomberg";
    UnderlyingPaymentStreamRateIndexSource[UnderlyingPaymentStreamRateIndexSource["Reuters"] = 1] = "Reuters";
    UnderlyingPaymentStreamRateIndexSource[UnderlyingPaymentStreamRateIndexSource["Telerate"] = 2] = "Telerate";
    UnderlyingPaymentStreamRateIndexSource[UnderlyingPaymentStreamRateIndexSource["Other"] = 99] = "Other";
})(UnderlyingPaymentStreamRateIndexSource = exports.UnderlyingPaymentStreamRateIndexSource || (exports.UnderlyingPaymentStreamRateIndexSource = {}));
var UnderlyingPaymentStreamRateIndexCurveUnit;
(function (UnderlyingPaymentStreamRateIndexCurveUnit) {
    UnderlyingPaymentStreamRateIndexCurveUnit["Day"] = "D";
    UnderlyingPaymentStreamRateIndexCurveUnit["Week"] = "Wk";
    UnderlyingPaymentStreamRateIndexCurveUnit["Month"] = "Mo";
    UnderlyingPaymentStreamRateIndexCurveUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamRateIndexCurveUnit = exports.UnderlyingPaymentStreamRateIndexCurveUnit || (exports.UnderlyingPaymentStreamRateIndexCurveUnit = {}));
var UnderlyingPaymentStreamRateSpreadPositionType;
(function (UnderlyingPaymentStreamRateSpreadPositionType) {
    UnderlyingPaymentStreamRateSpreadPositionType[UnderlyingPaymentStreamRateSpreadPositionType["Short"] = 0] = "Short";
    UnderlyingPaymentStreamRateSpreadPositionType[UnderlyingPaymentStreamRateSpreadPositionType["Long"] = 1] = "Long";
})(UnderlyingPaymentStreamRateSpreadPositionType = exports.UnderlyingPaymentStreamRateSpreadPositionType || (exports.UnderlyingPaymentStreamRateSpreadPositionType = {}));
var UnderlyingPaymentStreamRateTreatment;
(function (UnderlyingPaymentStreamRateTreatment) {
    UnderlyingPaymentStreamRateTreatment[UnderlyingPaymentStreamRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    UnderlyingPaymentStreamRateTreatment[UnderlyingPaymentStreamRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(UnderlyingPaymentStreamRateTreatment = exports.UnderlyingPaymentStreamRateTreatment || (exports.UnderlyingPaymentStreamRateTreatment = {}));
var UnderlyingPaymentStreamCapRateBuySide;
(function (UnderlyingPaymentStreamCapRateBuySide) {
    UnderlyingPaymentStreamCapRateBuySide[UnderlyingPaymentStreamCapRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingPaymentStreamCapRateBuySide[UnderlyingPaymentStreamCapRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingPaymentStreamCapRateBuySide = exports.UnderlyingPaymentStreamCapRateBuySide || (exports.UnderlyingPaymentStreamCapRateBuySide = {}));
var UnderlyingPaymentStreamCapRateSellSide;
(function (UnderlyingPaymentStreamCapRateSellSide) {
    UnderlyingPaymentStreamCapRateSellSide[UnderlyingPaymentStreamCapRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingPaymentStreamCapRateSellSide[UnderlyingPaymentStreamCapRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingPaymentStreamCapRateSellSide = exports.UnderlyingPaymentStreamCapRateSellSide || (exports.UnderlyingPaymentStreamCapRateSellSide = {}));
var UnderlyingPaymentStreamFloorRateBuySide;
(function (UnderlyingPaymentStreamFloorRateBuySide) {
    UnderlyingPaymentStreamFloorRateBuySide[UnderlyingPaymentStreamFloorRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingPaymentStreamFloorRateBuySide[UnderlyingPaymentStreamFloorRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingPaymentStreamFloorRateBuySide = exports.UnderlyingPaymentStreamFloorRateBuySide || (exports.UnderlyingPaymentStreamFloorRateBuySide = {}));
var UnderlyingPaymentStreamFloorRateSellSide;
(function (UnderlyingPaymentStreamFloorRateSellSide) {
    UnderlyingPaymentStreamFloorRateSellSide[UnderlyingPaymentStreamFloorRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingPaymentStreamFloorRateSellSide[UnderlyingPaymentStreamFloorRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingPaymentStreamFloorRateSellSide = exports.UnderlyingPaymentStreamFloorRateSellSide || (exports.UnderlyingPaymentStreamFloorRateSellSide = {}));
var UnderlyingPaymentStreamFinalRateRoundingDirection;
(function (UnderlyingPaymentStreamFinalRateRoundingDirection) {
    UnderlyingPaymentStreamFinalRateRoundingDirection["RoundToNearest"] = "0";
    UnderlyingPaymentStreamFinalRateRoundingDirection["RoundDown"] = "1";
    UnderlyingPaymentStreamFinalRateRoundingDirection["RoundUp"] = "2";
})(UnderlyingPaymentStreamFinalRateRoundingDirection = exports.UnderlyingPaymentStreamFinalRateRoundingDirection || (exports.UnderlyingPaymentStreamFinalRateRoundingDirection = {}));
var UnderlyingPaymentStreamAveragingMethod;
(function (UnderlyingPaymentStreamAveragingMethod) {
    UnderlyingPaymentStreamAveragingMethod[UnderlyingPaymentStreamAveragingMethod["Unweighted"] = 0] = "Unweighted";
    UnderlyingPaymentStreamAveragingMethod[UnderlyingPaymentStreamAveragingMethod["Weighted"] = 1] = "Weighted";
})(UnderlyingPaymentStreamAveragingMethod = exports.UnderlyingPaymentStreamAveragingMethod || (exports.UnderlyingPaymentStreamAveragingMethod = {}));
var UnderlyingPaymentStreamNegativeRateTreatment;
(function (UnderlyingPaymentStreamNegativeRateTreatment) {
    UnderlyingPaymentStreamNegativeRateTreatment[UnderlyingPaymentStreamNegativeRateTreatment["ZeroInterestRateMethod"] = 0] = "ZeroInterestRateMethod";
    UnderlyingPaymentStreamNegativeRateTreatment[UnderlyingPaymentStreamNegativeRateTreatment["NegativeInterestRateMethod"] = 1] = "NegativeInterestRateMethod";
})(UnderlyingPaymentStreamNegativeRateTreatment = exports.UnderlyingPaymentStreamNegativeRateTreatment || (exports.UnderlyingPaymentStreamNegativeRateTreatment = {}));
var UnderlyingPaymentStreamInflationLagUnit;
(function (UnderlyingPaymentStreamInflationLagUnit) {
    UnderlyingPaymentStreamInflationLagUnit["Day"] = "D";
    UnderlyingPaymentStreamInflationLagUnit["Week"] = "Wk";
    UnderlyingPaymentStreamInflationLagUnit["Month"] = "Mo";
    UnderlyingPaymentStreamInflationLagUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamInflationLagUnit = exports.UnderlyingPaymentStreamInflationLagUnit || (exports.UnderlyingPaymentStreamInflationLagUnit = {}));
var UnderlyingPaymentStreamInflationLagDayType;
(function (UnderlyingPaymentStreamInflationLagDayType) {
    UnderlyingPaymentStreamInflationLagDayType[UnderlyingPaymentStreamInflationLagDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStreamInflationLagDayType[UnderlyingPaymentStreamInflationLagDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStreamInflationLagDayType[UnderlyingPaymentStreamInflationLagDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStreamInflationLagDayType[UnderlyingPaymentStreamInflationLagDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStreamInflationLagDayType[UnderlyingPaymentStreamInflationLagDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStreamInflationLagDayType[UnderlyingPaymentStreamInflationLagDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStreamInflationLagDayType = exports.UnderlyingPaymentStreamInflationLagDayType || (exports.UnderlyingPaymentStreamInflationLagDayType = {}));
var UnderlyingPaymentStreamInflationInterpolationMethod;
(function (UnderlyingPaymentStreamInflationInterpolationMethod) {
    UnderlyingPaymentStreamInflationInterpolationMethod[UnderlyingPaymentStreamInflationInterpolationMethod["None"] = 0] = "None";
    UnderlyingPaymentStreamInflationInterpolationMethod[UnderlyingPaymentStreamInflationInterpolationMethod["LinearZeroYield"] = 1] = "LinearZeroYield";
})(UnderlyingPaymentStreamInflationInterpolationMethod = exports.UnderlyingPaymentStreamInflationInterpolationMethod || (exports.UnderlyingPaymentStreamInflationInterpolationMethod = {}));
var UnderlyingPaymentStreamInflationIndexSource;
(function (UnderlyingPaymentStreamInflationIndexSource) {
    UnderlyingPaymentStreamInflationIndexSource[UnderlyingPaymentStreamInflationIndexSource["Bloomberg"] = 0] = "Bloomberg";
    UnderlyingPaymentStreamInflationIndexSource[UnderlyingPaymentStreamInflationIndexSource["Reuters"] = 1] = "Reuters";
    UnderlyingPaymentStreamInflationIndexSource[UnderlyingPaymentStreamInflationIndexSource["Telerate"] = 2] = "Telerate";
    UnderlyingPaymentStreamInflationIndexSource[UnderlyingPaymentStreamInflationIndexSource["Other"] = 99] = "Other";
})(UnderlyingPaymentStreamInflationIndexSource = exports.UnderlyingPaymentStreamInflationIndexSource || (exports.UnderlyingPaymentStreamInflationIndexSource = {}));
var UnderlyingPaymentStreamFRADiscounting;
(function (UnderlyingPaymentStreamFRADiscounting) {
    UnderlyingPaymentStreamFRADiscounting[UnderlyingPaymentStreamFRADiscounting["None"] = 0] = "None";
    UnderlyingPaymentStreamFRADiscounting[UnderlyingPaymentStreamFRADiscounting["InternationalSwapsAndDerivativesAssociationIsda"] = 1] = "InternationalSwapsAndDerivativesAssociationIsda";
    UnderlyingPaymentStreamFRADiscounting[UnderlyingPaymentStreamFRADiscounting["AustralianFinancialMarketsAssociationAfma"] = 2] = "AustralianFinancialMarketsAssociationAfma";
})(UnderlyingPaymentStreamFRADiscounting = exports.UnderlyingPaymentStreamFRADiscounting || (exports.UnderlyingPaymentStreamFRADiscounting = {}));
var UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention;
(function (UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention) {
    UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention[UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention = exports.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention || (exports.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention = {}));
var UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit;
(function (UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit) {
    UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit["Day"] = "D";
    UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit = exports.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit || (exports.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit = {}));
var UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType;
(function (UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType) {
    UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType[UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType[UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType[UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType[UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType[UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType[UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType = exports.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType || (exports.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType = {}));
var UnderlyingNonDeliverableFixingDateType;
(function (UnderlyingNonDeliverableFixingDateType) {
    UnderlyingNonDeliverableFixingDateType[UnderlyingNonDeliverableFixingDateType["Unadjusted"] = 0] = "Unadjusted";
    UnderlyingNonDeliverableFixingDateType[UnderlyingNonDeliverableFixingDateType["Adjusted"] = 1] = "Adjusted";
})(UnderlyingNonDeliverableFixingDateType = exports.UnderlyingNonDeliverableFixingDateType || (exports.UnderlyingNonDeliverableFixingDateType = {}));
var UnderlyingPaymentStreamNonDeliverableSettlRateSource;
(function (UnderlyingPaymentStreamNonDeliverableSettlRateSource) {
    UnderlyingPaymentStreamNonDeliverableSettlRateSource[UnderlyingPaymentStreamNonDeliverableSettlRateSource["Bloomberg"] = 0] = "Bloomberg";
    UnderlyingPaymentStreamNonDeliverableSettlRateSource[UnderlyingPaymentStreamNonDeliverableSettlRateSource["Reuters"] = 1] = "Reuters";
    UnderlyingPaymentStreamNonDeliverableSettlRateSource[UnderlyingPaymentStreamNonDeliverableSettlRateSource["Telerate"] = 2] = "Telerate";
    UnderlyingPaymentStreamNonDeliverableSettlRateSource[UnderlyingPaymentStreamNonDeliverableSettlRateSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    UnderlyingPaymentStreamNonDeliverableSettlRateSource[UnderlyingPaymentStreamNonDeliverableSettlRateSource["Other"] = 99] = "Other";
})(UnderlyingPaymentStreamNonDeliverableSettlRateSource = exports.UnderlyingPaymentStreamNonDeliverableSettlRateSource || (exports.UnderlyingPaymentStreamNonDeliverableSettlRateSource = {}));
var UnderlyingSettlRatePostponementCalculationAgent;
(function (UnderlyingSettlRatePostponementCalculationAgent) {
    UnderlyingSettlRatePostponementCalculationAgent[UnderlyingSettlRatePostponementCalculationAgent["ExercisingParty"] = 0] = "ExercisingParty";
    UnderlyingSettlRatePostponementCalculationAgent[UnderlyingSettlRatePostponementCalculationAgent["NonExercisingParty"] = 1] = "NonExercisingParty";
    UnderlyingSettlRatePostponementCalculationAgent[UnderlyingSettlRatePostponementCalculationAgent["AsSpecifiedInTheMasterAgreement"] = 2] = "AsSpecifiedInTheMasterAgreement";
    UnderlyingSettlRatePostponementCalculationAgent[UnderlyingSettlRatePostponementCalculationAgent["AsSpecifiedInTheStandardTermsSupplement"] = 3] = "AsSpecifiedInTheStandardTermsSupplement";
})(UnderlyingSettlRatePostponementCalculationAgent = exports.UnderlyingSettlRatePostponementCalculationAgent || (exports.UnderlyingSettlRatePostponementCalculationAgent = {}));
var UnderlyingPaymentScheduleType;
(function (UnderlyingPaymentScheduleType) {
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["Notional"] = 0] = "Notional";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["CashFlow"] = 1] = "CashFlow";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["FxLinkedNotional"] = 2] = "FxLinkedNotional";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["FixedRate"] = 3] = "FixedRate";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["FutureValueNotional"] = 4] = "FutureValueNotional";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["KnownAmount"] = 5] = "KnownAmount";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["FloatingRateMultiplier"] = 6] = "FloatingRateMultiplier";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["Spread"] = 7] = "Spread";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["CapRate"] = 8] = "CapRate";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["FloorRate"] = 9] = "FloorRate";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["NonDeliverableSettlementPaymentDates"] = 10] = "NonDeliverableSettlementPaymentDates";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["NonDeliverableSettlementCalculationDates"] = 11] = "NonDeliverableSettlementCalculationDates";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["NonDeliverableFixingDates"] = 12] = "NonDeliverableFixingDates";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["SettlementPeriodNotional"] = 13] = "SettlementPeriodNotional";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["SettlementPeriodPrice"] = 14] = "SettlementPeriodPrice";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["CalculationPeriod"] = 15] = "CalculationPeriod";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["DividendAccrualRateMultiplier"] = 16] = "DividendAccrualRateMultiplier";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["DividendAccrualRateSpread"] = 17] = "DividendAccrualRateSpread";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["DividendAccrualCapRate"] = 18] = "DividendAccrualCapRate";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["DividendAccrualFloorRate"] = 19] = "DividendAccrualFloorRate";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["CompoundingRateMultiplier"] = 20] = "CompoundingRateMultiplier";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["CompoundingRateSpread"] = 21] = "CompoundingRateSpread";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["CompoundingCapRate"] = 22] = "CompoundingCapRate";
    UnderlyingPaymentScheduleType[UnderlyingPaymentScheduleType["CompoundingFloorRate"] = 23] = "CompoundingFloorRate";
})(UnderlyingPaymentScheduleType = exports.UnderlyingPaymentScheduleType || (exports.UnderlyingPaymentScheduleType = {}));
var UnderlyingPaymentScheduleStubType;
(function (UnderlyingPaymentScheduleStubType) {
    UnderlyingPaymentScheduleStubType[UnderlyingPaymentScheduleStubType["Initial"] = 0] = "Initial";
    UnderlyingPaymentScheduleStubType[UnderlyingPaymentScheduleStubType["Final"] = 1] = "Final";
    UnderlyingPaymentScheduleStubType[UnderlyingPaymentScheduleStubType["CompoundingInitial"] = 2] = "CompoundingInitial";
    UnderlyingPaymentScheduleStubType[UnderlyingPaymentScheduleStubType["CompoundingFinal"] = 3] = "CompoundingFinal";
})(UnderlyingPaymentScheduleStubType = exports.UnderlyingPaymentScheduleStubType || (exports.UnderlyingPaymentScheduleStubType = {}));
var UnderlyingPaymentSchedulePaySide;
(function (UnderlyingPaymentSchedulePaySide) {
    UnderlyingPaymentSchedulePaySide[UnderlyingPaymentSchedulePaySide["Buy"] = 1] = "Buy";
    UnderlyingPaymentSchedulePaySide[UnderlyingPaymentSchedulePaySide["Sell"] = 2] = "Sell";
})(UnderlyingPaymentSchedulePaySide = exports.UnderlyingPaymentSchedulePaySide || (exports.UnderlyingPaymentSchedulePaySide = {}));
var UnderlyingPaymentScheduleReceiveSide;
(function (UnderlyingPaymentScheduleReceiveSide) {
    UnderlyingPaymentScheduleReceiveSide[UnderlyingPaymentScheduleReceiveSide["Buy"] = 1] = "Buy";
    UnderlyingPaymentScheduleReceiveSide[UnderlyingPaymentScheduleReceiveSide["Sell"] = 2] = "Sell";
})(UnderlyingPaymentScheduleReceiveSide = exports.UnderlyingPaymentScheduleReceiveSide || (exports.UnderlyingPaymentScheduleReceiveSide = {}));
var UnderlyingPaymentScheduleRateSpreadPositionType;
(function (UnderlyingPaymentScheduleRateSpreadPositionType) {
    UnderlyingPaymentScheduleRateSpreadPositionType[UnderlyingPaymentScheduleRateSpreadPositionType["Short"] = 0] = "Short";
    UnderlyingPaymentScheduleRateSpreadPositionType[UnderlyingPaymentScheduleRateSpreadPositionType["Long"] = 1] = "Long";
})(UnderlyingPaymentScheduleRateSpreadPositionType = exports.UnderlyingPaymentScheduleRateSpreadPositionType || (exports.UnderlyingPaymentScheduleRateSpreadPositionType = {}));
var UnderlyingPaymentScheduleRateTreatment;
(function (UnderlyingPaymentScheduleRateTreatment) {
    UnderlyingPaymentScheduleRateTreatment[UnderlyingPaymentScheduleRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    UnderlyingPaymentScheduleRateTreatment[UnderlyingPaymentScheduleRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(UnderlyingPaymentScheduleRateTreatment = exports.UnderlyingPaymentScheduleRateTreatment || (exports.UnderlyingPaymentScheduleRateTreatment = {}));
var UnderlyingPaymentScheduleStepFrequencyUnit;
(function (UnderlyingPaymentScheduleStepFrequencyUnit) {
    UnderlyingPaymentScheduleStepFrequencyUnit["Day"] = "D";
    UnderlyingPaymentScheduleStepFrequencyUnit["Week"] = "Wk";
    UnderlyingPaymentScheduleStepFrequencyUnit["Month"] = "Mo";
    UnderlyingPaymentScheduleStepFrequencyUnit["Year"] = "Yr";
    UnderlyingPaymentScheduleStepFrequencyUnit["Hour"] = "H";
    UnderlyingPaymentScheduleStepFrequencyUnit["Minute"] = "Min";
    UnderlyingPaymentScheduleStepFrequencyUnit["Second"] = "S";
    UnderlyingPaymentScheduleStepFrequencyUnit["Term"] = "T";
})(UnderlyingPaymentScheduleStepFrequencyUnit = exports.UnderlyingPaymentScheduleStepFrequencyUnit || (exports.UnderlyingPaymentScheduleStepFrequencyUnit = {}));
var UnderlyingPaymentScheduleStepRelativeTo;
(function (UnderlyingPaymentScheduleStepRelativeTo) {
    UnderlyingPaymentScheduleStepRelativeTo[UnderlyingPaymentScheduleStepRelativeTo["Initial"] = 0] = "Initial";
    UnderlyingPaymentScheduleStepRelativeTo[UnderlyingPaymentScheduleStepRelativeTo["Previous"] = 1] = "Previous";
})(UnderlyingPaymentScheduleStepRelativeTo = exports.UnderlyingPaymentScheduleStepRelativeTo || (exports.UnderlyingPaymentScheduleStepRelativeTo = {}));
var UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn;
(function (UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn) {
    UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn[UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn[UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn[UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn[UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn[UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn[UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn[UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn[UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn["NearestDay"] = 7] = "NearestDay";
})(UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn = exports.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn || (exports.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn = {}));
var UnderlyingPaymentScheduleFixingDateOffsetUnit;
(function (UnderlyingPaymentScheduleFixingDateOffsetUnit) {
    UnderlyingPaymentScheduleFixingDateOffsetUnit["Day"] = "D";
    UnderlyingPaymentScheduleFixingDateOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentScheduleFixingDateOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentScheduleFixingDateOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentScheduleFixingDateOffsetUnit = exports.UnderlyingPaymentScheduleFixingDateOffsetUnit || (exports.UnderlyingPaymentScheduleFixingDateOffsetUnit = {}));
var UnderlyingPaymentScheduleFixingDateOffsetDayType;
(function (UnderlyingPaymentScheduleFixingDateOffsetDayType) {
    UnderlyingPaymentScheduleFixingDateOffsetDayType[UnderlyingPaymentScheduleFixingDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentScheduleFixingDateOffsetDayType[UnderlyingPaymentScheduleFixingDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentScheduleFixingDateOffsetDayType[UnderlyingPaymentScheduleFixingDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentScheduleFixingDateOffsetDayType[UnderlyingPaymentScheduleFixingDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentScheduleFixingDateOffsetDayType[UnderlyingPaymentScheduleFixingDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentScheduleFixingDateOffsetDayType[UnderlyingPaymentScheduleFixingDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentScheduleFixingDateOffsetDayType = exports.UnderlyingPaymentScheduleFixingDateOffsetDayType || (exports.UnderlyingPaymentScheduleFixingDateOffsetDayType = {}));
var UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention;
(function (UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention) {
    UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention[UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention[UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention[UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention[UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention[UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention[UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention[UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention[UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention = exports.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention || (exports.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention = {}));
var UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit;
(function (UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit) {
    UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit["Day"] = "D";
    UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit = exports.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit || (exports.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit = {}));
var UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType;
(function (UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType) {
    UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType[UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType[UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType[UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType[UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType[UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType[UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType = exports.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType || (exports.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType = {}));
var UnderlyingPaymentScheduleRateSource;
(function (UnderlyingPaymentScheduleRateSource) {
    UnderlyingPaymentScheduleRateSource[UnderlyingPaymentScheduleRateSource["Bloomberg"] = 0] = "Bloomberg";
    UnderlyingPaymentScheduleRateSource[UnderlyingPaymentScheduleRateSource["Reuters"] = 1] = "Reuters";
    UnderlyingPaymentScheduleRateSource[UnderlyingPaymentScheduleRateSource["Telerate"] = 2] = "Telerate";
    UnderlyingPaymentScheduleRateSource[UnderlyingPaymentScheduleRateSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    UnderlyingPaymentScheduleRateSource[UnderlyingPaymentScheduleRateSource["Other"] = 99] = "Other";
})(UnderlyingPaymentScheduleRateSource = exports.UnderlyingPaymentScheduleRateSource || (exports.UnderlyingPaymentScheduleRateSource = {}));
var UnderlyingPaymentScheduleRateSourceType;
(function (UnderlyingPaymentScheduleRateSourceType) {
    UnderlyingPaymentScheduleRateSourceType[UnderlyingPaymentScheduleRateSourceType["Primary"] = 0] = "Primary";
    UnderlyingPaymentScheduleRateSourceType[UnderlyingPaymentScheduleRateSourceType["Secondary"] = 1] = "Secondary";
})(UnderlyingPaymentScheduleRateSourceType = exports.UnderlyingPaymentScheduleRateSourceType || (exports.UnderlyingPaymentScheduleRateSourceType = {}));
var UnderlyingPaymentStubType;
(function (UnderlyingPaymentStubType) {
    UnderlyingPaymentStubType[UnderlyingPaymentStubType["Initial"] = 0] = "Initial";
    UnderlyingPaymentStubType[UnderlyingPaymentStubType["Final"] = 1] = "Final";
    UnderlyingPaymentStubType[UnderlyingPaymentStubType["CompoundingInitial"] = 2] = "CompoundingInitial";
    UnderlyingPaymentStubType[UnderlyingPaymentStubType["CompoundingFinal"] = 3] = "CompoundingFinal";
})(UnderlyingPaymentStubType = exports.UnderlyingPaymentStubType || (exports.UnderlyingPaymentStubType = {}));
var UnderlyingPaymentStubLength;
(function (UnderlyingPaymentStubLength) {
    UnderlyingPaymentStubLength[UnderlyingPaymentStubLength["Short"] = 0] = "Short";
    UnderlyingPaymentStubLength[UnderlyingPaymentStubLength["Long"] = 1] = "Long";
})(UnderlyingPaymentStubLength = exports.UnderlyingPaymentStubLength || (exports.UnderlyingPaymentStubLength = {}));
var UnderlyingPaymentStubIndexSource;
(function (UnderlyingPaymentStubIndexSource) {
    UnderlyingPaymentStubIndexSource[UnderlyingPaymentStubIndexSource["Bloomberg"] = 0] = "Bloomberg";
    UnderlyingPaymentStubIndexSource[UnderlyingPaymentStubIndexSource["Reuters"] = 1] = "Reuters";
    UnderlyingPaymentStubIndexSource[UnderlyingPaymentStubIndexSource["Telerate"] = 2] = "Telerate";
    UnderlyingPaymentStubIndexSource[UnderlyingPaymentStubIndexSource["Other"] = 99] = "Other";
})(UnderlyingPaymentStubIndexSource = exports.UnderlyingPaymentStubIndexSource || (exports.UnderlyingPaymentStubIndexSource = {}));
var UnderlyingPaymentStubIndexCurveUnit;
(function (UnderlyingPaymentStubIndexCurveUnit) {
    UnderlyingPaymentStubIndexCurveUnit["Day"] = "D";
    UnderlyingPaymentStubIndexCurveUnit["Week"] = "Wk";
    UnderlyingPaymentStubIndexCurveUnit["Month"] = "Mo";
    UnderlyingPaymentStubIndexCurveUnit["Year"] = "Yr";
})(UnderlyingPaymentStubIndexCurveUnit = exports.UnderlyingPaymentStubIndexCurveUnit || (exports.UnderlyingPaymentStubIndexCurveUnit = {}));
var UnderlyingPaymentStubIndexRateSpreadPositionType;
(function (UnderlyingPaymentStubIndexRateSpreadPositionType) {
    UnderlyingPaymentStubIndexRateSpreadPositionType[UnderlyingPaymentStubIndexRateSpreadPositionType["Short"] = 0] = "Short";
    UnderlyingPaymentStubIndexRateSpreadPositionType[UnderlyingPaymentStubIndexRateSpreadPositionType["Long"] = 1] = "Long";
})(UnderlyingPaymentStubIndexRateSpreadPositionType = exports.UnderlyingPaymentStubIndexRateSpreadPositionType || (exports.UnderlyingPaymentStubIndexRateSpreadPositionType = {}));
var UnderlyingPaymentStubIndexRateTreatment;
(function (UnderlyingPaymentStubIndexRateTreatment) {
    UnderlyingPaymentStubIndexRateTreatment[UnderlyingPaymentStubIndexRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    UnderlyingPaymentStubIndexRateTreatment[UnderlyingPaymentStubIndexRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(UnderlyingPaymentStubIndexRateTreatment = exports.UnderlyingPaymentStubIndexRateTreatment || (exports.UnderlyingPaymentStubIndexRateTreatment = {}));
var UnderlyingPaymentStubIndexCapRateBuySide;
(function (UnderlyingPaymentStubIndexCapRateBuySide) {
    UnderlyingPaymentStubIndexCapRateBuySide[UnderlyingPaymentStubIndexCapRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingPaymentStubIndexCapRateBuySide[UnderlyingPaymentStubIndexCapRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingPaymentStubIndexCapRateBuySide = exports.UnderlyingPaymentStubIndexCapRateBuySide || (exports.UnderlyingPaymentStubIndexCapRateBuySide = {}));
var UnderlyingPaymentStubIndexCapRateSellSide;
(function (UnderlyingPaymentStubIndexCapRateSellSide) {
    UnderlyingPaymentStubIndexCapRateSellSide[UnderlyingPaymentStubIndexCapRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingPaymentStubIndexCapRateSellSide[UnderlyingPaymentStubIndexCapRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingPaymentStubIndexCapRateSellSide = exports.UnderlyingPaymentStubIndexCapRateSellSide || (exports.UnderlyingPaymentStubIndexCapRateSellSide = {}));
var UnderlyingPaymentStubIndexFloorRateBuySide;
(function (UnderlyingPaymentStubIndexFloorRateBuySide) {
    UnderlyingPaymentStubIndexFloorRateBuySide[UnderlyingPaymentStubIndexFloorRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingPaymentStubIndexFloorRateBuySide[UnderlyingPaymentStubIndexFloorRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingPaymentStubIndexFloorRateBuySide = exports.UnderlyingPaymentStubIndexFloorRateBuySide || (exports.UnderlyingPaymentStubIndexFloorRateBuySide = {}));
var UnderlyingPaymentStubIndexFloorRateSellSide;
(function (UnderlyingPaymentStubIndexFloorRateSellSide) {
    UnderlyingPaymentStubIndexFloorRateSellSide[UnderlyingPaymentStubIndexFloorRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingPaymentStubIndexFloorRateSellSide[UnderlyingPaymentStubIndexFloorRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingPaymentStubIndexFloorRateSellSide = exports.UnderlyingPaymentStubIndexFloorRateSellSide || (exports.UnderlyingPaymentStubIndexFloorRateSellSide = {}));
var UnderlyingPaymentStubIndex2Source;
(function (UnderlyingPaymentStubIndex2Source) {
    UnderlyingPaymentStubIndex2Source[UnderlyingPaymentStubIndex2Source["Bloomberg"] = 0] = "Bloomberg";
    UnderlyingPaymentStubIndex2Source[UnderlyingPaymentStubIndex2Source["Reuters"] = 1] = "Reuters";
    UnderlyingPaymentStubIndex2Source[UnderlyingPaymentStubIndex2Source["Telerate"] = 2] = "Telerate";
    UnderlyingPaymentStubIndex2Source[UnderlyingPaymentStubIndex2Source["Other"] = 99] = "Other";
})(UnderlyingPaymentStubIndex2Source = exports.UnderlyingPaymentStubIndex2Source || (exports.UnderlyingPaymentStubIndex2Source = {}));
var UnderlyingPaymentStubIndex2CurveUnit;
(function (UnderlyingPaymentStubIndex2CurveUnit) {
    UnderlyingPaymentStubIndex2CurveUnit["Day"] = "D";
    UnderlyingPaymentStubIndex2CurveUnit["Week"] = "Wk";
    UnderlyingPaymentStubIndex2CurveUnit["Month"] = "Mo";
    UnderlyingPaymentStubIndex2CurveUnit["Year"] = "Yr";
})(UnderlyingPaymentStubIndex2CurveUnit = exports.UnderlyingPaymentStubIndex2CurveUnit || (exports.UnderlyingPaymentStubIndex2CurveUnit = {}));
var UnderlyingPaymentStubIndex2RateSpreadPositionType;
(function (UnderlyingPaymentStubIndex2RateSpreadPositionType) {
    UnderlyingPaymentStubIndex2RateSpreadPositionType[UnderlyingPaymentStubIndex2RateSpreadPositionType["Short"] = 0] = "Short";
    UnderlyingPaymentStubIndex2RateSpreadPositionType[UnderlyingPaymentStubIndex2RateSpreadPositionType["Long"] = 1] = "Long";
})(UnderlyingPaymentStubIndex2RateSpreadPositionType = exports.UnderlyingPaymentStubIndex2RateSpreadPositionType || (exports.UnderlyingPaymentStubIndex2RateSpreadPositionType = {}));
var UnderlyingPaymentStubIndex2RateTreatment;
(function (UnderlyingPaymentStubIndex2RateTreatment) {
    UnderlyingPaymentStubIndex2RateTreatment[UnderlyingPaymentStubIndex2RateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    UnderlyingPaymentStubIndex2RateTreatment[UnderlyingPaymentStubIndex2RateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(UnderlyingPaymentStubIndex2RateTreatment = exports.UnderlyingPaymentStubIndex2RateTreatment || (exports.UnderlyingPaymentStubIndex2RateTreatment = {}));
var PaymentStreamType;
(function (PaymentStreamType) {
    PaymentStreamType[PaymentStreamType["PeriodicDefault"] = 0] = "PeriodicDefault";
    PaymentStreamType[PaymentStreamType["Initial"] = 1] = "Initial";
    PaymentStreamType[PaymentStreamType["Single"] = 2] = "Single";
    PaymentStreamType[PaymentStreamType["Dividend"] = 3] = "Dividend";
    PaymentStreamType[PaymentStreamType["Interest"] = 4] = "Interest";
    PaymentStreamType[PaymentStreamType["DividendReturn"] = 5] = "DividendReturn";
    PaymentStreamType[PaymentStreamType["PriceReturn"] = 6] = "PriceReturn";
    PaymentStreamType[PaymentStreamType["TotalReturn"] = 7] = "TotalReturn";
    PaymentStreamType[PaymentStreamType["Variance"] = 8] = "Variance";
    PaymentStreamType[PaymentStreamType["Correlation"] = 9] = "Correlation";
})(PaymentStreamType = exports.PaymentStreamType || (exports.PaymentStreamType = {}));
var PaymentStreamDayCount;
(function (PaymentStreamDayCount) {
    PaymentStreamDayCount[PaymentStreamDayCount["E11"] = 0] = "E11";
    PaymentStreamDayCount[PaymentStreamDayCount["E3036030U360OrBondBasis"] = 1] = "E3036030U360OrBondBasis";
    PaymentStreamDayCount[PaymentStreamDayCount["E30360Sia"] = 2] = "E30360Sia";
    PaymentStreamDayCount[PaymentStreamDayCount["E30360M"] = 3] = "E30360M";
    PaymentStreamDayCount[PaymentStreamDayCount["E30E360EurobondBasis"] = 4] = "E30E360EurobondBasis";
    PaymentStreamDayCount[PaymentStreamDayCount["E30E360Isda"] = 5] = "E30E360Isda";
    PaymentStreamDayCount[PaymentStreamDayCount["Act360"] = 6] = "Act360";
    PaymentStreamDayCount[PaymentStreamDayCount["Act365Fixed"] = 7] = "Act365Fixed";
    PaymentStreamDayCount[PaymentStreamDayCount["ActActAfb"] = 8] = "ActActAfb";
    PaymentStreamDayCount[PaymentStreamDayCount["ActActIcma"] = 9] = "ActActIcma";
    PaymentStreamDayCount[PaymentStreamDayCount["ActActIcsmaUltimo"] = 10] = "ActActIcsmaUltimo";
    PaymentStreamDayCount[PaymentStreamDayCount["ActActIsda"] = 11] = "ActActIsda";
    PaymentStreamDayCount[PaymentStreamDayCount["Bus252"] = 12] = "Bus252";
    PaymentStreamDayCount[PaymentStreamDayCount["E30E360"] = 13] = "E30E360";
    PaymentStreamDayCount[PaymentStreamDayCount["Act365L"] = 14] = "Act365L";
    PaymentStreamDayCount[PaymentStreamDayCount["Nl365"] = 15] = "Nl365";
    PaymentStreamDayCount[PaymentStreamDayCount["Nl360"] = 16] = "Nl360";
    PaymentStreamDayCount[PaymentStreamDayCount["Act364"] = 17] = "Act364";
})(PaymentStreamDayCount = exports.PaymentStreamDayCount || (exports.PaymentStreamDayCount = {}));
var PaymentStreamDiscountType;
(function (PaymentStreamDiscountType) {
    PaymentStreamDiscountType[PaymentStreamDiscountType["Standard"] = 0] = "Standard";
    PaymentStreamDiscountType[PaymentStreamDiscountType["ForwardRateAgreementFra"] = 1] = "ForwardRateAgreementFra";
})(PaymentStreamDiscountType = exports.PaymentStreamDiscountType || (exports.PaymentStreamDiscountType = {}));
var PaymentStreamDiscountRateDayCount;
(function (PaymentStreamDiscountRateDayCount) {
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["E11"] = 0] = "E11";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["E3036030U360OrBondBasis"] = 1] = "E3036030U360OrBondBasis";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["E30360Sia"] = 2] = "E30360Sia";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["E30360M"] = 3] = "E30360M";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["E30E360EurobondBasis"] = 4] = "E30E360EurobondBasis";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["E30E360Isda"] = 5] = "E30E360Isda";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["Act360"] = 6] = "Act360";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["Act365Fixed"] = 7] = "Act365Fixed";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["ActActAfb"] = 8] = "ActActAfb";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["ActActIcma"] = 9] = "ActActIcma";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["ActActIcsmaUltimo"] = 10] = "ActActIcsmaUltimo";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["ActActIsda"] = 11] = "ActActIsda";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["Bus252"] = 12] = "Bus252";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["E30E360"] = 13] = "E30E360";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["Act365L"] = 14] = "Act365L";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["Nl365"] = 15] = "Nl365";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["Nl360"] = 16] = "Nl360";
    PaymentStreamDiscountRateDayCount[PaymentStreamDiscountRateDayCount["Act364"] = 17] = "Act364";
})(PaymentStreamDiscountRateDayCount = exports.PaymentStreamDiscountRateDayCount || (exports.PaymentStreamDiscountRateDayCount = {}));
var PaymentStreamCompoundingMethod;
(function (PaymentStreamCompoundingMethod) {
    PaymentStreamCompoundingMethod[PaymentStreamCompoundingMethod["None"] = 0] = "None";
    PaymentStreamCompoundingMethod[PaymentStreamCompoundingMethod["Flat"] = 1] = "Flat";
    PaymentStreamCompoundingMethod[PaymentStreamCompoundingMethod["Straight"] = 2] = "Straight";
    PaymentStreamCompoundingMethod[PaymentStreamCompoundingMethod["SpreadExclusive"] = 3] = "SpreadExclusive";
})(PaymentStreamCompoundingMethod = exports.PaymentStreamCompoundingMethod || (exports.PaymentStreamCompoundingMethod = {}));
var PaymentStreamPaymentDateBusinessDayConvention;
(function (PaymentStreamPaymentDateBusinessDayConvention) {
    PaymentStreamPaymentDateBusinessDayConvention[PaymentStreamPaymentDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    PaymentStreamPaymentDateBusinessDayConvention[PaymentStreamPaymentDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    PaymentStreamPaymentDateBusinessDayConvention[PaymentStreamPaymentDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    PaymentStreamPaymentDateBusinessDayConvention[PaymentStreamPaymentDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    PaymentStreamPaymentDateBusinessDayConvention[PaymentStreamPaymentDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    PaymentStreamPaymentDateBusinessDayConvention[PaymentStreamPaymentDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    PaymentStreamPaymentDateBusinessDayConvention[PaymentStreamPaymentDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    PaymentStreamPaymentDateBusinessDayConvention[PaymentStreamPaymentDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(PaymentStreamPaymentDateBusinessDayConvention = exports.PaymentStreamPaymentDateBusinessDayConvention || (exports.PaymentStreamPaymentDateBusinessDayConvention = {}));
var PaymentStreamPaymentFrequencyUnit;
(function (PaymentStreamPaymentFrequencyUnit) {
    PaymentStreamPaymentFrequencyUnit["Day"] = "D";
    PaymentStreamPaymentFrequencyUnit["Week"] = "Wk";
    PaymentStreamPaymentFrequencyUnit["Month"] = "Mo";
    PaymentStreamPaymentFrequencyUnit["Year"] = "Yr";
    PaymentStreamPaymentFrequencyUnit["Term"] = "T";
})(PaymentStreamPaymentFrequencyUnit = exports.PaymentStreamPaymentFrequencyUnit || (exports.PaymentStreamPaymentFrequencyUnit = {}));
var PaymentStreamPaymentRollConvention;
(function (PaymentStreamPaymentRollConvention) {
    PaymentStreamPaymentRollConvention["E1stDayOfTheMonth"] = "1";
    PaymentStreamPaymentRollConvention["E2ndDayOfTheMonth"] = "2";
    PaymentStreamPaymentRollConvention["E3rdDayOfTheMonth"] = "3";
    PaymentStreamPaymentRollConvention["E4thDayOfTheMonth"] = "4";
    PaymentStreamPaymentRollConvention["E5thDayOfTheMonth"] = "5";
    PaymentStreamPaymentRollConvention["E6ThdDayOfTheMonth"] = "6";
    PaymentStreamPaymentRollConvention["E7thDayOfTheMonth"] = "7";
    PaymentStreamPaymentRollConvention["E8thDayOfTheMonth"] = "8";
    PaymentStreamPaymentRollConvention["E9thDayOfTheMonth"] = "9";
    PaymentStreamPaymentRollConvention["E10thDayOfTheMonth"] = "10";
    PaymentStreamPaymentRollConvention["E11ThDayOfTheMonth"] = "11";
    PaymentStreamPaymentRollConvention["E12ThDayOfTheMonth"] = "12";
    PaymentStreamPaymentRollConvention["E13ThDayOfTheMonth"] = "13";
    PaymentStreamPaymentRollConvention["E14thDayOfTheMonth"] = "14";
    PaymentStreamPaymentRollConvention["E15thDayOfTheMonth"] = "15";
    PaymentStreamPaymentRollConvention["E16thDayOfTheMonth"] = "16";
    PaymentStreamPaymentRollConvention["E17thDayOfTheMonth"] = "17";
    PaymentStreamPaymentRollConvention["E18thDayOfTheMonth"] = "18";
    PaymentStreamPaymentRollConvention["E19thDayOfTheMonth"] = "19";
    PaymentStreamPaymentRollConvention["E20thDayOfTheMonth"] = "20";
    PaymentStreamPaymentRollConvention["E21stDayOfTheMonth"] = "21";
    PaymentStreamPaymentRollConvention["E22ndDayOfTheMonth"] = "22";
    PaymentStreamPaymentRollConvention["E23rdDayOfTheMonth"] = "23";
    PaymentStreamPaymentRollConvention["E24thDayOfTheMonth"] = "24";
    PaymentStreamPaymentRollConvention["E25thDayOfTheMonth"] = "25";
    PaymentStreamPaymentRollConvention["E26thDayOfTheMonth"] = "26";
    PaymentStreamPaymentRollConvention["E27thDayOfTheMonth"] = "27";
    PaymentStreamPaymentRollConvention["E28thDayOfTheMonth"] = "28";
    PaymentStreamPaymentRollConvention["E29thDayOfTheMonth"] = "29";
    PaymentStreamPaymentRollConvention["E30thDayOfTheMonth"] = "30";
    PaymentStreamPaymentRollConvention["TheEndOfTheMonth"] = "EOM";
    PaymentStreamPaymentRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    PaymentStreamPaymentRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    PaymentStreamPaymentRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    PaymentStreamPaymentRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    PaymentStreamPaymentRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    PaymentStreamPaymentRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    PaymentStreamPaymentRollConvention["NoAdjustment"] = "NONE";
    PaymentStreamPaymentRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    PaymentStreamPaymentRollConvention["Monday"] = "MON";
    PaymentStreamPaymentRollConvention["Tuesday"] = "TUE";
    PaymentStreamPaymentRollConvention["Wednesday"] = "WED";
    PaymentStreamPaymentRollConvention["Thursday"] = "THU";
    PaymentStreamPaymentRollConvention["Friday"] = "FRI";
    PaymentStreamPaymentRollConvention["Saturday"] = "SAT";
    PaymentStreamPaymentRollConvention["Sunday"] = "SUN";
})(PaymentStreamPaymentRollConvention = exports.PaymentStreamPaymentRollConvention || (exports.PaymentStreamPaymentRollConvention = {}));
var PaymentStreamPaymentDateOffsetUnit;
(function (PaymentStreamPaymentDateOffsetUnit) {
    PaymentStreamPaymentDateOffsetUnit["Day"] = "D";
    PaymentStreamPaymentDateOffsetUnit["Week"] = "Wk";
    PaymentStreamPaymentDateOffsetUnit["Month"] = "Mo";
    PaymentStreamPaymentDateOffsetUnit["Year"] = "Yr";
})(PaymentStreamPaymentDateOffsetUnit = exports.PaymentStreamPaymentDateOffsetUnit || (exports.PaymentStreamPaymentDateOffsetUnit = {}));
var PaymentStreamResetDateBusinessDayConvention;
(function (PaymentStreamResetDateBusinessDayConvention) {
    PaymentStreamResetDateBusinessDayConvention[PaymentStreamResetDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    PaymentStreamResetDateBusinessDayConvention[PaymentStreamResetDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    PaymentStreamResetDateBusinessDayConvention[PaymentStreamResetDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    PaymentStreamResetDateBusinessDayConvention[PaymentStreamResetDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    PaymentStreamResetDateBusinessDayConvention[PaymentStreamResetDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    PaymentStreamResetDateBusinessDayConvention[PaymentStreamResetDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    PaymentStreamResetDateBusinessDayConvention[PaymentStreamResetDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    PaymentStreamResetDateBusinessDayConvention[PaymentStreamResetDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(PaymentStreamResetDateBusinessDayConvention = exports.PaymentStreamResetDateBusinessDayConvention || (exports.PaymentStreamResetDateBusinessDayConvention = {}));
var PaymentStreamResetFrequencyUnit;
(function (PaymentStreamResetFrequencyUnit) {
    PaymentStreamResetFrequencyUnit["Day"] = "D";
    PaymentStreamResetFrequencyUnit["Week"] = "Wk";
    PaymentStreamResetFrequencyUnit["Month"] = "Mo";
    PaymentStreamResetFrequencyUnit["Year"] = "Yr";
    PaymentStreamResetFrequencyUnit["Hour"] = "H";
    PaymentStreamResetFrequencyUnit["Minute"] = "Min";
    PaymentStreamResetFrequencyUnit["Second"] = "S";
    PaymentStreamResetFrequencyUnit["Term"] = "T";
})(PaymentStreamResetFrequencyUnit = exports.PaymentStreamResetFrequencyUnit || (exports.PaymentStreamResetFrequencyUnit = {}));
var PaymentStreamResetWeeklyRollConvention;
(function (PaymentStreamResetWeeklyRollConvention) {
    PaymentStreamResetWeeklyRollConvention["Monday"] = "MON";
    PaymentStreamResetWeeklyRollConvention["Tuesday"] = "TUE";
    PaymentStreamResetWeeklyRollConvention["Wednesday"] = "WED";
    PaymentStreamResetWeeklyRollConvention["Thursday"] = "THU";
    PaymentStreamResetWeeklyRollConvention["Friday"] = "FRI";
    PaymentStreamResetWeeklyRollConvention["Saturday"] = "SAT";
    PaymentStreamResetWeeklyRollConvention["Sunday"] = "SUN";
})(PaymentStreamResetWeeklyRollConvention = exports.PaymentStreamResetWeeklyRollConvention || (exports.PaymentStreamResetWeeklyRollConvention = {}));
var PaymentStreamInitialFixingDateBusinessDayConvention;
(function (PaymentStreamInitialFixingDateBusinessDayConvention) {
    PaymentStreamInitialFixingDateBusinessDayConvention[PaymentStreamInitialFixingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    PaymentStreamInitialFixingDateBusinessDayConvention[PaymentStreamInitialFixingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    PaymentStreamInitialFixingDateBusinessDayConvention[PaymentStreamInitialFixingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    PaymentStreamInitialFixingDateBusinessDayConvention[PaymentStreamInitialFixingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    PaymentStreamInitialFixingDateBusinessDayConvention[PaymentStreamInitialFixingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    PaymentStreamInitialFixingDateBusinessDayConvention[PaymentStreamInitialFixingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    PaymentStreamInitialFixingDateBusinessDayConvention[PaymentStreamInitialFixingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    PaymentStreamInitialFixingDateBusinessDayConvention[PaymentStreamInitialFixingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(PaymentStreamInitialFixingDateBusinessDayConvention = exports.PaymentStreamInitialFixingDateBusinessDayConvention || (exports.PaymentStreamInitialFixingDateBusinessDayConvention = {}));
var PaymentStreamInitialFixingDateOffsetUnit;
(function (PaymentStreamInitialFixingDateOffsetUnit) {
    PaymentStreamInitialFixingDateOffsetUnit["Day"] = "D";
    PaymentStreamInitialFixingDateOffsetUnit["Week"] = "Wk";
    PaymentStreamInitialFixingDateOffsetUnit["Month"] = "Mo";
    PaymentStreamInitialFixingDateOffsetUnit["Year"] = "Yr";
})(PaymentStreamInitialFixingDateOffsetUnit = exports.PaymentStreamInitialFixingDateOffsetUnit || (exports.PaymentStreamInitialFixingDateOffsetUnit = {}));
var PaymentStreamInitialFixingDateOffsetDayType;
(function (PaymentStreamInitialFixingDateOffsetDayType) {
    PaymentStreamInitialFixingDateOffsetDayType[PaymentStreamInitialFixingDateOffsetDayType["Business"] = 0] = "Business";
    PaymentStreamInitialFixingDateOffsetDayType[PaymentStreamInitialFixingDateOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentStreamInitialFixingDateOffsetDayType[PaymentStreamInitialFixingDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStreamInitialFixingDateOffsetDayType[PaymentStreamInitialFixingDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStreamInitialFixingDateOffsetDayType[PaymentStreamInitialFixingDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStreamInitialFixingDateOffsetDayType[PaymentStreamInitialFixingDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStreamInitialFixingDateOffsetDayType = exports.PaymentStreamInitialFixingDateOffsetDayType || (exports.PaymentStreamInitialFixingDateOffsetDayType = {}));
var PaymentStreamFixingDateBusinessDayConvention;
(function (PaymentStreamFixingDateBusinessDayConvention) {
    PaymentStreamFixingDateBusinessDayConvention[PaymentStreamFixingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    PaymentStreamFixingDateBusinessDayConvention[PaymentStreamFixingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    PaymentStreamFixingDateBusinessDayConvention[PaymentStreamFixingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    PaymentStreamFixingDateBusinessDayConvention[PaymentStreamFixingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    PaymentStreamFixingDateBusinessDayConvention[PaymentStreamFixingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    PaymentStreamFixingDateBusinessDayConvention[PaymentStreamFixingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    PaymentStreamFixingDateBusinessDayConvention[PaymentStreamFixingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    PaymentStreamFixingDateBusinessDayConvention[PaymentStreamFixingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(PaymentStreamFixingDateBusinessDayConvention = exports.PaymentStreamFixingDateBusinessDayConvention || (exports.PaymentStreamFixingDateBusinessDayConvention = {}));
var PaymentStreamFixingDateOffsetUnit;
(function (PaymentStreamFixingDateOffsetUnit) {
    PaymentStreamFixingDateOffsetUnit["Day"] = "D";
    PaymentStreamFixingDateOffsetUnit["Week"] = "Wk";
    PaymentStreamFixingDateOffsetUnit["Month"] = "Mo";
    PaymentStreamFixingDateOffsetUnit["Year"] = "Yr";
})(PaymentStreamFixingDateOffsetUnit = exports.PaymentStreamFixingDateOffsetUnit || (exports.PaymentStreamFixingDateOffsetUnit = {}));
var PaymentStreamFixingDateOffsetDayType;
(function (PaymentStreamFixingDateOffsetDayType) {
    PaymentStreamFixingDateOffsetDayType[PaymentStreamFixingDateOffsetDayType["Business"] = 0] = "Business";
    PaymentStreamFixingDateOffsetDayType[PaymentStreamFixingDateOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentStreamFixingDateOffsetDayType[PaymentStreamFixingDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStreamFixingDateOffsetDayType[PaymentStreamFixingDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStreamFixingDateOffsetDayType[PaymentStreamFixingDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStreamFixingDateOffsetDayType[PaymentStreamFixingDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStreamFixingDateOffsetDayType = exports.PaymentStreamFixingDateOffsetDayType || (exports.PaymentStreamFixingDateOffsetDayType = {}));
var PaymentStreamRateCutoffDateOffsetUnit;
(function (PaymentStreamRateCutoffDateOffsetUnit) {
    PaymentStreamRateCutoffDateOffsetUnit["Day"] = "D";
    PaymentStreamRateCutoffDateOffsetUnit["Week"] = "Wk";
    PaymentStreamRateCutoffDateOffsetUnit["Month"] = "Mo";
    PaymentStreamRateCutoffDateOffsetUnit["Year"] = "Yr";
})(PaymentStreamRateCutoffDateOffsetUnit = exports.PaymentStreamRateCutoffDateOffsetUnit || (exports.PaymentStreamRateCutoffDateOffsetUnit = {}));
var PaymentStreamRateCutoffDateOffsetDayType;
(function (PaymentStreamRateCutoffDateOffsetDayType) {
    PaymentStreamRateCutoffDateOffsetDayType[PaymentStreamRateCutoffDateOffsetDayType["Business"] = 0] = "Business";
    PaymentStreamRateCutoffDateOffsetDayType[PaymentStreamRateCutoffDateOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentStreamRateCutoffDateOffsetDayType[PaymentStreamRateCutoffDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStreamRateCutoffDateOffsetDayType[PaymentStreamRateCutoffDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStreamRateCutoffDateOffsetDayType[PaymentStreamRateCutoffDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStreamRateCutoffDateOffsetDayType[PaymentStreamRateCutoffDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStreamRateCutoffDateOffsetDayType = exports.PaymentStreamRateCutoffDateOffsetDayType || (exports.PaymentStreamRateCutoffDateOffsetDayType = {}));
var PaymentStreamRateIndexSource;
(function (PaymentStreamRateIndexSource) {
    PaymentStreamRateIndexSource[PaymentStreamRateIndexSource["Bloomberg"] = 0] = "Bloomberg";
    PaymentStreamRateIndexSource[PaymentStreamRateIndexSource["Reuters"] = 1] = "Reuters";
    PaymentStreamRateIndexSource[PaymentStreamRateIndexSource["Telerate"] = 2] = "Telerate";
    PaymentStreamRateIndexSource[PaymentStreamRateIndexSource["Other"] = 99] = "Other";
})(PaymentStreamRateIndexSource = exports.PaymentStreamRateIndexSource || (exports.PaymentStreamRateIndexSource = {}));
var PaymentStreamRateIndexCurveUnit;
(function (PaymentStreamRateIndexCurveUnit) {
    PaymentStreamRateIndexCurveUnit["Day"] = "D";
    PaymentStreamRateIndexCurveUnit["Week"] = "Wk";
    PaymentStreamRateIndexCurveUnit["Month"] = "Mo";
    PaymentStreamRateIndexCurveUnit["Year"] = "Yr";
})(PaymentStreamRateIndexCurveUnit = exports.PaymentStreamRateIndexCurveUnit || (exports.PaymentStreamRateIndexCurveUnit = {}));
var PaymentStreamRateSpreadPositionType;
(function (PaymentStreamRateSpreadPositionType) {
    PaymentStreamRateSpreadPositionType[PaymentStreamRateSpreadPositionType["Short"] = 0] = "Short";
    PaymentStreamRateSpreadPositionType[PaymentStreamRateSpreadPositionType["Long"] = 1] = "Long";
})(PaymentStreamRateSpreadPositionType = exports.PaymentStreamRateSpreadPositionType || (exports.PaymentStreamRateSpreadPositionType = {}));
var PaymentStreamRateTreatment;
(function (PaymentStreamRateTreatment) {
    PaymentStreamRateTreatment[PaymentStreamRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    PaymentStreamRateTreatment[PaymentStreamRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(PaymentStreamRateTreatment = exports.PaymentStreamRateTreatment || (exports.PaymentStreamRateTreatment = {}));
var PaymentStreamCapRateBuySide;
(function (PaymentStreamCapRateBuySide) {
    PaymentStreamCapRateBuySide[PaymentStreamCapRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    PaymentStreamCapRateBuySide[PaymentStreamCapRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(PaymentStreamCapRateBuySide = exports.PaymentStreamCapRateBuySide || (exports.PaymentStreamCapRateBuySide = {}));
var PaymentStreamCapRateSellSide;
(function (PaymentStreamCapRateSellSide) {
    PaymentStreamCapRateSellSide[PaymentStreamCapRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    PaymentStreamCapRateSellSide[PaymentStreamCapRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(PaymentStreamCapRateSellSide = exports.PaymentStreamCapRateSellSide || (exports.PaymentStreamCapRateSellSide = {}));
var PaymentStreamFloorRateBuySide;
(function (PaymentStreamFloorRateBuySide) {
    PaymentStreamFloorRateBuySide[PaymentStreamFloorRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    PaymentStreamFloorRateBuySide[PaymentStreamFloorRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(PaymentStreamFloorRateBuySide = exports.PaymentStreamFloorRateBuySide || (exports.PaymentStreamFloorRateBuySide = {}));
var PaymentStreamFloorRateSellSide;
(function (PaymentStreamFloorRateSellSide) {
    PaymentStreamFloorRateSellSide[PaymentStreamFloorRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    PaymentStreamFloorRateSellSide[PaymentStreamFloorRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(PaymentStreamFloorRateSellSide = exports.PaymentStreamFloorRateSellSide || (exports.PaymentStreamFloorRateSellSide = {}));
var PaymentStreamFinalRateRoundingDirection;
(function (PaymentStreamFinalRateRoundingDirection) {
    PaymentStreamFinalRateRoundingDirection["RoundToNearest"] = "0";
    PaymentStreamFinalRateRoundingDirection["RoundDown"] = "1";
    PaymentStreamFinalRateRoundingDirection["RoundUp"] = "2";
})(PaymentStreamFinalRateRoundingDirection = exports.PaymentStreamFinalRateRoundingDirection || (exports.PaymentStreamFinalRateRoundingDirection = {}));
var PaymentStreamAveragingMethod;
(function (PaymentStreamAveragingMethod) {
    PaymentStreamAveragingMethod[PaymentStreamAveragingMethod["Unweighted"] = 0] = "Unweighted";
    PaymentStreamAveragingMethod[PaymentStreamAveragingMethod["Weighted"] = 1] = "Weighted";
})(PaymentStreamAveragingMethod = exports.PaymentStreamAveragingMethod || (exports.PaymentStreamAveragingMethod = {}));
var PaymentStreamNegativeRateTreatment;
(function (PaymentStreamNegativeRateTreatment) {
    PaymentStreamNegativeRateTreatment[PaymentStreamNegativeRateTreatment["ZeroInterestRateMethod"] = 0] = "ZeroInterestRateMethod";
    PaymentStreamNegativeRateTreatment[PaymentStreamNegativeRateTreatment["NegativeInterestRateMethod"] = 1] = "NegativeInterestRateMethod";
})(PaymentStreamNegativeRateTreatment = exports.PaymentStreamNegativeRateTreatment || (exports.PaymentStreamNegativeRateTreatment = {}));
var PaymentStreamInflationLagUnit;
(function (PaymentStreamInflationLagUnit) {
    PaymentStreamInflationLagUnit["Day"] = "D";
    PaymentStreamInflationLagUnit["Week"] = "Wk";
    PaymentStreamInflationLagUnit["Month"] = "Mo";
    PaymentStreamInflationLagUnit["Year"] = "Yr";
})(PaymentStreamInflationLagUnit = exports.PaymentStreamInflationLagUnit || (exports.PaymentStreamInflationLagUnit = {}));
var PaymentStreamInflationLagDayType;
(function (PaymentStreamInflationLagDayType) {
    PaymentStreamInflationLagDayType[PaymentStreamInflationLagDayType["Business"] = 0] = "Business";
    PaymentStreamInflationLagDayType[PaymentStreamInflationLagDayType["Calendar"] = 1] = "Calendar";
    PaymentStreamInflationLagDayType[PaymentStreamInflationLagDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStreamInflationLagDayType[PaymentStreamInflationLagDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStreamInflationLagDayType[PaymentStreamInflationLagDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStreamInflationLagDayType[PaymentStreamInflationLagDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStreamInflationLagDayType = exports.PaymentStreamInflationLagDayType || (exports.PaymentStreamInflationLagDayType = {}));
var PaymentStreamInflationInterpolationMethod;
(function (PaymentStreamInflationInterpolationMethod) {
    PaymentStreamInflationInterpolationMethod[PaymentStreamInflationInterpolationMethod["None"] = 0] = "None";
    PaymentStreamInflationInterpolationMethod[PaymentStreamInflationInterpolationMethod["LinearZeroYield"] = 1] = "LinearZeroYield";
})(PaymentStreamInflationInterpolationMethod = exports.PaymentStreamInflationInterpolationMethod || (exports.PaymentStreamInflationInterpolationMethod = {}));
var PaymentStreamInflationIndexSource;
(function (PaymentStreamInflationIndexSource) {
    PaymentStreamInflationIndexSource[PaymentStreamInflationIndexSource["Bloomberg"] = 0] = "Bloomberg";
    PaymentStreamInflationIndexSource[PaymentStreamInflationIndexSource["Reuters"] = 1] = "Reuters";
    PaymentStreamInflationIndexSource[PaymentStreamInflationIndexSource["Telerate"] = 2] = "Telerate";
    PaymentStreamInflationIndexSource[PaymentStreamInflationIndexSource["Other"] = 99] = "Other";
})(PaymentStreamInflationIndexSource = exports.PaymentStreamInflationIndexSource || (exports.PaymentStreamInflationIndexSource = {}));
var PaymentStreamFRADiscounting;
(function (PaymentStreamFRADiscounting) {
    PaymentStreamFRADiscounting[PaymentStreamFRADiscounting["None"] = 0] = "None";
    PaymentStreamFRADiscounting[PaymentStreamFRADiscounting["InternationalSwapsAndDerivativesAssociationIsda"] = 1] = "InternationalSwapsAndDerivativesAssociationIsda";
    PaymentStreamFRADiscounting[PaymentStreamFRADiscounting["AustralianFinancialMarketsAssociationAfma"] = 2] = "AustralianFinancialMarketsAssociationAfma";
})(PaymentStreamFRADiscounting = exports.PaymentStreamFRADiscounting || (exports.PaymentStreamFRADiscounting = {}));
var PaymentStreamNonDeliverableFixingDatesBusinessDayConvention;
(function (PaymentStreamNonDeliverableFixingDatesBusinessDayConvention) {
    PaymentStreamNonDeliverableFixingDatesBusinessDayConvention[PaymentStreamNonDeliverableFixingDatesBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    PaymentStreamNonDeliverableFixingDatesBusinessDayConvention[PaymentStreamNonDeliverableFixingDatesBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    PaymentStreamNonDeliverableFixingDatesBusinessDayConvention[PaymentStreamNonDeliverableFixingDatesBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    PaymentStreamNonDeliverableFixingDatesBusinessDayConvention[PaymentStreamNonDeliverableFixingDatesBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    PaymentStreamNonDeliverableFixingDatesBusinessDayConvention[PaymentStreamNonDeliverableFixingDatesBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    PaymentStreamNonDeliverableFixingDatesBusinessDayConvention[PaymentStreamNonDeliverableFixingDatesBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    PaymentStreamNonDeliverableFixingDatesBusinessDayConvention[PaymentStreamNonDeliverableFixingDatesBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    PaymentStreamNonDeliverableFixingDatesBusinessDayConvention[PaymentStreamNonDeliverableFixingDatesBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(PaymentStreamNonDeliverableFixingDatesBusinessDayConvention = exports.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention || (exports.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention = {}));
var PaymentStreamNonDeliverableFixingDatesOffsetUnit;
(function (PaymentStreamNonDeliverableFixingDatesOffsetUnit) {
    PaymentStreamNonDeliverableFixingDatesOffsetUnit["Day"] = "D";
    PaymentStreamNonDeliverableFixingDatesOffsetUnit["Week"] = "Wk";
    PaymentStreamNonDeliverableFixingDatesOffsetUnit["Month"] = "Mo";
    PaymentStreamNonDeliverableFixingDatesOffsetUnit["Year"] = "Yr";
})(PaymentStreamNonDeliverableFixingDatesOffsetUnit = exports.PaymentStreamNonDeliverableFixingDatesOffsetUnit || (exports.PaymentStreamNonDeliverableFixingDatesOffsetUnit = {}));
var PaymentStreamNonDeliverableFixingDatesOffsetDayType;
(function (PaymentStreamNonDeliverableFixingDatesOffsetDayType) {
    PaymentStreamNonDeliverableFixingDatesOffsetDayType[PaymentStreamNonDeliverableFixingDatesOffsetDayType["Business"] = 0] = "Business";
    PaymentStreamNonDeliverableFixingDatesOffsetDayType[PaymentStreamNonDeliverableFixingDatesOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentStreamNonDeliverableFixingDatesOffsetDayType[PaymentStreamNonDeliverableFixingDatesOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStreamNonDeliverableFixingDatesOffsetDayType[PaymentStreamNonDeliverableFixingDatesOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStreamNonDeliverableFixingDatesOffsetDayType[PaymentStreamNonDeliverableFixingDatesOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStreamNonDeliverableFixingDatesOffsetDayType[PaymentStreamNonDeliverableFixingDatesOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStreamNonDeliverableFixingDatesOffsetDayType = exports.PaymentStreamNonDeliverableFixingDatesOffsetDayType || (exports.PaymentStreamNonDeliverableFixingDatesOffsetDayType = {}));
var NonDeliverableFixingDateType;
(function (NonDeliverableFixingDateType) {
    NonDeliverableFixingDateType[NonDeliverableFixingDateType["Unadjusted"] = 0] = "Unadjusted";
    NonDeliverableFixingDateType[NonDeliverableFixingDateType["Adjusted"] = 1] = "Adjusted";
})(NonDeliverableFixingDateType = exports.NonDeliverableFixingDateType || (exports.NonDeliverableFixingDateType = {}));
var PaymentScheduleType;
(function (PaymentScheduleType) {
    PaymentScheduleType[PaymentScheduleType["Notional"] = 0] = "Notional";
    PaymentScheduleType[PaymentScheduleType["CashFlow"] = 1] = "CashFlow";
    PaymentScheduleType[PaymentScheduleType["FxLinkedNotional"] = 2] = "FxLinkedNotional";
    PaymentScheduleType[PaymentScheduleType["FixedRate"] = 3] = "FixedRate";
    PaymentScheduleType[PaymentScheduleType["FutureValueNotional"] = 4] = "FutureValueNotional";
    PaymentScheduleType[PaymentScheduleType["KnownAmount"] = 5] = "KnownAmount";
    PaymentScheduleType[PaymentScheduleType["FloatingRateMultiplier"] = 6] = "FloatingRateMultiplier";
    PaymentScheduleType[PaymentScheduleType["Spread"] = 7] = "Spread";
    PaymentScheduleType[PaymentScheduleType["CapRate"] = 8] = "CapRate";
    PaymentScheduleType[PaymentScheduleType["FloorRate"] = 9] = "FloorRate";
    PaymentScheduleType[PaymentScheduleType["NonDeliverableSettlementPaymentDates"] = 10] = "NonDeliverableSettlementPaymentDates";
    PaymentScheduleType[PaymentScheduleType["NonDeliverableSettlementCalculationDates"] = 11] = "NonDeliverableSettlementCalculationDates";
    PaymentScheduleType[PaymentScheduleType["NonDeliverableFixingDates"] = 12] = "NonDeliverableFixingDates";
    PaymentScheduleType[PaymentScheduleType["SettlementPeriodNotional"] = 13] = "SettlementPeriodNotional";
    PaymentScheduleType[PaymentScheduleType["SettlementPeriodPrice"] = 14] = "SettlementPeriodPrice";
    PaymentScheduleType[PaymentScheduleType["CalculationPeriod"] = 15] = "CalculationPeriod";
    PaymentScheduleType[PaymentScheduleType["DividendAccrualRateMultiplier"] = 16] = "DividendAccrualRateMultiplier";
    PaymentScheduleType[PaymentScheduleType["DividendAccrualRateSpread"] = 17] = "DividendAccrualRateSpread";
    PaymentScheduleType[PaymentScheduleType["DividendAccrualCapRate"] = 18] = "DividendAccrualCapRate";
    PaymentScheduleType[PaymentScheduleType["DividendAccrualFloorRate"] = 19] = "DividendAccrualFloorRate";
    PaymentScheduleType[PaymentScheduleType["CompoundingRateMultiplier"] = 20] = "CompoundingRateMultiplier";
    PaymentScheduleType[PaymentScheduleType["CompoundingRateSpread"] = 21] = "CompoundingRateSpread";
    PaymentScheduleType[PaymentScheduleType["CompoundingCapRate"] = 22] = "CompoundingCapRate";
    PaymentScheduleType[PaymentScheduleType["CompoundingFloorRate"] = 23] = "CompoundingFloorRate";
})(PaymentScheduleType = exports.PaymentScheduleType || (exports.PaymentScheduleType = {}));
var PaymentScheduleStubType;
(function (PaymentScheduleStubType) {
    PaymentScheduleStubType[PaymentScheduleStubType["Initial"] = 0] = "Initial";
    PaymentScheduleStubType[PaymentScheduleStubType["Final"] = 1] = "Final";
    PaymentScheduleStubType[PaymentScheduleStubType["CompoundingInitial"] = 2] = "CompoundingInitial";
    PaymentScheduleStubType[PaymentScheduleStubType["CompoundingFinal"] = 3] = "CompoundingFinal";
})(PaymentScheduleStubType = exports.PaymentScheduleStubType || (exports.PaymentScheduleStubType = {}));
var PaymentSchedulePaySide;
(function (PaymentSchedulePaySide) {
    PaymentSchedulePaySide[PaymentSchedulePaySide["Buy"] = 1] = "Buy";
    PaymentSchedulePaySide[PaymentSchedulePaySide["Sell"] = 2] = "Sell";
})(PaymentSchedulePaySide = exports.PaymentSchedulePaySide || (exports.PaymentSchedulePaySide = {}));
var PaymentScheduleReceiveSide;
(function (PaymentScheduleReceiveSide) {
    PaymentScheduleReceiveSide[PaymentScheduleReceiveSide["Buy"] = 1] = "Buy";
    PaymentScheduleReceiveSide[PaymentScheduleReceiveSide["Sell"] = 2] = "Sell";
})(PaymentScheduleReceiveSide = exports.PaymentScheduleReceiveSide || (exports.PaymentScheduleReceiveSide = {}));
var PaymentScheduleRateSpreadPositionType;
(function (PaymentScheduleRateSpreadPositionType) {
    PaymentScheduleRateSpreadPositionType[PaymentScheduleRateSpreadPositionType["Short"] = 0] = "Short";
    PaymentScheduleRateSpreadPositionType[PaymentScheduleRateSpreadPositionType["Long"] = 1] = "Long";
})(PaymentScheduleRateSpreadPositionType = exports.PaymentScheduleRateSpreadPositionType || (exports.PaymentScheduleRateSpreadPositionType = {}));
var PaymentScheduleRateTreatment;
(function (PaymentScheduleRateTreatment) {
    PaymentScheduleRateTreatment[PaymentScheduleRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    PaymentScheduleRateTreatment[PaymentScheduleRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(PaymentScheduleRateTreatment = exports.PaymentScheduleRateTreatment || (exports.PaymentScheduleRateTreatment = {}));
var PaymentScheduleStepFrequencyUnit;
(function (PaymentScheduleStepFrequencyUnit) {
    PaymentScheduleStepFrequencyUnit["Day"] = "D";
    PaymentScheduleStepFrequencyUnit["Week"] = "Wk";
    PaymentScheduleStepFrequencyUnit["Month"] = "Mo";
    PaymentScheduleStepFrequencyUnit["Year"] = "Yr";
    PaymentScheduleStepFrequencyUnit["Hour"] = "H";
    PaymentScheduleStepFrequencyUnit["Minute"] = "Min";
    PaymentScheduleStepFrequencyUnit["Second"] = "S";
    PaymentScheduleStepFrequencyUnit["Term"] = "T";
})(PaymentScheduleStepFrequencyUnit = exports.PaymentScheduleStepFrequencyUnit || (exports.PaymentScheduleStepFrequencyUnit = {}));
var PaymentScheduleStepRelativeTo;
(function (PaymentScheduleStepRelativeTo) {
    PaymentScheduleStepRelativeTo[PaymentScheduleStepRelativeTo["Initial"] = 0] = "Initial";
    PaymentScheduleStepRelativeTo[PaymentScheduleStepRelativeTo["Previous"] = 1] = "Previous";
})(PaymentScheduleStepRelativeTo = exports.PaymentScheduleStepRelativeTo || (exports.PaymentScheduleStepRelativeTo = {}));
var PaymentScheduleFixingDateBusinessDayConvention;
(function (PaymentScheduleFixingDateBusinessDayConvention) {
    PaymentScheduleFixingDateBusinessDayConvention[PaymentScheduleFixingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    PaymentScheduleFixingDateBusinessDayConvention[PaymentScheduleFixingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    PaymentScheduleFixingDateBusinessDayConvention[PaymentScheduleFixingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    PaymentScheduleFixingDateBusinessDayConvention[PaymentScheduleFixingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    PaymentScheduleFixingDateBusinessDayConvention[PaymentScheduleFixingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    PaymentScheduleFixingDateBusinessDayConvention[PaymentScheduleFixingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    PaymentScheduleFixingDateBusinessDayConvention[PaymentScheduleFixingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    PaymentScheduleFixingDateBusinessDayConvention[PaymentScheduleFixingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(PaymentScheduleFixingDateBusinessDayConvention = exports.PaymentScheduleFixingDateBusinessDayConvention || (exports.PaymentScheduleFixingDateBusinessDayConvention = {}));
var PaymentScheduleFixingDateOffsetUnit;
(function (PaymentScheduleFixingDateOffsetUnit) {
    PaymentScheduleFixingDateOffsetUnit["Day"] = "D";
    PaymentScheduleFixingDateOffsetUnit["Week"] = "Wk";
    PaymentScheduleFixingDateOffsetUnit["Month"] = "Mo";
    PaymentScheduleFixingDateOffsetUnit["Year"] = "Yr";
})(PaymentScheduleFixingDateOffsetUnit = exports.PaymentScheduleFixingDateOffsetUnit || (exports.PaymentScheduleFixingDateOffsetUnit = {}));
var PaymentScheduleFixingDateOffsetDayType;
(function (PaymentScheduleFixingDateOffsetDayType) {
    PaymentScheduleFixingDateOffsetDayType[PaymentScheduleFixingDateOffsetDayType["Business"] = 0] = "Business";
    PaymentScheduleFixingDateOffsetDayType[PaymentScheduleFixingDateOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentScheduleFixingDateOffsetDayType[PaymentScheduleFixingDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentScheduleFixingDateOffsetDayType[PaymentScheduleFixingDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentScheduleFixingDateOffsetDayType[PaymentScheduleFixingDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentScheduleFixingDateOffsetDayType[PaymentScheduleFixingDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentScheduleFixingDateOffsetDayType = exports.PaymentScheduleFixingDateOffsetDayType || (exports.PaymentScheduleFixingDateOffsetDayType = {}));
var PaymentScheduleInterimExchangeDatesBusinessDayConvention;
(function (PaymentScheduleInterimExchangeDatesBusinessDayConvention) {
    PaymentScheduleInterimExchangeDatesBusinessDayConvention[PaymentScheduleInterimExchangeDatesBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    PaymentScheduleInterimExchangeDatesBusinessDayConvention[PaymentScheduleInterimExchangeDatesBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    PaymentScheduleInterimExchangeDatesBusinessDayConvention[PaymentScheduleInterimExchangeDatesBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    PaymentScheduleInterimExchangeDatesBusinessDayConvention[PaymentScheduleInterimExchangeDatesBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    PaymentScheduleInterimExchangeDatesBusinessDayConvention[PaymentScheduleInterimExchangeDatesBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    PaymentScheduleInterimExchangeDatesBusinessDayConvention[PaymentScheduleInterimExchangeDatesBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    PaymentScheduleInterimExchangeDatesBusinessDayConvention[PaymentScheduleInterimExchangeDatesBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    PaymentScheduleInterimExchangeDatesBusinessDayConvention[PaymentScheduleInterimExchangeDatesBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(PaymentScheduleInterimExchangeDatesBusinessDayConvention = exports.PaymentScheduleInterimExchangeDatesBusinessDayConvention || (exports.PaymentScheduleInterimExchangeDatesBusinessDayConvention = {}));
var PaymentScheduleInterimExchangeDatesOffsetUnit;
(function (PaymentScheduleInterimExchangeDatesOffsetUnit) {
    PaymentScheduleInterimExchangeDatesOffsetUnit["Day"] = "D";
    PaymentScheduleInterimExchangeDatesOffsetUnit["Week"] = "Wk";
    PaymentScheduleInterimExchangeDatesOffsetUnit["Month"] = "Mo";
    PaymentScheduleInterimExchangeDatesOffsetUnit["Year"] = "Yr";
})(PaymentScheduleInterimExchangeDatesOffsetUnit = exports.PaymentScheduleInterimExchangeDatesOffsetUnit || (exports.PaymentScheduleInterimExchangeDatesOffsetUnit = {}));
var PaymentScheduleInterimExchangeDatesOffsetDayType;
(function (PaymentScheduleInterimExchangeDatesOffsetDayType) {
    PaymentScheduleInterimExchangeDatesOffsetDayType[PaymentScheduleInterimExchangeDatesOffsetDayType["Business"] = 0] = "Business";
    PaymentScheduleInterimExchangeDatesOffsetDayType[PaymentScheduleInterimExchangeDatesOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentScheduleInterimExchangeDatesOffsetDayType[PaymentScheduleInterimExchangeDatesOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentScheduleInterimExchangeDatesOffsetDayType[PaymentScheduleInterimExchangeDatesOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentScheduleInterimExchangeDatesOffsetDayType[PaymentScheduleInterimExchangeDatesOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentScheduleInterimExchangeDatesOffsetDayType[PaymentScheduleInterimExchangeDatesOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentScheduleInterimExchangeDatesOffsetDayType = exports.PaymentScheduleInterimExchangeDatesOffsetDayType || (exports.PaymentScheduleInterimExchangeDatesOffsetDayType = {}));
var PaymentScheduleRateSource;
(function (PaymentScheduleRateSource) {
    PaymentScheduleRateSource[PaymentScheduleRateSource["Bloomberg"] = 0] = "Bloomberg";
    PaymentScheduleRateSource[PaymentScheduleRateSource["Reuters"] = 1] = "Reuters";
    PaymentScheduleRateSource[PaymentScheduleRateSource["Telerate"] = 2] = "Telerate";
    PaymentScheduleRateSource[PaymentScheduleRateSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    PaymentScheduleRateSource[PaymentScheduleRateSource["Other"] = 99] = "Other";
})(PaymentScheduleRateSource = exports.PaymentScheduleRateSource || (exports.PaymentScheduleRateSource = {}));
var PaymentScheduleRateSourceType;
(function (PaymentScheduleRateSourceType) {
    PaymentScheduleRateSourceType[PaymentScheduleRateSourceType["Primary"] = 0] = "Primary";
    PaymentScheduleRateSourceType[PaymentScheduleRateSourceType["Secondary"] = 1] = "Secondary";
})(PaymentScheduleRateSourceType = exports.PaymentScheduleRateSourceType || (exports.PaymentScheduleRateSourceType = {}));
var PaymentStubType;
(function (PaymentStubType) {
    PaymentStubType[PaymentStubType["Initial"] = 0] = "Initial";
    PaymentStubType[PaymentStubType["Final"] = 1] = "Final";
    PaymentStubType[PaymentStubType["CompoundingInitial"] = 2] = "CompoundingInitial";
    PaymentStubType[PaymentStubType["CompoundingFinal"] = 3] = "CompoundingFinal";
})(PaymentStubType = exports.PaymentStubType || (exports.PaymentStubType = {}));
var PaymentStubLength;
(function (PaymentStubLength) {
    PaymentStubLength[PaymentStubLength["Short"] = 0] = "Short";
    PaymentStubLength[PaymentStubLength["Long"] = 1] = "Long";
})(PaymentStubLength = exports.PaymentStubLength || (exports.PaymentStubLength = {}));
var PaymentStubIndexSource;
(function (PaymentStubIndexSource) {
    PaymentStubIndexSource[PaymentStubIndexSource["Bloomberg"] = 0] = "Bloomberg";
    PaymentStubIndexSource[PaymentStubIndexSource["Reuters"] = 1] = "Reuters";
    PaymentStubIndexSource[PaymentStubIndexSource["Telerate"] = 2] = "Telerate";
    PaymentStubIndexSource[PaymentStubIndexSource["Other"] = 99] = "Other";
})(PaymentStubIndexSource = exports.PaymentStubIndexSource || (exports.PaymentStubIndexSource = {}));
var PaymentStubIndexCurveUnit;
(function (PaymentStubIndexCurveUnit) {
    PaymentStubIndexCurveUnit["Day"] = "D";
    PaymentStubIndexCurveUnit["Week"] = "Wk";
    PaymentStubIndexCurveUnit["Month"] = "Mo";
    PaymentStubIndexCurveUnit["Year"] = "Yr";
})(PaymentStubIndexCurveUnit = exports.PaymentStubIndexCurveUnit || (exports.PaymentStubIndexCurveUnit = {}));
var PaymentStubIndexRateSpreadPositionType;
(function (PaymentStubIndexRateSpreadPositionType) {
    PaymentStubIndexRateSpreadPositionType[PaymentStubIndexRateSpreadPositionType["Short"] = 0] = "Short";
    PaymentStubIndexRateSpreadPositionType[PaymentStubIndexRateSpreadPositionType["Long"] = 1] = "Long";
})(PaymentStubIndexRateSpreadPositionType = exports.PaymentStubIndexRateSpreadPositionType || (exports.PaymentStubIndexRateSpreadPositionType = {}));
var PaymentStubIndexRateTreatment;
(function (PaymentStubIndexRateTreatment) {
    PaymentStubIndexRateTreatment[PaymentStubIndexRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    PaymentStubIndexRateTreatment[PaymentStubIndexRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(PaymentStubIndexRateTreatment = exports.PaymentStubIndexRateTreatment || (exports.PaymentStubIndexRateTreatment = {}));
var PaymentStubIndexCapRateBuySide;
(function (PaymentStubIndexCapRateBuySide) {
    PaymentStubIndexCapRateBuySide[PaymentStubIndexCapRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    PaymentStubIndexCapRateBuySide[PaymentStubIndexCapRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(PaymentStubIndexCapRateBuySide = exports.PaymentStubIndexCapRateBuySide || (exports.PaymentStubIndexCapRateBuySide = {}));
var PaymentStubIndexCapRateSellSide;
(function (PaymentStubIndexCapRateSellSide) {
    PaymentStubIndexCapRateSellSide[PaymentStubIndexCapRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    PaymentStubIndexCapRateSellSide[PaymentStubIndexCapRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(PaymentStubIndexCapRateSellSide = exports.PaymentStubIndexCapRateSellSide || (exports.PaymentStubIndexCapRateSellSide = {}));
var PaymentStubIndexFloorRateBuySide;
(function (PaymentStubIndexFloorRateBuySide) {
    PaymentStubIndexFloorRateBuySide[PaymentStubIndexFloorRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    PaymentStubIndexFloorRateBuySide[PaymentStubIndexFloorRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(PaymentStubIndexFloorRateBuySide = exports.PaymentStubIndexFloorRateBuySide || (exports.PaymentStubIndexFloorRateBuySide = {}));
var PaymentStubIndexFloorRateSellSide;
(function (PaymentStubIndexFloorRateSellSide) {
    PaymentStubIndexFloorRateSellSide[PaymentStubIndexFloorRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    PaymentStubIndexFloorRateSellSide[PaymentStubIndexFloorRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(PaymentStubIndexFloorRateSellSide = exports.PaymentStubIndexFloorRateSellSide || (exports.PaymentStubIndexFloorRateSellSide = {}));
var PaymentStubIndex2Source;
(function (PaymentStubIndex2Source) {
    PaymentStubIndex2Source[PaymentStubIndex2Source["Bloomberg"] = 0] = "Bloomberg";
    PaymentStubIndex2Source[PaymentStubIndex2Source["Reuters"] = 1] = "Reuters";
    PaymentStubIndex2Source[PaymentStubIndex2Source["Telerate"] = 2] = "Telerate";
    PaymentStubIndex2Source[PaymentStubIndex2Source["Other"] = 99] = "Other";
})(PaymentStubIndex2Source = exports.PaymentStubIndex2Source || (exports.PaymentStubIndex2Source = {}));
var PaymentStubIndex2CurveUnit;
(function (PaymentStubIndex2CurveUnit) {
    PaymentStubIndex2CurveUnit["Day"] = "D";
    PaymentStubIndex2CurveUnit["Week"] = "Wk";
    PaymentStubIndex2CurveUnit["Month"] = "Mo";
    PaymentStubIndex2CurveUnit["Year"] = "Yr";
})(PaymentStubIndex2CurveUnit = exports.PaymentStubIndex2CurveUnit || (exports.PaymentStubIndex2CurveUnit = {}));
var PaymentStubIndex2RateSpreadPositionType;
(function (PaymentStubIndex2RateSpreadPositionType) {
    PaymentStubIndex2RateSpreadPositionType[PaymentStubIndex2RateSpreadPositionType["Short"] = 0] = "Short";
    PaymentStubIndex2RateSpreadPositionType[PaymentStubIndex2RateSpreadPositionType["Long"] = 1] = "Long";
})(PaymentStubIndex2RateSpreadPositionType = exports.PaymentStubIndex2RateSpreadPositionType || (exports.PaymentStubIndex2RateSpreadPositionType = {}));
var PaymentStubIndex2RateTreatment;
(function (PaymentStubIndex2RateTreatment) {
    PaymentStubIndex2RateTreatment[PaymentStubIndex2RateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    PaymentStubIndex2RateTreatment[PaymentStubIndex2RateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(PaymentStubIndex2RateTreatment = exports.PaymentStubIndex2RateTreatment || (exports.PaymentStubIndex2RateTreatment = {}));
var UnderlyingSettlRateFallbackRateSource;
(function (UnderlyingSettlRateFallbackRateSource) {
    UnderlyingSettlRateFallbackRateSource[UnderlyingSettlRateFallbackRateSource["Bloomberg"] = 0] = "Bloomberg";
    UnderlyingSettlRateFallbackRateSource[UnderlyingSettlRateFallbackRateSource["Reuters"] = 1] = "Reuters";
    UnderlyingSettlRateFallbackRateSource[UnderlyingSettlRateFallbackRateSource["Telerate"] = 2] = "Telerate";
    UnderlyingSettlRateFallbackRateSource[UnderlyingSettlRateFallbackRateSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    UnderlyingSettlRateFallbackRateSource[UnderlyingSettlRateFallbackRateSource["Other"] = 99] = "Other";
})(UnderlyingSettlRateFallbackRateSource = exports.UnderlyingSettlRateFallbackRateSource || (exports.UnderlyingSettlRateFallbackRateSource = {}));
var LegSettlRatePostponementCalculationAgent;
(function (LegSettlRatePostponementCalculationAgent) {
    LegSettlRatePostponementCalculationAgent[LegSettlRatePostponementCalculationAgent["ExercisingParty"] = 0] = "ExercisingParty";
    LegSettlRatePostponementCalculationAgent[LegSettlRatePostponementCalculationAgent["NonExercisingParty"] = 1] = "NonExercisingParty";
    LegSettlRatePostponementCalculationAgent[LegSettlRatePostponementCalculationAgent["AsSpecifiedInTheMasterAgreement"] = 2] = "AsSpecifiedInTheMasterAgreement";
    LegSettlRatePostponementCalculationAgent[LegSettlRatePostponementCalculationAgent["AsSpecifiedInTheStandardTermsSupplement"] = 3] = "AsSpecifiedInTheStandardTermsSupplement";
})(LegSettlRatePostponementCalculationAgent = exports.LegSettlRatePostponementCalculationAgent || (exports.LegSettlRatePostponementCalculationAgent = {}));
var StreamEffectiveDateBusinessDayConvention;
(function (StreamEffectiveDateBusinessDayConvention) {
    StreamEffectiveDateBusinessDayConvention[StreamEffectiveDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    StreamEffectiveDateBusinessDayConvention[StreamEffectiveDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    StreamEffectiveDateBusinessDayConvention[StreamEffectiveDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    StreamEffectiveDateBusinessDayConvention[StreamEffectiveDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    StreamEffectiveDateBusinessDayConvention[StreamEffectiveDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    StreamEffectiveDateBusinessDayConvention[StreamEffectiveDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    StreamEffectiveDateBusinessDayConvention[StreamEffectiveDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    StreamEffectiveDateBusinessDayConvention[StreamEffectiveDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(StreamEffectiveDateBusinessDayConvention = exports.StreamEffectiveDateBusinessDayConvention || (exports.StreamEffectiveDateBusinessDayConvention = {}));
var StreamEffectiveDateOffsetUnit;
(function (StreamEffectiveDateOffsetUnit) {
    StreamEffectiveDateOffsetUnit["Day"] = "D";
    StreamEffectiveDateOffsetUnit["Week"] = "Wk";
    StreamEffectiveDateOffsetUnit["Month"] = "Mo";
    StreamEffectiveDateOffsetUnit["Year"] = "Yr";
})(StreamEffectiveDateOffsetUnit = exports.StreamEffectiveDateOffsetUnit || (exports.StreamEffectiveDateOffsetUnit = {}));
var StreamEffectiveDateOffsetDayType;
(function (StreamEffectiveDateOffsetDayType) {
    StreamEffectiveDateOffsetDayType[StreamEffectiveDateOffsetDayType["Business"] = 0] = "Business";
    StreamEffectiveDateOffsetDayType[StreamEffectiveDateOffsetDayType["Calendar"] = 1] = "Calendar";
    StreamEffectiveDateOffsetDayType[StreamEffectiveDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    StreamEffectiveDateOffsetDayType[StreamEffectiveDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    StreamEffectiveDateOffsetDayType[StreamEffectiveDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    StreamEffectiveDateOffsetDayType[StreamEffectiveDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(StreamEffectiveDateOffsetDayType = exports.StreamEffectiveDateOffsetDayType || (exports.StreamEffectiveDateOffsetDayType = {}));
var UnderlyingProvisionPartyRoleQualifier;
(function (UnderlyingProvisionPartyRoleQualifier) {
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["Agency"] = 0] = "Agency";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["Principal"] = 1] = "Principal";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["RisklessPrincipal"] = 2] = "RisklessPrincipal";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["GeneralClearingMember"] = 3] = "GeneralClearingMember";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["IndividualClearingMember"] = 4] = "IndividualClearingMember";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["PreferredMarketMaker"] = 5] = "PreferredMarketMaker";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["DirectedMarketMaker"] = 6] = "DirectedMarketMaker";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["Bank"] = 7] = "Bank";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["Hub"] = 8] = "Hub";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["PrimaryTradeRepository"] = 9] = "PrimaryTradeRepository";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["OriginalTradeRepository"] = 10] = "OriginalTradeRepository";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["AdditionalInternationalTradeRepository"] = 11] = "AdditionalInternationalTradeRepository";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["AdditionalDomesticTradeRepository"] = 12] = "AdditionalDomesticTradeRepository";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["RelatedExchange"] = 13] = "RelatedExchange";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["OptionsExchange"] = 14] = "OptionsExchange";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["SpecifiedExchange"] = 15] = "SpecifiedExchange";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["ConstituentExchange"] = 16] = "ConstituentExchange";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["ExemptFromTradeReporting"] = 17] = "ExemptFromTradeReporting";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["Current"] = 18] = "Current";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["New"] = 19] = "New";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["DesignatedSponsor"] = 20] = "DesignatedSponsor";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["Specialist"] = 21] = "Specialist";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["Algorithm"] = 22] = "Algorithm";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["FirmOrLegalEntity"] = 23] = "FirmOrLegalEntity";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["NaturalPerson"] = 24] = "NaturalPerson";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["RegularTrader"] = 25] = "RegularTrader";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["HeadTrader"] = 26] = "HeadTrader";
    UnderlyingProvisionPartyRoleQualifier[UnderlyingProvisionPartyRoleQualifier["Supervisor"] = 27] = "Supervisor";
})(UnderlyingProvisionPartyRoleQualifier = exports.UnderlyingProvisionPartyRoleQualifier || (exports.UnderlyingProvisionPartyRoleQualifier = {}));
var PaymentPriceType;
(function (PaymentPriceType) {
    PaymentPriceType[PaymentPriceType["PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome"] = 1] = "PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome";
    PaymentPriceType[PaymentPriceType["PerUnitIEPerShareOrContract"] = 2] = "PerUnitIEPerShareOrContract";
    PaymentPriceType[PaymentPriceType["FixedAmountAbsoluteValue"] = 3] = "FixedAmountAbsoluteValue";
    PaymentPriceType[PaymentPriceType["DiscountPercentagePointsBelowPar"] = 4] = "DiscountPercentagePointsBelowPar";
    PaymentPriceType[PaymentPriceType["PremiumPercentagePointsOverPar"] = 5] = "PremiumPercentagePointsOverPar";
    PaymentPriceType[PaymentPriceType["SpreadBasisPointsSpread"] = 6] = "SpreadBasisPointsSpread";
    PaymentPriceType[PaymentPriceType["TedPrice"] = 7] = "TedPrice";
    PaymentPriceType[PaymentPriceType["TedYield"] = 8] = "TedYield";
    PaymentPriceType[PaymentPriceType["Yield"] = 9] = "Yield";
    PaymentPriceType[PaymentPriceType["FixedCabinetTradePricePrimarilyForListedFuturesAndOptions"] = 10] = "FixedCabinetTradePricePrimarilyForListedFuturesAndOptions";
    PaymentPriceType[PaymentPriceType["VariableCabinetTradePricePrimarilyForListedFuturesAndOptions"] = 11] = "VariableCabinetTradePricePrimarilyForListedFuturesAndOptions";
    PaymentPriceType[PaymentPriceType["PriceSpread"] = 12] = "PriceSpread";
    PaymentPriceType[PaymentPriceType["ProductTicksInHalves"] = 13] = "ProductTicksInHalves";
    PaymentPriceType[PaymentPriceType["ProductTicksInFourths"] = 14] = "ProductTicksInFourths";
    PaymentPriceType[PaymentPriceType["ProductTicksInEighths"] = 15] = "ProductTicksInEighths";
    PaymentPriceType[PaymentPriceType["ProductTicksInSixteenths"] = 16] = "ProductTicksInSixteenths";
    PaymentPriceType[PaymentPriceType["ProductTicksInThirtySeconds"] = 17] = "ProductTicksInThirtySeconds";
    PaymentPriceType[PaymentPriceType["ProductTicksInSixtyFourths"] = 18] = "ProductTicksInSixtyFourths";
    PaymentPriceType[PaymentPriceType["ProductTicksInOneTwentyEighths"] = 19] = "ProductTicksInOneTwentyEighths";
    PaymentPriceType[PaymentPriceType["NormalRateRepresentationEGFxRate"] = 20] = "NormalRateRepresentationEGFxRate";
    PaymentPriceType[PaymentPriceType["InverseRateRepresentationEGFxRate"] = 21] = "InverseRateRepresentationEGFxRate";
    PaymentPriceType[PaymentPriceType["BasisPoints"] = 22] = "BasisPoints";
    PaymentPriceType[PaymentPriceType["UpFrontPoints"] = 23] = "UpFrontPoints";
    PaymentPriceType[PaymentPriceType["InterestRate"] = 24] = "InterestRate";
    PaymentPriceType[PaymentPriceType["PercentageOfNotional"] = 25] = "PercentageOfNotional";
})(PaymentPriceType = exports.PaymentPriceType || (exports.PaymentPriceType = {}));
var PaymentStreamPaymentDateOffsetDayType;
(function (PaymentStreamPaymentDateOffsetDayType) {
    PaymentStreamPaymentDateOffsetDayType[PaymentStreamPaymentDateOffsetDayType["Business"] = 0] = "Business";
    PaymentStreamPaymentDateOffsetDayType[PaymentStreamPaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentStreamPaymentDateOffsetDayType[PaymentStreamPaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStreamPaymentDateOffsetDayType[PaymentStreamPaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStreamPaymentDateOffsetDayType[PaymentStreamPaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStreamPaymentDateOffsetDayType[PaymentStreamPaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStreamPaymentDateOffsetDayType = exports.PaymentStreamPaymentDateOffsetDayType || (exports.PaymentStreamPaymentDateOffsetDayType = {}));
var BusinessDayConvention;
(function (BusinessDayConvention) {
    BusinessDayConvention[BusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    BusinessDayConvention[BusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    BusinessDayConvention[BusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    BusinessDayConvention[BusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    BusinessDayConvention[BusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    BusinessDayConvention[BusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    BusinessDayConvention[BusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    BusinessDayConvention[BusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(BusinessDayConvention = exports.BusinessDayConvention || (exports.BusinessDayConvention = {}));
var DateRollConvention;
(function (DateRollConvention) {
    DateRollConvention["E1stDayOfTheMonth"] = "1";
    DateRollConvention["E2ndDayOfTheMonth"] = "2";
    DateRollConvention["E3rdDayOfTheMonth"] = "3";
    DateRollConvention["E4thDayOfTheMonth"] = "4";
    DateRollConvention["E5thDayOfTheMonth"] = "5";
    DateRollConvention["E6ThdDayOfTheMonth"] = "6";
    DateRollConvention["E7thDayOfTheMonth"] = "7";
    DateRollConvention["E8thDayOfTheMonth"] = "8";
    DateRollConvention["E9thDayOfTheMonth"] = "9";
    DateRollConvention["E10thDayOfTheMonth"] = "10";
    DateRollConvention["E11ThDayOfTheMonth"] = "11";
    DateRollConvention["E12ThDayOfTheMonth"] = "12";
    DateRollConvention["E13ThDayOfTheMonth"] = "13";
    DateRollConvention["E14thDayOfTheMonth"] = "14";
    DateRollConvention["E15thDayOfTheMonth"] = "15";
    DateRollConvention["E16thDayOfTheMonth"] = "16";
    DateRollConvention["E17thDayOfTheMonth"] = "17";
    DateRollConvention["E18thDayOfTheMonth"] = "18";
    DateRollConvention["E19thDayOfTheMonth"] = "19";
    DateRollConvention["E20thDayOfTheMonth"] = "20";
    DateRollConvention["E21stDayOfTheMonth"] = "21";
    DateRollConvention["E22ndDayOfTheMonth"] = "22";
    DateRollConvention["E23rdDayOfTheMonth"] = "23";
    DateRollConvention["E24thDayOfTheMonth"] = "24";
    DateRollConvention["E25thDayOfTheMonth"] = "25";
    DateRollConvention["E26thDayOfTheMonth"] = "26";
    DateRollConvention["E27thDayOfTheMonth"] = "27";
    DateRollConvention["E28thDayOfTheMonth"] = "28";
    DateRollConvention["E29thDayOfTheMonth"] = "29";
    DateRollConvention["E30thDayOfTheMonth"] = "30";
    DateRollConvention["TheEndOfTheMonth"] = "EOM";
    DateRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    DateRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    DateRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    DateRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    DateRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    DateRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    DateRollConvention["NoAdjustment"] = "NONE";
    DateRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    DateRollConvention["Monday"] = "MON";
    DateRollConvention["Tuesday"] = "TUE";
    DateRollConvention["Wednesday"] = "WED";
    DateRollConvention["Thursday"] = "THU";
    DateRollConvention["Friday"] = "FRI";
    DateRollConvention["Saturday"] = "SAT";
    DateRollConvention["Sunday"] = "SUN";
})(DateRollConvention = exports.DateRollConvention || (exports.DateRollConvention = {}));
var LegBusinessDayConvention;
(function (LegBusinessDayConvention) {
    LegBusinessDayConvention[LegBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegBusinessDayConvention[LegBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegBusinessDayConvention[LegBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegBusinessDayConvention[LegBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegBusinessDayConvention[LegBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegBusinessDayConvention[LegBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegBusinessDayConvention[LegBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegBusinessDayConvention[LegBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegBusinessDayConvention = exports.LegBusinessDayConvention || (exports.LegBusinessDayConvention = {}));
var LegDateRollConvention;
(function (LegDateRollConvention) {
    LegDateRollConvention["E1stDayOfTheMonth"] = "1";
    LegDateRollConvention["E2ndDayOfTheMonth"] = "2";
    LegDateRollConvention["E3rdDayOfTheMonth"] = "3";
    LegDateRollConvention["E4thDayOfTheMonth"] = "4";
    LegDateRollConvention["E5thDayOfTheMonth"] = "5";
    LegDateRollConvention["E6ThdDayOfTheMonth"] = "6";
    LegDateRollConvention["E7thDayOfTheMonth"] = "7";
    LegDateRollConvention["E8thDayOfTheMonth"] = "8";
    LegDateRollConvention["E9thDayOfTheMonth"] = "9";
    LegDateRollConvention["E10thDayOfTheMonth"] = "10";
    LegDateRollConvention["E11ThDayOfTheMonth"] = "11";
    LegDateRollConvention["E12ThDayOfTheMonth"] = "12";
    LegDateRollConvention["E13ThDayOfTheMonth"] = "13";
    LegDateRollConvention["E14thDayOfTheMonth"] = "14";
    LegDateRollConvention["E15thDayOfTheMonth"] = "15";
    LegDateRollConvention["E16thDayOfTheMonth"] = "16";
    LegDateRollConvention["E17thDayOfTheMonth"] = "17";
    LegDateRollConvention["E18thDayOfTheMonth"] = "18";
    LegDateRollConvention["E19thDayOfTheMonth"] = "19";
    LegDateRollConvention["E20thDayOfTheMonth"] = "20";
    LegDateRollConvention["E21stDayOfTheMonth"] = "21";
    LegDateRollConvention["E22ndDayOfTheMonth"] = "22";
    LegDateRollConvention["E23rdDayOfTheMonth"] = "23";
    LegDateRollConvention["E24thDayOfTheMonth"] = "24";
    LegDateRollConvention["E25thDayOfTheMonth"] = "25";
    LegDateRollConvention["E26thDayOfTheMonth"] = "26";
    LegDateRollConvention["E27thDayOfTheMonth"] = "27";
    LegDateRollConvention["E28thDayOfTheMonth"] = "28";
    LegDateRollConvention["E29thDayOfTheMonth"] = "29";
    LegDateRollConvention["E30thDayOfTheMonth"] = "30";
    LegDateRollConvention["TheEndOfTheMonth"] = "EOM";
    LegDateRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    LegDateRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    LegDateRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    LegDateRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    LegDateRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    LegDateRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    LegDateRollConvention["NoAdjustment"] = "NONE";
    LegDateRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    LegDateRollConvention["Monday"] = "MON";
    LegDateRollConvention["Tuesday"] = "TUE";
    LegDateRollConvention["Wednesday"] = "WED";
    LegDateRollConvention["Thursday"] = "THU";
    LegDateRollConvention["Friday"] = "FRI";
    LegDateRollConvention["Saturday"] = "SAT";
    LegDateRollConvention["Sunday"] = "SUN";
})(LegDateRollConvention = exports.LegDateRollConvention || (exports.LegDateRollConvention = {}));
var UnderlyingBusinessDayConvention;
(function (UnderlyingBusinessDayConvention) {
    UnderlyingBusinessDayConvention[UnderlyingBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingBusinessDayConvention[UnderlyingBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingBusinessDayConvention[UnderlyingBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingBusinessDayConvention[UnderlyingBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingBusinessDayConvention[UnderlyingBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingBusinessDayConvention[UnderlyingBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingBusinessDayConvention[UnderlyingBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingBusinessDayConvention[UnderlyingBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingBusinessDayConvention = exports.UnderlyingBusinessDayConvention || (exports.UnderlyingBusinessDayConvention = {}));
var UnderlyingDateRollConvention;
(function (UnderlyingDateRollConvention) {
    UnderlyingDateRollConvention["E1stDayOfTheMonth"] = "1";
    UnderlyingDateRollConvention["E2ndDayOfTheMonth"] = "2";
    UnderlyingDateRollConvention["E3rdDayOfTheMonth"] = "3";
    UnderlyingDateRollConvention["E4thDayOfTheMonth"] = "4";
    UnderlyingDateRollConvention["E5thDayOfTheMonth"] = "5";
    UnderlyingDateRollConvention["E6ThdDayOfTheMonth"] = "6";
    UnderlyingDateRollConvention["E7thDayOfTheMonth"] = "7";
    UnderlyingDateRollConvention["E8thDayOfTheMonth"] = "8";
    UnderlyingDateRollConvention["E9thDayOfTheMonth"] = "9";
    UnderlyingDateRollConvention["E10thDayOfTheMonth"] = "10";
    UnderlyingDateRollConvention["E11ThDayOfTheMonth"] = "11";
    UnderlyingDateRollConvention["E12ThDayOfTheMonth"] = "12";
    UnderlyingDateRollConvention["E13ThDayOfTheMonth"] = "13";
    UnderlyingDateRollConvention["E14thDayOfTheMonth"] = "14";
    UnderlyingDateRollConvention["E15thDayOfTheMonth"] = "15";
    UnderlyingDateRollConvention["E16thDayOfTheMonth"] = "16";
    UnderlyingDateRollConvention["E17thDayOfTheMonth"] = "17";
    UnderlyingDateRollConvention["E18thDayOfTheMonth"] = "18";
    UnderlyingDateRollConvention["E19thDayOfTheMonth"] = "19";
    UnderlyingDateRollConvention["E20thDayOfTheMonth"] = "20";
    UnderlyingDateRollConvention["E21stDayOfTheMonth"] = "21";
    UnderlyingDateRollConvention["E22ndDayOfTheMonth"] = "22";
    UnderlyingDateRollConvention["E23rdDayOfTheMonth"] = "23";
    UnderlyingDateRollConvention["E24thDayOfTheMonth"] = "24";
    UnderlyingDateRollConvention["E25thDayOfTheMonth"] = "25";
    UnderlyingDateRollConvention["E26thDayOfTheMonth"] = "26";
    UnderlyingDateRollConvention["E27thDayOfTheMonth"] = "27";
    UnderlyingDateRollConvention["E28thDayOfTheMonth"] = "28";
    UnderlyingDateRollConvention["E29thDayOfTheMonth"] = "29";
    UnderlyingDateRollConvention["E30thDayOfTheMonth"] = "30";
    UnderlyingDateRollConvention["TheEndOfTheMonth"] = "EOM";
    UnderlyingDateRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    UnderlyingDateRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    UnderlyingDateRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    UnderlyingDateRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    UnderlyingDateRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    UnderlyingDateRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    UnderlyingDateRollConvention["NoAdjustment"] = "NONE";
    UnderlyingDateRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    UnderlyingDateRollConvention["Monday"] = "MON";
    UnderlyingDateRollConvention["Tuesday"] = "TUE";
    UnderlyingDateRollConvention["Wednesday"] = "WED";
    UnderlyingDateRollConvention["Thursday"] = "THU";
    UnderlyingDateRollConvention["Friday"] = "FRI";
    UnderlyingDateRollConvention["Saturday"] = "SAT";
    UnderlyingDateRollConvention["Sunday"] = "SUN";
})(UnderlyingDateRollConvention = exports.UnderlyingDateRollConvention || (exports.UnderlyingDateRollConvention = {}));
var PaymentSubType;
(function (PaymentSubType) {
    PaymentSubType[PaymentSubType["InitialPrincipalExchange"] = 0] = "InitialPrincipalExchange";
    PaymentSubType[PaymentSubType["IntermediatePrincipalExchange"] = 1] = "IntermediatePrincipalExchange";
    PaymentSubType[PaymentSubType["FinalPrincipalExchange"] = 2] = "FinalPrincipalExchange";
    PaymentSubType[PaymentSubType["PrepaidPremiumForward"] = 3] = "PrepaidPremiumForward";
    PaymentSubType[PaymentSubType["PostpaidPremiumForward"] = 4] = "PostpaidPremiumForward";
    PaymentSubType[PaymentSubType["VariablePremiumForward"] = 5] = "VariablePremiumForward";
    PaymentSubType[PaymentSubType["FixedPremiumForward"] = 6] = "FixedPremiumForward";
    PaymentSubType[PaymentSubType["SwapPremium"] = 7] = "SwapPremium";
    PaymentSubType[PaymentSubType["ConditionalPrincipalExchangeOnExercise"] = 8] = "ConditionalPrincipalExchangeOnExercise";
})(PaymentSubType = exports.PaymentSubType || (exports.PaymentSubType = {}));
var ComplexEventCreditEventUnit;
(function (ComplexEventCreditEventUnit) {
    ComplexEventCreditEventUnit["Day"] = "D";
    ComplexEventCreditEventUnit["Week"] = "Wk";
    ComplexEventCreditEventUnit["Month"] = "Mo";
    ComplexEventCreditEventUnit["Year"] = "Yr";
})(ComplexEventCreditEventUnit = exports.ComplexEventCreditEventUnit || (exports.ComplexEventCreditEventUnit = {}));
var ComplexEventCreditEventDayType;
(function (ComplexEventCreditEventDayType) {
    ComplexEventCreditEventDayType[ComplexEventCreditEventDayType["Business"] = 0] = "Business";
    ComplexEventCreditEventDayType[ComplexEventCreditEventDayType["Calendar"] = 1] = "Calendar";
    ComplexEventCreditEventDayType[ComplexEventCreditEventDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    ComplexEventCreditEventDayType[ComplexEventCreditEventDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    ComplexEventCreditEventDayType[ComplexEventCreditEventDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    ComplexEventCreditEventDayType[ComplexEventCreditEventDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(ComplexEventCreditEventDayType = exports.ComplexEventCreditEventDayType || (exports.ComplexEventCreditEventDayType = {}));
var ComplexEventCreditEventQualifier;
(function (ComplexEventCreditEventQualifier) {
    ComplexEventCreditEventQualifier["RetructuringMultipleHoldingObligations"] = "H";
    ComplexEventCreditEventQualifier["RestructuringMultipleCreditEventNotices"] = "E";
    ComplexEventCreditEventQualifier["FloatingRateInterestShortfall"] = "C";
})(ComplexEventCreditEventQualifier = exports.ComplexEventCreditEventQualifier || (exports.ComplexEventCreditEventQualifier = {}));
var ComplexEventPeriodType;
(function (ComplexEventPeriodType) {
    ComplexEventPeriodType[ComplexEventPeriodType["AsianOut"] = 0] = "AsianOut";
    ComplexEventPeriodType[ComplexEventPeriodType["AsianIn"] = 1] = "AsianIn";
    ComplexEventPeriodType[ComplexEventPeriodType["BarrierCap"] = 2] = "BarrierCap";
    ComplexEventPeriodType[ComplexEventPeriodType["BarrierFloor"] = 3] = "BarrierFloor";
    ComplexEventPeriodType[ComplexEventPeriodType["KnockOut"] = 4] = "KnockOut";
    ComplexEventPeriodType[ComplexEventPeriodType["KnockIn"] = 5] = "KnockIn";
})(ComplexEventPeriodType = exports.ComplexEventPeriodType || (exports.ComplexEventPeriodType = {}));
var ComplexEventRateSource;
(function (ComplexEventRateSource) {
    ComplexEventRateSource[ComplexEventRateSource["Bloomberg"] = 0] = "Bloomberg";
    ComplexEventRateSource[ComplexEventRateSource["Reuters"] = 1] = "Reuters";
    ComplexEventRateSource[ComplexEventRateSource["Telerate"] = 2] = "Telerate";
    ComplexEventRateSource[ComplexEventRateSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    ComplexEventRateSource[ComplexEventRateSource["Other"] = 99] = "Other";
})(ComplexEventRateSource = exports.ComplexEventRateSource || (exports.ComplexEventRateSource = {}));
var ComplexEventRateSourceType;
(function (ComplexEventRateSourceType) {
    ComplexEventRateSourceType[ComplexEventRateSourceType["Primary"] = 0] = "Primary";
    ComplexEventRateSourceType[ComplexEventRateSourceType["Secondary"] = 1] = "Secondary";
})(ComplexEventRateSourceType = exports.ComplexEventRateSourceType || (exports.ComplexEventRateSourceType = {}));
var ComplexEventDateOffsetUnit;
(function (ComplexEventDateOffsetUnit) {
    ComplexEventDateOffsetUnit["Day"] = "D";
    ComplexEventDateOffsetUnit["Week"] = "Wk";
    ComplexEventDateOffsetUnit["Month"] = "Mo";
    ComplexEventDateOffsetUnit["Year"] = "Yr";
})(ComplexEventDateOffsetUnit = exports.ComplexEventDateOffsetUnit || (exports.ComplexEventDateOffsetUnit = {}));
var ComplexEventDateOffsetDayType;
(function (ComplexEventDateOffsetDayType) {
    ComplexEventDateOffsetDayType[ComplexEventDateOffsetDayType["Business"] = 0] = "Business";
    ComplexEventDateOffsetDayType[ComplexEventDateOffsetDayType["Calendar"] = 1] = "Calendar";
    ComplexEventDateOffsetDayType[ComplexEventDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    ComplexEventDateOffsetDayType[ComplexEventDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    ComplexEventDateOffsetDayType[ComplexEventDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    ComplexEventDateOffsetDayType[ComplexEventDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(ComplexEventDateOffsetDayType = exports.ComplexEventDateOffsetDayType || (exports.ComplexEventDateOffsetDayType = {}));
var ComplexEventDateBusinessDayConvention;
(function (ComplexEventDateBusinessDayConvention) {
    ComplexEventDateBusinessDayConvention[ComplexEventDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    ComplexEventDateBusinessDayConvention[ComplexEventDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    ComplexEventDateBusinessDayConvention[ComplexEventDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    ComplexEventDateBusinessDayConvention[ComplexEventDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    ComplexEventDateBusinessDayConvention[ComplexEventDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    ComplexEventDateBusinessDayConvention[ComplexEventDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    ComplexEventDateBusinessDayConvention[ComplexEventDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    ComplexEventDateBusinessDayConvention[ComplexEventDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(ComplexEventDateBusinessDayConvention = exports.ComplexEventDateBusinessDayConvention || (exports.ComplexEventDateBusinessDayConvention = {}));
var ComplexEventScheduleFrequencyUnit;
(function (ComplexEventScheduleFrequencyUnit) {
    ComplexEventScheduleFrequencyUnit["Day"] = "D";
    ComplexEventScheduleFrequencyUnit["Week"] = "Wk";
    ComplexEventScheduleFrequencyUnit["Month"] = "Mo";
    ComplexEventScheduleFrequencyUnit["Year"] = "Yr";
})(ComplexEventScheduleFrequencyUnit = exports.ComplexEventScheduleFrequencyUnit || (exports.ComplexEventScheduleFrequencyUnit = {}));
var ComplexEventScheduleRollConvention;
(function (ComplexEventScheduleRollConvention) {
    ComplexEventScheduleRollConvention["E1stDayOfTheMonth"] = "1";
    ComplexEventScheduleRollConvention["E2ndDayOfTheMonth"] = "2";
    ComplexEventScheduleRollConvention["E3rdDayOfTheMonth"] = "3";
    ComplexEventScheduleRollConvention["E4thDayOfTheMonth"] = "4";
    ComplexEventScheduleRollConvention["E5thDayOfTheMonth"] = "5";
    ComplexEventScheduleRollConvention["E6ThdDayOfTheMonth"] = "6";
    ComplexEventScheduleRollConvention["E7thDayOfTheMonth"] = "7";
    ComplexEventScheduleRollConvention["E8thDayOfTheMonth"] = "8";
    ComplexEventScheduleRollConvention["E9thDayOfTheMonth"] = "9";
    ComplexEventScheduleRollConvention["E10thDayOfTheMonth"] = "10";
    ComplexEventScheduleRollConvention["E11ThDayOfTheMonth"] = "11";
    ComplexEventScheduleRollConvention["E12ThDayOfTheMonth"] = "12";
    ComplexEventScheduleRollConvention["E13ThDayOfTheMonth"] = "13";
    ComplexEventScheduleRollConvention["E14thDayOfTheMonth"] = "14";
    ComplexEventScheduleRollConvention["E15thDayOfTheMonth"] = "15";
    ComplexEventScheduleRollConvention["E16thDayOfTheMonth"] = "16";
    ComplexEventScheduleRollConvention["E17thDayOfTheMonth"] = "17";
    ComplexEventScheduleRollConvention["E18thDayOfTheMonth"] = "18";
    ComplexEventScheduleRollConvention["E19thDayOfTheMonth"] = "19";
    ComplexEventScheduleRollConvention["E20thDayOfTheMonth"] = "20";
    ComplexEventScheduleRollConvention["E21stDayOfTheMonth"] = "21";
    ComplexEventScheduleRollConvention["E22ndDayOfTheMonth"] = "22";
    ComplexEventScheduleRollConvention["E23rdDayOfTheMonth"] = "23";
    ComplexEventScheduleRollConvention["E24thDayOfTheMonth"] = "24";
    ComplexEventScheduleRollConvention["E25thDayOfTheMonth"] = "25";
    ComplexEventScheduleRollConvention["E26thDayOfTheMonth"] = "26";
    ComplexEventScheduleRollConvention["E27thDayOfTheMonth"] = "27";
    ComplexEventScheduleRollConvention["E28thDayOfTheMonth"] = "28";
    ComplexEventScheduleRollConvention["E29thDayOfTheMonth"] = "29";
    ComplexEventScheduleRollConvention["E30thDayOfTheMonth"] = "30";
    ComplexEventScheduleRollConvention["TheEndOfTheMonth"] = "EOM";
    ComplexEventScheduleRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    ComplexEventScheduleRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    ComplexEventScheduleRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    ComplexEventScheduleRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    ComplexEventScheduleRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    ComplexEventScheduleRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    ComplexEventScheduleRollConvention["NoAdjustment"] = "NONE";
    ComplexEventScheduleRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    ComplexEventScheduleRollConvention["Monday"] = "MON";
    ComplexEventScheduleRollConvention["Tuesday"] = "TUE";
    ComplexEventScheduleRollConvention["Wednesday"] = "WED";
    ComplexEventScheduleRollConvention["Thursday"] = "THU";
    ComplexEventScheduleRollConvention["Friday"] = "FRI";
    ComplexEventScheduleRollConvention["Saturday"] = "SAT";
    ComplexEventScheduleRollConvention["Sunday"] = "SUN";
})(ComplexEventScheduleRollConvention = exports.ComplexEventScheduleRollConvention || (exports.ComplexEventScheduleRollConvention = {}));
var DeliveryScheduleType;
(function (DeliveryScheduleType) {
    DeliveryScheduleType[DeliveryScheduleType["Notional"] = 0] = "Notional";
    DeliveryScheduleType[DeliveryScheduleType["Delivery"] = 1] = "Delivery";
    DeliveryScheduleType[DeliveryScheduleType["PhysicalSettlementPeriod"] = 2] = "PhysicalSettlementPeriod";
})(DeliveryScheduleType = exports.DeliveryScheduleType || (exports.DeliveryScheduleType = {}));
var DeliveryScheduleNotionalUnitOfMeasure;
(function (DeliveryScheduleNotionalUnitOfMeasure) {
    DeliveryScheduleNotionalUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    DeliveryScheduleNotionalUnitOfMeasure["Allowances"] = "Alw";
    DeliveryScheduleNotionalUnitOfMeasure["Barrels"] = "Bbl";
    DeliveryScheduleNotionalUnitOfMeasure["CubicMeters"] = "CBM";
    DeliveryScheduleNotionalUnitOfMeasure["BoardFeet"] = "BDFT";
    DeliveryScheduleNotionalUnitOfMeasure["Gigajoules"] = "GJ";
    DeliveryScheduleNotionalUnitOfMeasure["Bushels"] = "Bu";
    DeliveryScheduleNotionalUnitOfMeasure["KilowattHours"] = "kWh";
    DeliveryScheduleNotionalUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    DeliveryScheduleNotionalUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    DeliveryScheduleNotionalUnitOfMeasure["MegawattHours"] = "MWh";
    DeliveryScheduleNotionalUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    DeliveryScheduleNotionalUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    DeliveryScheduleNotionalUnitOfMeasure["Therms"] = "thm";
    DeliveryScheduleNotionalUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    DeliveryScheduleNotionalUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    DeliveryScheduleNotionalUnitOfMeasure["HundredweightUs"] = "cwt";
    DeliveryScheduleNotionalUnitOfMeasure["Days"] = "day";
    DeliveryScheduleNotionalUnitOfMeasure["DryMetricTons"] = "dt";
    DeliveryScheduleNotionalUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    DeliveryScheduleNotionalUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    DeliveryScheduleNotionalUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    DeliveryScheduleNotionalUnitOfMeasure["Grams"] = "g";
    DeliveryScheduleNotionalUnitOfMeasure["Gallons"] = "Gal";
    DeliveryScheduleNotionalUnitOfMeasure["GrossTons"] = "GT";
    DeliveryScheduleNotionalUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    DeliveryScheduleNotionalUnitOfMeasure["IndexPoint"] = "IPNT";
    DeliveryScheduleNotionalUnitOfMeasure["Kilograms"] = "kg";
    DeliveryScheduleNotionalUnitOfMeasure["Kiloliters"] = "kL";
    DeliveryScheduleNotionalUnitOfMeasure["KilowattYear"] = "kW-a";
    DeliveryScheduleNotionalUnitOfMeasure["KilowattDay"] = "kW-d";
    DeliveryScheduleNotionalUnitOfMeasure["KilowattHour"] = "kW-h";
    DeliveryScheduleNotionalUnitOfMeasure["KilowattMonth"] = "kW-M";
    DeliveryScheduleNotionalUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    DeliveryScheduleNotionalUnitOfMeasure["Liters"] = "L";
    DeliveryScheduleNotionalUnitOfMeasure["Pounds"] = "lbs";
    DeliveryScheduleNotionalUnitOfMeasure["MegawattYear"] = "MW-a";
    DeliveryScheduleNotionalUnitOfMeasure["MegawattDay"] = "MW-d";
    DeliveryScheduleNotionalUnitOfMeasure["MegawattHour"] = "MW-h";
    DeliveryScheduleNotionalUnitOfMeasure["MegawattMonth"] = "MW-M";
    DeliveryScheduleNotionalUnitOfMeasure["MegawattMinute"] = "MW-min";
    DeliveryScheduleNotionalUnitOfMeasure["TroyOunces"] = "oz_tr";
    DeliveryScheduleNotionalUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    DeliveryScheduleNotionalUnitOfMeasure["MetricTons"] = "t";
    DeliveryScheduleNotionalUnitOfMeasure["TonsUs"] = "tn";
    DeliveryScheduleNotionalUnitOfMeasure["MillionBarrels"] = "MMbbl";
    DeliveryScheduleNotionalUnitOfMeasure["UsDollars"] = "USD";
})(DeliveryScheduleNotionalUnitOfMeasure = exports.DeliveryScheduleNotionalUnitOfMeasure || (exports.DeliveryScheduleNotionalUnitOfMeasure = {}));
var DeliveryScheduleNotionalCommodityFrequency;
(function (DeliveryScheduleNotionalCommodityFrequency) {
    DeliveryScheduleNotionalCommodityFrequency[DeliveryScheduleNotionalCommodityFrequency["Term"] = 0] = "Term";
    DeliveryScheduleNotionalCommodityFrequency[DeliveryScheduleNotionalCommodityFrequency["PerBusinessDay"] = 1] = "PerBusinessDay";
    DeliveryScheduleNotionalCommodityFrequency[DeliveryScheduleNotionalCommodityFrequency["PerCalculationPeriod"] = 2] = "PerCalculationPeriod";
    DeliveryScheduleNotionalCommodityFrequency[DeliveryScheduleNotionalCommodityFrequency["PerSettlementPeriod"] = 3] = "PerSettlementPeriod";
    DeliveryScheduleNotionalCommodityFrequency[DeliveryScheduleNotionalCommodityFrequency["PerCalendarDay"] = 4] = "PerCalendarDay";
    DeliveryScheduleNotionalCommodityFrequency[DeliveryScheduleNotionalCommodityFrequency["PerHour"] = 5] = "PerHour";
    DeliveryScheduleNotionalCommodityFrequency[DeliveryScheduleNotionalCommodityFrequency["PerMonth"] = 6] = "PerMonth";
})(DeliveryScheduleNotionalCommodityFrequency = exports.DeliveryScheduleNotionalCommodityFrequency || (exports.DeliveryScheduleNotionalCommodityFrequency = {}));
var DeliveryScheduleToleranceUnitOfMeasure;
(function (DeliveryScheduleToleranceUnitOfMeasure) {
    DeliveryScheduleToleranceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    DeliveryScheduleToleranceUnitOfMeasure["Allowances"] = "Alw";
    DeliveryScheduleToleranceUnitOfMeasure["Barrels"] = "Bbl";
    DeliveryScheduleToleranceUnitOfMeasure["CubicMeters"] = "CBM";
    DeliveryScheduleToleranceUnitOfMeasure["BoardFeet"] = "BDFT";
    DeliveryScheduleToleranceUnitOfMeasure["Gigajoules"] = "GJ";
    DeliveryScheduleToleranceUnitOfMeasure["Bushels"] = "Bu";
    DeliveryScheduleToleranceUnitOfMeasure["KilowattHours"] = "kWh";
    DeliveryScheduleToleranceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    DeliveryScheduleToleranceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    DeliveryScheduleToleranceUnitOfMeasure["MegawattHours"] = "MWh";
    DeliveryScheduleToleranceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    DeliveryScheduleToleranceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    DeliveryScheduleToleranceUnitOfMeasure["Therms"] = "thm";
    DeliveryScheduleToleranceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    DeliveryScheduleToleranceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    DeliveryScheduleToleranceUnitOfMeasure["HundredweightUs"] = "cwt";
    DeliveryScheduleToleranceUnitOfMeasure["Days"] = "day";
    DeliveryScheduleToleranceUnitOfMeasure["DryMetricTons"] = "dt";
    DeliveryScheduleToleranceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    DeliveryScheduleToleranceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    DeliveryScheduleToleranceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    DeliveryScheduleToleranceUnitOfMeasure["Grams"] = "g";
    DeliveryScheduleToleranceUnitOfMeasure["Gallons"] = "Gal";
    DeliveryScheduleToleranceUnitOfMeasure["GrossTons"] = "GT";
    DeliveryScheduleToleranceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    DeliveryScheduleToleranceUnitOfMeasure["IndexPoint"] = "IPNT";
    DeliveryScheduleToleranceUnitOfMeasure["Kilograms"] = "kg";
    DeliveryScheduleToleranceUnitOfMeasure["Kiloliters"] = "kL";
    DeliveryScheduleToleranceUnitOfMeasure["KilowattYear"] = "kW-a";
    DeliveryScheduleToleranceUnitOfMeasure["KilowattDay"] = "kW-d";
    DeliveryScheduleToleranceUnitOfMeasure["KilowattHour"] = "kW-h";
    DeliveryScheduleToleranceUnitOfMeasure["KilowattMonth"] = "kW-M";
    DeliveryScheduleToleranceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    DeliveryScheduleToleranceUnitOfMeasure["Liters"] = "L";
    DeliveryScheduleToleranceUnitOfMeasure["Pounds"] = "lbs";
    DeliveryScheduleToleranceUnitOfMeasure["MegawattYear"] = "MW-a";
    DeliveryScheduleToleranceUnitOfMeasure["MegawattDay"] = "MW-d";
    DeliveryScheduleToleranceUnitOfMeasure["MegawattHour"] = "MW-h";
    DeliveryScheduleToleranceUnitOfMeasure["MegawattMonth"] = "MW-M";
    DeliveryScheduleToleranceUnitOfMeasure["MegawattMinute"] = "MW-min";
    DeliveryScheduleToleranceUnitOfMeasure["TroyOunces"] = "oz_tr";
    DeliveryScheduleToleranceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    DeliveryScheduleToleranceUnitOfMeasure["MetricTons"] = "t";
    DeliveryScheduleToleranceUnitOfMeasure["TonsUs"] = "tn";
    DeliveryScheduleToleranceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    DeliveryScheduleToleranceUnitOfMeasure["UsDollars"] = "USD";
})(DeliveryScheduleToleranceUnitOfMeasure = exports.DeliveryScheduleToleranceUnitOfMeasure || (exports.DeliveryScheduleToleranceUnitOfMeasure = {}));
var DeliveryScheduleToleranceType;
(function (DeliveryScheduleToleranceType) {
    DeliveryScheduleToleranceType[DeliveryScheduleToleranceType["Absolute"] = 0] = "Absolute";
    DeliveryScheduleToleranceType[DeliveryScheduleToleranceType["Percentage"] = 1] = "Percentage";
})(DeliveryScheduleToleranceType = exports.DeliveryScheduleToleranceType || (exports.DeliveryScheduleToleranceType = {}));
var DeliveryScheduleSettlFlowType;
(function (DeliveryScheduleSettlFlowType) {
    DeliveryScheduleSettlFlowType[DeliveryScheduleSettlFlowType["AllTimes"] = 0] = "AllTimes";
    DeliveryScheduleSettlFlowType[DeliveryScheduleSettlFlowType["OnPeak"] = 1] = "OnPeak";
    DeliveryScheduleSettlFlowType[DeliveryScheduleSettlFlowType["OffPeak"] = 2] = "OffPeak";
    DeliveryScheduleSettlFlowType[DeliveryScheduleSettlFlowType["Base"] = 3] = "Base";
    DeliveryScheduleSettlFlowType[DeliveryScheduleSettlFlowType["BlockHours"] = 4] = "BlockHours";
    DeliveryScheduleSettlFlowType[DeliveryScheduleSettlFlowType["Other"] = 5] = "Other";
})(DeliveryScheduleSettlFlowType = exports.DeliveryScheduleSettlFlowType || (exports.DeliveryScheduleSettlFlowType = {}));
var DeliveryScheduleSettlHolidaysProcessingInstruction;
(function (DeliveryScheduleSettlHolidaysProcessingInstruction) {
    DeliveryScheduleSettlHolidaysProcessingInstruction[DeliveryScheduleSettlHolidaysProcessingInstruction["DoNotIncludeHolidays"] = 0] = "DoNotIncludeHolidays";
    DeliveryScheduleSettlHolidaysProcessingInstruction[DeliveryScheduleSettlHolidaysProcessingInstruction["IncludeHolidays"] = 1] = "IncludeHolidays";
})(DeliveryScheduleSettlHolidaysProcessingInstruction = exports.DeliveryScheduleSettlHolidaysProcessingInstruction || (exports.DeliveryScheduleSettlHolidaysProcessingInstruction = {}));
var DeliveryScheduleSettlDay;
(function (DeliveryScheduleSettlDay) {
    DeliveryScheduleSettlDay[DeliveryScheduleSettlDay["Monday"] = 1] = "Monday";
    DeliveryScheduleSettlDay[DeliveryScheduleSettlDay["Tuesday"] = 2] = "Tuesday";
    DeliveryScheduleSettlDay[DeliveryScheduleSettlDay["Wednesday"] = 3] = "Wednesday";
    DeliveryScheduleSettlDay[DeliveryScheduleSettlDay["Thursday"] = 4] = "Thursday";
    DeliveryScheduleSettlDay[DeliveryScheduleSettlDay["Friday"] = 5] = "Friday";
    DeliveryScheduleSettlDay[DeliveryScheduleSettlDay["Saturday"] = 6] = "Saturday";
    DeliveryScheduleSettlDay[DeliveryScheduleSettlDay["Sunday"] = 7] = "Sunday";
    DeliveryScheduleSettlDay[DeliveryScheduleSettlDay["AllWeekdays"] = 8] = "AllWeekdays";
    DeliveryScheduleSettlDay[DeliveryScheduleSettlDay["AllDays"] = 9] = "AllDays";
    DeliveryScheduleSettlDay[DeliveryScheduleSettlDay["AllWeekends"] = 10] = "AllWeekends";
})(DeliveryScheduleSettlDay = exports.DeliveryScheduleSettlDay || (exports.DeliveryScheduleSettlDay = {}));
var DeliveryScheduleSettlTimeType;
(function (DeliveryScheduleSettlTimeType) {
    DeliveryScheduleSettlTimeType[DeliveryScheduleSettlTimeType["HourOfTheDay"] = 0] = "HourOfTheDay";
    DeliveryScheduleSettlTimeType[DeliveryScheduleSettlTimeType["HhMmTimeFormat"] = 1] = "HhMmTimeFormat";
})(DeliveryScheduleSettlTimeType = exports.DeliveryScheduleSettlTimeType || (exports.DeliveryScheduleSettlTimeType = {}));
var DeliveryStreamType;
(function (DeliveryStreamType) {
    DeliveryStreamType[DeliveryStreamType["PeriodicDefaultIfNotSpecified"] = 0] = "PeriodicDefaultIfNotSpecified";
    DeliveryStreamType[DeliveryStreamType["Initial"] = 1] = "Initial";
    DeliveryStreamType[DeliveryStreamType["Single"] = 2] = "Single";
})(DeliveryStreamType = exports.DeliveryStreamType || (exports.DeliveryStreamType = {}));
var DeliveryStreamDeliveryRestriction;
(function (DeliveryStreamDeliveryRestriction) {
    DeliveryStreamDeliveryRestriction[DeliveryStreamDeliveryRestriction["Firm"] = 1] = "Firm";
    DeliveryStreamDeliveryRestriction[DeliveryStreamDeliveryRestriction["InterruptableOrNonFirm"] = 2] = "InterruptableOrNonFirm";
    DeliveryStreamDeliveryRestriction[DeliveryStreamDeliveryRestriction["ForceMajeure"] = 3] = "ForceMajeure";
    DeliveryStreamDeliveryRestriction[DeliveryStreamDeliveryRestriction["SystemFirm"] = 4] = "SystemFirm";
    DeliveryStreamDeliveryRestriction[DeliveryStreamDeliveryRestriction["UnitFirm"] = 5] = "UnitFirm";
})(DeliveryStreamDeliveryRestriction = exports.DeliveryStreamDeliveryRestriction || (exports.DeliveryStreamDeliveryRestriction = {}));
var DeliveryStreamDeliveryContingentPartySide;
(function (DeliveryStreamDeliveryContingentPartySide) {
    DeliveryStreamDeliveryContingentPartySide[DeliveryStreamDeliveryContingentPartySide["Buyer"] = 0] = "Buyer";
    DeliveryStreamDeliveryContingentPartySide[DeliveryStreamDeliveryContingentPartySide["Seller"] = 1] = "Seller";
})(DeliveryStreamDeliveryContingentPartySide = exports.DeliveryStreamDeliveryContingentPartySide || (exports.DeliveryStreamDeliveryContingentPartySide = {}));
var DeliveryStreamTitleTransferCondition;
(function (DeliveryStreamTitleTransferCondition) {
    DeliveryStreamTitleTransferCondition[DeliveryStreamTitleTransferCondition["TransfersWithRiskOfLoss"] = 0] = "TransfersWithRiskOfLoss";
    DeliveryStreamTitleTransferCondition[DeliveryStreamTitleTransferCondition["DoesNotTransferWithRiskOfLoss"] = 1] = "DoesNotTransferWithRiskOfLoss";
})(DeliveryStreamTitleTransferCondition = exports.DeliveryStreamTitleTransferCondition || (exports.DeliveryStreamTitleTransferCondition = {}));
var DeliveryStreamToleranceUnitOfMeasure;
(function (DeliveryStreamToleranceUnitOfMeasure) {
    DeliveryStreamToleranceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    DeliveryStreamToleranceUnitOfMeasure["Allowances"] = "Alw";
    DeliveryStreamToleranceUnitOfMeasure["Barrels"] = "Bbl";
    DeliveryStreamToleranceUnitOfMeasure["CubicMeters"] = "CBM";
    DeliveryStreamToleranceUnitOfMeasure["BoardFeet"] = "BDFT";
    DeliveryStreamToleranceUnitOfMeasure["Gigajoules"] = "GJ";
    DeliveryStreamToleranceUnitOfMeasure["Bushels"] = "Bu";
    DeliveryStreamToleranceUnitOfMeasure["KilowattHours"] = "kWh";
    DeliveryStreamToleranceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    DeliveryStreamToleranceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    DeliveryStreamToleranceUnitOfMeasure["MegawattHours"] = "MWh";
    DeliveryStreamToleranceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    DeliveryStreamToleranceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    DeliveryStreamToleranceUnitOfMeasure["Therms"] = "thm";
    DeliveryStreamToleranceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    DeliveryStreamToleranceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    DeliveryStreamToleranceUnitOfMeasure["HundredweightUs"] = "cwt";
    DeliveryStreamToleranceUnitOfMeasure["Days"] = "day";
    DeliveryStreamToleranceUnitOfMeasure["DryMetricTons"] = "dt";
    DeliveryStreamToleranceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    DeliveryStreamToleranceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    DeliveryStreamToleranceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    DeliveryStreamToleranceUnitOfMeasure["Grams"] = "g";
    DeliveryStreamToleranceUnitOfMeasure["Gallons"] = "Gal";
    DeliveryStreamToleranceUnitOfMeasure["GrossTons"] = "GT";
    DeliveryStreamToleranceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    DeliveryStreamToleranceUnitOfMeasure["IndexPoint"] = "IPNT";
    DeliveryStreamToleranceUnitOfMeasure["Kilograms"] = "kg";
    DeliveryStreamToleranceUnitOfMeasure["Kiloliters"] = "kL";
    DeliveryStreamToleranceUnitOfMeasure["KilowattYear"] = "kW-a";
    DeliveryStreamToleranceUnitOfMeasure["KilowattDay"] = "kW-d";
    DeliveryStreamToleranceUnitOfMeasure["KilowattHour"] = "kW-h";
    DeliveryStreamToleranceUnitOfMeasure["KilowattMonth"] = "kW-M";
    DeliveryStreamToleranceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    DeliveryStreamToleranceUnitOfMeasure["Liters"] = "L";
    DeliveryStreamToleranceUnitOfMeasure["Pounds"] = "lbs";
    DeliveryStreamToleranceUnitOfMeasure["MegawattYear"] = "MW-a";
    DeliveryStreamToleranceUnitOfMeasure["MegawattDay"] = "MW-d";
    DeliveryStreamToleranceUnitOfMeasure["MegawattHour"] = "MW-h";
    DeliveryStreamToleranceUnitOfMeasure["MegawattMonth"] = "MW-M";
    DeliveryStreamToleranceUnitOfMeasure["MegawattMinute"] = "MW-min";
    DeliveryStreamToleranceUnitOfMeasure["TroyOunces"] = "oz_tr";
    DeliveryStreamToleranceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    DeliveryStreamToleranceUnitOfMeasure["MetricTons"] = "t";
    DeliveryStreamToleranceUnitOfMeasure["TonsUs"] = "tn";
    DeliveryStreamToleranceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    DeliveryStreamToleranceUnitOfMeasure["UsDollars"] = "USD";
})(DeliveryStreamToleranceUnitOfMeasure = exports.DeliveryStreamToleranceUnitOfMeasure || (exports.DeliveryStreamToleranceUnitOfMeasure = {}));
var DeliveryStreamToleranceType;
(function (DeliveryStreamToleranceType) {
    DeliveryStreamToleranceType[DeliveryStreamToleranceType["Absolute"] = 0] = "Absolute";
    DeliveryStreamToleranceType[DeliveryStreamToleranceType["Percentage"] = 1] = "Percentage";
})(DeliveryStreamToleranceType = exports.DeliveryStreamToleranceType || (exports.DeliveryStreamToleranceType = {}));
var DeliveryStreamToleranceOptionSide;
(function (DeliveryStreamToleranceOptionSide) {
    DeliveryStreamToleranceOptionSide[DeliveryStreamToleranceOptionSide["Buyer"] = 1] = "Buyer";
    DeliveryStreamToleranceOptionSide[DeliveryStreamToleranceOptionSide["Seller"] = 2] = "Seller";
})(DeliveryStreamToleranceOptionSide = exports.DeliveryStreamToleranceOptionSide || (exports.DeliveryStreamToleranceOptionSide = {}));
var DeliveryStreamElectingPartySide;
(function (DeliveryStreamElectingPartySide) {
    DeliveryStreamElectingPartySide[DeliveryStreamElectingPartySide["Buyer"] = 0] = "Buyer";
    DeliveryStreamElectingPartySide[DeliveryStreamElectingPartySide["Seller"] = 1] = "Seller";
})(DeliveryStreamElectingPartySide = exports.DeliveryStreamElectingPartySide || (exports.DeliveryStreamElectingPartySide = {}));
var MarketDisruptionProvision;
(function (MarketDisruptionProvision) {
    MarketDisruptionProvision[MarketDisruptionProvision["NotApplicable"] = 0] = "NotApplicable";
    MarketDisruptionProvision[MarketDisruptionProvision["Applicable"] = 1] = "Applicable";
    MarketDisruptionProvision[MarketDisruptionProvision["AsSpecifiedInMasterAgreement"] = 2] = "AsSpecifiedInMasterAgreement";
    MarketDisruptionProvision[MarketDisruptionProvision["AsSpecifiedInConfirmation"] = 3] = "AsSpecifiedInConfirmation";
})(MarketDisruptionProvision = exports.MarketDisruptionProvision || (exports.MarketDisruptionProvision = {}));
var MarketDisruptionFallbackProvision;
(function (MarketDisruptionFallbackProvision) {
    MarketDisruptionFallbackProvision[MarketDisruptionFallbackProvision["AsSpecifiedInMasterAgreement"] = 0] = "AsSpecifiedInMasterAgreement";
    MarketDisruptionFallbackProvision[MarketDisruptionFallbackProvision["AsSpecifiedInConfirmation"] = 1] = "AsSpecifiedInConfirmation";
})(MarketDisruptionFallbackProvision = exports.MarketDisruptionFallbackProvision || (exports.MarketDisruptionFallbackProvision = {}));
var MarketDisruptionFallbackUnderlierType;
(function (MarketDisruptionFallbackUnderlierType) {
    MarketDisruptionFallbackUnderlierType[MarketDisruptionFallbackUnderlierType["Basket"] = 0] = "Basket";
    MarketDisruptionFallbackUnderlierType[MarketDisruptionFallbackUnderlierType["Bond"] = 1] = "Bond";
    MarketDisruptionFallbackUnderlierType[MarketDisruptionFallbackUnderlierType["Cash"] = 2] = "Cash";
    MarketDisruptionFallbackUnderlierType[MarketDisruptionFallbackUnderlierType["Commodity"] = 3] = "Commodity";
    MarketDisruptionFallbackUnderlierType[MarketDisruptionFallbackUnderlierType["ConvertibleBond"] = 4] = "ConvertibleBond";
    MarketDisruptionFallbackUnderlierType[MarketDisruptionFallbackUnderlierType["Equity"] = 5] = "Equity";
    MarketDisruptionFallbackUnderlierType[MarketDisruptionFallbackUnderlierType["ExchangeTradedFund"] = 6] = "ExchangeTradedFund";
    MarketDisruptionFallbackUnderlierType[MarketDisruptionFallbackUnderlierType["Future"] = 7] = "Future";
    MarketDisruptionFallbackUnderlierType[MarketDisruptionFallbackUnderlierType["Index"] = 8] = "Index";
    MarketDisruptionFallbackUnderlierType[MarketDisruptionFallbackUnderlierType["Loan"] = 9] = "Loan";
    MarketDisruptionFallbackUnderlierType[MarketDisruptionFallbackUnderlierType["Mortgage"] = 10] = "Mortgage";
    MarketDisruptionFallbackUnderlierType[MarketDisruptionFallbackUnderlierType["MutualFund"] = 11] = "MutualFund";
})(MarketDisruptionFallbackUnderlierType = exports.MarketDisruptionFallbackUnderlierType || (exports.MarketDisruptionFallbackUnderlierType = {}));
var MarketDisruptionFallbackUnderlierSecurityIDSource;
(function (MarketDisruptionFallbackUnderlierSecurityIDSource) {
    MarketDisruptionFallbackUnderlierSecurityIDSource["Cusip"] = "1";
    MarketDisruptionFallbackUnderlierSecurityIDSource["Sedol"] = "2";
    MarketDisruptionFallbackUnderlierSecurityIDSource["Quik"] = "3";
    MarketDisruptionFallbackUnderlierSecurityIDSource["IsinNumber"] = "4";
    MarketDisruptionFallbackUnderlierSecurityIDSource["RicCode"] = "5";
    MarketDisruptionFallbackUnderlierSecurityIDSource["IsoCurrencyCode"] = "6";
    MarketDisruptionFallbackUnderlierSecurityIDSource["IsoCountryCode"] = "7";
    MarketDisruptionFallbackUnderlierSecurityIDSource["ExchangeSymbol"] = "8";
    MarketDisruptionFallbackUnderlierSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    MarketDisruptionFallbackUnderlierSecurityIDSource["BloombergSymbol"] = "A";
    MarketDisruptionFallbackUnderlierSecurityIDSource["Wertpapier"] = "B";
    MarketDisruptionFallbackUnderlierSecurityIDSource["Dutch"] = "C";
    MarketDisruptionFallbackUnderlierSecurityIDSource["Valoren"] = "D";
    MarketDisruptionFallbackUnderlierSecurityIDSource["Sicovam"] = "E";
    MarketDisruptionFallbackUnderlierSecurityIDSource["Belgian"] = "F";
    MarketDisruptionFallbackUnderlierSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    MarketDisruptionFallbackUnderlierSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    MarketDisruptionFallbackUnderlierSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    MarketDisruptionFallbackUnderlierSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    MarketDisruptionFallbackUnderlierSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    MarketDisruptionFallbackUnderlierSecurityIDSource["LetterOfCredit"] = "L";
    MarketDisruptionFallbackUnderlierSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    MarketDisruptionFallbackUnderlierSecurityIDSource["MarkitRedEntityClip"] = "N";
    MarketDisruptionFallbackUnderlierSecurityIDSource["MarkitRedPairClip"] = "P";
    MarketDisruptionFallbackUnderlierSecurityIDSource["CftcCommodityCode"] = "Q";
    MarketDisruptionFallbackUnderlierSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    MarketDisruptionFallbackUnderlierSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    MarketDisruptionFallbackUnderlierSecurityIDSource["LegalEntityIdentifier"] = "T";
    MarketDisruptionFallbackUnderlierSecurityIDSource["Synthetic"] = "U";
    MarketDisruptionFallbackUnderlierSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(MarketDisruptionFallbackUnderlierSecurityIDSource = exports.MarketDisruptionFallbackUnderlierSecurityIDSource || (exports.MarketDisruptionFallbackUnderlierSecurityIDSource = {}));
var ExerciseConfirmationMethod;
(function (ExerciseConfirmationMethod) {
    ExerciseConfirmationMethod[ExerciseConfirmationMethod["NotRequired"] = 0] = "NotRequired";
    ExerciseConfirmationMethod[ExerciseConfirmationMethod["NonElectronic"] = 1] = "NonElectronic";
    ExerciseConfirmationMethod[ExerciseConfirmationMethod["Electronic"] = 2] = "Electronic";
    ExerciseConfirmationMethod[ExerciseConfirmationMethod["UnknownAtTimeOfReport"] = 3] = "UnknownAtTimeOfReport";
})(ExerciseConfirmationMethod = exports.ExerciseConfirmationMethod || (exports.ExerciseConfirmationMethod = {}));
var OptionExerciseBusinessDayConvention;
(function (OptionExerciseBusinessDayConvention) {
    OptionExerciseBusinessDayConvention[OptionExerciseBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    OptionExerciseBusinessDayConvention[OptionExerciseBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    OptionExerciseBusinessDayConvention[OptionExerciseBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    OptionExerciseBusinessDayConvention[OptionExerciseBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    OptionExerciseBusinessDayConvention[OptionExerciseBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    OptionExerciseBusinessDayConvention[OptionExerciseBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    OptionExerciseBusinessDayConvention[OptionExerciseBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    OptionExerciseBusinessDayConvention[OptionExerciseBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(OptionExerciseBusinessDayConvention = exports.OptionExerciseBusinessDayConvention || (exports.OptionExerciseBusinessDayConvention = {}));
var OptionExerciseEarliestDateOffsetDayType;
(function (OptionExerciseEarliestDateOffsetDayType) {
    OptionExerciseEarliestDateOffsetDayType[OptionExerciseEarliestDateOffsetDayType["Business"] = 0] = "Business";
    OptionExerciseEarliestDateOffsetDayType[OptionExerciseEarliestDateOffsetDayType["Calendar"] = 1] = "Calendar";
    OptionExerciseEarliestDateOffsetDayType[OptionExerciseEarliestDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    OptionExerciseEarliestDateOffsetDayType[OptionExerciseEarliestDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    OptionExerciseEarliestDateOffsetDayType[OptionExerciseEarliestDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    OptionExerciseEarliestDateOffsetDayType[OptionExerciseEarliestDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(OptionExerciseEarliestDateOffsetDayType = exports.OptionExerciseEarliestDateOffsetDayType || (exports.OptionExerciseEarliestDateOffsetDayType = {}));
var OptionExerciseEarliestDateOffsetUnit;
(function (OptionExerciseEarliestDateOffsetUnit) {
    OptionExerciseEarliestDateOffsetUnit["Day"] = "D";
    OptionExerciseEarliestDateOffsetUnit["Week"] = "Wk";
    OptionExerciseEarliestDateOffsetUnit["Month"] = "Mo";
    OptionExerciseEarliestDateOffsetUnit["Year"] = "Yr";
})(OptionExerciseEarliestDateOffsetUnit = exports.OptionExerciseEarliestDateOffsetUnit || (exports.OptionExerciseEarliestDateOffsetUnit = {}));
var OptionExerciseFrequencyUnit;
(function (OptionExerciseFrequencyUnit) {
    OptionExerciseFrequencyUnit["Day"] = "D";
    OptionExerciseFrequencyUnit["Week"] = "Wk";
    OptionExerciseFrequencyUnit["Month"] = "Mo";
    OptionExerciseFrequencyUnit["Year"] = "Yr";
})(OptionExerciseFrequencyUnit = exports.OptionExerciseFrequencyUnit || (exports.OptionExerciseFrequencyUnit = {}));
var OptionExerciseStartDateOffsetUnit;
(function (OptionExerciseStartDateOffsetUnit) {
    OptionExerciseStartDateOffsetUnit["Day"] = "D";
    OptionExerciseStartDateOffsetUnit["Week"] = "Wk";
    OptionExerciseStartDateOffsetUnit["Month"] = "Mo";
    OptionExerciseStartDateOffsetUnit["Year"] = "Yr";
})(OptionExerciseStartDateOffsetUnit = exports.OptionExerciseStartDateOffsetUnit || (exports.OptionExerciseStartDateOffsetUnit = {}));
var OptionExerciseStartDateOffsetDayType;
(function (OptionExerciseStartDateOffsetDayType) {
    OptionExerciseStartDateOffsetDayType[OptionExerciseStartDateOffsetDayType["Business"] = 0] = "Business";
    OptionExerciseStartDateOffsetDayType[OptionExerciseStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    OptionExerciseStartDateOffsetDayType[OptionExerciseStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    OptionExerciseStartDateOffsetDayType[OptionExerciseStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    OptionExerciseStartDateOffsetDayType[OptionExerciseStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    OptionExerciseStartDateOffsetDayType[OptionExerciseStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(OptionExerciseStartDateOffsetDayType = exports.OptionExerciseStartDateOffsetDayType || (exports.OptionExerciseStartDateOffsetDayType = {}));
var OptionExerciseDateType;
(function (OptionExerciseDateType) {
    OptionExerciseDateType[OptionExerciseDateType["Unadjusted"] = 0] = "Unadjusted";
    OptionExerciseDateType[OptionExerciseDateType["Adjusted"] = 1] = "Adjusted";
})(OptionExerciseDateType = exports.OptionExerciseDateType || (exports.OptionExerciseDateType = {}));
var OptionExerciseExpirationDateBusinessDayConvention;
(function (OptionExerciseExpirationDateBusinessDayConvention) {
    OptionExerciseExpirationDateBusinessDayConvention[OptionExerciseExpirationDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    OptionExerciseExpirationDateBusinessDayConvention[OptionExerciseExpirationDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    OptionExerciseExpirationDateBusinessDayConvention[OptionExerciseExpirationDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    OptionExerciseExpirationDateBusinessDayConvention[OptionExerciseExpirationDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    OptionExerciseExpirationDateBusinessDayConvention[OptionExerciseExpirationDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    OptionExerciseExpirationDateBusinessDayConvention[OptionExerciseExpirationDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    OptionExerciseExpirationDateBusinessDayConvention[OptionExerciseExpirationDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    OptionExerciseExpirationDateBusinessDayConvention[OptionExerciseExpirationDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(OptionExerciseExpirationDateBusinessDayConvention = exports.OptionExerciseExpirationDateBusinessDayConvention || (exports.OptionExerciseExpirationDateBusinessDayConvention = {}));
var OptionExerciseExpirationDateOffsetUnit;
(function (OptionExerciseExpirationDateOffsetUnit) {
    OptionExerciseExpirationDateOffsetUnit["Day"] = "D";
    OptionExerciseExpirationDateOffsetUnit["Week"] = "Wk";
    OptionExerciseExpirationDateOffsetUnit["Month"] = "Mo";
    OptionExerciseExpirationDateOffsetUnit["Year"] = "Yr";
})(OptionExerciseExpirationDateOffsetUnit = exports.OptionExerciseExpirationDateOffsetUnit || (exports.OptionExerciseExpirationDateOffsetUnit = {}));
var OptionExerciseExpirationFrequencyUnit;
(function (OptionExerciseExpirationFrequencyUnit) {
    OptionExerciseExpirationFrequencyUnit["Day"] = "D";
    OptionExerciseExpirationFrequencyUnit["Week"] = "Wk";
    OptionExerciseExpirationFrequencyUnit["Month"] = "Mo";
    OptionExerciseExpirationFrequencyUnit["Year"] = "Yr";
})(OptionExerciseExpirationFrequencyUnit = exports.OptionExerciseExpirationFrequencyUnit || (exports.OptionExerciseExpirationFrequencyUnit = {}));
var OptionExerciseExpirationRollConvention;
(function (OptionExerciseExpirationRollConvention) {
    OptionExerciseExpirationRollConvention["E1stDayOfTheMonth"] = "1";
    OptionExerciseExpirationRollConvention["E2ndDayOfTheMonth"] = "2";
    OptionExerciseExpirationRollConvention["E3rdDayOfTheMonth"] = "3";
    OptionExerciseExpirationRollConvention["E4thDayOfTheMonth"] = "4";
    OptionExerciseExpirationRollConvention["E5thDayOfTheMonth"] = "5";
    OptionExerciseExpirationRollConvention["E6ThdDayOfTheMonth"] = "6";
    OptionExerciseExpirationRollConvention["E7thDayOfTheMonth"] = "7";
    OptionExerciseExpirationRollConvention["E8thDayOfTheMonth"] = "8";
    OptionExerciseExpirationRollConvention["E9thDayOfTheMonth"] = "9";
    OptionExerciseExpirationRollConvention["E10thDayOfTheMonth"] = "10";
    OptionExerciseExpirationRollConvention["E11ThDayOfTheMonth"] = "11";
    OptionExerciseExpirationRollConvention["E12ThDayOfTheMonth"] = "12";
    OptionExerciseExpirationRollConvention["E13ThDayOfTheMonth"] = "13";
    OptionExerciseExpirationRollConvention["E14thDayOfTheMonth"] = "14";
    OptionExerciseExpirationRollConvention["E15thDayOfTheMonth"] = "15";
    OptionExerciseExpirationRollConvention["E16thDayOfTheMonth"] = "16";
    OptionExerciseExpirationRollConvention["E17thDayOfTheMonth"] = "17";
    OptionExerciseExpirationRollConvention["E18thDayOfTheMonth"] = "18";
    OptionExerciseExpirationRollConvention["E19thDayOfTheMonth"] = "19";
    OptionExerciseExpirationRollConvention["E20thDayOfTheMonth"] = "20";
    OptionExerciseExpirationRollConvention["E21stDayOfTheMonth"] = "21";
    OptionExerciseExpirationRollConvention["E22ndDayOfTheMonth"] = "22";
    OptionExerciseExpirationRollConvention["E23rdDayOfTheMonth"] = "23";
    OptionExerciseExpirationRollConvention["E24thDayOfTheMonth"] = "24";
    OptionExerciseExpirationRollConvention["E25thDayOfTheMonth"] = "25";
    OptionExerciseExpirationRollConvention["E26thDayOfTheMonth"] = "26";
    OptionExerciseExpirationRollConvention["E27thDayOfTheMonth"] = "27";
    OptionExerciseExpirationRollConvention["E28thDayOfTheMonth"] = "28";
    OptionExerciseExpirationRollConvention["E29thDayOfTheMonth"] = "29";
    OptionExerciseExpirationRollConvention["E30thDayOfTheMonth"] = "30";
    OptionExerciseExpirationRollConvention["TheEndOfTheMonth"] = "EOM";
    OptionExerciseExpirationRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    OptionExerciseExpirationRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    OptionExerciseExpirationRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    OptionExerciseExpirationRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    OptionExerciseExpirationRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    OptionExerciseExpirationRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    OptionExerciseExpirationRollConvention["NoAdjustment"] = "NONE";
    OptionExerciseExpirationRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    OptionExerciseExpirationRollConvention["Monday"] = "MON";
    OptionExerciseExpirationRollConvention["Tuesday"] = "TUE";
    OptionExerciseExpirationRollConvention["Wednesday"] = "WED";
    OptionExerciseExpirationRollConvention["Thursday"] = "THU";
    OptionExerciseExpirationRollConvention["Friday"] = "FRI";
    OptionExerciseExpirationRollConvention["Saturday"] = "SAT";
    OptionExerciseExpirationRollConvention["Sunday"] = "SUN";
})(OptionExerciseExpirationRollConvention = exports.OptionExerciseExpirationRollConvention || (exports.OptionExerciseExpirationRollConvention = {}));
var OptionExerciseExpirationDateOffsetDayType;
(function (OptionExerciseExpirationDateOffsetDayType) {
    OptionExerciseExpirationDateOffsetDayType[OptionExerciseExpirationDateOffsetDayType["Business"] = 0] = "Business";
    OptionExerciseExpirationDateOffsetDayType[OptionExerciseExpirationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    OptionExerciseExpirationDateOffsetDayType[OptionExerciseExpirationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    OptionExerciseExpirationDateOffsetDayType[OptionExerciseExpirationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    OptionExerciseExpirationDateOffsetDayType[OptionExerciseExpirationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    OptionExerciseExpirationDateOffsetDayType[OptionExerciseExpirationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(OptionExerciseExpirationDateOffsetDayType = exports.OptionExerciseExpirationDateOffsetDayType || (exports.OptionExerciseExpirationDateOffsetDayType = {}));
var OptionExerciseExpirationDateType;
(function (OptionExerciseExpirationDateType) {
    OptionExerciseExpirationDateType[OptionExerciseExpirationDateType["Unadjusted"] = 0] = "Unadjusted";
    OptionExerciseExpirationDateType[OptionExerciseExpirationDateType["Adjusted"] = 1] = "Adjusted";
})(OptionExerciseExpirationDateType = exports.OptionExerciseExpirationDateType || (exports.OptionExerciseExpirationDateType = {}));
var PaymentUnitOfMeasure;
(function (PaymentUnitOfMeasure) {
    PaymentUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    PaymentUnitOfMeasure["Allowances"] = "Alw";
    PaymentUnitOfMeasure["Barrels"] = "Bbl";
    PaymentUnitOfMeasure["CubicMeters"] = "CBM";
    PaymentUnitOfMeasure["BoardFeet"] = "BDFT";
    PaymentUnitOfMeasure["Gigajoules"] = "GJ";
    PaymentUnitOfMeasure["Bushels"] = "Bu";
    PaymentUnitOfMeasure["KilowattHours"] = "kWh";
    PaymentUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    PaymentUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    PaymentUnitOfMeasure["MegawattHours"] = "MWh";
    PaymentUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    PaymentUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    PaymentUnitOfMeasure["Therms"] = "thm";
    PaymentUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    PaymentUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    PaymentUnitOfMeasure["HundredweightUs"] = "cwt";
    PaymentUnitOfMeasure["Days"] = "day";
    PaymentUnitOfMeasure["DryMetricTons"] = "dt";
    PaymentUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    PaymentUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    PaymentUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    PaymentUnitOfMeasure["Grams"] = "g";
    PaymentUnitOfMeasure["Gallons"] = "Gal";
    PaymentUnitOfMeasure["GrossTons"] = "GT";
    PaymentUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    PaymentUnitOfMeasure["IndexPoint"] = "IPNT";
    PaymentUnitOfMeasure["Kilograms"] = "kg";
    PaymentUnitOfMeasure["Kiloliters"] = "kL";
    PaymentUnitOfMeasure["KilowattYear"] = "kW-a";
    PaymentUnitOfMeasure["KilowattDay"] = "kW-d";
    PaymentUnitOfMeasure["KilowattHour"] = "kW-h";
    PaymentUnitOfMeasure["KilowattMonth"] = "kW-M";
    PaymentUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    PaymentUnitOfMeasure["Liters"] = "L";
    PaymentUnitOfMeasure["Pounds"] = "lbs";
    PaymentUnitOfMeasure["MegawattYear"] = "MW-a";
    PaymentUnitOfMeasure["MegawattDay"] = "MW-d";
    PaymentUnitOfMeasure["MegawattHour"] = "MW-h";
    PaymentUnitOfMeasure["MegawattMonth"] = "MW-M";
    PaymentUnitOfMeasure["MegawattMinute"] = "MW-min";
    PaymentUnitOfMeasure["TroyOunces"] = "oz_tr";
    PaymentUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    PaymentUnitOfMeasure["MetricTons"] = "t";
    PaymentUnitOfMeasure["TonsUs"] = "tn";
    PaymentUnitOfMeasure["MillionBarrels"] = "MMbbl";
    PaymentUnitOfMeasure["UsDollars"] = "USD";
})(PaymentUnitOfMeasure = exports.PaymentUnitOfMeasure || (exports.PaymentUnitOfMeasure = {}));
var PaymentDateOffsetUnit;
(function (PaymentDateOffsetUnit) {
    PaymentDateOffsetUnit["Day"] = "D";
    PaymentDateOffsetUnit["Week"] = "Wk";
    PaymentDateOffsetUnit["Month"] = "Mo";
    PaymentDateOffsetUnit["Year"] = "Yr";
})(PaymentDateOffsetUnit = exports.PaymentDateOffsetUnit || (exports.PaymentDateOffsetUnit = {}));
var PaymentDateOffsetDayType;
(function (PaymentDateOffsetDayType) {
    PaymentDateOffsetDayType[PaymentDateOffsetDayType["Business"] = 0] = "Business";
    PaymentDateOffsetDayType[PaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentDateOffsetDayType[PaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentDateOffsetDayType[PaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentDateOffsetDayType[PaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentDateOffsetDayType[PaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentDateOffsetDayType = exports.PaymentDateOffsetDayType || (exports.PaymentDateOffsetDayType = {}));
var PaymentForwardStartType;
(function (PaymentForwardStartType) {
    PaymentForwardStartType[PaymentForwardStartType["Prepaid"] = 0] = "Prepaid";
    PaymentForwardStartType[PaymentForwardStartType["PostPaid"] = 1] = "PostPaid";
    PaymentForwardStartType[PaymentForwardStartType["Variable"] = 2] = "Variable";
    PaymentForwardStartType[PaymentForwardStartType["Fixed"] = 3] = "Fixed";
})(PaymentForwardStartType = exports.PaymentForwardStartType || (exports.PaymentForwardStartType = {}));
var PaymentScheduleFixingDayOfWeek;
(function (PaymentScheduleFixingDayOfWeek) {
    PaymentScheduleFixingDayOfWeek[PaymentScheduleFixingDayOfWeek["EveryDayTheDefaultIfNotSpecified"] = 0] = "EveryDayTheDefaultIfNotSpecified";
    PaymentScheduleFixingDayOfWeek[PaymentScheduleFixingDayOfWeek["Monday"] = 1] = "Monday";
    PaymentScheduleFixingDayOfWeek[PaymentScheduleFixingDayOfWeek["Tuesday"] = 2] = "Tuesday";
    PaymentScheduleFixingDayOfWeek[PaymentScheduleFixingDayOfWeek["Wednesday"] = 3] = "Wednesday";
    PaymentScheduleFixingDayOfWeek[PaymentScheduleFixingDayOfWeek["Thursday"] = 4] = "Thursday";
    PaymentScheduleFixingDayOfWeek[PaymentScheduleFixingDayOfWeek["Friday"] = 5] = "Friday";
    PaymentScheduleFixingDayOfWeek[PaymentScheduleFixingDayOfWeek["Saturday"] = 6] = "Saturday";
    PaymentScheduleFixingDayOfWeek[PaymentScheduleFixingDayOfWeek["Sunday"] = 7] = "Sunday";
})(PaymentScheduleFixingDayOfWeek = exports.PaymentScheduleFixingDayOfWeek || (exports.PaymentScheduleFixingDayOfWeek = {}));
var PaymentScheduleRateUnitOfMeasure;
(function (PaymentScheduleRateUnitOfMeasure) {
    PaymentScheduleRateUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    PaymentScheduleRateUnitOfMeasure["Allowances"] = "Alw";
    PaymentScheduleRateUnitOfMeasure["Barrels"] = "Bbl";
    PaymentScheduleRateUnitOfMeasure["CubicMeters"] = "CBM";
    PaymentScheduleRateUnitOfMeasure["BoardFeet"] = "BDFT";
    PaymentScheduleRateUnitOfMeasure["Gigajoules"] = "GJ";
    PaymentScheduleRateUnitOfMeasure["Bushels"] = "Bu";
    PaymentScheduleRateUnitOfMeasure["KilowattHours"] = "kWh";
    PaymentScheduleRateUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    PaymentScheduleRateUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    PaymentScheduleRateUnitOfMeasure["MegawattHours"] = "MWh";
    PaymentScheduleRateUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    PaymentScheduleRateUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    PaymentScheduleRateUnitOfMeasure["Therms"] = "thm";
    PaymentScheduleRateUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    PaymentScheduleRateUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    PaymentScheduleRateUnitOfMeasure["HundredweightUs"] = "cwt";
    PaymentScheduleRateUnitOfMeasure["Days"] = "day";
    PaymentScheduleRateUnitOfMeasure["DryMetricTons"] = "dt";
    PaymentScheduleRateUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    PaymentScheduleRateUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    PaymentScheduleRateUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    PaymentScheduleRateUnitOfMeasure["Grams"] = "g";
    PaymentScheduleRateUnitOfMeasure["Gallons"] = "Gal";
    PaymentScheduleRateUnitOfMeasure["GrossTons"] = "GT";
    PaymentScheduleRateUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    PaymentScheduleRateUnitOfMeasure["IndexPoint"] = "IPNT";
    PaymentScheduleRateUnitOfMeasure["Kilograms"] = "kg";
    PaymentScheduleRateUnitOfMeasure["Kiloliters"] = "kL";
    PaymentScheduleRateUnitOfMeasure["KilowattYear"] = "kW-a";
    PaymentScheduleRateUnitOfMeasure["KilowattDay"] = "kW-d";
    PaymentScheduleRateUnitOfMeasure["KilowattHour"] = "kW-h";
    PaymentScheduleRateUnitOfMeasure["KilowattMonth"] = "kW-M";
    PaymentScheduleRateUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    PaymentScheduleRateUnitOfMeasure["Liters"] = "L";
    PaymentScheduleRateUnitOfMeasure["Pounds"] = "lbs";
    PaymentScheduleRateUnitOfMeasure["MegawattYear"] = "MW-a";
    PaymentScheduleRateUnitOfMeasure["MegawattDay"] = "MW-d";
    PaymentScheduleRateUnitOfMeasure["MegawattHour"] = "MW-h";
    PaymentScheduleRateUnitOfMeasure["MegawattMonth"] = "MW-M";
    PaymentScheduleRateUnitOfMeasure["MegawattMinute"] = "MW-min";
    PaymentScheduleRateUnitOfMeasure["TroyOunces"] = "oz_tr";
    PaymentScheduleRateUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    PaymentScheduleRateUnitOfMeasure["MetricTons"] = "t";
    PaymentScheduleRateUnitOfMeasure["TonsUs"] = "tn";
    PaymentScheduleRateUnitOfMeasure["MillionBarrels"] = "MMbbl";
    PaymentScheduleRateUnitOfMeasure["UsDollars"] = "USD";
})(PaymentScheduleRateUnitOfMeasure = exports.PaymentScheduleRateUnitOfMeasure || (exports.PaymentScheduleRateUnitOfMeasure = {}));
var PaymentScheduleRateSpreadType;
(function (PaymentScheduleRateSpreadType) {
    PaymentScheduleRateSpreadType[PaymentScheduleRateSpreadType["Absolute"] = 0] = "Absolute";
    PaymentScheduleRateSpreadType[PaymentScheduleRateSpreadType["Percentage"] = 1] = "Percentage";
})(PaymentScheduleRateSpreadType = exports.PaymentScheduleRateSpreadType || (exports.PaymentScheduleRateSpreadType = {}));
var PaymentScheduleSettlPeriodPriceUnitOfMeasure;
(function (PaymentScheduleSettlPeriodPriceUnitOfMeasure) {
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["Allowances"] = "Alw";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["Barrels"] = "Bbl";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["CubicMeters"] = "CBM";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["BoardFeet"] = "BDFT";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["Gigajoules"] = "GJ";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["Bushels"] = "Bu";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattHours"] = "kWh";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattHours"] = "MWh";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["Therms"] = "thm";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["HundredweightUs"] = "cwt";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["Days"] = "day";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["DryMetricTons"] = "dt";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["Grams"] = "g";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["Gallons"] = "Gal";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["GrossTons"] = "GT";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["IndexPoint"] = "IPNT";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["Kilograms"] = "kg";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["Kiloliters"] = "kL";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattYear"] = "kW-a";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattDay"] = "kW-d";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattHour"] = "kW-h";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattMonth"] = "kW-M";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["Liters"] = "L";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["Pounds"] = "lbs";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattYear"] = "MW-a";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattDay"] = "MW-d";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattHour"] = "MW-h";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattMonth"] = "MW-M";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattMinute"] = "MW-min";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["TroyOunces"] = "oz_tr";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["MetricTons"] = "t";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["TonsUs"] = "tn";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    PaymentScheduleSettlPeriodPriceUnitOfMeasure["UsDollars"] = "USD";
})(PaymentScheduleSettlPeriodPriceUnitOfMeasure = exports.PaymentScheduleSettlPeriodPriceUnitOfMeasure || (exports.PaymentScheduleSettlPeriodPriceUnitOfMeasure = {}));
var PaymentScheduleStepUnitOfMeasure;
(function (PaymentScheduleStepUnitOfMeasure) {
    PaymentScheduleStepUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    PaymentScheduleStepUnitOfMeasure["Allowances"] = "Alw";
    PaymentScheduleStepUnitOfMeasure["Barrels"] = "Bbl";
    PaymentScheduleStepUnitOfMeasure["CubicMeters"] = "CBM";
    PaymentScheduleStepUnitOfMeasure["BoardFeet"] = "BDFT";
    PaymentScheduleStepUnitOfMeasure["Gigajoules"] = "GJ";
    PaymentScheduleStepUnitOfMeasure["Bushels"] = "Bu";
    PaymentScheduleStepUnitOfMeasure["KilowattHours"] = "kWh";
    PaymentScheduleStepUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    PaymentScheduleStepUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    PaymentScheduleStepUnitOfMeasure["MegawattHours"] = "MWh";
    PaymentScheduleStepUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    PaymentScheduleStepUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    PaymentScheduleStepUnitOfMeasure["Therms"] = "thm";
    PaymentScheduleStepUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    PaymentScheduleStepUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    PaymentScheduleStepUnitOfMeasure["HundredweightUs"] = "cwt";
    PaymentScheduleStepUnitOfMeasure["Days"] = "day";
    PaymentScheduleStepUnitOfMeasure["DryMetricTons"] = "dt";
    PaymentScheduleStepUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    PaymentScheduleStepUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    PaymentScheduleStepUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    PaymentScheduleStepUnitOfMeasure["Grams"] = "g";
    PaymentScheduleStepUnitOfMeasure["Gallons"] = "Gal";
    PaymentScheduleStepUnitOfMeasure["GrossTons"] = "GT";
    PaymentScheduleStepUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    PaymentScheduleStepUnitOfMeasure["IndexPoint"] = "IPNT";
    PaymentScheduleStepUnitOfMeasure["Kilograms"] = "kg";
    PaymentScheduleStepUnitOfMeasure["Kiloliters"] = "kL";
    PaymentScheduleStepUnitOfMeasure["KilowattYear"] = "kW-a";
    PaymentScheduleStepUnitOfMeasure["KilowattDay"] = "kW-d";
    PaymentScheduleStepUnitOfMeasure["KilowattHour"] = "kW-h";
    PaymentScheduleStepUnitOfMeasure["KilowattMonth"] = "kW-M";
    PaymentScheduleStepUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    PaymentScheduleStepUnitOfMeasure["Liters"] = "L";
    PaymentScheduleStepUnitOfMeasure["Pounds"] = "lbs";
    PaymentScheduleStepUnitOfMeasure["MegawattYear"] = "MW-a";
    PaymentScheduleStepUnitOfMeasure["MegawattDay"] = "MW-d";
    PaymentScheduleStepUnitOfMeasure["MegawattHour"] = "MW-h";
    PaymentScheduleStepUnitOfMeasure["MegawattMonth"] = "MW-M";
    PaymentScheduleStepUnitOfMeasure["MegawattMinute"] = "MW-min";
    PaymentScheduleStepUnitOfMeasure["TroyOunces"] = "oz_tr";
    PaymentScheduleStepUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    PaymentScheduleStepUnitOfMeasure["MetricTons"] = "t";
    PaymentScheduleStepUnitOfMeasure["TonsUs"] = "tn";
    PaymentScheduleStepUnitOfMeasure["MillionBarrels"] = "MMbbl";
    PaymentScheduleStepUnitOfMeasure["UsDollars"] = "USD";
})(PaymentScheduleStepUnitOfMeasure = exports.PaymentScheduleStepUnitOfMeasure || (exports.PaymentScheduleStepUnitOfMeasure = {}));
var PaymentScheduleFixingDayDistribution;
(function (PaymentScheduleFixingDayDistribution) {
    PaymentScheduleFixingDayDistribution[PaymentScheduleFixingDayDistribution["All"] = 0] = "All";
    PaymentScheduleFixingDayDistribution[PaymentScheduleFixingDayDistribution["First"] = 1] = "First";
    PaymentScheduleFixingDayDistribution[PaymentScheduleFixingDayDistribution["Last"] = 2] = "Last";
    PaymentScheduleFixingDayDistribution[PaymentScheduleFixingDayDistribution["Penultimate"] = 3] = "Penultimate";
})(PaymentScheduleFixingDayDistribution = exports.PaymentScheduleFixingDayDistribution || (exports.PaymentScheduleFixingDayDistribution = {}));
var PaymentScheduleFixingLagUnit;
(function (PaymentScheduleFixingLagUnit) {
    PaymentScheduleFixingLagUnit["Day"] = "D";
    PaymentScheduleFixingLagUnit["Week"] = "Wk";
    PaymentScheduleFixingLagUnit["Month"] = "Mo";
    PaymentScheduleFixingLagUnit["Year"] = "Yr";
})(PaymentScheduleFixingLagUnit = exports.PaymentScheduleFixingLagUnit || (exports.PaymentScheduleFixingLagUnit = {}));
var PaymentScheduleFixingFirstObservationDateOffsetUnit;
(function (PaymentScheduleFixingFirstObservationDateOffsetUnit) {
    PaymentScheduleFixingFirstObservationDateOffsetUnit["Day"] = "D";
    PaymentScheduleFixingFirstObservationDateOffsetUnit["Week"] = "Wk";
    PaymentScheduleFixingFirstObservationDateOffsetUnit["Month"] = "Mo";
    PaymentScheduleFixingFirstObservationDateOffsetUnit["Year"] = "Yr";
})(PaymentScheduleFixingFirstObservationDateOffsetUnit = exports.PaymentScheduleFixingFirstObservationDateOffsetUnit || (exports.PaymentScheduleFixingFirstObservationDateOffsetUnit = {}));
var PaymentStreamFixedAmountUnitOfMeasure;
(function (PaymentStreamFixedAmountUnitOfMeasure) {
    PaymentStreamFixedAmountUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    PaymentStreamFixedAmountUnitOfMeasure["Allowances"] = "Alw";
    PaymentStreamFixedAmountUnitOfMeasure["Barrels"] = "Bbl";
    PaymentStreamFixedAmountUnitOfMeasure["CubicMeters"] = "CBM";
    PaymentStreamFixedAmountUnitOfMeasure["BoardFeet"] = "BDFT";
    PaymentStreamFixedAmountUnitOfMeasure["Gigajoules"] = "GJ";
    PaymentStreamFixedAmountUnitOfMeasure["Bushels"] = "Bu";
    PaymentStreamFixedAmountUnitOfMeasure["KilowattHours"] = "kWh";
    PaymentStreamFixedAmountUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    PaymentStreamFixedAmountUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    PaymentStreamFixedAmountUnitOfMeasure["MegawattHours"] = "MWh";
    PaymentStreamFixedAmountUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    PaymentStreamFixedAmountUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    PaymentStreamFixedAmountUnitOfMeasure["Therms"] = "thm";
    PaymentStreamFixedAmountUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    PaymentStreamFixedAmountUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    PaymentStreamFixedAmountUnitOfMeasure["HundredweightUs"] = "cwt";
    PaymentStreamFixedAmountUnitOfMeasure["Days"] = "day";
    PaymentStreamFixedAmountUnitOfMeasure["DryMetricTons"] = "dt";
    PaymentStreamFixedAmountUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    PaymentStreamFixedAmountUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    PaymentStreamFixedAmountUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    PaymentStreamFixedAmountUnitOfMeasure["Grams"] = "g";
    PaymentStreamFixedAmountUnitOfMeasure["Gallons"] = "Gal";
    PaymentStreamFixedAmountUnitOfMeasure["GrossTons"] = "GT";
    PaymentStreamFixedAmountUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    PaymentStreamFixedAmountUnitOfMeasure["IndexPoint"] = "IPNT";
    PaymentStreamFixedAmountUnitOfMeasure["Kilograms"] = "kg";
    PaymentStreamFixedAmountUnitOfMeasure["Kiloliters"] = "kL";
    PaymentStreamFixedAmountUnitOfMeasure["KilowattYear"] = "kW-a";
    PaymentStreamFixedAmountUnitOfMeasure["KilowattDay"] = "kW-d";
    PaymentStreamFixedAmountUnitOfMeasure["KilowattHour"] = "kW-h";
    PaymentStreamFixedAmountUnitOfMeasure["KilowattMonth"] = "kW-M";
    PaymentStreamFixedAmountUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    PaymentStreamFixedAmountUnitOfMeasure["Liters"] = "L";
    PaymentStreamFixedAmountUnitOfMeasure["Pounds"] = "lbs";
    PaymentStreamFixedAmountUnitOfMeasure["MegawattYear"] = "MW-a";
    PaymentStreamFixedAmountUnitOfMeasure["MegawattDay"] = "MW-d";
    PaymentStreamFixedAmountUnitOfMeasure["MegawattHour"] = "MW-h";
    PaymentStreamFixedAmountUnitOfMeasure["MegawattMonth"] = "MW-M";
    PaymentStreamFixedAmountUnitOfMeasure["MegawattMinute"] = "MW-min";
    PaymentStreamFixedAmountUnitOfMeasure["TroyOunces"] = "oz_tr";
    PaymentStreamFixedAmountUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    PaymentStreamFixedAmountUnitOfMeasure["MetricTons"] = "t";
    PaymentStreamFixedAmountUnitOfMeasure["TonsUs"] = "tn";
    PaymentStreamFixedAmountUnitOfMeasure["MillionBarrels"] = "MMbbl";
    PaymentStreamFixedAmountUnitOfMeasure["UsDollars"] = "USD";
})(PaymentStreamFixedAmountUnitOfMeasure = exports.PaymentStreamFixedAmountUnitOfMeasure || (exports.PaymentStreamFixedAmountUnitOfMeasure = {}));
var PaymentStreamRateIndex2CurveUnit;
(function (PaymentStreamRateIndex2CurveUnit) {
    PaymentStreamRateIndex2CurveUnit["Day"] = "D";
    PaymentStreamRateIndex2CurveUnit["Week"] = "Wk";
    PaymentStreamRateIndex2CurveUnit["Month"] = "Mo";
    PaymentStreamRateIndex2CurveUnit["Year"] = "Yr";
})(PaymentStreamRateIndex2CurveUnit = exports.PaymentStreamRateIndex2CurveUnit || (exports.PaymentStreamRateIndex2CurveUnit = {}));
var PaymentStreamRateIndexUnitOfMeasure;
(function (PaymentStreamRateIndexUnitOfMeasure) {
    PaymentStreamRateIndexUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    PaymentStreamRateIndexUnitOfMeasure["Allowances"] = "Alw";
    PaymentStreamRateIndexUnitOfMeasure["Barrels"] = "Bbl";
    PaymentStreamRateIndexUnitOfMeasure["CubicMeters"] = "CBM";
    PaymentStreamRateIndexUnitOfMeasure["BoardFeet"] = "BDFT";
    PaymentStreamRateIndexUnitOfMeasure["Gigajoules"] = "GJ";
    PaymentStreamRateIndexUnitOfMeasure["Bushels"] = "Bu";
    PaymentStreamRateIndexUnitOfMeasure["KilowattHours"] = "kWh";
    PaymentStreamRateIndexUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    PaymentStreamRateIndexUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    PaymentStreamRateIndexUnitOfMeasure["MegawattHours"] = "MWh";
    PaymentStreamRateIndexUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    PaymentStreamRateIndexUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    PaymentStreamRateIndexUnitOfMeasure["Therms"] = "thm";
    PaymentStreamRateIndexUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    PaymentStreamRateIndexUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    PaymentStreamRateIndexUnitOfMeasure["HundredweightUs"] = "cwt";
    PaymentStreamRateIndexUnitOfMeasure["Days"] = "day";
    PaymentStreamRateIndexUnitOfMeasure["DryMetricTons"] = "dt";
    PaymentStreamRateIndexUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    PaymentStreamRateIndexUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    PaymentStreamRateIndexUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    PaymentStreamRateIndexUnitOfMeasure["Grams"] = "g";
    PaymentStreamRateIndexUnitOfMeasure["Gallons"] = "Gal";
    PaymentStreamRateIndexUnitOfMeasure["GrossTons"] = "GT";
    PaymentStreamRateIndexUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    PaymentStreamRateIndexUnitOfMeasure["IndexPoint"] = "IPNT";
    PaymentStreamRateIndexUnitOfMeasure["Kilograms"] = "kg";
    PaymentStreamRateIndexUnitOfMeasure["Kiloliters"] = "kL";
    PaymentStreamRateIndexUnitOfMeasure["KilowattYear"] = "kW-a";
    PaymentStreamRateIndexUnitOfMeasure["KilowattDay"] = "kW-d";
    PaymentStreamRateIndexUnitOfMeasure["KilowattHour"] = "kW-h";
    PaymentStreamRateIndexUnitOfMeasure["KilowattMonth"] = "kW-M";
    PaymentStreamRateIndexUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    PaymentStreamRateIndexUnitOfMeasure["Liters"] = "L";
    PaymentStreamRateIndexUnitOfMeasure["Pounds"] = "lbs";
    PaymentStreamRateIndexUnitOfMeasure["MegawattYear"] = "MW-a";
    PaymentStreamRateIndexUnitOfMeasure["MegawattDay"] = "MW-d";
    PaymentStreamRateIndexUnitOfMeasure["MegawattHour"] = "MW-h";
    PaymentStreamRateIndexUnitOfMeasure["MegawattMonth"] = "MW-M";
    PaymentStreamRateIndexUnitOfMeasure["MegawattMinute"] = "MW-min";
    PaymentStreamRateIndexUnitOfMeasure["TroyOunces"] = "oz_tr";
    PaymentStreamRateIndexUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    PaymentStreamRateIndexUnitOfMeasure["MetricTons"] = "t";
    PaymentStreamRateIndexUnitOfMeasure["TonsUs"] = "tn";
    PaymentStreamRateIndexUnitOfMeasure["MillionBarrels"] = "MMbbl";
    PaymentStreamRateIndexUnitOfMeasure["UsDollars"] = "USD";
})(PaymentStreamRateIndexUnitOfMeasure = exports.PaymentStreamRateIndexUnitOfMeasure || (exports.PaymentStreamRateIndexUnitOfMeasure = {}));
var PaymentStreamSettlLevel;
(function (PaymentStreamSettlLevel) {
    PaymentStreamSettlLevel[PaymentStreamSettlLevel["Average"] = 0] = "Average";
    PaymentStreamSettlLevel[PaymentStreamSettlLevel["Maximum"] = 1] = "Maximum";
    PaymentStreamSettlLevel[PaymentStreamSettlLevel["Minimum"] = 2] = "Minimum";
    PaymentStreamSettlLevel[PaymentStreamSettlLevel["Cumulative"] = 3] = "Cumulative";
})(PaymentStreamSettlLevel = exports.PaymentStreamSettlLevel || (exports.PaymentStreamSettlLevel = {}));
var PaymentStreamReferenceLevelUnitOfMeasure;
(function (PaymentStreamReferenceLevelUnitOfMeasure) {
    PaymentStreamReferenceLevelUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    PaymentStreamReferenceLevelUnitOfMeasure["Allowances"] = "Alw";
    PaymentStreamReferenceLevelUnitOfMeasure["Barrels"] = "Bbl";
    PaymentStreamReferenceLevelUnitOfMeasure["CubicMeters"] = "CBM";
    PaymentStreamReferenceLevelUnitOfMeasure["BoardFeet"] = "BDFT";
    PaymentStreamReferenceLevelUnitOfMeasure["Gigajoules"] = "GJ";
    PaymentStreamReferenceLevelUnitOfMeasure["Bushels"] = "Bu";
    PaymentStreamReferenceLevelUnitOfMeasure["KilowattHours"] = "kWh";
    PaymentStreamReferenceLevelUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    PaymentStreamReferenceLevelUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    PaymentStreamReferenceLevelUnitOfMeasure["MegawattHours"] = "MWh";
    PaymentStreamReferenceLevelUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    PaymentStreamReferenceLevelUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    PaymentStreamReferenceLevelUnitOfMeasure["Therms"] = "thm";
    PaymentStreamReferenceLevelUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    PaymentStreamReferenceLevelUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    PaymentStreamReferenceLevelUnitOfMeasure["HundredweightUs"] = "cwt";
    PaymentStreamReferenceLevelUnitOfMeasure["Days"] = "day";
    PaymentStreamReferenceLevelUnitOfMeasure["DryMetricTons"] = "dt";
    PaymentStreamReferenceLevelUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    PaymentStreamReferenceLevelUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    PaymentStreamReferenceLevelUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    PaymentStreamReferenceLevelUnitOfMeasure["Grams"] = "g";
    PaymentStreamReferenceLevelUnitOfMeasure["Gallons"] = "Gal";
    PaymentStreamReferenceLevelUnitOfMeasure["GrossTons"] = "GT";
    PaymentStreamReferenceLevelUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    PaymentStreamReferenceLevelUnitOfMeasure["IndexPoint"] = "IPNT";
    PaymentStreamReferenceLevelUnitOfMeasure["Kilograms"] = "kg";
    PaymentStreamReferenceLevelUnitOfMeasure["Kiloliters"] = "kL";
    PaymentStreamReferenceLevelUnitOfMeasure["KilowattYear"] = "kW-a";
    PaymentStreamReferenceLevelUnitOfMeasure["KilowattDay"] = "kW-d";
    PaymentStreamReferenceLevelUnitOfMeasure["KilowattHour"] = "kW-h";
    PaymentStreamReferenceLevelUnitOfMeasure["KilowattMonth"] = "kW-M";
    PaymentStreamReferenceLevelUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    PaymentStreamReferenceLevelUnitOfMeasure["Liters"] = "L";
    PaymentStreamReferenceLevelUnitOfMeasure["Pounds"] = "lbs";
    PaymentStreamReferenceLevelUnitOfMeasure["MegawattYear"] = "MW-a";
    PaymentStreamReferenceLevelUnitOfMeasure["MegawattDay"] = "MW-d";
    PaymentStreamReferenceLevelUnitOfMeasure["MegawattHour"] = "MW-h";
    PaymentStreamReferenceLevelUnitOfMeasure["MegawattMonth"] = "MW-M";
    PaymentStreamReferenceLevelUnitOfMeasure["MegawattMinute"] = "MW-min";
    PaymentStreamReferenceLevelUnitOfMeasure["TroyOunces"] = "oz_tr";
    PaymentStreamReferenceLevelUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    PaymentStreamReferenceLevelUnitOfMeasure["MetricTons"] = "t";
    PaymentStreamReferenceLevelUnitOfMeasure["TonsUs"] = "tn";
    PaymentStreamReferenceLevelUnitOfMeasure["MillionBarrels"] = "MMbbl";
    PaymentStreamReferenceLevelUnitOfMeasure["UsDollars"] = "USD";
})(PaymentStreamReferenceLevelUnitOfMeasure = exports.PaymentStreamReferenceLevelUnitOfMeasure || (exports.PaymentStreamReferenceLevelUnitOfMeasure = {}));
var PaymentStreamRateSpreadUnitOfMeasure;
(function (PaymentStreamRateSpreadUnitOfMeasure) {
    PaymentStreamRateSpreadUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    PaymentStreamRateSpreadUnitOfMeasure["Allowances"] = "Alw";
    PaymentStreamRateSpreadUnitOfMeasure["Barrels"] = "Bbl";
    PaymentStreamRateSpreadUnitOfMeasure["CubicMeters"] = "CBM";
    PaymentStreamRateSpreadUnitOfMeasure["BoardFeet"] = "BDFT";
    PaymentStreamRateSpreadUnitOfMeasure["Gigajoules"] = "GJ";
    PaymentStreamRateSpreadUnitOfMeasure["Bushels"] = "Bu";
    PaymentStreamRateSpreadUnitOfMeasure["KilowattHours"] = "kWh";
    PaymentStreamRateSpreadUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    PaymentStreamRateSpreadUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    PaymentStreamRateSpreadUnitOfMeasure["MegawattHours"] = "MWh";
    PaymentStreamRateSpreadUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    PaymentStreamRateSpreadUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    PaymentStreamRateSpreadUnitOfMeasure["Therms"] = "thm";
    PaymentStreamRateSpreadUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    PaymentStreamRateSpreadUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    PaymentStreamRateSpreadUnitOfMeasure["HundredweightUs"] = "cwt";
    PaymentStreamRateSpreadUnitOfMeasure["Days"] = "day";
    PaymentStreamRateSpreadUnitOfMeasure["DryMetricTons"] = "dt";
    PaymentStreamRateSpreadUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    PaymentStreamRateSpreadUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    PaymentStreamRateSpreadUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    PaymentStreamRateSpreadUnitOfMeasure["Grams"] = "g";
    PaymentStreamRateSpreadUnitOfMeasure["Gallons"] = "Gal";
    PaymentStreamRateSpreadUnitOfMeasure["GrossTons"] = "GT";
    PaymentStreamRateSpreadUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    PaymentStreamRateSpreadUnitOfMeasure["IndexPoint"] = "IPNT";
    PaymentStreamRateSpreadUnitOfMeasure["Kilograms"] = "kg";
    PaymentStreamRateSpreadUnitOfMeasure["Kiloliters"] = "kL";
    PaymentStreamRateSpreadUnitOfMeasure["KilowattYear"] = "kW-a";
    PaymentStreamRateSpreadUnitOfMeasure["KilowattDay"] = "kW-d";
    PaymentStreamRateSpreadUnitOfMeasure["KilowattHour"] = "kW-h";
    PaymentStreamRateSpreadUnitOfMeasure["KilowattMonth"] = "kW-M";
    PaymentStreamRateSpreadUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    PaymentStreamRateSpreadUnitOfMeasure["Liters"] = "L";
    PaymentStreamRateSpreadUnitOfMeasure["Pounds"] = "lbs";
    PaymentStreamRateSpreadUnitOfMeasure["MegawattYear"] = "MW-a";
    PaymentStreamRateSpreadUnitOfMeasure["MegawattDay"] = "MW-d";
    PaymentStreamRateSpreadUnitOfMeasure["MegawattHour"] = "MW-h";
    PaymentStreamRateSpreadUnitOfMeasure["MegawattMonth"] = "MW-M";
    PaymentStreamRateSpreadUnitOfMeasure["MegawattMinute"] = "MW-min";
    PaymentStreamRateSpreadUnitOfMeasure["TroyOunces"] = "oz_tr";
    PaymentStreamRateSpreadUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    PaymentStreamRateSpreadUnitOfMeasure["MetricTons"] = "t";
    PaymentStreamRateSpreadUnitOfMeasure["TonsUs"] = "tn";
    PaymentStreamRateSpreadUnitOfMeasure["MillionBarrels"] = "MMbbl";
    PaymentStreamRateSpreadUnitOfMeasure["UsDollars"] = "USD";
})(PaymentStreamRateSpreadUnitOfMeasure = exports.PaymentStreamRateSpreadUnitOfMeasure || (exports.PaymentStreamRateSpreadUnitOfMeasure = {}));
var PaymentStreamRateSpreadType;
(function (PaymentStreamRateSpreadType) {
    PaymentStreamRateSpreadType[PaymentStreamRateSpreadType["Absolute"] = 0] = "Absolute";
    PaymentStreamRateSpreadType[PaymentStreamRateSpreadType["Percentage"] = 1] = "Percentage";
})(PaymentStreamRateSpreadType = exports.PaymentStreamRateSpreadType || (exports.PaymentStreamRateSpreadType = {}));
var PaymentStreamCalculationLagUnit;
(function (PaymentStreamCalculationLagUnit) {
    PaymentStreamCalculationLagUnit["Day"] = "D";
    PaymentStreamCalculationLagUnit["Week"] = "Wk";
    PaymentStreamCalculationLagUnit["Month"] = "Mo";
    PaymentStreamCalculationLagUnit["Year"] = "Yr";
})(PaymentStreamCalculationLagUnit = exports.PaymentStreamCalculationLagUnit || (exports.PaymentStreamCalculationLagUnit = {}));
var PaymentStreamFirstObservationDateOffsetUnit;
(function (PaymentStreamFirstObservationDateOffsetUnit) {
    PaymentStreamFirstObservationDateOffsetUnit["Day"] = "D";
    PaymentStreamFirstObservationDateOffsetUnit["Week"] = "Wk";
    PaymentStreamFirstObservationDateOffsetUnit["Month"] = "Mo";
    PaymentStreamFirstObservationDateOffsetUnit["Year"] = "Yr";
})(PaymentStreamFirstObservationDateOffsetUnit = exports.PaymentStreamFirstObservationDateOffsetUnit || (exports.PaymentStreamFirstObservationDateOffsetUnit = {}));
var PaymentStreamPricingDayType;
(function (PaymentStreamPricingDayType) {
    PaymentStreamPricingDayType[PaymentStreamPricingDayType["Business"] = 0] = "Business";
    PaymentStreamPricingDayType[PaymentStreamPricingDayType["Calendar"] = 1] = "Calendar";
    PaymentStreamPricingDayType[PaymentStreamPricingDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStreamPricingDayType[PaymentStreamPricingDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStreamPricingDayType[PaymentStreamPricingDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStreamPricingDayType[PaymentStreamPricingDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStreamPricingDayType = exports.PaymentStreamPricingDayType || (exports.PaymentStreamPricingDayType = {}));
var PaymentStreamPricingDayDistribution;
(function (PaymentStreamPricingDayDistribution) {
    PaymentStreamPricingDayDistribution[PaymentStreamPricingDayDistribution["All"] = 0] = "All";
    PaymentStreamPricingDayDistribution[PaymentStreamPricingDayDistribution["First"] = 1] = "First";
    PaymentStreamPricingDayDistribution[PaymentStreamPricingDayDistribution["Last"] = 2] = "Last";
    PaymentStreamPricingDayDistribution[PaymentStreamPricingDayDistribution["Penultimate"] = 3] = "Penultimate";
})(PaymentStreamPricingDayDistribution = exports.PaymentStreamPricingDayDistribution || (exports.PaymentStreamPricingDayDistribution = {}));
var PaymentStreamPricingBusinessDayConvention;
(function (PaymentStreamPricingBusinessDayConvention) {
    PaymentStreamPricingBusinessDayConvention[PaymentStreamPricingBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    PaymentStreamPricingBusinessDayConvention[PaymentStreamPricingBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    PaymentStreamPricingBusinessDayConvention[PaymentStreamPricingBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    PaymentStreamPricingBusinessDayConvention[PaymentStreamPricingBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    PaymentStreamPricingBusinessDayConvention[PaymentStreamPricingBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    PaymentStreamPricingBusinessDayConvention[PaymentStreamPricingBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    PaymentStreamPricingBusinessDayConvention[PaymentStreamPricingBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    PaymentStreamPricingBusinessDayConvention[PaymentStreamPricingBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(PaymentStreamPricingBusinessDayConvention = exports.PaymentStreamPricingBusinessDayConvention || (exports.PaymentStreamPricingBusinessDayConvention = {}));
var PaymentStreamPaymentDateType;
(function (PaymentStreamPaymentDateType) {
    PaymentStreamPaymentDateType[PaymentStreamPaymentDateType["Unadjusted"] = 0] = "Unadjusted";
    PaymentStreamPaymentDateType[PaymentStreamPaymentDateType["Adjusted"] = 1] = "Adjusted";
})(PaymentStreamPaymentDateType = exports.PaymentStreamPaymentDateType || (exports.PaymentStreamPaymentDateType = {}));
var PaymentStreamPricingDateType;
(function (PaymentStreamPricingDateType) {
    PaymentStreamPricingDateType[PaymentStreamPricingDateType["Unadjusted"] = 0] = "Unadjusted";
    PaymentStreamPricingDateType[PaymentStreamPricingDateType["Adjusted"] = 1] = "Adjusted";
})(PaymentStreamPricingDateType = exports.PaymentStreamPricingDateType || (exports.PaymentStreamPricingDateType = {}));
var PaymentStreamPricingDayOfWeek;
(function (PaymentStreamPricingDayOfWeek) {
    PaymentStreamPricingDayOfWeek[PaymentStreamPricingDayOfWeek["EveryDayTheDefaultIfNotSpecified"] = 0] = "EveryDayTheDefaultIfNotSpecified";
    PaymentStreamPricingDayOfWeek[PaymentStreamPricingDayOfWeek["Monday"] = 1] = "Monday";
    PaymentStreamPricingDayOfWeek[PaymentStreamPricingDayOfWeek["Tuesday"] = 2] = "Tuesday";
    PaymentStreamPricingDayOfWeek[PaymentStreamPricingDayOfWeek["Wednesday"] = 3] = "Wednesday";
    PaymentStreamPricingDayOfWeek[PaymentStreamPricingDayOfWeek["Thursday"] = 4] = "Thursday";
    PaymentStreamPricingDayOfWeek[PaymentStreamPricingDayOfWeek["Friday"] = 5] = "Friday";
    PaymentStreamPricingDayOfWeek[PaymentStreamPricingDayOfWeek["Saturday"] = 6] = "Saturday";
    PaymentStreamPricingDayOfWeek[PaymentStreamPricingDayOfWeek["Sunday"] = 7] = "Sunday";
})(PaymentStreamPricingDayOfWeek = exports.PaymentStreamPricingDayOfWeek || (exports.PaymentStreamPricingDayOfWeek = {}));
var PricingDateBusinessDayConvention;
(function (PricingDateBusinessDayConvention) {
    PricingDateBusinessDayConvention[PricingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    PricingDateBusinessDayConvention[PricingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    PricingDateBusinessDayConvention[PricingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    PricingDateBusinessDayConvention[PricingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    PricingDateBusinessDayConvention[PricingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    PricingDateBusinessDayConvention[PricingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    PricingDateBusinessDayConvention[PricingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    PricingDateBusinessDayConvention[PricingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(PricingDateBusinessDayConvention = exports.PricingDateBusinessDayConvention || (exports.PricingDateBusinessDayConvention = {}));
var StreamCalculationPeriodDateType;
(function (StreamCalculationPeriodDateType) {
    StreamCalculationPeriodDateType[StreamCalculationPeriodDateType["Unadjusted"] = 0] = "Unadjusted";
    StreamCalculationPeriodDateType[StreamCalculationPeriodDateType["Adjusted"] = 1] = "Adjusted";
})(StreamCalculationPeriodDateType = exports.StreamCalculationPeriodDateType || (exports.StreamCalculationPeriodDateType = {}));
var StreamCalculationCorrectionUnit;
(function (StreamCalculationCorrectionUnit) {
    StreamCalculationCorrectionUnit["Day"] = "D";
    StreamCalculationCorrectionUnit["Week"] = "Wk";
    StreamCalculationCorrectionUnit["Month"] = "Mo";
    StreamCalculationCorrectionUnit["Year"] = "Yr";
})(StreamCalculationCorrectionUnit = exports.StreamCalculationCorrectionUnit || (exports.StreamCalculationCorrectionUnit = {}));
var StreamCommoditySecurityIDSource;
(function (StreamCommoditySecurityIDSource) {
    StreamCommoditySecurityIDSource["Cusip"] = "1";
    StreamCommoditySecurityIDSource["Sedol"] = "2";
    StreamCommoditySecurityIDSource["Quik"] = "3";
    StreamCommoditySecurityIDSource["IsinNumber"] = "4";
    StreamCommoditySecurityIDSource["RicCode"] = "5";
    StreamCommoditySecurityIDSource["IsoCurrencyCode"] = "6";
    StreamCommoditySecurityIDSource["IsoCountryCode"] = "7";
    StreamCommoditySecurityIDSource["ExchangeSymbol"] = "8";
    StreamCommoditySecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    StreamCommoditySecurityIDSource["BloombergSymbol"] = "A";
    StreamCommoditySecurityIDSource["Wertpapier"] = "B";
    StreamCommoditySecurityIDSource["Dutch"] = "C";
    StreamCommoditySecurityIDSource["Valoren"] = "D";
    StreamCommoditySecurityIDSource["Sicovam"] = "E";
    StreamCommoditySecurityIDSource["Belgian"] = "F";
    StreamCommoditySecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    StreamCommoditySecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    StreamCommoditySecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    StreamCommoditySecurityIDSource["OptionPriceReportingAuthority"] = "J";
    StreamCommoditySecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    StreamCommoditySecurityIDSource["LetterOfCredit"] = "L";
    StreamCommoditySecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    StreamCommoditySecurityIDSource["MarkitRedEntityClip"] = "N";
    StreamCommoditySecurityIDSource["MarkitRedPairClip"] = "P";
    StreamCommoditySecurityIDSource["CftcCommodityCode"] = "Q";
    StreamCommoditySecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    StreamCommoditySecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    StreamCommoditySecurityIDSource["LegalEntityIdentifier"] = "T";
    StreamCommoditySecurityIDSource["Synthetic"] = "U";
    StreamCommoditySecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(StreamCommoditySecurityIDSource = exports.StreamCommoditySecurityIDSource || (exports.StreamCommoditySecurityIDSource = {}));
var StreamCommodityUnitOfMeasure;
(function (StreamCommodityUnitOfMeasure) {
    StreamCommodityUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    StreamCommodityUnitOfMeasure["Allowances"] = "Alw";
    StreamCommodityUnitOfMeasure["Barrels"] = "Bbl";
    StreamCommodityUnitOfMeasure["CubicMeters"] = "CBM";
    StreamCommodityUnitOfMeasure["BoardFeet"] = "BDFT";
    StreamCommodityUnitOfMeasure["Gigajoules"] = "GJ";
    StreamCommodityUnitOfMeasure["Bushels"] = "Bu";
    StreamCommodityUnitOfMeasure["KilowattHours"] = "kWh";
    StreamCommodityUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    StreamCommodityUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    StreamCommodityUnitOfMeasure["MegawattHours"] = "MWh";
    StreamCommodityUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    StreamCommodityUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    StreamCommodityUnitOfMeasure["Therms"] = "thm";
    StreamCommodityUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    StreamCommodityUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    StreamCommodityUnitOfMeasure["HundredweightUs"] = "cwt";
    StreamCommodityUnitOfMeasure["Days"] = "day";
    StreamCommodityUnitOfMeasure["DryMetricTons"] = "dt";
    StreamCommodityUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    StreamCommodityUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    StreamCommodityUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    StreamCommodityUnitOfMeasure["Grams"] = "g";
    StreamCommodityUnitOfMeasure["Gallons"] = "Gal";
    StreamCommodityUnitOfMeasure["GrossTons"] = "GT";
    StreamCommodityUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    StreamCommodityUnitOfMeasure["IndexPoint"] = "IPNT";
    StreamCommodityUnitOfMeasure["Kilograms"] = "kg";
    StreamCommodityUnitOfMeasure["Kiloliters"] = "kL";
    StreamCommodityUnitOfMeasure["KilowattYear"] = "kW-a";
    StreamCommodityUnitOfMeasure["KilowattDay"] = "kW-d";
    StreamCommodityUnitOfMeasure["KilowattHour"] = "kW-h";
    StreamCommodityUnitOfMeasure["KilowattMonth"] = "kW-M";
    StreamCommodityUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    StreamCommodityUnitOfMeasure["Liters"] = "L";
    StreamCommodityUnitOfMeasure["Pounds"] = "lbs";
    StreamCommodityUnitOfMeasure["MegawattYear"] = "MW-a";
    StreamCommodityUnitOfMeasure["MegawattDay"] = "MW-d";
    StreamCommodityUnitOfMeasure["MegawattHour"] = "MW-h";
    StreamCommodityUnitOfMeasure["MegawattMonth"] = "MW-M";
    StreamCommodityUnitOfMeasure["MegawattMinute"] = "MW-min";
    StreamCommodityUnitOfMeasure["TroyOunces"] = "oz_tr";
    StreamCommodityUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    StreamCommodityUnitOfMeasure["MetricTons"] = "t";
    StreamCommodityUnitOfMeasure["TonsUs"] = "tn";
    StreamCommodityUnitOfMeasure["MillionBarrels"] = "MMbbl";
    StreamCommodityUnitOfMeasure["UsDollars"] = "USD";
})(StreamCommodityUnitOfMeasure = exports.StreamCommodityUnitOfMeasure || (exports.StreamCommodityUnitOfMeasure = {}));
var StreamCommodityNearbySettlDayUnit;
(function (StreamCommodityNearbySettlDayUnit) {
    StreamCommodityNearbySettlDayUnit["Week"] = "Wk";
    StreamCommodityNearbySettlDayUnit["Month"] = "Mo";
})(StreamCommodityNearbySettlDayUnit = exports.StreamCommodityNearbySettlDayUnit || (exports.StreamCommodityNearbySettlDayUnit = {}));
var StreamCommoditySettlDateBusinessDayConvention;
(function (StreamCommoditySettlDateBusinessDayConvention) {
    StreamCommoditySettlDateBusinessDayConvention[StreamCommoditySettlDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    StreamCommoditySettlDateBusinessDayConvention[StreamCommoditySettlDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    StreamCommoditySettlDateBusinessDayConvention[StreamCommoditySettlDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    StreamCommoditySettlDateBusinessDayConvention[StreamCommoditySettlDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    StreamCommoditySettlDateBusinessDayConvention[StreamCommoditySettlDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    StreamCommoditySettlDateBusinessDayConvention[StreamCommoditySettlDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    StreamCommoditySettlDateBusinessDayConvention[StreamCommoditySettlDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    StreamCommoditySettlDateBusinessDayConvention[StreamCommoditySettlDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(StreamCommoditySettlDateBusinessDayConvention = exports.StreamCommoditySettlDateBusinessDayConvention || (exports.StreamCommoditySettlDateBusinessDayConvention = {}));
var StreamCommoditySettlDateRollUnit;
(function (StreamCommoditySettlDateRollUnit) {
    StreamCommoditySettlDateRollUnit["Day"] = "D";
})(StreamCommoditySettlDateRollUnit = exports.StreamCommoditySettlDateRollUnit || (exports.StreamCommoditySettlDateRollUnit = {}));
var StreamCommoditySettlDayType;
(function (StreamCommoditySettlDayType) {
    StreamCommoditySettlDayType[StreamCommoditySettlDayType["Business"] = 0] = "Business";
    StreamCommoditySettlDayType[StreamCommoditySettlDayType["Calendar"] = 1] = "Calendar";
    StreamCommoditySettlDayType[StreamCommoditySettlDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    StreamCommoditySettlDayType[StreamCommoditySettlDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    StreamCommoditySettlDayType[StreamCommoditySettlDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    StreamCommoditySettlDayType[StreamCommoditySettlDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(StreamCommoditySettlDayType = exports.StreamCommoditySettlDayType || (exports.StreamCommoditySettlDayType = {}));
var StreamCommodityDataSourceIDType;
(function (StreamCommodityDataSourceIDType) {
    StreamCommodityDataSourceIDType[StreamCommodityDataSourceIDType["City4CharacterBusinessCenterCode"] = 0] = "City4CharacterBusinessCenterCode";
    StreamCommodityDataSourceIDType[StreamCommodityDataSourceIDType["AirportIataStandard"] = 1] = "AirportIataStandard";
    StreamCommodityDataSourceIDType[StreamCommodityDataSourceIDType["WeatherStationWbanWeatherBureauArmyNavy"] = 2] = "WeatherStationWbanWeatherBureauArmyNavy";
    StreamCommodityDataSourceIDType[StreamCommodityDataSourceIDType["WeatherIndexWmoWorldMeteorologicalOrganization"] = 3] = "WeatherIndexWmoWorldMeteorologicalOrganization";
})(StreamCommodityDataSourceIDType = exports.StreamCommodityDataSourceIDType || (exports.StreamCommodityDataSourceIDType = {}));
var StreamCommoditySettlDay;
(function (StreamCommoditySettlDay) {
    StreamCommoditySettlDay[StreamCommoditySettlDay["Monday"] = 1] = "Monday";
    StreamCommoditySettlDay[StreamCommoditySettlDay["Tuesday"] = 2] = "Tuesday";
    StreamCommoditySettlDay[StreamCommoditySettlDay["Wednesday"] = 3] = "Wednesday";
    StreamCommoditySettlDay[StreamCommoditySettlDay["Thursday"] = 4] = "Thursday";
    StreamCommoditySettlDay[StreamCommoditySettlDay["Friday"] = 5] = "Friday";
    StreamCommoditySettlDay[StreamCommoditySettlDay["Saturday"] = 6] = "Saturday";
    StreamCommoditySettlDay[StreamCommoditySettlDay["Sunday"] = 7] = "Sunday";
    StreamCommoditySettlDay[StreamCommoditySettlDay["AllWeekdays"] = 8] = "AllWeekdays";
    StreamCommoditySettlDay[StreamCommoditySettlDay["AllDays"] = 9] = "AllDays";
    StreamCommoditySettlDay[StreamCommoditySettlDay["AllWeekends"] = 10] = "AllWeekends";
})(StreamCommoditySettlDay = exports.StreamCommoditySettlDay || (exports.StreamCommoditySettlDay = {}));
var StreamCommoditySettlFlowType;
(function (StreamCommoditySettlFlowType) {
    StreamCommoditySettlFlowType[StreamCommoditySettlFlowType["AllTimes"] = 0] = "AllTimes";
    StreamCommoditySettlFlowType[StreamCommoditySettlFlowType["OnPeak"] = 1] = "OnPeak";
    StreamCommoditySettlFlowType[StreamCommoditySettlFlowType["OffPeak"] = 2] = "OffPeak";
    StreamCommoditySettlFlowType[StreamCommoditySettlFlowType["Base"] = 3] = "Base";
    StreamCommoditySettlFlowType[StreamCommoditySettlFlowType["BlockHours"] = 4] = "BlockHours";
    StreamCommoditySettlFlowType[StreamCommoditySettlFlowType["Other"] = 5] = "Other";
})(StreamCommoditySettlFlowType = exports.StreamCommoditySettlFlowType || (exports.StreamCommoditySettlFlowType = {}));
var StreamCommoditySettlPeriodNotionalUnitOfMeasure;
(function (StreamCommoditySettlPeriodNotionalUnitOfMeasure) {
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["Allowances"] = "Alw";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["Barrels"] = "Bbl";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["CubicMeters"] = "CBM";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["BoardFeet"] = "BDFT";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["Gigajoules"] = "GJ";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["Bushels"] = "Bu";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattHours"] = "kWh";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattHours"] = "MWh";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["Therms"] = "thm";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["HundredweightUs"] = "cwt";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["Days"] = "day";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["DryMetricTons"] = "dt";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["Grams"] = "g";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["Gallons"] = "Gal";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["GrossTons"] = "GT";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["IndexPoint"] = "IPNT";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["Kilograms"] = "kg";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["Kiloliters"] = "kL";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattYear"] = "kW-a";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattDay"] = "kW-d";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattHour"] = "kW-h";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattMonth"] = "kW-M";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["Liters"] = "L";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["Pounds"] = "lbs";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattYear"] = "MW-a";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattDay"] = "MW-d";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattHour"] = "MW-h";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattMonth"] = "MW-M";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattMinute"] = "MW-min";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["TroyOunces"] = "oz_tr";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["MetricTons"] = "t";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["TonsUs"] = "tn";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["MillionBarrels"] = "MMbbl";
    StreamCommoditySettlPeriodNotionalUnitOfMeasure["UsDollars"] = "USD";
})(StreamCommoditySettlPeriodNotionalUnitOfMeasure = exports.StreamCommoditySettlPeriodNotionalUnitOfMeasure || (exports.StreamCommoditySettlPeriodNotionalUnitOfMeasure = {}));
var StreamCommoditySettlPeriodFrequencyUnit;
(function (StreamCommoditySettlPeriodFrequencyUnit) {
    StreamCommoditySettlPeriodFrequencyUnit["Day"] = "D";
    StreamCommoditySettlPeriodFrequencyUnit["Week"] = "Wk";
    StreamCommoditySettlPeriodFrequencyUnit["Month"] = "Mo";
    StreamCommoditySettlPeriodFrequencyUnit["Year"] = "Yr";
})(StreamCommoditySettlPeriodFrequencyUnit = exports.StreamCommoditySettlPeriodFrequencyUnit || (exports.StreamCommoditySettlPeriodFrequencyUnit = {}));
var StreamCommoditySettlPeriodPriceUnitOfMeasure;
(function (StreamCommoditySettlPeriodPriceUnitOfMeasure) {
    StreamCommoditySettlPeriodPriceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["Allowances"] = "Alw";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["Barrels"] = "Bbl";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["CubicMeters"] = "CBM";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["BoardFeet"] = "BDFT";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["Gigajoules"] = "GJ";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["Bushels"] = "Bu";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattHours"] = "kWh";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattHours"] = "MWh";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["Therms"] = "thm";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["HundredweightUs"] = "cwt";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["Days"] = "day";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["DryMetricTons"] = "dt";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["Grams"] = "g";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["Gallons"] = "Gal";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["GrossTons"] = "GT";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["IndexPoint"] = "IPNT";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["Kilograms"] = "kg";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["Kiloliters"] = "kL";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattYear"] = "kW-a";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattDay"] = "kW-d";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattHour"] = "kW-h";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattMonth"] = "kW-M";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["Liters"] = "L";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["Pounds"] = "lbs";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattYear"] = "MW-a";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattDay"] = "MW-d";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattHour"] = "MW-h";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattMonth"] = "MW-M";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattMinute"] = "MW-min";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["TroyOunces"] = "oz_tr";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["MetricTons"] = "t";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["TonsUs"] = "tn";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    StreamCommoditySettlPeriodPriceUnitOfMeasure["UsDollars"] = "USD";
})(StreamCommoditySettlPeriodPriceUnitOfMeasure = exports.StreamCommoditySettlPeriodPriceUnitOfMeasure || (exports.StreamCommoditySettlPeriodPriceUnitOfMeasure = {}));
var StreamCommoditySettlHolidaysProcessingInstruction;
(function (StreamCommoditySettlHolidaysProcessingInstruction) {
    StreamCommoditySettlHolidaysProcessingInstruction[StreamCommoditySettlHolidaysProcessingInstruction["DoNotIncludeHolidays"] = 0] = "DoNotIncludeHolidays";
    StreamCommoditySettlHolidaysProcessingInstruction[StreamCommoditySettlHolidaysProcessingInstruction["IncludeHolidays"] = 1] = "IncludeHolidays";
})(StreamCommoditySettlHolidaysProcessingInstruction = exports.StreamCommoditySettlHolidaysProcessingInstruction || (exports.StreamCommoditySettlHolidaysProcessingInstruction = {}));
var StreamNotionalFrequencyUnit;
(function (StreamNotionalFrequencyUnit) {
    StreamNotionalFrequencyUnit["Hour"] = "H";
    StreamNotionalFrequencyUnit["Minute"] = "Min";
    StreamNotionalFrequencyUnit["Second"] = "S";
    StreamNotionalFrequencyUnit["Day"] = "D";
    StreamNotionalFrequencyUnit["Week"] = "Wk";
    StreamNotionalFrequencyUnit["Month"] = "Mo";
    StreamNotionalFrequencyUnit["Year"] = "Yr";
    StreamNotionalFrequencyUnit["Quarter"] = "Q";
})(StreamNotionalFrequencyUnit = exports.StreamNotionalFrequencyUnit || (exports.StreamNotionalFrequencyUnit = {}));
var StreamNotionalCommodityFrequency;
(function (StreamNotionalCommodityFrequency) {
    StreamNotionalCommodityFrequency[StreamNotionalCommodityFrequency["Term"] = 0] = "Term";
    StreamNotionalCommodityFrequency[StreamNotionalCommodityFrequency["PerBusinessDay"] = 1] = "PerBusinessDay";
    StreamNotionalCommodityFrequency[StreamNotionalCommodityFrequency["PerCalculationPeriod"] = 2] = "PerCalculationPeriod";
    StreamNotionalCommodityFrequency[StreamNotionalCommodityFrequency["PerSettlementPeriod"] = 3] = "PerSettlementPeriod";
    StreamNotionalCommodityFrequency[StreamNotionalCommodityFrequency["PerCalendarDay"] = 4] = "PerCalendarDay";
    StreamNotionalCommodityFrequency[StreamNotionalCommodityFrequency["PerHour"] = 5] = "PerHour";
    StreamNotionalCommodityFrequency[StreamNotionalCommodityFrequency["PerMonth"] = 6] = "PerMonth";
})(StreamNotionalCommodityFrequency = exports.StreamNotionalCommodityFrequency || (exports.StreamNotionalCommodityFrequency = {}));
var StreamNotionalUnitOfMeasure;
(function (StreamNotionalUnitOfMeasure) {
    StreamNotionalUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    StreamNotionalUnitOfMeasure["Allowances"] = "Alw";
    StreamNotionalUnitOfMeasure["Barrels"] = "Bbl";
    StreamNotionalUnitOfMeasure["CubicMeters"] = "CBM";
    StreamNotionalUnitOfMeasure["BoardFeet"] = "BDFT";
    StreamNotionalUnitOfMeasure["Gigajoules"] = "GJ";
    StreamNotionalUnitOfMeasure["Bushels"] = "Bu";
    StreamNotionalUnitOfMeasure["KilowattHours"] = "kWh";
    StreamNotionalUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    StreamNotionalUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    StreamNotionalUnitOfMeasure["MegawattHours"] = "MWh";
    StreamNotionalUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    StreamNotionalUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    StreamNotionalUnitOfMeasure["Therms"] = "thm";
    StreamNotionalUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    StreamNotionalUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    StreamNotionalUnitOfMeasure["HundredweightUs"] = "cwt";
    StreamNotionalUnitOfMeasure["Days"] = "day";
    StreamNotionalUnitOfMeasure["DryMetricTons"] = "dt";
    StreamNotionalUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    StreamNotionalUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    StreamNotionalUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    StreamNotionalUnitOfMeasure["Grams"] = "g";
    StreamNotionalUnitOfMeasure["Gallons"] = "Gal";
    StreamNotionalUnitOfMeasure["GrossTons"] = "GT";
    StreamNotionalUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    StreamNotionalUnitOfMeasure["IndexPoint"] = "IPNT";
    StreamNotionalUnitOfMeasure["Kilograms"] = "kg";
    StreamNotionalUnitOfMeasure["Kiloliters"] = "kL";
    StreamNotionalUnitOfMeasure["KilowattYear"] = "kW-a";
    StreamNotionalUnitOfMeasure["KilowattDay"] = "kW-d";
    StreamNotionalUnitOfMeasure["KilowattHour"] = "kW-h";
    StreamNotionalUnitOfMeasure["KilowattMonth"] = "kW-M";
    StreamNotionalUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    StreamNotionalUnitOfMeasure["Liters"] = "L";
    StreamNotionalUnitOfMeasure["Pounds"] = "lbs";
    StreamNotionalUnitOfMeasure["MegawattYear"] = "MW-a";
    StreamNotionalUnitOfMeasure["MegawattDay"] = "MW-d";
    StreamNotionalUnitOfMeasure["MegawattHour"] = "MW-h";
    StreamNotionalUnitOfMeasure["MegawattMonth"] = "MW-M";
    StreamNotionalUnitOfMeasure["MegawattMinute"] = "MW-min";
    StreamNotionalUnitOfMeasure["TroyOunces"] = "oz_tr";
    StreamNotionalUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    StreamNotionalUnitOfMeasure["MetricTons"] = "t";
    StreamNotionalUnitOfMeasure["TonsUs"] = "tn";
    StreamNotionalUnitOfMeasure["MillionBarrels"] = "MMbbl";
    StreamNotionalUnitOfMeasure["UsDollars"] = "USD";
})(StreamNotionalUnitOfMeasure = exports.StreamNotionalUnitOfMeasure || (exports.StreamNotionalUnitOfMeasure = {}));
var StreamTotalNotionalUnitOfMeasure;
(function (StreamTotalNotionalUnitOfMeasure) {
    StreamTotalNotionalUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    StreamTotalNotionalUnitOfMeasure["Allowances"] = "Alw";
    StreamTotalNotionalUnitOfMeasure["Barrels"] = "Bbl";
    StreamTotalNotionalUnitOfMeasure["CubicMeters"] = "CBM";
    StreamTotalNotionalUnitOfMeasure["BoardFeet"] = "BDFT";
    StreamTotalNotionalUnitOfMeasure["Gigajoules"] = "GJ";
    StreamTotalNotionalUnitOfMeasure["Bushels"] = "Bu";
    StreamTotalNotionalUnitOfMeasure["KilowattHours"] = "kWh";
    StreamTotalNotionalUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    StreamTotalNotionalUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    StreamTotalNotionalUnitOfMeasure["MegawattHours"] = "MWh";
    StreamTotalNotionalUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    StreamTotalNotionalUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    StreamTotalNotionalUnitOfMeasure["Therms"] = "thm";
    StreamTotalNotionalUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    StreamTotalNotionalUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    StreamTotalNotionalUnitOfMeasure["HundredweightUs"] = "cwt";
    StreamTotalNotionalUnitOfMeasure["Days"] = "day";
    StreamTotalNotionalUnitOfMeasure["DryMetricTons"] = "dt";
    StreamTotalNotionalUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    StreamTotalNotionalUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    StreamTotalNotionalUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    StreamTotalNotionalUnitOfMeasure["Grams"] = "g";
    StreamTotalNotionalUnitOfMeasure["Gallons"] = "Gal";
    StreamTotalNotionalUnitOfMeasure["GrossTons"] = "GT";
    StreamTotalNotionalUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    StreamTotalNotionalUnitOfMeasure["IndexPoint"] = "IPNT";
    StreamTotalNotionalUnitOfMeasure["Kilograms"] = "kg";
    StreamTotalNotionalUnitOfMeasure["Kiloliters"] = "kL";
    StreamTotalNotionalUnitOfMeasure["KilowattYear"] = "kW-a";
    StreamTotalNotionalUnitOfMeasure["KilowattDay"] = "kW-d";
    StreamTotalNotionalUnitOfMeasure["KilowattHour"] = "kW-h";
    StreamTotalNotionalUnitOfMeasure["KilowattMonth"] = "kW-M";
    StreamTotalNotionalUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    StreamTotalNotionalUnitOfMeasure["Liters"] = "L";
    StreamTotalNotionalUnitOfMeasure["Pounds"] = "lbs";
    StreamTotalNotionalUnitOfMeasure["MegawattYear"] = "MW-a";
    StreamTotalNotionalUnitOfMeasure["MegawattDay"] = "MW-d";
    StreamTotalNotionalUnitOfMeasure["MegawattHour"] = "MW-h";
    StreamTotalNotionalUnitOfMeasure["MegawattMonth"] = "MW-M";
    StreamTotalNotionalUnitOfMeasure["MegawattMinute"] = "MW-min";
    StreamTotalNotionalUnitOfMeasure["TroyOunces"] = "oz_tr";
    StreamTotalNotionalUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    StreamTotalNotionalUnitOfMeasure["MetricTons"] = "t";
    StreamTotalNotionalUnitOfMeasure["TonsUs"] = "tn";
    StreamTotalNotionalUnitOfMeasure["MillionBarrels"] = "MMbbl";
    StreamTotalNotionalUnitOfMeasure["UsDollars"] = "USD";
})(StreamTotalNotionalUnitOfMeasure = exports.StreamTotalNotionalUnitOfMeasure || (exports.StreamTotalNotionalUnitOfMeasure = {}));
var LegAdditionalTermBondSecurityIDSource;
(function (LegAdditionalTermBondSecurityIDSource) {
    LegAdditionalTermBondSecurityIDSource["Cusip"] = "1";
    LegAdditionalTermBondSecurityIDSource["Sedol"] = "2";
    LegAdditionalTermBondSecurityIDSource["Quik"] = "3";
    LegAdditionalTermBondSecurityIDSource["IsinNumber"] = "4";
    LegAdditionalTermBondSecurityIDSource["RicCode"] = "5";
    LegAdditionalTermBondSecurityIDSource["IsoCurrencyCode"] = "6";
    LegAdditionalTermBondSecurityIDSource["IsoCountryCode"] = "7";
    LegAdditionalTermBondSecurityIDSource["ExchangeSymbol"] = "8";
    LegAdditionalTermBondSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    LegAdditionalTermBondSecurityIDSource["BloombergSymbol"] = "A";
    LegAdditionalTermBondSecurityIDSource["Wertpapier"] = "B";
    LegAdditionalTermBondSecurityIDSource["Dutch"] = "C";
    LegAdditionalTermBondSecurityIDSource["Valoren"] = "D";
    LegAdditionalTermBondSecurityIDSource["Sicovam"] = "E";
    LegAdditionalTermBondSecurityIDSource["Belgian"] = "F";
    LegAdditionalTermBondSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    LegAdditionalTermBondSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    LegAdditionalTermBondSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    LegAdditionalTermBondSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    LegAdditionalTermBondSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    LegAdditionalTermBondSecurityIDSource["LetterOfCredit"] = "L";
    LegAdditionalTermBondSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    LegAdditionalTermBondSecurityIDSource["MarkitRedEntityClip"] = "N";
    LegAdditionalTermBondSecurityIDSource["MarkitRedPairClip"] = "P";
    LegAdditionalTermBondSecurityIDSource["CftcCommodityCode"] = "Q";
    LegAdditionalTermBondSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    LegAdditionalTermBondSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    LegAdditionalTermBondSecurityIDSource["LegalEntityIdentifier"] = "T";
    LegAdditionalTermBondSecurityIDSource["Synthetic"] = "U";
    LegAdditionalTermBondSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(LegAdditionalTermBondSecurityIDSource = exports.LegAdditionalTermBondSecurityIDSource || (exports.LegAdditionalTermBondSecurityIDSource = {}));
var LegAdditionalTermBondSeniority;
(function (LegAdditionalTermBondSeniority) {
    LegAdditionalTermBondSeniority["SeniorSecured"] = "SD";
    LegAdditionalTermBondSeniority["Senior"] = "SR";
    LegAdditionalTermBondSeniority["Subordinated"] = "SB";
})(LegAdditionalTermBondSeniority = exports.LegAdditionalTermBondSeniority || (exports.LegAdditionalTermBondSeniority = {}));
var LegAdditionalTermBondCouponType;
(function (LegAdditionalTermBondCouponType) {
    LegAdditionalTermBondCouponType[LegAdditionalTermBondCouponType["Zero"] = 0] = "Zero";
    LegAdditionalTermBondCouponType[LegAdditionalTermBondCouponType["FixedRate"] = 1] = "FixedRate";
    LegAdditionalTermBondCouponType[LegAdditionalTermBondCouponType["FloatingRate"] = 2] = "FloatingRate";
    LegAdditionalTermBondCouponType[LegAdditionalTermBondCouponType["Structured"] = 3] = "Structured";
})(LegAdditionalTermBondCouponType = exports.LegAdditionalTermBondCouponType || (exports.LegAdditionalTermBondCouponType = {}));
var LegAdditionalTermBondCouponFrequencyUnit;
(function (LegAdditionalTermBondCouponFrequencyUnit) {
    LegAdditionalTermBondCouponFrequencyUnit["Day"] = "D";
    LegAdditionalTermBondCouponFrequencyUnit["Week"] = "Wk";
    LegAdditionalTermBondCouponFrequencyUnit["Month"] = "Mo";
    LegAdditionalTermBondCouponFrequencyUnit["Year"] = "Yr";
    LegAdditionalTermBondCouponFrequencyUnit["Hour"] = "H";
    LegAdditionalTermBondCouponFrequencyUnit["Minute"] = "Min";
    LegAdditionalTermBondCouponFrequencyUnit["Second"] = "S";
    LegAdditionalTermBondCouponFrequencyUnit["Term"] = "T";
})(LegAdditionalTermBondCouponFrequencyUnit = exports.LegAdditionalTermBondCouponFrequencyUnit || (exports.LegAdditionalTermBondCouponFrequencyUnit = {}));
var LegAdditionalTermBondDayCount;
(function (LegAdditionalTermBondDayCount) {
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["E11"] = 0] = "E11";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["E3036030U360OrBondBasis"] = 1] = "E3036030U360OrBondBasis";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["E30360Sia"] = 2] = "E30360Sia";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["E30360M"] = 3] = "E30360M";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["E30E360EurobondBasis"] = 4] = "E30E360EurobondBasis";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["E30E360Isda"] = 5] = "E30E360Isda";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["Act360"] = 6] = "Act360";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["Act365Fixed"] = 7] = "Act365Fixed";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["ActActAfb"] = 8] = "ActActAfb";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["ActActIcma"] = 9] = "ActActIcma";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["ActActIcsmaUltimo"] = 10] = "ActActIcsmaUltimo";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["ActActIsda"] = 11] = "ActActIsda";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["Bus252"] = 12] = "Bus252";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["E30E360"] = 13] = "E30E360";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["Act365L"] = 14] = "Act365L";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["Nl365"] = 15] = "Nl365";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["Nl360"] = 16] = "Nl360";
    LegAdditionalTermBondDayCount[LegAdditionalTermBondDayCount["Act364"] = 17] = "Act364";
})(LegAdditionalTermBondDayCount = exports.LegAdditionalTermBondDayCount || (exports.LegAdditionalTermBondDayCount = {}));
var LegCashSettlQuoteMethod;
(function (LegCashSettlQuoteMethod) {
    LegCashSettlQuoteMethod[LegCashSettlQuoteMethod["Bid"] = 0] = "Bid";
    LegCashSettlQuoteMethod[LegCashSettlQuoteMethod["Mid"] = 1] = "Mid";
    LegCashSettlQuoteMethod[LegCashSettlQuoteMethod["Offer"] = 2] = "Offer";
})(LegCashSettlQuoteMethod = exports.LegCashSettlQuoteMethod || (exports.LegCashSettlQuoteMethod = {}));
var LegCashSettlValuationMethod;
(function (LegCashSettlValuationMethod) {
    LegCashSettlValuationMethod[LegCashSettlValuationMethod["Market"] = 0] = "Market";
    LegCashSettlValuationMethod[LegCashSettlValuationMethod["Highest"] = 1] = "Highest";
    LegCashSettlValuationMethod[LegCashSettlValuationMethod["AverageMarket"] = 2] = "AverageMarket";
    LegCashSettlValuationMethod[LegCashSettlValuationMethod["AverageHighest"] = 3] = "AverageHighest";
    LegCashSettlValuationMethod[LegCashSettlValuationMethod["BlendedMarket"] = 4] = "BlendedMarket";
    LegCashSettlValuationMethod[LegCashSettlValuationMethod["BlendedHighest"] = 5] = "BlendedHighest";
    LegCashSettlValuationMethod[LegCashSettlValuationMethod["AverageBlendedMarket"] = 6] = "AverageBlendedMarket";
    LegCashSettlValuationMethod[LegCashSettlValuationMethod["AverageBlendedHighest"] = 7] = "AverageBlendedHighest";
})(LegCashSettlValuationMethod = exports.LegCashSettlValuationMethod || (exports.LegCashSettlValuationMethod = {}));
var LegComplexEventCreditEventUnit;
(function (LegComplexEventCreditEventUnit) {
    LegComplexEventCreditEventUnit["Day"] = "D";
    LegComplexEventCreditEventUnit["Week"] = "Wk";
    LegComplexEventCreditEventUnit["Month"] = "Mo";
    LegComplexEventCreditEventUnit["Year"] = "Yr";
})(LegComplexEventCreditEventUnit = exports.LegComplexEventCreditEventUnit || (exports.LegComplexEventCreditEventUnit = {}));
var LegComplexEventCreditEventDayType;
(function (LegComplexEventCreditEventDayType) {
    LegComplexEventCreditEventDayType[LegComplexEventCreditEventDayType["Business"] = 0] = "Business";
    LegComplexEventCreditEventDayType[LegComplexEventCreditEventDayType["Calendar"] = 1] = "Calendar";
    LegComplexEventCreditEventDayType[LegComplexEventCreditEventDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegComplexEventCreditEventDayType[LegComplexEventCreditEventDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegComplexEventCreditEventDayType[LegComplexEventCreditEventDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegComplexEventCreditEventDayType[LegComplexEventCreditEventDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegComplexEventCreditEventDayType = exports.LegComplexEventCreditEventDayType || (exports.LegComplexEventCreditEventDayType = {}));
var LegComplexEventCreditEventQualifier;
(function (LegComplexEventCreditEventQualifier) {
    LegComplexEventCreditEventQualifier["RetructuringMultipleHoldingObligations"] = "H";
    LegComplexEventCreditEventQualifier["RestructuringMultipleCreditEventNotices"] = "E";
    LegComplexEventCreditEventQualifier["FloatingRateInterestShortfall"] = "C";
})(LegComplexEventCreditEventQualifier = exports.LegComplexEventCreditEventQualifier || (exports.LegComplexEventCreditEventQualifier = {}));
var LegComplexEventPeriodType;
(function (LegComplexEventPeriodType) {
    LegComplexEventPeriodType[LegComplexEventPeriodType["AsianOut"] = 0] = "AsianOut";
    LegComplexEventPeriodType[LegComplexEventPeriodType["AsianIn"] = 1] = "AsianIn";
    LegComplexEventPeriodType[LegComplexEventPeriodType["BarrierCap"] = 2] = "BarrierCap";
    LegComplexEventPeriodType[LegComplexEventPeriodType["BarrierFloor"] = 3] = "BarrierFloor";
    LegComplexEventPeriodType[LegComplexEventPeriodType["KnockOut"] = 4] = "KnockOut";
    LegComplexEventPeriodType[LegComplexEventPeriodType["KnockIn"] = 5] = "KnockIn";
})(LegComplexEventPeriodType = exports.LegComplexEventPeriodType || (exports.LegComplexEventPeriodType = {}));
var LegComplexEventRateSource;
(function (LegComplexEventRateSource) {
    LegComplexEventRateSource[LegComplexEventRateSource["Bloomberg"] = 0] = "Bloomberg";
    LegComplexEventRateSource[LegComplexEventRateSource["Reuters"] = 1] = "Reuters";
    LegComplexEventRateSource[LegComplexEventRateSource["Telerate"] = 2] = "Telerate";
    LegComplexEventRateSource[LegComplexEventRateSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    LegComplexEventRateSource[LegComplexEventRateSource["Other"] = 99] = "Other";
})(LegComplexEventRateSource = exports.LegComplexEventRateSource || (exports.LegComplexEventRateSource = {}));
var LegComplexEventRateSourceType;
(function (LegComplexEventRateSourceType) {
    LegComplexEventRateSourceType[LegComplexEventRateSourceType["Primary"] = 0] = "Primary";
    LegComplexEventRateSourceType[LegComplexEventRateSourceType["Secondary"] = 1] = "Secondary";
})(LegComplexEventRateSourceType = exports.LegComplexEventRateSourceType || (exports.LegComplexEventRateSourceType = {}));
var LegComplexEventDateOffsetUnit;
(function (LegComplexEventDateOffsetUnit) {
    LegComplexEventDateOffsetUnit["Day"] = "D";
    LegComplexEventDateOffsetUnit["Week"] = "Wk";
    LegComplexEventDateOffsetUnit["Month"] = "Mo";
    LegComplexEventDateOffsetUnit["Year"] = "Yr";
})(LegComplexEventDateOffsetUnit = exports.LegComplexEventDateOffsetUnit || (exports.LegComplexEventDateOffsetUnit = {}));
var LegComplexEventDateOffsetDayType;
(function (LegComplexEventDateOffsetDayType) {
    LegComplexEventDateOffsetDayType[LegComplexEventDateOffsetDayType["Business"] = 0] = "Business";
    LegComplexEventDateOffsetDayType[LegComplexEventDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegComplexEventDateOffsetDayType[LegComplexEventDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegComplexEventDateOffsetDayType[LegComplexEventDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegComplexEventDateOffsetDayType[LegComplexEventDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegComplexEventDateOffsetDayType[LegComplexEventDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegComplexEventDateOffsetDayType = exports.LegComplexEventDateOffsetDayType || (exports.LegComplexEventDateOffsetDayType = {}));
var LegComplexEventDateBusinessDayConvention;
(function (LegComplexEventDateBusinessDayConvention) {
    LegComplexEventDateBusinessDayConvention[LegComplexEventDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegComplexEventDateBusinessDayConvention[LegComplexEventDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegComplexEventDateBusinessDayConvention[LegComplexEventDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegComplexEventDateBusinessDayConvention[LegComplexEventDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegComplexEventDateBusinessDayConvention[LegComplexEventDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegComplexEventDateBusinessDayConvention[LegComplexEventDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegComplexEventDateBusinessDayConvention[LegComplexEventDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegComplexEventDateBusinessDayConvention[LegComplexEventDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegComplexEventDateBusinessDayConvention = exports.LegComplexEventDateBusinessDayConvention || (exports.LegComplexEventDateBusinessDayConvention = {}));
var LegComplexEventScheduleFrequencyUnit;
(function (LegComplexEventScheduleFrequencyUnit) {
    LegComplexEventScheduleFrequencyUnit["Day"] = "D";
    LegComplexEventScheduleFrequencyUnit["Week"] = "Wk";
    LegComplexEventScheduleFrequencyUnit["Month"] = "Mo";
    LegComplexEventScheduleFrequencyUnit["Year"] = "Yr";
})(LegComplexEventScheduleFrequencyUnit = exports.LegComplexEventScheduleFrequencyUnit || (exports.LegComplexEventScheduleFrequencyUnit = {}));
var LegComplexEventScheduleRollConvention;
(function (LegComplexEventScheduleRollConvention) {
    LegComplexEventScheduleRollConvention["E1stDayOfTheMonth"] = "1";
    LegComplexEventScheduleRollConvention["E2ndDayOfTheMonth"] = "2";
    LegComplexEventScheduleRollConvention["E3rdDayOfTheMonth"] = "3";
    LegComplexEventScheduleRollConvention["E4thDayOfTheMonth"] = "4";
    LegComplexEventScheduleRollConvention["E5thDayOfTheMonth"] = "5";
    LegComplexEventScheduleRollConvention["E6ThdDayOfTheMonth"] = "6";
    LegComplexEventScheduleRollConvention["E7thDayOfTheMonth"] = "7";
    LegComplexEventScheduleRollConvention["E8thDayOfTheMonth"] = "8";
    LegComplexEventScheduleRollConvention["E9thDayOfTheMonth"] = "9";
    LegComplexEventScheduleRollConvention["E10thDayOfTheMonth"] = "10";
    LegComplexEventScheduleRollConvention["E11ThDayOfTheMonth"] = "11";
    LegComplexEventScheduleRollConvention["E12ThDayOfTheMonth"] = "12";
    LegComplexEventScheduleRollConvention["E13ThDayOfTheMonth"] = "13";
    LegComplexEventScheduleRollConvention["E14thDayOfTheMonth"] = "14";
    LegComplexEventScheduleRollConvention["E15thDayOfTheMonth"] = "15";
    LegComplexEventScheduleRollConvention["E16thDayOfTheMonth"] = "16";
    LegComplexEventScheduleRollConvention["E17thDayOfTheMonth"] = "17";
    LegComplexEventScheduleRollConvention["E18thDayOfTheMonth"] = "18";
    LegComplexEventScheduleRollConvention["E19thDayOfTheMonth"] = "19";
    LegComplexEventScheduleRollConvention["E20thDayOfTheMonth"] = "20";
    LegComplexEventScheduleRollConvention["E21stDayOfTheMonth"] = "21";
    LegComplexEventScheduleRollConvention["E22ndDayOfTheMonth"] = "22";
    LegComplexEventScheduleRollConvention["E23rdDayOfTheMonth"] = "23";
    LegComplexEventScheduleRollConvention["E24thDayOfTheMonth"] = "24";
    LegComplexEventScheduleRollConvention["E25thDayOfTheMonth"] = "25";
    LegComplexEventScheduleRollConvention["E26thDayOfTheMonth"] = "26";
    LegComplexEventScheduleRollConvention["E27thDayOfTheMonth"] = "27";
    LegComplexEventScheduleRollConvention["E28thDayOfTheMonth"] = "28";
    LegComplexEventScheduleRollConvention["E29thDayOfTheMonth"] = "29";
    LegComplexEventScheduleRollConvention["E30thDayOfTheMonth"] = "30";
    LegComplexEventScheduleRollConvention["TheEndOfTheMonth"] = "EOM";
    LegComplexEventScheduleRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    LegComplexEventScheduleRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    LegComplexEventScheduleRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    LegComplexEventScheduleRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    LegComplexEventScheduleRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    LegComplexEventScheduleRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    LegComplexEventScheduleRollConvention["NoAdjustment"] = "NONE";
    LegComplexEventScheduleRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    LegComplexEventScheduleRollConvention["Monday"] = "MON";
    LegComplexEventScheduleRollConvention["Tuesday"] = "TUE";
    LegComplexEventScheduleRollConvention["Wednesday"] = "WED";
    LegComplexEventScheduleRollConvention["Thursday"] = "THU";
    LegComplexEventScheduleRollConvention["Friday"] = "FRI";
    LegComplexEventScheduleRollConvention["Saturday"] = "SAT";
    LegComplexEventScheduleRollConvention["Sunday"] = "SUN";
})(LegComplexEventScheduleRollConvention = exports.LegComplexEventScheduleRollConvention || (exports.LegComplexEventScheduleRollConvention = {}));
var LegDeliveryScheduleType;
(function (LegDeliveryScheduleType) {
    LegDeliveryScheduleType[LegDeliveryScheduleType["Notional"] = 0] = "Notional";
    LegDeliveryScheduleType[LegDeliveryScheduleType["Delivery"] = 1] = "Delivery";
    LegDeliveryScheduleType[LegDeliveryScheduleType["PhysicalSettlementPeriod"] = 2] = "PhysicalSettlementPeriod";
})(LegDeliveryScheduleType = exports.LegDeliveryScheduleType || (exports.LegDeliveryScheduleType = {}));
var LegDeliveryScheduleNotionalUnitOfMeasure;
(function (LegDeliveryScheduleNotionalUnitOfMeasure) {
    LegDeliveryScheduleNotionalUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegDeliveryScheduleNotionalUnitOfMeasure["Allowances"] = "Alw";
    LegDeliveryScheduleNotionalUnitOfMeasure["Barrels"] = "Bbl";
    LegDeliveryScheduleNotionalUnitOfMeasure["CubicMeters"] = "CBM";
    LegDeliveryScheduleNotionalUnitOfMeasure["BoardFeet"] = "BDFT";
    LegDeliveryScheduleNotionalUnitOfMeasure["Gigajoules"] = "GJ";
    LegDeliveryScheduleNotionalUnitOfMeasure["Bushels"] = "Bu";
    LegDeliveryScheduleNotionalUnitOfMeasure["KilowattHours"] = "kWh";
    LegDeliveryScheduleNotionalUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegDeliveryScheduleNotionalUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegDeliveryScheduleNotionalUnitOfMeasure["MegawattHours"] = "MWh";
    LegDeliveryScheduleNotionalUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegDeliveryScheduleNotionalUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegDeliveryScheduleNotionalUnitOfMeasure["Therms"] = "thm";
    LegDeliveryScheduleNotionalUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegDeliveryScheduleNotionalUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegDeliveryScheduleNotionalUnitOfMeasure["HundredweightUs"] = "cwt";
    LegDeliveryScheduleNotionalUnitOfMeasure["Days"] = "day";
    LegDeliveryScheduleNotionalUnitOfMeasure["DryMetricTons"] = "dt";
    LegDeliveryScheduleNotionalUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegDeliveryScheduleNotionalUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegDeliveryScheduleNotionalUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegDeliveryScheduleNotionalUnitOfMeasure["Grams"] = "g";
    LegDeliveryScheduleNotionalUnitOfMeasure["Gallons"] = "Gal";
    LegDeliveryScheduleNotionalUnitOfMeasure["GrossTons"] = "GT";
    LegDeliveryScheduleNotionalUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegDeliveryScheduleNotionalUnitOfMeasure["IndexPoint"] = "IPNT";
    LegDeliveryScheduleNotionalUnitOfMeasure["Kilograms"] = "kg";
    LegDeliveryScheduleNotionalUnitOfMeasure["Kiloliters"] = "kL";
    LegDeliveryScheduleNotionalUnitOfMeasure["KilowattYear"] = "kW-a";
    LegDeliveryScheduleNotionalUnitOfMeasure["KilowattDay"] = "kW-d";
    LegDeliveryScheduleNotionalUnitOfMeasure["KilowattHour"] = "kW-h";
    LegDeliveryScheduleNotionalUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegDeliveryScheduleNotionalUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegDeliveryScheduleNotionalUnitOfMeasure["Liters"] = "L";
    LegDeliveryScheduleNotionalUnitOfMeasure["Pounds"] = "lbs";
    LegDeliveryScheduleNotionalUnitOfMeasure["MegawattYear"] = "MW-a";
    LegDeliveryScheduleNotionalUnitOfMeasure["MegawattDay"] = "MW-d";
    LegDeliveryScheduleNotionalUnitOfMeasure["MegawattHour"] = "MW-h";
    LegDeliveryScheduleNotionalUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegDeliveryScheduleNotionalUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegDeliveryScheduleNotionalUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegDeliveryScheduleNotionalUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegDeliveryScheduleNotionalUnitOfMeasure["MetricTons"] = "t";
    LegDeliveryScheduleNotionalUnitOfMeasure["TonsUs"] = "tn";
    LegDeliveryScheduleNotionalUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegDeliveryScheduleNotionalUnitOfMeasure["UsDollars"] = "USD";
})(LegDeliveryScheduleNotionalUnitOfMeasure = exports.LegDeliveryScheduleNotionalUnitOfMeasure || (exports.LegDeliveryScheduleNotionalUnitOfMeasure = {}));
var LegDeliveryScheduleNotionalCommodityFrequency;
(function (LegDeliveryScheduleNotionalCommodityFrequency) {
    LegDeliveryScheduleNotionalCommodityFrequency[LegDeliveryScheduleNotionalCommodityFrequency["Term"] = 0] = "Term";
    LegDeliveryScheduleNotionalCommodityFrequency[LegDeliveryScheduleNotionalCommodityFrequency["PerBusinessDay"] = 1] = "PerBusinessDay";
    LegDeliveryScheduleNotionalCommodityFrequency[LegDeliveryScheduleNotionalCommodityFrequency["PerCalculationPeriod"] = 2] = "PerCalculationPeriod";
    LegDeliveryScheduleNotionalCommodityFrequency[LegDeliveryScheduleNotionalCommodityFrequency["PerSettlementPeriod"] = 3] = "PerSettlementPeriod";
    LegDeliveryScheduleNotionalCommodityFrequency[LegDeliveryScheduleNotionalCommodityFrequency["PerCalendarDay"] = 4] = "PerCalendarDay";
    LegDeliveryScheduleNotionalCommodityFrequency[LegDeliveryScheduleNotionalCommodityFrequency["PerHour"] = 5] = "PerHour";
    LegDeliveryScheduleNotionalCommodityFrequency[LegDeliveryScheduleNotionalCommodityFrequency["PerMonth"] = 6] = "PerMonth";
})(LegDeliveryScheduleNotionalCommodityFrequency = exports.LegDeliveryScheduleNotionalCommodityFrequency || (exports.LegDeliveryScheduleNotionalCommodityFrequency = {}));
var LegDeliveryScheduleToleranceUnitOfMeasure;
(function (LegDeliveryScheduleToleranceUnitOfMeasure) {
    LegDeliveryScheduleToleranceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegDeliveryScheduleToleranceUnitOfMeasure["Allowances"] = "Alw";
    LegDeliveryScheduleToleranceUnitOfMeasure["Barrels"] = "Bbl";
    LegDeliveryScheduleToleranceUnitOfMeasure["CubicMeters"] = "CBM";
    LegDeliveryScheduleToleranceUnitOfMeasure["BoardFeet"] = "BDFT";
    LegDeliveryScheduleToleranceUnitOfMeasure["Gigajoules"] = "GJ";
    LegDeliveryScheduleToleranceUnitOfMeasure["Bushels"] = "Bu";
    LegDeliveryScheduleToleranceUnitOfMeasure["KilowattHours"] = "kWh";
    LegDeliveryScheduleToleranceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegDeliveryScheduleToleranceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegDeliveryScheduleToleranceUnitOfMeasure["MegawattHours"] = "MWh";
    LegDeliveryScheduleToleranceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegDeliveryScheduleToleranceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegDeliveryScheduleToleranceUnitOfMeasure["Therms"] = "thm";
    LegDeliveryScheduleToleranceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegDeliveryScheduleToleranceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegDeliveryScheduleToleranceUnitOfMeasure["HundredweightUs"] = "cwt";
    LegDeliveryScheduleToleranceUnitOfMeasure["Days"] = "day";
    LegDeliveryScheduleToleranceUnitOfMeasure["DryMetricTons"] = "dt";
    LegDeliveryScheduleToleranceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegDeliveryScheduleToleranceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegDeliveryScheduleToleranceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegDeliveryScheduleToleranceUnitOfMeasure["Grams"] = "g";
    LegDeliveryScheduleToleranceUnitOfMeasure["Gallons"] = "Gal";
    LegDeliveryScheduleToleranceUnitOfMeasure["GrossTons"] = "GT";
    LegDeliveryScheduleToleranceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegDeliveryScheduleToleranceUnitOfMeasure["IndexPoint"] = "IPNT";
    LegDeliveryScheduleToleranceUnitOfMeasure["Kilograms"] = "kg";
    LegDeliveryScheduleToleranceUnitOfMeasure["Kiloliters"] = "kL";
    LegDeliveryScheduleToleranceUnitOfMeasure["KilowattYear"] = "kW-a";
    LegDeliveryScheduleToleranceUnitOfMeasure["KilowattDay"] = "kW-d";
    LegDeliveryScheduleToleranceUnitOfMeasure["KilowattHour"] = "kW-h";
    LegDeliveryScheduleToleranceUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegDeliveryScheduleToleranceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegDeliveryScheduleToleranceUnitOfMeasure["Liters"] = "L";
    LegDeliveryScheduleToleranceUnitOfMeasure["Pounds"] = "lbs";
    LegDeliveryScheduleToleranceUnitOfMeasure["MegawattYear"] = "MW-a";
    LegDeliveryScheduleToleranceUnitOfMeasure["MegawattDay"] = "MW-d";
    LegDeliveryScheduleToleranceUnitOfMeasure["MegawattHour"] = "MW-h";
    LegDeliveryScheduleToleranceUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegDeliveryScheduleToleranceUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegDeliveryScheduleToleranceUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegDeliveryScheduleToleranceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegDeliveryScheduleToleranceUnitOfMeasure["MetricTons"] = "t";
    LegDeliveryScheduleToleranceUnitOfMeasure["TonsUs"] = "tn";
    LegDeliveryScheduleToleranceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegDeliveryScheduleToleranceUnitOfMeasure["UsDollars"] = "USD";
})(LegDeliveryScheduleToleranceUnitOfMeasure = exports.LegDeliveryScheduleToleranceUnitOfMeasure || (exports.LegDeliveryScheduleToleranceUnitOfMeasure = {}));
var LegDeliveryScheduleToleranceType;
(function (LegDeliveryScheduleToleranceType) {
    LegDeliveryScheduleToleranceType[LegDeliveryScheduleToleranceType["Absolute"] = 0] = "Absolute";
    LegDeliveryScheduleToleranceType[LegDeliveryScheduleToleranceType["Percentage"] = 1] = "Percentage";
})(LegDeliveryScheduleToleranceType = exports.LegDeliveryScheduleToleranceType || (exports.LegDeliveryScheduleToleranceType = {}));
var LegDeliveryScheduleSettlFlowType;
(function (LegDeliveryScheduleSettlFlowType) {
    LegDeliveryScheduleSettlFlowType[LegDeliveryScheduleSettlFlowType["AllTimes"] = 0] = "AllTimes";
    LegDeliveryScheduleSettlFlowType[LegDeliveryScheduleSettlFlowType["OnPeak"] = 1] = "OnPeak";
    LegDeliveryScheduleSettlFlowType[LegDeliveryScheduleSettlFlowType["OffPeak"] = 2] = "OffPeak";
    LegDeliveryScheduleSettlFlowType[LegDeliveryScheduleSettlFlowType["Base"] = 3] = "Base";
    LegDeliveryScheduleSettlFlowType[LegDeliveryScheduleSettlFlowType["BlockHours"] = 4] = "BlockHours";
    LegDeliveryScheduleSettlFlowType[LegDeliveryScheduleSettlFlowType["Other"] = 5] = "Other";
})(LegDeliveryScheduleSettlFlowType = exports.LegDeliveryScheduleSettlFlowType || (exports.LegDeliveryScheduleSettlFlowType = {}));
var LegDeliveryScheduleSettlHolidaysProcessingInstruction;
(function (LegDeliveryScheduleSettlHolidaysProcessingInstruction) {
    LegDeliveryScheduleSettlHolidaysProcessingInstruction[LegDeliveryScheduleSettlHolidaysProcessingInstruction["DoNotIncludeHolidays"] = 0] = "DoNotIncludeHolidays";
    LegDeliveryScheduleSettlHolidaysProcessingInstruction[LegDeliveryScheduleSettlHolidaysProcessingInstruction["IncludeHolidays"] = 1] = "IncludeHolidays";
})(LegDeliveryScheduleSettlHolidaysProcessingInstruction = exports.LegDeliveryScheduleSettlHolidaysProcessingInstruction || (exports.LegDeliveryScheduleSettlHolidaysProcessingInstruction = {}));
var LegDeliveryScheduleSettlDay;
(function (LegDeliveryScheduleSettlDay) {
    LegDeliveryScheduleSettlDay[LegDeliveryScheduleSettlDay["Monday"] = 1] = "Monday";
    LegDeliveryScheduleSettlDay[LegDeliveryScheduleSettlDay["Tuesday"] = 2] = "Tuesday";
    LegDeliveryScheduleSettlDay[LegDeliveryScheduleSettlDay["Wednesday"] = 3] = "Wednesday";
    LegDeliveryScheduleSettlDay[LegDeliveryScheduleSettlDay["Thursday"] = 4] = "Thursday";
    LegDeliveryScheduleSettlDay[LegDeliveryScheduleSettlDay["Friday"] = 5] = "Friday";
    LegDeliveryScheduleSettlDay[LegDeliveryScheduleSettlDay["Saturday"] = 6] = "Saturday";
    LegDeliveryScheduleSettlDay[LegDeliveryScheduleSettlDay["Sunday"] = 7] = "Sunday";
    LegDeliveryScheduleSettlDay[LegDeliveryScheduleSettlDay["AllWeekdays"] = 8] = "AllWeekdays";
    LegDeliveryScheduleSettlDay[LegDeliveryScheduleSettlDay["AllDays"] = 9] = "AllDays";
    LegDeliveryScheduleSettlDay[LegDeliveryScheduleSettlDay["AllWeekends"] = 10] = "AllWeekends";
})(LegDeliveryScheduleSettlDay = exports.LegDeliveryScheduleSettlDay || (exports.LegDeliveryScheduleSettlDay = {}));
var LegDeliveryScheduleSettlTimeType;
(function (LegDeliveryScheduleSettlTimeType) {
    LegDeliveryScheduleSettlTimeType[LegDeliveryScheduleSettlTimeType["HourOfTheDay"] = 0] = "HourOfTheDay";
    LegDeliveryScheduleSettlTimeType[LegDeliveryScheduleSettlTimeType["HhMmTimeFormat"] = 1] = "HhMmTimeFormat";
})(LegDeliveryScheduleSettlTimeType = exports.LegDeliveryScheduleSettlTimeType || (exports.LegDeliveryScheduleSettlTimeType = {}));
var LegDeliveryStreamType;
(function (LegDeliveryStreamType) {
    LegDeliveryStreamType[LegDeliveryStreamType["PeriodicDefaultIfNotSpecified"] = 0] = "PeriodicDefaultIfNotSpecified";
    LegDeliveryStreamType[LegDeliveryStreamType["Initial"] = 1] = "Initial";
    LegDeliveryStreamType[LegDeliveryStreamType["Single"] = 2] = "Single";
})(LegDeliveryStreamType = exports.LegDeliveryStreamType || (exports.LegDeliveryStreamType = {}));
var LegDeliveryStreamDeliveryRestriction;
(function (LegDeliveryStreamDeliveryRestriction) {
    LegDeliveryStreamDeliveryRestriction[LegDeliveryStreamDeliveryRestriction["Firm"] = 1] = "Firm";
    LegDeliveryStreamDeliveryRestriction[LegDeliveryStreamDeliveryRestriction["InterruptableOrNonFirm"] = 2] = "InterruptableOrNonFirm";
    LegDeliveryStreamDeliveryRestriction[LegDeliveryStreamDeliveryRestriction["ForceMajeure"] = 3] = "ForceMajeure";
    LegDeliveryStreamDeliveryRestriction[LegDeliveryStreamDeliveryRestriction["SystemFirm"] = 4] = "SystemFirm";
    LegDeliveryStreamDeliveryRestriction[LegDeliveryStreamDeliveryRestriction["UnitFirm"] = 5] = "UnitFirm";
})(LegDeliveryStreamDeliveryRestriction = exports.LegDeliveryStreamDeliveryRestriction || (exports.LegDeliveryStreamDeliveryRestriction = {}));
var LegDeliveryStreamDeliveryContingentPartySide;
(function (LegDeliveryStreamDeliveryContingentPartySide) {
    LegDeliveryStreamDeliveryContingentPartySide[LegDeliveryStreamDeliveryContingentPartySide["Buyer"] = 0] = "Buyer";
    LegDeliveryStreamDeliveryContingentPartySide[LegDeliveryStreamDeliveryContingentPartySide["Seller"] = 1] = "Seller";
})(LegDeliveryStreamDeliveryContingentPartySide = exports.LegDeliveryStreamDeliveryContingentPartySide || (exports.LegDeliveryStreamDeliveryContingentPartySide = {}));
var LegDeliveryStreamTitleTransferCondition;
(function (LegDeliveryStreamTitleTransferCondition) {
    LegDeliveryStreamTitleTransferCondition[LegDeliveryStreamTitleTransferCondition["TransfersWithRiskOfLoss"] = 0] = "TransfersWithRiskOfLoss";
    LegDeliveryStreamTitleTransferCondition[LegDeliveryStreamTitleTransferCondition["DoesNotTransferWithRiskOfLoss"] = 1] = "DoesNotTransferWithRiskOfLoss";
})(LegDeliveryStreamTitleTransferCondition = exports.LegDeliveryStreamTitleTransferCondition || (exports.LegDeliveryStreamTitleTransferCondition = {}));
var LegDeliveryStreamToleranceUnitOfMeasure;
(function (LegDeliveryStreamToleranceUnitOfMeasure) {
    LegDeliveryStreamToleranceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegDeliveryStreamToleranceUnitOfMeasure["Allowances"] = "Alw";
    LegDeliveryStreamToleranceUnitOfMeasure["Barrels"] = "Bbl";
    LegDeliveryStreamToleranceUnitOfMeasure["CubicMeters"] = "CBM";
    LegDeliveryStreamToleranceUnitOfMeasure["BoardFeet"] = "BDFT";
    LegDeliveryStreamToleranceUnitOfMeasure["Gigajoules"] = "GJ";
    LegDeliveryStreamToleranceUnitOfMeasure["Bushels"] = "Bu";
    LegDeliveryStreamToleranceUnitOfMeasure["KilowattHours"] = "kWh";
    LegDeliveryStreamToleranceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegDeliveryStreamToleranceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegDeliveryStreamToleranceUnitOfMeasure["MegawattHours"] = "MWh";
    LegDeliveryStreamToleranceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegDeliveryStreamToleranceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegDeliveryStreamToleranceUnitOfMeasure["Therms"] = "thm";
    LegDeliveryStreamToleranceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegDeliveryStreamToleranceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegDeliveryStreamToleranceUnitOfMeasure["HundredweightUs"] = "cwt";
    LegDeliveryStreamToleranceUnitOfMeasure["Days"] = "day";
    LegDeliveryStreamToleranceUnitOfMeasure["DryMetricTons"] = "dt";
    LegDeliveryStreamToleranceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegDeliveryStreamToleranceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegDeliveryStreamToleranceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegDeliveryStreamToleranceUnitOfMeasure["Grams"] = "g";
    LegDeliveryStreamToleranceUnitOfMeasure["Gallons"] = "Gal";
    LegDeliveryStreamToleranceUnitOfMeasure["GrossTons"] = "GT";
    LegDeliveryStreamToleranceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegDeliveryStreamToleranceUnitOfMeasure["IndexPoint"] = "IPNT";
    LegDeliveryStreamToleranceUnitOfMeasure["Kilograms"] = "kg";
    LegDeliveryStreamToleranceUnitOfMeasure["Kiloliters"] = "kL";
    LegDeliveryStreamToleranceUnitOfMeasure["KilowattYear"] = "kW-a";
    LegDeliveryStreamToleranceUnitOfMeasure["KilowattDay"] = "kW-d";
    LegDeliveryStreamToleranceUnitOfMeasure["KilowattHour"] = "kW-h";
    LegDeliveryStreamToleranceUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegDeliveryStreamToleranceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegDeliveryStreamToleranceUnitOfMeasure["Liters"] = "L";
    LegDeliveryStreamToleranceUnitOfMeasure["Pounds"] = "lbs";
    LegDeliveryStreamToleranceUnitOfMeasure["MegawattYear"] = "MW-a";
    LegDeliveryStreamToleranceUnitOfMeasure["MegawattDay"] = "MW-d";
    LegDeliveryStreamToleranceUnitOfMeasure["MegawattHour"] = "MW-h";
    LegDeliveryStreamToleranceUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegDeliveryStreamToleranceUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegDeliveryStreamToleranceUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegDeliveryStreamToleranceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegDeliveryStreamToleranceUnitOfMeasure["MetricTons"] = "t";
    LegDeliveryStreamToleranceUnitOfMeasure["TonsUs"] = "tn";
    LegDeliveryStreamToleranceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegDeliveryStreamToleranceUnitOfMeasure["UsDollars"] = "USD";
})(LegDeliveryStreamToleranceUnitOfMeasure = exports.LegDeliveryStreamToleranceUnitOfMeasure || (exports.LegDeliveryStreamToleranceUnitOfMeasure = {}));
var LegDeliveryStreamToleranceType;
(function (LegDeliveryStreamToleranceType) {
    LegDeliveryStreamToleranceType[LegDeliveryStreamToleranceType["Absolute"] = 0] = "Absolute";
    LegDeliveryStreamToleranceType[LegDeliveryStreamToleranceType["Percentage"] = 1] = "Percentage";
})(LegDeliveryStreamToleranceType = exports.LegDeliveryStreamToleranceType || (exports.LegDeliveryStreamToleranceType = {}));
var LegDeliveryStreamToleranceOptionSide;
(function (LegDeliveryStreamToleranceOptionSide) {
    LegDeliveryStreamToleranceOptionSide[LegDeliveryStreamToleranceOptionSide["Buyer"] = 1] = "Buyer";
    LegDeliveryStreamToleranceOptionSide[LegDeliveryStreamToleranceOptionSide["Seller"] = 2] = "Seller";
})(LegDeliveryStreamToleranceOptionSide = exports.LegDeliveryStreamToleranceOptionSide || (exports.LegDeliveryStreamToleranceOptionSide = {}));
var LegDeliveryStreamElectingPartySide;
(function (LegDeliveryStreamElectingPartySide) {
    LegDeliveryStreamElectingPartySide[LegDeliveryStreamElectingPartySide["Buyer"] = 0] = "Buyer";
    LegDeliveryStreamElectingPartySide[LegDeliveryStreamElectingPartySide["Seller"] = 1] = "Seller";
})(LegDeliveryStreamElectingPartySide = exports.LegDeliveryStreamElectingPartySide || (exports.LegDeliveryStreamElectingPartySide = {}));
var LegMarketDisruptionProvision;
(function (LegMarketDisruptionProvision) {
    LegMarketDisruptionProvision[LegMarketDisruptionProvision["NotApplicable"] = 0] = "NotApplicable";
    LegMarketDisruptionProvision[LegMarketDisruptionProvision["Applicable"] = 1] = "Applicable";
    LegMarketDisruptionProvision[LegMarketDisruptionProvision["AsSpecifiedInMasterAgreement"] = 2] = "AsSpecifiedInMasterAgreement";
    LegMarketDisruptionProvision[LegMarketDisruptionProvision["AsSpecifiedInConfirmation"] = 3] = "AsSpecifiedInConfirmation";
})(LegMarketDisruptionProvision = exports.LegMarketDisruptionProvision || (exports.LegMarketDisruptionProvision = {}));
var LegMarketDisruptionFallbackProvision;
(function (LegMarketDisruptionFallbackProvision) {
    LegMarketDisruptionFallbackProvision[LegMarketDisruptionFallbackProvision["AsSpecifiedInMasterAgreement"] = 0] = "AsSpecifiedInMasterAgreement";
    LegMarketDisruptionFallbackProvision[LegMarketDisruptionFallbackProvision["AsSpecifiedInConfirmation"] = 1] = "AsSpecifiedInConfirmation";
})(LegMarketDisruptionFallbackProvision = exports.LegMarketDisruptionFallbackProvision || (exports.LegMarketDisruptionFallbackProvision = {}));
var LegMarketDisruptionFallbackUnderlierType;
(function (LegMarketDisruptionFallbackUnderlierType) {
    LegMarketDisruptionFallbackUnderlierType[LegMarketDisruptionFallbackUnderlierType["Basket"] = 0] = "Basket";
    LegMarketDisruptionFallbackUnderlierType[LegMarketDisruptionFallbackUnderlierType["Bond"] = 1] = "Bond";
    LegMarketDisruptionFallbackUnderlierType[LegMarketDisruptionFallbackUnderlierType["Cash"] = 2] = "Cash";
    LegMarketDisruptionFallbackUnderlierType[LegMarketDisruptionFallbackUnderlierType["Commodity"] = 3] = "Commodity";
    LegMarketDisruptionFallbackUnderlierType[LegMarketDisruptionFallbackUnderlierType["ConvertibleBond"] = 4] = "ConvertibleBond";
    LegMarketDisruptionFallbackUnderlierType[LegMarketDisruptionFallbackUnderlierType["Equity"] = 5] = "Equity";
    LegMarketDisruptionFallbackUnderlierType[LegMarketDisruptionFallbackUnderlierType["ExchangeTradedFund"] = 6] = "ExchangeTradedFund";
    LegMarketDisruptionFallbackUnderlierType[LegMarketDisruptionFallbackUnderlierType["Future"] = 7] = "Future";
    LegMarketDisruptionFallbackUnderlierType[LegMarketDisruptionFallbackUnderlierType["Index"] = 8] = "Index";
    LegMarketDisruptionFallbackUnderlierType[LegMarketDisruptionFallbackUnderlierType["Loan"] = 9] = "Loan";
    LegMarketDisruptionFallbackUnderlierType[LegMarketDisruptionFallbackUnderlierType["Mortgage"] = 10] = "Mortgage";
    LegMarketDisruptionFallbackUnderlierType[LegMarketDisruptionFallbackUnderlierType["MutualFund"] = 11] = "MutualFund";
})(LegMarketDisruptionFallbackUnderlierType = exports.LegMarketDisruptionFallbackUnderlierType || (exports.LegMarketDisruptionFallbackUnderlierType = {}));
var LegMarketDisruptionFallbackUnderlierSecurityIDSource;
(function (LegMarketDisruptionFallbackUnderlierSecurityIDSource) {
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["Cusip"] = "1";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["Sedol"] = "2";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["Quik"] = "3";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["IsinNumber"] = "4";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["RicCode"] = "5";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["IsoCurrencyCode"] = "6";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["IsoCountryCode"] = "7";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["ExchangeSymbol"] = "8";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["BloombergSymbol"] = "A";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["Wertpapier"] = "B";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["Dutch"] = "C";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["Valoren"] = "D";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["Sicovam"] = "E";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["Belgian"] = "F";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["LetterOfCredit"] = "L";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["MarkitRedEntityClip"] = "N";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["MarkitRedPairClip"] = "P";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["CftcCommodityCode"] = "Q";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["LegalEntityIdentifier"] = "T";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["Synthetic"] = "U";
    LegMarketDisruptionFallbackUnderlierSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(LegMarketDisruptionFallbackUnderlierSecurityIDSource = exports.LegMarketDisruptionFallbackUnderlierSecurityIDSource || (exports.LegMarketDisruptionFallbackUnderlierSecurityIDSource = {}));
var LegExerciseConfirmationMethod;
(function (LegExerciseConfirmationMethod) {
    LegExerciseConfirmationMethod[LegExerciseConfirmationMethod["NotRequired"] = 0] = "NotRequired";
    LegExerciseConfirmationMethod[LegExerciseConfirmationMethod["NonElectronic"] = 1] = "NonElectronic";
    LegExerciseConfirmationMethod[LegExerciseConfirmationMethod["Electronic"] = 2] = "Electronic";
    LegExerciseConfirmationMethod[LegExerciseConfirmationMethod["UnknownAtTimeOfReport"] = 3] = "UnknownAtTimeOfReport";
})(LegExerciseConfirmationMethod = exports.LegExerciseConfirmationMethod || (exports.LegExerciseConfirmationMethod = {}));
var LegOptionExerciseBusinessDayConvention;
(function (LegOptionExerciseBusinessDayConvention) {
    LegOptionExerciseBusinessDayConvention[LegOptionExerciseBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegOptionExerciseBusinessDayConvention[LegOptionExerciseBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegOptionExerciseBusinessDayConvention[LegOptionExerciseBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegOptionExerciseBusinessDayConvention[LegOptionExerciseBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegOptionExerciseBusinessDayConvention[LegOptionExerciseBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegOptionExerciseBusinessDayConvention[LegOptionExerciseBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegOptionExerciseBusinessDayConvention[LegOptionExerciseBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegOptionExerciseBusinessDayConvention[LegOptionExerciseBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegOptionExerciseBusinessDayConvention = exports.LegOptionExerciseBusinessDayConvention || (exports.LegOptionExerciseBusinessDayConvention = {}));
var LegOptionExerciseEarliestDateOffsetDayType;
(function (LegOptionExerciseEarliestDateOffsetDayType) {
    LegOptionExerciseEarliestDateOffsetDayType[LegOptionExerciseEarliestDateOffsetDayType["Business"] = 0] = "Business";
    LegOptionExerciseEarliestDateOffsetDayType[LegOptionExerciseEarliestDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegOptionExerciseEarliestDateOffsetDayType[LegOptionExerciseEarliestDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegOptionExerciseEarliestDateOffsetDayType[LegOptionExerciseEarliestDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegOptionExerciseEarliestDateOffsetDayType[LegOptionExerciseEarliestDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegOptionExerciseEarliestDateOffsetDayType[LegOptionExerciseEarliestDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegOptionExerciseEarliestDateOffsetDayType = exports.LegOptionExerciseEarliestDateOffsetDayType || (exports.LegOptionExerciseEarliestDateOffsetDayType = {}));
var LegOptionExerciseEarliestDateOffsetUnit;
(function (LegOptionExerciseEarliestDateOffsetUnit) {
    LegOptionExerciseEarliestDateOffsetUnit["Day"] = "D";
    LegOptionExerciseEarliestDateOffsetUnit["Week"] = "Wk";
    LegOptionExerciseEarliestDateOffsetUnit["Month"] = "Mo";
    LegOptionExerciseEarliestDateOffsetUnit["Year"] = "Yr";
})(LegOptionExerciseEarliestDateOffsetUnit = exports.LegOptionExerciseEarliestDateOffsetUnit || (exports.LegOptionExerciseEarliestDateOffsetUnit = {}));
var LegOptionExerciseFrequencyUnit;
(function (LegOptionExerciseFrequencyUnit) {
    LegOptionExerciseFrequencyUnit["Day"] = "D";
    LegOptionExerciseFrequencyUnit["Week"] = "Wk";
    LegOptionExerciseFrequencyUnit["Month"] = "Mo";
    LegOptionExerciseFrequencyUnit["Year"] = "Yr";
})(LegOptionExerciseFrequencyUnit = exports.LegOptionExerciseFrequencyUnit || (exports.LegOptionExerciseFrequencyUnit = {}));
var LegOptionExerciseStartDateOffsetUnit;
(function (LegOptionExerciseStartDateOffsetUnit) {
    LegOptionExerciseStartDateOffsetUnit["Day"] = "D";
    LegOptionExerciseStartDateOffsetUnit["Week"] = "Wk";
    LegOptionExerciseStartDateOffsetUnit["Month"] = "Mo";
    LegOptionExerciseStartDateOffsetUnit["Year"] = "Yr";
})(LegOptionExerciseStartDateOffsetUnit = exports.LegOptionExerciseStartDateOffsetUnit || (exports.LegOptionExerciseStartDateOffsetUnit = {}));
var LegOptionExerciseStartDateOffsetDayType;
(function (LegOptionExerciseStartDateOffsetDayType) {
    LegOptionExerciseStartDateOffsetDayType[LegOptionExerciseStartDateOffsetDayType["Business"] = 0] = "Business";
    LegOptionExerciseStartDateOffsetDayType[LegOptionExerciseStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegOptionExerciseStartDateOffsetDayType[LegOptionExerciseStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegOptionExerciseStartDateOffsetDayType[LegOptionExerciseStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegOptionExerciseStartDateOffsetDayType[LegOptionExerciseStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegOptionExerciseStartDateOffsetDayType[LegOptionExerciseStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegOptionExerciseStartDateOffsetDayType = exports.LegOptionExerciseStartDateOffsetDayType || (exports.LegOptionExerciseStartDateOffsetDayType = {}));
var LegOptionExerciseDateType;
(function (LegOptionExerciseDateType) {
    LegOptionExerciseDateType[LegOptionExerciseDateType["Unadjusted"] = 0] = "Unadjusted";
    LegOptionExerciseDateType[LegOptionExerciseDateType["Adjusted"] = 1] = "Adjusted";
})(LegOptionExerciseDateType = exports.LegOptionExerciseDateType || (exports.LegOptionExerciseDateType = {}));
var LegOptionExerciseExpirationDateBusinessDayConvention;
(function (LegOptionExerciseExpirationDateBusinessDayConvention) {
    LegOptionExerciseExpirationDateBusinessDayConvention[LegOptionExerciseExpirationDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegOptionExerciseExpirationDateBusinessDayConvention[LegOptionExerciseExpirationDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegOptionExerciseExpirationDateBusinessDayConvention[LegOptionExerciseExpirationDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegOptionExerciseExpirationDateBusinessDayConvention[LegOptionExerciseExpirationDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegOptionExerciseExpirationDateBusinessDayConvention[LegOptionExerciseExpirationDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegOptionExerciseExpirationDateBusinessDayConvention[LegOptionExerciseExpirationDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegOptionExerciseExpirationDateBusinessDayConvention[LegOptionExerciseExpirationDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegOptionExerciseExpirationDateBusinessDayConvention[LegOptionExerciseExpirationDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegOptionExerciseExpirationDateBusinessDayConvention = exports.LegOptionExerciseExpirationDateBusinessDayConvention || (exports.LegOptionExerciseExpirationDateBusinessDayConvention = {}));
var LegOptionExerciseExpirationDateOffsetUnit;
(function (LegOptionExerciseExpirationDateOffsetUnit) {
    LegOptionExerciseExpirationDateOffsetUnit["Day"] = "D";
    LegOptionExerciseExpirationDateOffsetUnit["Week"] = "Wk";
    LegOptionExerciseExpirationDateOffsetUnit["Month"] = "Mo";
    LegOptionExerciseExpirationDateOffsetUnit["Year"] = "Yr";
})(LegOptionExerciseExpirationDateOffsetUnit = exports.LegOptionExerciseExpirationDateOffsetUnit || (exports.LegOptionExerciseExpirationDateOffsetUnit = {}));
var LegOptionExerciseExpirationFrequencyUnit;
(function (LegOptionExerciseExpirationFrequencyUnit) {
    LegOptionExerciseExpirationFrequencyUnit["Day"] = "D";
    LegOptionExerciseExpirationFrequencyUnit["Week"] = "Wk";
    LegOptionExerciseExpirationFrequencyUnit["Month"] = "Mo";
    LegOptionExerciseExpirationFrequencyUnit["Year"] = "Yr";
})(LegOptionExerciseExpirationFrequencyUnit = exports.LegOptionExerciseExpirationFrequencyUnit || (exports.LegOptionExerciseExpirationFrequencyUnit = {}));
var LegOptionExerciseExpirationRollConvention;
(function (LegOptionExerciseExpirationRollConvention) {
    LegOptionExerciseExpirationRollConvention["E1stDayOfTheMonth"] = "1";
    LegOptionExerciseExpirationRollConvention["E2ndDayOfTheMonth"] = "2";
    LegOptionExerciseExpirationRollConvention["E3rdDayOfTheMonth"] = "3";
    LegOptionExerciseExpirationRollConvention["E4thDayOfTheMonth"] = "4";
    LegOptionExerciseExpirationRollConvention["E5thDayOfTheMonth"] = "5";
    LegOptionExerciseExpirationRollConvention["E6ThdDayOfTheMonth"] = "6";
    LegOptionExerciseExpirationRollConvention["E7thDayOfTheMonth"] = "7";
    LegOptionExerciseExpirationRollConvention["E8thDayOfTheMonth"] = "8";
    LegOptionExerciseExpirationRollConvention["E9thDayOfTheMonth"] = "9";
    LegOptionExerciseExpirationRollConvention["E10thDayOfTheMonth"] = "10";
    LegOptionExerciseExpirationRollConvention["E11ThDayOfTheMonth"] = "11";
    LegOptionExerciseExpirationRollConvention["E12ThDayOfTheMonth"] = "12";
    LegOptionExerciseExpirationRollConvention["E13ThDayOfTheMonth"] = "13";
    LegOptionExerciseExpirationRollConvention["E14thDayOfTheMonth"] = "14";
    LegOptionExerciseExpirationRollConvention["E15thDayOfTheMonth"] = "15";
    LegOptionExerciseExpirationRollConvention["E16thDayOfTheMonth"] = "16";
    LegOptionExerciseExpirationRollConvention["E17thDayOfTheMonth"] = "17";
    LegOptionExerciseExpirationRollConvention["E18thDayOfTheMonth"] = "18";
    LegOptionExerciseExpirationRollConvention["E19thDayOfTheMonth"] = "19";
    LegOptionExerciseExpirationRollConvention["E20thDayOfTheMonth"] = "20";
    LegOptionExerciseExpirationRollConvention["E21stDayOfTheMonth"] = "21";
    LegOptionExerciseExpirationRollConvention["E22ndDayOfTheMonth"] = "22";
    LegOptionExerciseExpirationRollConvention["E23rdDayOfTheMonth"] = "23";
    LegOptionExerciseExpirationRollConvention["E24thDayOfTheMonth"] = "24";
    LegOptionExerciseExpirationRollConvention["E25thDayOfTheMonth"] = "25";
    LegOptionExerciseExpirationRollConvention["E26thDayOfTheMonth"] = "26";
    LegOptionExerciseExpirationRollConvention["E27thDayOfTheMonth"] = "27";
    LegOptionExerciseExpirationRollConvention["E28thDayOfTheMonth"] = "28";
    LegOptionExerciseExpirationRollConvention["E29thDayOfTheMonth"] = "29";
    LegOptionExerciseExpirationRollConvention["E30thDayOfTheMonth"] = "30";
    LegOptionExerciseExpirationRollConvention["TheEndOfTheMonth"] = "EOM";
    LegOptionExerciseExpirationRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    LegOptionExerciseExpirationRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    LegOptionExerciseExpirationRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    LegOptionExerciseExpirationRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    LegOptionExerciseExpirationRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    LegOptionExerciseExpirationRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    LegOptionExerciseExpirationRollConvention["NoAdjustment"] = "NONE";
    LegOptionExerciseExpirationRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    LegOptionExerciseExpirationRollConvention["Monday"] = "MON";
    LegOptionExerciseExpirationRollConvention["Tuesday"] = "TUE";
    LegOptionExerciseExpirationRollConvention["Wednesday"] = "WED";
    LegOptionExerciseExpirationRollConvention["Thursday"] = "THU";
    LegOptionExerciseExpirationRollConvention["Friday"] = "FRI";
    LegOptionExerciseExpirationRollConvention["Saturday"] = "SAT";
    LegOptionExerciseExpirationRollConvention["Sunday"] = "SUN";
})(LegOptionExerciseExpirationRollConvention = exports.LegOptionExerciseExpirationRollConvention || (exports.LegOptionExerciseExpirationRollConvention = {}));
var LegOptionExerciseExpirationDateOffsetDayType;
(function (LegOptionExerciseExpirationDateOffsetDayType) {
    LegOptionExerciseExpirationDateOffsetDayType[LegOptionExerciseExpirationDateOffsetDayType["Business"] = 0] = "Business";
    LegOptionExerciseExpirationDateOffsetDayType[LegOptionExerciseExpirationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegOptionExerciseExpirationDateOffsetDayType[LegOptionExerciseExpirationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegOptionExerciseExpirationDateOffsetDayType[LegOptionExerciseExpirationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegOptionExerciseExpirationDateOffsetDayType[LegOptionExerciseExpirationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegOptionExerciseExpirationDateOffsetDayType[LegOptionExerciseExpirationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegOptionExerciseExpirationDateOffsetDayType = exports.LegOptionExerciseExpirationDateOffsetDayType || (exports.LegOptionExerciseExpirationDateOffsetDayType = {}));
var LegOptionExerciseExpirationDateType;
(function (LegOptionExerciseExpirationDateType) {
    LegOptionExerciseExpirationDateType[LegOptionExerciseExpirationDateType["Unadjusted"] = 0] = "Unadjusted";
    LegOptionExerciseExpirationDateType[LegOptionExerciseExpirationDateType["Adjusted"] = 1] = "Adjusted";
})(LegOptionExerciseExpirationDateType = exports.LegOptionExerciseExpirationDateType || (exports.LegOptionExerciseExpirationDateType = {}));
var LegPaymentScheduleFixingDayOfWeek;
(function (LegPaymentScheduleFixingDayOfWeek) {
    LegPaymentScheduleFixingDayOfWeek[LegPaymentScheduleFixingDayOfWeek["EveryDayTheDefaultIfNotSpecified"] = 0] = "EveryDayTheDefaultIfNotSpecified";
    LegPaymentScheduleFixingDayOfWeek[LegPaymentScheduleFixingDayOfWeek["Monday"] = 1] = "Monday";
    LegPaymentScheduleFixingDayOfWeek[LegPaymentScheduleFixingDayOfWeek["Tuesday"] = 2] = "Tuesday";
    LegPaymentScheduleFixingDayOfWeek[LegPaymentScheduleFixingDayOfWeek["Wednesday"] = 3] = "Wednesday";
    LegPaymentScheduleFixingDayOfWeek[LegPaymentScheduleFixingDayOfWeek["Thursday"] = 4] = "Thursday";
    LegPaymentScheduleFixingDayOfWeek[LegPaymentScheduleFixingDayOfWeek["Friday"] = 5] = "Friday";
    LegPaymentScheduleFixingDayOfWeek[LegPaymentScheduleFixingDayOfWeek["Saturday"] = 6] = "Saturday";
    LegPaymentScheduleFixingDayOfWeek[LegPaymentScheduleFixingDayOfWeek["Sunday"] = 7] = "Sunday";
})(LegPaymentScheduleFixingDayOfWeek = exports.LegPaymentScheduleFixingDayOfWeek || (exports.LegPaymentScheduleFixingDayOfWeek = {}));
var LegPaymentScheduleRateUnitOfMeasure;
(function (LegPaymentScheduleRateUnitOfMeasure) {
    LegPaymentScheduleRateUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegPaymentScheduleRateUnitOfMeasure["Allowances"] = "Alw";
    LegPaymentScheduleRateUnitOfMeasure["Barrels"] = "Bbl";
    LegPaymentScheduleRateUnitOfMeasure["CubicMeters"] = "CBM";
    LegPaymentScheduleRateUnitOfMeasure["BoardFeet"] = "BDFT";
    LegPaymentScheduleRateUnitOfMeasure["Gigajoules"] = "GJ";
    LegPaymentScheduleRateUnitOfMeasure["Bushels"] = "Bu";
    LegPaymentScheduleRateUnitOfMeasure["KilowattHours"] = "kWh";
    LegPaymentScheduleRateUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegPaymentScheduleRateUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegPaymentScheduleRateUnitOfMeasure["MegawattHours"] = "MWh";
    LegPaymentScheduleRateUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegPaymentScheduleRateUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegPaymentScheduleRateUnitOfMeasure["Therms"] = "thm";
    LegPaymentScheduleRateUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegPaymentScheduleRateUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegPaymentScheduleRateUnitOfMeasure["HundredweightUs"] = "cwt";
    LegPaymentScheduleRateUnitOfMeasure["Days"] = "day";
    LegPaymentScheduleRateUnitOfMeasure["DryMetricTons"] = "dt";
    LegPaymentScheduleRateUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegPaymentScheduleRateUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegPaymentScheduleRateUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegPaymentScheduleRateUnitOfMeasure["Grams"] = "g";
    LegPaymentScheduleRateUnitOfMeasure["Gallons"] = "Gal";
    LegPaymentScheduleRateUnitOfMeasure["GrossTons"] = "GT";
    LegPaymentScheduleRateUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegPaymentScheduleRateUnitOfMeasure["IndexPoint"] = "IPNT";
    LegPaymentScheduleRateUnitOfMeasure["Kilograms"] = "kg";
    LegPaymentScheduleRateUnitOfMeasure["Kiloliters"] = "kL";
    LegPaymentScheduleRateUnitOfMeasure["KilowattYear"] = "kW-a";
    LegPaymentScheduleRateUnitOfMeasure["KilowattDay"] = "kW-d";
    LegPaymentScheduleRateUnitOfMeasure["KilowattHour"] = "kW-h";
    LegPaymentScheduleRateUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegPaymentScheduleRateUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegPaymentScheduleRateUnitOfMeasure["Liters"] = "L";
    LegPaymentScheduleRateUnitOfMeasure["Pounds"] = "lbs";
    LegPaymentScheduleRateUnitOfMeasure["MegawattYear"] = "MW-a";
    LegPaymentScheduleRateUnitOfMeasure["MegawattDay"] = "MW-d";
    LegPaymentScheduleRateUnitOfMeasure["MegawattHour"] = "MW-h";
    LegPaymentScheduleRateUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegPaymentScheduleRateUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegPaymentScheduleRateUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegPaymentScheduleRateUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegPaymentScheduleRateUnitOfMeasure["MetricTons"] = "t";
    LegPaymentScheduleRateUnitOfMeasure["TonsUs"] = "tn";
    LegPaymentScheduleRateUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegPaymentScheduleRateUnitOfMeasure["UsDollars"] = "USD";
})(LegPaymentScheduleRateUnitOfMeasure = exports.LegPaymentScheduleRateUnitOfMeasure || (exports.LegPaymentScheduleRateUnitOfMeasure = {}));
var LegPaymentScheduleRateSpreadType;
(function (LegPaymentScheduleRateSpreadType) {
    LegPaymentScheduleRateSpreadType[LegPaymentScheduleRateSpreadType["Absolute"] = 0] = "Absolute";
    LegPaymentScheduleRateSpreadType[LegPaymentScheduleRateSpreadType["Percentage"] = 1] = "Percentage";
})(LegPaymentScheduleRateSpreadType = exports.LegPaymentScheduleRateSpreadType || (exports.LegPaymentScheduleRateSpreadType = {}));
var LegPaymentScheduleSettlPeriodPriceUnitOfMeasure;
(function (LegPaymentScheduleSettlPeriodPriceUnitOfMeasure) {
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["Allowances"] = "Alw";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["Barrels"] = "Bbl";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["CubicMeters"] = "CBM";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["BoardFeet"] = "BDFT";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["Gigajoules"] = "GJ";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["Bushels"] = "Bu";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattHours"] = "kWh";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattHours"] = "MWh";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["Therms"] = "thm";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["HundredweightUs"] = "cwt";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["Days"] = "day";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["DryMetricTons"] = "dt";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["Grams"] = "g";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["Gallons"] = "Gal";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["GrossTons"] = "GT";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["IndexPoint"] = "IPNT";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["Kilograms"] = "kg";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["Kiloliters"] = "kL";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattYear"] = "kW-a";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattDay"] = "kW-d";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattHour"] = "kW-h";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["Liters"] = "L";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["Pounds"] = "lbs";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattYear"] = "MW-a";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattDay"] = "MW-d";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattHour"] = "MW-h";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["MetricTons"] = "t";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["TonsUs"] = "tn";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegPaymentScheduleSettlPeriodPriceUnitOfMeasure["UsDollars"] = "USD";
})(LegPaymentScheduleSettlPeriodPriceUnitOfMeasure = exports.LegPaymentScheduleSettlPeriodPriceUnitOfMeasure || (exports.LegPaymentScheduleSettlPeriodPriceUnitOfMeasure = {}));
var LegPaymentScheduleStepUnitOfMeasure;
(function (LegPaymentScheduleStepUnitOfMeasure) {
    LegPaymentScheduleStepUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegPaymentScheduleStepUnitOfMeasure["Allowances"] = "Alw";
    LegPaymentScheduleStepUnitOfMeasure["Barrels"] = "Bbl";
    LegPaymentScheduleStepUnitOfMeasure["CubicMeters"] = "CBM";
    LegPaymentScheduleStepUnitOfMeasure["BoardFeet"] = "BDFT";
    LegPaymentScheduleStepUnitOfMeasure["Gigajoules"] = "GJ";
    LegPaymentScheduleStepUnitOfMeasure["Bushels"] = "Bu";
    LegPaymentScheduleStepUnitOfMeasure["KilowattHours"] = "kWh";
    LegPaymentScheduleStepUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegPaymentScheduleStepUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegPaymentScheduleStepUnitOfMeasure["MegawattHours"] = "MWh";
    LegPaymentScheduleStepUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegPaymentScheduleStepUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegPaymentScheduleStepUnitOfMeasure["Therms"] = "thm";
    LegPaymentScheduleStepUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegPaymentScheduleStepUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegPaymentScheduleStepUnitOfMeasure["HundredweightUs"] = "cwt";
    LegPaymentScheduleStepUnitOfMeasure["Days"] = "day";
    LegPaymentScheduleStepUnitOfMeasure["DryMetricTons"] = "dt";
    LegPaymentScheduleStepUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegPaymentScheduleStepUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegPaymentScheduleStepUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegPaymentScheduleStepUnitOfMeasure["Grams"] = "g";
    LegPaymentScheduleStepUnitOfMeasure["Gallons"] = "Gal";
    LegPaymentScheduleStepUnitOfMeasure["GrossTons"] = "GT";
    LegPaymentScheduleStepUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegPaymentScheduleStepUnitOfMeasure["IndexPoint"] = "IPNT";
    LegPaymentScheduleStepUnitOfMeasure["Kilograms"] = "kg";
    LegPaymentScheduleStepUnitOfMeasure["Kiloliters"] = "kL";
    LegPaymentScheduleStepUnitOfMeasure["KilowattYear"] = "kW-a";
    LegPaymentScheduleStepUnitOfMeasure["KilowattDay"] = "kW-d";
    LegPaymentScheduleStepUnitOfMeasure["KilowattHour"] = "kW-h";
    LegPaymentScheduleStepUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegPaymentScheduleStepUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegPaymentScheduleStepUnitOfMeasure["Liters"] = "L";
    LegPaymentScheduleStepUnitOfMeasure["Pounds"] = "lbs";
    LegPaymentScheduleStepUnitOfMeasure["MegawattYear"] = "MW-a";
    LegPaymentScheduleStepUnitOfMeasure["MegawattDay"] = "MW-d";
    LegPaymentScheduleStepUnitOfMeasure["MegawattHour"] = "MW-h";
    LegPaymentScheduleStepUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegPaymentScheduleStepUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegPaymentScheduleStepUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegPaymentScheduleStepUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegPaymentScheduleStepUnitOfMeasure["MetricTons"] = "t";
    LegPaymentScheduleStepUnitOfMeasure["TonsUs"] = "tn";
    LegPaymentScheduleStepUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegPaymentScheduleStepUnitOfMeasure["UsDollars"] = "USD";
})(LegPaymentScheduleStepUnitOfMeasure = exports.LegPaymentScheduleStepUnitOfMeasure || (exports.LegPaymentScheduleStepUnitOfMeasure = {}));
var LegPaymentScheduleFixingDayDistribution;
(function (LegPaymentScheduleFixingDayDistribution) {
    LegPaymentScheduleFixingDayDistribution[LegPaymentScheduleFixingDayDistribution["All"] = 0] = "All";
    LegPaymentScheduleFixingDayDistribution[LegPaymentScheduleFixingDayDistribution["First"] = 1] = "First";
    LegPaymentScheduleFixingDayDistribution[LegPaymentScheduleFixingDayDistribution["Last"] = 2] = "Last";
    LegPaymentScheduleFixingDayDistribution[LegPaymentScheduleFixingDayDistribution["Penultimate"] = 3] = "Penultimate";
})(LegPaymentScheduleFixingDayDistribution = exports.LegPaymentScheduleFixingDayDistribution || (exports.LegPaymentScheduleFixingDayDistribution = {}));
var LegPaymentScheduleFixingLagUnit;
(function (LegPaymentScheduleFixingLagUnit) {
    LegPaymentScheduleFixingLagUnit["Day"] = "D";
    LegPaymentScheduleFixingLagUnit["Week"] = "Wk";
    LegPaymentScheduleFixingLagUnit["Month"] = "Mo";
    LegPaymentScheduleFixingLagUnit["Year"] = "Yr";
})(LegPaymentScheduleFixingLagUnit = exports.LegPaymentScheduleFixingLagUnit || (exports.LegPaymentScheduleFixingLagUnit = {}));
var LegPaymentScheduleFixingFirstObservationDateOffsetUnit;
(function (LegPaymentScheduleFixingFirstObservationDateOffsetUnit) {
    LegPaymentScheduleFixingFirstObservationDateOffsetUnit["Day"] = "D";
    LegPaymentScheduleFixingFirstObservationDateOffsetUnit["Week"] = "Wk";
    LegPaymentScheduleFixingFirstObservationDateOffsetUnit["Month"] = "Mo";
    LegPaymentScheduleFixingFirstObservationDateOffsetUnit["Year"] = "Yr";
})(LegPaymentScheduleFixingFirstObservationDateOffsetUnit = exports.LegPaymentScheduleFixingFirstObservationDateOffsetUnit || (exports.LegPaymentScheduleFixingFirstObservationDateOffsetUnit = {}));
var LegPaymentStreamFixedAmountUnitOfMeasure;
(function (LegPaymentStreamFixedAmountUnitOfMeasure) {
    LegPaymentStreamFixedAmountUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegPaymentStreamFixedAmountUnitOfMeasure["Allowances"] = "Alw";
    LegPaymentStreamFixedAmountUnitOfMeasure["Barrels"] = "Bbl";
    LegPaymentStreamFixedAmountUnitOfMeasure["CubicMeters"] = "CBM";
    LegPaymentStreamFixedAmountUnitOfMeasure["BoardFeet"] = "BDFT";
    LegPaymentStreamFixedAmountUnitOfMeasure["Gigajoules"] = "GJ";
    LegPaymentStreamFixedAmountUnitOfMeasure["Bushels"] = "Bu";
    LegPaymentStreamFixedAmountUnitOfMeasure["KilowattHours"] = "kWh";
    LegPaymentStreamFixedAmountUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegPaymentStreamFixedAmountUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegPaymentStreamFixedAmountUnitOfMeasure["MegawattHours"] = "MWh";
    LegPaymentStreamFixedAmountUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegPaymentStreamFixedAmountUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegPaymentStreamFixedAmountUnitOfMeasure["Therms"] = "thm";
    LegPaymentStreamFixedAmountUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegPaymentStreamFixedAmountUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegPaymentStreamFixedAmountUnitOfMeasure["HundredweightUs"] = "cwt";
    LegPaymentStreamFixedAmountUnitOfMeasure["Days"] = "day";
    LegPaymentStreamFixedAmountUnitOfMeasure["DryMetricTons"] = "dt";
    LegPaymentStreamFixedAmountUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegPaymentStreamFixedAmountUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegPaymentStreamFixedAmountUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegPaymentStreamFixedAmountUnitOfMeasure["Grams"] = "g";
    LegPaymentStreamFixedAmountUnitOfMeasure["Gallons"] = "Gal";
    LegPaymentStreamFixedAmountUnitOfMeasure["GrossTons"] = "GT";
    LegPaymentStreamFixedAmountUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegPaymentStreamFixedAmountUnitOfMeasure["IndexPoint"] = "IPNT";
    LegPaymentStreamFixedAmountUnitOfMeasure["Kilograms"] = "kg";
    LegPaymentStreamFixedAmountUnitOfMeasure["Kiloliters"] = "kL";
    LegPaymentStreamFixedAmountUnitOfMeasure["KilowattYear"] = "kW-a";
    LegPaymentStreamFixedAmountUnitOfMeasure["KilowattDay"] = "kW-d";
    LegPaymentStreamFixedAmountUnitOfMeasure["KilowattHour"] = "kW-h";
    LegPaymentStreamFixedAmountUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegPaymentStreamFixedAmountUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegPaymentStreamFixedAmountUnitOfMeasure["Liters"] = "L";
    LegPaymentStreamFixedAmountUnitOfMeasure["Pounds"] = "lbs";
    LegPaymentStreamFixedAmountUnitOfMeasure["MegawattYear"] = "MW-a";
    LegPaymentStreamFixedAmountUnitOfMeasure["MegawattDay"] = "MW-d";
    LegPaymentStreamFixedAmountUnitOfMeasure["MegawattHour"] = "MW-h";
    LegPaymentStreamFixedAmountUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegPaymentStreamFixedAmountUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegPaymentStreamFixedAmountUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegPaymentStreamFixedAmountUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegPaymentStreamFixedAmountUnitOfMeasure["MetricTons"] = "t";
    LegPaymentStreamFixedAmountUnitOfMeasure["TonsUs"] = "tn";
    LegPaymentStreamFixedAmountUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegPaymentStreamFixedAmountUnitOfMeasure["UsDollars"] = "USD";
})(LegPaymentStreamFixedAmountUnitOfMeasure = exports.LegPaymentStreamFixedAmountUnitOfMeasure || (exports.LegPaymentStreamFixedAmountUnitOfMeasure = {}));
var LegPaymentStreamRateIndex2CurveUnit;
(function (LegPaymentStreamRateIndex2CurveUnit) {
    LegPaymentStreamRateIndex2CurveUnit["Day"] = "D";
    LegPaymentStreamRateIndex2CurveUnit["Week"] = "Wk";
    LegPaymentStreamRateIndex2CurveUnit["Month"] = "Mo";
    LegPaymentStreamRateIndex2CurveUnit["Year"] = "Yr";
})(LegPaymentStreamRateIndex2CurveUnit = exports.LegPaymentStreamRateIndex2CurveUnit || (exports.LegPaymentStreamRateIndex2CurveUnit = {}));
var LegPaymentStreamRateIndexUnitOfMeasure;
(function (LegPaymentStreamRateIndexUnitOfMeasure) {
    LegPaymentStreamRateIndexUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegPaymentStreamRateIndexUnitOfMeasure["Allowances"] = "Alw";
    LegPaymentStreamRateIndexUnitOfMeasure["Barrels"] = "Bbl";
    LegPaymentStreamRateIndexUnitOfMeasure["CubicMeters"] = "CBM";
    LegPaymentStreamRateIndexUnitOfMeasure["BoardFeet"] = "BDFT";
    LegPaymentStreamRateIndexUnitOfMeasure["Gigajoules"] = "GJ";
    LegPaymentStreamRateIndexUnitOfMeasure["Bushels"] = "Bu";
    LegPaymentStreamRateIndexUnitOfMeasure["KilowattHours"] = "kWh";
    LegPaymentStreamRateIndexUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegPaymentStreamRateIndexUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegPaymentStreamRateIndexUnitOfMeasure["MegawattHours"] = "MWh";
    LegPaymentStreamRateIndexUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegPaymentStreamRateIndexUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegPaymentStreamRateIndexUnitOfMeasure["Therms"] = "thm";
    LegPaymentStreamRateIndexUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegPaymentStreamRateIndexUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegPaymentStreamRateIndexUnitOfMeasure["HundredweightUs"] = "cwt";
    LegPaymentStreamRateIndexUnitOfMeasure["Days"] = "day";
    LegPaymentStreamRateIndexUnitOfMeasure["DryMetricTons"] = "dt";
    LegPaymentStreamRateIndexUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegPaymentStreamRateIndexUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegPaymentStreamRateIndexUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegPaymentStreamRateIndexUnitOfMeasure["Grams"] = "g";
    LegPaymentStreamRateIndexUnitOfMeasure["Gallons"] = "Gal";
    LegPaymentStreamRateIndexUnitOfMeasure["GrossTons"] = "GT";
    LegPaymentStreamRateIndexUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegPaymentStreamRateIndexUnitOfMeasure["IndexPoint"] = "IPNT";
    LegPaymentStreamRateIndexUnitOfMeasure["Kilograms"] = "kg";
    LegPaymentStreamRateIndexUnitOfMeasure["Kiloliters"] = "kL";
    LegPaymentStreamRateIndexUnitOfMeasure["KilowattYear"] = "kW-a";
    LegPaymentStreamRateIndexUnitOfMeasure["KilowattDay"] = "kW-d";
    LegPaymentStreamRateIndexUnitOfMeasure["KilowattHour"] = "kW-h";
    LegPaymentStreamRateIndexUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegPaymentStreamRateIndexUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegPaymentStreamRateIndexUnitOfMeasure["Liters"] = "L";
    LegPaymentStreamRateIndexUnitOfMeasure["Pounds"] = "lbs";
    LegPaymentStreamRateIndexUnitOfMeasure["MegawattYear"] = "MW-a";
    LegPaymentStreamRateIndexUnitOfMeasure["MegawattDay"] = "MW-d";
    LegPaymentStreamRateIndexUnitOfMeasure["MegawattHour"] = "MW-h";
    LegPaymentStreamRateIndexUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegPaymentStreamRateIndexUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegPaymentStreamRateIndexUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegPaymentStreamRateIndexUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegPaymentStreamRateIndexUnitOfMeasure["MetricTons"] = "t";
    LegPaymentStreamRateIndexUnitOfMeasure["TonsUs"] = "tn";
    LegPaymentStreamRateIndexUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegPaymentStreamRateIndexUnitOfMeasure["UsDollars"] = "USD";
})(LegPaymentStreamRateIndexUnitOfMeasure = exports.LegPaymentStreamRateIndexUnitOfMeasure || (exports.LegPaymentStreamRateIndexUnitOfMeasure = {}));
var LegPaymentStreamSettlLevel;
(function (LegPaymentStreamSettlLevel) {
    LegPaymentStreamSettlLevel[LegPaymentStreamSettlLevel["Average"] = 0] = "Average";
    LegPaymentStreamSettlLevel[LegPaymentStreamSettlLevel["Maximum"] = 1] = "Maximum";
    LegPaymentStreamSettlLevel[LegPaymentStreamSettlLevel["Minimum"] = 2] = "Minimum";
    LegPaymentStreamSettlLevel[LegPaymentStreamSettlLevel["Cumulative"] = 3] = "Cumulative";
})(LegPaymentStreamSettlLevel = exports.LegPaymentStreamSettlLevel || (exports.LegPaymentStreamSettlLevel = {}));
var LegPaymentStreamReferenceLevelUnitOfMeasure;
(function (LegPaymentStreamReferenceLevelUnitOfMeasure) {
    LegPaymentStreamReferenceLevelUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegPaymentStreamReferenceLevelUnitOfMeasure["Allowances"] = "Alw";
    LegPaymentStreamReferenceLevelUnitOfMeasure["Barrels"] = "Bbl";
    LegPaymentStreamReferenceLevelUnitOfMeasure["CubicMeters"] = "CBM";
    LegPaymentStreamReferenceLevelUnitOfMeasure["BoardFeet"] = "BDFT";
    LegPaymentStreamReferenceLevelUnitOfMeasure["Gigajoules"] = "GJ";
    LegPaymentStreamReferenceLevelUnitOfMeasure["Bushels"] = "Bu";
    LegPaymentStreamReferenceLevelUnitOfMeasure["KilowattHours"] = "kWh";
    LegPaymentStreamReferenceLevelUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegPaymentStreamReferenceLevelUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegPaymentStreamReferenceLevelUnitOfMeasure["MegawattHours"] = "MWh";
    LegPaymentStreamReferenceLevelUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegPaymentStreamReferenceLevelUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegPaymentStreamReferenceLevelUnitOfMeasure["Therms"] = "thm";
    LegPaymentStreamReferenceLevelUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegPaymentStreamReferenceLevelUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegPaymentStreamReferenceLevelUnitOfMeasure["HundredweightUs"] = "cwt";
    LegPaymentStreamReferenceLevelUnitOfMeasure["Days"] = "day";
    LegPaymentStreamReferenceLevelUnitOfMeasure["DryMetricTons"] = "dt";
    LegPaymentStreamReferenceLevelUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegPaymentStreamReferenceLevelUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegPaymentStreamReferenceLevelUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegPaymentStreamReferenceLevelUnitOfMeasure["Grams"] = "g";
    LegPaymentStreamReferenceLevelUnitOfMeasure["Gallons"] = "Gal";
    LegPaymentStreamReferenceLevelUnitOfMeasure["GrossTons"] = "GT";
    LegPaymentStreamReferenceLevelUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegPaymentStreamReferenceLevelUnitOfMeasure["IndexPoint"] = "IPNT";
    LegPaymentStreamReferenceLevelUnitOfMeasure["Kilograms"] = "kg";
    LegPaymentStreamReferenceLevelUnitOfMeasure["Kiloliters"] = "kL";
    LegPaymentStreamReferenceLevelUnitOfMeasure["KilowattYear"] = "kW-a";
    LegPaymentStreamReferenceLevelUnitOfMeasure["KilowattDay"] = "kW-d";
    LegPaymentStreamReferenceLevelUnitOfMeasure["KilowattHour"] = "kW-h";
    LegPaymentStreamReferenceLevelUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegPaymentStreamReferenceLevelUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegPaymentStreamReferenceLevelUnitOfMeasure["Liters"] = "L";
    LegPaymentStreamReferenceLevelUnitOfMeasure["Pounds"] = "lbs";
    LegPaymentStreamReferenceLevelUnitOfMeasure["MegawattYear"] = "MW-a";
    LegPaymentStreamReferenceLevelUnitOfMeasure["MegawattDay"] = "MW-d";
    LegPaymentStreamReferenceLevelUnitOfMeasure["MegawattHour"] = "MW-h";
    LegPaymentStreamReferenceLevelUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegPaymentStreamReferenceLevelUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegPaymentStreamReferenceLevelUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegPaymentStreamReferenceLevelUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegPaymentStreamReferenceLevelUnitOfMeasure["MetricTons"] = "t";
    LegPaymentStreamReferenceLevelUnitOfMeasure["TonsUs"] = "tn";
    LegPaymentStreamReferenceLevelUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegPaymentStreamReferenceLevelUnitOfMeasure["UsDollars"] = "USD";
})(LegPaymentStreamReferenceLevelUnitOfMeasure = exports.LegPaymentStreamReferenceLevelUnitOfMeasure || (exports.LegPaymentStreamReferenceLevelUnitOfMeasure = {}));
var LegPaymentStreamRateSpreadUnitOfMeasure;
(function (LegPaymentStreamRateSpreadUnitOfMeasure) {
    LegPaymentStreamRateSpreadUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegPaymentStreamRateSpreadUnitOfMeasure["Allowances"] = "Alw";
    LegPaymentStreamRateSpreadUnitOfMeasure["Barrels"] = "Bbl";
    LegPaymentStreamRateSpreadUnitOfMeasure["CubicMeters"] = "CBM";
    LegPaymentStreamRateSpreadUnitOfMeasure["BoardFeet"] = "BDFT";
    LegPaymentStreamRateSpreadUnitOfMeasure["Gigajoules"] = "GJ";
    LegPaymentStreamRateSpreadUnitOfMeasure["Bushels"] = "Bu";
    LegPaymentStreamRateSpreadUnitOfMeasure["KilowattHours"] = "kWh";
    LegPaymentStreamRateSpreadUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegPaymentStreamRateSpreadUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegPaymentStreamRateSpreadUnitOfMeasure["MegawattHours"] = "MWh";
    LegPaymentStreamRateSpreadUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegPaymentStreamRateSpreadUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegPaymentStreamRateSpreadUnitOfMeasure["Therms"] = "thm";
    LegPaymentStreamRateSpreadUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegPaymentStreamRateSpreadUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegPaymentStreamRateSpreadUnitOfMeasure["HundredweightUs"] = "cwt";
    LegPaymentStreamRateSpreadUnitOfMeasure["Days"] = "day";
    LegPaymentStreamRateSpreadUnitOfMeasure["DryMetricTons"] = "dt";
    LegPaymentStreamRateSpreadUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegPaymentStreamRateSpreadUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegPaymentStreamRateSpreadUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegPaymentStreamRateSpreadUnitOfMeasure["Grams"] = "g";
    LegPaymentStreamRateSpreadUnitOfMeasure["Gallons"] = "Gal";
    LegPaymentStreamRateSpreadUnitOfMeasure["GrossTons"] = "GT";
    LegPaymentStreamRateSpreadUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegPaymentStreamRateSpreadUnitOfMeasure["IndexPoint"] = "IPNT";
    LegPaymentStreamRateSpreadUnitOfMeasure["Kilograms"] = "kg";
    LegPaymentStreamRateSpreadUnitOfMeasure["Kiloliters"] = "kL";
    LegPaymentStreamRateSpreadUnitOfMeasure["KilowattYear"] = "kW-a";
    LegPaymentStreamRateSpreadUnitOfMeasure["KilowattDay"] = "kW-d";
    LegPaymentStreamRateSpreadUnitOfMeasure["KilowattHour"] = "kW-h";
    LegPaymentStreamRateSpreadUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegPaymentStreamRateSpreadUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegPaymentStreamRateSpreadUnitOfMeasure["Liters"] = "L";
    LegPaymentStreamRateSpreadUnitOfMeasure["Pounds"] = "lbs";
    LegPaymentStreamRateSpreadUnitOfMeasure["MegawattYear"] = "MW-a";
    LegPaymentStreamRateSpreadUnitOfMeasure["MegawattDay"] = "MW-d";
    LegPaymentStreamRateSpreadUnitOfMeasure["MegawattHour"] = "MW-h";
    LegPaymentStreamRateSpreadUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegPaymentStreamRateSpreadUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegPaymentStreamRateSpreadUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegPaymentStreamRateSpreadUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegPaymentStreamRateSpreadUnitOfMeasure["MetricTons"] = "t";
    LegPaymentStreamRateSpreadUnitOfMeasure["TonsUs"] = "tn";
    LegPaymentStreamRateSpreadUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegPaymentStreamRateSpreadUnitOfMeasure["UsDollars"] = "USD";
})(LegPaymentStreamRateSpreadUnitOfMeasure = exports.LegPaymentStreamRateSpreadUnitOfMeasure || (exports.LegPaymentStreamRateSpreadUnitOfMeasure = {}));
var LegPaymentStreamRateSpreadType;
(function (LegPaymentStreamRateSpreadType) {
    LegPaymentStreamRateSpreadType[LegPaymentStreamRateSpreadType["Absolute"] = 0] = "Absolute";
    LegPaymentStreamRateSpreadType[LegPaymentStreamRateSpreadType["Percentage"] = 1] = "Percentage";
})(LegPaymentStreamRateSpreadType = exports.LegPaymentStreamRateSpreadType || (exports.LegPaymentStreamRateSpreadType = {}));
var LegPaymentStreamCalculationLagUnit;
(function (LegPaymentStreamCalculationLagUnit) {
    LegPaymentStreamCalculationLagUnit["Day"] = "D";
    LegPaymentStreamCalculationLagUnit["Week"] = "Wk";
    LegPaymentStreamCalculationLagUnit["Month"] = "Mo";
    LegPaymentStreamCalculationLagUnit["Year"] = "Yr";
})(LegPaymentStreamCalculationLagUnit = exports.LegPaymentStreamCalculationLagUnit || (exports.LegPaymentStreamCalculationLagUnit = {}));
var LegPaymentStreamFirstObservationDateOffsetUnit;
(function (LegPaymentStreamFirstObservationDateOffsetUnit) {
    LegPaymentStreamFirstObservationDateOffsetUnit["Day"] = "D";
    LegPaymentStreamFirstObservationDateOffsetUnit["Week"] = "Wk";
    LegPaymentStreamFirstObservationDateOffsetUnit["Month"] = "Mo";
    LegPaymentStreamFirstObservationDateOffsetUnit["Year"] = "Yr";
})(LegPaymentStreamFirstObservationDateOffsetUnit = exports.LegPaymentStreamFirstObservationDateOffsetUnit || (exports.LegPaymentStreamFirstObservationDateOffsetUnit = {}));
var LegPaymentStreamPricingDayType;
(function (LegPaymentStreamPricingDayType) {
    LegPaymentStreamPricingDayType[LegPaymentStreamPricingDayType["Business"] = 0] = "Business";
    LegPaymentStreamPricingDayType[LegPaymentStreamPricingDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStreamPricingDayType[LegPaymentStreamPricingDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStreamPricingDayType[LegPaymentStreamPricingDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStreamPricingDayType[LegPaymentStreamPricingDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStreamPricingDayType[LegPaymentStreamPricingDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStreamPricingDayType = exports.LegPaymentStreamPricingDayType || (exports.LegPaymentStreamPricingDayType = {}));
var LegPaymentStreamPricingDayDistribution;
(function (LegPaymentStreamPricingDayDistribution) {
    LegPaymentStreamPricingDayDistribution[LegPaymentStreamPricingDayDistribution["All"] = 0] = "All";
    LegPaymentStreamPricingDayDistribution[LegPaymentStreamPricingDayDistribution["First"] = 1] = "First";
    LegPaymentStreamPricingDayDistribution[LegPaymentStreamPricingDayDistribution["Last"] = 2] = "Last";
    LegPaymentStreamPricingDayDistribution[LegPaymentStreamPricingDayDistribution["Penultimate"] = 3] = "Penultimate";
})(LegPaymentStreamPricingDayDistribution = exports.LegPaymentStreamPricingDayDistribution || (exports.LegPaymentStreamPricingDayDistribution = {}));
var LegPaymentStreamPricingBusinessDayConvention;
(function (LegPaymentStreamPricingBusinessDayConvention) {
    LegPaymentStreamPricingBusinessDayConvention[LegPaymentStreamPricingBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegPaymentStreamPricingBusinessDayConvention[LegPaymentStreamPricingBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegPaymentStreamPricingBusinessDayConvention[LegPaymentStreamPricingBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegPaymentStreamPricingBusinessDayConvention[LegPaymentStreamPricingBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegPaymentStreamPricingBusinessDayConvention[LegPaymentStreamPricingBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegPaymentStreamPricingBusinessDayConvention[LegPaymentStreamPricingBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegPaymentStreamPricingBusinessDayConvention[LegPaymentStreamPricingBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegPaymentStreamPricingBusinessDayConvention[LegPaymentStreamPricingBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegPaymentStreamPricingBusinessDayConvention = exports.LegPaymentStreamPricingBusinessDayConvention || (exports.LegPaymentStreamPricingBusinessDayConvention = {}));
var StreamCommoditySettlTimeType;
(function (StreamCommoditySettlTimeType) {
    StreamCommoditySettlTimeType[StreamCommoditySettlTimeType["HourOfTheDay"] = 0] = "HourOfTheDay";
    StreamCommoditySettlTimeType[StreamCommoditySettlTimeType["HhMmTimeFormat"] = 1] = "HhMmTimeFormat";
})(StreamCommoditySettlTimeType = exports.StreamCommoditySettlTimeType || (exports.StreamCommoditySettlTimeType = {}));
var LegPaymentStreamPaymentDateType;
(function (LegPaymentStreamPaymentDateType) {
    LegPaymentStreamPaymentDateType[LegPaymentStreamPaymentDateType["Unadjusted"] = 0] = "Unadjusted";
    LegPaymentStreamPaymentDateType[LegPaymentStreamPaymentDateType["Adjusted"] = 1] = "Adjusted";
})(LegPaymentStreamPaymentDateType = exports.LegPaymentStreamPaymentDateType || (exports.LegPaymentStreamPaymentDateType = {}));
var LegPaymentStreamPricingDateType;
(function (LegPaymentStreamPricingDateType) {
    LegPaymentStreamPricingDateType[LegPaymentStreamPricingDateType["Unadjusted"] = 0] = "Unadjusted";
    LegPaymentStreamPricingDateType[LegPaymentStreamPricingDateType["Adjusted"] = 1] = "Adjusted";
})(LegPaymentStreamPricingDateType = exports.LegPaymentStreamPricingDateType || (exports.LegPaymentStreamPricingDateType = {}));
var LegPaymentStreamPricingDayOfWeek;
(function (LegPaymentStreamPricingDayOfWeek) {
    LegPaymentStreamPricingDayOfWeek[LegPaymentStreamPricingDayOfWeek["EveryDayTheDefaultIfNotSpecified"] = 0] = "EveryDayTheDefaultIfNotSpecified";
    LegPaymentStreamPricingDayOfWeek[LegPaymentStreamPricingDayOfWeek["Monday"] = 1] = "Monday";
    LegPaymentStreamPricingDayOfWeek[LegPaymentStreamPricingDayOfWeek["Tuesday"] = 2] = "Tuesday";
    LegPaymentStreamPricingDayOfWeek[LegPaymentStreamPricingDayOfWeek["Wednesday"] = 3] = "Wednesday";
    LegPaymentStreamPricingDayOfWeek[LegPaymentStreamPricingDayOfWeek["Thursday"] = 4] = "Thursday";
    LegPaymentStreamPricingDayOfWeek[LegPaymentStreamPricingDayOfWeek["Friday"] = 5] = "Friday";
    LegPaymentStreamPricingDayOfWeek[LegPaymentStreamPricingDayOfWeek["Saturday"] = 6] = "Saturday";
    LegPaymentStreamPricingDayOfWeek[LegPaymentStreamPricingDayOfWeek["Sunday"] = 7] = "Sunday";
})(LegPaymentStreamPricingDayOfWeek = exports.LegPaymentStreamPricingDayOfWeek || (exports.LegPaymentStreamPricingDayOfWeek = {}));
var LegPricingDateBusinessDayConvention;
(function (LegPricingDateBusinessDayConvention) {
    LegPricingDateBusinessDayConvention[LegPricingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegPricingDateBusinessDayConvention[LegPricingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegPricingDateBusinessDayConvention[LegPricingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegPricingDateBusinessDayConvention[LegPricingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegPricingDateBusinessDayConvention[LegPricingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegPricingDateBusinessDayConvention[LegPricingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegPricingDateBusinessDayConvention[LegPricingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegPricingDateBusinessDayConvention[LegPricingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegPricingDateBusinessDayConvention = exports.LegPricingDateBusinessDayConvention || (exports.LegPricingDateBusinessDayConvention = {}));
var LegProtectionTermEventUnit;
(function (LegProtectionTermEventUnit) {
    LegProtectionTermEventUnit["Day"] = "D";
    LegProtectionTermEventUnit["Week"] = "Wk";
    LegProtectionTermEventUnit["Month"] = "Mo";
    LegProtectionTermEventUnit["Year"] = "Yr";
})(LegProtectionTermEventUnit = exports.LegProtectionTermEventUnit || (exports.LegProtectionTermEventUnit = {}));
var LegProtectionTermEventDayType;
(function (LegProtectionTermEventDayType) {
    LegProtectionTermEventDayType[LegProtectionTermEventDayType["Business"] = 0] = "Business";
    LegProtectionTermEventDayType[LegProtectionTermEventDayType["Calendar"] = 1] = "Calendar";
    LegProtectionTermEventDayType[LegProtectionTermEventDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegProtectionTermEventDayType[LegProtectionTermEventDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegProtectionTermEventDayType[LegProtectionTermEventDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegProtectionTermEventDayType[LegProtectionTermEventDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegProtectionTermEventDayType = exports.LegProtectionTermEventDayType || (exports.LegProtectionTermEventDayType = {}));
var LegProtectionTermEventQualifier;
(function (LegProtectionTermEventQualifier) {
    LegProtectionTermEventQualifier["RetructuringMultipleHoldingObligations"] = "H";
    LegProtectionTermEventQualifier["RestructuringMultipleCreditEventNotices"] = "E";
    LegProtectionTermEventQualifier["FloatingRateInterestShortfall"] = "C";
})(LegProtectionTermEventQualifier = exports.LegProtectionTermEventQualifier || (exports.LegProtectionTermEventQualifier = {}));
var LegStreamCalculationPeriodDateType;
(function (LegStreamCalculationPeriodDateType) {
    LegStreamCalculationPeriodDateType[LegStreamCalculationPeriodDateType["Unadjusted"] = 0] = "Unadjusted";
    LegStreamCalculationPeriodDateType[LegStreamCalculationPeriodDateType["Adjusted"] = 1] = "Adjusted";
})(LegStreamCalculationPeriodDateType = exports.LegStreamCalculationPeriodDateType || (exports.LegStreamCalculationPeriodDateType = {}));
var LegStreamCalculationCorrectionUnit;
(function (LegStreamCalculationCorrectionUnit) {
    LegStreamCalculationCorrectionUnit["Day"] = "D";
    LegStreamCalculationCorrectionUnit["Week"] = "Wk";
    LegStreamCalculationCorrectionUnit["Month"] = "Mo";
    LegStreamCalculationCorrectionUnit["Year"] = "Yr";
})(LegStreamCalculationCorrectionUnit = exports.LegStreamCalculationCorrectionUnit || (exports.LegStreamCalculationCorrectionUnit = {}));
var LegStreamCommoditySecurityIDSource;
(function (LegStreamCommoditySecurityIDSource) {
    LegStreamCommoditySecurityIDSource["Cusip"] = "1";
    LegStreamCommoditySecurityIDSource["Sedol"] = "2";
    LegStreamCommoditySecurityIDSource["Quik"] = "3";
    LegStreamCommoditySecurityIDSource["IsinNumber"] = "4";
    LegStreamCommoditySecurityIDSource["RicCode"] = "5";
    LegStreamCommoditySecurityIDSource["IsoCurrencyCode"] = "6";
    LegStreamCommoditySecurityIDSource["IsoCountryCode"] = "7";
    LegStreamCommoditySecurityIDSource["ExchangeSymbol"] = "8";
    LegStreamCommoditySecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    LegStreamCommoditySecurityIDSource["BloombergSymbol"] = "A";
    LegStreamCommoditySecurityIDSource["Wertpapier"] = "B";
    LegStreamCommoditySecurityIDSource["Dutch"] = "C";
    LegStreamCommoditySecurityIDSource["Valoren"] = "D";
    LegStreamCommoditySecurityIDSource["Sicovam"] = "E";
    LegStreamCommoditySecurityIDSource["Belgian"] = "F";
    LegStreamCommoditySecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    LegStreamCommoditySecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    LegStreamCommoditySecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    LegStreamCommoditySecurityIDSource["OptionPriceReportingAuthority"] = "J";
    LegStreamCommoditySecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    LegStreamCommoditySecurityIDSource["LetterOfCredit"] = "L";
    LegStreamCommoditySecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    LegStreamCommoditySecurityIDSource["MarkitRedEntityClip"] = "N";
    LegStreamCommoditySecurityIDSource["MarkitRedPairClip"] = "P";
    LegStreamCommoditySecurityIDSource["CftcCommodityCode"] = "Q";
    LegStreamCommoditySecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    LegStreamCommoditySecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    LegStreamCommoditySecurityIDSource["LegalEntityIdentifier"] = "T";
    LegStreamCommoditySecurityIDSource["Synthetic"] = "U";
    LegStreamCommoditySecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(LegStreamCommoditySecurityIDSource = exports.LegStreamCommoditySecurityIDSource || (exports.LegStreamCommoditySecurityIDSource = {}));
var LegStreamCommodityUnitOfMeasure;
(function (LegStreamCommodityUnitOfMeasure) {
    LegStreamCommodityUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegStreamCommodityUnitOfMeasure["Allowances"] = "Alw";
    LegStreamCommodityUnitOfMeasure["Barrels"] = "Bbl";
    LegStreamCommodityUnitOfMeasure["CubicMeters"] = "CBM";
    LegStreamCommodityUnitOfMeasure["BoardFeet"] = "BDFT";
    LegStreamCommodityUnitOfMeasure["Gigajoules"] = "GJ";
    LegStreamCommodityUnitOfMeasure["Bushels"] = "Bu";
    LegStreamCommodityUnitOfMeasure["KilowattHours"] = "kWh";
    LegStreamCommodityUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegStreamCommodityUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegStreamCommodityUnitOfMeasure["MegawattHours"] = "MWh";
    LegStreamCommodityUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegStreamCommodityUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegStreamCommodityUnitOfMeasure["Therms"] = "thm";
    LegStreamCommodityUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegStreamCommodityUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegStreamCommodityUnitOfMeasure["HundredweightUs"] = "cwt";
    LegStreamCommodityUnitOfMeasure["Days"] = "day";
    LegStreamCommodityUnitOfMeasure["DryMetricTons"] = "dt";
    LegStreamCommodityUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegStreamCommodityUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegStreamCommodityUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegStreamCommodityUnitOfMeasure["Grams"] = "g";
    LegStreamCommodityUnitOfMeasure["Gallons"] = "Gal";
    LegStreamCommodityUnitOfMeasure["GrossTons"] = "GT";
    LegStreamCommodityUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegStreamCommodityUnitOfMeasure["IndexPoint"] = "IPNT";
    LegStreamCommodityUnitOfMeasure["Kilograms"] = "kg";
    LegStreamCommodityUnitOfMeasure["Kiloliters"] = "kL";
    LegStreamCommodityUnitOfMeasure["KilowattYear"] = "kW-a";
    LegStreamCommodityUnitOfMeasure["KilowattDay"] = "kW-d";
    LegStreamCommodityUnitOfMeasure["KilowattHour"] = "kW-h";
    LegStreamCommodityUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegStreamCommodityUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegStreamCommodityUnitOfMeasure["Liters"] = "L";
    LegStreamCommodityUnitOfMeasure["Pounds"] = "lbs";
    LegStreamCommodityUnitOfMeasure["MegawattYear"] = "MW-a";
    LegStreamCommodityUnitOfMeasure["MegawattDay"] = "MW-d";
    LegStreamCommodityUnitOfMeasure["MegawattHour"] = "MW-h";
    LegStreamCommodityUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegStreamCommodityUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegStreamCommodityUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegStreamCommodityUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegStreamCommodityUnitOfMeasure["MetricTons"] = "t";
    LegStreamCommodityUnitOfMeasure["TonsUs"] = "tn";
    LegStreamCommodityUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegStreamCommodityUnitOfMeasure["UsDollars"] = "USD";
})(LegStreamCommodityUnitOfMeasure = exports.LegStreamCommodityUnitOfMeasure || (exports.LegStreamCommodityUnitOfMeasure = {}));
var LegStreamCommodityNearbySettlDayUnit;
(function (LegStreamCommodityNearbySettlDayUnit) {
    LegStreamCommodityNearbySettlDayUnit["Week"] = "Wk";
    LegStreamCommodityNearbySettlDayUnit["Month"] = "Mo";
})(LegStreamCommodityNearbySettlDayUnit = exports.LegStreamCommodityNearbySettlDayUnit || (exports.LegStreamCommodityNearbySettlDayUnit = {}));
var LegStreamCommoditySettlDateBusinessDayConvention;
(function (LegStreamCommoditySettlDateBusinessDayConvention) {
    LegStreamCommoditySettlDateBusinessDayConvention[LegStreamCommoditySettlDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegStreamCommoditySettlDateBusinessDayConvention[LegStreamCommoditySettlDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegStreamCommoditySettlDateBusinessDayConvention[LegStreamCommoditySettlDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegStreamCommoditySettlDateBusinessDayConvention[LegStreamCommoditySettlDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegStreamCommoditySettlDateBusinessDayConvention[LegStreamCommoditySettlDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegStreamCommoditySettlDateBusinessDayConvention[LegStreamCommoditySettlDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegStreamCommoditySettlDateBusinessDayConvention[LegStreamCommoditySettlDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegStreamCommoditySettlDateBusinessDayConvention[LegStreamCommoditySettlDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegStreamCommoditySettlDateBusinessDayConvention = exports.LegStreamCommoditySettlDateBusinessDayConvention || (exports.LegStreamCommoditySettlDateBusinessDayConvention = {}));
var LegStreamCommoditySettlDateRollUnit;
(function (LegStreamCommoditySettlDateRollUnit) {
    LegStreamCommoditySettlDateRollUnit["Day"] = "D";
})(LegStreamCommoditySettlDateRollUnit = exports.LegStreamCommoditySettlDateRollUnit || (exports.LegStreamCommoditySettlDateRollUnit = {}));
var LegStreamCommoditySettlDayType;
(function (LegStreamCommoditySettlDayType) {
    LegStreamCommoditySettlDayType[LegStreamCommoditySettlDayType["Business"] = 0] = "Business";
    LegStreamCommoditySettlDayType[LegStreamCommoditySettlDayType["Calendar"] = 1] = "Calendar";
    LegStreamCommoditySettlDayType[LegStreamCommoditySettlDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegStreamCommoditySettlDayType[LegStreamCommoditySettlDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegStreamCommoditySettlDayType[LegStreamCommoditySettlDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegStreamCommoditySettlDayType[LegStreamCommoditySettlDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegStreamCommoditySettlDayType = exports.LegStreamCommoditySettlDayType || (exports.LegStreamCommoditySettlDayType = {}));
var LegStreamCommodityDataSourceIDType;
(function (LegStreamCommodityDataSourceIDType) {
    LegStreamCommodityDataSourceIDType[LegStreamCommodityDataSourceIDType["City4CharacterBusinessCenterCode"] = 0] = "City4CharacterBusinessCenterCode";
    LegStreamCommodityDataSourceIDType[LegStreamCommodityDataSourceIDType["AirportIataStandard"] = 1] = "AirportIataStandard";
    LegStreamCommodityDataSourceIDType[LegStreamCommodityDataSourceIDType["WeatherStationWbanWeatherBureauArmyNavy"] = 2] = "WeatherStationWbanWeatherBureauArmyNavy";
    LegStreamCommodityDataSourceIDType[LegStreamCommodityDataSourceIDType["WeatherIndexWmoWorldMeteorologicalOrganization"] = 3] = "WeatherIndexWmoWorldMeteorologicalOrganization";
})(LegStreamCommodityDataSourceIDType = exports.LegStreamCommodityDataSourceIDType || (exports.LegStreamCommodityDataSourceIDType = {}));
var LegStreamCommoditySettlDay;
(function (LegStreamCommoditySettlDay) {
    LegStreamCommoditySettlDay[LegStreamCommoditySettlDay["Monday"] = 1] = "Monday";
    LegStreamCommoditySettlDay[LegStreamCommoditySettlDay["Tuesday"] = 2] = "Tuesday";
    LegStreamCommoditySettlDay[LegStreamCommoditySettlDay["Wednesday"] = 3] = "Wednesday";
    LegStreamCommoditySettlDay[LegStreamCommoditySettlDay["Thursday"] = 4] = "Thursday";
    LegStreamCommoditySettlDay[LegStreamCommoditySettlDay["Friday"] = 5] = "Friday";
    LegStreamCommoditySettlDay[LegStreamCommoditySettlDay["Saturday"] = 6] = "Saturday";
    LegStreamCommoditySettlDay[LegStreamCommoditySettlDay["Sunday"] = 7] = "Sunday";
    LegStreamCommoditySettlDay[LegStreamCommoditySettlDay["AllWeekdays"] = 8] = "AllWeekdays";
    LegStreamCommoditySettlDay[LegStreamCommoditySettlDay["AllDays"] = 9] = "AllDays";
    LegStreamCommoditySettlDay[LegStreamCommoditySettlDay["AllWeekends"] = 10] = "AllWeekends";
})(LegStreamCommoditySettlDay = exports.LegStreamCommoditySettlDay || (exports.LegStreamCommoditySettlDay = {}));
var LegStreamCommoditySettlFlowType;
(function (LegStreamCommoditySettlFlowType) {
    LegStreamCommoditySettlFlowType[LegStreamCommoditySettlFlowType["AllTimes"] = 0] = "AllTimes";
    LegStreamCommoditySettlFlowType[LegStreamCommoditySettlFlowType["OnPeak"] = 1] = "OnPeak";
    LegStreamCommoditySettlFlowType[LegStreamCommoditySettlFlowType["OffPeak"] = 2] = "OffPeak";
    LegStreamCommoditySettlFlowType[LegStreamCommoditySettlFlowType["Base"] = 3] = "Base";
    LegStreamCommoditySettlFlowType[LegStreamCommoditySettlFlowType["BlockHours"] = 4] = "BlockHours";
    LegStreamCommoditySettlFlowType[LegStreamCommoditySettlFlowType["Other"] = 5] = "Other";
})(LegStreamCommoditySettlFlowType = exports.LegStreamCommoditySettlFlowType || (exports.LegStreamCommoditySettlFlowType = {}));
var LegStreamCommoditySettlPeriodNotionalUnitOfMeasure;
(function (LegStreamCommoditySettlPeriodNotionalUnitOfMeasure) {
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["Allowances"] = "Alw";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["Barrels"] = "Bbl";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["CubicMeters"] = "CBM";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["BoardFeet"] = "BDFT";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["Gigajoules"] = "GJ";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["Bushels"] = "Bu";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattHours"] = "kWh";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattHours"] = "MWh";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["Therms"] = "thm";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["HundredweightUs"] = "cwt";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["Days"] = "day";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["DryMetricTons"] = "dt";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["Grams"] = "g";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["Gallons"] = "Gal";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["GrossTons"] = "GT";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["IndexPoint"] = "IPNT";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["Kilograms"] = "kg";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["Kiloliters"] = "kL";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattYear"] = "kW-a";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattDay"] = "kW-d";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattHour"] = "kW-h";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["Liters"] = "L";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["Pounds"] = "lbs";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattYear"] = "MW-a";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattDay"] = "MW-d";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattHour"] = "MW-h";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["MetricTons"] = "t";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["TonsUs"] = "tn";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegStreamCommoditySettlPeriodNotionalUnitOfMeasure["UsDollars"] = "USD";
})(LegStreamCommoditySettlPeriodNotionalUnitOfMeasure = exports.LegStreamCommoditySettlPeriodNotionalUnitOfMeasure || (exports.LegStreamCommoditySettlPeriodNotionalUnitOfMeasure = {}));
var LegStreamCommoditySettlPeriodFrequencyUnit;
(function (LegStreamCommoditySettlPeriodFrequencyUnit) {
    LegStreamCommoditySettlPeriodFrequencyUnit["Day"] = "D";
    LegStreamCommoditySettlPeriodFrequencyUnit["Week"] = "Wk";
    LegStreamCommoditySettlPeriodFrequencyUnit["Month"] = "Mo";
    LegStreamCommoditySettlPeriodFrequencyUnit["Year"] = "Yr";
})(LegStreamCommoditySettlPeriodFrequencyUnit = exports.LegStreamCommoditySettlPeriodFrequencyUnit || (exports.LegStreamCommoditySettlPeriodFrequencyUnit = {}));
var LegStreamCommoditySettlPeriodPriceUnitOfMeasure;
(function (LegStreamCommoditySettlPeriodPriceUnitOfMeasure) {
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["Allowances"] = "Alw";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["Barrels"] = "Bbl";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["CubicMeters"] = "CBM";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["BoardFeet"] = "BDFT";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["Gigajoules"] = "GJ";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["Bushels"] = "Bu";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattHours"] = "kWh";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattHours"] = "MWh";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["Therms"] = "thm";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["HundredweightUs"] = "cwt";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["Days"] = "day";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["DryMetricTons"] = "dt";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["Grams"] = "g";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["Gallons"] = "Gal";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["GrossTons"] = "GT";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["IndexPoint"] = "IPNT";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["Kilograms"] = "kg";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["Kiloliters"] = "kL";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattYear"] = "kW-a";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattDay"] = "kW-d";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattHour"] = "kW-h";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["Liters"] = "L";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["Pounds"] = "lbs";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattYear"] = "MW-a";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattDay"] = "MW-d";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattHour"] = "MW-h";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["MetricTons"] = "t";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["TonsUs"] = "tn";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegStreamCommoditySettlPeriodPriceUnitOfMeasure["UsDollars"] = "USD";
})(LegStreamCommoditySettlPeriodPriceUnitOfMeasure = exports.LegStreamCommoditySettlPeriodPriceUnitOfMeasure || (exports.LegStreamCommoditySettlPeriodPriceUnitOfMeasure = {}));
var LegStreamCommoditySettlHolidaysProcessingInstruction;
(function (LegStreamCommoditySettlHolidaysProcessingInstruction) {
    LegStreamCommoditySettlHolidaysProcessingInstruction[LegStreamCommoditySettlHolidaysProcessingInstruction["DoNotIncludeHolidays"] = 0] = "DoNotIncludeHolidays";
    LegStreamCommoditySettlHolidaysProcessingInstruction[LegStreamCommoditySettlHolidaysProcessingInstruction["IncludeHolidays"] = 1] = "IncludeHolidays";
})(LegStreamCommoditySettlHolidaysProcessingInstruction = exports.LegStreamCommoditySettlHolidaysProcessingInstruction || (exports.LegStreamCommoditySettlHolidaysProcessingInstruction = {}));
var UnderlyingAdditionalTermBondSecurityIDSource;
(function (UnderlyingAdditionalTermBondSecurityIDSource) {
    UnderlyingAdditionalTermBondSecurityIDSource["Cusip"] = "1";
    UnderlyingAdditionalTermBondSecurityIDSource["Sedol"] = "2";
    UnderlyingAdditionalTermBondSecurityIDSource["Quik"] = "3";
    UnderlyingAdditionalTermBondSecurityIDSource["IsinNumber"] = "4";
    UnderlyingAdditionalTermBondSecurityIDSource["RicCode"] = "5";
    UnderlyingAdditionalTermBondSecurityIDSource["IsoCurrencyCode"] = "6";
    UnderlyingAdditionalTermBondSecurityIDSource["IsoCountryCode"] = "7";
    UnderlyingAdditionalTermBondSecurityIDSource["ExchangeSymbol"] = "8";
    UnderlyingAdditionalTermBondSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    UnderlyingAdditionalTermBondSecurityIDSource["BloombergSymbol"] = "A";
    UnderlyingAdditionalTermBondSecurityIDSource["Wertpapier"] = "B";
    UnderlyingAdditionalTermBondSecurityIDSource["Dutch"] = "C";
    UnderlyingAdditionalTermBondSecurityIDSource["Valoren"] = "D";
    UnderlyingAdditionalTermBondSecurityIDSource["Sicovam"] = "E";
    UnderlyingAdditionalTermBondSecurityIDSource["Belgian"] = "F";
    UnderlyingAdditionalTermBondSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    UnderlyingAdditionalTermBondSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    UnderlyingAdditionalTermBondSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    UnderlyingAdditionalTermBondSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    UnderlyingAdditionalTermBondSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    UnderlyingAdditionalTermBondSecurityIDSource["LetterOfCredit"] = "L";
    UnderlyingAdditionalTermBondSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    UnderlyingAdditionalTermBondSecurityIDSource["MarkitRedEntityClip"] = "N";
    UnderlyingAdditionalTermBondSecurityIDSource["MarkitRedPairClip"] = "P";
    UnderlyingAdditionalTermBondSecurityIDSource["CftcCommodityCode"] = "Q";
    UnderlyingAdditionalTermBondSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    UnderlyingAdditionalTermBondSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    UnderlyingAdditionalTermBondSecurityIDSource["LegalEntityIdentifier"] = "T";
    UnderlyingAdditionalTermBondSecurityIDSource["Synthetic"] = "U";
    UnderlyingAdditionalTermBondSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(UnderlyingAdditionalTermBondSecurityIDSource = exports.UnderlyingAdditionalTermBondSecurityIDSource || (exports.UnderlyingAdditionalTermBondSecurityIDSource = {}));
var LegStreamNotionalFrequencyUnit;
(function (LegStreamNotionalFrequencyUnit) {
    LegStreamNotionalFrequencyUnit["Hour"] = "H";
    LegStreamNotionalFrequencyUnit["Minute"] = "Min";
    LegStreamNotionalFrequencyUnit["Second"] = "S";
    LegStreamNotionalFrequencyUnit["Day"] = "D";
    LegStreamNotionalFrequencyUnit["Week"] = "Wk";
    LegStreamNotionalFrequencyUnit["Month"] = "Mo";
    LegStreamNotionalFrequencyUnit["Year"] = "Yr";
    LegStreamNotionalFrequencyUnit["Quarter"] = "Q";
})(LegStreamNotionalFrequencyUnit = exports.LegStreamNotionalFrequencyUnit || (exports.LegStreamNotionalFrequencyUnit = {}));
var LegStreamNotionalCommodityFrequency;
(function (LegStreamNotionalCommodityFrequency) {
    LegStreamNotionalCommodityFrequency[LegStreamNotionalCommodityFrequency["Term"] = 0] = "Term";
    LegStreamNotionalCommodityFrequency[LegStreamNotionalCommodityFrequency["PerBusinessDay"] = 1] = "PerBusinessDay";
    LegStreamNotionalCommodityFrequency[LegStreamNotionalCommodityFrequency["PerCalculationPeriod"] = 2] = "PerCalculationPeriod";
    LegStreamNotionalCommodityFrequency[LegStreamNotionalCommodityFrequency["PerSettlementPeriod"] = 3] = "PerSettlementPeriod";
    LegStreamNotionalCommodityFrequency[LegStreamNotionalCommodityFrequency["PerCalendarDay"] = 4] = "PerCalendarDay";
    LegStreamNotionalCommodityFrequency[LegStreamNotionalCommodityFrequency["PerHour"] = 5] = "PerHour";
    LegStreamNotionalCommodityFrequency[LegStreamNotionalCommodityFrequency["PerMonth"] = 6] = "PerMonth";
})(LegStreamNotionalCommodityFrequency = exports.LegStreamNotionalCommodityFrequency || (exports.LegStreamNotionalCommodityFrequency = {}));
var LegStreamNotionalUnitOfMeasure;
(function (LegStreamNotionalUnitOfMeasure) {
    LegStreamNotionalUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegStreamNotionalUnitOfMeasure["Allowances"] = "Alw";
    LegStreamNotionalUnitOfMeasure["Barrels"] = "Bbl";
    LegStreamNotionalUnitOfMeasure["CubicMeters"] = "CBM";
    LegStreamNotionalUnitOfMeasure["BoardFeet"] = "BDFT";
    LegStreamNotionalUnitOfMeasure["Gigajoules"] = "GJ";
    LegStreamNotionalUnitOfMeasure["Bushels"] = "Bu";
    LegStreamNotionalUnitOfMeasure["KilowattHours"] = "kWh";
    LegStreamNotionalUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegStreamNotionalUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegStreamNotionalUnitOfMeasure["MegawattHours"] = "MWh";
    LegStreamNotionalUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegStreamNotionalUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegStreamNotionalUnitOfMeasure["Therms"] = "thm";
    LegStreamNotionalUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegStreamNotionalUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegStreamNotionalUnitOfMeasure["HundredweightUs"] = "cwt";
    LegStreamNotionalUnitOfMeasure["Days"] = "day";
    LegStreamNotionalUnitOfMeasure["DryMetricTons"] = "dt";
    LegStreamNotionalUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegStreamNotionalUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegStreamNotionalUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegStreamNotionalUnitOfMeasure["Grams"] = "g";
    LegStreamNotionalUnitOfMeasure["Gallons"] = "Gal";
    LegStreamNotionalUnitOfMeasure["GrossTons"] = "GT";
    LegStreamNotionalUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegStreamNotionalUnitOfMeasure["IndexPoint"] = "IPNT";
    LegStreamNotionalUnitOfMeasure["Kilograms"] = "kg";
    LegStreamNotionalUnitOfMeasure["Kiloliters"] = "kL";
    LegStreamNotionalUnitOfMeasure["KilowattYear"] = "kW-a";
    LegStreamNotionalUnitOfMeasure["KilowattDay"] = "kW-d";
    LegStreamNotionalUnitOfMeasure["KilowattHour"] = "kW-h";
    LegStreamNotionalUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegStreamNotionalUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegStreamNotionalUnitOfMeasure["Liters"] = "L";
    LegStreamNotionalUnitOfMeasure["Pounds"] = "lbs";
    LegStreamNotionalUnitOfMeasure["MegawattYear"] = "MW-a";
    LegStreamNotionalUnitOfMeasure["MegawattDay"] = "MW-d";
    LegStreamNotionalUnitOfMeasure["MegawattHour"] = "MW-h";
    LegStreamNotionalUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegStreamNotionalUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegStreamNotionalUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegStreamNotionalUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegStreamNotionalUnitOfMeasure["MetricTons"] = "t";
    LegStreamNotionalUnitOfMeasure["TonsUs"] = "tn";
    LegStreamNotionalUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegStreamNotionalUnitOfMeasure["UsDollars"] = "USD";
})(LegStreamNotionalUnitOfMeasure = exports.LegStreamNotionalUnitOfMeasure || (exports.LegStreamNotionalUnitOfMeasure = {}));
var LegStreamTotalNotionalUnitOfMeasure;
(function (LegStreamTotalNotionalUnitOfMeasure) {
    LegStreamTotalNotionalUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    LegStreamTotalNotionalUnitOfMeasure["Allowances"] = "Alw";
    LegStreamTotalNotionalUnitOfMeasure["Barrels"] = "Bbl";
    LegStreamTotalNotionalUnitOfMeasure["CubicMeters"] = "CBM";
    LegStreamTotalNotionalUnitOfMeasure["BoardFeet"] = "BDFT";
    LegStreamTotalNotionalUnitOfMeasure["Gigajoules"] = "GJ";
    LegStreamTotalNotionalUnitOfMeasure["Bushels"] = "Bu";
    LegStreamTotalNotionalUnitOfMeasure["KilowattHours"] = "kWh";
    LegStreamTotalNotionalUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    LegStreamTotalNotionalUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    LegStreamTotalNotionalUnitOfMeasure["MegawattHours"] = "MWh";
    LegStreamTotalNotionalUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    LegStreamTotalNotionalUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    LegStreamTotalNotionalUnitOfMeasure["Therms"] = "thm";
    LegStreamTotalNotionalUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    LegStreamTotalNotionalUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    LegStreamTotalNotionalUnitOfMeasure["HundredweightUs"] = "cwt";
    LegStreamTotalNotionalUnitOfMeasure["Days"] = "day";
    LegStreamTotalNotionalUnitOfMeasure["DryMetricTons"] = "dt";
    LegStreamTotalNotionalUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    LegStreamTotalNotionalUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    LegStreamTotalNotionalUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    LegStreamTotalNotionalUnitOfMeasure["Grams"] = "g";
    LegStreamTotalNotionalUnitOfMeasure["Gallons"] = "Gal";
    LegStreamTotalNotionalUnitOfMeasure["GrossTons"] = "GT";
    LegStreamTotalNotionalUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    LegStreamTotalNotionalUnitOfMeasure["IndexPoint"] = "IPNT";
    LegStreamTotalNotionalUnitOfMeasure["Kilograms"] = "kg";
    LegStreamTotalNotionalUnitOfMeasure["Kiloliters"] = "kL";
    LegStreamTotalNotionalUnitOfMeasure["KilowattYear"] = "kW-a";
    LegStreamTotalNotionalUnitOfMeasure["KilowattDay"] = "kW-d";
    LegStreamTotalNotionalUnitOfMeasure["KilowattHour"] = "kW-h";
    LegStreamTotalNotionalUnitOfMeasure["KilowattMonth"] = "kW-M";
    LegStreamTotalNotionalUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    LegStreamTotalNotionalUnitOfMeasure["Liters"] = "L";
    LegStreamTotalNotionalUnitOfMeasure["Pounds"] = "lbs";
    LegStreamTotalNotionalUnitOfMeasure["MegawattYear"] = "MW-a";
    LegStreamTotalNotionalUnitOfMeasure["MegawattDay"] = "MW-d";
    LegStreamTotalNotionalUnitOfMeasure["MegawattHour"] = "MW-h";
    LegStreamTotalNotionalUnitOfMeasure["MegawattMonth"] = "MW-M";
    LegStreamTotalNotionalUnitOfMeasure["MegawattMinute"] = "MW-min";
    LegStreamTotalNotionalUnitOfMeasure["TroyOunces"] = "oz_tr";
    LegStreamTotalNotionalUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    LegStreamTotalNotionalUnitOfMeasure["MetricTons"] = "t";
    LegStreamTotalNotionalUnitOfMeasure["TonsUs"] = "tn";
    LegStreamTotalNotionalUnitOfMeasure["MillionBarrels"] = "MMbbl";
    LegStreamTotalNotionalUnitOfMeasure["UsDollars"] = "USD";
})(LegStreamTotalNotionalUnitOfMeasure = exports.LegStreamTotalNotionalUnitOfMeasure || (exports.LegStreamTotalNotionalUnitOfMeasure = {}));
var UnderlyingComplexEventCreditEventUnit;
(function (UnderlyingComplexEventCreditEventUnit) {
    UnderlyingComplexEventCreditEventUnit["Day"] = "D";
    UnderlyingComplexEventCreditEventUnit["Week"] = "Wk";
    UnderlyingComplexEventCreditEventUnit["Month"] = "Mo";
    UnderlyingComplexEventCreditEventUnit["Year"] = "Yr";
})(UnderlyingComplexEventCreditEventUnit = exports.UnderlyingComplexEventCreditEventUnit || (exports.UnderlyingComplexEventCreditEventUnit = {}));
var UnderlyingComplexEventCreditEventDayType;
(function (UnderlyingComplexEventCreditEventDayType) {
    UnderlyingComplexEventCreditEventDayType[UnderlyingComplexEventCreditEventDayType["Business"] = 0] = "Business";
    UnderlyingComplexEventCreditEventDayType[UnderlyingComplexEventCreditEventDayType["Calendar"] = 1] = "Calendar";
    UnderlyingComplexEventCreditEventDayType[UnderlyingComplexEventCreditEventDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingComplexEventCreditEventDayType[UnderlyingComplexEventCreditEventDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingComplexEventCreditEventDayType[UnderlyingComplexEventCreditEventDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingComplexEventCreditEventDayType[UnderlyingComplexEventCreditEventDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingComplexEventCreditEventDayType = exports.UnderlyingComplexEventCreditEventDayType || (exports.UnderlyingComplexEventCreditEventDayType = {}));
var UnderlyingComplexEventCreditEventQualifier;
(function (UnderlyingComplexEventCreditEventQualifier) {
    UnderlyingComplexEventCreditEventQualifier["RetructuringMultipleHoldingObligations"] = "H";
    UnderlyingComplexEventCreditEventQualifier["RestructuringMultipleCreditEventNotices"] = "E";
    UnderlyingComplexEventCreditEventQualifier["FloatingRateInterestShortfall"] = "C";
})(UnderlyingComplexEventCreditEventQualifier = exports.UnderlyingComplexEventCreditEventQualifier || (exports.UnderlyingComplexEventCreditEventQualifier = {}));
var UnderlyingComplexEventPeriodType;
(function (UnderlyingComplexEventPeriodType) {
    UnderlyingComplexEventPeriodType[UnderlyingComplexEventPeriodType["AsianOut"] = 0] = "AsianOut";
    UnderlyingComplexEventPeriodType[UnderlyingComplexEventPeriodType["AsianIn"] = 1] = "AsianIn";
    UnderlyingComplexEventPeriodType[UnderlyingComplexEventPeriodType["BarrierCap"] = 2] = "BarrierCap";
    UnderlyingComplexEventPeriodType[UnderlyingComplexEventPeriodType["BarrierFloor"] = 3] = "BarrierFloor";
    UnderlyingComplexEventPeriodType[UnderlyingComplexEventPeriodType["KnockOut"] = 4] = "KnockOut";
    UnderlyingComplexEventPeriodType[UnderlyingComplexEventPeriodType["KnockIn"] = 5] = "KnockIn";
})(UnderlyingComplexEventPeriodType = exports.UnderlyingComplexEventPeriodType || (exports.UnderlyingComplexEventPeriodType = {}));
var UnderlyingComplexEventRateSource;
(function (UnderlyingComplexEventRateSource) {
    UnderlyingComplexEventRateSource[UnderlyingComplexEventRateSource["Bloomberg"] = 0] = "Bloomberg";
    UnderlyingComplexEventRateSource[UnderlyingComplexEventRateSource["Reuters"] = 1] = "Reuters";
    UnderlyingComplexEventRateSource[UnderlyingComplexEventRateSource["Telerate"] = 2] = "Telerate";
    UnderlyingComplexEventRateSource[UnderlyingComplexEventRateSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    UnderlyingComplexEventRateSource[UnderlyingComplexEventRateSource["Other"] = 99] = "Other";
})(UnderlyingComplexEventRateSource = exports.UnderlyingComplexEventRateSource || (exports.UnderlyingComplexEventRateSource = {}));
var UnderlyingComplexEventRateSourceType;
(function (UnderlyingComplexEventRateSourceType) {
    UnderlyingComplexEventRateSourceType[UnderlyingComplexEventRateSourceType["Primary"] = 0] = "Primary";
    UnderlyingComplexEventRateSourceType[UnderlyingComplexEventRateSourceType["Secondary"] = 1] = "Secondary";
})(UnderlyingComplexEventRateSourceType = exports.UnderlyingComplexEventRateSourceType || (exports.UnderlyingComplexEventRateSourceType = {}));
var UnderlyingComplexEventDateOffsetUnit;
(function (UnderlyingComplexEventDateOffsetUnit) {
    UnderlyingComplexEventDateOffsetUnit["Day"] = "D";
    UnderlyingComplexEventDateOffsetUnit["Week"] = "Wk";
    UnderlyingComplexEventDateOffsetUnit["Month"] = "Mo";
    UnderlyingComplexEventDateOffsetUnit["Year"] = "Yr";
})(UnderlyingComplexEventDateOffsetUnit = exports.UnderlyingComplexEventDateOffsetUnit || (exports.UnderlyingComplexEventDateOffsetUnit = {}));
var UnderlyingComplexEventDateOffsetDayType;
(function (UnderlyingComplexEventDateOffsetDayType) {
    UnderlyingComplexEventDateOffsetDayType[UnderlyingComplexEventDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingComplexEventDateOffsetDayType[UnderlyingComplexEventDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingComplexEventDateOffsetDayType[UnderlyingComplexEventDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingComplexEventDateOffsetDayType[UnderlyingComplexEventDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingComplexEventDateOffsetDayType[UnderlyingComplexEventDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingComplexEventDateOffsetDayType[UnderlyingComplexEventDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingComplexEventDateOffsetDayType = exports.UnderlyingComplexEventDateOffsetDayType || (exports.UnderlyingComplexEventDateOffsetDayType = {}));
var UnderlyingComplexEventDateBusinessDayConvention;
(function (UnderlyingComplexEventDateBusinessDayConvention) {
    UnderlyingComplexEventDateBusinessDayConvention[UnderlyingComplexEventDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingComplexEventDateBusinessDayConvention[UnderlyingComplexEventDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingComplexEventDateBusinessDayConvention[UnderlyingComplexEventDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingComplexEventDateBusinessDayConvention[UnderlyingComplexEventDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingComplexEventDateBusinessDayConvention[UnderlyingComplexEventDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingComplexEventDateBusinessDayConvention[UnderlyingComplexEventDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingComplexEventDateBusinessDayConvention[UnderlyingComplexEventDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingComplexEventDateBusinessDayConvention[UnderlyingComplexEventDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingComplexEventDateBusinessDayConvention = exports.UnderlyingComplexEventDateBusinessDayConvention || (exports.UnderlyingComplexEventDateBusinessDayConvention = {}));
var UnderlyingComplexEventScheduleFrequencyUnit;
(function (UnderlyingComplexEventScheduleFrequencyUnit) {
    UnderlyingComplexEventScheduleFrequencyUnit["Day"] = "D";
    UnderlyingComplexEventScheduleFrequencyUnit["Week"] = "Wk";
    UnderlyingComplexEventScheduleFrequencyUnit["Month"] = "Mo";
    UnderlyingComplexEventScheduleFrequencyUnit["Year"] = "Yr";
})(UnderlyingComplexEventScheduleFrequencyUnit = exports.UnderlyingComplexEventScheduleFrequencyUnit || (exports.UnderlyingComplexEventScheduleFrequencyUnit = {}));
var UnderlyingComplexEventScheduleRollConvention;
(function (UnderlyingComplexEventScheduleRollConvention) {
    UnderlyingComplexEventScheduleRollConvention["E1stDayOfTheMonth"] = "1";
    UnderlyingComplexEventScheduleRollConvention["E2ndDayOfTheMonth"] = "2";
    UnderlyingComplexEventScheduleRollConvention["E3rdDayOfTheMonth"] = "3";
    UnderlyingComplexEventScheduleRollConvention["E4thDayOfTheMonth"] = "4";
    UnderlyingComplexEventScheduleRollConvention["E5thDayOfTheMonth"] = "5";
    UnderlyingComplexEventScheduleRollConvention["E6ThdDayOfTheMonth"] = "6";
    UnderlyingComplexEventScheduleRollConvention["E7thDayOfTheMonth"] = "7";
    UnderlyingComplexEventScheduleRollConvention["E8thDayOfTheMonth"] = "8";
    UnderlyingComplexEventScheduleRollConvention["E9thDayOfTheMonth"] = "9";
    UnderlyingComplexEventScheduleRollConvention["E10thDayOfTheMonth"] = "10";
    UnderlyingComplexEventScheduleRollConvention["E11ThDayOfTheMonth"] = "11";
    UnderlyingComplexEventScheduleRollConvention["E12ThDayOfTheMonth"] = "12";
    UnderlyingComplexEventScheduleRollConvention["E13ThDayOfTheMonth"] = "13";
    UnderlyingComplexEventScheduleRollConvention["E14thDayOfTheMonth"] = "14";
    UnderlyingComplexEventScheduleRollConvention["E15thDayOfTheMonth"] = "15";
    UnderlyingComplexEventScheduleRollConvention["E16thDayOfTheMonth"] = "16";
    UnderlyingComplexEventScheduleRollConvention["E17thDayOfTheMonth"] = "17";
    UnderlyingComplexEventScheduleRollConvention["E18thDayOfTheMonth"] = "18";
    UnderlyingComplexEventScheduleRollConvention["E19thDayOfTheMonth"] = "19";
    UnderlyingComplexEventScheduleRollConvention["E20thDayOfTheMonth"] = "20";
    UnderlyingComplexEventScheduleRollConvention["E21stDayOfTheMonth"] = "21";
    UnderlyingComplexEventScheduleRollConvention["E22ndDayOfTheMonth"] = "22";
    UnderlyingComplexEventScheduleRollConvention["E23rdDayOfTheMonth"] = "23";
    UnderlyingComplexEventScheduleRollConvention["E24thDayOfTheMonth"] = "24";
    UnderlyingComplexEventScheduleRollConvention["E25thDayOfTheMonth"] = "25";
    UnderlyingComplexEventScheduleRollConvention["E26thDayOfTheMonth"] = "26";
    UnderlyingComplexEventScheduleRollConvention["E27thDayOfTheMonth"] = "27";
    UnderlyingComplexEventScheduleRollConvention["E28thDayOfTheMonth"] = "28";
    UnderlyingComplexEventScheduleRollConvention["E29thDayOfTheMonth"] = "29";
    UnderlyingComplexEventScheduleRollConvention["E30thDayOfTheMonth"] = "30";
    UnderlyingComplexEventScheduleRollConvention["TheEndOfTheMonth"] = "EOM";
    UnderlyingComplexEventScheduleRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    UnderlyingComplexEventScheduleRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    UnderlyingComplexEventScheduleRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    UnderlyingComplexEventScheduleRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    UnderlyingComplexEventScheduleRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    UnderlyingComplexEventScheduleRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    UnderlyingComplexEventScheduleRollConvention["NoAdjustment"] = "NONE";
    UnderlyingComplexEventScheduleRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    UnderlyingComplexEventScheduleRollConvention["Monday"] = "MON";
    UnderlyingComplexEventScheduleRollConvention["Tuesday"] = "TUE";
    UnderlyingComplexEventScheduleRollConvention["Wednesday"] = "WED";
    UnderlyingComplexEventScheduleRollConvention["Thursday"] = "THU";
    UnderlyingComplexEventScheduleRollConvention["Friday"] = "FRI";
    UnderlyingComplexEventScheduleRollConvention["Saturday"] = "SAT";
    UnderlyingComplexEventScheduleRollConvention["Sunday"] = "SUN";
})(UnderlyingComplexEventScheduleRollConvention = exports.UnderlyingComplexEventScheduleRollConvention || (exports.UnderlyingComplexEventScheduleRollConvention = {}));
var UnderlyingDeliveryScheduleType;
(function (UnderlyingDeliveryScheduleType) {
    UnderlyingDeliveryScheduleType[UnderlyingDeliveryScheduleType["Notional"] = 0] = "Notional";
    UnderlyingDeliveryScheduleType[UnderlyingDeliveryScheduleType["Delivery"] = 1] = "Delivery";
    UnderlyingDeliveryScheduleType[UnderlyingDeliveryScheduleType["PhysicalSettlementPeriod"] = 2] = "PhysicalSettlementPeriod";
})(UnderlyingDeliveryScheduleType = exports.UnderlyingDeliveryScheduleType || (exports.UnderlyingDeliveryScheduleType = {}));
var UnderlyingDeliveryScheduleNotionalUnitOfMeasure;
(function (UnderlyingDeliveryScheduleNotionalUnitOfMeasure) {
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["Therms"] = "thm";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["Days"] = "day";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["Grams"] = "g";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["Liters"] = "L";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["MetricTons"] = "t";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingDeliveryScheduleNotionalUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingDeliveryScheduleNotionalUnitOfMeasure = exports.UnderlyingDeliveryScheduleNotionalUnitOfMeasure || (exports.UnderlyingDeliveryScheduleNotionalUnitOfMeasure = {}));
var UnderlyingDeliveryScheduleNotionalCommodityFrequency;
(function (UnderlyingDeliveryScheduleNotionalCommodityFrequency) {
    UnderlyingDeliveryScheduleNotionalCommodityFrequency[UnderlyingDeliveryScheduleNotionalCommodityFrequency["Term"] = 0] = "Term";
    UnderlyingDeliveryScheduleNotionalCommodityFrequency[UnderlyingDeliveryScheduleNotionalCommodityFrequency["PerBusinessDay"] = 1] = "PerBusinessDay";
    UnderlyingDeliveryScheduleNotionalCommodityFrequency[UnderlyingDeliveryScheduleNotionalCommodityFrequency["PerCalculationPeriod"] = 2] = "PerCalculationPeriod";
    UnderlyingDeliveryScheduleNotionalCommodityFrequency[UnderlyingDeliveryScheduleNotionalCommodityFrequency["PerSettlementPeriod"] = 3] = "PerSettlementPeriod";
    UnderlyingDeliveryScheduleNotionalCommodityFrequency[UnderlyingDeliveryScheduleNotionalCommodityFrequency["PerCalendarDay"] = 4] = "PerCalendarDay";
    UnderlyingDeliveryScheduleNotionalCommodityFrequency[UnderlyingDeliveryScheduleNotionalCommodityFrequency["PerHour"] = 5] = "PerHour";
    UnderlyingDeliveryScheduleNotionalCommodityFrequency[UnderlyingDeliveryScheduleNotionalCommodityFrequency["PerMonth"] = 6] = "PerMonth";
})(UnderlyingDeliveryScheduleNotionalCommodityFrequency = exports.UnderlyingDeliveryScheduleNotionalCommodityFrequency || (exports.UnderlyingDeliveryScheduleNotionalCommodityFrequency = {}));
var UnderlyingDeliveryScheduleToleranceUnitOfMeasure;
(function (UnderlyingDeliveryScheduleToleranceUnitOfMeasure) {
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["Therms"] = "thm";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["Days"] = "day";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["Grams"] = "g";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["Liters"] = "L";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["MetricTons"] = "t";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingDeliveryScheduleToleranceUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingDeliveryScheduleToleranceUnitOfMeasure = exports.UnderlyingDeliveryScheduleToleranceUnitOfMeasure || (exports.UnderlyingDeliveryScheduleToleranceUnitOfMeasure = {}));
var UnderlyingDeliveryScheduleToleranceType;
(function (UnderlyingDeliveryScheduleToleranceType) {
    UnderlyingDeliveryScheduleToleranceType[UnderlyingDeliveryScheduleToleranceType["Absolute"] = 0] = "Absolute";
    UnderlyingDeliveryScheduleToleranceType[UnderlyingDeliveryScheduleToleranceType["Percentage"] = 1] = "Percentage";
})(UnderlyingDeliveryScheduleToleranceType = exports.UnderlyingDeliveryScheduleToleranceType || (exports.UnderlyingDeliveryScheduleToleranceType = {}));
var UnderlyingDeliveryScheduleSettlFlowType;
(function (UnderlyingDeliveryScheduleSettlFlowType) {
    UnderlyingDeliveryScheduleSettlFlowType[UnderlyingDeliveryScheduleSettlFlowType["AllTimes"] = 0] = "AllTimes";
    UnderlyingDeliveryScheduleSettlFlowType[UnderlyingDeliveryScheduleSettlFlowType["OnPeak"] = 1] = "OnPeak";
    UnderlyingDeliveryScheduleSettlFlowType[UnderlyingDeliveryScheduleSettlFlowType["OffPeak"] = 2] = "OffPeak";
    UnderlyingDeliveryScheduleSettlFlowType[UnderlyingDeliveryScheduleSettlFlowType["Base"] = 3] = "Base";
    UnderlyingDeliveryScheduleSettlFlowType[UnderlyingDeliveryScheduleSettlFlowType["BlockHours"] = 4] = "BlockHours";
    UnderlyingDeliveryScheduleSettlFlowType[UnderlyingDeliveryScheduleSettlFlowType["Other"] = 5] = "Other";
})(UnderlyingDeliveryScheduleSettlFlowType = exports.UnderlyingDeliveryScheduleSettlFlowType || (exports.UnderlyingDeliveryScheduleSettlFlowType = {}));
var UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction;
(function (UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction) {
    UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction[UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction["DoNotIncludeHolidays"] = 0] = "DoNotIncludeHolidays";
    UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction[UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction["IncludeHolidays"] = 1] = "IncludeHolidays";
})(UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction = exports.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction || (exports.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction = {}));
var UnderlyingDeliveryScheduleSettlDay;
(function (UnderlyingDeliveryScheduleSettlDay) {
    UnderlyingDeliveryScheduleSettlDay[UnderlyingDeliveryScheduleSettlDay["Monday"] = 1] = "Monday";
    UnderlyingDeliveryScheduleSettlDay[UnderlyingDeliveryScheduleSettlDay["Tuesday"] = 2] = "Tuesday";
    UnderlyingDeliveryScheduleSettlDay[UnderlyingDeliveryScheduleSettlDay["Wednesday"] = 3] = "Wednesday";
    UnderlyingDeliveryScheduleSettlDay[UnderlyingDeliveryScheduleSettlDay["Thursday"] = 4] = "Thursday";
    UnderlyingDeliveryScheduleSettlDay[UnderlyingDeliveryScheduleSettlDay["Friday"] = 5] = "Friday";
    UnderlyingDeliveryScheduleSettlDay[UnderlyingDeliveryScheduleSettlDay["Saturday"] = 6] = "Saturday";
    UnderlyingDeliveryScheduleSettlDay[UnderlyingDeliveryScheduleSettlDay["Sunday"] = 7] = "Sunday";
    UnderlyingDeliveryScheduleSettlDay[UnderlyingDeliveryScheduleSettlDay["AllWeekdays"] = 8] = "AllWeekdays";
    UnderlyingDeliveryScheduleSettlDay[UnderlyingDeliveryScheduleSettlDay["AllDays"] = 9] = "AllDays";
    UnderlyingDeliveryScheduleSettlDay[UnderlyingDeliveryScheduleSettlDay["AllWeekends"] = 10] = "AllWeekends";
})(UnderlyingDeliveryScheduleSettlDay = exports.UnderlyingDeliveryScheduleSettlDay || (exports.UnderlyingDeliveryScheduleSettlDay = {}));
var UnderlyingDeliveryScheduleSettlTimeType;
(function (UnderlyingDeliveryScheduleSettlTimeType) {
    UnderlyingDeliveryScheduleSettlTimeType[UnderlyingDeliveryScheduleSettlTimeType["HourOfTheDay"] = 0] = "HourOfTheDay";
    UnderlyingDeliveryScheduleSettlTimeType[UnderlyingDeliveryScheduleSettlTimeType["HhMmTimeFormat"] = 1] = "HhMmTimeFormat";
})(UnderlyingDeliveryScheduleSettlTimeType = exports.UnderlyingDeliveryScheduleSettlTimeType || (exports.UnderlyingDeliveryScheduleSettlTimeType = {}));
var UnderlyingDeliveryStreamType;
(function (UnderlyingDeliveryStreamType) {
    UnderlyingDeliveryStreamType[UnderlyingDeliveryStreamType["PeriodicDefaultIfNotSpecified"] = 0] = "PeriodicDefaultIfNotSpecified";
    UnderlyingDeliveryStreamType[UnderlyingDeliveryStreamType["Initial"] = 1] = "Initial";
    UnderlyingDeliveryStreamType[UnderlyingDeliveryStreamType["Single"] = 2] = "Single";
})(UnderlyingDeliveryStreamType = exports.UnderlyingDeliveryStreamType || (exports.UnderlyingDeliveryStreamType = {}));
var UnderlyingDeliveryStreamDeliveryRestriction;
(function (UnderlyingDeliveryStreamDeliveryRestriction) {
    UnderlyingDeliveryStreamDeliveryRestriction[UnderlyingDeliveryStreamDeliveryRestriction["Firm"] = 1] = "Firm";
    UnderlyingDeliveryStreamDeliveryRestriction[UnderlyingDeliveryStreamDeliveryRestriction["InterruptableOrNonFirm"] = 2] = "InterruptableOrNonFirm";
    UnderlyingDeliveryStreamDeliveryRestriction[UnderlyingDeliveryStreamDeliveryRestriction["ForceMajeure"] = 3] = "ForceMajeure";
    UnderlyingDeliveryStreamDeliveryRestriction[UnderlyingDeliveryStreamDeliveryRestriction["SystemFirm"] = 4] = "SystemFirm";
    UnderlyingDeliveryStreamDeliveryRestriction[UnderlyingDeliveryStreamDeliveryRestriction["UnitFirm"] = 5] = "UnitFirm";
})(UnderlyingDeliveryStreamDeliveryRestriction = exports.UnderlyingDeliveryStreamDeliveryRestriction || (exports.UnderlyingDeliveryStreamDeliveryRestriction = {}));
var UnderlyingDeliveryStreamDeliveryContingentPartySide;
(function (UnderlyingDeliveryStreamDeliveryContingentPartySide) {
    UnderlyingDeliveryStreamDeliveryContingentPartySide[UnderlyingDeliveryStreamDeliveryContingentPartySide["Buyer"] = 0] = "Buyer";
    UnderlyingDeliveryStreamDeliveryContingentPartySide[UnderlyingDeliveryStreamDeliveryContingentPartySide["Seller"] = 1] = "Seller";
})(UnderlyingDeliveryStreamDeliveryContingentPartySide = exports.UnderlyingDeliveryStreamDeliveryContingentPartySide || (exports.UnderlyingDeliveryStreamDeliveryContingentPartySide = {}));
var UnderlyingDeliveryStreamTitleTransferCondition;
(function (UnderlyingDeliveryStreamTitleTransferCondition) {
    UnderlyingDeliveryStreamTitleTransferCondition[UnderlyingDeliveryStreamTitleTransferCondition["TransfersWithRiskOfLoss"] = 0] = "TransfersWithRiskOfLoss";
    UnderlyingDeliveryStreamTitleTransferCondition[UnderlyingDeliveryStreamTitleTransferCondition["DoesNotTransferWithRiskOfLoss"] = 1] = "DoesNotTransferWithRiskOfLoss";
})(UnderlyingDeliveryStreamTitleTransferCondition = exports.UnderlyingDeliveryStreamTitleTransferCondition || (exports.UnderlyingDeliveryStreamTitleTransferCondition = {}));
var UnderlyingDeliveryStreamToleranceUnitOfMeasure;
(function (UnderlyingDeliveryStreamToleranceUnitOfMeasure) {
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["Therms"] = "thm";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["Days"] = "day";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["Grams"] = "g";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["Liters"] = "L";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["MetricTons"] = "t";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingDeliveryStreamToleranceUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingDeliveryStreamToleranceUnitOfMeasure = exports.UnderlyingDeliveryStreamToleranceUnitOfMeasure || (exports.UnderlyingDeliveryStreamToleranceUnitOfMeasure = {}));
var UnderlyingDeliveryStreamToleranceType;
(function (UnderlyingDeliveryStreamToleranceType) {
    UnderlyingDeliveryStreamToleranceType[UnderlyingDeliveryStreamToleranceType["Absolute"] = 0] = "Absolute";
    UnderlyingDeliveryStreamToleranceType[UnderlyingDeliveryStreamToleranceType["Percentage"] = 1] = "Percentage";
})(UnderlyingDeliveryStreamToleranceType = exports.UnderlyingDeliveryStreamToleranceType || (exports.UnderlyingDeliveryStreamToleranceType = {}));
var UnderlyingDeliveryStreamToleranceOptionSide;
(function (UnderlyingDeliveryStreamToleranceOptionSide) {
    UnderlyingDeliveryStreamToleranceOptionSide[UnderlyingDeliveryStreamToleranceOptionSide["Buyer"] = 1] = "Buyer";
    UnderlyingDeliveryStreamToleranceOptionSide[UnderlyingDeliveryStreamToleranceOptionSide["Seller"] = 2] = "Seller";
})(UnderlyingDeliveryStreamToleranceOptionSide = exports.UnderlyingDeliveryStreamToleranceOptionSide || (exports.UnderlyingDeliveryStreamToleranceOptionSide = {}));
var UnderlyingDeliveryStreamElectingPartySide;
(function (UnderlyingDeliveryStreamElectingPartySide) {
    UnderlyingDeliveryStreamElectingPartySide[UnderlyingDeliveryStreamElectingPartySide["Buyer"] = 0] = "Buyer";
    UnderlyingDeliveryStreamElectingPartySide[UnderlyingDeliveryStreamElectingPartySide["Seller"] = 1] = "Seller";
})(UnderlyingDeliveryStreamElectingPartySide = exports.UnderlyingDeliveryStreamElectingPartySide || (exports.UnderlyingDeliveryStreamElectingPartySide = {}));
var UnderlyingExerciseConfirmationMethod;
(function (UnderlyingExerciseConfirmationMethod) {
    UnderlyingExerciseConfirmationMethod[UnderlyingExerciseConfirmationMethod["NotRequired"] = 0] = "NotRequired";
    UnderlyingExerciseConfirmationMethod[UnderlyingExerciseConfirmationMethod["NonElectronic"] = 1] = "NonElectronic";
    UnderlyingExerciseConfirmationMethod[UnderlyingExerciseConfirmationMethod["Electronic"] = 2] = "Electronic";
    UnderlyingExerciseConfirmationMethod[UnderlyingExerciseConfirmationMethod["UnknownAtTimeOfReport"] = 3] = "UnknownAtTimeOfReport";
})(UnderlyingExerciseConfirmationMethod = exports.UnderlyingExerciseConfirmationMethod || (exports.UnderlyingExerciseConfirmationMethod = {}));
var UnderlyingOptionExerciseBusinessDayConvention;
(function (UnderlyingOptionExerciseBusinessDayConvention) {
    UnderlyingOptionExerciseBusinessDayConvention[UnderlyingOptionExerciseBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingOptionExerciseBusinessDayConvention[UnderlyingOptionExerciseBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingOptionExerciseBusinessDayConvention[UnderlyingOptionExerciseBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingOptionExerciseBusinessDayConvention[UnderlyingOptionExerciseBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingOptionExerciseBusinessDayConvention[UnderlyingOptionExerciseBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingOptionExerciseBusinessDayConvention[UnderlyingOptionExerciseBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingOptionExerciseBusinessDayConvention[UnderlyingOptionExerciseBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingOptionExerciseBusinessDayConvention[UnderlyingOptionExerciseBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingOptionExerciseBusinessDayConvention = exports.UnderlyingOptionExerciseBusinessDayConvention || (exports.UnderlyingOptionExerciseBusinessDayConvention = {}));
var UnderlyingOptionExerciseEarliestDateOffsetDayType;
(function (UnderlyingOptionExerciseEarliestDateOffsetDayType) {
    UnderlyingOptionExerciseEarliestDateOffsetDayType[UnderlyingOptionExerciseEarliestDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingOptionExerciseEarliestDateOffsetDayType[UnderlyingOptionExerciseEarliestDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingOptionExerciseEarliestDateOffsetDayType[UnderlyingOptionExerciseEarliestDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingOptionExerciseEarliestDateOffsetDayType[UnderlyingOptionExerciseEarliestDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingOptionExerciseEarliestDateOffsetDayType[UnderlyingOptionExerciseEarliestDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingOptionExerciseEarliestDateOffsetDayType[UnderlyingOptionExerciseEarliestDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingOptionExerciseEarliestDateOffsetDayType = exports.UnderlyingOptionExerciseEarliestDateOffsetDayType || (exports.UnderlyingOptionExerciseEarliestDateOffsetDayType = {}));
var UnderlyingOptionExerciseEarliestDateOffsetUnit;
(function (UnderlyingOptionExerciseEarliestDateOffsetUnit) {
    UnderlyingOptionExerciseEarliestDateOffsetUnit["Day"] = "D";
    UnderlyingOptionExerciseEarliestDateOffsetUnit["Week"] = "Wk";
    UnderlyingOptionExerciseEarliestDateOffsetUnit["Month"] = "Mo";
    UnderlyingOptionExerciseEarliestDateOffsetUnit["Year"] = "Yr";
})(UnderlyingOptionExerciseEarliestDateOffsetUnit = exports.UnderlyingOptionExerciseEarliestDateOffsetUnit || (exports.UnderlyingOptionExerciseEarliestDateOffsetUnit = {}));
var UnderlyingOptionExerciseFrequencyUnit;
(function (UnderlyingOptionExerciseFrequencyUnit) {
    UnderlyingOptionExerciseFrequencyUnit["Day"] = "D";
    UnderlyingOptionExerciseFrequencyUnit["Week"] = "Wk";
    UnderlyingOptionExerciseFrequencyUnit["Month"] = "Mo";
    UnderlyingOptionExerciseFrequencyUnit["Year"] = "Yr";
})(UnderlyingOptionExerciseFrequencyUnit = exports.UnderlyingOptionExerciseFrequencyUnit || (exports.UnderlyingOptionExerciseFrequencyUnit = {}));
var UnderlyingOptionExerciseStartDateOffsetUnit;
(function (UnderlyingOptionExerciseStartDateOffsetUnit) {
    UnderlyingOptionExerciseStartDateOffsetUnit["Day"] = "D";
    UnderlyingOptionExerciseStartDateOffsetUnit["Week"] = "Wk";
    UnderlyingOptionExerciseStartDateOffsetUnit["Month"] = "Mo";
    UnderlyingOptionExerciseStartDateOffsetUnit["Year"] = "Yr";
})(UnderlyingOptionExerciseStartDateOffsetUnit = exports.UnderlyingOptionExerciseStartDateOffsetUnit || (exports.UnderlyingOptionExerciseStartDateOffsetUnit = {}));
var UnderlyingOptionExerciseStartDateOffsetDayType;
(function (UnderlyingOptionExerciseStartDateOffsetDayType) {
    UnderlyingOptionExerciseStartDateOffsetDayType[UnderlyingOptionExerciseStartDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingOptionExerciseStartDateOffsetDayType[UnderlyingOptionExerciseStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingOptionExerciseStartDateOffsetDayType[UnderlyingOptionExerciseStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingOptionExerciseStartDateOffsetDayType[UnderlyingOptionExerciseStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingOptionExerciseStartDateOffsetDayType[UnderlyingOptionExerciseStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingOptionExerciseStartDateOffsetDayType[UnderlyingOptionExerciseStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingOptionExerciseStartDateOffsetDayType = exports.UnderlyingOptionExerciseStartDateOffsetDayType || (exports.UnderlyingOptionExerciseStartDateOffsetDayType = {}));
var UnderlyingOptionExerciseDateType;
(function (UnderlyingOptionExerciseDateType) {
    UnderlyingOptionExerciseDateType[UnderlyingOptionExerciseDateType["Unadjusted"] = 0] = "Unadjusted";
    UnderlyingOptionExerciseDateType[UnderlyingOptionExerciseDateType["Adjusted"] = 1] = "Adjusted";
})(UnderlyingOptionExerciseDateType = exports.UnderlyingOptionExerciseDateType || (exports.UnderlyingOptionExerciseDateType = {}));
var UnderlyingOptionExerciseExpirationDateBusinessDayConvention;
(function (UnderlyingOptionExerciseExpirationDateBusinessDayConvention) {
    UnderlyingOptionExerciseExpirationDateBusinessDayConvention[UnderlyingOptionExerciseExpirationDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingOptionExerciseExpirationDateBusinessDayConvention[UnderlyingOptionExerciseExpirationDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingOptionExerciseExpirationDateBusinessDayConvention[UnderlyingOptionExerciseExpirationDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingOptionExerciseExpirationDateBusinessDayConvention[UnderlyingOptionExerciseExpirationDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingOptionExerciseExpirationDateBusinessDayConvention[UnderlyingOptionExerciseExpirationDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingOptionExerciseExpirationDateBusinessDayConvention[UnderlyingOptionExerciseExpirationDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingOptionExerciseExpirationDateBusinessDayConvention[UnderlyingOptionExerciseExpirationDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingOptionExerciseExpirationDateBusinessDayConvention[UnderlyingOptionExerciseExpirationDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingOptionExerciseExpirationDateBusinessDayConvention = exports.UnderlyingOptionExerciseExpirationDateBusinessDayConvention || (exports.UnderlyingOptionExerciseExpirationDateBusinessDayConvention = {}));
var UnderlyingOptionExerciseExpirationDateOffsetUnit;
(function (UnderlyingOptionExerciseExpirationDateOffsetUnit) {
    UnderlyingOptionExerciseExpirationDateOffsetUnit["Day"] = "D";
    UnderlyingOptionExerciseExpirationDateOffsetUnit["Week"] = "Wk";
    UnderlyingOptionExerciseExpirationDateOffsetUnit["Month"] = "Mo";
    UnderlyingOptionExerciseExpirationDateOffsetUnit["Year"] = "Yr";
})(UnderlyingOptionExerciseExpirationDateOffsetUnit = exports.UnderlyingOptionExerciseExpirationDateOffsetUnit || (exports.UnderlyingOptionExerciseExpirationDateOffsetUnit = {}));
var UnderlyingOptionExerciseExpirationFrequencyUnit;
(function (UnderlyingOptionExerciseExpirationFrequencyUnit) {
    UnderlyingOptionExerciseExpirationFrequencyUnit["Day"] = "D";
    UnderlyingOptionExerciseExpirationFrequencyUnit["Week"] = "Wk";
    UnderlyingOptionExerciseExpirationFrequencyUnit["Month"] = "Mo";
    UnderlyingOptionExerciseExpirationFrequencyUnit["Year"] = "Yr";
})(UnderlyingOptionExerciseExpirationFrequencyUnit = exports.UnderlyingOptionExerciseExpirationFrequencyUnit || (exports.UnderlyingOptionExerciseExpirationFrequencyUnit = {}));
var UnderlyingOptionExerciseExpirationRollConvention;
(function (UnderlyingOptionExerciseExpirationRollConvention) {
    UnderlyingOptionExerciseExpirationRollConvention["E1stDayOfTheMonth"] = "1";
    UnderlyingOptionExerciseExpirationRollConvention["E2ndDayOfTheMonth"] = "2";
    UnderlyingOptionExerciseExpirationRollConvention["E3rdDayOfTheMonth"] = "3";
    UnderlyingOptionExerciseExpirationRollConvention["E4thDayOfTheMonth"] = "4";
    UnderlyingOptionExerciseExpirationRollConvention["E5thDayOfTheMonth"] = "5";
    UnderlyingOptionExerciseExpirationRollConvention["E6ThdDayOfTheMonth"] = "6";
    UnderlyingOptionExerciseExpirationRollConvention["E7thDayOfTheMonth"] = "7";
    UnderlyingOptionExerciseExpirationRollConvention["E8thDayOfTheMonth"] = "8";
    UnderlyingOptionExerciseExpirationRollConvention["E9thDayOfTheMonth"] = "9";
    UnderlyingOptionExerciseExpirationRollConvention["E10thDayOfTheMonth"] = "10";
    UnderlyingOptionExerciseExpirationRollConvention["E11ThDayOfTheMonth"] = "11";
    UnderlyingOptionExerciseExpirationRollConvention["E12ThDayOfTheMonth"] = "12";
    UnderlyingOptionExerciseExpirationRollConvention["E13ThDayOfTheMonth"] = "13";
    UnderlyingOptionExerciseExpirationRollConvention["E14thDayOfTheMonth"] = "14";
    UnderlyingOptionExerciseExpirationRollConvention["E15thDayOfTheMonth"] = "15";
    UnderlyingOptionExerciseExpirationRollConvention["E16thDayOfTheMonth"] = "16";
    UnderlyingOptionExerciseExpirationRollConvention["E17thDayOfTheMonth"] = "17";
    UnderlyingOptionExerciseExpirationRollConvention["E18thDayOfTheMonth"] = "18";
    UnderlyingOptionExerciseExpirationRollConvention["E19thDayOfTheMonth"] = "19";
    UnderlyingOptionExerciseExpirationRollConvention["E20thDayOfTheMonth"] = "20";
    UnderlyingOptionExerciseExpirationRollConvention["E21stDayOfTheMonth"] = "21";
    UnderlyingOptionExerciseExpirationRollConvention["E22ndDayOfTheMonth"] = "22";
    UnderlyingOptionExerciseExpirationRollConvention["E23rdDayOfTheMonth"] = "23";
    UnderlyingOptionExerciseExpirationRollConvention["E24thDayOfTheMonth"] = "24";
    UnderlyingOptionExerciseExpirationRollConvention["E25thDayOfTheMonth"] = "25";
    UnderlyingOptionExerciseExpirationRollConvention["E26thDayOfTheMonth"] = "26";
    UnderlyingOptionExerciseExpirationRollConvention["E27thDayOfTheMonth"] = "27";
    UnderlyingOptionExerciseExpirationRollConvention["E28thDayOfTheMonth"] = "28";
    UnderlyingOptionExerciseExpirationRollConvention["E29thDayOfTheMonth"] = "29";
    UnderlyingOptionExerciseExpirationRollConvention["E30thDayOfTheMonth"] = "30";
    UnderlyingOptionExerciseExpirationRollConvention["TheEndOfTheMonth"] = "EOM";
    UnderlyingOptionExerciseExpirationRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    UnderlyingOptionExerciseExpirationRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    UnderlyingOptionExerciseExpirationRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    UnderlyingOptionExerciseExpirationRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    UnderlyingOptionExerciseExpirationRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    UnderlyingOptionExerciseExpirationRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    UnderlyingOptionExerciseExpirationRollConvention["NoAdjustment"] = "NONE";
    UnderlyingOptionExerciseExpirationRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    UnderlyingOptionExerciseExpirationRollConvention["Monday"] = "MON";
    UnderlyingOptionExerciseExpirationRollConvention["Tuesday"] = "TUE";
    UnderlyingOptionExerciseExpirationRollConvention["Wednesday"] = "WED";
    UnderlyingOptionExerciseExpirationRollConvention["Thursday"] = "THU";
    UnderlyingOptionExerciseExpirationRollConvention["Friday"] = "FRI";
    UnderlyingOptionExerciseExpirationRollConvention["Saturday"] = "SAT";
    UnderlyingOptionExerciseExpirationRollConvention["Sunday"] = "SUN";
})(UnderlyingOptionExerciseExpirationRollConvention = exports.UnderlyingOptionExerciseExpirationRollConvention || (exports.UnderlyingOptionExerciseExpirationRollConvention = {}));
var UnderlyingOptionExerciseExpirationDateOffsetDayType;
(function (UnderlyingOptionExerciseExpirationDateOffsetDayType) {
    UnderlyingOptionExerciseExpirationDateOffsetDayType[UnderlyingOptionExerciseExpirationDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingOptionExerciseExpirationDateOffsetDayType[UnderlyingOptionExerciseExpirationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingOptionExerciseExpirationDateOffsetDayType[UnderlyingOptionExerciseExpirationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingOptionExerciseExpirationDateOffsetDayType[UnderlyingOptionExerciseExpirationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingOptionExerciseExpirationDateOffsetDayType[UnderlyingOptionExerciseExpirationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingOptionExerciseExpirationDateOffsetDayType[UnderlyingOptionExerciseExpirationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingOptionExerciseExpirationDateOffsetDayType = exports.UnderlyingOptionExerciseExpirationDateOffsetDayType || (exports.UnderlyingOptionExerciseExpirationDateOffsetDayType = {}));
var UnderlyingOptionExerciseExpirationDateType;
(function (UnderlyingOptionExerciseExpirationDateType) {
    UnderlyingOptionExerciseExpirationDateType[UnderlyingOptionExerciseExpirationDateType["Unadjusted"] = 0] = "Unadjusted";
    UnderlyingOptionExerciseExpirationDateType[UnderlyingOptionExerciseExpirationDateType["Adjusted"] = 1] = "Adjusted";
})(UnderlyingOptionExerciseExpirationDateType = exports.UnderlyingOptionExerciseExpirationDateType || (exports.UnderlyingOptionExerciseExpirationDateType = {}));
var UnderlyingMarketDisruptionProvision;
(function (UnderlyingMarketDisruptionProvision) {
    UnderlyingMarketDisruptionProvision[UnderlyingMarketDisruptionProvision["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingMarketDisruptionProvision[UnderlyingMarketDisruptionProvision["Applicable"] = 1] = "Applicable";
    UnderlyingMarketDisruptionProvision[UnderlyingMarketDisruptionProvision["AsSpecifiedInMasterAgreement"] = 2] = "AsSpecifiedInMasterAgreement";
    UnderlyingMarketDisruptionProvision[UnderlyingMarketDisruptionProvision["AsSpecifiedInConfirmation"] = 3] = "AsSpecifiedInConfirmation";
})(UnderlyingMarketDisruptionProvision = exports.UnderlyingMarketDisruptionProvision || (exports.UnderlyingMarketDisruptionProvision = {}));
var UnderlyingMarketDisruptionFallbackProvision;
(function (UnderlyingMarketDisruptionFallbackProvision) {
    UnderlyingMarketDisruptionFallbackProvision[UnderlyingMarketDisruptionFallbackProvision["AsSpecifiedInMasterAgreement"] = 0] = "AsSpecifiedInMasterAgreement";
    UnderlyingMarketDisruptionFallbackProvision[UnderlyingMarketDisruptionFallbackProvision["AsSpecifiedInConfirmation"] = 1] = "AsSpecifiedInConfirmation";
})(UnderlyingMarketDisruptionFallbackProvision = exports.UnderlyingMarketDisruptionFallbackProvision || (exports.UnderlyingMarketDisruptionFallbackProvision = {}));
var UnderlyingMarketDisruptionFallbackUnderlierType;
(function (UnderlyingMarketDisruptionFallbackUnderlierType) {
    UnderlyingMarketDisruptionFallbackUnderlierType[UnderlyingMarketDisruptionFallbackUnderlierType["Basket"] = 0] = "Basket";
    UnderlyingMarketDisruptionFallbackUnderlierType[UnderlyingMarketDisruptionFallbackUnderlierType["Bond"] = 1] = "Bond";
    UnderlyingMarketDisruptionFallbackUnderlierType[UnderlyingMarketDisruptionFallbackUnderlierType["Cash"] = 2] = "Cash";
    UnderlyingMarketDisruptionFallbackUnderlierType[UnderlyingMarketDisruptionFallbackUnderlierType["Commodity"] = 3] = "Commodity";
    UnderlyingMarketDisruptionFallbackUnderlierType[UnderlyingMarketDisruptionFallbackUnderlierType["ConvertibleBond"] = 4] = "ConvertibleBond";
    UnderlyingMarketDisruptionFallbackUnderlierType[UnderlyingMarketDisruptionFallbackUnderlierType["Equity"] = 5] = "Equity";
    UnderlyingMarketDisruptionFallbackUnderlierType[UnderlyingMarketDisruptionFallbackUnderlierType["ExchangeTradedFund"] = 6] = "ExchangeTradedFund";
    UnderlyingMarketDisruptionFallbackUnderlierType[UnderlyingMarketDisruptionFallbackUnderlierType["Future"] = 7] = "Future";
    UnderlyingMarketDisruptionFallbackUnderlierType[UnderlyingMarketDisruptionFallbackUnderlierType["Index"] = 8] = "Index";
    UnderlyingMarketDisruptionFallbackUnderlierType[UnderlyingMarketDisruptionFallbackUnderlierType["Loan"] = 9] = "Loan";
    UnderlyingMarketDisruptionFallbackUnderlierType[UnderlyingMarketDisruptionFallbackUnderlierType["Mortgage"] = 10] = "Mortgage";
    UnderlyingMarketDisruptionFallbackUnderlierType[UnderlyingMarketDisruptionFallbackUnderlierType["MutualFund"] = 11] = "MutualFund";
})(UnderlyingMarketDisruptionFallbackUnderlierType = exports.UnderlyingMarketDisruptionFallbackUnderlierType || (exports.UnderlyingMarketDisruptionFallbackUnderlierType = {}));
var UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource;
(function (UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource) {
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["Cusip"] = "1";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["Sedol"] = "2";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["Quik"] = "3";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["IsinNumber"] = "4";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["RicCode"] = "5";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["IsoCurrencyCode"] = "6";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["IsoCountryCode"] = "7";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["ExchangeSymbol"] = "8";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["BloombergSymbol"] = "A";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["Wertpapier"] = "B";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["Dutch"] = "C";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["Valoren"] = "D";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["Sicovam"] = "E";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["Belgian"] = "F";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["OptionPriceReportingAuthority"] = "J";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["LetterOfCredit"] = "L";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["MarkitRedEntityClip"] = "N";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["MarkitRedPairClip"] = "P";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["CftcCommodityCode"] = "Q";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["LegalEntityIdentifier"] = "T";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["Synthetic"] = "U";
    UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource = exports.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource || (exports.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource = {}));
var UnderlyingPaymentScheduleFixingDayOfWeek;
(function (UnderlyingPaymentScheduleFixingDayOfWeek) {
    UnderlyingPaymentScheduleFixingDayOfWeek[UnderlyingPaymentScheduleFixingDayOfWeek["EveryDayTheDefaultIfNotSpecified"] = 0] = "EveryDayTheDefaultIfNotSpecified";
    UnderlyingPaymentScheduleFixingDayOfWeek[UnderlyingPaymentScheduleFixingDayOfWeek["Monday"] = 1] = "Monday";
    UnderlyingPaymentScheduleFixingDayOfWeek[UnderlyingPaymentScheduleFixingDayOfWeek["Tuesday"] = 2] = "Tuesday";
    UnderlyingPaymentScheduleFixingDayOfWeek[UnderlyingPaymentScheduleFixingDayOfWeek["Wednesday"] = 3] = "Wednesday";
    UnderlyingPaymentScheduleFixingDayOfWeek[UnderlyingPaymentScheduleFixingDayOfWeek["Thursday"] = 4] = "Thursday";
    UnderlyingPaymentScheduleFixingDayOfWeek[UnderlyingPaymentScheduleFixingDayOfWeek["Friday"] = 5] = "Friday";
    UnderlyingPaymentScheduleFixingDayOfWeek[UnderlyingPaymentScheduleFixingDayOfWeek["Saturday"] = 6] = "Saturday";
    UnderlyingPaymentScheduleFixingDayOfWeek[UnderlyingPaymentScheduleFixingDayOfWeek["Sunday"] = 7] = "Sunday";
})(UnderlyingPaymentScheduleFixingDayOfWeek = exports.UnderlyingPaymentScheduleFixingDayOfWeek || (exports.UnderlyingPaymentScheduleFixingDayOfWeek = {}));
var UnderlyingPaymentScheduleRateUnitOfMeasure;
(function (UnderlyingPaymentScheduleRateUnitOfMeasure) {
    UnderlyingPaymentScheduleRateUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingPaymentScheduleRateUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingPaymentScheduleRateUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingPaymentScheduleRateUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingPaymentScheduleRateUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingPaymentScheduleRateUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingPaymentScheduleRateUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingPaymentScheduleRateUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingPaymentScheduleRateUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingPaymentScheduleRateUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingPaymentScheduleRateUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingPaymentScheduleRateUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingPaymentScheduleRateUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingPaymentScheduleRateUnitOfMeasure["Therms"] = "thm";
    UnderlyingPaymentScheduleRateUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingPaymentScheduleRateUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingPaymentScheduleRateUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingPaymentScheduleRateUnitOfMeasure["Days"] = "day";
    UnderlyingPaymentScheduleRateUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingPaymentScheduleRateUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingPaymentScheduleRateUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingPaymentScheduleRateUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingPaymentScheduleRateUnitOfMeasure["Grams"] = "g";
    UnderlyingPaymentScheduleRateUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingPaymentScheduleRateUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingPaymentScheduleRateUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingPaymentScheduleRateUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingPaymentScheduleRateUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingPaymentScheduleRateUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingPaymentScheduleRateUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingPaymentScheduleRateUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingPaymentScheduleRateUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingPaymentScheduleRateUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingPaymentScheduleRateUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingPaymentScheduleRateUnitOfMeasure["Liters"] = "L";
    UnderlyingPaymentScheduleRateUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingPaymentScheduleRateUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingPaymentScheduleRateUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingPaymentScheduleRateUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingPaymentScheduleRateUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingPaymentScheduleRateUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingPaymentScheduleRateUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingPaymentScheduleRateUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingPaymentScheduleRateUnitOfMeasure["MetricTons"] = "t";
    UnderlyingPaymentScheduleRateUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingPaymentScheduleRateUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingPaymentScheduleRateUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingPaymentScheduleRateUnitOfMeasure = exports.UnderlyingPaymentScheduleRateUnitOfMeasure || (exports.UnderlyingPaymentScheduleRateUnitOfMeasure = {}));
var UnderlyingPaymentScheduleRateSpreadType;
(function (UnderlyingPaymentScheduleRateSpreadType) {
    UnderlyingPaymentScheduleRateSpreadType[UnderlyingPaymentScheduleRateSpreadType["Absolute"] = 0] = "Absolute";
    UnderlyingPaymentScheduleRateSpreadType[UnderlyingPaymentScheduleRateSpreadType["Percentage"] = 1] = "Percentage";
})(UnderlyingPaymentScheduleRateSpreadType = exports.UnderlyingPaymentScheduleRateSpreadType || (exports.UnderlyingPaymentScheduleRateSpreadType = {}));
var UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure;
(function (UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure) {
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["Therms"] = "thm";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["Days"] = "day";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["Grams"] = "g";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["Liters"] = "L";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["MetricTons"] = "t";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure = exports.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure || (exports.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure = {}));
var UnderlyingPaymentScheduleStepUnitOfMeasure;
(function (UnderlyingPaymentScheduleStepUnitOfMeasure) {
    UnderlyingPaymentScheduleStepUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingPaymentScheduleStepUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingPaymentScheduleStepUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingPaymentScheduleStepUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingPaymentScheduleStepUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingPaymentScheduleStepUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingPaymentScheduleStepUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingPaymentScheduleStepUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingPaymentScheduleStepUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingPaymentScheduleStepUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingPaymentScheduleStepUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingPaymentScheduleStepUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingPaymentScheduleStepUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingPaymentScheduleStepUnitOfMeasure["Therms"] = "thm";
    UnderlyingPaymentScheduleStepUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingPaymentScheduleStepUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingPaymentScheduleStepUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingPaymentScheduleStepUnitOfMeasure["Days"] = "day";
    UnderlyingPaymentScheduleStepUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingPaymentScheduleStepUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingPaymentScheduleStepUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingPaymentScheduleStepUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingPaymentScheduleStepUnitOfMeasure["Grams"] = "g";
    UnderlyingPaymentScheduleStepUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingPaymentScheduleStepUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingPaymentScheduleStepUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingPaymentScheduleStepUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingPaymentScheduleStepUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingPaymentScheduleStepUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingPaymentScheduleStepUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingPaymentScheduleStepUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingPaymentScheduleStepUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingPaymentScheduleStepUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingPaymentScheduleStepUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingPaymentScheduleStepUnitOfMeasure["Liters"] = "L";
    UnderlyingPaymentScheduleStepUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingPaymentScheduleStepUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingPaymentScheduleStepUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingPaymentScheduleStepUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingPaymentScheduleStepUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingPaymentScheduleStepUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingPaymentScheduleStepUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingPaymentScheduleStepUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingPaymentScheduleStepUnitOfMeasure["MetricTons"] = "t";
    UnderlyingPaymentScheduleStepUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingPaymentScheduleStepUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingPaymentScheduleStepUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingPaymentScheduleStepUnitOfMeasure = exports.UnderlyingPaymentScheduleStepUnitOfMeasure || (exports.UnderlyingPaymentScheduleStepUnitOfMeasure = {}));
var UnderlyingPaymentScheduleFixingDayDistribution;
(function (UnderlyingPaymentScheduleFixingDayDistribution) {
    UnderlyingPaymentScheduleFixingDayDistribution[UnderlyingPaymentScheduleFixingDayDistribution["All"] = 0] = "All";
    UnderlyingPaymentScheduleFixingDayDistribution[UnderlyingPaymentScheduleFixingDayDistribution["First"] = 1] = "First";
    UnderlyingPaymentScheduleFixingDayDistribution[UnderlyingPaymentScheduleFixingDayDistribution["Last"] = 2] = "Last";
    UnderlyingPaymentScheduleFixingDayDistribution[UnderlyingPaymentScheduleFixingDayDistribution["Penultimate"] = 3] = "Penultimate";
})(UnderlyingPaymentScheduleFixingDayDistribution = exports.UnderlyingPaymentScheduleFixingDayDistribution || (exports.UnderlyingPaymentScheduleFixingDayDistribution = {}));
var UnderlyingPaymentScheduleFixingLagUnit;
(function (UnderlyingPaymentScheduleFixingLagUnit) {
    UnderlyingPaymentScheduleFixingLagUnit["Day"] = "D";
    UnderlyingPaymentScheduleFixingLagUnit["Week"] = "Wk";
    UnderlyingPaymentScheduleFixingLagUnit["Month"] = "Mo";
    UnderlyingPaymentScheduleFixingLagUnit["Year"] = "Yr";
})(UnderlyingPaymentScheduleFixingLagUnit = exports.UnderlyingPaymentScheduleFixingLagUnit || (exports.UnderlyingPaymentScheduleFixingLagUnit = {}));
var UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit;
(function (UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit) {
    UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit["Day"] = "D";
    UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit = exports.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit || (exports.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit = {}));
var UnderlyingPaymentStreamFixedAmountUnitOfMeasure;
(function (UnderlyingPaymentStreamFixedAmountUnitOfMeasure) {
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["Therms"] = "thm";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["Days"] = "day";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["Grams"] = "g";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["Liters"] = "L";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["MetricTons"] = "t";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingPaymentStreamFixedAmountUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingPaymentStreamFixedAmountUnitOfMeasure = exports.UnderlyingPaymentStreamFixedAmountUnitOfMeasure || (exports.UnderlyingPaymentStreamFixedAmountUnitOfMeasure = {}));
var UnderlyingPaymentStreamRateIndex2CurveUnit;
(function (UnderlyingPaymentStreamRateIndex2CurveUnit) {
    UnderlyingPaymentStreamRateIndex2CurveUnit["Day"] = "D";
    UnderlyingPaymentStreamRateIndex2CurveUnit["Week"] = "Wk";
    UnderlyingPaymentStreamRateIndex2CurveUnit["Month"] = "Mo";
    UnderlyingPaymentStreamRateIndex2CurveUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamRateIndex2CurveUnit = exports.UnderlyingPaymentStreamRateIndex2CurveUnit || (exports.UnderlyingPaymentStreamRateIndex2CurveUnit = {}));
var UnderlyingPaymentStreamRateIndexUnitOfMeasure;
(function (UnderlyingPaymentStreamRateIndexUnitOfMeasure) {
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["Therms"] = "thm";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["Days"] = "day";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["Grams"] = "g";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["Liters"] = "L";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["MetricTons"] = "t";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingPaymentStreamRateIndexUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingPaymentStreamRateIndexUnitOfMeasure = exports.UnderlyingPaymentStreamRateIndexUnitOfMeasure || (exports.UnderlyingPaymentStreamRateIndexUnitOfMeasure = {}));
var UnderlyingPaymentStreamSettlLevel;
(function (UnderlyingPaymentStreamSettlLevel) {
    UnderlyingPaymentStreamSettlLevel[UnderlyingPaymentStreamSettlLevel["Average"] = 0] = "Average";
    UnderlyingPaymentStreamSettlLevel[UnderlyingPaymentStreamSettlLevel["Maximum"] = 1] = "Maximum";
    UnderlyingPaymentStreamSettlLevel[UnderlyingPaymentStreamSettlLevel["Minimum"] = 2] = "Minimum";
    UnderlyingPaymentStreamSettlLevel[UnderlyingPaymentStreamSettlLevel["Cumulative"] = 3] = "Cumulative";
})(UnderlyingPaymentStreamSettlLevel = exports.UnderlyingPaymentStreamSettlLevel || (exports.UnderlyingPaymentStreamSettlLevel = {}));
var UnderlyingPaymentStreamReferenceLevelUnitOfMeasure;
(function (UnderlyingPaymentStreamReferenceLevelUnitOfMeasure) {
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["Therms"] = "thm";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["Days"] = "day";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["Grams"] = "g";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["Liters"] = "L";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["MetricTons"] = "t";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingPaymentStreamReferenceLevelUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingPaymentStreamReferenceLevelUnitOfMeasure = exports.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure || (exports.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure = {}));
var UnderlyingPaymentStreamRateSpreadUnitOfMeasure;
(function (UnderlyingPaymentStreamRateSpreadUnitOfMeasure) {
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["Therms"] = "thm";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["Days"] = "day";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["Grams"] = "g";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["Liters"] = "L";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["MetricTons"] = "t";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingPaymentStreamRateSpreadUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingPaymentStreamRateSpreadUnitOfMeasure = exports.UnderlyingPaymentStreamRateSpreadUnitOfMeasure || (exports.UnderlyingPaymentStreamRateSpreadUnitOfMeasure = {}));
var UnderlyingPaymentStreamRateSpreadType;
(function (UnderlyingPaymentStreamRateSpreadType) {
    UnderlyingPaymentStreamRateSpreadType[UnderlyingPaymentStreamRateSpreadType["Absolute"] = 0] = "Absolute";
    UnderlyingPaymentStreamRateSpreadType[UnderlyingPaymentStreamRateSpreadType["Percentage"] = 1] = "Percentage";
})(UnderlyingPaymentStreamRateSpreadType = exports.UnderlyingPaymentStreamRateSpreadType || (exports.UnderlyingPaymentStreamRateSpreadType = {}));
var UnderlyingPaymentStreamCalculationLagUnit;
(function (UnderlyingPaymentStreamCalculationLagUnit) {
    UnderlyingPaymentStreamCalculationLagUnit["Day"] = "D";
    UnderlyingPaymentStreamCalculationLagUnit["Week"] = "Wk";
    UnderlyingPaymentStreamCalculationLagUnit["Month"] = "Mo";
    UnderlyingPaymentStreamCalculationLagUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamCalculationLagUnit = exports.UnderlyingPaymentStreamCalculationLagUnit || (exports.UnderlyingPaymentStreamCalculationLagUnit = {}));
var UnderlyingPaymentStreamFirstObservationDateOffsetUnit;
(function (UnderlyingPaymentStreamFirstObservationDateOffsetUnit) {
    UnderlyingPaymentStreamFirstObservationDateOffsetUnit["Day"] = "D";
    UnderlyingPaymentStreamFirstObservationDateOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentStreamFirstObservationDateOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentStreamFirstObservationDateOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamFirstObservationDateOffsetUnit = exports.UnderlyingPaymentStreamFirstObservationDateOffsetUnit || (exports.UnderlyingPaymentStreamFirstObservationDateOffsetUnit = {}));
var UnderlyingPaymentStreamPricingDayType;
(function (UnderlyingPaymentStreamPricingDayType) {
    UnderlyingPaymentStreamPricingDayType[UnderlyingPaymentStreamPricingDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStreamPricingDayType[UnderlyingPaymentStreamPricingDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStreamPricingDayType[UnderlyingPaymentStreamPricingDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStreamPricingDayType[UnderlyingPaymentStreamPricingDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStreamPricingDayType[UnderlyingPaymentStreamPricingDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStreamPricingDayType[UnderlyingPaymentStreamPricingDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStreamPricingDayType = exports.UnderlyingPaymentStreamPricingDayType || (exports.UnderlyingPaymentStreamPricingDayType = {}));
var UnderlyingPaymentStreamPricingDayDistribution;
(function (UnderlyingPaymentStreamPricingDayDistribution) {
    UnderlyingPaymentStreamPricingDayDistribution[UnderlyingPaymentStreamPricingDayDistribution["All"] = 0] = "All";
    UnderlyingPaymentStreamPricingDayDistribution[UnderlyingPaymentStreamPricingDayDistribution["First"] = 1] = "First";
    UnderlyingPaymentStreamPricingDayDistribution[UnderlyingPaymentStreamPricingDayDistribution["Last"] = 2] = "Last";
    UnderlyingPaymentStreamPricingDayDistribution[UnderlyingPaymentStreamPricingDayDistribution["Penultimate"] = 3] = "Penultimate";
})(UnderlyingPaymentStreamPricingDayDistribution = exports.UnderlyingPaymentStreamPricingDayDistribution || (exports.UnderlyingPaymentStreamPricingDayDistribution = {}));
var UnderlyingPaymentStreamPricingBusinessDayConvention;
(function (UnderlyingPaymentStreamPricingBusinessDayConvention) {
    UnderlyingPaymentStreamPricingBusinessDayConvention[UnderlyingPaymentStreamPricingBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingPaymentStreamPricingBusinessDayConvention[UnderlyingPaymentStreamPricingBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingPaymentStreamPricingBusinessDayConvention[UnderlyingPaymentStreamPricingBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingPaymentStreamPricingBusinessDayConvention[UnderlyingPaymentStreamPricingBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingPaymentStreamPricingBusinessDayConvention[UnderlyingPaymentStreamPricingBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingPaymentStreamPricingBusinessDayConvention[UnderlyingPaymentStreamPricingBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingPaymentStreamPricingBusinessDayConvention[UnderlyingPaymentStreamPricingBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingPaymentStreamPricingBusinessDayConvention[UnderlyingPaymentStreamPricingBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingPaymentStreamPricingBusinessDayConvention = exports.UnderlyingPaymentStreamPricingBusinessDayConvention || (exports.UnderlyingPaymentStreamPricingBusinessDayConvention = {}));
var LegStreamCommoditySettlTimeType;
(function (LegStreamCommoditySettlTimeType) {
    LegStreamCommoditySettlTimeType[LegStreamCommoditySettlTimeType["HourOfTheDay"] = 0] = "HourOfTheDay";
    LegStreamCommoditySettlTimeType[LegStreamCommoditySettlTimeType["HhMmTimeFormat"] = 1] = "HhMmTimeFormat";
})(LegStreamCommoditySettlTimeType = exports.LegStreamCommoditySettlTimeType || (exports.LegStreamCommoditySettlTimeType = {}));
var UnderlyingStreamCommoditySettlTimeType;
(function (UnderlyingStreamCommoditySettlTimeType) {
    UnderlyingStreamCommoditySettlTimeType[UnderlyingStreamCommoditySettlTimeType["HourOfTheDay"] = 0] = "HourOfTheDay";
    UnderlyingStreamCommoditySettlTimeType[UnderlyingStreamCommoditySettlTimeType["HhMmTimeFormat"] = 1] = "HhMmTimeFormat";
})(UnderlyingStreamCommoditySettlTimeType = exports.UnderlyingStreamCommoditySettlTimeType || (exports.UnderlyingStreamCommoditySettlTimeType = {}));
var UnderlyingPaymentStreamPaymentDateType;
(function (UnderlyingPaymentStreamPaymentDateType) {
    UnderlyingPaymentStreamPaymentDateType[UnderlyingPaymentStreamPaymentDateType["Unadjusted"] = 0] = "Unadjusted";
    UnderlyingPaymentStreamPaymentDateType[UnderlyingPaymentStreamPaymentDateType["Adjusted"] = 1] = "Adjusted";
})(UnderlyingPaymentStreamPaymentDateType = exports.UnderlyingPaymentStreamPaymentDateType || (exports.UnderlyingPaymentStreamPaymentDateType = {}));
var UnderlyingPaymentStreamPricingDateType;
(function (UnderlyingPaymentStreamPricingDateType) {
    UnderlyingPaymentStreamPricingDateType[UnderlyingPaymentStreamPricingDateType["Unadjusted"] = 0] = "Unadjusted";
    UnderlyingPaymentStreamPricingDateType[UnderlyingPaymentStreamPricingDateType["Adjusted"] = 1] = "Adjusted";
})(UnderlyingPaymentStreamPricingDateType = exports.UnderlyingPaymentStreamPricingDateType || (exports.UnderlyingPaymentStreamPricingDateType = {}));
var UnderlyingPaymentStreamPricingDayOfWeek;
(function (UnderlyingPaymentStreamPricingDayOfWeek) {
    UnderlyingPaymentStreamPricingDayOfWeek[UnderlyingPaymentStreamPricingDayOfWeek["EveryDayTheDefaultIfNotSpecified"] = 0] = "EveryDayTheDefaultIfNotSpecified";
    UnderlyingPaymentStreamPricingDayOfWeek[UnderlyingPaymentStreamPricingDayOfWeek["Monday"] = 1] = "Monday";
    UnderlyingPaymentStreamPricingDayOfWeek[UnderlyingPaymentStreamPricingDayOfWeek["Tuesday"] = 2] = "Tuesday";
    UnderlyingPaymentStreamPricingDayOfWeek[UnderlyingPaymentStreamPricingDayOfWeek["Wednesday"] = 3] = "Wednesday";
    UnderlyingPaymentStreamPricingDayOfWeek[UnderlyingPaymentStreamPricingDayOfWeek["Thursday"] = 4] = "Thursday";
    UnderlyingPaymentStreamPricingDayOfWeek[UnderlyingPaymentStreamPricingDayOfWeek["Friday"] = 5] = "Friday";
    UnderlyingPaymentStreamPricingDayOfWeek[UnderlyingPaymentStreamPricingDayOfWeek["Saturday"] = 6] = "Saturday";
    UnderlyingPaymentStreamPricingDayOfWeek[UnderlyingPaymentStreamPricingDayOfWeek["Sunday"] = 7] = "Sunday";
})(UnderlyingPaymentStreamPricingDayOfWeek = exports.UnderlyingPaymentStreamPricingDayOfWeek || (exports.UnderlyingPaymentStreamPricingDayOfWeek = {}));
var UnderlyingPricingDateBusinessDayConvention;
(function (UnderlyingPricingDateBusinessDayConvention) {
    UnderlyingPricingDateBusinessDayConvention[UnderlyingPricingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingPricingDateBusinessDayConvention[UnderlyingPricingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingPricingDateBusinessDayConvention[UnderlyingPricingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingPricingDateBusinessDayConvention[UnderlyingPricingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingPricingDateBusinessDayConvention[UnderlyingPricingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingPricingDateBusinessDayConvention[UnderlyingPricingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingPricingDateBusinessDayConvention[UnderlyingPricingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingPricingDateBusinessDayConvention[UnderlyingPricingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingPricingDateBusinessDayConvention = exports.UnderlyingPricingDateBusinessDayConvention || (exports.UnderlyingPricingDateBusinessDayConvention = {}));
var UnderlyingStreamCalculationPeriodDateType;
(function (UnderlyingStreamCalculationPeriodDateType) {
    UnderlyingStreamCalculationPeriodDateType[UnderlyingStreamCalculationPeriodDateType["Unadjusted"] = 0] = "Unadjusted";
    UnderlyingStreamCalculationPeriodDateType[UnderlyingStreamCalculationPeriodDateType["Adjusted"] = 1] = "Adjusted";
})(UnderlyingStreamCalculationPeriodDateType = exports.UnderlyingStreamCalculationPeriodDateType || (exports.UnderlyingStreamCalculationPeriodDateType = {}));
var UnderlyingStreamCalculationCorrectionUnit;
(function (UnderlyingStreamCalculationCorrectionUnit) {
    UnderlyingStreamCalculationCorrectionUnit["Day"] = "D";
    UnderlyingStreamCalculationCorrectionUnit["Week"] = "Wk";
    UnderlyingStreamCalculationCorrectionUnit["Month"] = "Mo";
    UnderlyingStreamCalculationCorrectionUnit["Year"] = "Yr";
})(UnderlyingStreamCalculationCorrectionUnit = exports.UnderlyingStreamCalculationCorrectionUnit || (exports.UnderlyingStreamCalculationCorrectionUnit = {}));
var UnderlyingStreamCommoditySecurityIDSource;
(function (UnderlyingStreamCommoditySecurityIDSource) {
    UnderlyingStreamCommoditySecurityIDSource["Cusip"] = "1";
    UnderlyingStreamCommoditySecurityIDSource["Sedol"] = "2";
    UnderlyingStreamCommoditySecurityIDSource["Quik"] = "3";
    UnderlyingStreamCommoditySecurityIDSource["IsinNumber"] = "4";
    UnderlyingStreamCommoditySecurityIDSource["RicCode"] = "5";
    UnderlyingStreamCommoditySecurityIDSource["IsoCurrencyCode"] = "6";
    UnderlyingStreamCommoditySecurityIDSource["IsoCountryCode"] = "7";
    UnderlyingStreamCommoditySecurityIDSource["ExchangeSymbol"] = "8";
    UnderlyingStreamCommoditySecurityIDSource["ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat"] = "9";
    UnderlyingStreamCommoditySecurityIDSource["BloombergSymbol"] = "A";
    UnderlyingStreamCommoditySecurityIDSource["Wertpapier"] = "B";
    UnderlyingStreamCommoditySecurityIDSource["Dutch"] = "C";
    UnderlyingStreamCommoditySecurityIDSource["Valoren"] = "D";
    UnderlyingStreamCommoditySecurityIDSource["Sicovam"] = "E";
    UnderlyingStreamCommoditySecurityIDSource["Belgian"] = "F";
    UnderlyingStreamCommoditySecurityIDSource["CommonClearstreamAndEuroclear"] = "G";
    UnderlyingStreamCommoditySecurityIDSource["ClearingHouseClearingOrganization"] = "H";
    UnderlyingStreamCommoditySecurityIDSource["IsdaFpMlProductSpecificationXmlInSecurityXml1185"] = "I";
    UnderlyingStreamCommoditySecurityIDSource["OptionPriceReportingAuthority"] = "J";
    UnderlyingStreamCommoditySecurityIDSource["IsdaFpMlProductUrlUrlInSecurityId48"] = "K";
    UnderlyingStreamCommoditySecurityIDSource["LetterOfCredit"] = "L";
    UnderlyingStreamCommoditySecurityIDSource["MarketplaceAssignedIdentifier"] = "M";
    UnderlyingStreamCommoditySecurityIDSource["MarkitRedEntityClip"] = "N";
    UnderlyingStreamCommoditySecurityIDSource["MarkitRedPairClip"] = "P";
    UnderlyingStreamCommoditySecurityIDSource["CftcCommodityCode"] = "Q";
    UnderlyingStreamCommoditySecurityIDSource["IsdaCommodityReferencePrice"] = "R";
    UnderlyingStreamCommoditySecurityIDSource["FinancialInstrumentGlobalIdentifier"] = "S";
    UnderlyingStreamCommoditySecurityIDSource["LegalEntityIdentifier"] = "T";
    UnderlyingStreamCommoditySecurityIDSource["Synthetic"] = "U";
    UnderlyingStreamCommoditySecurityIDSource["FidessaInstrumentMnemonicFim"] = "V";
})(UnderlyingStreamCommoditySecurityIDSource = exports.UnderlyingStreamCommoditySecurityIDSource || (exports.UnderlyingStreamCommoditySecurityIDSource = {}));
var UnderlyingStreamCommodityUnitOfMeasure;
(function (UnderlyingStreamCommodityUnitOfMeasure) {
    UnderlyingStreamCommodityUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingStreamCommodityUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingStreamCommodityUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingStreamCommodityUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingStreamCommodityUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingStreamCommodityUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingStreamCommodityUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingStreamCommodityUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingStreamCommodityUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingStreamCommodityUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingStreamCommodityUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingStreamCommodityUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingStreamCommodityUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingStreamCommodityUnitOfMeasure["Therms"] = "thm";
    UnderlyingStreamCommodityUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingStreamCommodityUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingStreamCommodityUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingStreamCommodityUnitOfMeasure["Days"] = "day";
    UnderlyingStreamCommodityUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingStreamCommodityUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingStreamCommodityUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingStreamCommodityUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingStreamCommodityUnitOfMeasure["Grams"] = "g";
    UnderlyingStreamCommodityUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingStreamCommodityUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingStreamCommodityUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingStreamCommodityUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingStreamCommodityUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingStreamCommodityUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingStreamCommodityUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingStreamCommodityUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingStreamCommodityUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingStreamCommodityUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingStreamCommodityUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingStreamCommodityUnitOfMeasure["Liters"] = "L";
    UnderlyingStreamCommodityUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingStreamCommodityUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingStreamCommodityUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingStreamCommodityUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingStreamCommodityUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingStreamCommodityUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingStreamCommodityUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingStreamCommodityUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingStreamCommodityUnitOfMeasure["MetricTons"] = "t";
    UnderlyingStreamCommodityUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingStreamCommodityUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingStreamCommodityUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingStreamCommodityUnitOfMeasure = exports.UnderlyingStreamCommodityUnitOfMeasure || (exports.UnderlyingStreamCommodityUnitOfMeasure = {}));
var UnderlyingStreamCommodityNearbySettlDayUnit;
(function (UnderlyingStreamCommodityNearbySettlDayUnit) {
    UnderlyingStreamCommodityNearbySettlDayUnit["Week"] = "Wk";
    UnderlyingStreamCommodityNearbySettlDayUnit["Month"] = "Mo";
})(UnderlyingStreamCommodityNearbySettlDayUnit = exports.UnderlyingStreamCommodityNearbySettlDayUnit || (exports.UnderlyingStreamCommodityNearbySettlDayUnit = {}));
var UnderlyingStreamCommoditySettlDateBusinessDayConvention;
(function (UnderlyingStreamCommoditySettlDateBusinessDayConvention) {
    UnderlyingStreamCommoditySettlDateBusinessDayConvention[UnderlyingStreamCommoditySettlDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingStreamCommoditySettlDateBusinessDayConvention[UnderlyingStreamCommoditySettlDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingStreamCommoditySettlDateBusinessDayConvention[UnderlyingStreamCommoditySettlDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingStreamCommoditySettlDateBusinessDayConvention[UnderlyingStreamCommoditySettlDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingStreamCommoditySettlDateBusinessDayConvention[UnderlyingStreamCommoditySettlDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingStreamCommoditySettlDateBusinessDayConvention[UnderlyingStreamCommoditySettlDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingStreamCommoditySettlDateBusinessDayConvention[UnderlyingStreamCommoditySettlDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingStreamCommoditySettlDateBusinessDayConvention[UnderlyingStreamCommoditySettlDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingStreamCommoditySettlDateBusinessDayConvention = exports.UnderlyingStreamCommoditySettlDateBusinessDayConvention || (exports.UnderlyingStreamCommoditySettlDateBusinessDayConvention = {}));
var UnderlyingStreamCommoditySettlDateRollUnit;
(function (UnderlyingStreamCommoditySettlDateRollUnit) {
    UnderlyingStreamCommoditySettlDateRollUnit["Day"] = "D";
})(UnderlyingStreamCommoditySettlDateRollUnit = exports.UnderlyingStreamCommoditySettlDateRollUnit || (exports.UnderlyingStreamCommoditySettlDateRollUnit = {}));
var UnderlyingStreamCommoditySettlDayType;
(function (UnderlyingStreamCommoditySettlDayType) {
    UnderlyingStreamCommoditySettlDayType[UnderlyingStreamCommoditySettlDayType["Business"] = 0] = "Business";
    UnderlyingStreamCommoditySettlDayType[UnderlyingStreamCommoditySettlDayType["Calendar"] = 1] = "Calendar";
    UnderlyingStreamCommoditySettlDayType[UnderlyingStreamCommoditySettlDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingStreamCommoditySettlDayType[UnderlyingStreamCommoditySettlDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingStreamCommoditySettlDayType[UnderlyingStreamCommoditySettlDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingStreamCommoditySettlDayType[UnderlyingStreamCommoditySettlDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingStreamCommoditySettlDayType = exports.UnderlyingStreamCommoditySettlDayType || (exports.UnderlyingStreamCommoditySettlDayType = {}));
var UnderlyingStreamCommodityDataSourceIDType;
(function (UnderlyingStreamCommodityDataSourceIDType) {
    UnderlyingStreamCommodityDataSourceIDType[UnderlyingStreamCommodityDataSourceIDType["City4CharacterBusinessCenterCode"] = 0] = "City4CharacterBusinessCenterCode";
    UnderlyingStreamCommodityDataSourceIDType[UnderlyingStreamCommodityDataSourceIDType["AirportIataStandard"] = 1] = "AirportIataStandard";
    UnderlyingStreamCommodityDataSourceIDType[UnderlyingStreamCommodityDataSourceIDType["WeatherStationWbanWeatherBureauArmyNavy"] = 2] = "WeatherStationWbanWeatherBureauArmyNavy";
    UnderlyingStreamCommodityDataSourceIDType[UnderlyingStreamCommodityDataSourceIDType["WeatherIndexWmoWorldMeteorologicalOrganization"] = 3] = "WeatherIndexWmoWorldMeteorologicalOrganization";
})(UnderlyingStreamCommodityDataSourceIDType = exports.UnderlyingStreamCommodityDataSourceIDType || (exports.UnderlyingStreamCommodityDataSourceIDType = {}));
var UnderlyingStreamCommoditySettlDay;
(function (UnderlyingStreamCommoditySettlDay) {
    UnderlyingStreamCommoditySettlDay[UnderlyingStreamCommoditySettlDay["Monday"] = 1] = "Monday";
    UnderlyingStreamCommoditySettlDay[UnderlyingStreamCommoditySettlDay["Tuesday"] = 2] = "Tuesday";
    UnderlyingStreamCommoditySettlDay[UnderlyingStreamCommoditySettlDay["Wednesday"] = 3] = "Wednesday";
    UnderlyingStreamCommoditySettlDay[UnderlyingStreamCommoditySettlDay["Thursday"] = 4] = "Thursday";
    UnderlyingStreamCommoditySettlDay[UnderlyingStreamCommoditySettlDay["Friday"] = 5] = "Friday";
    UnderlyingStreamCommoditySettlDay[UnderlyingStreamCommoditySettlDay["Saturday"] = 6] = "Saturday";
    UnderlyingStreamCommoditySettlDay[UnderlyingStreamCommoditySettlDay["Sunday"] = 7] = "Sunday";
    UnderlyingStreamCommoditySettlDay[UnderlyingStreamCommoditySettlDay["AllWeekdays"] = 8] = "AllWeekdays";
    UnderlyingStreamCommoditySettlDay[UnderlyingStreamCommoditySettlDay["AllDays"] = 9] = "AllDays";
    UnderlyingStreamCommoditySettlDay[UnderlyingStreamCommoditySettlDay["AllWeekends"] = 10] = "AllWeekends";
})(UnderlyingStreamCommoditySettlDay = exports.UnderlyingStreamCommoditySettlDay || (exports.UnderlyingStreamCommoditySettlDay = {}));
var UnderlyingStreamCommoditySettlFlowType;
(function (UnderlyingStreamCommoditySettlFlowType) {
    UnderlyingStreamCommoditySettlFlowType[UnderlyingStreamCommoditySettlFlowType["AllTimes"] = 0] = "AllTimes";
    UnderlyingStreamCommoditySettlFlowType[UnderlyingStreamCommoditySettlFlowType["OnPeak"] = 1] = "OnPeak";
    UnderlyingStreamCommoditySettlFlowType[UnderlyingStreamCommoditySettlFlowType["OffPeak"] = 2] = "OffPeak";
    UnderlyingStreamCommoditySettlFlowType[UnderlyingStreamCommoditySettlFlowType["Base"] = 3] = "Base";
    UnderlyingStreamCommoditySettlFlowType[UnderlyingStreamCommoditySettlFlowType["BlockHours"] = 4] = "BlockHours";
    UnderlyingStreamCommoditySettlFlowType[UnderlyingStreamCommoditySettlFlowType["Other"] = 5] = "Other";
})(UnderlyingStreamCommoditySettlFlowType = exports.UnderlyingStreamCommoditySettlFlowType || (exports.UnderlyingStreamCommoditySettlFlowType = {}));
var UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure;
(function (UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure) {
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["Therms"] = "thm";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["Days"] = "day";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["Grams"] = "g";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["Liters"] = "L";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["MetricTons"] = "t";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure = exports.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure || (exports.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure = {}));
var UnderlyingStreamCommoditySettlPeriodFrequencyUnit;
(function (UnderlyingStreamCommoditySettlPeriodFrequencyUnit) {
    UnderlyingStreamCommoditySettlPeriodFrequencyUnit["Day"] = "D";
    UnderlyingStreamCommoditySettlPeriodFrequencyUnit["Week"] = "Wk";
    UnderlyingStreamCommoditySettlPeriodFrequencyUnit["Month"] = "Mo";
    UnderlyingStreamCommoditySettlPeriodFrequencyUnit["Year"] = "Yr";
})(UnderlyingStreamCommoditySettlPeriodFrequencyUnit = exports.UnderlyingStreamCommoditySettlPeriodFrequencyUnit || (exports.UnderlyingStreamCommoditySettlPeriodFrequencyUnit = {}));
var UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure;
(function (UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure) {
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["Therms"] = "thm";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["Days"] = "day";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["Grams"] = "g";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["Liters"] = "L";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["MetricTons"] = "t";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure = exports.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure || (exports.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure = {}));
var UnderlyingStreamCommoditySettlHolidaysProcessingInstruction;
(function (UnderlyingStreamCommoditySettlHolidaysProcessingInstruction) {
    UnderlyingStreamCommoditySettlHolidaysProcessingInstruction[UnderlyingStreamCommoditySettlHolidaysProcessingInstruction["DoNotIncludeHolidays"] = 0] = "DoNotIncludeHolidays";
    UnderlyingStreamCommoditySettlHolidaysProcessingInstruction[UnderlyingStreamCommoditySettlHolidaysProcessingInstruction["IncludeHolidays"] = 1] = "IncludeHolidays";
})(UnderlyingStreamCommoditySettlHolidaysProcessingInstruction = exports.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction || (exports.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction = {}));
var UnderlyingStreamNotionalFrequencyUnit;
(function (UnderlyingStreamNotionalFrequencyUnit) {
    UnderlyingStreamNotionalFrequencyUnit["Hour"] = "H";
    UnderlyingStreamNotionalFrequencyUnit["Minute"] = "Min";
    UnderlyingStreamNotionalFrequencyUnit["Second"] = "S";
    UnderlyingStreamNotionalFrequencyUnit["Day"] = "D";
    UnderlyingStreamNotionalFrequencyUnit["Week"] = "Wk";
    UnderlyingStreamNotionalFrequencyUnit["Month"] = "Mo";
    UnderlyingStreamNotionalFrequencyUnit["Year"] = "Yr";
    UnderlyingStreamNotionalFrequencyUnit["Quarter"] = "Q";
})(UnderlyingStreamNotionalFrequencyUnit = exports.UnderlyingStreamNotionalFrequencyUnit || (exports.UnderlyingStreamNotionalFrequencyUnit = {}));
var UnderlyingStreamNotionalCommodityFrequency;
(function (UnderlyingStreamNotionalCommodityFrequency) {
    UnderlyingStreamNotionalCommodityFrequency[UnderlyingStreamNotionalCommodityFrequency["Term"] = 0] = "Term";
    UnderlyingStreamNotionalCommodityFrequency[UnderlyingStreamNotionalCommodityFrequency["PerBusinessDay"] = 1] = "PerBusinessDay";
    UnderlyingStreamNotionalCommodityFrequency[UnderlyingStreamNotionalCommodityFrequency["PerCalculationPeriod"] = 2] = "PerCalculationPeriod";
    UnderlyingStreamNotionalCommodityFrequency[UnderlyingStreamNotionalCommodityFrequency["PerSettlementPeriod"] = 3] = "PerSettlementPeriod";
    UnderlyingStreamNotionalCommodityFrequency[UnderlyingStreamNotionalCommodityFrequency["PerCalendarDay"] = 4] = "PerCalendarDay";
    UnderlyingStreamNotionalCommodityFrequency[UnderlyingStreamNotionalCommodityFrequency["PerHour"] = 5] = "PerHour";
    UnderlyingStreamNotionalCommodityFrequency[UnderlyingStreamNotionalCommodityFrequency["PerMonth"] = 6] = "PerMonth";
})(UnderlyingStreamNotionalCommodityFrequency = exports.UnderlyingStreamNotionalCommodityFrequency || (exports.UnderlyingStreamNotionalCommodityFrequency = {}));
var UnderlyingStreamNotionalUnitOfMeasure;
(function (UnderlyingStreamNotionalUnitOfMeasure) {
    UnderlyingStreamNotionalUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingStreamNotionalUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingStreamNotionalUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingStreamNotionalUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingStreamNotionalUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingStreamNotionalUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingStreamNotionalUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingStreamNotionalUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingStreamNotionalUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingStreamNotionalUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingStreamNotionalUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingStreamNotionalUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingStreamNotionalUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingStreamNotionalUnitOfMeasure["Therms"] = "thm";
    UnderlyingStreamNotionalUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingStreamNotionalUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingStreamNotionalUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingStreamNotionalUnitOfMeasure["Days"] = "day";
    UnderlyingStreamNotionalUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingStreamNotionalUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingStreamNotionalUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingStreamNotionalUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingStreamNotionalUnitOfMeasure["Grams"] = "g";
    UnderlyingStreamNotionalUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingStreamNotionalUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingStreamNotionalUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingStreamNotionalUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingStreamNotionalUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingStreamNotionalUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingStreamNotionalUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingStreamNotionalUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingStreamNotionalUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingStreamNotionalUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingStreamNotionalUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingStreamNotionalUnitOfMeasure["Liters"] = "L";
    UnderlyingStreamNotionalUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingStreamNotionalUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingStreamNotionalUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingStreamNotionalUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingStreamNotionalUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingStreamNotionalUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingStreamNotionalUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingStreamNotionalUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingStreamNotionalUnitOfMeasure["MetricTons"] = "t";
    UnderlyingStreamNotionalUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingStreamNotionalUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingStreamNotionalUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingStreamNotionalUnitOfMeasure = exports.UnderlyingStreamNotionalUnitOfMeasure || (exports.UnderlyingStreamNotionalUnitOfMeasure = {}));
var UnderlyingStreamTotalNotionalUnitOfMeasure;
(function (UnderlyingStreamTotalNotionalUnitOfMeasure) {
    UnderlyingStreamTotalNotionalUnitOfMeasure["BillionCubicFeet"] = "Bcf";
    UnderlyingStreamTotalNotionalUnitOfMeasure["Allowances"] = "Alw";
    UnderlyingStreamTotalNotionalUnitOfMeasure["Barrels"] = "Bbl";
    UnderlyingStreamTotalNotionalUnitOfMeasure["CubicMeters"] = "CBM";
    UnderlyingStreamTotalNotionalUnitOfMeasure["BoardFeet"] = "BDFT";
    UnderlyingStreamTotalNotionalUnitOfMeasure["Gigajoules"] = "GJ";
    UnderlyingStreamTotalNotionalUnitOfMeasure["Bushels"] = "Bu";
    UnderlyingStreamTotalNotionalUnitOfMeasure["KilowattHours"] = "kWh";
    UnderlyingStreamTotalNotionalUnitOfMeasure["OneMillionBtu"] = "MMBtu";
    UnderlyingStreamTotalNotionalUnitOfMeasure["AmountOfCurrency"] = "Ccy";
    UnderlyingStreamTotalNotionalUnitOfMeasure["MegawattHours"] = "MWh";
    UnderlyingStreamTotalNotionalUnitOfMeasure["CoolingDegreeDay"] = "CDD";
    UnderlyingStreamTotalNotionalUnitOfMeasure["CertifiedEmissionsReduction"] = "CER";
    UnderlyingStreamTotalNotionalUnitOfMeasure["Therms"] = "thm";
    UnderlyingStreamTotalNotionalUnitOfMeasure["CriticalPrecipitationDay"] = "CPD";
    UnderlyingStreamTotalNotionalUnitOfMeasure["ClimateReserveTonnes"] = "CRT";
    UnderlyingStreamTotalNotionalUnitOfMeasure["HundredweightUs"] = "cwt";
    UnderlyingStreamTotalNotionalUnitOfMeasure["Days"] = "day";
    UnderlyingStreamTotalNotionalUnitOfMeasure["DryMetricTons"] = "dt";
    UnderlyingStreamTotalNotionalUnitOfMeasure["EnvironmentalAllowanceCertificates"] = "EnvAllwnc";
    UnderlyingStreamTotalNotionalUnitOfMeasure["EnvironmentalCredit"] = "EnvCrd";
    UnderlyingStreamTotalNotionalUnitOfMeasure["EnvironmentalOffset"] = "EnvOfst";
    UnderlyingStreamTotalNotionalUnitOfMeasure["Grams"] = "g";
    UnderlyingStreamTotalNotionalUnitOfMeasure["Gallons"] = "Gal";
    UnderlyingStreamTotalNotionalUnitOfMeasure["GrossTons"] = "GT";
    UnderlyingStreamTotalNotionalUnitOfMeasure["HeatingDegreeDay"] = "HDD";
    UnderlyingStreamTotalNotionalUnitOfMeasure["IndexPoint"] = "IPNT";
    UnderlyingStreamTotalNotionalUnitOfMeasure["Kilograms"] = "kg";
    UnderlyingStreamTotalNotionalUnitOfMeasure["Kiloliters"] = "kL";
    UnderlyingStreamTotalNotionalUnitOfMeasure["KilowattYear"] = "kW-a";
    UnderlyingStreamTotalNotionalUnitOfMeasure["KilowattDay"] = "kW-d";
    UnderlyingStreamTotalNotionalUnitOfMeasure["KilowattHour"] = "kW-h";
    UnderlyingStreamTotalNotionalUnitOfMeasure["KilowattMonth"] = "kW-M";
    UnderlyingStreamTotalNotionalUnitOfMeasure["KilowattMinuteElectricalCapacity"] = "kW-min ";
    UnderlyingStreamTotalNotionalUnitOfMeasure["Liters"] = "L";
    UnderlyingStreamTotalNotionalUnitOfMeasure["Pounds"] = "lbs";
    UnderlyingStreamTotalNotionalUnitOfMeasure["MegawattYear"] = "MW-a";
    UnderlyingStreamTotalNotionalUnitOfMeasure["MegawattDay"] = "MW-d";
    UnderlyingStreamTotalNotionalUnitOfMeasure["MegawattHour"] = "MW-h";
    UnderlyingStreamTotalNotionalUnitOfMeasure["MegawattMonth"] = "MW-M";
    UnderlyingStreamTotalNotionalUnitOfMeasure["MegawattMinute"] = "MW-min";
    UnderlyingStreamTotalNotionalUnitOfMeasure["TroyOunces"] = "oz_tr";
    UnderlyingStreamTotalNotionalUnitOfMeasure["PrincipalWithRelationToDebtInstrument"] = "PRINC";
    UnderlyingStreamTotalNotionalUnitOfMeasure["MetricTons"] = "t";
    UnderlyingStreamTotalNotionalUnitOfMeasure["TonsUs"] = "tn";
    UnderlyingStreamTotalNotionalUnitOfMeasure["MillionBarrels"] = "MMbbl";
    UnderlyingStreamTotalNotionalUnitOfMeasure["UsDollars"] = "USD";
})(UnderlyingStreamTotalNotionalUnitOfMeasure = exports.UnderlyingStreamTotalNotionalUnitOfMeasure || (exports.UnderlyingStreamTotalNotionalUnitOfMeasure = {}));
var UnderlyingAdditionalTermBondSeniority;
(function (UnderlyingAdditionalTermBondSeniority) {
    UnderlyingAdditionalTermBondSeniority["SeniorSecured"] = "SD";
    UnderlyingAdditionalTermBondSeniority["Senior"] = "SR";
    UnderlyingAdditionalTermBondSeniority["Subordinated"] = "SB";
})(UnderlyingAdditionalTermBondSeniority = exports.UnderlyingAdditionalTermBondSeniority || (exports.UnderlyingAdditionalTermBondSeniority = {}));
var UnderlyingAdditionalTermBondCouponType;
(function (UnderlyingAdditionalTermBondCouponType) {
    UnderlyingAdditionalTermBondCouponType[UnderlyingAdditionalTermBondCouponType["Zero"] = 0] = "Zero";
    UnderlyingAdditionalTermBondCouponType[UnderlyingAdditionalTermBondCouponType["FixedRate"] = 1] = "FixedRate";
    UnderlyingAdditionalTermBondCouponType[UnderlyingAdditionalTermBondCouponType["FloatingRate"] = 2] = "FloatingRate";
    UnderlyingAdditionalTermBondCouponType[UnderlyingAdditionalTermBondCouponType["Structured"] = 3] = "Structured";
})(UnderlyingAdditionalTermBondCouponType = exports.UnderlyingAdditionalTermBondCouponType || (exports.UnderlyingAdditionalTermBondCouponType = {}));
var UnderlyingAdditionalTermBondCouponFrequencyUnit;
(function (UnderlyingAdditionalTermBondCouponFrequencyUnit) {
    UnderlyingAdditionalTermBondCouponFrequencyUnit["Day"] = "D";
    UnderlyingAdditionalTermBondCouponFrequencyUnit["Week"] = "Wk";
    UnderlyingAdditionalTermBondCouponFrequencyUnit["Month"] = "Mo";
    UnderlyingAdditionalTermBondCouponFrequencyUnit["Year"] = "Yr";
    UnderlyingAdditionalTermBondCouponFrequencyUnit["Hour"] = "H";
    UnderlyingAdditionalTermBondCouponFrequencyUnit["Minute"] = "Min";
    UnderlyingAdditionalTermBondCouponFrequencyUnit["Second"] = "S";
    UnderlyingAdditionalTermBondCouponFrequencyUnit["Term"] = "T";
})(UnderlyingAdditionalTermBondCouponFrequencyUnit = exports.UnderlyingAdditionalTermBondCouponFrequencyUnit || (exports.UnderlyingAdditionalTermBondCouponFrequencyUnit = {}));
var UnderlyingAdditionalTermBondDayCount;
(function (UnderlyingAdditionalTermBondDayCount) {
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["E11"] = 0] = "E11";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["E3036030U360OrBondBasis"] = 1] = "E3036030U360OrBondBasis";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["E30360Sia"] = 2] = "E30360Sia";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["E30360M"] = 3] = "E30360M";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["E30E360EurobondBasis"] = 4] = "E30E360EurobondBasis";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["E30E360Isda"] = 5] = "E30E360Isda";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["Act360"] = 6] = "Act360";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["Act365Fixed"] = 7] = "Act365Fixed";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["ActActAfb"] = 8] = "ActActAfb";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["ActActIcma"] = 9] = "ActActIcma";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["ActActIcsmaUltimo"] = 10] = "ActActIcsmaUltimo";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["ActActIsda"] = 11] = "ActActIsda";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["Bus252"] = 12] = "Bus252";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["E30E360"] = 13] = "E30E360";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["Act365L"] = 14] = "Act365L";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["Nl365"] = 15] = "Nl365";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["Nl360"] = 16] = "Nl360";
    UnderlyingAdditionalTermBondDayCount[UnderlyingAdditionalTermBondDayCount["Act364"] = 17] = "Act364";
})(UnderlyingAdditionalTermBondDayCount = exports.UnderlyingAdditionalTermBondDayCount || (exports.UnderlyingAdditionalTermBondDayCount = {}));
var UnderlyingCashSettlQuoteMethod;
(function (UnderlyingCashSettlQuoteMethod) {
    UnderlyingCashSettlQuoteMethod[UnderlyingCashSettlQuoteMethod["Bid"] = 0] = "Bid";
    UnderlyingCashSettlQuoteMethod[UnderlyingCashSettlQuoteMethod["Mid"] = 1] = "Mid";
    UnderlyingCashSettlQuoteMethod[UnderlyingCashSettlQuoteMethod["Offer"] = 2] = "Offer";
})(UnderlyingCashSettlQuoteMethod = exports.UnderlyingCashSettlQuoteMethod || (exports.UnderlyingCashSettlQuoteMethod = {}));
var UnderlyingCashSettlValuationMethod;
(function (UnderlyingCashSettlValuationMethod) {
    UnderlyingCashSettlValuationMethod[UnderlyingCashSettlValuationMethod["Market"] = 0] = "Market";
    UnderlyingCashSettlValuationMethod[UnderlyingCashSettlValuationMethod["Highest"] = 1] = "Highest";
    UnderlyingCashSettlValuationMethod[UnderlyingCashSettlValuationMethod["AverageMarket"] = 2] = "AverageMarket";
    UnderlyingCashSettlValuationMethod[UnderlyingCashSettlValuationMethod["AverageHighest"] = 3] = "AverageHighest";
    UnderlyingCashSettlValuationMethod[UnderlyingCashSettlValuationMethod["BlendedMarket"] = 4] = "BlendedMarket";
    UnderlyingCashSettlValuationMethod[UnderlyingCashSettlValuationMethod["BlendedHighest"] = 5] = "BlendedHighest";
    UnderlyingCashSettlValuationMethod[UnderlyingCashSettlValuationMethod["AverageBlendedMarket"] = 6] = "AverageBlendedMarket";
    UnderlyingCashSettlValuationMethod[UnderlyingCashSettlValuationMethod["AverageBlendedHighest"] = 7] = "AverageBlendedHighest";
})(UnderlyingCashSettlValuationMethod = exports.UnderlyingCashSettlValuationMethod || (exports.UnderlyingCashSettlValuationMethod = {}));
var UnderlyingProtectionTermEventUnit;
(function (UnderlyingProtectionTermEventUnit) {
    UnderlyingProtectionTermEventUnit["Day"] = "D";
    UnderlyingProtectionTermEventUnit["Week"] = "Wk";
    UnderlyingProtectionTermEventUnit["Month"] = "Mo";
    UnderlyingProtectionTermEventUnit["Year"] = "Yr";
})(UnderlyingProtectionTermEventUnit = exports.UnderlyingProtectionTermEventUnit || (exports.UnderlyingProtectionTermEventUnit = {}));
var UnderlyingProtectionTermEventDayType;
(function (UnderlyingProtectionTermEventDayType) {
    UnderlyingProtectionTermEventDayType[UnderlyingProtectionTermEventDayType["Business"] = 0] = "Business";
    UnderlyingProtectionTermEventDayType[UnderlyingProtectionTermEventDayType["Calendar"] = 1] = "Calendar";
    UnderlyingProtectionTermEventDayType[UnderlyingProtectionTermEventDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingProtectionTermEventDayType[UnderlyingProtectionTermEventDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingProtectionTermEventDayType[UnderlyingProtectionTermEventDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingProtectionTermEventDayType[UnderlyingProtectionTermEventDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingProtectionTermEventDayType = exports.UnderlyingProtectionTermEventDayType || (exports.UnderlyingProtectionTermEventDayType = {}));
var UnderlyingProtectionTermEventQualifier;
(function (UnderlyingProtectionTermEventQualifier) {
    UnderlyingProtectionTermEventQualifier["RetructuringMultipleHoldingObligations"] = "H";
    UnderlyingProtectionTermEventQualifier["RestructuringMultipleCreditEventNotices"] = "E";
    UnderlyingProtectionTermEventQualifier["FloatingRateInterestShortfall"] = "C";
})(UnderlyingProtectionTermEventQualifier = exports.UnderlyingProtectionTermEventQualifier || (exports.UnderlyingProtectionTermEventQualifier = {}));
var UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention;
(function (UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention) {
    UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention[UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention[UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention[UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention[UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention[UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention[UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention[UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention[UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention = exports.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention || (exports.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention = {}));
var UnderlyingProvisionCashSettlPaymentDateOffsetUnit;
(function (UnderlyingProvisionCashSettlPaymentDateOffsetUnit) {
    UnderlyingProvisionCashSettlPaymentDateOffsetUnit["Day"] = "D";
    UnderlyingProvisionCashSettlPaymentDateOffsetUnit["Week"] = "Wk";
    UnderlyingProvisionCashSettlPaymentDateOffsetUnit["Month"] = "Mo";
    UnderlyingProvisionCashSettlPaymentDateOffsetUnit["Year"] = "Yr";
})(UnderlyingProvisionCashSettlPaymentDateOffsetUnit = exports.UnderlyingProvisionCashSettlPaymentDateOffsetUnit || (exports.UnderlyingProvisionCashSettlPaymentDateOffsetUnit = {}));
var UnderlyingProvisionCashSettlPaymentDateOffsetDayType;
(function (UnderlyingProvisionCashSettlPaymentDateOffsetDayType) {
    UnderlyingProvisionCashSettlPaymentDateOffsetDayType[UnderlyingProvisionCashSettlPaymentDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingProvisionCashSettlPaymentDateOffsetDayType[UnderlyingProvisionCashSettlPaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingProvisionCashSettlPaymentDateOffsetDayType[UnderlyingProvisionCashSettlPaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingProvisionCashSettlPaymentDateOffsetDayType[UnderlyingProvisionCashSettlPaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingProvisionCashSettlPaymentDateOffsetDayType[UnderlyingProvisionCashSettlPaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingProvisionCashSettlPaymentDateOffsetDayType[UnderlyingProvisionCashSettlPaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingProvisionCashSettlPaymentDateOffsetDayType = exports.UnderlyingProvisionCashSettlPaymentDateOffsetDayType || (exports.UnderlyingProvisionCashSettlPaymentDateOffsetDayType = {}));
var UnderlyingProvisionCashSettlPaymentDateType;
(function (UnderlyingProvisionCashSettlPaymentDateType) {
    UnderlyingProvisionCashSettlPaymentDateType[UnderlyingProvisionCashSettlPaymentDateType["Unadjusted"] = 0] = "Unadjusted";
    UnderlyingProvisionCashSettlPaymentDateType[UnderlyingProvisionCashSettlPaymentDateType["Adjusted"] = 1] = "Adjusted";
})(UnderlyingProvisionCashSettlPaymentDateType = exports.UnderlyingProvisionCashSettlPaymentDateType || (exports.UnderlyingProvisionCashSettlPaymentDateType = {}));
var UnderlyingProvisionCashSettlQuoteSource;
(function (UnderlyingProvisionCashSettlQuoteSource) {
    UnderlyingProvisionCashSettlQuoteSource[UnderlyingProvisionCashSettlQuoteSource["Bloomberg"] = 0] = "Bloomberg";
    UnderlyingProvisionCashSettlQuoteSource[UnderlyingProvisionCashSettlQuoteSource["Reuters"] = 1] = "Reuters";
    UnderlyingProvisionCashSettlQuoteSource[UnderlyingProvisionCashSettlQuoteSource["Telerate"] = 2] = "Telerate";
    UnderlyingProvisionCashSettlQuoteSource[UnderlyingProvisionCashSettlQuoteSource["Other"] = 99] = "Other";
})(UnderlyingProvisionCashSettlQuoteSource = exports.UnderlyingProvisionCashSettlQuoteSource || (exports.UnderlyingProvisionCashSettlQuoteSource = {}));
var UnderlyingProvisionCashSettlValueDateBusinessDayConvention;
(function (UnderlyingProvisionCashSettlValueDateBusinessDayConvention) {
    UnderlyingProvisionCashSettlValueDateBusinessDayConvention[UnderlyingProvisionCashSettlValueDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingProvisionCashSettlValueDateBusinessDayConvention[UnderlyingProvisionCashSettlValueDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingProvisionCashSettlValueDateBusinessDayConvention[UnderlyingProvisionCashSettlValueDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingProvisionCashSettlValueDateBusinessDayConvention[UnderlyingProvisionCashSettlValueDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingProvisionCashSettlValueDateBusinessDayConvention[UnderlyingProvisionCashSettlValueDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingProvisionCashSettlValueDateBusinessDayConvention[UnderlyingProvisionCashSettlValueDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingProvisionCashSettlValueDateBusinessDayConvention[UnderlyingProvisionCashSettlValueDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingProvisionCashSettlValueDateBusinessDayConvention[UnderlyingProvisionCashSettlValueDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingProvisionCashSettlValueDateBusinessDayConvention = exports.UnderlyingProvisionCashSettlValueDateBusinessDayConvention || (exports.UnderlyingProvisionCashSettlValueDateBusinessDayConvention = {}));
var UnderlyingProvisionCashSettlValueDateOffsetUnit;
(function (UnderlyingProvisionCashSettlValueDateOffsetUnit) {
    UnderlyingProvisionCashSettlValueDateOffsetUnit["Day"] = "D";
    UnderlyingProvisionCashSettlValueDateOffsetUnit["Week"] = "Wk";
    UnderlyingProvisionCashSettlValueDateOffsetUnit["Month"] = "Mo";
    UnderlyingProvisionCashSettlValueDateOffsetUnit["Year"] = "Yr";
})(UnderlyingProvisionCashSettlValueDateOffsetUnit = exports.UnderlyingProvisionCashSettlValueDateOffsetUnit || (exports.UnderlyingProvisionCashSettlValueDateOffsetUnit = {}));
var UnderlyingProvisionCashSettlValueDateOffsetDayType;
(function (UnderlyingProvisionCashSettlValueDateOffsetDayType) {
    UnderlyingProvisionCashSettlValueDateOffsetDayType[UnderlyingProvisionCashSettlValueDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingProvisionCashSettlValueDateOffsetDayType[UnderlyingProvisionCashSettlValueDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingProvisionCashSettlValueDateOffsetDayType[UnderlyingProvisionCashSettlValueDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingProvisionCashSettlValueDateOffsetDayType[UnderlyingProvisionCashSettlValueDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingProvisionCashSettlValueDateOffsetDayType[UnderlyingProvisionCashSettlValueDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingProvisionCashSettlValueDateOffsetDayType[UnderlyingProvisionCashSettlValueDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingProvisionCashSettlValueDateOffsetDayType = exports.UnderlyingProvisionCashSettlValueDateOffsetDayType || (exports.UnderlyingProvisionCashSettlValueDateOffsetDayType = {}));
var UnderlyingProvisionOptionExerciseFixedDateType;
(function (UnderlyingProvisionOptionExerciseFixedDateType) {
    UnderlyingProvisionOptionExerciseFixedDateType[UnderlyingProvisionOptionExerciseFixedDateType["Unadjusted"] = 0] = "Unadjusted";
    UnderlyingProvisionOptionExerciseFixedDateType[UnderlyingProvisionOptionExerciseFixedDateType["Adjusted"] = 1] = "Adjusted";
})(UnderlyingProvisionOptionExerciseFixedDateType = exports.UnderlyingProvisionOptionExerciseFixedDateType || (exports.UnderlyingProvisionOptionExerciseFixedDateType = {}));
var UnderlyingProvisionOptionExerciseBusinessDayConvention;
(function (UnderlyingProvisionOptionExerciseBusinessDayConvention) {
    UnderlyingProvisionOptionExerciseBusinessDayConvention[UnderlyingProvisionOptionExerciseBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingProvisionOptionExerciseBusinessDayConvention[UnderlyingProvisionOptionExerciseBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingProvisionOptionExerciseBusinessDayConvention[UnderlyingProvisionOptionExerciseBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingProvisionOptionExerciseBusinessDayConvention[UnderlyingProvisionOptionExerciseBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingProvisionOptionExerciseBusinessDayConvention[UnderlyingProvisionOptionExerciseBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingProvisionOptionExerciseBusinessDayConvention[UnderlyingProvisionOptionExerciseBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingProvisionOptionExerciseBusinessDayConvention[UnderlyingProvisionOptionExerciseBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingProvisionOptionExerciseBusinessDayConvention[UnderlyingProvisionOptionExerciseBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingProvisionOptionExerciseBusinessDayConvention = exports.UnderlyingProvisionOptionExerciseBusinessDayConvention || (exports.UnderlyingProvisionOptionExerciseBusinessDayConvention = {}));
var UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit;
(function (UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit) {
    UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit["Day"] = "D";
    UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit["Week"] = "Wk";
    UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit["Month"] = "Mo";
    UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit["Year"] = "Yr";
})(UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit = exports.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit || (exports.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit = {}));
var UnderlyingProvisionOptionExerciseFrequencyUnit;
(function (UnderlyingProvisionOptionExerciseFrequencyUnit) {
    UnderlyingProvisionOptionExerciseFrequencyUnit["Day"] = "D";
    UnderlyingProvisionOptionExerciseFrequencyUnit["Week"] = "Wk";
    UnderlyingProvisionOptionExerciseFrequencyUnit["Month"] = "Mo";
    UnderlyingProvisionOptionExerciseFrequencyUnit["Year"] = "Yr";
    UnderlyingProvisionOptionExerciseFrequencyUnit["Hour"] = "H";
    UnderlyingProvisionOptionExerciseFrequencyUnit["Minute"] = "Min";
    UnderlyingProvisionOptionExerciseFrequencyUnit["Second"] = "S";
    UnderlyingProvisionOptionExerciseFrequencyUnit["Term"] = "T";
})(UnderlyingProvisionOptionExerciseFrequencyUnit = exports.UnderlyingProvisionOptionExerciseFrequencyUnit || (exports.UnderlyingProvisionOptionExerciseFrequencyUnit = {}));
var UnderlyingProvisionOptionExerciseStartDateOffsetUnit;
(function (UnderlyingProvisionOptionExerciseStartDateOffsetUnit) {
    UnderlyingProvisionOptionExerciseStartDateOffsetUnit["Day"] = "D";
    UnderlyingProvisionOptionExerciseStartDateOffsetUnit["Week"] = "Wk";
    UnderlyingProvisionOptionExerciseStartDateOffsetUnit["Month"] = "Mo";
    UnderlyingProvisionOptionExerciseStartDateOffsetUnit["Year"] = "Yr";
})(UnderlyingProvisionOptionExerciseStartDateOffsetUnit = exports.UnderlyingProvisionOptionExerciseStartDateOffsetUnit || (exports.UnderlyingProvisionOptionExerciseStartDateOffsetUnit = {}));
var UnderlyingProvisionOptionExerciseStartDateOffsetDayType;
(function (UnderlyingProvisionOptionExerciseStartDateOffsetDayType) {
    UnderlyingProvisionOptionExerciseStartDateOffsetDayType[UnderlyingProvisionOptionExerciseStartDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingProvisionOptionExerciseStartDateOffsetDayType[UnderlyingProvisionOptionExerciseStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingProvisionOptionExerciseStartDateOffsetDayType[UnderlyingProvisionOptionExerciseStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingProvisionOptionExerciseStartDateOffsetDayType[UnderlyingProvisionOptionExerciseStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingProvisionOptionExerciseStartDateOffsetDayType[UnderlyingProvisionOptionExerciseStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingProvisionOptionExerciseStartDateOffsetDayType[UnderlyingProvisionOptionExerciseStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingProvisionOptionExerciseStartDateOffsetDayType = exports.UnderlyingProvisionOptionExerciseStartDateOffsetDayType || (exports.UnderlyingProvisionOptionExerciseStartDateOffsetDayType = {}));
var UnderlyingProvisionOptionExpirationDateBusinessDayConvention;
(function (UnderlyingProvisionOptionExpirationDateBusinessDayConvention) {
    UnderlyingProvisionOptionExpirationDateBusinessDayConvention[UnderlyingProvisionOptionExpirationDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingProvisionOptionExpirationDateBusinessDayConvention[UnderlyingProvisionOptionExpirationDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingProvisionOptionExpirationDateBusinessDayConvention[UnderlyingProvisionOptionExpirationDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingProvisionOptionExpirationDateBusinessDayConvention[UnderlyingProvisionOptionExpirationDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingProvisionOptionExpirationDateBusinessDayConvention[UnderlyingProvisionOptionExpirationDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingProvisionOptionExpirationDateBusinessDayConvention[UnderlyingProvisionOptionExpirationDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingProvisionOptionExpirationDateBusinessDayConvention[UnderlyingProvisionOptionExpirationDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingProvisionOptionExpirationDateBusinessDayConvention[UnderlyingProvisionOptionExpirationDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingProvisionOptionExpirationDateBusinessDayConvention = exports.UnderlyingProvisionOptionExpirationDateBusinessDayConvention || (exports.UnderlyingProvisionOptionExpirationDateBusinessDayConvention = {}));
var UnderlyingProvisionOptionExpirationDateOffsetUnit;
(function (UnderlyingProvisionOptionExpirationDateOffsetUnit) {
    UnderlyingProvisionOptionExpirationDateOffsetUnit["Day"] = "D";
    UnderlyingProvisionOptionExpirationDateOffsetUnit["Week"] = "Wk";
    UnderlyingProvisionOptionExpirationDateOffsetUnit["Month"] = "Mo";
    UnderlyingProvisionOptionExpirationDateOffsetUnit["Year"] = "Yr";
})(UnderlyingProvisionOptionExpirationDateOffsetUnit = exports.UnderlyingProvisionOptionExpirationDateOffsetUnit || (exports.UnderlyingProvisionOptionExpirationDateOffsetUnit = {}));
var UnderlyingProvisionOptionExpirationDateOffsetDayType;
(function (UnderlyingProvisionOptionExpirationDateOffsetDayType) {
    UnderlyingProvisionOptionExpirationDateOffsetDayType[UnderlyingProvisionOptionExpirationDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingProvisionOptionExpirationDateOffsetDayType[UnderlyingProvisionOptionExpirationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingProvisionOptionExpirationDateOffsetDayType[UnderlyingProvisionOptionExpirationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingProvisionOptionExpirationDateOffsetDayType[UnderlyingProvisionOptionExpirationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingProvisionOptionExpirationDateOffsetDayType[UnderlyingProvisionOptionExpirationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingProvisionOptionExpirationDateOffsetDayType[UnderlyingProvisionOptionExpirationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingProvisionOptionExpirationDateOffsetDayType = exports.UnderlyingProvisionOptionExpirationDateOffsetDayType || (exports.UnderlyingProvisionOptionExpirationDateOffsetDayType = {}));
var UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention;
(function (UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention) {
    UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention[UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention[UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention[UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention[UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention[UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention[UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention[UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention[UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention = exports.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention || (exports.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention = {}));
var UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit;
(function (UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit) {
    UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit["Day"] = "D";
    UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit["Week"] = "Wk";
    UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit["Month"] = "Mo";
    UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit["Year"] = "Yr";
})(UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit = exports.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit || (exports.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit = {}));
var UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType;
(function (UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType) {
    UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType[UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType[UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType[UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType[UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType[UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType[UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType = exports.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType || (exports.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType = {}));
var UnderlyingProvisionType;
(function (UnderlyingProvisionType) {
    UnderlyingProvisionType[UnderlyingProvisionType["MandatoryEarlyTermination"] = 0] = "MandatoryEarlyTermination";
    UnderlyingProvisionType[UnderlyingProvisionType["OptionalEarlyTermination"] = 1] = "OptionalEarlyTermination";
    UnderlyingProvisionType[UnderlyingProvisionType["Cancelable"] = 2] = "Cancelable";
    UnderlyingProvisionType[UnderlyingProvisionType["Extendible"] = 3] = "Extendible";
    UnderlyingProvisionType[UnderlyingProvisionType["MutualEarlyTermination"] = 4] = "MutualEarlyTermination";
})(UnderlyingProvisionType = exports.UnderlyingProvisionType || (exports.UnderlyingProvisionType = {}));
var UnderlyingProvisionDateBusinessDayConvention;
(function (UnderlyingProvisionDateBusinessDayConvention) {
    UnderlyingProvisionDateBusinessDayConvention[UnderlyingProvisionDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingProvisionDateBusinessDayConvention[UnderlyingProvisionDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingProvisionDateBusinessDayConvention[UnderlyingProvisionDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingProvisionDateBusinessDayConvention[UnderlyingProvisionDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingProvisionDateBusinessDayConvention[UnderlyingProvisionDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingProvisionDateBusinessDayConvention[UnderlyingProvisionDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingProvisionDateBusinessDayConvention[UnderlyingProvisionDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingProvisionDateBusinessDayConvention[UnderlyingProvisionDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingProvisionDateBusinessDayConvention = exports.UnderlyingProvisionDateBusinessDayConvention || (exports.UnderlyingProvisionDateBusinessDayConvention = {}));
var UnderlyingProvisionDateTenorUnit;
(function (UnderlyingProvisionDateTenorUnit) {
    UnderlyingProvisionDateTenorUnit["Day"] = "D";
    UnderlyingProvisionDateTenorUnit["Week"] = "Wk";
    UnderlyingProvisionDateTenorUnit["Month"] = "Mo";
    UnderlyingProvisionDateTenorUnit["Year"] = "Yr";
})(UnderlyingProvisionDateTenorUnit = exports.UnderlyingProvisionDateTenorUnit || (exports.UnderlyingProvisionDateTenorUnit = {}));
var UnderlyingProvisionCalculationAgent;
(function (UnderlyingProvisionCalculationAgent) {
    UnderlyingProvisionCalculationAgent[UnderlyingProvisionCalculationAgent["ExercisingParty"] = 0] = "ExercisingParty";
    UnderlyingProvisionCalculationAgent[UnderlyingProvisionCalculationAgent["NonExercisingParty"] = 1] = "NonExercisingParty";
    UnderlyingProvisionCalculationAgent[UnderlyingProvisionCalculationAgent["AsSpecifiedInTheMasterAgreement"] = 2] = "AsSpecifiedInTheMasterAgreement";
    UnderlyingProvisionCalculationAgent[UnderlyingProvisionCalculationAgent["AsSpecifiedInTheStandardTermsSupplement"] = 3] = "AsSpecifiedInTheStandardTermsSupplement";
})(UnderlyingProvisionCalculationAgent = exports.UnderlyingProvisionCalculationAgent || (exports.UnderlyingProvisionCalculationAgent = {}));
var UnderlyingProvisionOptionSinglePartyBuyerSide;
(function (UnderlyingProvisionOptionSinglePartyBuyerSide) {
    UnderlyingProvisionOptionSinglePartyBuyerSide[UnderlyingProvisionOptionSinglePartyBuyerSide["Buy"] = 1] = "Buy";
    UnderlyingProvisionOptionSinglePartyBuyerSide[UnderlyingProvisionOptionSinglePartyBuyerSide["Sell"] = 2] = "Sell";
})(UnderlyingProvisionOptionSinglePartyBuyerSide = exports.UnderlyingProvisionOptionSinglePartyBuyerSide || (exports.UnderlyingProvisionOptionSinglePartyBuyerSide = {}));
var UnderlyingProvisionOptionSinglePartySellerSide;
(function (UnderlyingProvisionOptionSinglePartySellerSide) {
    UnderlyingProvisionOptionSinglePartySellerSide[UnderlyingProvisionOptionSinglePartySellerSide["Buy"] = 1] = "Buy";
    UnderlyingProvisionOptionSinglePartySellerSide[UnderlyingProvisionOptionSinglePartySellerSide["Sell"] = 2] = "Sell";
})(UnderlyingProvisionOptionSinglePartySellerSide = exports.UnderlyingProvisionOptionSinglePartySellerSide || (exports.UnderlyingProvisionOptionSinglePartySellerSide = {}));
var UnderlyingProvisionOptionExerciseStyle;
(function (UnderlyingProvisionOptionExerciseStyle) {
    UnderlyingProvisionOptionExerciseStyle[UnderlyingProvisionOptionExerciseStyle["European"] = 0] = "European";
    UnderlyingProvisionOptionExerciseStyle[UnderlyingProvisionOptionExerciseStyle["American"] = 1] = "American";
    UnderlyingProvisionOptionExerciseStyle[UnderlyingProvisionOptionExerciseStyle["Bermuda"] = 2] = "Bermuda";
    UnderlyingProvisionOptionExerciseStyle[UnderlyingProvisionOptionExerciseStyle["Other"] = 99] = "Other";
})(UnderlyingProvisionOptionExerciseStyle = exports.UnderlyingProvisionOptionExerciseStyle || (exports.UnderlyingProvisionOptionExerciseStyle = {}));
var UnderlyingProvisionCashSettlMethod;
(function (UnderlyingProvisionCashSettlMethod) {
    UnderlyingProvisionCashSettlMethod[UnderlyingProvisionCashSettlMethod["CashPrice"] = 0] = "CashPrice";
    UnderlyingProvisionCashSettlMethod[UnderlyingProvisionCashSettlMethod["CashPriceAlternate"] = 1] = "CashPriceAlternate";
    UnderlyingProvisionCashSettlMethod[UnderlyingProvisionCashSettlMethod["ParYieldCurveAdjusted"] = 2] = "ParYieldCurveAdjusted";
    UnderlyingProvisionCashSettlMethod[UnderlyingProvisionCashSettlMethod["ZeroCouponYieldCurveAdjusted"] = 3] = "ZeroCouponYieldCurveAdjusted";
    UnderlyingProvisionCashSettlMethod[UnderlyingProvisionCashSettlMethod["ParYieldCurveUnadjusted"] = 4] = "ParYieldCurveUnadjusted";
    UnderlyingProvisionCashSettlMethod[UnderlyingProvisionCashSettlMethod["CrossCurrency"] = 5] = "CrossCurrency";
    UnderlyingProvisionCashSettlMethod[UnderlyingProvisionCashSettlMethod["CollateralizedPrice"] = 6] = "CollateralizedPrice";
})(UnderlyingProvisionCashSettlMethod = exports.UnderlyingProvisionCashSettlMethod || (exports.UnderlyingProvisionCashSettlMethod = {}));
var UnderlyingProvisionCashSettlQuoteType;
(function (UnderlyingProvisionCashSettlQuoteType) {
    UnderlyingProvisionCashSettlQuoteType[UnderlyingProvisionCashSettlQuoteType["Bid"] = 0] = "Bid";
    UnderlyingProvisionCashSettlQuoteType[UnderlyingProvisionCashSettlQuoteType["Mid"] = 1] = "Mid";
    UnderlyingProvisionCashSettlQuoteType[UnderlyingProvisionCashSettlQuoteType["Offer"] = 2] = "Offer";
    UnderlyingProvisionCashSettlQuoteType[UnderlyingProvisionCashSettlQuoteType["ExercisingPartyPays"] = 3] = "ExercisingPartyPays";
})(UnderlyingProvisionCashSettlQuoteType = exports.UnderlyingProvisionCashSettlQuoteType || (exports.UnderlyingProvisionCashSettlQuoteType = {}));
var UnderlyingProvisionPartyIDSource;
(function (UnderlyingProvisionPartyIDSource) {
    UnderlyingProvisionPartyIDSource["KoreanInvestorId"] = "1";
    UnderlyingProvisionPartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfiiFid"] = "2";
    UnderlyingProvisionPartyIDSource["TaiwaneseTradingAcct"] = "3";
    UnderlyingProvisionPartyIDSource["MalaysianCentralDepositoryMcdNumber"] = "4";
    UnderlyingProvisionPartyIDSource["ChineseInvestorId"] = "5";
    UnderlyingProvisionPartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    UnderlyingProvisionPartyIDSource["UsSocialSecurityNumber"] = "7";
    UnderlyingProvisionPartyIDSource["UsEmployerOrTaxIdNumber"] = "8";
    UnderlyingProvisionPartyIDSource["AustralianBusinessNumber"] = "9";
    UnderlyingProvisionPartyIDSource["DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument"] = "I";
    UnderlyingProvisionPartyIDSource["BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B"] = "B";
    UnderlyingProvisionPartyIDSource["GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic"] = "C";
    UnderlyingProvisionPartyIDSource["ProprietaryCustomCode"] = "D";
    UnderlyingProvisionPartyIDSource["IsoCountryCode"] = "E";
    UnderlyingProvisionPartyIDSource["AustralianTaxFileNumber"] = "A";
    UnderlyingProvisionPartyIDSource["SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues"] = "F";
    UnderlyingProvisionPartyIDSource["MicIso10383MarketIdentificerCodeSeeAppendix6C"] = "G";
    UnderlyingProvisionPartyIDSource["TaxId"] = "J";
    UnderlyingProvisionPartyIDSource["CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber"] = "H";
    UnderlyingProvisionPartyIDSource["AustralianCompanyNumber"] = "K";
    UnderlyingProvisionPartyIDSource["AustralianRegisteredBodyNumber"] = "L";
    UnderlyingProvisionPartyIDSource["CftcReportingFirmIdentifier"] = "M";
    UnderlyingProvisionPartyIDSource["LegalEntityIdentifierIso17442Lei"] = "N";
    UnderlyingProvisionPartyIDSource["InterimIdentifier"] = "O";
    UnderlyingProvisionPartyIDSource["ShortCodeIdentifier"] = "P";
    UnderlyingProvisionPartyIDSource["NationalIdOfNaturalPerson"] = "Q";
})(UnderlyingProvisionPartyIDSource = exports.UnderlyingProvisionPartyIDSource || (exports.UnderlyingProvisionPartyIDSource = {}));
var UnderlyingProvisionPartyRole;
(function (UnderlyingProvisionPartyRole) {
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ExecutingFirmFormerlyFix42ExecBroker"] = 1] = "ExecutingFirmFormerlyFix42ExecBroker";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["BrokerOfCreditFormerlyFix42BrokerOfCredit"] = 2] = "BrokerOfCreditFormerlyFix42BrokerOfCredit";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ClientIdFormerlyFix42ClientId"] = 3] = "ClientIdFormerlyFix42ClientId";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ClearingFirmFormerlyFix42ClearingFirm"] = 4] = "ClearingFirmFormerlyFix42ClearingFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["InvestorId"] = 5] = "InvestorId";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["LocateLendingFirmForShortSales"] = 8] = "LocateLendingFirmForShortSales";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["FundManagerClientIdForCiv"] = 9] = "FundManagerClientIdForCiv";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["SettlementLocationFormerlyFix42SettlLocation"] = 10] = "SettlementLocationFormerlyFix42SettlLocation";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder"] = 11] = "OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes"] = 12] = "ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["OrderOriginationFirmEGBuySideFirm"] = 13] = "OrderOriginationFirmEGBuySideFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["GiveupClearingFirmFirmToWhichTradeIsGivenUp"] = 14] = "GiveupClearingFirmFirmToWhichTradeIsGivenUp";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ContraFirm"] = 17] = "ContraFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ClearingOrganization"] = 21] = "ClearingOrganization";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["Exchange"] = 22] = "Exchange";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["CustomerAccount"] = 24] = "CustomerAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["CorrespondentClearingOrganization"] = 25] = "CorrespondentClearingOrganization";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["CorrespondentBroker"] = 26] = "CorrespondentBroker";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["BuyerSellerReceiverDeliverer"] = 27] = "BuyerSellerReceiverDeliverer";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["Custodian"] = 28] = "Custodian";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["Intermediary"] = 29] = "Intermediary";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["Agent"] = 30] = "Agent";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["SubCustodian"] = 31] = "SubCustodian";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["Beneficiary"] = 32] = "Beneficiary";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["InterestedParty"] = 33] = "InterestedParty";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["RegulatoryBody"] = 34] = "RegulatoryBody";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["LiquidityProvider"] = 35] = "LiquidityProvider";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["EnteringTrader"] = 36] = "EnteringTrader";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ContraTrader"] = 37] = "ContraTrader";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["PositionAccount"] = 38] = "PositionAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ContraInvestorId"] = 39] = "ContraInvestorId";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["TransferToFirm"] = 40] = "TransferToFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ContraPositionAccount"] = 41] = "ContraPositionAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ContraExchange"] = 42] = "ContraExchange";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["InternalCarryAccount"] = 43] = "InternalCarryAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["OrderEntryOperatorId"] = 44] = "OrderEntryOperatorId";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["SecondaryAccountNumber"] = 45] = "SecondaryAccountNumber";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ForeignFirm"] = 46] = "ForeignFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ThirdPartyAllocationFirm"] = 47] = "ThirdPartyAllocationFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ClaimingAccount"] = 48] = "ClaimingAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["AssetManager"] = 49] = "AssetManager";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["PledgorAccount"] = 50] = "PledgorAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["PledgeeAccount"] = 51] = "PledgeeAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["LargeTraderReportableAccount"] = 52] = "LargeTraderReportableAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["TraderMnemonic"] = 53] = "TraderMnemonic";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["SenderLocation"] = 54] = "SenderLocation";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["SessionId"] = 55] = "SessionId";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["AcceptableCounterparty"] = 56] = "AcceptableCounterparty";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["UnacceptableCounterparty"] = 57] = "UnacceptableCounterparty";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["EnteringUnit"] = 58] = "EnteringUnit";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ExecutingUnit"] = 59] = "ExecutingUnit";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["IntroducingBroker"] = 60] = "IntroducingBroker";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["QuoteOriginator"] = 61] = "QuoteOriginator";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ReportOriginator"] = 62] = "ReportOriginator";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["SystematicInternaliserSi"] = 63] = "SystematicInternaliserSi";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["MultilateralTradingFacilityMtf"] = 64] = "MultilateralTradingFacilityMtf";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["RegulatedMarketRm"] = 65] = "RegulatedMarketRm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["MarketMaker"] = 66] = "MarketMaker";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["InvestmentFirm"] = 67] = "InvestmentFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["HostCompetentAuthorityHostCa"] = 68] = "HostCompetentAuthorityHostCa";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["HomeCompetentAuthorityHomeCa"] = 69] = "HomeCompetentAuthorityHomeCa";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal"] = 70] = "CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["CompetentAuthorityOfTheTransactionExecutionVenueCatv"] = 71] = "CompetentAuthorityOfTheTransactionExecutionVenueCatv";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished"] = 72] = "ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ExecutionVenue"] = 73] = "ExecutionVenue";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["MarketDataEntryOriginator"] = 74] = "MarketDataEntryOriginator";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["LocationId"] = 75] = "LocationId";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["DeskId"] = 76] = "DeskId";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["MarketDataMarket"] = 77] = "MarketDataMarket";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["AllocationEntity"] = 78] = "AllocationEntity";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["PrimeBrokerProvidingGeneralTradeServices"] = 79] = "PrimeBrokerProvidingGeneralTradeServices";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["StepOutFirmPrimeBroker"] = 80] = "StepOutFirmPrimeBroker";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["BrokerCientId"] = 81] = "BrokerCientId";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["CentralRegistrationDepositoryCrd"] = 82] = "CentralRegistrationDepositoryCrd";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ClearingAccount"] = 83] = "ClearingAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["AcceptableSettlingCounterparty"] = 84] = "AcceptableSettlingCounterparty";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["UnacceptableSettlingCounterparty"] = 85] = "UnacceptableSettlingCounterparty";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ClsMemberBank"] = 86] = "ClsMemberBank";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["InConcertGroup"] = 87] = "InConcertGroup";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["InConcertControllingEntity"] = 88] = "InConcertControllingEntity";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["LargePositionsReportingAccount"] = 89] = "LargePositionsReportingAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["SettlementFirm"] = 90] = "SettlementFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["SettlementAccount"] = 91] = "SettlementAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ReportingMarketCenter"] = 92] = "ReportingMarketCenter";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["RelatedReportingMarketCenter"] = 93] = "RelatedReportingMarketCenter";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["AwayMarket"] = 94] = "AwayMarket";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["GiveUpTradingFirm"] = 95] = "GiveUpTradingFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["TakeUpTradingFirm"] = 96] = "TakeUpTradingFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["GiveUpClearingFirm"] = 97] = "GiveUpClearingFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["TakeUpClearingFirm"] = 98] = "TakeUpClearingFirm";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["OriginatingMarket"] = 99] = "OriginatingMarket";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["MarginAccount"] = 100] = "MarginAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["CollateralAssetAccount"] = 101] = "CollateralAssetAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["DataRepository"] = 102] = "DataRepository";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["CalculationAgent"] = 103] = "CalculationAgent";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["SenderOfExerciseNotice"] = 104] = "SenderOfExerciseNotice";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ReceiverOfExerciseNotice"] = 105] = "ReceiverOfExerciseNotice";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["RateReferenceBank"] = 106] = "RateReferenceBank";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["Correspondent"] = 107] = "Correspondent";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["BeneficiarysBankOrDepositoryInstitution"] = 109] = "BeneficiarysBankOrDepositoryInstitution";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["Borrower"] = 110] = "Borrower";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["PrimaryObligator"] = 111] = "PrimaryObligator";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["Guarantor"] = 112] = "Guarantor";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ExcludedReferenceEntity"] = 113] = "ExcludedReferenceEntity";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["DeterminingParty"] = 114] = "DeterminingParty";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["HedgingParty"] = 115] = "HedgingParty";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["ReportingEntity"] = 116] = "ReportingEntity";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["SalesPerson"] = 117] = "SalesPerson";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["Operator"] = 118] = "Operator";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["CentralSecuritiesDepositoryCsd"] = 119] = "CentralSecuritiesDepositoryCsd";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["InternationalCentralSecuritiesDepositoryIcsd"] = 120] = "InternationalCentralSecuritiesDepositoryIcsd";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["TradingSubAccount"] = 121] = "TradingSubAccount";
    UnderlyingProvisionPartyRole[UnderlyingProvisionPartyRole["InvestmentDecisionMaker"] = 122] = "InvestmentDecisionMaker";
})(UnderlyingProvisionPartyRole = exports.UnderlyingProvisionPartyRole || (exports.UnderlyingProvisionPartyRole = {}));
var UnderlyingProvisionPartySubIDType;
(function (UnderlyingProvisionPartySubIDType) {
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["Firm"] = 1] = "Firm";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["Person"] = 2] = "Person";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["System"] = 3] = "System";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["Application"] = 4] = "Application";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["FullLegalNameOfFirm"] = 5] = "FullLegalNameOfFirm";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["PostalAddress"] = 6] = "PostalAddress";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["PhoneNumber"] = 7] = "PhoneNumber";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["EmailAddress"] = 8] = "EmailAddress";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["ContactName"] = 9] = "ContactName";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["SecuritiesAccountNumberForSettlementInstructions"] = 10] = "SecuritiesAccountNumberForSettlementInstructions";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["RegistrationNumberForSettlementInstructionsAndConfirmations"] = 11] = "RegistrationNumberForSettlementInstructionsAndConfirmations";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["RegisteredAddressForConfirmationPurposes"] = 12] = "RegisteredAddressForConfirmationPurposes";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["RegulatoryStatusForConfirmationPurposes"] = 13] = "RegulatoryStatusForConfirmationPurposes";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["RegistrationNameForSettlementInstructions"] = 14] = "RegistrationNameForSettlementInstructions";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["CashAccountNumberForSettlementInstructions"] = 15] = "CashAccountNumberForSettlementInstructions";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["Bic"] = 16] = "Bic";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["CsdParticipantMemberCode"] = 17] = "CsdParticipantMemberCode";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["RegisteredAddress"] = 18] = "RegisteredAddress";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["FundAccountName"] = 19] = "FundAccountName";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["TelexNumber"] = 20] = "TelexNumber";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["FaxNumber"] = 21] = "FaxNumber";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["SecuritiesAccountName"] = 22] = "SecuritiesAccountName";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["CashAccountName"] = 23] = "CashAccountName";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["Department"] = 24] = "Department";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["LocationDesk"] = 25] = "LocationDesk";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["PositionAccountType"] = 26] = "PositionAccountType";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["SecurityLocateId"] = 27] = "SecurityLocateId";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["MarketMaker"] = 28] = "MarketMaker";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["EligibleCounterparty"] = 29] = "EligibleCounterparty";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["ProfessionalClient"] = 30] = "ProfessionalClient";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["Location"] = 31] = "Location";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["ExecutionVenue"] = 32] = "ExecutionVenue";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["CurrencyDeliveryIdentifier"] = 33] = "CurrencyDeliveryIdentifier";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["AddressCity"] = 34] = "AddressCity";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["AddressStateProvince"] = 35] = "AddressStateProvince";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["AddressPostalCode"] = 36] = "AddressPostalCode";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["AddressStreet"] = 37] = "AddressStreet";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["AddressCountryIsoCountryCode"] = 38] = "AddressCountryIsoCountryCode";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["IsoCountryCode"] = 39] = "IsoCountryCode";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["MarketSegment"] = 40] = "MarketSegment";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["CustomerAccountType"] = 41] = "CustomerAccountType";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["OmnibusAccount"] = 42] = "OmnibusAccount";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["FundsSegregationType"] = 43] = "FundsSegregationType";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["GuaranteeFund"] = 44] = "GuaranteeFund";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["SwapDealer"] = 45] = "SwapDealer";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["MajorParticipant"] = 46] = "MajorParticipant";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["FinancialEntity"] = 47] = "FinancialEntity";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["USPerson"] = 48] = "USPerson";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["ReportingEntityIndicator"] = 49] = "ReportingEntityIndicator";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["ElectedClearingRequirementException"] = 50] = "ElectedClearingRequirementException";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["BusinessCenter"] = 51] = "BusinessCenter";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["ReferenceText"] = 52] = "ReferenceText";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["ShortMarkingExemptAccount"] = 53] = "ShortMarkingExemptAccount";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["ParentFirmIdentifier"] = 54] = "ParentFirmIdentifier";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["ParentFirmName"] = 55] = "ParentFirmName";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["DealIdentifier"] = 56] = "DealIdentifier";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["SystemTradeIdentifier"] = 57] = "SystemTradeIdentifier";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["SystemTradeSubIdentifier"] = 58] = "SystemTradeSubIdentifier";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["FuturesCommissionMerchantFcmCode"] = 59] = "FuturesCommissionMerchantFcmCode";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["DeliveryTerminalCustomerAccountCode"] = 60] = "DeliveryTerminalCustomerAccountCode";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["VoluntaryReportingEntity"] = 61] = "VoluntaryReportingEntity";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["ReportingObligationJurisdiction"] = 62] = "ReportingObligationJurisdiction";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["VoluntaryReportingJurisdiction"] = 63] = "VoluntaryReportingJurisdiction";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["CompanyActivities"] = 64] = "CompanyActivities";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["EuropeanEconomicAreaDomiciled"] = 65] = "EuropeanEconomicAreaDomiciled";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty"] = 66] = "ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["ContractAboveClearingThresholdForThisCounterparty"] = 67] = "ContractAboveClearingThresholdForThisCounterparty";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["VoluntaryReportingParty"] = 68] = "VoluntaryReportingParty";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["EndUser"] = 69] = "EndUser";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["LocationOrJurisdiction"] = 70] = "LocationOrJurisdiction";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["DerivativesDealer"] = 71] = "DerivativesDealer";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["Domicile"] = 72] = "Domicile";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["ExemptFromRecognition"] = 73] = "ExemptFromRecognition";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["Payer"] = 74] = "Payer";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["Receiver"] = 75] = "Receiver";
    UnderlyingProvisionPartySubIDType[UnderlyingProvisionPartySubIDType["SystematicInternaliserSi"] = 76] = "SystematicInternaliserSi";
})(UnderlyingProvisionPartySubIDType = exports.UnderlyingProvisionPartySubIDType || (exports.UnderlyingProvisionPartySubIDType = {}));
var DeliveryStreamDeliveryPointSource;
(function (DeliveryStreamDeliveryPointSource) {
    DeliveryStreamDeliveryPointSource[DeliveryStreamDeliveryPointSource["Proprietary"] = 0] = "Proprietary";
    DeliveryStreamDeliveryPointSource[DeliveryStreamDeliveryPointSource["EnergyIdentificationCodeEic"] = 1] = "EnergyIdentificationCodeEic";
})(DeliveryStreamDeliveryPointSource = exports.DeliveryStreamDeliveryPointSource || (exports.DeliveryStreamDeliveryPointSource = {}));
var LegDeliveryStreamDeliveryPointSource;
(function (LegDeliveryStreamDeliveryPointSource) {
    LegDeliveryStreamDeliveryPointSource[LegDeliveryStreamDeliveryPointSource["Proprietary"] = 0] = "Proprietary";
    LegDeliveryStreamDeliveryPointSource[LegDeliveryStreamDeliveryPointSource["EnergyIdentificationCodeEic"] = 1] = "EnergyIdentificationCodeEic";
})(LegDeliveryStreamDeliveryPointSource = exports.LegDeliveryStreamDeliveryPointSource || (exports.LegDeliveryStreamDeliveryPointSource = {}));
var UnderlyingDeliveryStreamDeliveryPointSource;
(function (UnderlyingDeliveryStreamDeliveryPointSource) {
    UnderlyingDeliveryStreamDeliveryPointSource[UnderlyingDeliveryStreamDeliveryPointSource["Proprietary"] = 0] = "Proprietary";
    UnderlyingDeliveryStreamDeliveryPointSource[UnderlyingDeliveryStreamDeliveryPointSource["EnergyIdentificationCodeEic"] = 1] = "EnergyIdentificationCodeEic";
})(UnderlyingDeliveryStreamDeliveryPointSource = exports.UnderlyingDeliveryStreamDeliveryPointSource || (exports.UnderlyingDeliveryStreamDeliveryPointSource = {}));
var CashSettlDateBusinessDayConvention;
(function (CashSettlDateBusinessDayConvention) {
    CashSettlDateBusinessDayConvention[CashSettlDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    CashSettlDateBusinessDayConvention[CashSettlDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    CashSettlDateBusinessDayConvention[CashSettlDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    CashSettlDateBusinessDayConvention[CashSettlDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    CashSettlDateBusinessDayConvention[CashSettlDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    CashSettlDateBusinessDayConvention[CashSettlDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    CashSettlDateBusinessDayConvention[CashSettlDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    CashSettlDateBusinessDayConvention[CashSettlDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(CashSettlDateBusinessDayConvention = exports.CashSettlDateBusinessDayConvention || (exports.CashSettlDateBusinessDayConvention = {}));
var CashSettlDateOffsetUnit;
(function (CashSettlDateOffsetUnit) {
    CashSettlDateOffsetUnit["Day"] = "D";
    CashSettlDateOffsetUnit["Week"] = "Wk";
    CashSettlDateOffsetUnit["Month"] = "Mo";
    CashSettlDateOffsetUnit["Year"] = "Yr";
})(CashSettlDateOffsetUnit = exports.CashSettlDateOffsetUnit || (exports.CashSettlDateOffsetUnit = {}));
var CashSettlDateOffsetDayType;
(function (CashSettlDateOffsetDayType) {
    CashSettlDateOffsetDayType[CashSettlDateOffsetDayType["Business"] = 0] = "Business";
    CashSettlDateOffsetDayType[CashSettlDateOffsetDayType["Calendar"] = 1] = "Calendar";
    CashSettlDateOffsetDayType[CashSettlDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    CashSettlDateOffsetDayType[CashSettlDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    CashSettlDateOffsetDayType[CashSettlDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    CashSettlDateOffsetDayType[CashSettlDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(CashSettlDateOffsetDayType = exports.CashSettlDateOffsetDayType || (exports.CashSettlDateOffsetDayType = {}));
var CashSettlPriceDefault;
(function (CashSettlPriceDefault) {
    CashSettlPriceDefault[CashSettlPriceDefault["Close"] = 0] = "Close";
    CashSettlPriceDefault[CashSettlPriceDefault["Hedge"] = 1] = "Hedge";
})(CashSettlPriceDefault = exports.CashSettlPriceDefault || (exports.CashSettlPriceDefault = {}));
var DividendFloatingRateIndexCurveUnit;
(function (DividendFloatingRateIndexCurveUnit) {
    DividendFloatingRateIndexCurveUnit["Day"] = "D";
    DividendFloatingRateIndexCurveUnit["Week"] = "Wk";
    DividendFloatingRateIndexCurveUnit["Month"] = "Mo";
    DividendFloatingRateIndexCurveUnit["Year"] = "Yr";
})(DividendFloatingRateIndexCurveUnit = exports.DividendFloatingRateIndexCurveUnit || (exports.DividendFloatingRateIndexCurveUnit = {}));
var DividendFloatingRateSpreadPositionType;
(function (DividendFloatingRateSpreadPositionType) {
    DividendFloatingRateSpreadPositionType[DividendFloatingRateSpreadPositionType["Short"] = 0] = "Short";
    DividendFloatingRateSpreadPositionType[DividendFloatingRateSpreadPositionType["Long"] = 1] = "Long";
})(DividendFloatingRateSpreadPositionType = exports.DividendFloatingRateSpreadPositionType || (exports.DividendFloatingRateSpreadPositionType = {}));
var DividendFloatingRateTreatment;
(function (DividendFloatingRateTreatment) {
    DividendFloatingRateTreatment[DividendFloatingRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    DividendFloatingRateTreatment[DividendFloatingRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(DividendFloatingRateTreatment = exports.DividendFloatingRateTreatment || (exports.DividendFloatingRateTreatment = {}));
var DividendCapRateBuySide;
(function (DividendCapRateBuySide) {
    DividendCapRateBuySide[DividendCapRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    DividendCapRateBuySide[DividendCapRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(DividendCapRateBuySide = exports.DividendCapRateBuySide || (exports.DividendCapRateBuySide = {}));
var DividendCapRateSellSide;
(function (DividendCapRateSellSide) {
    DividendCapRateSellSide[DividendCapRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    DividendCapRateSellSide[DividendCapRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(DividendCapRateSellSide = exports.DividendCapRateSellSide || (exports.DividendCapRateSellSide = {}));
var DividendFloorRateBuySide;
(function (DividendFloorRateBuySide) {
    DividendFloorRateBuySide[DividendFloorRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    DividendFloorRateBuySide[DividendFloorRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(DividendFloorRateBuySide = exports.DividendFloorRateBuySide || (exports.DividendFloorRateBuySide = {}));
var DividendFloorRateSellSide;
(function (DividendFloorRateSellSide) {
    DividendFloorRateSellSide[DividendFloorRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    DividendFloorRateSellSide[DividendFloorRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(DividendFloorRateSellSide = exports.DividendFloorRateSellSide || (exports.DividendFloorRateSellSide = {}));
var DividendFinalRateRoundingDirection;
(function (DividendFinalRateRoundingDirection) {
    DividendFinalRateRoundingDirection["RoundToNearest"] = "0";
    DividendFinalRateRoundingDirection["RoundDown"] = "1";
    DividendFinalRateRoundingDirection["RoundUp"] = "2";
})(DividendFinalRateRoundingDirection = exports.DividendFinalRateRoundingDirection || (exports.DividendFinalRateRoundingDirection = {}));
var DividendAveragingMethod;
(function (DividendAveragingMethod) {
    DividendAveragingMethod[DividendAveragingMethod["Unweighted"] = 0] = "Unweighted";
    DividendAveragingMethod[DividendAveragingMethod["Weighted"] = 1] = "Weighted";
})(DividendAveragingMethod = exports.DividendAveragingMethod || (exports.DividendAveragingMethod = {}));
var DividendNegativeRateTreatment;
(function (DividendNegativeRateTreatment) {
    DividendNegativeRateTreatment[DividendNegativeRateTreatment["ZeroInterestRateMethod"] = 0] = "ZeroInterestRateMethod";
    DividendNegativeRateTreatment[DividendNegativeRateTreatment["NegativeInterestRateMethod"] = 1] = "NegativeInterestRateMethod";
})(DividendNegativeRateTreatment = exports.DividendNegativeRateTreatment || (exports.DividendNegativeRateTreatment = {}));
var DividendAccrualPaymentDateOffsetUnit;
(function (DividendAccrualPaymentDateOffsetUnit) {
    DividendAccrualPaymentDateOffsetUnit["Day"] = "D";
    DividendAccrualPaymentDateOffsetUnit["Week"] = "Wk";
    DividendAccrualPaymentDateOffsetUnit["Month"] = "Mo";
    DividendAccrualPaymentDateOffsetUnit["Year"] = "Yr";
})(DividendAccrualPaymentDateOffsetUnit = exports.DividendAccrualPaymentDateOffsetUnit || (exports.DividendAccrualPaymentDateOffsetUnit = {}));
var DividendAccrualPaymentDateOffsetDayType;
(function (DividendAccrualPaymentDateOffsetDayType) {
    DividendAccrualPaymentDateOffsetDayType[DividendAccrualPaymentDateOffsetDayType["Business"] = 0] = "Business";
    DividendAccrualPaymentDateOffsetDayType[DividendAccrualPaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    DividendAccrualPaymentDateOffsetDayType[DividendAccrualPaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    DividendAccrualPaymentDateOffsetDayType[DividendAccrualPaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    DividendAccrualPaymentDateOffsetDayType[DividendAccrualPaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    DividendAccrualPaymentDateOffsetDayType[DividendAccrualPaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(DividendAccrualPaymentDateOffsetDayType = exports.DividendAccrualPaymentDateOffsetDayType || (exports.DividendAccrualPaymentDateOffsetDayType = {}));
var DividendAccrualPaymeentDateBusinessDayConvention;
(function (DividendAccrualPaymeentDateBusinessDayConvention) {
    DividendAccrualPaymeentDateBusinessDayConvention[DividendAccrualPaymeentDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    DividendAccrualPaymeentDateBusinessDayConvention[DividendAccrualPaymeentDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    DividendAccrualPaymeentDateBusinessDayConvention[DividendAccrualPaymeentDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    DividendAccrualPaymeentDateBusinessDayConvention[DividendAccrualPaymeentDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    DividendAccrualPaymeentDateBusinessDayConvention[DividendAccrualPaymeentDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    DividendAccrualPaymeentDateBusinessDayConvention[DividendAccrualPaymeentDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    DividendAccrualPaymeentDateBusinessDayConvention[DividendAccrualPaymeentDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    DividendAccrualPaymeentDateBusinessDayConvention[DividendAccrualPaymeentDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(DividendAccrualPaymeentDateBusinessDayConvention = exports.DividendAccrualPaymeentDateBusinessDayConvention || (exports.DividendAccrualPaymeentDateBusinessDayConvention = {}));
var DividendEntitlementEvent;
(function (DividendEntitlementEvent) {
    DividendEntitlementEvent[DividendEntitlementEvent["ExDate"] = 0] = "ExDate";
    DividendEntitlementEvent[DividendEntitlementEvent["RecordDate"] = 1] = "RecordDate";
})(DividendEntitlementEvent = exports.DividendEntitlementEvent || (exports.DividendEntitlementEvent = {}));
var DividendAmountType;
(function (DividendAmountType) {
    DividendAmountType[DividendAmountType["RecordAmount"] = 0] = "RecordAmount";
    DividendAmountType[DividendAmountType["ExAmount"] = 1] = "ExAmount";
    DividendAmountType[DividendAmountType["PaidAmount"] = 2] = "PaidAmount";
    DividendAmountType[DividendAmountType["AsSpecifiedInMasterConfirmation"] = 3] = "AsSpecifiedInMasterConfirmation";
})(DividendAmountType = exports.DividendAmountType || (exports.DividendAmountType = {}));
var ExtraordinaryDividendPartySide;
(function (ExtraordinaryDividendPartySide) {
    ExtraordinaryDividendPartySide[ExtraordinaryDividendPartySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    ExtraordinaryDividendPartySide[ExtraordinaryDividendPartySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(ExtraordinaryDividendPartySide = exports.ExtraordinaryDividendPartySide || (exports.ExtraordinaryDividendPartySide = {}));
var ExtraordinaryDividendAmountType;
(function (ExtraordinaryDividendAmountType) {
    ExtraordinaryDividendAmountType[ExtraordinaryDividendAmountType["RecordAmount"] = 0] = "RecordAmount";
    ExtraordinaryDividendAmountType[ExtraordinaryDividendAmountType["ExAmount"] = 1] = "ExAmount";
    ExtraordinaryDividendAmountType[ExtraordinaryDividendAmountType["PaidAmount"] = 2] = "PaidAmount";
    ExtraordinaryDividendAmountType[ExtraordinaryDividendAmountType["AsSpecifiedInMasterConfirmation"] = 3] = "AsSpecifiedInMasterConfirmation";
})(ExtraordinaryDividendAmountType = exports.ExtraordinaryDividendAmountType || (exports.ExtraordinaryDividendAmountType = {}));
var DividendCompoundingMethod;
(function (DividendCompoundingMethod) {
    DividendCompoundingMethod[DividendCompoundingMethod["None"] = 0] = "None";
    DividendCompoundingMethod[DividendCompoundingMethod["Flat"] = 1] = "Flat";
    DividendCompoundingMethod[DividendCompoundingMethod["Straight"] = 2] = "Straight";
    DividendCompoundingMethod[DividendCompoundingMethod["SpreadExclusive"] = 3] = "SpreadExclusive";
})(DividendCompoundingMethod = exports.DividendCompoundingMethod || (exports.DividendCompoundingMethod = {}));
var NonCashDividendTreatment;
(function (NonCashDividendTreatment) {
    NonCashDividendTreatment[NonCashDividendTreatment["PotentialAdjustmentEvent"] = 0] = "PotentialAdjustmentEvent";
    NonCashDividendTreatment[NonCashDividendTreatment["CashEquivalent"] = 1] = "CashEquivalent";
})(NonCashDividendTreatment = exports.NonCashDividendTreatment || (exports.NonCashDividendTreatment = {}));
var DividendComposition;
(function (DividendComposition) {
    DividendComposition[DividendComposition["EquityAmountReceiverElection"] = 0] = "EquityAmountReceiverElection";
    DividendComposition[DividendComposition["CalculationAgentElection"] = 1] = "CalculationAgentElection";
})(DividendComposition = exports.DividendComposition || (exports.DividendComposition = {}));
var DividendFXTriggerDateOffsetUnit;
(function (DividendFXTriggerDateOffsetUnit) {
    DividendFXTriggerDateOffsetUnit["Day"] = "D";
    DividendFXTriggerDateOffsetUnit["Week"] = "Wk";
    DividendFXTriggerDateOffsetUnit["Month"] = "Mo";
    DividendFXTriggerDateOffsetUnit["Year"] = "Yr";
})(DividendFXTriggerDateOffsetUnit = exports.DividendFXTriggerDateOffsetUnit || (exports.DividendFXTriggerDateOffsetUnit = {}));
var DividendFXTriggerDateOffsetDayType;
(function (DividendFXTriggerDateOffsetDayType) {
    DividendFXTriggerDateOffsetDayType[DividendFXTriggerDateOffsetDayType["Business"] = 0] = "Business";
    DividendFXTriggerDateOffsetDayType[DividendFXTriggerDateOffsetDayType["Calendar"] = 1] = "Calendar";
    DividendFXTriggerDateOffsetDayType[DividendFXTriggerDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    DividendFXTriggerDateOffsetDayType[DividendFXTriggerDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    DividendFXTriggerDateOffsetDayType[DividendFXTriggerDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    DividendFXTriggerDateOffsetDayType[DividendFXTriggerDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(DividendFXTriggerDateOffsetDayType = exports.DividendFXTriggerDateOffsetDayType || (exports.DividendFXTriggerDateOffsetDayType = {}));
var DividendFXTriggerDateBusinessDayConvention;
(function (DividendFXTriggerDateBusinessDayConvention) {
    DividendFXTriggerDateBusinessDayConvention[DividendFXTriggerDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    DividendFXTriggerDateBusinessDayConvention[DividendFXTriggerDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    DividendFXTriggerDateBusinessDayConvention[DividendFXTriggerDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    DividendFXTriggerDateBusinessDayConvention[DividendFXTriggerDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    DividendFXTriggerDateBusinessDayConvention[DividendFXTriggerDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    DividendFXTriggerDateBusinessDayConvention[DividendFXTriggerDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    DividendFXTriggerDateBusinessDayConvention[DividendFXTriggerDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    DividendFXTriggerDateBusinessDayConvention[DividendFXTriggerDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(DividendFXTriggerDateBusinessDayConvention = exports.DividendFXTriggerDateBusinessDayConvention || (exports.DividendFXTriggerDateBusinessDayConvention = {}));
var DividendPeriodBusinessDayConvention;
(function (DividendPeriodBusinessDayConvention) {
    DividendPeriodBusinessDayConvention[DividendPeriodBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    DividendPeriodBusinessDayConvention[DividendPeriodBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    DividendPeriodBusinessDayConvention[DividendPeriodBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    DividendPeriodBusinessDayConvention[DividendPeriodBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    DividendPeriodBusinessDayConvention[DividendPeriodBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    DividendPeriodBusinessDayConvention[DividendPeriodBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    DividendPeriodBusinessDayConvention[DividendPeriodBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    DividendPeriodBusinessDayConvention[DividendPeriodBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(DividendPeriodBusinessDayConvention = exports.DividendPeriodBusinessDayConvention || (exports.DividendPeriodBusinessDayConvention = {}));
var DividendPeriodValuationDateOffsetUnit;
(function (DividendPeriodValuationDateOffsetUnit) {
    DividendPeriodValuationDateOffsetUnit["Day"] = "D";
    DividendPeriodValuationDateOffsetUnit["Week"] = "Wk";
    DividendPeriodValuationDateOffsetUnit["Month"] = "Mo";
    DividendPeriodValuationDateOffsetUnit["Year"] = "Yr";
})(DividendPeriodValuationDateOffsetUnit = exports.DividendPeriodValuationDateOffsetUnit || (exports.DividendPeriodValuationDateOffsetUnit = {}));
var DividendPeriodValuationDateOffsetDayType;
(function (DividendPeriodValuationDateOffsetDayType) {
    DividendPeriodValuationDateOffsetDayType[DividendPeriodValuationDateOffsetDayType["Business"] = 0] = "Business";
    DividendPeriodValuationDateOffsetDayType[DividendPeriodValuationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    DividendPeriodValuationDateOffsetDayType[DividendPeriodValuationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    DividendPeriodValuationDateOffsetDayType[DividendPeriodValuationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    DividendPeriodValuationDateOffsetDayType[DividendPeriodValuationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    DividendPeriodValuationDateOffsetDayType[DividendPeriodValuationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(DividendPeriodValuationDateOffsetDayType = exports.DividendPeriodValuationDateOffsetDayType || (exports.DividendPeriodValuationDateOffsetDayType = {}));
var DividendPeriodPaymentDateOffsetUnit;
(function (DividendPeriodPaymentDateOffsetUnit) {
    DividendPeriodPaymentDateOffsetUnit["Day"] = "D";
    DividendPeriodPaymentDateOffsetUnit["Week"] = "Wk";
    DividendPeriodPaymentDateOffsetUnit["Month"] = "Mo";
    DividendPeriodPaymentDateOffsetUnit["Year"] = "Yr";
})(DividendPeriodPaymentDateOffsetUnit = exports.DividendPeriodPaymentDateOffsetUnit || (exports.DividendPeriodPaymentDateOffsetUnit = {}));
var DividendPeriodPaymentDateOffsetDayType;
(function (DividendPeriodPaymentDateOffsetDayType) {
    DividendPeriodPaymentDateOffsetDayType[DividendPeriodPaymentDateOffsetDayType["Business"] = 0] = "Business";
    DividendPeriodPaymentDateOffsetDayType[DividendPeriodPaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    DividendPeriodPaymentDateOffsetDayType[DividendPeriodPaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    DividendPeriodPaymentDateOffsetDayType[DividendPeriodPaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    DividendPeriodPaymentDateOffsetDayType[DividendPeriodPaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    DividendPeriodPaymentDateOffsetDayType[DividendPeriodPaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(DividendPeriodPaymentDateOffsetDayType = exports.DividendPeriodPaymentDateOffsetDayType || (exports.DividendPeriodPaymentDateOffsetDayType = {}));
var LegCashSettlDateBusinessDayConvention;
(function (LegCashSettlDateBusinessDayConvention) {
    LegCashSettlDateBusinessDayConvention[LegCashSettlDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegCashSettlDateBusinessDayConvention[LegCashSettlDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegCashSettlDateBusinessDayConvention[LegCashSettlDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegCashSettlDateBusinessDayConvention[LegCashSettlDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegCashSettlDateBusinessDayConvention[LegCashSettlDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegCashSettlDateBusinessDayConvention[LegCashSettlDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegCashSettlDateBusinessDayConvention[LegCashSettlDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegCashSettlDateBusinessDayConvention[LegCashSettlDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegCashSettlDateBusinessDayConvention = exports.LegCashSettlDateBusinessDayConvention || (exports.LegCashSettlDateBusinessDayConvention = {}));
var LegCashSettlDateOffsetUnit;
(function (LegCashSettlDateOffsetUnit) {
    LegCashSettlDateOffsetUnit["Day"] = "D";
    LegCashSettlDateOffsetUnit["Week"] = "Wk";
    LegCashSettlDateOffsetUnit["Month"] = "Mo";
    LegCashSettlDateOffsetUnit["Year"] = "Yr";
})(LegCashSettlDateOffsetUnit = exports.LegCashSettlDateOffsetUnit || (exports.LegCashSettlDateOffsetUnit = {}));
var LegCashSettlDateOffsetDayType;
(function (LegCashSettlDateOffsetDayType) {
    LegCashSettlDateOffsetDayType[LegCashSettlDateOffsetDayType["Business"] = 0] = "Business";
    LegCashSettlDateOffsetDayType[LegCashSettlDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegCashSettlDateOffsetDayType[LegCashSettlDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegCashSettlDateOffsetDayType[LegCashSettlDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegCashSettlDateOffsetDayType[LegCashSettlDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegCashSettlDateOffsetDayType[LegCashSettlDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegCashSettlDateOffsetDayType = exports.LegCashSettlDateOffsetDayType || (exports.LegCashSettlDateOffsetDayType = {}));
var LegCashSettlPriceDefault;
(function (LegCashSettlPriceDefault) {
    LegCashSettlPriceDefault[LegCashSettlPriceDefault["Close"] = 0] = "Close";
    LegCashSettlPriceDefault[LegCashSettlPriceDefault["Hedge"] = 1] = "Hedge";
})(LegCashSettlPriceDefault = exports.LegCashSettlPriceDefault || (exports.LegCashSettlPriceDefault = {}));
var LegDividendFloatingRateIndexCurveUnit;
(function (LegDividendFloatingRateIndexCurveUnit) {
    LegDividendFloatingRateIndexCurveUnit["Day"] = "D";
    LegDividendFloatingRateIndexCurveUnit["Week"] = "Wk";
    LegDividendFloatingRateIndexCurveUnit["Month"] = "Mo";
    LegDividendFloatingRateIndexCurveUnit["Year"] = "Yr";
})(LegDividendFloatingRateIndexCurveUnit = exports.LegDividendFloatingRateIndexCurveUnit || (exports.LegDividendFloatingRateIndexCurveUnit = {}));
var LegDividendFloatingRateSpreadPositionType;
(function (LegDividendFloatingRateSpreadPositionType) {
    LegDividendFloatingRateSpreadPositionType[LegDividendFloatingRateSpreadPositionType["Short"] = 0] = "Short";
    LegDividendFloatingRateSpreadPositionType[LegDividendFloatingRateSpreadPositionType["Long"] = 1] = "Long";
})(LegDividendFloatingRateSpreadPositionType = exports.LegDividendFloatingRateSpreadPositionType || (exports.LegDividendFloatingRateSpreadPositionType = {}));
var LegDividendFloatingRateTreatment;
(function (LegDividendFloatingRateTreatment) {
    LegDividendFloatingRateTreatment[LegDividendFloatingRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    LegDividendFloatingRateTreatment[LegDividendFloatingRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(LegDividendFloatingRateTreatment = exports.LegDividendFloatingRateTreatment || (exports.LegDividendFloatingRateTreatment = {}));
var LegDividendCapRateBuySide;
(function (LegDividendCapRateBuySide) {
    LegDividendCapRateBuySide[LegDividendCapRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegDividendCapRateBuySide[LegDividendCapRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegDividendCapRateBuySide = exports.LegDividendCapRateBuySide || (exports.LegDividendCapRateBuySide = {}));
var LegDividendCapRateSellSide;
(function (LegDividendCapRateSellSide) {
    LegDividendCapRateSellSide[LegDividendCapRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegDividendCapRateSellSide[LegDividendCapRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegDividendCapRateSellSide = exports.LegDividendCapRateSellSide || (exports.LegDividendCapRateSellSide = {}));
var LegDividendFloorRateBuySide;
(function (LegDividendFloorRateBuySide) {
    LegDividendFloorRateBuySide[LegDividendFloorRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegDividendFloorRateBuySide[LegDividendFloorRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegDividendFloorRateBuySide = exports.LegDividendFloorRateBuySide || (exports.LegDividendFloorRateBuySide = {}));
var LegDividendFloorRateSellSide;
(function (LegDividendFloorRateSellSide) {
    LegDividendFloorRateSellSide[LegDividendFloorRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegDividendFloorRateSellSide[LegDividendFloorRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegDividendFloorRateSellSide = exports.LegDividendFloorRateSellSide || (exports.LegDividendFloorRateSellSide = {}));
var LegDividendFinalRateRoundingDirection;
(function (LegDividendFinalRateRoundingDirection) {
    LegDividendFinalRateRoundingDirection["RoundToNearest"] = "0";
    LegDividendFinalRateRoundingDirection["RoundDown"] = "1";
    LegDividendFinalRateRoundingDirection["RoundUp"] = "2";
})(LegDividendFinalRateRoundingDirection = exports.LegDividendFinalRateRoundingDirection || (exports.LegDividendFinalRateRoundingDirection = {}));
var LegDividendAveragingMethod;
(function (LegDividendAveragingMethod) {
    LegDividendAveragingMethod[LegDividendAveragingMethod["Unweighted"] = 0] = "Unweighted";
    LegDividendAveragingMethod[LegDividendAveragingMethod["Weighted"] = 1] = "Weighted";
})(LegDividendAveragingMethod = exports.LegDividendAveragingMethod || (exports.LegDividendAveragingMethod = {}));
var LegDividendNegativeRateTreatment;
(function (LegDividendNegativeRateTreatment) {
    LegDividendNegativeRateTreatment[LegDividendNegativeRateTreatment["ZeroInterestRateMethod"] = 0] = "ZeroInterestRateMethod";
    LegDividendNegativeRateTreatment[LegDividendNegativeRateTreatment["NegativeInterestRateMethod"] = 1] = "NegativeInterestRateMethod";
})(LegDividendNegativeRateTreatment = exports.LegDividendNegativeRateTreatment || (exports.LegDividendNegativeRateTreatment = {}));
var LegDividendAccrualPaymentDateOffsetUnit;
(function (LegDividendAccrualPaymentDateOffsetUnit) {
    LegDividendAccrualPaymentDateOffsetUnit["Day"] = "D";
    LegDividendAccrualPaymentDateOffsetUnit["Week"] = "Wk";
    LegDividendAccrualPaymentDateOffsetUnit["Month"] = "Mo";
    LegDividendAccrualPaymentDateOffsetUnit["Year"] = "Yr";
})(LegDividendAccrualPaymentDateOffsetUnit = exports.LegDividendAccrualPaymentDateOffsetUnit || (exports.LegDividendAccrualPaymentDateOffsetUnit = {}));
var LegDividendAccrualPaymentDateOffsetDayType;
(function (LegDividendAccrualPaymentDateOffsetDayType) {
    LegDividendAccrualPaymentDateOffsetDayType[LegDividendAccrualPaymentDateOffsetDayType["Business"] = 0] = "Business";
    LegDividendAccrualPaymentDateOffsetDayType[LegDividendAccrualPaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegDividendAccrualPaymentDateOffsetDayType[LegDividendAccrualPaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegDividendAccrualPaymentDateOffsetDayType[LegDividendAccrualPaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegDividendAccrualPaymentDateOffsetDayType[LegDividendAccrualPaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegDividendAccrualPaymentDateOffsetDayType[LegDividendAccrualPaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegDividendAccrualPaymentDateOffsetDayType = exports.LegDividendAccrualPaymentDateOffsetDayType || (exports.LegDividendAccrualPaymentDateOffsetDayType = {}));
var LegDividendAccrualPaymentDateBusinessDayConvention;
(function (LegDividendAccrualPaymentDateBusinessDayConvention) {
    LegDividendAccrualPaymentDateBusinessDayConvention[LegDividendAccrualPaymentDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegDividendAccrualPaymentDateBusinessDayConvention[LegDividendAccrualPaymentDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegDividendAccrualPaymentDateBusinessDayConvention[LegDividendAccrualPaymentDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegDividendAccrualPaymentDateBusinessDayConvention[LegDividendAccrualPaymentDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegDividendAccrualPaymentDateBusinessDayConvention[LegDividendAccrualPaymentDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegDividendAccrualPaymentDateBusinessDayConvention[LegDividendAccrualPaymentDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegDividendAccrualPaymentDateBusinessDayConvention[LegDividendAccrualPaymentDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegDividendAccrualPaymentDateBusinessDayConvention[LegDividendAccrualPaymentDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegDividendAccrualPaymentDateBusinessDayConvention = exports.LegDividendAccrualPaymentDateBusinessDayConvention || (exports.LegDividendAccrualPaymentDateBusinessDayConvention = {}));
var LegDividendEntitlementEvent;
(function (LegDividendEntitlementEvent) {
    LegDividendEntitlementEvent[LegDividendEntitlementEvent["ExDate"] = 0] = "ExDate";
    LegDividendEntitlementEvent[LegDividendEntitlementEvent["RecordDate"] = 1] = "RecordDate";
})(LegDividendEntitlementEvent = exports.LegDividendEntitlementEvent || (exports.LegDividendEntitlementEvent = {}));
var LegDividendAmountType;
(function (LegDividendAmountType) {
    LegDividendAmountType[LegDividendAmountType["RecordAmount"] = 0] = "RecordAmount";
    LegDividendAmountType[LegDividendAmountType["ExAmount"] = 1] = "ExAmount";
    LegDividendAmountType[LegDividendAmountType["PaidAmount"] = 2] = "PaidAmount";
    LegDividendAmountType[LegDividendAmountType["AsSpecifiedInMasterConfirmation"] = 3] = "AsSpecifiedInMasterConfirmation";
})(LegDividendAmountType = exports.LegDividendAmountType || (exports.LegDividendAmountType = {}));
var LegExtraordinaryDividendPartySide;
(function (LegExtraordinaryDividendPartySide) {
    LegExtraordinaryDividendPartySide[LegExtraordinaryDividendPartySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegExtraordinaryDividendPartySide[LegExtraordinaryDividendPartySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegExtraordinaryDividendPartySide = exports.LegExtraordinaryDividendPartySide || (exports.LegExtraordinaryDividendPartySide = {}));
var LegExtraordinaryDividendAmountType;
(function (LegExtraordinaryDividendAmountType) {
    LegExtraordinaryDividendAmountType[LegExtraordinaryDividendAmountType["RecordAmount"] = 0] = "RecordAmount";
    LegExtraordinaryDividendAmountType[LegExtraordinaryDividendAmountType["ExAmount"] = 1] = "ExAmount";
    LegExtraordinaryDividendAmountType[LegExtraordinaryDividendAmountType["PaidAmount"] = 2] = "PaidAmount";
    LegExtraordinaryDividendAmountType[LegExtraordinaryDividendAmountType["AsSpecifiedInMasterConfirmation"] = 3] = "AsSpecifiedInMasterConfirmation";
})(LegExtraordinaryDividendAmountType = exports.LegExtraordinaryDividendAmountType || (exports.LegExtraordinaryDividendAmountType = {}));
var LegDividendCompoundingMethod;
(function (LegDividendCompoundingMethod) {
    LegDividendCompoundingMethod[LegDividendCompoundingMethod["None"] = 0] = "None";
    LegDividendCompoundingMethod[LegDividendCompoundingMethod["Flat"] = 1] = "Flat";
    LegDividendCompoundingMethod[LegDividendCompoundingMethod["Straight"] = 2] = "Straight";
    LegDividendCompoundingMethod[LegDividendCompoundingMethod["SpreadExclusive"] = 3] = "SpreadExclusive";
})(LegDividendCompoundingMethod = exports.LegDividendCompoundingMethod || (exports.LegDividendCompoundingMethod = {}));
var LegNonCashDividendTreatment;
(function (LegNonCashDividendTreatment) {
    LegNonCashDividendTreatment[LegNonCashDividendTreatment["PotentialAdjustmentEvent"] = 0] = "PotentialAdjustmentEvent";
    LegNonCashDividendTreatment[LegNonCashDividendTreatment["CashEquivalent"] = 1] = "CashEquivalent";
})(LegNonCashDividendTreatment = exports.LegNonCashDividendTreatment || (exports.LegNonCashDividendTreatment = {}));
var LegDividendComposition;
(function (LegDividendComposition) {
    LegDividendComposition[LegDividendComposition["EquityAmountReceiverElection"] = 0] = "EquityAmountReceiverElection";
    LegDividendComposition[LegDividendComposition["CalculationAgentElection"] = 1] = "CalculationAgentElection";
})(LegDividendComposition = exports.LegDividendComposition || (exports.LegDividendComposition = {}));
var LegDividendFXTriggerDateOffsetUnit;
(function (LegDividendFXTriggerDateOffsetUnit) {
    LegDividendFXTriggerDateOffsetUnit["Day"] = "D";
    LegDividendFXTriggerDateOffsetUnit["Week"] = "Wk";
    LegDividendFXTriggerDateOffsetUnit["Month"] = "Mo";
    LegDividendFXTriggerDateOffsetUnit["Year"] = "Yr";
})(LegDividendFXTriggerDateOffsetUnit = exports.LegDividendFXTriggerDateOffsetUnit || (exports.LegDividendFXTriggerDateOffsetUnit = {}));
var LegDividendFXTriggerDateOffsetDayType;
(function (LegDividendFXTriggerDateOffsetDayType) {
    LegDividendFXTriggerDateOffsetDayType[LegDividendFXTriggerDateOffsetDayType["Business"] = 0] = "Business";
    LegDividendFXTriggerDateOffsetDayType[LegDividendFXTriggerDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegDividendFXTriggerDateOffsetDayType[LegDividendFXTriggerDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegDividendFXTriggerDateOffsetDayType[LegDividendFXTriggerDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegDividendFXTriggerDateOffsetDayType[LegDividendFXTriggerDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegDividendFXTriggerDateOffsetDayType[LegDividendFXTriggerDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegDividendFXTriggerDateOffsetDayType = exports.LegDividendFXTriggerDateOffsetDayType || (exports.LegDividendFXTriggerDateOffsetDayType = {}));
var LegDividendFXTriggerDateBusinessDayConvention;
(function (LegDividendFXTriggerDateBusinessDayConvention) {
    LegDividendFXTriggerDateBusinessDayConvention[LegDividendFXTriggerDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegDividendFXTriggerDateBusinessDayConvention[LegDividendFXTriggerDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegDividendFXTriggerDateBusinessDayConvention[LegDividendFXTriggerDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegDividendFXTriggerDateBusinessDayConvention[LegDividendFXTriggerDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegDividendFXTriggerDateBusinessDayConvention[LegDividendFXTriggerDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegDividendFXTriggerDateBusinessDayConvention[LegDividendFXTriggerDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegDividendFXTriggerDateBusinessDayConvention[LegDividendFXTriggerDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegDividendFXTriggerDateBusinessDayConvention[LegDividendFXTriggerDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegDividendFXTriggerDateBusinessDayConvention = exports.LegDividendFXTriggerDateBusinessDayConvention || (exports.LegDividendFXTriggerDateBusinessDayConvention = {}));
var LegDividendPeriodBusinessDayConvention;
(function (LegDividendPeriodBusinessDayConvention) {
    LegDividendPeriodBusinessDayConvention[LegDividendPeriodBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegDividendPeriodBusinessDayConvention[LegDividendPeriodBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegDividendPeriodBusinessDayConvention[LegDividendPeriodBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegDividendPeriodBusinessDayConvention[LegDividendPeriodBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegDividendPeriodBusinessDayConvention[LegDividendPeriodBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegDividendPeriodBusinessDayConvention[LegDividendPeriodBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegDividendPeriodBusinessDayConvention[LegDividendPeriodBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegDividendPeriodBusinessDayConvention[LegDividendPeriodBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegDividendPeriodBusinessDayConvention = exports.LegDividendPeriodBusinessDayConvention || (exports.LegDividendPeriodBusinessDayConvention = {}));
var LegDividendPeriodValuationDateOffsetUnit;
(function (LegDividendPeriodValuationDateOffsetUnit) {
    LegDividendPeriodValuationDateOffsetUnit["Day"] = "D";
    LegDividendPeriodValuationDateOffsetUnit["Week"] = "Wk";
    LegDividendPeriodValuationDateOffsetUnit["Month"] = "Mo";
    LegDividendPeriodValuationDateOffsetUnit["Year"] = "Yr";
})(LegDividendPeriodValuationDateOffsetUnit = exports.LegDividendPeriodValuationDateOffsetUnit || (exports.LegDividendPeriodValuationDateOffsetUnit = {}));
var LegDividendPeriodValuationDateOffsetDayType;
(function (LegDividendPeriodValuationDateOffsetDayType) {
    LegDividendPeriodValuationDateOffsetDayType[LegDividendPeriodValuationDateOffsetDayType["Business"] = 0] = "Business";
    LegDividendPeriodValuationDateOffsetDayType[LegDividendPeriodValuationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegDividendPeriodValuationDateOffsetDayType[LegDividendPeriodValuationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegDividendPeriodValuationDateOffsetDayType[LegDividendPeriodValuationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegDividendPeriodValuationDateOffsetDayType[LegDividendPeriodValuationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegDividendPeriodValuationDateOffsetDayType[LegDividendPeriodValuationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegDividendPeriodValuationDateOffsetDayType = exports.LegDividendPeriodValuationDateOffsetDayType || (exports.LegDividendPeriodValuationDateOffsetDayType = {}));
var LegDividendPeriodPaymentDateOffsetUnit;
(function (LegDividendPeriodPaymentDateOffsetUnit) {
    LegDividendPeriodPaymentDateOffsetUnit["Day"] = "D";
    LegDividendPeriodPaymentDateOffsetUnit["Week"] = "Wk";
    LegDividendPeriodPaymentDateOffsetUnit["Month"] = "Mo";
    LegDividendPeriodPaymentDateOffsetUnit["Year"] = "Yr";
})(LegDividendPeriodPaymentDateOffsetUnit = exports.LegDividendPeriodPaymentDateOffsetUnit || (exports.LegDividendPeriodPaymentDateOffsetUnit = {}));
var LegDividendPeriodPaymentDateOffsetDayType;
(function (LegDividendPeriodPaymentDateOffsetDayType) {
    LegDividendPeriodPaymentDateOffsetDayType[LegDividendPeriodPaymentDateOffsetDayType["Business"] = 0] = "Business";
    LegDividendPeriodPaymentDateOffsetDayType[LegDividendPeriodPaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegDividendPeriodPaymentDateOffsetDayType[LegDividendPeriodPaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegDividendPeriodPaymentDateOffsetDayType[LegDividendPeriodPaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegDividendPeriodPaymentDateOffsetDayType[LegDividendPeriodPaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegDividendPeriodPaymentDateOffsetDayType[LegDividendPeriodPaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegDividendPeriodPaymentDateOffsetDayType = exports.LegDividendPeriodPaymentDateOffsetDayType || (exports.LegDividendPeriodPaymentDateOffsetDayType = {}));
var LegSettlMethodElectingPartySide;
(function (LegSettlMethodElectingPartySide) {
    LegSettlMethodElectingPartySide[LegSettlMethodElectingPartySide["Buy"] = 1] = "Buy";
    LegSettlMethodElectingPartySide[LegSettlMethodElectingPartySide["Sell"] = 2] = "Sell";
})(LegSettlMethodElectingPartySide = exports.LegSettlMethodElectingPartySide || (exports.LegSettlMethodElectingPartySide = {}));
var LegMakeWholeBenchmarkQuote;
(function (LegMakeWholeBenchmarkQuote) {
    LegMakeWholeBenchmarkQuote[LegMakeWholeBenchmarkQuote["Bid"] = 0] = "Bid";
    LegMakeWholeBenchmarkQuote[LegMakeWholeBenchmarkQuote["Mid"] = 1] = "Mid";
    LegMakeWholeBenchmarkQuote[LegMakeWholeBenchmarkQuote["Offer"] = 2] = "Offer";
})(LegMakeWholeBenchmarkQuote = exports.LegMakeWholeBenchmarkQuote || (exports.LegMakeWholeBenchmarkQuote = {}));
var LegMakeWholeInterpolationMethod;
(function (LegMakeWholeInterpolationMethod) {
    LegMakeWholeInterpolationMethod[LegMakeWholeInterpolationMethod["None"] = 0] = "None";
    LegMakeWholeInterpolationMethod[LegMakeWholeInterpolationMethod["LinearZeroYield"] = 1] = "LinearZeroYield";
})(LegMakeWholeInterpolationMethod = exports.LegMakeWholeInterpolationMethod || (exports.LegMakeWholeInterpolationMethod = {}));
var LegPaymentStreamInterpolationMethod;
(function (LegPaymentStreamInterpolationMethod) {
    LegPaymentStreamInterpolationMethod[LegPaymentStreamInterpolationMethod["None"] = 0] = "None";
    LegPaymentStreamInterpolationMethod[LegPaymentStreamInterpolationMethod["LinearZeroYield"] = 1] = "LinearZeroYield";
})(LegPaymentStreamInterpolationMethod = exports.LegPaymentStreamInterpolationMethod || (exports.LegPaymentStreamInterpolationMethod = {}));
var LegPaymentStreamInterpolationPeriod;
(function (LegPaymentStreamInterpolationPeriod) {
    LegPaymentStreamInterpolationPeriod[LegPaymentStreamInterpolationPeriod["Initial"] = 0] = "Initial";
    LegPaymentStreamInterpolationPeriod[LegPaymentStreamInterpolationPeriod["InitialAndFinal"] = 1] = "InitialAndFinal";
    LegPaymentStreamInterpolationPeriod[LegPaymentStreamInterpolationPeriod["Final"] = 2] = "Final";
    LegPaymentStreamInterpolationPeriod[LegPaymentStreamInterpolationPeriod["AnyPeriod"] = 3] = "AnyPeriod";
})(LegPaymentStreamInterpolationPeriod = exports.LegPaymentStreamInterpolationPeriod || (exports.LegPaymentStreamInterpolationPeriod = {}));
var LegPaymentStreamCompoundingDateType;
(function (LegPaymentStreamCompoundingDateType) {
    LegPaymentStreamCompoundingDateType[LegPaymentStreamCompoundingDateType["Unadjusted"] = 0] = "Unadjusted";
    LegPaymentStreamCompoundingDateType[LegPaymentStreamCompoundingDateType["Adjusted"] = 1] = "Adjusted";
})(LegPaymentStreamCompoundingDateType = exports.LegPaymentStreamCompoundingDateType || (exports.LegPaymentStreamCompoundingDateType = {}));
var LegPaymentStreamCompoundingDatesBusinessDayConvention;
(function (LegPaymentStreamCompoundingDatesBusinessDayConvention) {
    LegPaymentStreamCompoundingDatesBusinessDayConvention[LegPaymentStreamCompoundingDatesBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegPaymentStreamCompoundingDatesBusinessDayConvention[LegPaymentStreamCompoundingDatesBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegPaymentStreamCompoundingDatesBusinessDayConvention[LegPaymentStreamCompoundingDatesBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegPaymentStreamCompoundingDatesBusinessDayConvention[LegPaymentStreamCompoundingDatesBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegPaymentStreamCompoundingDatesBusinessDayConvention[LegPaymentStreamCompoundingDatesBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegPaymentStreamCompoundingDatesBusinessDayConvention[LegPaymentStreamCompoundingDatesBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegPaymentStreamCompoundingDatesBusinessDayConvention[LegPaymentStreamCompoundingDatesBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegPaymentStreamCompoundingDatesBusinessDayConvention[LegPaymentStreamCompoundingDatesBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegPaymentStreamCompoundingDatesBusinessDayConvention = exports.LegPaymentStreamCompoundingDatesBusinessDayConvention || (exports.LegPaymentStreamCompoundingDatesBusinessDayConvention = {}));
var LegPaymentStreamCompoundingDatesOffsetUnit;
(function (LegPaymentStreamCompoundingDatesOffsetUnit) {
    LegPaymentStreamCompoundingDatesOffsetUnit["Day"] = "D";
    LegPaymentStreamCompoundingDatesOffsetUnit["Week"] = "Wk";
    LegPaymentStreamCompoundingDatesOffsetUnit["Month"] = "Mo";
    LegPaymentStreamCompoundingDatesOffsetUnit["Year"] = "Yr";
})(LegPaymentStreamCompoundingDatesOffsetUnit = exports.LegPaymentStreamCompoundingDatesOffsetUnit || (exports.LegPaymentStreamCompoundingDatesOffsetUnit = {}));
var LegPaymentStreamCompoundingDatesOffsetDayType;
(function (LegPaymentStreamCompoundingDatesOffsetDayType) {
    LegPaymentStreamCompoundingDatesOffsetDayType[LegPaymentStreamCompoundingDatesOffsetDayType["Business"] = 0] = "Business";
    LegPaymentStreamCompoundingDatesOffsetDayType[LegPaymentStreamCompoundingDatesOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStreamCompoundingDatesOffsetDayType[LegPaymentStreamCompoundingDatesOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStreamCompoundingDatesOffsetDayType[LegPaymentStreamCompoundingDatesOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStreamCompoundingDatesOffsetDayType[LegPaymentStreamCompoundingDatesOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStreamCompoundingDatesOffsetDayType[LegPaymentStreamCompoundingDatesOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStreamCompoundingDatesOffsetDayType = exports.LegPaymentStreamCompoundingDatesOffsetDayType || (exports.LegPaymentStreamCompoundingDatesOffsetDayType = {}));
var LegPaymentStreamCompoundingFrequencyUnit;
(function (LegPaymentStreamCompoundingFrequencyUnit) {
    LegPaymentStreamCompoundingFrequencyUnit["Day"] = "D";
    LegPaymentStreamCompoundingFrequencyUnit["Week"] = "Wk";
    LegPaymentStreamCompoundingFrequencyUnit["Month"] = "Mo";
    LegPaymentStreamCompoundingFrequencyUnit["Year"] = "Yr";
    LegPaymentStreamCompoundingFrequencyUnit["Hour"] = "H";
    LegPaymentStreamCompoundingFrequencyUnit["Minute"] = "Min";
    LegPaymentStreamCompoundingFrequencyUnit["Second"] = "S";
    LegPaymentStreamCompoundingFrequencyUnit["Term"] = "T";
})(LegPaymentStreamCompoundingFrequencyUnit = exports.LegPaymentStreamCompoundingFrequencyUnit || (exports.LegPaymentStreamCompoundingFrequencyUnit = {}));
var LegPaymentStreamCompoundingRollConvention;
(function (LegPaymentStreamCompoundingRollConvention) {
    LegPaymentStreamCompoundingRollConvention["E1stDayOfTheMonth"] = "1";
    LegPaymentStreamCompoundingRollConvention["E2ndDayOfTheMonth"] = "2";
    LegPaymentStreamCompoundingRollConvention["E3rdDayOfTheMonth"] = "3";
    LegPaymentStreamCompoundingRollConvention["E4thDayOfTheMonth"] = "4";
    LegPaymentStreamCompoundingRollConvention["E5thDayOfTheMonth"] = "5";
    LegPaymentStreamCompoundingRollConvention["E6ThdDayOfTheMonth"] = "6";
    LegPaymentStreamCompoundingRollConvention["E7thDayOfTheMonth"] = "7";
    LegPaymentStreamCompoundingRollConvention["E8thDayOfTheMonth"] = "8";
    LegPaymentStreamCompoundingRollConvention["E9thDayOfTheMonth"] = "9";
    LegPaymentStreamCompoundingRollConvention["E10thDayOfTheMonth"] = "10";
    LegPaymentStreamCompoundingRollConvention["E11ThDayOfTheMonth"] = "11";
    LegPaymentStreamCompoundingRollConvention["E12ThDayOfTheMonth"] = "12";
    LegPaymentStreamCompoundingRollConvention["E13ThDayOfTheMonth"] = "13";
    LegPaymentStreamCompoundingRollConvention["E14thDayOfTheMonth"] = "14";
    LegPaymentStreamCompoundingRollConvention["E15thDayOfTheMonth"] = "15";
    LegPaymentStreamCompoundingRollConvention["E16thDayOfTheMonth"] = "16";
    LegPaymentStreamCompoundingRollConvention["E17thDayOfTheMonth"] = "17";
    LegPaymentStreamCompoundingRollConvention["E18thDayOfTheMonth"] = "18";
    LegPaymentStreamCompoundingRollConvention["E19thDayOfTheMonth"] = "19";
    LegPaymentStreamCompoundingRollConvention["E20thDayOfTheMonth"] = "20";
    LegPaymentStreamCompoundingRollConvention["E21stDayOfTheMonth"] = "21";
    LegPaymentStreamCompoundingRollConvention["E22ndDayOfTheMonth"] = "22";
    LegPaymentStreamCompoundingRollConvention["E23rdDayOfTheMonth"] = "23";
    LegPaymentStreamCompoundingRollConvention["E24thDayOfTheMonth"] = "24";
    LegPaymentStreamCompoundingRollConvention["E25thDayOfTheMonth"] = "25";
    LegPaymentStreamCompoundingRollConvention["E26thDayOfTheMonth"] = "26";
    LegPaymentStreamCompoundingRollConvention["E27thDayOfTheMonth"] = "27";
    LegPaymentStreamCompoundingRollConvention["E28thDayOfTheMonth"] = "28";
    LegPaymentStreamCompoundingRollConvention["E29thDayOfTheMonth"] = "29";
    LegPaymentStreamCompoundingRollConvention["E30thDayOfTheMonth"] = "30";
    LegPaymentStreamCompoundingRollConvention["TheEndOfTheMonth"] = "EOM";
    LegPaymentStreamCompoundingRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    LegPaymentStreamCompoundingRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    LegPaymentStreamCompoundingRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    LegPaymentStreamCompoundingRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    LegPaymentStreamCompoundingRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    LegPaymentStreamCompoundingRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    LegPaymentStreamCompoundingRollConvention["NoAdjustment"] = "NONE";
    LegPaymentStreamCompoundingRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    LegPaymentStreamCompoundingRollConvention["Monday"] = "MON";
    LegPaymentStreamCompoundingRollConvention["Tuesday"] = "TUE";
    LegPaymentStreamCompoundingRollConvention["Wednesday"] = "WED";
    LegPaymentStreamCompoundingRollConvention["Thursday"] = "THU";
    LegPaymentStreamCompoundingRollConvention["Friday"] = "FRI";
    LegPaymentStreamCompoundingRollConvention["Saturday"] = "SAT";
    LegPaymentStreamCompoundingRollConvention["Sunday"] = "SUN";
})(LegPaymentStreamCompoundingRollConvention = exports.LegPaymentStreamCompoundingRollConvention || (exports.LegPaymentStreamCompoundingRollConvention = {}));
var LegPaymentStreamCompoundingEndDateOffsetUnit;
(function (LegPaymentStreamCompoundingEndDateOffsetUnit) {
    LegPaymentStreamCompoundingEndDateOffsetUnit["Day"] = "D";
    LegPaymentStreamCompoundingEndDateOffsetUnit["Week"] = "Wk";
    LegPaymentStreamCompoundingEndDateOffsetUnit["Month"] = "Mo";
    LegPaymentStreamCompoundingEndDateOffsetUnit["Year"] = "Yr";
})(LegPaymentStreamCompoundingEndDateOffsetUnit = exports.LegPaymentStreamCompoundingEndDateOffsetUnit || (exports.LegPaymentStreamCompoundingEndDateOffsetUnit = {}));
var LegPaymentStreamCompoundingEndDateOffsetDayType;
(function (LegPaymentStreamCompoundingEndDateOffsetDayType) {
    LegPaymentStreamCompoundingEndDateOffsetDayType[LegPaymentStreamCompoundingEndDateOffsetDayType["Business"] = 0] = "Business";
    LegPaymentStreamCompoundingEndDateOffsetDayType[LegPaymentStreamCompoundingEndDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStreamCompoundingEndDateOffsetDayType[LegPaymentStreamCompoundingEndDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStreamCompoundingEndDateOffsetDayType[LegPaymentStreamCompoundingEndDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStreamCompoundingEndDateOffsetDayType[LegPaymentStreamCompoundingEndDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStreamCompoundingEndDateOffsetDayType[LegPaymentStreamCompoundingEndDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStreamCompoundingEndDateOffsetDayType = exports.LegPaymentStreamCompoundingEndDateOffsetDayType || (exports.LegPaymentStreamCompoundingEndDateOffsetDayType = {}));
var LegPaymentStreamCompoundingRateIndexCurveUnit;
(function (LegPaymentStreamCompoundingRateIndexCurveUnit) {
    LegPaymentStreamCompoundingRateIndexCurveUnit["Day"] = "D";
    LegPaymentStreamCompoundingRateIndexCurveUnit["Week"] = "Wk";
    LegPaymentStreamCompoundingRateIndexCurveUnit["Month"] = "Mo";
    LegPaymentStreamCompoundingRateIndexCurveUnit["Year"] = "Yr";
})(LegPaymentStreamCompoundingRateIndexCurveUnit = exports.LegPaymentStreamCompoundingRateIndexCurveUnit || (exports.LegPaymentStreamCompoundingRateIndexCurveUnit = {}));
var LegPaymentStreamCompoundingRateSpreadPositionType;
(function (LegPaymentStreamCompoundingRateSpreadPositionType) {
    LegPaymentStreamCompoundingRateSpreadPositionType[LegPaymentStreamCompoundingRateSpreadPositionType["Short"] = 0] = "Short";
    LegPaymentStreamCompoundingRateSpreadPositionType[LegPaymentStreamCompoundingRateSpreadPositionType["Long"] = 1] = "Long";
})(LegPaymentStreamCompoundingRateSpreadPositionType = exports.LegPaymentStreamCompoundingRateSpreadPositionType || (exports.LegPaymentStreamCompoundingRateSpreadPositionType = {}));
var LegPaymentStreamCompoundingRateTreatment;
(function (LegPaymentStreamCompoundingRateTreatment) {
    LegPaymentStreamCompoundingRateTreatment[LegPaymentStreamCompoundingRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    LegPaymentStreamCompoundingRateTreatment[LegPaymentStreamCompoundingRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(LegPaymentStreamCompoundingRateTreatment = exports.LegPaymentStreamCompoundingRateTreatment || (exports.LegPaymentStreamCompoundingRateTreatment = {}));
var LegPaymentStreamCompoundingCapRateBuySide;
(function (LegPaymentStreamCompoundingCapRateBuySide) {
    LegPaymentStreamCompoundingCapRateBuySide[LegPaymentStreamCompoundingCapRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegPaymentStreamCompoundingCapRateBuySide[LegPaymentStreamCompoundingCapRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegPaymentStreamCompoundingCapRateBuySide = exports.LegPaymentStreamCompoundingCapRateBuySide || (exports.LegPaymentStreamCompoundingCapRateBuySide = {}));
var LegPaymentStreamCompoundingCapRateSellSide;
(function (LegPaymentStreamCompoundingCapRateSellSide) {
    LegPaymentStreamCompoundingCapRateSellSide[LegPaymentStreamCompoundingCapRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegPaymentStreamCompoundingCapRateSellSide[LegPaymentStreamCompoundingCapRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegPaymentStreamCompoundingCapRateSellSide = exports.LegPaymentStreamCompoundingCapRateSellSide || (exports.LegPaymentStreamCompoundingCapRateSellSide = {}));
var LegPaymentStreamCompoundingFloorRateBuySide;
(function (LegPaymentStreamCompoundingFloorRateBuySide) {
    LegPaymentStreamCompoundingFloorRateBuySide[LegPaymentStreamCompoundingFloorRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegPaymentStreamCompoundingFloorRateBuySide[LegPaymentStreamCompoundingFloorRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegPaymentStreamCompoundingFloorRateBuySide = exports.LegPaymentStreamCompoundingFloorRateBuySide || (exports.LegPaymentStreamCompoundingFloorRateBuySide = {}));
var LegPaymentStreamCompoundingFloorRateSellSide;
(function (LegPaymentStreamCompoundingFloorRateSellSide) {
    LegPaymentStreamCompoundingFloorRateSellSide[LegPaymentStreamCompoundingFloorRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    LegPaymentStreamCompoundingFloorRateSellSide[LegPaymentStreamCompoundingFloorRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(LegPaymentStreamCompoundingFloorRateSellSide = exports.LegPaymentStreamCompoundingFloorRateSellSide || (exports.LegPaymentStreamCompoundingFloorRateSellSide = {}));
var LegPaymentStreamCompoundingFinalRateRoundingDirection;
(function (LegPaymentStreamCompoundingFinalRateRoundingDirection) {
    LegPaymentStreamCompoundingFinalRateRoundingDirection["RoundToNearest"] = "0";
    LegPaymentStreamCompoundingFinalRateRoundingDirection["RoundDown"] = "1";
    LegPaymentStreamCompoundingFinalRateRoundingDirection["RoundUp"] = "2";
})(LegPaymentStreamCompoundingFinalRateRoundingDirection = exports.LegPaymentStreamCompoundingFinalRateRoundingDirection || (exports.LegPaymentStreamCompoundingFinalRateRoundingDirection = {}));
var LegPaymentStreamCompoundingAveragingMethod;
(function (LegPaymentStreamCompoundingAveragingMethod) {
    LegPaymentStreamCompoundingAveragingMethod[LegPaymentStreamCompoundingAveragingMethod["Unweighted"] = 0] = "Unweighted";
    LegPaymentStreamCompoundingAveragingMethod[LegPaymentStreamCompoundingAveragingMethod["Weighted"] = 1] = "Weighted";
})(LegPaymentStreamCompoundingAveragingMethod = exports.LegPaymentStreamCompoundingAveragingMethod || (exports.LegPaymentStreamCompoundingAveragingMethod = {}));
var LegPaymentStreamCompoundingNegativeRateTreatment;
(function (LegPaymentStreamCompoundingNegativeRateTreatment) {
    LegPaymentStreamCompoundingNegativeRateTreatment[LegPaymentStreamCompoundingNegativeRateTreatment["ZeroInterestRateMethod"] = 0] = "ZeroInterestRateMethod";
    LegPaymentStreamCompoundingNegativeRateTreatment[LegPaymentStreamCompoundingNegativeRateTreatment["NegativeInterestRateMethod"] = 1] = "NegativeInterestRateMethod";
})(LegPaymentStreamCompoundingNegativeRateTreatment = exports.LegPaymentStreamCompoundingNegativeRateTreatment || (exports.LegPaymentStreamCompoundingNegativeRateTreatment = {}));
var LegPaymentStreamCompoundingStartDateOffsetUnit;
(function (LegPaymentStreamCompoundingStartDateOffsetUnit) {
    LegPaymentStreamCompoundingStartDateOffsetUnit["Day"] = "D";
    LegPaymentStreamCompoundingStartDateOffsetUnit["Week"] = "Wk";
    LegPaymentStreamCompoundingStartDateOffsetUnit["Month"] = "Mo";
    LegPaymentStreamCompoundingStartDateOffsetUnit["Year"] = "Yr";
})(LegPaymentStreamCompoundingStartDateOffsetUnit = exports.LegPaymentStreamCompoundingStartDateOffsetUnit || (exports.LegPaymentStreamCompoundingStartDateOffsetUnit = {}));
var LegPaymentStreamCompoundingStartDateOffsetDayType;
(function (LegPaymentStreamCompoundingStartDateOffsetDayType) {
    LegPaymentStreamCompoundingStartDateOffsetDayType[LegPaymentStreamCompoundingStartDateOffsetDayType["Business"] = 0] = "Business";
    LegPaymentStreamCompoundingStartDateOffsetDayType[LegPaymentStreamCompoundingStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStreamCompoundingStartDateOffsetDayType[LegPaymentStreamCompoundingStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStreamCompoundingStartDateOffsetDayType[LegPaymentStreamCompoundingStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStreamCompoundingStartDateOffsetDayType[LegPaymentStreamCompoundingStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStreamCompoundingStartDateOffsetDayType[LegPaymentStreamCompoundingStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStreamCompoundingStartDateOffsetDayType = exports.LegPaymentStreamCompoundingStartDateOffsetDayType || (exports.LegPaymentStreamCompoundingStartDateOffsetDayType = {}));
var LegPaymentStreamFinalPricePaymentDateOffsetUnit;
(function (LegPaymentStreamFinalPricePaymentDateOffsetUnit) {
    LegPaymentStreamFinalPricePaymentDateOffsetUnit["Day"] = "D";
    LegPaymentStreamFinalPricePaymentDateOffsetUnit["Week"] = "Wk";
    LegPaymentStreamFinalPricePaymentDateOffsetUnit["Month"] = "Mo";
    LegPaymentStreamFinalPricePaymentDateOffsetUnit["Year"] = "Yr";
})(LegPaymentStreamFinalPricePaymentDateOffsetUnit = exports.LegPaymentStreamFinalPricePaymentDateOffsetUnit || (exports.LegPaymentStreamFinalPricePaymentDateOffsetUnit = {}));
var LegPaymentStreamFinalPricePaymentDateOffsetDayType;
(function (LegPaymentStreamFinalPricePaymentDateOffsetDayType) {
    LegPaymentStreamFinalPricePaymentDateOffsetDayType[LegPaymentStreamFinalPricePaymentDateOffsetDayType["Business"] = 0] = "Business";
    LegPaymentStreamFinalPricePaymentDateOffsetDayType[LegPaymentStreamFinalPricePaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStreamFinalPricePaymentDateOffsetDayType[LegPaymentStreamFinalPricePaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStreamFinalPricePaymentDateOffsetDayType[LegPaymentStreamFinalPricePaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStreamFinalPricePaymentDateOffsetDayType[LegPaymentStreamFinalPricePaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStreamFinalPricePaymentDateOffsetDayType[LegPaymentStreamFinalPricePaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStreamFinalPricePaymentDateOffsetDayType = exports.LegPaymentStreamFinalPricePaymentDateOffsetDayType || (exports.LegPaymentStreamFinalPricePaymentDateOffsetDayType = {}));
var LegPaymentStreamFixingDateType;
(function (LegPaymentStreamFixingDateType) {
    LegPaymentStreamFixingDateType[LegPaymentStreamFixingDateType["Unadjusted"] = 0] = "Unadjusted";
    LegPaymentStreamFixingDateType[LegPaymentStreamFixingDateType["Adjusted"] = 1] = "Adjusted";
})(LegPaymentStreamFixingDateType = exports.LegPaymentStreamFixingDateType || (exports.LegPaymentStreamFixingDateType = {}));
var LegPaymentStreamFirstObservationDateOffsetDayType;
(function (LegPaymentStreamFirstObservationDateOffsetDayType) {
    LegPaymentStreamFirstObservationDateOffsetDayType[LegPaymentStreamFirstObservationDateOffsetDayType["Business"] = 0] = "Business";
    LegPaymentStreamFirstObservationDateOffsetDayType[LegPaymentStreamFirstObservationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStreamFirstObservationDateOffsetDayType[LegPaymentStreamFirstObservationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStreamFirstObservationDateOffsetDayType[LegPaymentStreamFirstObservationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStreamFirstObservationDateOffsetDayType[LegPaymentStreamFirstObservationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStreamFirstObservationDateOffsetDayType[LegPaymentStreamFirstObservationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStreamFirstObservationDateOffsetDayType = exports.LegPaymentStreamFirstObservationDateOffsetDayType || (exports.LegPaymentStreamFirstObservationDateOffsetDayType = {}));
var LegPaymentStreamLinkStrikePriceType;
(function (LegPaymentStreamLinkStrikePriceType) {
    LegPaymentStreamLinkStrikePriceType[LegPaymentStreamLinkStrikePriceType["Volatility"] = 0] = "Volatility";
    LegPaymentStreamLinkStrikePriceType[LegPaymentStreamLinkStrikePriceType["Variance"] = 1] = "Variance";
})(LegPaymentStreamLinkStrikePriceType = exports.LegPaymentStreamLinkStrikePriceType || (exports.LegPaymentStreamLinkStrikePriceType = {}));
var LegPaymentStreamRealizedVarianceMethod;
(function (LegPaymentStreamRealizedVarianceMethod) {
    LegPaymentStreamRealizedVarianceMethod[LegPaymentStreamRealizedVarianceMethod["Previous"] = 0] = "Previous";
    LegPaymentStreamRealizedVarianceMethod[LegPaymentStreamRealizedVarianceMethod["Last"] = 1] = "Last";
    LegPaymentStreamRealizedVarianceMethod[LegPaymentStreamRealizedVarianceMethod["Both"] = 2] = "Both";
})(LegPaymentStreamRealizedVarianceMethod = exports.LegPaymentStreamRealizedVarianceMethod || (exports.LegPaymentStreamRealizedVarianceMethod = {}));
var LegPaymentStubEndDateBusinessDayConvention;
(function (LegPaymentStubEndDateBusinessDayConvention) {
    LegPaymentStubEndDateBusinessDayConvention[LegPaymentStubEndDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegPaymentStubEndDateBusinessDayConvention[LegPaymentStubEndDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegPaymentStubEndDateBusinessDayConvention[LegPaymentStubEndDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegPaymentStubEndDateBusinessDayConvention[LegPaymentStubEndDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegPaymentStubEndDateBusinessDayConvention[LegPaymentStubEndDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegPaymentStubEndDateBusinessDayConvention[LegPaymentStubEndDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegPaymentStubEndDateBusinessDayConvention[LegPaymentStubEndDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegPaymentStubEndDateBusinessDayConvention[LegPaymentStubEndDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegPaymentStubEndDateBusinessDayConvention = exports.LegPaymentStubEndDateBusinessDayConvention || (exports.LegPaymentStubEndDateBusinessDayConvention = {}));
var LegPaymentStubEndDateOffsetUnit;
(function (LegPaymentStubEndDateOffsetUnit) {
    LegPaymentStubEndDateOffsetUnit["Day"] = "D";
    LegPaymentStubEndDateOffsetUnit["Week"] = "Wk";
    LegPaymentStubEndDateOffsetUnit["Month"] = "Mo";
    LegPaymentStubEndDateOffsetUnit["Year"] = "Yr";
})(LegPaymentStubEndDateOffsetUnit = exports.LegPaymentStubEndDateOffsetUnit || (exports.LegPaymentStubEndDateOffsetUnit = {}));
var LegPaymentStubEndDateOffsetDayType;
(function (LegPaymentStubEndDateOffsetDayType) {
    LegPaymentStubEndDateOffsetDayType[LegPaymentStubEndDateOffsetDayType["Business"] = 0] = "Business";
    LegPaymentStubEndDateOffsetDayType[LegPaymentStubEndDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStubEndDateOffsetDayType[LegPaymentStubEndDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStubEndDateOffsetDayType[LegPaymentStubEndDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStubEndDateOffsetDayType[LegPaymentStubEndDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStubEndDateOffsetDayType[LegPaymentStubEndDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStubEndDateOffsetDayType = exports.LegPaymentStubEndDateOffsetDayType || (exports.LegPaymentStubEndDateOffsetDayType = {}));
var LegPaymentStubStartDateBusinessDayConvention;
(function (LegPaymentStubStartDateBusinessDayConvention) {
    LegPaymentStubStartDateBusinessDayConvention[LegPaymentStubStartDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegPaymentStubStartDateBusinessDayConvention[LegPaymentStubStartDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegPaymentStubStartDateBusinessDayConvention[LegPaymentStubStartDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegPaymentStubStartDateBusinessDayConvention[LegPaymentStubStartDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegPaymentStubStartDateBusinessDayConvention[LegPaymentStubStartDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegPaymentStubStartDateBusinessDayConvention[LegPaymentStubStartDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegPaymentStubStartDateBusinessDayConvention[LegPaymentStubStartDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegPaymentStubStartDateBusinessDayConvention[LegPaymentStubStartDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegPaymentStubStartDateBusinessDayConvention = exports.LegPaymentStubStartDateBusinessDayConvention || (exports.LegPaymentStubStartDateBusinessDayConvention = {}));
var LegPaymentStubStartDateOffsetUnit;
(function (LegPaymentStubStartDateOffsetUnit) {
    LegPaymentStubStartDateOffsetUnit["Day"] = "D";
    LegPaymentStubStartDateOffsetUnit["Week"] = "Wk";
    LegPaymentStubStartDateOffsetUnit["Month"] = "Mo";
    LegPaymentStubStartDateOffsetUnit["Year"] = "Yr";
})(LegPaymentStubStartDateOffsetUnit = exports.LegPaymentStubStartDateOffsetUnit || (exports.LegPaymentStubStartDateOffsetUnit = {}));
var LegPaymentStubStartDateOffsetDayType;
(function (LegPaymentStubStartDateOffsetDayType) {
    LegPaymentStubStartDateOffsetDayType[LegPaymentStubStartDateOffsetDayType["Business"] = 0] = "Business";
    LegPaymentStubStartDateOffsetDayType[LegPaymentStubStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegPaymentStubStartDateOffsetDayType[LegPaymentStubStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegPaymentStubStartDateOffsetDayType[LegPaymentStubStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegPaymentStubStartDateOffsetDayType[LegPaymentStubStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegPaymentStubStartDateOffsetDayType[LegPaymentStubStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegPaymentStubStartDateOffsetDayType = exports.LegPaymentStubStartDateOffsetDayType || (exports.LegPaymentStubStartDateOffsetDayType = {}));
var LegProvisionBreakFeeElection;
(function (LegProvisionBreakFeeElection) {
    LegProvisionBreakFeeElection[LegProvisionBreakFeeElection["FlatFee"] = 0] = "FlatFee";
    LegProvisionBreakFeeElection[LegProvisionBreakFeeElection["AmortizedFee"] = 1] = "AmortizedFee";
    LegProvisionBreakFeeElection[LegProvisionBreakFeeElection["FundingFee"] = 2] = "FundingFee";
    LegProvisionBreakFeeElection[LegProvisionBreakFeeElection["FlatFeeAndFundingFee"] = 3] = "FlatFeeAndFundingFee";
    LegProvisionBreakFeeElection[LegProvisionBreakFeeElection["AmortizedFeeAndFundingFee"] = 4] = "AmortizedFeeAndFundingFee";
})(LegProvisionBreakFeeElection = exports.LegProvisionBreakFeeElection || (exports.LegProvisionBreakFeeElection = {}));
var LegReturnRateDateMode;
(function (LegReturnRateDateMode) {
    LegReturnRateDateMode[LegReturnRateDateMode["PriceValuation"] = 0] = "PriceValuation";
    LegReturnRateDateMode[LegReturnRateDateMode["DividendValuation"] = 1] = "DividendValuation";
})(LegReturnRateDateMode = exports.LegReturnRateDateMode || (exports.LegReturnRateDateMode = {}));
var LegReturnRateValuationDateOffsetUnit;
(function (LegReturnRateValuationDateOffsetUnit) {
    LegReturnRateValuationDateOffsetUnit["Day"] = "D";
    LegReturnRateValuationDateOffsetUnit["Week"] = "Wk";
    LegReturnRateValuationDateOffsetUnit["Month"] = "Mo";
    LegReturnRateValuationDateOffsetUnit["Year"] = "Yr";
})(LegReturnRateValuationDateOffsetUnit = exports.LegReturnRateValuationDateOffsetUnit || (exports.LegReturnRateValuationDateOffsetUnit = {}));
var LegReturnRateValuationDateOffsetDayType;
(function (LegReturnRateValuationDateOffsetDayType) {
    LegReturnRateValuationDateOffsetDayType[LegReturnRateValuationDateOffsetDayType["Business"] = 0] = "Business";
    LegReturnRateValuationDateOffsetDayType[LegReturnRateValuationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegReturnRateValuationDateOffsetDayType[LegReturnRateValuationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegReturnRateValuationDateOffsetDayType[LegReturnRateValuationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegReturnRateValuationDateOffsetDayType[LegReturnRateValuationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegReturnRateValuationDateOffsetDayType[LegReturnRateValuationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegReturnRateValuationDateOffsetDayType = exports.LegReturnRateValuationDateOffsetDayType || (exports.LegReturnRateValuationDateOffsetDayType = {}));
var LegReturnRateValuationStartDateOffsetUnit;
(function (LegReturnRateValuationStartDateOffsetUnit) {
    LegReturnRateValuationStartDateOffsetUnit["Day"] = "D";
    LegReturnRateValuationStartDateOffsetUnit["Week"] = "Wk";
    LegReturnRateValuationStartDateOffsetUnit["Month"] = "Mo";
    LegReturnRateValuationStartDateOffsetUnit["Year"] = "Yr";
})(LegReturnRateValuationStartDateOffsetUnit = exports.LegReturnRateValuationStartDateOffsetUnit || (exports.LegReturnRateValuationStartDateOffsetUnit = {}));
var LegReturnRateValuationStartDateOffsetDayType;
(function (LegReturnRateValuationStartDateOffsetDayType) {
    LegReturnRateValuationStartDateOffsetDayType[LegReturnRateValuationStartDateOffsetDayType["Business"] = 0] = "Business";
    LegReturnRateValuationStartDateOffsetDayType[LegReturnRateValuationStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegReturnRateValuationStartDateOffsetDayType[LegReturnRateValuationStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegReturnRateValuationStartDateOffsetDayType[LegReturnRateValuationStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegReturnRateValuationStartDateOffsetDayType[LegReturnRateValuationStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegReturnRateValuationStartDateOffsetDayType[LegReturnRateValuationStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegReturnRateValuationStartDateOffsetDayType = exports.LegReturnRateValuationStartDateOffsetDayType || (exports.LegReturnRateValuationStartDateOffsetDayType = {}));
var LegReturnRateValuationEndDateOffsetUnit;
(function (LegReturnRateValuationEndDateOffsetUnit) {
    LegReturnRateValuationEndDateOffsetUnit["Day"] = "D";
    LegReturnRateValuationEndDateOffsetUnit["Week"] = "Wk";
    LegReturnRateValuationEndDateOffsetUnit["Month"] = "Mo";
    LegReturnRateValuationEndDateOffsetUnit["Year"] = "Yr";
})(LegReturnRateValuationEndDateOffsetUnit = exports.LegReturnRateValuationEndDateOffsetUnit || (exports.LegReturnRateValuationEndDateOffsetUnit = {}));
var LegReturnRateValuationEndDateOffsetDayType;
(function (LegReturnRateValuationEndDateOffsetDayType) {
    LegReturnRateValuationEndDateOffsetDayType[LegReturnRateValuationEndDateOffsetDayType["Business"] = 0] = "Business";
    LegReturnRateValuationEndDateOffsetDayType[LegReturnRateValuationEndDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegReturnRateValuationEndDateOffsetDayType[LegReturnRateValuationEndDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegReturnRateValuationEndDateOffsetDayType[LegReturnRateValuationEndDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegReturnRateValuationEndDateOffsetDayType[LegReturnRateValuationEndDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegReturnRateValuationEndDateOffsetDayType[LegReturnRateValuationEndDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegReturnRateValuationEndDateOffsetDayType = exports.LegReturnRateValuationEndDateOffsetDayType || (exports.LegReturnRateValuationEndDateOffsetDayType = {}));
var LegReturnRateValuationFrequencyUnit;
(function (LegReturnRateValuationFrequencyUnit) {
    LegReturnRateValuationFrequencyUnit["Day"] = "D";
    LegReturnRateValuationFrequencyUnit["Week"] = "Wk";
    LegReturnRateValuationFrequencyUnit["Month"] = "Mo";
    LegReturnRateValuationFrequencyUnit["Year"] = "Yr";
    LegReturnRateValuationFrequencyUnit["Hour"] = "H";
    LegReturnRateValuationFrequencyUnit["Minute"] = "Min";
    LegReturnRateValuationFrequencyUnit["Second"] = "S";
    LegReturnRateValuationFrequencyUnit["Term"] = "T";
})(LegReturnRateValuationFrequencyUnit = exports.LegReturnRateValuationFrequencyUnit || (exports.LegReturnRateValuationFrequencyUnit = {}));
var LegReturnRateValuationFrequencyRollConvention;
(function (LegReturnRateValuationFrequencyRollConvention) {
    LegReturnRateValuationFrequencyRollConvention["E1stDayOfTheMonth"] = "1";
    LegReturnRateValuationFrequencyRollConvention["E2ndDayOfTheMonth"] = "2";
    LegReturnRateValuationFrequencyRollConvention["E3rdDayOfTheMonth"] = "3";
    LegReturnRateValuationFrequencyRollConvention["E4thDayOfTheMonth"] = "4";
    LegReturnRateValuationFrequencyRollConvention["E5thDayOfTheMonth"] = "5";
    LegReturnRateValuationFrequencyRollConvention["E6ThdDayOfTheMonth"] = "6";
    LegReturnRateValuationFrequencyRollConvention["E7thDayOfTheMonth"] = "7";
    LegReturnRateValuationFrequencyRollConvention["E8thDayOfTheMonth"] = "8";
    LegReturnRateValuationFrequencyRollConvention["E9thDayOfTheMonth"] = "9";
    LegReturnRateValuationFrequencyRollConvention["E10thDayOfTheMonth"] = "10";
    LegReturnRateValuationFrequencyRollConvention["E11ThDayOfTheMonth"] = "11";
    LegReturnRateValuationFrequencyRollConvention["E12ThDayOfTheMonth"] = "12";
    LegReturnRateValuationFrequencyRollConvention["E13ThDayOfTheMonth"] = "13";
    LegReturnRateValuationFrequencyRollConvention["E14thDayOfTheMonth"] = "14";
    LegReturnRateValuationFrequencyRollConvention["E15thDayOfTheMonth"] = "15";
    LegReturnRateValuationFrequencyRollConvention["E16thDayOfTheMonth"] = "16";
    LegReturnRateValuationFrequencyRollConvention["E17thDayOfTheMonth"] = "17";
    LegReturnRateValuationFrequencyRollConvention["E18thDayOfTheMonth"] = "18";
    LegReturnRateValuationFrequencyRollConvention["E19thDayOfTheMonth"] = "19";
    LegReturnRateValuationFrequencyRollConvention["E20thDayOfTheMonth"] = "20";
    LegReturnRateValuationFrequencyRollConvention["E21stDayOfTheMonth"] = "21";
    LegReturnRateValuationFrequencyRollConvention["E22ndDayOfTheMonth"] = "22";
    LegReturnRateValuationFrequencyRollConvention["E23rdDayOfTheMonth"] = "23";
    LegReturnRateValuationFrequencyRollConvention["E24thDayOfTheMonth"] = "24";
    LegReturnRateValuationFrequencyRollConvention["E25thDayOfTheMonth"] = "25";
    LegReturnRateValuationFrequencyRollConvention["E26thDayOfTheMonth"] = "26";
    LegReturnRateValuationFrequencyRollConvention["E27thDayOfTheMonth"] = "27";
    LegReturnRateValuationFrequencyRollConvention["E28thDayOfTheMonth"] = "28";
    LegReturnRateValuationFrequencyRollConvention["E29thDayOfTheMonth"] = "29";
    LegReturnRateValuationFrequencyRollConvention["E30thDayOfTheMonth"] = "30";
    LegReturnRateValuationFrequencyRollConvention["TheEndOfTheMonth"] = "EOM";
    LegReturnRateValuationFrequencyRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    LegReturnRateValuationFrequencyRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    LegReturnRateValuationFrequencyRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    LegReturnRateValuationFrequencyRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    LegReturnRateValuationFrequencyRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    LegReturnRateValuationFrequencyRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    LegReturnRateValuationFrequencyRollConvention["NoAdjustment"] = "NONE";
    LegReturnRateValuationFrequencyRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    LegReturnRateValuationFrequencyRollConvention["Monday"] = "MON";
    LegReturnRateValuationFrequencyRollConvention["Tuesday"] = "TUE";
    LegReturnRateValuationFrequencyRollConvention["Wednesday"] = "WED";
    LegReturnRateValuationFrequencyRollConvention["Thursday"] = "THU";
    LegReturnRateValuationFrequencyRollConvention["Friday"] = "FRI";
    LegReturnRateValuationFrequencyRollConvention["Saturday"] = "SAT";
    LegReturnRateValuationFrequencyRollConvention["Sunday"] = "SUN";
})(LegReturnRateValuationFrequencyRollConvention = exports.LegReturnRateValuationFrequencyRollConvention || (exports.LegReturnRateValuationFrequencyRollConvention = {}));
var LegReturnRateValuationDateBusinessDayConvention;
(function (LegReturnRateValuationDateBusinessDayConvention) {
    LegReturnRateValuationDateBusinessDayConvention[LegReturnRateValuationDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegReturnRateValuationDateBusinessDayConvention[LegReturnRateValuationDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegReturnRateValuationDateBusinessDayConvention[LegReturnRateValuationDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegReturnRateValuationDateBusinessDayConvention[LegReturnRateValuationDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegReturnRateValuationDateBusinessDayConvention[LegReturnRateValuationDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegReturnRateValuationDateBusinessDayConvention[LegReturnRateValuationDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegReturnRateValuationDateBusinessDayConvention[LegReturnRateValuationDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegReturnRateValuationDateBusinessDayConvention[LegReturnRateValuationDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegReturnRateValuationDateBusinessDayConvention = exports.LegReturnRateValuationDateBusinessDayConvention || (exports.LegReturnRateValuationDateBusinessDayConvention = {}));
var LegReturnRateFXRateCalc;
(function (LegReturnRateFXRateCalc) {
    LegReturnRateFXRateCalc["Multiply"] = "M";
    LegReturnRateFXRateCalc["Divide"] = "D";
})(LegReturnRateFXRateCalc = exports.LegReturnRateFXRateCalc || (exports.LegReturnRateFXRateCalc = {}));
var LegReturnRatePriceSequence;
(function (LegReturnRatePriceSequence) {
    LegReturnRatePriceSequence[LegReturnRatePriceSequence["Initial"] = 0] = "Initial";
    LegReturnRatePriceSequence[LegReturnRatePriceSequence["Interim"] = 1] = "Interim";
    LegReturnRatePriceSequence[LegReturnRatePriceSequence["Final"] = 2] = "Final";
})(LegReturnRatePriceSequence = exports.LegReturnRatePriceSequence || (exports.LegReturnRatePriceSequence = {}));
var LegReturnRateCommissionBasis;
(function (LegReturnRateCommissionBasis) {
    LegReturnRateCommissionBasis["AmountPerUnit"] = "1";
    LegReturnRateCommissionBasis["Percent"] = "2";
    LegReturnRateCommissionBasis["Absolute"] = "3";
    LegReturnRateCommissionBasis["PercentageWaivedCashDiscountBasis"] = "4";
    LegReturnRateCommissionBasis["PercentageWaivedEnhancedUnitsBasis"] = "5";
    LegReturnRateCommissionBasis["PointsPerBondOrContract"] = "6";
    LegReturnRateCommissionBasis["BasisPoints"] = "7";
    LegReturnRateCommissionBasis["AmountPerContract"] = "8";
})(LegReturnRateCommissionBasis = exports.LegReturnRateCommissionBasis || (exports.LegReturnRateCommissionBasis = {}));
var LegReturnRateQuoteMethod;
(function (LegReturnRateQuoteMethod) {
    LegReturnRateQuoteMethod[LegReturnRateQuoteMethod["Bid"] = 0] = "Bid";
    LegReturnRateQuoteMethod[LegReturnRateQuoteMethod["Mid"] = 1] = "Mid";
    LegReturnRateQuoteMethod[LegReturnRateQuoteMethod["Offer"] = 2] = "Offer";
})(LegReturnRateQuoteMethod = exports.LegReturnRateQuoteMethod || (exports.LegReturnRateQuoteMethod = {}));
var LegReturnRateQuoteTimeType;
(function (LegReturnRateQuoteTimeType) {
    LegReturnRateQuoteTimeType[LegReturnRateQuoteTimeType["Open"] = 0] = "Open";
    LegReturnRateQuoteTimeType[LegReturnRateQuoteTimeType["OfficialSettlementPriceTime"] = 1] = "OfficialSettlementPriceTime";
    LegReturnRateQuoteTimeType[LegReturnRateQuoteTimeType["Xetra"] = 2] = "Xetra";
    LegReturnRateQuoteTimeType[LegReturnRateQuoteTimeType["Close"] = 3] = "Close";
    LegReturnRateQuoteTimeType[LegReturnRateQuoteTimeType["DerivativesClose"] = 4] = "DerivativesClose";
    LegReturnRateQuoteTimeType[LegReturnRateQuoteTimeType["High"] = 5] = "High";
    LegReturnRateQuoteTimeType[LegReturnRateQuoteTimeType["Low"] = 6] = "Low";
    LegReturnRateQuoteTimeType[LegReturnRateQuoteTimeType["AsSpecifiedInTheMasterConfirmation"] = 7] = "AsSpecifiedInTheMasterConfirmation";
})(LegReturnRateQuoteTimeType = exports.LegReturnRateQuoteTimeType || (exports.LegReturnRateQuoteTimeType = {}));
var LegReturnRateValuationTimeType;
(function (LegReturnRateValuationTimeType) {
    LegReturnRateValuationTimeType[LegReturnRateValuationTimeType["Open"] = 0] = "Open";
    LegReturnRateValuationTimeType[LegReturnRateValuationTimeType["OfficialSettlementPriceTime"] = 1] = "OfficialSettlementPriceTime";
    LegReturnRateValuationTimeType[LegReturnRateValuationTimeType["Xetra"] = 2] = "Xetra";
    LegReturnRateValuationTimeType[LegReturnRateValuationTimeType["Close"] = 3] = "Close";
    LegReturnRateValuationTimeType[LegReturnRateValuationTimeType["DerivativesClose"] = 4] = "DerivativesClose";
    LegReturnRateValuationTimeType[LegReturnRateValuationTimeType["High"] = 5] = "High";
    LegReturnRateValuationTimeType[LegReturnRateValuationTimeType["Low"] = 6] = "Low";
    LegReturnRateValuationTimeType[LegReturnRateValuationTimeType["AsSpecifiedInTheMasterConfirmation"] = 7] = "AsSpecifiedInTheMasterConfirmation";
})(LegReturnRateValuationTimeType = exports.LegReturnRateValuationTimeType || (exports.LegReturnRateValuationTimeType = {}));
var LegReturnRateValuationPriceOption;
(function (LegReturnRateValuationPriceOption) {
    LegReturnRateValuationPriceOption[LegReturnRateValuationPriceOption["NoneTheDefault"] = 0] = "NoneTheDefault";
    LegReturnRateValuationPriceOption[LegReturnRateValuationPriceOption["FuturesPrice"] = 1] = "FuturesPrice";
    LegReturnRateValuationPriceOption[LegReturnRateValuationPriceOption["OptionsPrice"] = 2] = "OptionsPrice";
})(LegReturnRateValuationPriceOption = exports.LegReturnRateValuationPriceOption || (exports.LegReturnRateValuationPriceOption = {}));
var LegReturnRateFinalPriceFallback;
(function (LegReturnRateFinalPriceFallback) {
    LegReturnRateFinalPriceFallback[LegReturnRateFinalPriceFallback["Close"] = 0] = "Close";
    LegReturnRateFinalPriceFallback[LegReturnRateFinalPriceFallback["HedgeElection"] = 1] = "HedgeElection";
})(LegReturnRateFinalPriceFallback = exports.LegReturnRateFinalPriceFallback || (exports.LegReturnRateFinalPriceFallback = {}));
var LegReturnRateInformationSource;
(function (LegReturnRateInformationSource) {
    LegReturnRateInformationSource[LegReturnRateInformationSource["Bloomberg"] = 0] = "Bloomberg";
    LegReturnRateInformationSource[LegReturnRateInformationSource["Reuters"] = 1] = "Reuters";
    LegReturnRateInformationSource[LegReturnRateInformationSource["Telerate"] = 2] = "Telerate";
    LegReturnRateInformationSource[LegReturnRateInformationSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    LegReturnRateInformationSource[LegReturnRateInformationSource["Other"] = 99] = "Other";
})(LegReturnRateInformationSource = exports.LegReturnRateInformationSource || (exports.LegReturnRateInformationSource = {}));
var LegReturnRatePriceBasis;
(function (LegReturnRatePriceBasis) {
    LegReturnRatePriceBasis[LegReturnRatePriceBasis["Gross"] = 0] = "Gross";
    LegReturnRatePriceBasis[LegReturnRatePriceBasis["Net"] = 1] = "Net";
    LegReturnRatePriceBasis[LegReturnRatePriceBasis["Accrued"] = 2] = "Accrued";
    LegReturnRatePriceBasis[LegReturnRatePriceBasis["CleanNet"] = 3] = "CleanNet";
})(LegReturnRatePriceBasis = exports.LegReturnRatePriceBasis || (exports.LegReturnRatePriceBasis = {}));
var LegReturnRatePriceType;
(function (LegReturnRatePriceType) {
    LegReturnRatePriceType[LegReturnRatePriceType["AbsoluteTerms"] = 0] = "AbsoluteTerms";
    LegReturnRatePriceType[LegReturnRatePriceType["PercentageOfNotional"] = 1] = "PercentageOfNotional";
})(LegReturnRatePriceType = exports.LegReturnRatePriceType || (exports.LegReturnRatePriceType = {}));
var LegReturnRateValuationDateType;
(function (LegReturnRateValuationDateType) {
    LegReturnRateValuationDateType[LegReturnRateValuationDateType["Unadjusted"] = 0] = "Unadjusted";
    LegReturnRateValuationDateType[LegReturnRateValuationDateType["Adjusted"] = 1] = "Adjusted";
})(LegReturnRateValuationDateType = exports.LegReturnRateValuationDateType || (exports.LegReturnRateValuationDateType = {}));
var LegSettlMethodElectionDateBusinessDayConvention;
(function (LegSettlMethodElectionDateBusinessDayConvention) {
    LegSettlMethodElectionDateBusinessDayConvention[LegSettlMethodElectionDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    LegSettlMethodElectionDateBusinessDayConvention[LegSettlMethodElectionDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    LegSettlMethodElectionDateBusinessDayConvention[LegSettlMethodElectionDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    LegSettlMethodElectionDateBusinessDayConvention[LegSettlMethodElectionDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    LegSettlMethodElectionDateBusinessDayConvention[LegSettlMethodElectionDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    LegSettlMethodElectionDateBusinessDayConvention[LegSettlMethodElectionDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    LegSettlMethodElectionDateBusinessDayConvention[LegSettlMethodElectionDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    LegSettlMethodElectionDateBusinessDayConvention[LegSettlMethodElectionDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(LegSettlMethodElectionDateBusinessDayConvention = exports.LegSettlMethodElectionDateBusinessDayConvention || (exports.LegSettlMethodElectionDateBusinessDayConvention = {}));
var LegSettlMethodElectionDateOffsetUnit;
(function (LegSettlMethodElectionDateOffsetUnit) {
    LegSettlMethodElectionDateOffsetUnit["Day"] = "D";
    LegSettlMethodElectionDateOffsetUnit["Week"] = "Wk";
    LegSettlMethodElectionDateOffsetUnit["Month"] = "Mo";
    LegSettlMethodElectionDateOffsetUnit["Year"] = "Yr";
})(LegSettlMethodElectionDateOffsetUnit = exports.LegSettlMethodElectionDateOffsetUnit || (exports.LegSettlMethodElectionDateOffsetUnit = {}));
var LegSettlMethodElectionDateOffsetDayType;
(function (LegSettlMethodElectionDateOffsetDayType) {
    LegSettlMethodElectionDateOffsetDayType[LegSettlMethodElectionDateOffsetDayType["Business"] = 0] = "Business";
    LegSettlMethodElectionDateOffsetDayType[LegSettlMethodElectionDateOffsetDayType["Calendar"] = 1] = "Calendar";
    LegSettlMethodElectionDateOffsetDayType[LegSettlMethodElectionDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    LegSettlMethodElectionDateOffsetDayType[LegSettlMethodElectionDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    LegSettlMethodElectionDateOffsetDayType[LegSettlMethodElectionDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    LegSettlMethodElectionDateOffsetDayType[LegSettlMethodElectionDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(LegSettlMethodElectionDateOffsetDayType = exports.LegSettlMethodElectionDateOffsetDayType || (exports.LegSettlMethodElectionDateOffsetDayType = {}));
var LegStreamNotionalAdjustments;
(function (LegStreamNotionalAdjustments) {
    LegStreamNotionalAdjustments[LegStreamNotionalAdjustments["Execution"] = 0] = "Execution";
    LegStreamNotionalAdjustments[LegStreamNotionalAdjustments["PortfolioRebalancing"] = 1] = "PortfolioRebalancing";
    LegStreamNotionalAdjustments[LegStreamNotionalAdjustments["Standard"] = 2] = "Standard";
})(LegStreamNotionalAdjustments = exports.LegStreamNotionalAdjustments || (exports.LegStreamNotionalAdjustments = {}));
var SettlMethodElectingPartySide;
(function (SettlMethodElectingPartySide) {
    SettlMethodElectingPartySide[SettlMethodElectingPartySide["Buy"] = 1] = "Buy";
    SettlMethodElectingPartySide[SettlMethodElectingPartySide["Sell"] = 2] = "Sell";
})(SettlMethodElectingPartySide = exports.SettlMethodElectingPartySide || (exports.SettlMethodElectingPartySide = {}));
var MakeWholeBenchmarkQuote;
(function (MakeWholeBenchmarkQuote) {
    MakeWholeBenchmarkQuote[MakeWholeBenchmarkQuote["Bid"] = 0] = "Bid";
    MakeWholeBenchmarkQuote[MakeWholeBenchmarkQuote["Mid"] = 1] = "Mid";
    MakeWholeBenchmarkQuote[MakeWholeBenchmarkQuote["Offer"] = 2] = "Offer";
})(MakeWholeBenchmarkQuote = exports.MakeWholeBenchmarkQuote || (exports.MakeWholeBenchmarkQuote = {}));
var MakeWholeInterpolationMethod;
(function (MakeWholeInterpolationMethod) {
    MakeWholeInterpolationMethod[MakeWholeInterpolationMethod["None"] = 0] = "None";
    MakeWholeInterpolationMethod[MakeWholeInterpolationMethod["LinearZeroYield"] = 1] = "LinearZeroYield";
})(MakeWholeInterpolationMethod = exports.MakeWholeInterpolationMethod || (exports.MakeWholeInterpolationMethod = {}));
var PaymentStreamInterpolationMethod;
(function (PaymentStreamInterpolationMethod) {
    PaymentStreamInterpolationMethod[PaymentStreamInterpolationMethod["None"] = 0] = "None";
    PaymentStreamInterpolationMethod[PaymentStreamInterpolationMethod["LinearZeroYield"] = 1] = "LinearZeroYield";
})(PaymentStreamInterpolationMethod = exports.PaymentStreamInterpolationMethod || (exports.PaymentStreamInterpolationMethod = {}));
var PaymentStreamInterpolationPeriod;
(function (PaymentStreamInterpolationPeriod) {
    PaymentStreamInterpolationPeriod[PaymentStreamInterpolationPeriod["Initial"] = 0] = "Initial";
    PaymentStreamInterpolationPeriod[PaymentStreamInterpolationPeriod["InitialAndFinal"] = 1] = "InitialAndFinal";
    PaymentStreamInterpolationPeriod[PaymentStreamInterpolationPeriod["Final"] = 2] = "Final";
    PaymentStreamInterpolationPeriod[PaymentStreamInterpolationPeriod["AnyPeriod"] = 3] = "AnyPeriod";
})(PaymentStreamInterpolationPeriod = exports.PaymentStreamInterpolationPeriod || (exports.PaymentStreamInterpolationPeriod = {}));
var PaymentStreamCompoundingDateType;
(function (PaymentStreamCompoundingDateType) {
    PaymentStreamCompoundingDateType[PaymentStreamCompoundingDateType["Unadjusted"] = 0] = "Unadjusted";
    PaymentStreamCompoundingDateType[PaymentStreamCompoundingDateType["Adjusted"] = 1] = "Adjusted";
})(PaymentStreamCompoundingDateType = exports.PaymentStreamCompoundingDateType || (exports.PaymentStreamCompoundingDateType = {}));
var PaymentStreamCompoundingDatesBusinessDayConvention;
(function (PaymentStreamCompoundingDatesBusinessDayConvention) {
    PaymentStreamCompoundingDatesBusinessDayConvention[PaymentStreamCompoundingDatesBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    PaymentStreamCompoundingDatesBusinessDayConvention[PaymentStreamCompoundingDatesBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    PaymentStreamCompoundingDatesBusinessDayConvention[PaymentStreamCompoundingDatesBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    PaymentStreamCompoundingDatesBusinessDayConvention[PaymentStreamCompoundingDatesBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    PaymentStreamCompoundingDatesBusinessDayConvention[PaymentStreamCompoundingDatesBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    PaymentStreamCompoundingDatesBusinessDayConvention[PaymentStreamCompoundingDatesBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    PaymentStreamCompoundingDatesBusinessDayConvention[PaymentStreamCompoundingDatesBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    PaymentStreamCompoundingDatesBusinessDayConvention[PaymentStreamCompoundingDatesBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(PaymentStreamCompoundingDatesBusinessDayConvention = exports.PaymentStreamCompoundingDatesBusinessDayConvention || (exports.PaymentStreamCompoundingDatesBusinessDayConvention = {}));
var PaymentStreamCompoundingDatesOffsetUnit;
(function (PaymentStreamCompoundingDatesOffsetUnit) {
    PaymentStreamCompoundingDatesOffsetUnit["Day"] = "D";
    PaymentStreamCompoundingDatesOffsetUnit["Week"] = "Wk";
    PaymentStreamCompoundingDatesOffsetUnit["Month"] = "Mo";
    PaymentStreamCompoundingDatesOffsetUnit["Year"] = "Yr";
})(PaymentStreamCompoundingDatesOffsetUnit = exports.PaymentStreamCompoundingDatesOffsetUnit || (exports.PaymentStreamCompoundingDatesOffsetUnit = {}));
var PaymentStreamCompoundingDatesOffsetDayType;
(function (PaymentStreamCompoundingDatesOffsetDayType) {
    PaymentStreamCompoundingDatesOffsetDayType[PaymentStreamCompoundingDatesOffsetDayType["Business"] = 0] = "Business";
    PaymentStreamCompoundingDatesOffsetDayType[PaymentStreamCompoundingDatesOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentStreamCompoundingDatesOffsetDayType[PaymentStreamCompoundingDatesOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStreamCompoundingDatesOffsetDayType[PaymentStreamCompoundingDatesOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStreamCompoundingDatesOffsetDayType[PaymentStreamCompoundingDatesOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStreamCompoundingDatesOffsetDayType[PaymentStreamCompoundingDatesOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStreamCompoundingDatesOffsetDayType = exports.PaymentStreamCompoundingDatesOffsetDayType || (exports.PaymentStreamCompoundingDatesOffsetDayType = {}));
var PaymentStreamCompoundingFrequencyUnit;
(function (PaymentStreamCompoundingFrequencyUnit) {
    PaymentStreamCompoundingFrequencyUnit["Day"] = "D";
    PaymentStreamCompoundingFrequencyUnit["Week"] = "Wk";
    PaymentStreamCompoundingFrequencyUnit["Month"] = "Mo";
    PaymentStreamCompoundingFrequencyUnit["Year"] = "Yr";
    PaymentStreamCompoundingFrequencyUnit["Hour"] = "H";
    PaymentStreamCompoundingFrequencyUnit["Minute"] = "Min";
    PaymentStreamCompoundingFrequencyUnit["Second"] = "S";
    PaymentStreamCompoundingFrequencyUnit["Term"] = "T";
})(PaymentStreamCompoundingFrequencyUnit = exports.PaymentStreamCompoundingFrequencyUnit || (exports.PaymentStreamCompoundingFrequencyUnit = {}));
var PaymentStreamCompoundingRollConvention;
(function (PaymentStreamCompoundingRollConvention) {
    PaymentStreamCompoundingRollConvention["E1stDayOfTheMonth"] = "1";
    PaymentStreamCompoundingRollConvention["E2ndDayOfTheMonth"] = "2";
    PaymentStreamCompoundingRollConvention["E3rdDayOfTheMonth"] = "3";
    PaymentStreamCompoundingRollConvention["E4thDayOfTheMonth"] = "4";
    PaymentStreamCompoundingRollConvention["E5thDayOfTheMonth"] = "5";
    PaymentStreamCompoundingRollConvention["E6ThdDayOfTheMonth"] = "6";
    PaymentStreamCompoundingRollConvention["E7thDayOfTheMonth"] = "7";
    PaymentStreamCompoundingRollConvention["E8thDayOfTheMonth"] = "8";
    PaymentStreamCompoundingRollConvention["E9thDayOfTheMonth"] = "9";
    PaymentStreamCompoundingRollConvention["E10thDayOfTheMonth"] = "10";
    PaymentStreamCompoundingRollConvention["E11ThDayOfTheMonth"] = "11";
    PaymentStreamCompoundingRollConvention["E12ThDayOfTheMonth"] = "12";
    PaymentStreamCompoundingRollConvention["E13ThDayOfTheMonth"] = "13";
    PaymentStreamCompoundingRollConvention["E14thDayOfTheMonth"] = "14";
    PaymentStreamCompoundingRollConvention["E15thDayOfTheMonth"] = "15";
    PaymentStreamCompoundingRollConvention["E16thDayOfTheMonth"] = "16";
    PaymentStreamCompoundingRollConvention["E17thDayOfTheMonth"] = "17";
    PaymentStreamCompoundingRollConvention["E18thDayOfTheMonth"] = "18";
    PaymentStreamCompoundingRollConvention["E19thDayOfTheMonth"] = "19";
    PaymentStreamCompoundingRollConvention["E20thDayOfTheMonth"] = "20";
    PaymentStreamCompoundingRollConvention["E21stDayOfTheMonth"] = "21";
    PaymentStreamCompoundingRollConvention["E22ndDayOfTheMonth"] = "22";
    PaymentStreamCompoundingRollConvention["E23rdDayOfTheMonth"] = "23";
    PaymentStreamCompoundingRollConvention["E24thDayOfTheMonth"] = "24";
    PaymentStreamCompoundingRollConvention["E25thDayOfTheMonth"] = "25";
    PaymentStreamCompoundingRollConvention["E26thDayOfTheMonth"] = "26";
    PaymentStreamCompoundingRollConvention["E27thDayOfTheMonth"] = "27";
    PaymentStreamCompoundingRollConvention["E28thDayOfTheMonth"] = "28";
    PaymentStreamCompoundingRollConvention["E29thDayOfTheMonth"] = "29";
    PaymentStreamCompoundingRollConvention["E30thDayOfTheMonth"] = "30";
    PaymentStreamCompoundingRollConvention["TheEndOfTheMonth"] = "EOM";
    PaymentStreamCompoundingRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    PaymentStreamCompoundingRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    PaymentStreamCompoundingRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    PaymentStreamCompoundingRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    PaymentStreamCompoundingRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    PaymentStreamCompoundingRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    PaymentStreamCompoundingRollConvention["NoAdjustment"] = "NONE";
    PaymentStreamCompoundingRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    PaymentStreamCompoundingRollConvention["Monday"] = "MON";
    PaymentStreamCompoundingRollConvention["Tuesday"] = "TUE";
    PaymentStreamCompoundingRollConvention["Wednesday"] = "WED";
    PaymentStreamCompoundingRollConvention["Thursday"] = "THU";
    PaymentStreamCompoundingRollConvention["Friday"] = "FRI";
    PaymentStreamCompoundingRollConvention["Saturday"] = "SAT";
    PaymentStreamCompoundingRollConvention["Sunday"] = "SUN";
})(PaymentStreamCompoundingRollConvention = exports.PaymentStreamCompoundingRollConvention || (exports.PaymentStreamCompoundingRollConvention = {}));
var PaymentStreamCompoundingEndDateOffsetUnit;
(function (PaymentStreamCompoundingEndDateOffsetUnit) {
    PaymentStreamCompoundingEndDateOffsetUnit["Day"] = "D";
    PaymentStreamCompoundingEndDateOffsetUnit["Week"] = "Wk";
    PaymentStreamCompoundingEndDateOffsetUnit["Month"] = "Mo";
    PaymentStreamCompoundingEndDateOffsetUnit["Year"] = "Yr";
})(PaymentStreamCompoundingEndDateOffsetUnit = exports.PaymentStreamCompoundingEndDateOffsetUnit || (exports.PaymentStreamCompoundingEndDateOffsetUnit = {}));
var PaymentStreamCompoundingEndDateOffsetDayType;
(function (PaymentStreamCompoundingEndDateOffsetDayType) {
    PaymentStreamCompoundingEndDateOffsetDayType[PaymentStreamCompoundingEndDateOffsetDayType["Business"] = 0] = "Business";
    PaymentStreamCompoundingEndDateOffsetDayType[PaymentStreamCompoundingEndDateOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentStreamCompoundingEndDateOffsetDayType[PaymentStreamCompoundingEndDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStreamCompoundingEndDateOffsetDayType[PaymentStreamCompoundingEndDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStreamCompoundingEndDateOffsetDayType[PaymentStreamCompoundingEndDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStreamCompoundingEndDateOffsetDayType[PaymentStreamCompoundingEndDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStreamCompoundingEndDateOffsetDayType = exports.PaymentStreamCompoundingEndDateOffsetDayType || (exports.PaymentStreamCompoundingEndDateOffsetDayType = {}));
var PaymentStreamCompoundingRateIndexCurveUnit;
(function (PaymentStreamCompoundingRateIndexCurveUnit) {
    PaymentStreamCompoundingRateIndexCurveUnit["Day"] = "D";
    PaymentStreamCompoundingRateIndexCurveUnit["Week"] = "Wk";
    PaymentStreamCompoundingRateIndexCurveUnit["Month"] = "Mo";
    PaymentStreamCompoundingRateIndexCurveUnit["Year"] = "Yr";
})(PaymentStreamCompoundingRateIndexCurveUnit = exports.PaymentStreamCompoundingRateIndexCurveUnit || (exports.PaymentStreamCompoundingRateIndexCurveUnit = {}));
var PaymentStreamCompoundingRateSpreadPositionType;
(function (PaymentStreamCompoundingRateSpreadPositionType) {
    PaymentStreamCompoundingRateSpreadPositionType[PaymentStreamCompoundingRateSpreadPositionType["Short"] = 0] = "Short";
    PaymentStreamCompoundingRateSpreadPositionType[PaymentStreamCompoundingRateSpreadPositionType["Long"] = 1] = "Long";
})(PaymentStreamCompoundingRateSpreadPositionType = exports.PaymentStreamCompoundingRateSpreadPositionType || (exports.PaymentStreamCompoundingRateSpreadPositionType = {}));
var PaymentStreamCompoundingRateTreatment;
(function (PaymentStreamCompoundingRateTreatment) {
    PaymentStreamCompoundingRateTreatment[PaymentStreamCompoundingRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    PaymentStreamCompoundingRateTreatment[PaymentStreamCompoundingRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(PaymentStreamCompoundingRateTreatment = exports.PaymentStreamCompoundingRateTreatment || (exports.PaymentStreamCompoundingRateTreatment = {}));
var PaymentStreamCompoundingCapRateBuySide;
(function (PaymentStreamCompoundingCapRateBuySide) {
    PaymentStreamCompoundingCapRateBuySide[PaymentStreamCompoundingCapRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    PaymentStreamCompoundingCapRateBuySide[PaymentStreamCompoundingCapRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(PaymentStreamCompoundingCapRateBuySide = exports.PaymentStreamCompoundingCapRateBuySide || (exports.PaymentStreamCompoundingCapRateBuySide = {}));
var PaymentStreamCompoundingCapRateSellSide;
(function (PaymentStreamCompoundingCapRateSellSide) {
    PaymentStreamCompoundingCapRateSellSide[PaymentStreamCompoundingCapRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    PaymentStreamCompoundingCapRateSellSide[PaymentStreamCompoundingCapRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(PaymentStreamCompoundingCapRateSellSide = exports.PaymentStreamCompoundingCapRateSellSide || (exports.PaymentStreamCompoundingCapRateSellSide = {}));
var PaymentStreamCompoundingFloorRateBuySide;
(function (PaymentStreamCompoundingFloorRateBuySide) {
    PaymentStreamCompoundingFloorRateBuySide[PaymentStreamCompoundingFloorRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    PaymentStreamCompoundingFloorRateBuySide[PaymentStreamCompoundingFloorRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(PaymentStreamCompoundingFloorRateBuySide = exports.PaymentStreamCompoundingFloorRateBuySide || (exports.PaymentStreamCompoundingFloorRateBuySide = {}));
var PaymentStreamCompoundingFloorRateSellSide;
(function (PaymentStreamCompoundingFloorRateSellSide) {
    PaymentStreamCompoundingFloorRateSellSide[PaymentStreamCompoundingFloorRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    PaymentStreamCompoundingFloorRateSellSide[PaymentStreamCompoundingFloorRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(PaymentStreamCompoundingFloorRateSellSide = exports.PaymentStreamCompoundingFloorRateSellSide || (exports.PaymentStreamCompoundingFloorRateSellSide = {}));
var PaymentStreamCompoundingFinalRateRoundingDirection;
(function (PaymentStreamCompoundingFinalRateRoundingDirection) {
    PaymentStreamCompoundingFinalRateRoundingDirection["RoundToNearest"] = "0";
    PaymentStreamCompoundingFinalRateRoundingDirection["RoundDown"] = "1";
    PaymentStreamCompoundingFinalRateRoundingDirection["RoundUp"] = "2";
})(PaymentStreamCompoundingFinalRateRoundingDirection = exports.PaymentStreamCompoundingFinalRateRoundingDirection || (exports.PaymentStreamCompoundingFinalRateRoundingDirection = {}));
var PaymentStreamCompoundingAveragingMethod;
(function (PaymentStreamCompoundingAveragingMethod) {
    PaymentStreamCompoundingAveragingMethod[PaymentStreamCompoundingAveragingMethod["Unweighted"] = 0] = "Unweighted";
    PaymentStreamCompoundingAveragingMethod[PaymentStreamCompoundingAveragingMethod["Weighted"] = 1] = "Weighted";
})(PaymentStreamCompoundingAveragingMethod = exports.PaymentStreamCompoundingAveragingMethod || (exports.PaymentStreamCompoundingAveragingMethod = {}));
var PaymentStreamCompoundingNegativeRateTreatment;
(function (PaymentStreamCompoundingNegativeRateTreatment) {
    PaymentStreamCompoundingNegativeRateTreatment[PaymentStreamCompoundingNegativeRateTreatment["ZeroInterestRateMethod"] = 0] = "ZeroInterestRateMethod";
    PaymentStreamCompoundingNegativeRateTreatment[PaymentStreamCompoundingNegativeRateTreatment["NegativeInterestRateMethod"] = 1] = "NegativeInterestRateMethod";
})(PaymentStreamCompoundingNegativeRateTreatment = exports.PaymentStreamCompoundingNegativeRateTreatment || (exports.PaymentStreamCompoundingNegativeRateTreatment = {}));
var PaymentStreamCompoundingStartDateOffsetUnit;
(function (PaymentStreamCompoundingStartDateOffsetUnit) {
    PaymentStreamCompoundingStartDateOffsetUnit["Day"] = "D";
    PaymentStreamCompoundingStartDateOffsetUnit["Week"] = "Wk";
    PaymentStreamCompoundingStartDateOffsetUnit["Month"] = "Mo";
    PaymentStreamCompoundingStartDateOffsetUnit["Year"] = "Yr";
})(PaymentStreamCompoundingStartDateOffsetUnit = exports.PaymentStreamCompoundingStartDateOffsetUnit || (exports.PaymentStreamCompoundingStartDateOffsetUnit = {}));
var PaymentStreamCompoundingStartDateOffsetDayType;
(function (PaymentStreamCompoundingStartDateOffsetDayType) {
    PaymentStreamCompoundingStartDateOffsetDayType[PaymentStreamCompoundingStartDateOffsetDayType["Business"] = 0] = "Business";
    PaymentStreamCompoundingStartDateOffsetDayType[PaymentStreamCompoundingStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentStreamCompoundingStartDateOffsetDayType[PaymentStreamCompoundingStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStreamCompoundingStartDateOffsetDayType[PaymentStreamCompoundingStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStreamCompoundingStartDateOffsetDayType[PaymentStreamCompoundingStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStreamCompoundingStartDateOffsetDayType[PaymentStreamCompoundingStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStreamCompoundingStartDateOffsetDayType = exports.PaymentStreamCompoundingStartDateOffsetDayType || (exports.PaymentStreamCompoundingStartDateOffsetDayType = {}));
var PaymentStreamFinalPricePaymentDateOffsetUnit;
(function (PaymentStreamFinalPricePaymentDateOffsetUnit) {
    PaymentStreamFinalPricePaymentDateOffsetUnit["Day"] = "D";
    PaymentStreamFinalPricePaymentDateOffsetUnit["Week"] = "Wk";
    PaymentStreamFinalPricePaymentDateOffsetUnit["Month"] = "Mo";
    PaymentStreamFinalPricePaymentDateOffsetUnit["Year"] = "Yr";
})(PaymentStreamFinalPricePaymentDateOffsetUnit = exports.PaymentStreamFinalPricePaymentDateOffsetUnit || (exports.PaymentStreamFinalPricePaymentDateOffsetUnit = {}));
var PaymentStreamFinalPricePaymentDateOffsetDayType;
(function (PaymentStreamFinalPricePaymentDateOffsetDayType) {
    PaymentStreamFinalPricePaymentDateOffsetDayType[PaymentStreamFinalPricePaymentDateOffsetDayType["Business"] = 0] = "Business";
    PaymentStreamFinalPricePaymentDateOffsetDayType[PaymentStreamFinalPricePaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentStreamFinalPricePaymentDateOffsetDayType[PaymentStreamFinalPricePaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStreamFinalPricePaymentDateOffsetDayType[PaymentStreamFinalPricePaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStreamFinalPricePaymentDateOffsetDayType[PaymentStreamFinalPricePaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStreamFinalPricePaymentDateOffsetDayType[PaymentStreamFinalPricePaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStreamFinalPricePaymentDateOffsetDayType = exports.PaymentStreamFinalPricePaymentDateOffsetDayType || (exports.PaymentStreamFinalPricePaymentDateOffsetDayType = {}));
var PaymentStreamFixingDateType;
(function (PaymentStreamFixingDateType) {
    PaymentStreamFixingDateType[PaymentStreamFixingDateType["Unadjusted"] = 0] = "Unadjusted";
    PaymentStreamFixingDateType[PaymentStreamFixingDateType["Adjusted"] = 1] = "Adjusted";
})(PaymentStreamFixingDateType = exports.PaymentStreamFixingDateType || (exports.PaymentStreamFixingDateType = {}));
var PaymentStreamFirstObservationDateOffsetDayType;
(function (PaymentStreamFirstObservationDateOffsetDayType) {
    PaymentStreamFirstObservationDateOffsetDayType[PaymentStreamFirstObservationDateOffsetDayType["Business"] = 0] = "Business";
    PaymentStreamFirstObservationDateOffsetDayType[PaymentStreamFirstObservationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentStreamFirstObservationDateOffsetDayType[PaymentStreamFirstObservationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStreamFirstObservationDateOffsetDayType[PaymentStreamFirstObservationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStreamFirstObservationDateOffsetDayType[PaymentStreamFirstObservationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStreamFirstObservationDateOffsetDayType[PaymentStreamFirstObservationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStreamFirstObservationDateOffsetDayType = exports.PaymentStreamFirstObservationDateOffsetDayType || (exports.PaymentStreamFirstObservationDateOffsetDayType = {}));
var PaymentStreamLinkStrikePriceType;
(function (PaymentStreamLinkStrikePriceType) {
    PaymentStreamLinkStrikePriceType[PaymentStreamLinkStrikePriceType["Volatility"] = 0] = "Volatility";
    PaymentStreamLinkStrikePriceType[PaymentStreamLinkStrikePriceType["Variance"] = 1] = "Variance";
})(PaymentStreamLinkStrikePriceType = exports.PaymentStreamLinkStrikePriceType || (exports.PaymentStreamLinkStrikePriceType = {}));
var PaymentStreamRealizedVarianceMethod;
(function (PaymentStreamRealizedVarianceMethod) {
    PaymentStreamRealizedVarianceMethod[PaymentStreamRealizedVarianceMethod["Previous"] = 0] = "Previous";
    PaymentStreamRealizedVarianceMethod[PaymentStreamRealizedVarianceMethod["Last"] = 1] = "Last";
    PaymentStreamRealizedVarianceMethod[PaymentStreamRealizedVarianceMethod["Both"] = 2] = "Both";
})(PaymentStreamRealizedVarianceMethod = exports.PaymentStreamRealizedVarianceMethod || (exports.PaymentStreamRealizedVarianceMethod = {}));
var PaymentStubEndDateBusinessDayConvention;
(function (PaymentStubEndDateBusinessDayConvention) {
    PaymentStubEndDateBusinessDayConvention[PaymentStubEndDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    PaymentStubEndDateBusinessDayConvention[PaymentStubEndDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    PaymentStubEndDateBusinessDayConvention[PaymentStubEndDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    PaymentStubEndDateBusinessDayConvention[PaymentStubEndDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    PaymentStubEndDateBusinessDayConvention[PaymentStubEndDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    PaymentStubEndDateBusinessDayConvention[PaymentStubEndDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    PaymentStubEndDateBusinessDayConvention[PaymentStubEndDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    PaymentStubEndDateBusinessDayConvention[PaymentStubEndDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(PaymentStubEndDateBusinessDayConvention = exports.PaymentStubEndDateBusinessDayConvention || (exports.PaymentStubEndDateBusinessDayConvention = {}));
var PaymentStubEndDateOffsetUnit;
(function (PaymentStubEndDateOffsetUnit) {
    PaymentStubEndDateOffsetUnit["Day"] = "D";
    PaymentStubEndDateOffsetUnit["Week"] = "Wk";
    PaymentStubEndDateOffsetUnit["Month"] = "Mo";
    PaymentStubEndDateOffsetUnit["Year"] = "Yr";
})(PaymentStubEndDateOffsetUnit = exports.PaymentStubEndDateOffsetUnit || (exports.PaymentStubEndDateOffsetUnit = {}));
var PaymentStubEndDateOffsetDayType;
(function (PaymentStubEndDateOffsetDayType) {
    PaymentStubEndDateOffsetDayType[PaymentStubEndDateOffsetDayType["Business"] = 0] = "Business";
    PaymentStubEndDateOffsetDayType[PaymentStubEndDateOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentStubEndDateOffsetDayType[PaymentStubEndDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStubEndDateOffsetDayType[PaymentStubEndDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStubEndDateOffsetDayType[PaymentStubEndDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStubEndDateOffsetDayType[PaymentStubEndDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStubEndDateOffsetDayType = exports.PaymentStubEndDateOffsetDayType || (exports.PaymentStubEndDateOffsetDayType = {}));
var PaymentStubStartDateBusinessDayConvention;
(function (PaymentStubStartDateBusinessDayConvention) {
    PaymentStubStartDateBusinessDayConvention[PaymentStubStartDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    PaymentStubStartDateBusinessDayConvention[PaymentStubStartDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    PaymentStubStartDateBusinessDayConvention[PaymentStubStartDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    PaymentStubStartDateBusinessDayConvention[PaymentStubStartDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    PaymentStubStartDateBusinessDayConvention[PaymentStubStartDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    PaymentStubStartDateBusinessDayConvention[PaymentStubStartDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    PaymentStubStartDateBusinessDayConvention[PaymentStubStartDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    PaymentStubStartDateBusinessDayConvention[PaymentStubStartDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(PaymentStubStartDateBusinessDayConvention = exports.PaymentStubStartDateBusinessDayConvention || (exports.PaymentStubStartDateBusinessDayConvention = {}));
var PaymentStubStartDateOffsetUnit;
(function (PaymentStubStartDateOffsetUnit) {
    PaymentStubStartDateOffsetUnit["Day"] = "D";
    PaymentStubStartDateOffsetUnit["Week"] = "Wk";
    PaymentStubStartDateOffsetUnit["Month"] = "Mo";
    PaymentStubStartDateOffsetUnit["Year"] = "Yr";
})(PaymentStubStartDateOffsetUnit = exports.PaymentStubStartDateOffsetUnit || (exports.PaymentStubStartDateOffsetUnit = {}));
var PaymentStubStartDateOffsetDayType;
(function (PaymentStubStartDateOffsetDayType) {
    PaymentStubStartDateOffsetDayType[PaymentStubStartDateOffsetDayType["Business"] = 0] = "Business";
    PaymentStubStartDateOffsetDayType[PaymentStubStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    PaymentStubStartDateOffsetDayType[PaymentStubStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    PaymentStubStartDateOffsetDayType[PaymentStubStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    PaymentStubStartDateOffsetDayType[PaymentStubStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    PaymentStubStartDateOffsetDayType[PaymentStubStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(PaymentStubStartDateOffsetDayType = exports.PaymentStubStartDateOffsetDayType || (exports.PaymentStubStartDateOffsetDayType = {}));
var ProvisionBreakFeeElection;
(function (ProvisionBreakFeeElection) {
    ProvisionBreakFeeElection[ProvisionBreakFeeElection["FlatFee"] = 0] = "FlatFee";
    ProvisionBreakFeeElection[ProvisionBreakFeeElection["AmortizedFee"] = 1] = "AmortizedFee";
    ProvisionBreakFeeElection[ProvisionBreakFeeElection["FundingFee"] = 2] = "FundingFee";
    ProvisionBreakFeeElection[ProvisionBreakFeeElection["FlatFeeAndFundingFee"] = 3] = "FlatFeeAndFundingFee";
    ProvisionBreakFeeElection[ProvisionBreakFeeElection["AmortizedFeeAndFundingFee"] = 4] = "AmortizedFeeAndFundingFee";
})(ProvisionBreakFeeElection = exports.ProvisionBreakFeeElection || (exports.ProvisionBreakFeeElection = {}));
var ReturnRateDateMode;
(function (ReturnRateDateMode) {
    ReturnRateDateMode[ReturnRateDateMode["PriceValuation"] = 0] = "PriceValuation";
    ReturnRateDateMode[ReturnRateDateMode["DividendValuation"] = 1] = "DividendValuation";
})(ReturnRateDateMode = exports.ReturnRateDateMode || (exports.ReturnRateDateMode = {}));
var ReturnRateValuationDateOffsetUnit;
(function (ReturnRateValuationDateOffsetUnit) {
    ReturnRateValuationDateOffsetUnit["Day"] = "D";
    ReturnRateValuationDateOffsetUnit["Week"] = "Wk";
    ReturnRateValuationDateOffsetUnit["Month"] = "Mo";
    ReturnRateValuationDateOffsetUnit["Year"] = "Yr";
})(ReturnRateValuationDateOffsetUnit = exports.ReturnRateValuationDateOffsetUnit || (exports.ReturnRateValuationDateOffsetUnit = {}));
var ReturnRateValuationDateOffsetDayType;
(function (ReturnRateValuationDateOffsetDayType) {
    ReturnRateValuationDateOffsetDayType[ReturnRateValuationDateOffsetDayType["Business"] = 0] = "Business";
    ReturnRateValuationDateOffsetDayType[ReturnRateValuationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    ReturnRateValuationDateOffsetDayType[ReturnRateValuationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    ReturnRateValuationDateOffsetDayType[ReturnRateValuationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    ReturnRateValuationDateOffsetDayType[ReturnRateValuationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    ReturnRateValuationDateOffsetDayType[ReturnRateValuationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(ReturnRateValuationDateOffsetDayType = exports.ReturnRateValuationDateOffsetDayType || (exports.ReturnRateValuationDateOffsetDayType = {}));
var ReturnRateValuationStartDateOffsetUnit;
(function (ReturnRateValuationStartDateOffsetUnit) {
    ReturnRateValuationStartDateOffsetUnit["Day"] = "D";
    ReturnRateValuationStartDateOffsetUnit["Week"] = "Wk";
    ReturnRateValuationStartDateOffsetUnit["Month"] = "Mo";
    ReturnRateValuationStartDateOffsetUnit["Year"] = "Yr";
})(ReturnRateValuationStartDateOffsetUnit = exports.ReturnRateValuationStartDateOffsetUnit || (exports.ReturnRateValuationStartDateOffsetUnit = {}));
var ReturnRateValuationStartDateOffsetDayType;
(function (ReturnRateValuationStartDateOffsetDayType) {
    ReturnRateValuationStartDateOffsetDayType[ReturnRateValuationStartDateOffsetDayType["Business"] = 0] = "Business";
    ReturnRateValuationStartDateOffsetDayType[ReturnRateValuationStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    ReturnRateValuationStartDateOffsetDayType[ReturnRateValuationStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    ReturnRateValuationStartDateOffsetDayType[ReturnRateValuationStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    ReturnRateValuationStartDateOffsetDayType[ReturnRateValuationStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    ReturnRateValuationStartDateOffsetDayType[ReturnRateValuationStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(ReturnRateValuationStartDateOffsetDayType = exports.ReturnRateValuationStartDateOffsetDayType || (exports.ReturnRateValuationStartDateOffsetDayType = {}));
var ReturnRateValuationEndDateOffsetUnit;
(function (ReturnRateValuationEndDateOffsetUnit) {
    ReturnRateValuationEndDateOffsetUnit["Day"] = "D";
    ReturnRateValuationEndDateOffsetUnit["Week"] = "Wk";
    ReturnRateValuationEndDateOffsetUnit["Month"] = "Mo";
    ReturnRateValuationEndDateOffsetUnit["Year"] = "Yr";
})(ReturnRateValuationEndDateOffsetUnit = exports.ReturnRateValuationEndDateOffsetUnit || (exports.ReturnRateValuationEndDateOffsetUnit = {}));
var ReturnRateValuationEndDateOffsetDayType;
(function (ReturnRateValuationEndDateOffsetDayType) {
    ReturnRateValuationEndDateOffsetDayType[ReturnRateValuationEndDateOffsetDayType["Business"] = 0] = "Business";
    ReturnRateValuationEndDateOffsetDayType[ReturnRateValuationEndDateOffsetDayType["Calendar"] = 1] = "Calendar";
    ReturnRateValuationEndDateOffsetDayType[ReturnRateValuationEndDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    ReturnRateValuationEndDateOffsetDayType[ReturnRateValuationEndDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    ReturnRateValuationEndDateOffsetDayType[ReturnRateValuationEndDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    ReturnRateValuationEndDateOffsetDayType[ReturnRateValuationEndDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(ReturnRateValuationEndDateOffsetDayType = exports.ReturnRateValuationEndDateOffsetDayType || (exports.ReturnRateValuationEndDateOffsetDayType = {}));
var ReturnRateValuationFrequencyUnit;
(function (ReturnRateValuationFrequencyUnit) {
    ReturnRateValuationFrequencyUnit["Day"] = "D";
    ReturnRateValuationFrequencyUnit["Week"] = "Wk";
    ReturnRateValuationFrequencyUnit["Month"] = "Mo";
    ReturnRateValuationFrequencyUnit["Year"] = "Yr";
    ReturnRateValuationFrequencyUnit["Hour"] = "H";
    ReturnRateValuationFrequencyUnit["Minute"] = "Min";
    ReturnRateValuationFrequencyUnit["Second"] = "S";
    ReturnRateValuationFrequencyUnit["Term"] = "T";
})(ReturnRateValuationFrequencyUnit = exports.ReturnRateValuationFrequencyUnit || (exports.ReturnRateValuationFrequencyUnit = {}));
var ReturnRateValuationFrequencyRollConvention;
(function (ReturnRateValuationFrequencyRollConvention) {
    ReturnRateValuationFrequencyRollConvention["E1stDayOfTheMonth"] = "1";
    ReturnRateValuationFrequencyRollConvention["E2ndDayOfTheMonth"] = "2";
    ReturnRateValuationFrequencyRollConvention["E3rdDayOfTheMonth"] = "3";
    ReturnRateValuationFrequencyRollConvention["E4thDayOfTheMonth"] = "4";
    ReturnRateValuationFrequencyRollConvention["E5thDayOfTheMonth"] = "5";
    ReturnRateValuationFrequencyRollConvention["E6ThdDayOfTheMonth"] = "6";
    ReturnRateValuationFrequencyRollConvention["E7thDayOfTheMonth"] = "7";
    ReturnRateValuationFrequencyRollConvention["E8thDayOfTheMonth"] = "8";
    ReturnRateValuationFrequencyRollConvention["E9thDayOfTheMonth"] = "9";
    ReturnRateValuationFrequencyRollConvention["E10thDayOfTheMonth"] = "10";
    ReturnRateValuationFrequencyRollConvention["E11ThDayOfTheMonth"] = "11";
    ReturnRateValuationFrequencyRollConvention["E12ThDayOfTheMonth"] = "12";
    ReturnRateValuationFrequencyRollConvention["E13ThDayOfTheMonth"] = "13";
    ReturnRateValuationFrequencyRollConvention["E14thDayOfTheMonth"] = "14";
    ReturnRateValuationFrequencyRollConvention["E15thDayOfTheMonth"] = "15";
    ReturnRateValuationFrequencyRollConvention["E16thDayOfTheMonth"] = "16";
    ReturnRateValuationFrequencyRollConvention["E17thDayOfTheMonth"] = "17";
    ReturnRateValuationFrequencyRollConvention["E18thDayOfTheMonth"] = "18";
    ReturnRateValuationFrequencyRollConvention["E19thDayOfTheMonth"] = "19";
    ReturnRateValuationFrequencyRollConvention["E20thDayOfTheMonth"] = "20";
    ReturnRateValuationFrequencyRollConvention["E21stDayOfTheMonth"] = "21";
    ReturnRateValuationFrequencyRollConvention["E22ndDayOfTheMonth"] = "22";
    ReturnRateValuationFrequencyRollConvention["E23rdDayOfTheMonth"] = "23";
    ReturnRateValuationFrequencyRollConvention["E24thDayOfTheMonth"] = "24";
    ReturnRateValuationFrequencyRollConvention["E25thDayOfTheMonth"] = "25";
    ReturnRateValuationFrequencyRollConvention["E26thDayOfTheMonth"] = "26";
    ReturnRateValuationFrequencyRollConvention["E27thDayOfTheMonth"] = "27";
    ReturnRateValuationFrequencyRollConvention["E28thDayOfTheMonth"] = "28";
    ReturnRateValuationFrequencyRollConvention["E29thDayOfTheMonth"] = "29";
    ReturnRateValuationFrequencyRollConvention["E30thDayOfTheMonth"] = "30";
    ReturnRateValuationFrequencyRollConvention["TheEndOfTheMonth"] = "EOM";
    ReturnRateValuationFrequencyRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    ReturnRateValuationFrequencyRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    ReturnRateValuationFrequencyRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    ReturnRateValuationFrequencyRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    ReturnRateValuationFrequencyRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    ReturnRateValuationFrequencyRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    ReturnRateValuationFrequencyRollConvention["NoAdjustment"] = "NONE";
    ReturnRateValuationFrequencyRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    ReturnRateValuationFrequencyRollConvention["Monday"] = "MON";
    ReturnRateValuationFrequencyRollConvention["Tuesday"] = "TUE";
    ReturnRateValuationFrequencyRollConvention["Wednesday"] = "WED";
    ReturnRateValuationFrequencyRollConvention["Thursday"] = "THU";
    ReturnRateValuationFrequencyRollConvention["Friday"] = "FRI";
    ReturnRateValuationFrequencyRollConvention["Saturday"] = "SAT";
    ReturnRateValuationFrequencyRollConvention["Sunday"] = "SUN";
})(ReturnRateValuationFrequencyRollConvention = exports.ReturnRateValuationFrequencyRollConvention || (exports.ReturnRateValuationFrequencyRollConvention = {}));
var ReturnRateValuationDateBusinessDayConvention;
(function (ReturnRateValuationDateBusinessDayConvention) {
    ReturnRateValuationDateBusinessDayConvention[ReturnRateValuationDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    ReturnRateValuationDateBusinessDayConvention[ReturnRateValuationDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    ReturnRateValuationDateBusinessDayConvention[ReturnRateValuationDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    ReturnRateValuationDateBusinessDayConvention[ReturnRateValuationDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    ReturnRateValuationDateBusinessDayConvention[ReturnRateValuationDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    ReturnRateValuationDateBusinessDayConvention[ReturnRateValuationDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    ReturnRateValuationDateBusinessDayConvention[ReturnRateValuationDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    ReturnRateValuationDateBusinessDayConvention[ReturnRateValuationDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(ReturnRateValuationDateBusinessDayConvention = exports.ReturnRateValuationDateBusinessDayConvention || (exports.ReturnRateValuationDateBusinessDayConvention = {}));
var ReturnRateFXRateCalc;
(function (ReturnRateFXRateCalc) {
    ReturnRateFXRateCalc["Multiply"] = "M";
    ReturnRateFXRateCalc["Divide"] = "D";
})(ReturnRateFXRateCalc = exports.ReturnRateFXRateCalc || (exports.ReturnRateFXRateCalc = {}));
var ReturnRatePriceSequence;
(function (ReturnRatePriceSequence) {
    ReturnRatePriceSequence[ReturnRatePriceSequence["Initial"] = 0] = "Initial";
    ReturnRatePriceSequence[ReturnRatePriceSequence["Interim"] = 1] = "Interim";
    ReturnRatePriceSequence[ReturnRatePriceSequence["Final"] = 2] = "Final";
})(ReturnRatePriceSequence = exports.ReturnRatePriceSequence || (exports.ReturnRatePriceSequence = {}));
var ReturnRateCommissionBasis;
(function (ReturnRateCommissionBasis) {
    ReturnRateCommissionBasis["AmountPerUnit"] = "1";
    ReturnRateCommissionBasis["Percent"] = "2";
    ReturnRateCommissionBasis["Absolute"] = "3";
    ReturnRateCommissionBasis["PercentageWaivedCashDiscountBasis"] = "4";
    ReturnRateCommissionBasis["PercentageWaivedEnhancedUnitsBasis"] = "5";
    ReturnRateCommissionBasis["PointsPerBondOrContract"] = "6";
    ReturnRateCommissionBasis["BasisPoints"] = "7";
    ReturnRateCommissionBasis["AmountPerContract"] = "8";
})(ReturnRateCommissionBasis = exports.ReturnRateCommissionBasis || (exports.ReturnRateCommissionBasis = {}));
var ReturnRateQuoteMethod;
(function (ReturnRateQuoteMethod) {
    ReturnRateQuoteMethod[ReturnRateQuoteMethod["Bid"] = 0] = "Bid";
    ReturnRateQuoteMethod[ReturnRateQuoteMethod["Mid"] = 1] = "Mid";
    ReturnRateQuoteMethod[ReturnRateQuoteMethod["Offer"] = 2] = "Offer";
})(ReturnRateQuoteMethod = exports.ReturnRateQuoteMethod || (exports.ReturnRateQuoteMethod = {}));
var ReturnRateQuoteTimeType;
(function (ReturnRateQuoteTimeType) {
    ReturnRateQuoteTimeType[ReturnRateQuoteTimeType["Open"] = 0] = "Open";
    ReturnRateQuoteTimeType[ReturnRateQuoteTimeType["OfficialSettlementPriceTime"] = 1] = "OfficialSettlementPriceTime";
    ReturnRateQuoteTimeType[ReturnRateQuoteTimeType["Xetra"] = 2] = "Xetra";
    ReturnRateQuoteTimeType[ReturnRateQuoteTimeType["Close"] = 3] = "Close";
    ReturnRateQuoteTimeType[ReturnRateQuoteTimeType["DerivativesClose"] = 4] = "DerivativesClose";
    ReturnRateQuoteTimeType[ReturnRateQuoteTimeType["High"] = 5] = "High";
    ReturnRateQuoteTimeType[ReturnRateQuoteTimeType["Low"] = 6] = "Low";
    ReturnRateQuoteTimeType[ReturnRateQuoteTimeType["AsSpecifiedInTheMasterConfirmation"] = 7] = "AsSpecifiedInTheMasterConfirmation";
})(ReturnRateQuoteTimeType = exports.ReturnRateQuoteTimeType || (exports.ReturnRateQuoteTimeType = {}));
var ReturnRateValuationTimeType;
(function (ReturnRateValuationTimeType) {
    ReturnRateValuationTimeType[ReturnRateValuationTimeType["Open"] = 0] = "Open";
    ReturnRateValuationTimeType[ReturnRateValuationTimeType["OfficialSettlementPriceTime"] = 1] = "OfficialSettlementPriceTime";
    ReturnRateValuationTimeType[ReturnRateValuationTimeType["Xetra"] = 2] = "Xetra";
    ReturnRateValuationTimeType[ReturnRateValuationTimeType["Close"] = 3] = "Close";
    ReturnRateValuationTimeType[ReturnRateValuationTimeType["DerivativesClose"] = 4] = "DerivativesClose";
    ReturnRateValuationTimeType[ReturnRateValuationTimeType["High"] = 5] = "High";
    ReturnRateValuationTimeType[ReturnRateValuationTimeType["Low"] = 6] = "Low";
    ReturnRateValuationTimeType[ReturnRateValuationTimeType["AsSpecifiedInTheMasterConfirmation"] = 7] = "AsSpecifiedInTheMasterConfirmation";
})(ReturnRateValuationTimeType = exports.ReturnRateValuationTimeType || (exports.ReturnRateValuationTimeType = {}));
var ReturnRateValuationPriceOption;
(function (ReturnRateValuationPriceOption) {
    ReturnRateValuationPriceOption[ReturnRateValuationPriceOption["NoneTheDefault"] = 0] = "NoneTheDefault";
    ReturnRateValuationPriceOption[ReturnRateValuationPriceOption["FuturesPrice"] = 1] = "FuturesPrice";
    ReturnRateValuationPriceOption[ReturnRateValuationPriceOption["OptionsPrice"] = 2] = "OptionsPrice";
})(ReturnRateValuationPriceOption = exports.ReturnRateValuationPriceOption || (exports.ReturnRateValuationPriceOption = {}));
var ReturnRateFinalPriceFallback;
(function (ReturnRateFinalPriceFallback) {
    ReturnRateFinalPriceFallback[ReturnRateFinalPriceFallback["Close"] = 0] = "Close";
    ReturnRateFinalPriceFallback[ReturnRateFinalPriceFallback["HedgeElection"] = 1] = "HedgeElection";
})(ReturnRateFinalPriceFallback = exports.ReturnRateFinalPriceFallback || (exports.ReturnRateFinalPriceFallback = {}));
var ReturnRateInformationSource;
(function (ReturnRateInformationSource) {
    ReturnRateInformationSource[ReturnRateInformationSource["Bloomberg"] = 0] = "Bloomberg";
    ReturnRateInformationSource[ReturnRateInformationSource["Reuters"] = 1] = "Reuters";
    ReturnRateInformationSource[ReturnRateInformationSource["Telerate"] = 2] = "Telerate";
    ReturnRateInformationSource[ReturnRateInformationSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    ReturnRateInformationSource[ReturnRateInformationSource["Other"] = 99] = "Other";
})(ReturnRateInformationSource = exports.ReturnRateInformationSource || (exports.ReturnRateInformationSource = {}));
var ReturnRatePriceBasis;
(function (ReturnRatePriceBasis) {
    ReturnRatePriceBasis[ReturnRatePriceBasis["Gross"] = 0] = "Gross";
    ReturnRatePriceBasis[ReturnRatePriceBasis["Net"] = 1] = "Net";
    ReturnRatePriceBasis[ReturnRatePriceBasis["Accrued"] = 2] = "Accrued";
    ReturnRatePriceBasis[ReturnRatePriceBasis["CleanNet"] = 3] = "CleanNet";
})(ReturnRatePriceBasis = exports.ReturnRatePriceBasis || (exports.ReturnRatePriceBasis = {}));
var ReturnRatePriceType;
(function (ReturnRatePriceType) {
    ReturnRatePriceType[ReturnRatePriceType["AbsoluteTerms"] = 0] = "AbsoluteTerms";
    ReturnRatePriceType[ReturnRatePriceType["PercentageOfNotional"] = 1] = "PercentageOfNotional";
})(ReturnRatePriceType = exports.ReturnRatePriceType || (exports.ReturnRatePriceType = {}));
var ReturnRateValuationDateType;
(function (ReturnRateValuationDateType) {
    ReturnRateValuationDateType[ReturnRateValuationDateType["Unadjusted"] = 0] = "Unadjusted";
    ReturnRateValuationDateType[ReturnRateValuationDateType["Adjusted"] = 1] = "Adjusted";
})(ReturnRateValuationDateType = exports.ReturnRateValuationDateType || (exports.ReturnRateValuationDateType = {}));
var SettlMethodElectionDateBusinessDayConvention;
(function (SettlMethodElectionDateBusinessDayConvention) {
    SettlMethodElectionDateBusinessDayConvention[SettlMethodElectionDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    SettlMethodElectionDateBusinessDayConvention[SettlMethodElectionDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    SettlMethodElectionDateBusinessDayConvention[SettlMethodElectionDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    SettlMethodElectionDateBusinessDayConvention[SettlMethodElectionDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    SettlMethodElectionDateBusinessDayConvention[SettlMethodElectionDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    SettlMethodElectionDateBusinessDayConvention[SettlMethodElectionDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    SettlMethodElectionDateBusinessDayConvention[SettlMethodElectionDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    SettlMethodElectionDateBusinessDayConvention[SettlMethodElectionDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(SettlMethodElectionDateBusinessDayConvention = exports.SettlMethodElectionDateBusinessDayConvention || (exports.SettlMethodElectionDateBusinessDayConvention = {}));
var SettlMethodElectionDateOffsetUnit;
(function (SettlMethodElectionDateOffsetUnit) {
    SettlMethodElectionDateOffsetUnit["Day"] = "D";
    SettlMethodElectionDateOffsetUnit["Week"] = "Wk";
    SettlMethodElectionDateOffsetUnit["Month"] = "Mo";
    SettlMethodElectionDateOffsetUnit["Year"] = "Yr";
})(SettlMethodElectionDateOffsetUnit = exports.SettlMethodElectionDateOffsetUnit || (exports.SettlMethodElectionDateOffsetUnit = {}));
var SettlMethodElectionDateOffsetDayType;
(function (SettlMethodElectionDateOffsetDayType) {
    SettlMethodElectionDateOffsetDayType[SettlMethodElectionDateOffsetDayType["Business"] = 0] = "Business";
    SettlMethodElectionDateOffsetDayType[SettlMethodElectionDateOffsetDayType["Calendar"] = 1] = "Calendar";
    SettlMethodElectionDateOffsetDayType[SettlMethodElectionDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    SettlMethodElectionDateOffsetDayType[SettlMethodElectionDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    SettlMethodElectionDateOffsetDayType[SettlMethodElectionDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    SettlMethodElectionDateOffsetDayType[SettlMethodElectionDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(SettlMethodElectionDateOffsetDayType = exports.SettlMethodElectionDateOffsetDayType || (exports.SettlMethodElectionDateOffsetDayType = {}));
var StreamNotionalAdjustments;
(function (StreamNotionalAdjustments) {
    StreamNotionalAdjustments[StreamNotionalAdjustments["Execution"] = 0] = "Execution";
    StreamNotionalAdjustments[StreamNotionalAdjustments["PortfolioRebalancing"] = 1] = "PortfolioRebalancing";
    StreamNotionalAdjustments[StreamNotionalAdjustments["Standard"] = 2] = "Standard";
})(StreamNotionalAdjustments = exports.StreamNotionalAdjustments || (exports.StreamNotionalAdjustments = {}));
var UnderlyingCashSettlDateBusinessDayConvention;
(function (UnderlyingCashSettlDateBusinessDayConvention) {
    UnderlyingCashSettlDateBusinessDayConvention[UnderlyingCashSettlDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingCashSettlDateBusinessDayConvention[UnderlyingCashSettlDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingCashSettlDateBusinessDayConvention[UnderlyingCashSettlDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingCashSettlDateBusinessDayConvention[UnderlyingCashSettlDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingCashSettlDateBusinessDayConvention[UnderlyingCashSettlDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingCashSettlDateBusinessDayConvention[UnderlyingCashSettlDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingCashSettlDateBusinessDayConvention[UnderlyingCashSettlDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingCashSettlDateBusinessDayConvention[UnderlyingCashSettlDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingCashSettlDateBusinessDayConvention = exports.UnderlyingCashSettlDateBusinessDayConvention || (exports.UnderlyingCashSettlDateBusinessDayConvention = {}));
var UnderlyingCashSettlDateOffsetUnit;
(function (UnderlyingCashSettlDateOffsetUnit) {
    UnderlyingCashSettlDateOffsetUnit["Day"] = "D";
    UnderlyingCashSettlDateOffsetUnit["Week"] = "Wk";
    UnderlyingCashSettlDateOffsetUnit["Month"] = "Mo";
    UnderlyingCashSettlDateOffsetUnit["Year"] = "Yr";
})(UnderlyingCashSettlDateOffsetUnit = exports.UnderlyingCashSettlDateOffsetUnit || (exports.UnderlyingCashSettlDateOffsetUnit = {}));
var UnderlyingCashSettlDateOffsetDayType;
(function (UnderlyingCashSettlDateOffsetDayType) {
    UnderlyingCashSettlDateOffsetDayType[UnderlyingCashSettlDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingCashSettlDateOffsetDayType[UnderlyingCashSettlDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingCashSettlDateOffsetDayType[UnderlyingCashSettlDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingCashSettlDateOffsetDayType[UnderlyingCashSettlDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingCashSettlDateOffsetDayType[UnderlyingCashSettlDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingCashSettlDateOffsetDayType[UnderlyingCashSettlDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingCashSettlDateOffsetDayType = exports.UnderlyingCashSettlDateOffsetDayType || (exports.UnderlyingCashSettlDateOffsetDayType = {}));
var UnderlyingCashSettlPriceDefault;
(function (UnderlyingCashSettlPriceDefault) {
    UnderlyingCashSettlPriceDefault[UnderlyingCashSettlPriceDefault["Close"] = 0] = "Close";
    UnderlyingCashSettlPriceDefault[UnderlyingCashSettlPriceDefault["Hedge"] = 1] = "Hedge";
})(UnderlyingCashSettlPriceDefault = exports.UnderlyingCashSettlPriceDefault || (exports.UnderlyingCashSettlPriceDefault = {}));
var UnderlyingDividendFloatingRateIndexCurveUnit;
(function (UnderlyingDividendFloatingRateIndexCurveUnit) {
    UnderlyingDividendFloatingRateIndexCurveUnit["Day"] = "D";
    UnderlyingDividendFloatingRateIndexCurveUnit["Week"] = "Wk";
    UnderlyingDividendFloatingRateIndexCurveUnit["Month"] = "Mo";
    UnderlyingDividendFloatingRateIndexCurveUnit["Year"] = "Yr";
})(UnderlyingDividendFloatingRateIndexCurveUnit = exports.UnderlyingDividendFloatingRateIndexCurveUnit || (exports.UnderlyingDividendFloatingRateIndexCurveUnit = {}));
var UnderlyingDividendFloatingRateSpreadPositionType;
(function (UnderlyingDividendFloatingRateSpreadPositionType) {
    UnderlyingDividendFloatingRateSpreadPositionType[UnderlyingDividendFloatingRateSpreadPositionType["Short"] = 0] = "Short";
    UnderlyingDividendFloatingRateSpreadPositionType[UnderlyingDividendFloatingRateSpreadPositionType["Long"] = 1] = "Long";
})(UnderlyingDividendFloatingRateSpreadPositionType = exports.UnderlyingDividendFloatingRateSpreadPositionType || (exports.UnderlyingDividendFloatingRateSpreadPositionType = {}));
var UnderlyingDividendFloatingRateTreatment;
(function (UnderlyingDividendFloatingRateTreatment) {
    UnderlyingDividendFloatingRateTreatment[UnderlyingDividendFloatingRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    UnderlyingDividendFloatingRateTreatment[UnderlyingDividendFloatingRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(UnderlyingDividendFloatingRateTreatment = exports.UnderlyingDividendFloatingRateTreatment || (exports.UnderlyingDividendFloatingRateTreatment = {}));
var UnderlyingDividendCapRateBuySide;
(function (UnderlyingDividendCapRateBuySide) {
    UnderlyingDividendCapRateBuySide[UnderlyingDividendCapRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingDividendCapRateBuySide[UnderlyingDividendCapRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingDividendCapRateBuySide = exports.UnderlyingDividendCapRateBuySide || (exports.UnderlyingDividendCapRateBuySide = {}));
var UnderlyingDividendCapRateSellSide;
(function (UnderlyingDividendCapRateSellSide) {
    UnderlyingDividendCapRateSellSide[UnderlyingDividendCapRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingDividendCapRateSellSide[UnderlyingDividendCapRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingDividendCapRateSellSide = exports.UnderlyingDividendCapRateSellSide || (exports.UnderlyingDividendCapRateSellSide = {}));
var UnderlyingDividendFloorRateBuySide;
(function (UnderlyingDividendFloorRateBuySide) {
    UnderlyingDividendFloorRateBuySide[UnderlyingDividendFloorRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingDividendFloorRateBuySide[UnderlyingDividendFloorRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingDividendFloorRateBuySide = exports.UnderlyingDividendFloorRateBuySide || (exports.UnderlyingDividendFloorRateBuySide = {}));
var UnderlyingDividendFloorRateSellSide;
(function (UnderlyingDividendFloorRateSellSide) {
    UnderlyingDividendFloorRateSellSide[UnderlyingDividendFloorRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingDividendFloorRateSellSide[UnderlyingDividendFloorRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingDividendFloorRateSellSide = exports.UnderlyingDividendFloorRateSellSide || (exports.UnderlyingDividendFloorRateSellSide = {}));
var UnderlyingDividendFinalRateRoundingDirection;
(function (UnderlyingDividendFinalRateRoundingDirection) {
    UnderlyingDividendFinalRateRoundingDirection["RoundToNearest"] = "0";
    UnderlyingDividendFinalRateRoundingDirection["RoundDown"] = "1";
    UnderlyingDividendFinalRateRoundingDirection["RoundUp"] = "2";
})(UnderlyingDividendFinalRateRoundingDirection = exports.UnderlyingDividendFinalRateRoundingDirection || (exports.UnderlyingDividendFinalRateRoundingDirection = {}));
var UnderlyingDividendAveragingMethod;
(function (UnderlyingDividendAveragingMethod) {
    UnderlyingDividendAveragingMethod[UnderlyingDividendAveragingMethod["Unweighted"] = 0] = "Unweighted";
    UnderlyingDividendAveragingMethod[UnderlyingDividendAveragingMethod["Weighted"] = 1] = "Weighted";
})(UnderlyingDividendAveragingMethod = exports.UnderlyingDividendAveragingMethod || (exports.UnderlyingDividendAveragingMethod = {}));
var UnderlyingDividendNegativeRateTreatment;
(function (UnderlyingDividendNegativeRateTreatment) {
    UnderlyingDividendNegativeRateTreatment[UnderlyingDividendNegativeRateTreatment["ZeroInterestRateMethod"] = 0] = "ZeroInterestRateMethod";
    UnderlyingDividendNegativeRateTreatment[UnderlyingDividendNegativeRateTreatment["NegativeInterestRateMethod"] = 1] = "NegativeInterestRateMethod";
})(UnderlyingDividendNegativeRateTreatment = exports.UnderlyingDividendNegativeRateTreatment || (exports.UnderlyingDividendNegativeRateTreatment = {}));
var UnderlyingDividendAccrualPaymentDateOffsetUnit;
(function (UnderlyingDividendAccrualPaymentDateOffsetUnit) {
    UnderlyingDividendAccrualPaymentDateOffsetUnit["Day"] = "D";
    UnderlyingDividendAccrualPaymentDateOffsetUnit["Week"] = "Wk";
    UnderlyingDividendAccrualPaymentDateOffsetUnit["Month"] = "Mo";
    UnderlyingDividendAccrualPaymentDateOffsetUnit["Year"] = "Yr";
})(UnderlyingDividendAccrualPaymentDateOffsetUnit = exports.UnderlyingDividendAccrualPaymentDateOffsetUnit || (exports.UnderlyingDividendAccrualPaymentDateOffsetUnit = {}));
var UnderlyingDividendAccrualPaymentDateOffsetDayType;
(function (UnderlyingDividendAccrualPaymentDateOffsetDayType) {
    UnderlyingDividendAccrualPaymentDateOffsetDayType[UnderlyingDividendAccrualPaymentDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingDividendAccrualPaymentDateOffsetDayType[UnderlyingDividendAccrualPaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingDividendAccrualPaymentDateOffsetDayType[UnderlyingDividendAccrualPaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingDividendAccrualPaymentDateOffsetDayType[UnderlyingDividendAccrualPaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingDividendAccrualPaymentDateOffsetDayType[UnderlyingDividendAccrualPaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingDividendAccrualPaymentDateOffsetDayType[UnderlyingDividendAccrualPaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingDividendAccrualPaymentDateOffsetDayType = exports.UnderlyingDividendAccrualPaymentDateOffsetDayType || (exports.UnderlyingDividendAccrualPaymentDateOffsetDayType = {}));
var UnderlyingDividendAccrualPaymentDateBusinessDayConvention;
(function (UnderlyingDividendAccrualPaymentDateBusinessDayConvention) {
    UnderlyingDividendAccrualPaymentDateBusinessDayConvention[UnderlyingDividendAccrualPaymentDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingDividendAccrualPaymentDateBusinessDayConvention[UnderlyingDividendAccrualPaymentDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingDividendAccrualPaymentDateBusinessDayConvention[UnderlyingDividendAccrualPaymentDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingDividendAccrualPaymentDateBusinessDayConvention[UnderlyingDividendAccrualPaymentDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingDividendAccrualPaymentDateBusinessDayConvention[UnderlyingDividendAccrualPaymentDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingDividendAccrualPaymentDateBusinessDayConvention[UnderlyingDividendAccrualPaymentDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingDividendAccrualPaymentDateBusinessDayConvention[UnderlyingDividendAccrualPaymentDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingDividendAccrualPaymentDateBusinessDayConvention[UnderlyingDividendAccrualPaymentDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingDividendAccrualPaymentDateBusinessDayConvention = exports.UnderlyingDividendAccrualPaymentDateBusinessDayConvention || (exports.UnderlyingDividendAccrualPaymentDateBusinessDayConvention = {}));
var UnderlyingDividendEntitlementEvent;
(function (UnderlyingDividendEntitlementEvent) {
    UnderlyingDividendEntitlementEvent[UnderlyingDividendEntitlementEvent["ExDate"] = 0] = "ExDate";
    UnderlyingDividendEntitlementEvent[UnderlyingDividendEntitlementEvent["RecordDate"] = 1] = "RecordDate";
})(UnderlyingDividendEntitlementEvent = exports.UnderlyingDividendEntitlementEvent || (exports.UnderlyingDividendEntitlementEvent = {}));
var UnderlyingDividendAmountType;
(function (UnderlyingDividendAmountType) {
    UnderlyingDividendAmountType[UnderlyingDividendAmountType["RecordAmount"] = 0] = "RecordAmount";
    UnderlyingDividendAmountType[UnderlyingDividendAmountType["ExAmount"] = 1] = "ExAmount";
    UnderlyingDividendAmountType[UnderlyingDividendAmountType["PaidAmount"] = 2] = "PaidAmount";
    UnderlyingDividendAmountType[UnderlyingDividendAmountType["AsSpecifiedInMasterConfirmation"] = 3] = "AsSpecifiedInMasterConfirmation";
})(UnderlyingDividendAmountType = exports.UnderlyingDividendAmountType || (exports.UnderlyingDividendAmountType = {}));
var UnderlyingExtraordinaryDividendPartySide;
(function (UnderlyingExtraordinaryDividendPartySide) {
    UnderlyingExtraordinaryDividendPartySide[UnderlyingExtraordinaryDividendPartySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingExtraordinaryDividendPartySide[UnderlyingExtraordinaryDividendPartySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingExtraordinaryDividendPartySide = exports.UnderlyingExtraordinaryDividendPartySide || (exports.UnderlyingExtraordinaryDividendPartySide = {}));
var UnderlyingExtraordinaryDividendAmountType;
(function (UnderlyingExtraordinaryDividendAmountType) {
    UnderlyingExtraordinaryDividendAmountType[UnderlyingExtraordinaryDividendAmountType["RecordAmount"] = 0] = "RecordAmount";
    UnderlyingExtraordinaryDividendAmountType[UnderlyingExtraordinaryDividendAmountType["ExAmount"] = 1] = "ExAmount";
    UnderlyingExtraordinaryDividendAmountType[UnderlyingExtraordinaryDividendAmountType["PaidAmount"] = 2] = "PaidAmount";
    UnderlyingExtraordinaryDividendAmountType[UnderlyingExtraordinaryDividendAmountType["AsSpecifiedInMasterConfirmation"] = 3] = "AsSpecifiedInMasterConfirmation";
})(UnderlyingExtraordinaryDividendAmountType = exports.UnderlyingExtraordinaryDividendAmountType || (exports.UnderlyingExtraordinaryDividendAmountType = {}));
var UnderlyingDividendCompoundingMethod;
(function (UnderlyingDividendCompoundingMethod) {
    UnderlyingDividendCompoundingMethod[UnderlyingDividendCompoundingMethod["None"] = 0] = "None";
    UnderlyingDividendCompoundingMethod[UnderlyingDividendCompoundingMethod["Flat"] = 1] = "Flat";
    UnderlyingDividendCompoundingMethod[UnderlyingDividendCompoundingMethod["Straight"] = 2] = "Straight";
    UnderlyingDividendCompoundingMethod[UnderlyingDividendCompoundingMethod["SpreadExclusive"] = 3] = "SpreadExclusive";
})(UnderlyingDividendCompoundingMethod = exports.UnderlyingDividendCompoundingMethod || (exports.UnderlyingDividendCompoundingMethod = {}));
var UnderlyingNonCashDividendTreatment;
(function (UnderlyingNonCashDividendTreatment) {
    UnderlyingNonCashDividendTreatment[UnderlyingNonCashDividendTreatment["PotentialAdjustmentEvent"] = 0] = "PotentialAdjustmentEvent";
    UnderlyingNonCashDividendTreatment[UnderlyingNonCashDividendTreatment["CashEquivalent"] = 1] = "CashEquivalent";
})(UnderlyingNonCashDividendTreatment = exports.UnderlyingNonCashDividendTreatment || (exports.UnderlyingNonCashDividendTreatment = {}));
var UnderlyingDividendComposition;
(function (UnderlyingDividendComposition) {
    UnderlyingDividendComposition[UnderlyingDividendComposition["EquityAmountReceiverElection"] = 0] = "EquityAmountReceiverElection";
    UnderlyingDividendComposition[UnderlyingDividendComposition["CalculationAgentElection"] = 1] = "CalculationAgentElection";
})(UnderlyingDividendComposition = exports.UnderlyingDividendComposition || (exports.UnderlyingDividendComposition = {}));
var UnderlyingDividendFXTriggerDateOffsetUnit;
(function (UnderlyingDividendFXTriggerDateOffsetUnit) {
    UnderlyingDividendFXTriggerDateOffsetUnit["Day"] = "D";
    UnderlyingDividendFXTriggerDateOffsetUnit["Week"] = "Wk";
    UnderlyingDividendFXTriggerDateOffsetUnit["Month"] = "Mo";
    UnderlyingDividendFXTriggerDateOffsetUnit["Year"] = "Yr";
})(UnderlyingDividendFXTriggerDateOffsetUnit = exports.UnderlyingDividendFXTriggerDateOffsetUnit || (exports.UnderlyingDividendFXTriggerDateOffsetUnit = {}));
var UnderlyingDividendFXTriggerDateOffsetDayType;
(function (UnderlyingDividendFXTriggerDateOffsetDayType) {
    UnderlyingDividendFXTriggerDateOffsetDayType[UnderlyingDividendFXTriggerDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingDividendFXTriggerDateOffsetDayType[UnderlyingDividendFXTriggerDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingDividendFXTriggerDateOffsetDayType[UnderlyingDividendFXTriggerDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingDividendFXTriggerDateOffsetDayType[UnderlyingDividendFXTriggerDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingDividendFXTriggerDateOffsetDayType[UnderlyingDividendFXTriggerDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingDividendFXTriggerDateOffsetDayType[UnderlyingDividendFXTriggerDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingDividendFXTriggerDateOffsetDayType = exports.UnderlyingDividendFXTriggerDateOffsetDayType || (exports.UnderlyingDividendFXTriggerDateOffsetDayType = {}));
var UnderlyingDividendFXTriggerDateBusinessDayConvention;
(function (UnderlyingDividendFXTriggerDateBusinessDayConvention) {
    UnderlyingDividendFXTriggerDateBusinessDayConvention[UnderlyingDividendFXTriggerDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingDividendFXTriggerDateBusinessDayConvention[UnderlyingDividendFXTriggerDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingDividendFXTriggerDateBusinessDayConvention[UnderlyingDividendFXTriggerDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingDividendFXTriggerDateBusinessDayConvention[UnderlyingDividendFXTriggerDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingDividendFXTriggerDateBusinessDayConvention[UnderlyingDividendFXTriggerDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingDividendFXTriggerDateBusinessDayConvention[UnderlyingDividendFXTriggerDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingDividendFXTriggerDateBusinessDayConvention[UnderlyingDividendFXTriggerDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingDividendFXTriggerDateBusinessDayConvention[UnderlyingDividendFXTriggerDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingDividendFXTriggerDateBusinessDayConvention = exports.UnderlyingDividendFXTriggerDateBusinessDayConvention || (exports.UnderlyingDividendFXTriggerDateBusinessDayConvention = {}));
var UnderlyingDividendPeriodBusinessDayConvention;
(function (UnderlyingDividendPeriodBusinessDayConvention) {
    UnderlyingDividendPeriodBusinessDayConvention[UnderlyingDividendPeriodBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingDividendPeriodBusinessDayConvention[UnderlyingDividendPeriodBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingDividendPeriodBusinessDayConvention[UnderlyingDividendPeriodBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingDividendPeriodBusinessDayConvention[UnderlyingDividendPeriodBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingDividendPeriodBusinessDayConvention[UnderlyingDividendPeriodBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingDividendPeriodBusinessDayConvention[UnderlyingDividendPeriodBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingDividendPeriodBusinessDayConvention[UnderlyingDividendPeriodBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingDividendPeriodBusinessDayConvention[UnderlyingDividendPeriodBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingDividendPeriodBusinessDayConvention = exports.UnderlyingDividendPeriodBusinessDayConvention || (exports.UnderlyingDividendPeriodBusinessDayConvention = {}));
var UnderlyingDividendPeriodValuationDateOffsetUnit;
(function (UnderlyingDividendPeriodValuationDateOffsetUnit) {
    UnderlyingDividendPeriodValuationDateOffsetUnit["Day"] = "D";
    UnderlyingDividendPeriodValuationDateOffsetUnit["Week"] = "Wk";
    UnderlyingDividendPeriodValuationDateOffsetUnit["Month"] = "Mo";
    UnderlyingDividendPeriodValuationDateOffsetUnit["Year"] = "Yr";
})(UnderlyingDividendPeriodValuationDateOffsetUnit = exports.UnderlyingDividendPeriodValuationDateOffsetUnit || (exports.UnderlyingDividendPeriodValuationDateOffsetUnit = {}));
var UnderlyingDividendPeriodValuationDateOffsetDayType;
(function (UnderlyingDividendPeriodValuationDateOffsetDayType) {
    UnderlyingDividendPeriodValuationDateOffsetDayType[UnderlyingDividendPeriodValuationDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingDividendPeriodValuationDateOffsetDayType[UnderlyingDividendPeriodValuationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingDividendPeriodValuationDateOffsetDayType[UnderlyingDividendPeriodValuationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingDividendPeriodValuationDateOffsetDayType[UnderlyingDividendPeriodValuationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingDividendPeriodValuationDateOffsetDayType[UnderlyingDividendPeriodValuationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingDividendPeriodValuationDateOffsetDayType[UnderlyingDividendPeriodValuationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingDividendPeriodValuationDateOffsetDayType = exports.UnderlyingDividendPeriodValuationDateOffsetDayType || (exports.UnderlyingDividendPeriodValuationDateOffsetDayType = {}));
var UnderlyingDividendPeriodPaymentDateOffsetUnit;
(function (UnderlyingDividendPeriodPaymentDateOffsetUnit) {
    UnderlyingDividendPeriodPaymentDateOffsetUnit["Day"] = "D";
    UnderlyingDividendPeriodPaymentDateOffsetUnit["Week"] = "Wk";
    UnderlyingDividendPeriodPaymentDateOffsetUnit["Month"] = "Mo";
    UnderlyingDividendPeriodPaymentDateOffsetUnit["Year"] = "Yr";
})(UnderlyingDividendPeriodPaymentDateOffsetUnit = exports.UnderlyingDividendPeriodPaymentDateOffsetUnit || (exports.UnderlyingDividendPeriodPaymentDateOffsetUnit = {}));
var UnderlyingDividendPeriodPaymentDateOffsetDayType;
(function (UnderlyingDividendPeriodPaymentDateOffsetDayType) {
    UnderlyingDividendPeriodPaymentDateOffsetDayType[UnderlyingDividendPeriodPaymentDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingDividendPeriodPaymentDateOffsetDayType[UnderlyingDividendPeriodPaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingDividendPeriodPaymentDateOffsetDayType[UnderlyingDividendPeriodPaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingDividendPeriodPaymentDateOffsetDayType[UnderlyingDividendPeriodPaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingDividendPeriodPaymentDateOffsetDayType[UnderlyingDividendPeriodPaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingDividendPeriodPaymentDateOffsetDayType[UnderlyingDividendPeriodPaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingDividendPeriodPaymentDateOffsetDayType = exports.UnderlyingDividendPeriodPaymentDateOffsetDayType || (exports.UnderlyingDividendPeriodPaymentDateOffsetDayType = {}));
var UnderlyingSettlMethodElectingPartySide;
(function (UnderlyingSettlMethodElectingPartySide) {
    UnderlyingSettlMethodElectingPartySide[UnderlyingSettlMethodElectingPartySide["Buy"] = 1] = "Buy";
    UnderlyingSettlMethodElectingPartySide[UnderlyingSettlMethodElectingPartySide["Sell"] = 2] = "Sell";
})(UnderlyingSettlMethodElectingPartySide = exports.UnderlyingSettlMethodElectingPartySide || (exports.UnderlyingSettlMethodElectingPartySide = {}));
var UnderlyingMakeWholeBenchmarkQuote;
(function (UnderlyingMakeWholeBenchmarkQuote) {
    UnderlyingMakeWholeBenchmarkQuote[UnderlyingMakeWholeBenchmarkQuote["Bid"] = 0] = "Bid";
    UnderlyingMakeWholeBenchmarkQuote[UnderlyingMakeWholeBenchmarkQuote["Mid"] = 1] = "Mid";
    UnderlyingMakeWholeBenchmarkQuote[UnderlyingMakeWholeBenchmarkQuote["Offer"] = 2] = "Offer";
})(UnderlyingMakeWholeBenchmarkQuote = exports.UnderlyingMakeWholeBenchmarkQuote || (exports.UnderlyingMakeWholeBenchmarkQuote = {}));
var UnderlyingMakeWholeInterpolationMethod;
(function (UnderlyingMakeWholeInterpolationMethod) {
    UnderlyingMakeWholeInterpolationMethod[UnderlyingMakeWholeInterpolationMethod["None"] = 0] = "None";
    UnderlyingMakeWholeInterpolationMethod[UnderlyingMakeWholeInterpolationMethod["LinearZeroYield"] = 1] = "LinearZeroYield";
})(UnderlyingMakeWholeInterpolationMethod = exports.UnderlyingMakeWholeInterpolationMethod || (exports.UnderlyingMakeWholeInterpolationMethod = {}));
var UnderlyingPaymentStreamInterpolationMethod;
(function (UnderlyingPaymentStreamInterpolationMethod) {
    UnderlyingPaymentStreamInterpolationMethod[UnderlyingPaymentStreamInterpolationMethod["None"] = 0] = "None";
    UnderlyingPaymentStreamInterpolationMethod[UnderlyingPaymentStreamInterpolationMethod["LinearZeroYield"] = 1] = "LinearZeroYield";
})(UnderlyingPaymentStreamInterpolationMethod = exports.UnderlyingPaymentStreamInterpolationMethod || (exports.UnderlyingPaymentStreamInterpolationMethod = {}));
var UnderlyingPaymentStreamInterpolationPeriod;
(function (UnderlyingPaymentStreamInterpolationPeriod) {
    UnderlyingPaymentStreamInterpolationPeriod[UnderlyingPaymentStreamInterpolationPeriod["Initial"] = 0] = "Initial";
    UnderlyingPaymentStreamInterpolationPeriod[UnderlyingPaymentStreamInterpolationPeriod["InitialAndFinal"] = 1] = "InitialAndFinal";
    UnderlyingPaymentStreamInterpolationPeriod[UnderlyingPaymentStreamInterpolationPeriod["Final"] = 2] = "Final";
    UnderlyingPaymentStreamInterpolationPeriod[UnderlyingPaymentStreamInterpolationPeriod["AnyPeriod"] = 3] = "AnyPeriod";
})(UnderlyingPaymentStreamInterpolationPeriod = exports.UnderlyingPaymentStreamInterpolationPeriod || (exports.UnderlyingPaymentStreamInterpolationPeriod = {}));
var UnderlyingPaymentStreamCompoundingDateType;
(function (UnderlyingPaymentStreamCompoundingDateType) {
    UnderlyingPaymentStreamCompoundingDateType[UnderlyingPaymentStreamCompoundingDateType["Unadjusted"] = 0] = "Unadjusted";
    UnderlyingPaymentStreamCompoundingDateType[UnderlyingPaymentStreamCompoundingDateType["Adjusted"] = 1] = "Adjusted";
})(UnderlyingPaymentStreamCompoundingDateType = exports.UnderlyingPaymentStreamCompoundingDateType || (exports.UnderlyingPaymentStreamCompoundingDateType = {}));
var UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention;
(function (UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention) {
    UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention[UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention[UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention[UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention[UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention[UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention[UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention[UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention[UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention = exports.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention || (exports.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention = {}));
var UnderlyingPaymentStreamCompoundingDatesOffsetUnit;
(function (UnderlyingPaymentStreamCompoundingDatesOffsetUnit) {
    UnderlyingPaymentStreamCompoundingDatesOffsetUnit["Day"] = "D";
    UnderlyingPaymentStreamCompoundingDatesOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentStreamCompoundingDatesOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentStreamCompoundingDatesOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamCompoundingDatesOffsetUnit = exports.UnderlyingPaymentStreamCompoundingDatesOffsetUnit || (exports.UnderlyingPaymentStreamCompoundingDatesOffsetUnit = {}));
var UnderlyingPaymentStreamCompoundingDatesOffsetDayType;
(function (UnderlyingPaymentStreamCompoundingDatesOffsetDayType) {
    UnderlyingPaymentStreamCompoundingDatesOffsetDayType[UnderlyingPaymentStreamCompoundingDatesOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStreamCompoundingDatesOffsetDayType[UnderlyingPaymentStreamCompoundingDatesOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStreamCompoundingDatesOffsetDayType[UnderlyingPaymentStreamCompoundingDatesOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStreamCompoundingDatesOffsetDayType[UnderlyingPaymentStreamCompoundingDatesOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStreamCompoundingDatesOffsetDayType[UnderlyingPaymentStreamCompoundingDatesOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStreamCompoundingDatesOffsetDayType[UnderlyingPaymentStreamCompoundingDatesOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStreamCompoundingDatesOffsetDayType = exports.UnderlyingPaymentStreamCompoundingDatesOffsetDayType || (exports.UnderlyingPaymentStreamCompoundingDatesOffsetDayType = {}));
var UnderlyingPaymentStreamCompoundingFrequencyUnit;
(function (UnderlyingPaymentStreamCompoundingFrequencyUnit) {
    UnderlyingPaymentStreamCompoundingFrequencyUnit["Day"] = "D";
    UnderlyingPaymentStreamCompoundingFrequencyUnit["Week"] = "Wk";
    UnderlyingPaymentStreamCompoundingFrequencyUnit["Month"] = "Mo";
    UnderlyingPaymentStreamCompoundingFrequencyUnit["Year"] = "Yr";
    UnderlyingPaymentStreamCompoundingFrequencyUnit["Hour"] = "H";
    UnderlyingPaymentStreamCompoundingFrequencyUnit["Minute"] = "Min";
    UnderlyingPaymentStreamCompoundingFrequencyUnit["Second"] = "S";
    UnderlyingPaymentStreamCompoundingFrequencyUnit["Term"] = "T";
})(UnderlyingPaymentStreamCompoundingFrequencyUnit = exports.UnderlyingPaymentStreamCompoundingFrequencyUnit || (exports.UnderlyingPaymentStreamCompoundingFrequencyUnit = {}));
var UnderlyingPaymentStreamCompoundingRollConvention;
(function (UnderlyingPaymentStreamCompoundingRollConvention) {
    UnderlyingPaymentStreamCompoundingRollConvention["E1stDayOfTheMonth"] = "1";
    UnderlyingPaymentStreamCompoundingRollConvention["E2ndDayOfTheMonth"] = "2";
    UnderlyingPaymentStreamCompoundingRollConvention["E3rdDayOfTheMonth"] = "3";
    UnderlyingPaymentStreamCompoundingRollConvention["E4thDayOfTheMonth"] = "4";
    UnderlyingPaymentStreamCompoundingRollConvention["E5thDayOfTheMonth"] = "5";
    UnderlyingPaymentStreamCompoundingRollConvention["E6ThdDayOfTheMonth"] = "6";
    UnderlyingPaymentStreamCompoundingRollConvention["E7thDayOfTheMonth"] = "7";
    UnderlyingPaymentStreamCompoundingRollConvention["E8thDayOfTheMonth"] = "8";
    UnderlyingPaymentStreamCompoundingRollConvention["E9thDayOfTheMonth"] = "9";
    UnderlyingPaymentStreamCompoundingRollConvention["E10thDayOfTheMonth"] = "10";
    UnderlyingPaymentStreamCompoundingRollConvention["E11ThDayOfTheMonth"] = "11";
    UnderlyingPaymentStreamCompoundingRollConvention["E12ThDayOfTheMonth"] = "12";
    UnderlyingPaymentStreamCompoundingRollConvention["E13ThDayOfTheMonth"] = "13";
    UnderlyingPaymentStreamCompoundingRollConvention["E14thDayOfTheMonth"] = "14";
    UnderlyingPaymentStreamCompoundingRollConvention["E15thDayOfTheMonth"] = "15";
    UnderlyingPaymentStreamCompoundingRollConvention["E16thDayOfTheMonth"] = "16";
    UnderlyingPaymentStreamCompoundingRollConvention["E17thDayOfTheMonth"] = "17";
    UnderlyingPaymentStreamCompoundingRollConvention["E18thDayOfTheMonth"] = "18";
    UnderlyingPaymentStreamCompoundingRollConvention["E19thDayOfTheMonth"] = "19";
    UnderlyingPaymentStreamCompoundingRollConvention["E20thDayOfTheMonth"] = "20";
    UnderlyingPaymentStreamCompoundingRollConvention["E21stDayOfTheMonth"] = "21";
    UnderlyingPaymentStreamCompoundingRollConvention["E22ndDayOfTheMonth"] = "22";
    UnderlyingPaymentStreamCompoundingRollConvention["E23rdDayOfTheMonth"] = "23";
    UnderlyingPaymentStreamCompoundingRollConvention["E24thDayOfTheMonth"] = "24";
    UnderlyingPaymentStreamCompoundingRollConvention["E25thDayOfTheMonth"] = "25";
    UnderlyingPaymentStreamCompoundingRollConvention["E26thDayOfTheMonth"] = "26";
    UnderlyingPaymentStreamCompoundingRollConvention["E27thDayOfTheMonth"] = "27";
    UnderlyingPaymentStreamCompoundingRollConvention["E28thDayOfTheMonth"] = "28";
    UnderlyingPaymentStreamCompoundingRollConvention["E29thDayOfTheMonth"] = "29";
    UnderlyingPaymentStreamCompoundingRollConvention["E30thDayOfTheMonth"] = "30";
    UnderlyingPaymentStreamCompoundingRollConvention["TheEndOfTheMonth"] = "EOM";
    UnderlyingPaymentStreamCompoundingRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    UnderlyingPaymentStreamCompoundingRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    UnderlyingPaymentStreamCompoundingRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    UnderlyingPaymentStreamCompoundingRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    UnderlyingPaymentStreamCompoundingRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    UnderlyingPaymentStreamCompoundingRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    UnderlyingPaymentStreamCompoundingRollConvention["NoAdjustment"] = "NONE";
    UnderlyingPaymentStreamCompoundingRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    UnderlyingPaymentStreamCompoundingRollConvention["Monday"] = "MON";
    UnderlyingPaymentStreamCompoundingRollConvention["Tuesday"] = "TUE";
    UnderlyingPaymentStreamCompoundingRollConvention["Wednesday"] = "WED";
    UnderlyingPaymentStreamCompoundingRollConvention["Thursday"] = "THU";
    UnderlyingPaymentStreamCompoundingRollConvention["Friday"] = "FRI";
    UnderlyingPaymentStreamCompoundingRollConvention["Saturday"] = "SAT";
    UnderlyingPaymentStreamCompoundingRollConvention["Sunday"] = "SUN";
})(UnderlyingPaymentStreamCompoundingRollConvention = exports.UnderlyingPaymentStreamCompoundingRollConvention || (exports.UnderlyingPaymentStreamCompoundingRollConvention = {}));
var UnderlyingPaymentStreamCompoundingEndDateOffsetUnit;
(function (UnderlyingPaymentStreamCompoundingEndDateOffsetUnit) {
    UnderlyingPaymentStreamCompoundingEndDateOffsetUnit["Day"] = "D";
    UnderlyingPaymentStreamCompoundingEndDateOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentStreamCompoundingEndDateOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentStreamCompoundingEndDateOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamCompoundingEndDateOffsetUnit = exports.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit || (exports.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit = {}));
var UnderlyingPaymentStreamCompoundingEndDateOffsetDayType;
(function (UnderlyingPaymentStreamCompoundingEndDateOffsetDayType) {
    UnderlyingPaymentStreamCompoundingEndDateOffsetDayType[UnderlyingPaymentStreamCompoundingEndDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStreamCompoundingEndDateOffsetDayType[UnderlyingPaymentStreamCompoundingEndDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStreamCompoundingEndDateOffsetDayType[UnderlyingPaymentStreamCompoundingEndDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStreamCompoundingEndDateOffsetDayType[UnderlyingPaymentStreamCompoundingEndDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStreamCompoundingEndDateOffsetDayType[UnderlyingPaymentStreamCompoundingEndDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStreamCompoundingEndDateOffsetDayType[UnderlyingPaymentStreamCompoundingEndDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStreamCompoundingEndDateOffsetDayType = exports.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType || (exports.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType = {}));
var UnderlyingPaymentStreamCompoundingRateIndexCurveUnit;
(function (UnderlyingPaymentStreamCompoundingRateIndexCurveUnit) {
    UnderlyingPaymentStreamCompoundingRateIndexCurveUnit["Day"] = "D";
    UnderlyingPaymentStreamCompoundingRateIndexCurveUnit["Week"] = "Wk";
    UnderlyingPaymentStreamCompoundingRateIndexCurveUnit["Month"] = "Mo";
    UnderlyingPaymentStreamCompoundingRateIndexCurveUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamCompoundingRateIndexCurveUnit = exports.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit || (exports.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit = {}));
var UnderlyingPaymentStreamCompoundingRateSpreadPositionType;
(function (UnderlyingPaymentStreamCompoundingRateSpreadPositionType) {
    UnderlyingPaymentStreamCompoundingRateSpreadPositionType[UnderlyingPaymentStreamCompoundingRateSpreadPositionType["Short"] = 0] = "Short";
    UnderlyingPaymentStreamCompoundingRateSpreadPositionType[UnderlyingPaymentStreamCompoundingRateSpreadPositionType["Long"] = 1] = "Long";
})(UnderlyingPaymentStreamCompoundingRateSpreadPositionType = exports.UnderlyingPaymentStreamCompoundingRateSpreadPositionType || (exports.UnderlyingPaymentStreamCompoundingRateSpreadPositionType = {}));
var UnderlyingPaymentStreamCompoundingRateTreatment;
(function (UnderlyingPaymentStreamCompoundingRateTreatment) {
    UnderlyingPaymentStreamCompoundingRateTreatment[UnderlyingPaymentStreamCompoundingRateTreatment["BondEquivalentYield"] = 0] = "BondEquivalentYield";
    UnderlyingPaymentStreamCompoundingRateTreatment[UnderlyingPaymentStreamCompoundingRateTreatment["MoneyMarketYield"] = 1] = "MoneyMarketYield";
})(UnderlyingPaymentStreamCompoundingRateTreatment = exports.UnderlyingPaymentStreamCompoundingRateTreatment || (exports.UnderlyingPaymentStreamCompoundingRateTreatment = {}));
var UnderlyingPaymentStreamCompoundingCapRateBuySide;
(function (UnderlyingPaymentStreamCompoundingCapRateBuySide) {
    UnderlyingPaymentStreamCompoundingCapRateBuySide[UnderlyingPaymentStreamCompoundingCapRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingPaymentStreamCompoundingCapRateBuySide[UnderlyingPaymentStreamCompoundingCapRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingPaymentStreamCompoundingCapRateBuySide = exports.UnderlyingPaymentStreamCompoundingCapRateBuySide || (exports.UnderlyingPaymentStreamCompoundingCapRateBuySide = {}));
var UnderlyingPaymentStreamCompoundingCapRateSellSide;
(function (UnderlyingPaymentStreamCompoundingCapRateSellSide) {
    UnderlyingPaymentStreamCompoundingCapRateSellSide[UnderlyingPaymentStreamCompoundingCapRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingPaymentStreamCompoundingCapRateSellSide[UnderlyingPaymentStreamCompoundingCapRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingPaymentStreamCompoundingCapRateSellSide = exports.UnderlyingPaymentStreamCompoundingCapRateSellSide || (exports.UnderlyingPaymentStreamCompoundingCapRateSellSide = {}));
var UnderlyingPaymentStreamCompoundingFloorRateBuySide;
(function (UnderlyingPaymentStreamCompoundingFloorRateBuySide) {
    UnderlyingPaymentStreamCompoundingFloorRateBuySide[UnderlyingPaymentStreamCompoundingFloorRateBuySide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingPaymentStreamCompoundingFloorRateBuySide[UnderlyingPaymentStreamCompoundingFloorRateBuySide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingPaymentStreamCompoundingFloorRateBuySide = exports.UnderlyingPaymentStreamCompoundingFloorRateBuySide || (exports.UnderlyingPaymentStreamCompoundingFloorRateBuySide = {}));
var UnderlyingPaymentStreamCompoundingFloorRateSellSide;
(function (UnderlyingPaymentStreamCompoundingFloorRateSellSide) {
    UnderlyingPaymentStreamCompoundingFloorRateSellSide[UnderlyingPaymentStreamCompoundingFloorRateSellSide["BuyerOfTheTrade"] = 1] = "BuyerOfTheTrade";
    UnderlyingPaymentStreamCompoundingFloorRateSellSide[UnderlyingPaymentStreamCompoundingFloorRateSellSide["SellerOfTheTrade"] = 2] = "SellerOfTheTrade";
})(UnderlyingPaymentStreamCompoundingFloorRateSellSide = exports.UnderlyingPaymentStreamCompoundingFloorRateSellSide || (exports.UnderlyingPaymentStreamCompoundingFloorRateSellSide = {}));
var UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection;
(function (UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection) {
    UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection["RoundToNearest"] = "0";
    UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection["RoundDown"] = "1";
    UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection["RoundUp"] = "2";
})(UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection = exports.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection || (exports.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection = {}));
var UnderlyingPaymentStreamCompoundingAveragingMethod;
(function (UnderlyingPaymentStreamCompoundingAveragingMethod) {
    UnderlyingPaymentStreamCompoundingAveragingMethod[UnderlyingPaymentStreamCompoundingAveragingMethod["Unweighted"] = 0] = "Unweighted";
    UnderlyingPaymentStreamCompoundingAveragingMethod[UnderlyingPaymentStreamCompoundingAveragingMethod["Weighted"] = 1] = "Weighted";
})(UnderlyingPaymentStreamCompoundingAveragingMethod = exports.UnderlyingPaymentStreamCompoundingAveragingMethod || (exports.UnderlyingPaymentStreamCompoundingAveragingMethod = {}));
var UnderlyingPaymentStreamCompoundingNegativeRateTreatment;
(function (UnderlyingPaymentStreamCompoundingNegativeRateTreatment) {
    UnderlyingPaymentStreamCompoundingNegativeRateTreatment[UnderlyingPaymentStreamCompoundingNegativeRateTreatment["ZeroInterestRateMethod"] = 0] = "ZeroInterestRateMethod";
    UnderlyingPaymentStreamCompoundingNegativeRateTreatment[UnderlyingPaymentStreamCompoundingNegativeRateTreatment["NegativeInterestRateMethod"] = 1] = "NegativeInterestRateMethod";
})(UnderlyingPaymentStreamCompoundingNegativeRateTreatment = exports.UnderlyingPaymentStreamCompoundingNegativeRateTreatment || (exports.UnderlyingPaymentStreamCompoundingNegativeRateTreatment = {}));
var UnderlyingPaymentStreamCompoundingStartDateOffsetUnit;
(function (UnderlyingPaymentStreamCompoundingStartDateOffsetUnit) {
    UnderlyingPaymentStreamCompoundingStartDateOffsetUnit["Day"] = "D";
    UnderlyingPaymentStreamCompoundingStartDateOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentStreamCompoundingStartDateOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentStreamCompoundingStartDateOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamCompoundingStartDateOffsetUnit = exports.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit || (exports.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit = {}));
var UnderlyingPaymentStreamCompoundingStartDateOffsetDayType;
(function (UnderlyingPaymentStreamCompoundingStartDateOffsetDayType) {
    UnderlyingPaymentStreamCompoundingStartDateOffsetDayType[UnderlyingPaymentStreamCompoundingStartDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStreamCompoundingStartDateOffsetDayType[UnderlyingPaymentStreamCompoundingStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStreamCompoundingStartDateOffsetDayType[UnderlyingPaymentStreamCompoundingStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStreamCompoundingStartDateOffsetDayType[UnderlyingPaymentStreamCompoundingStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStreamCompoundingStartDateOffsetDayType[UnderlyingPaymentStreamCompoundingStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStreamCompoundingStartDateOffsetDayType[UnderlyingPaymentStreamCompoundingStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStreamCompoundingStartDateOffsetDayType = exports.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType || (exports.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType = {}));
var UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit;
(function (UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit) {
    UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit["Day"] = "D";
    UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit = exports.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit || (exports.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit = {}));
var UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType;
(function (UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType) {
    UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType[UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType[UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType[UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType[UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType[UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType[UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType = exports.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType || (exports.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType = {}));
var UnderlyingPaymentStreamFixingDateType;
(function (UnderlyingPaymentStreamFixingDateType) {
    UnderlyingPaymentStreamFixingDateType[UnderlyingPaymentStreamFixingDateType["Unadjusted"] = 0] = "Unadjusted";
    UnderlyingPaymentStreamFixingDateType[UnderlyingPaymentStreamFixingDateType["Adjusted"] = 1] = "Adjusted";
})(UnderlyingPaymentStreamFixingDateType = exports.UnderlyingPaymentStreamFixingDateType || (exports.UnderlyingPaymentStreamFixingDateType = {}));
var UnderlyingPaymentStreamFirstObservationDateOffsetDayType;
(function (UnderlyingPaymentStreamFirstObservationDateOffsetDayType) {
    UnderlyingPaymentStreamFirstObservationDateOffsetDayType[UnderlyingPaymentStreamFirstObservationDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStreamFirstObservationDateOffsetDayType[UnderlyingPaymentStreamFirstObservationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStreamFirstObservationDateOffsetDayType[UnderlyingPaymentStreamFirstObservationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStreamFirstObservationDateOffsetDayType[UnderlyingPaymentStreamFirstObservationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStreamFirstObservationDateOffsetDayType[UnderlyingPaymentStreamFirstObservationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStreamFirstObservationDateOffsetDayType[UnderlyingPaymentStreamFirstObservationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStreamFirstObservationDateOffsetDayType = exports.UnderlyingPaymentStreamFirstObservationDateOffsetDayType || (exports.UnderlyingPaymentStreamFirstObservationDateOffsetDayType = {}));
var UnderlyingPaymentStreamLinkStrikePriceType;
(function (UnderlyingPaymentStreamLinkStrikePriceType) {
    UnderlyingPaymentStreamLinkStrikePriceType[UnderlyingPaymentStreamLinkStrikePriceType["Volatility"] = 0] = "Volatility";
    UnderlyingPaymentStreamLinkStrikePriceType[UnderlyingPaymentStreamLinkStrikePriceType["Variance"] = 1] = "Variance";
})(UnderlyingPaymentStreamLinkStrikePriceType = exports.UnderlyingPaymentStreamLinkStrikePriceType || (exports.UnderlyingPaymentStreamLinkStrikePriceType = {}));
var UnderlyingPaymentStreamRealizedVarianceMethod;
(function (UnderlyingPaymentStreamRealizedVarianceMethod) {
    UnderlyingPaymentStreamRealizedVarianceMethod[UnderlyingPaymentStreamRealizedVarianceMethod["Previous"] = 0] = "Previous";
    UnderlyingPaymentStreamRealizedVarianceMethod[UnderlyingPaymentStreamRealizedVarianceMethod["Last"] = 1] = "Last";
    UnderlyingPaymentStreamRealizedVarianceMethod[UnderlyingPaymentStreamRealizedVarianceMethod["Both"] = 2] = "Both";
})(UnderlyingPaymentStreamRealizedVarianceMethod = exports.UnderlyingPaymentStreamRealizedVarianceMethod || (exports.UnderlyingPaymentStreamRealizedVarianceMethod = {}));
var UnderlyingPaymentStubEndDateBusinessDayConvention;
(function (UnderlyingPaymentStubEndDateBusinessDayConvention) {
    UnderlyingPaymentStubEndDateBusinessDayConvention[UnderlyingPaymentStubEndDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingPaymentStubEndDateBusinessDayConvention[UnderlyingPaymentStubEndDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingPaymentStubEndDateBusinessDayConvention[UnderlyingPaymentStubEndDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingPaymentStubEndDateBusinessDayConvention[UnderlyingPaymentStubEndDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingPaymentStubEndDateBusinessDayConvention[UnderlyingPaymentStubEndDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingPaymentStubEndDateBusinessDayConvention[UnderlyingPaymentStubEndDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingPaymentStubEndDateBusinessDayConvention[UnderlyingPaymentStubEndDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingPaymentStubEndDateBusinessDayConvention[UnderlyingPaymentStubEndDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingPaymentStubEndDateBusinessDayConvention = exports.UnderlyingPaymentStubEndDateBusinessDayConvention || (exports.UnderlyingPaymentStubEndDateBusinessDayConvention = {}));
var UnderlyingPaymentStubEndDateOffsetUnit;
(function (UnderlyingPaymentStubEndDateOffsetUnit) {
    UnderlyingPaymentStubEndDateOffsetUnit["Day"] = "D";
    UnderlyingPaymentStubEndDateOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentStubEndDateOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentStubEndDateOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentStubEndDateOffsetUnit = exports.UnderlyingPaymentStubEndDateOffsetUnit || (exports.UnderlyingPaymentStubEndDateOffsetUnit = {}));
var UnderlyingPaymentStubEndDateOffsetDayType;
(function (UnderlyingPaymentStubEndDateOffsetDayType) {
    UnderlyingPaymentStubEndDateOffsetDayType[UnderlyingPaymentStubEndDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStubEndDateOffsetDayType[UnderlyingPaymentStubEndDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStubEndDateOffsetDayType[UnderlyingPaymentStubEndDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStubEndDateOffsetDayType[UnderlyingPaymentStubEndDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStubEndDateOffsetDayType[UnderlyingPaymentStubEndDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStubEndDateOffsetDayType[UnderlyingPaymentStubEndDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStubEndDateOffsetDayType = exports.UnderlyingPaymentStubEndDateOffsetDayType || (exports.UnderlyingPaymentStubEndDateOffsetDayType = {}));
var UnderlyingPaymentStubStartDateBusinessDayConvention;
(function (UnderlyingPaymentStubStartDateBusinessDayConvention) {
    UnderlyingPaymentStubStartDateBusinessDayConvention[UnderlyingPaymentStubStartDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingPaymentStubStartDateBusinessDayConvention[UnderlyingPaymentStubStartDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingPaymentStubStartDateBusinessDayConvention[UnderlyingPaymentStubStartDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingPaymentStubStartDateBusinessDayConvention[UnderlyingPaymentStubStartDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingPaymentStubStartDateBusinessDayConvention[UnderlyingPaymentStubStartDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingPaymentStubStartDateBusinessDayConvention[UnderlyingPaymentStubStartDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingPaymentStubStartDateBusinessDayConvention[UnderlyingPaymentStubStartDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingPaymentStubStartDateBusinessDayConvention[UnderlyingPaymentStubStartDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingPaymentStubStartDateBusinessDayConvention = exports.UnderlyingPaymentStubStartDateBusinessDayConvention || (exports.UnderlyingPaymentStubStartDateBusinessDayConvention = {}));
var UnderlyingPaymentStubStartDateOffsetUnit;
(function (UnderlyingPaymentStubStartDateOffsetUnit) {
    UnderlyingPaymentStubStartDateOffsetUnit["Day"] = "D";
    UnderlyingPaymentStubStartDateOffsetUnit["Week"] = "Wk";
    UnderlyingPaymentStubStartDateOffsetUnit["Month"] = "Mo";
    UnderlyingPaymentStubStartDateOffsetUnit["Year"] = "Yr";
})(UnderlyingPaymentStubStartDateOffsetUnit = exports.UnderlyingPaymentStubStartDateOffsetUnit || (exports.UnderlyingPaymentStubStartDateOffsetUnit = {}));
var UnderlyingPaymentStubStartDateOffsetDayType;
(function (UnderlyingPaymentStubStartDateOffsetDayType) {
    UnderlyingPaymentStubStartDateOffsetDayType[UnderlyingPaymentStubStartDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingPaymentStubStartDateOffsetDayType[UnderlyingPaymentStubStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingPaymentStubStartDateOffsetDayType[UnderlyingPaymentStubStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingPaymentStubStartDateOffsetDayType[UnderlyingPaymentStubStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingPaymentStubStartDateOffsetDayType[UnderlyingPaymentStubStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingPaymentStubStartDateOffsetDayType[UnderlyingPaymentStubStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingPaymentStubStartDateOffsetDayType = exports.UnderlyingPaymentStubStartDateOffsetDayType || (exports.UnderlyingPaymentStubStartDateOffsetDayType = {}));
var UnderlyingProvisionBreakFeeElection;
(function (UnderlyingProvisionBreakFeeElection) {
    UnderlyingProvisionBreakFeeElection[UnderlyingProvisionBreakFeeElection["FlatFee"] = 0] = "FlatFee";
    UnderlyingProvisionBreakFeeElection[UnderlyingProvisionBreakFeeElection["AmortizedFee"] = 1] = "AmortizedFee";
    UnderlyingProvisionBreakFeeElection[UnderlyingProvisionBreakFeeElection["FundingFee"] = 2] = "FundingFee";
    UnderlyingProvisionBreakFeeElection[UnderlyingProvisionBreakFeeElection["FlatFeeAndFundingFee"] = 3] = "FlatFeeAndFundingFee";
    UnderlyingProvisionBreakFeeElection[UnderlyingProvisionBreakFeeElection["AmortizedFeeAndFundingFee"] = 4] = "AmortizedFeeAndFundingFee";
})(UnderlyingProvisionBreakFeeElection = exports.UnderlyingProvisionBreakFeeElection || (exports.UnderlyingProvisionBreakFeeElection = {}));
var UnderlyingReturnRateDateMode;
(function (UnderlyingReturnRateDateMode) {
    UnderlyingReturnRateDateMode[UnderlyingReturnRateDateMode["PriceValuation"] = 0] = "PriceValuation";
    UnderlyingReturnRateDateMode[UnderlyingReturnRateDateMode["DividendValuation"] = 1] = "DividendValuation";
})(UnderlyingReturnRateDateMode = exports.UnderlyingReturnRateDateMode || (exports.UnderlyingReturnRateDateMode = {}));
var UnderlyingReturnRateValuationDateOffsetUnit;
(function (UnderlyingReturnRateValuationDateOffsetUnit) {
    UnderlyingReturnRateValuationDateOffsetUnit["Day"] = "D";
    UnderlyingReturnRateValuationDateOffsetUnit["Week"] = "Wk";
    UnderlyingReturnRateValuationDateOffsetUnit["Month"] = "Mo";
    UnderlyingReturnRateValuationDateOffsetUnit["Year"] = "Yr";
})(UnderlyingReturnRateValuationDateOffsetUnit = exports.UnderlyingReturnRateValuationDateOffsetUnit || (exports.UnderlyingReturnRateValuationDateOffsetUnit = {}));
var UnderlyingReturnRateValuationDateOffsetDayType;
(function (UnderlyingReturnRateValuationDateOffsetDayType) {
    UnderlyingReturnRateValuationDateOffsetDayType[UnderlyingReturnRateValuationDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingReturnRateValuationDateOffsetDayType[UnderlyingReturnRateValuationDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingReturnRateValuationDateOffsetDayType[UnderlyingReturnRateValuationDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingReturnRateValuationDateOffsetDayType[UnderlyingReturnRateValuationDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingReturnRateValuationDateOffsetDayType[UnderlyingReturnRateValuationDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingReturnRateValuationDateOffsetDayType[UnderlyingReturnRateValuationDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingReturnRateValuationDateOffsetDayType = exports.UnderlyingReturnRateValuationDateOffsetDayType || (exports.UnderlyingReturnRateValuationDateOffsetDayType = {}));
var UnderlyingReturnRateValuationStartDateOffsetUnit;
(function (UnderlyingReturnRateValuationStartDateOffsetUnit) {
    UnderlyingReturnRateValuationStartDateOffsetUnit["Day"] = "D";
    UnderlyingReturnRateValuationStartDateOffsetUnit["Week"] = "Wk";
    UnderlyingReturnRateValuationStartDateOffsetUnit["Month"] = "Mo";
    UnderlyingReturnRateValuationStartDateOffsetUnit["Year"] = "Yr";
})(UnderlyingReturnRateValuationStartDateOffsetUnit = exports.UnderlyingReturnRateValuationStartDateOffsetUnit || (exports.UnderlyingReturnRateValuationStartDateOffsetUnit = {}));
var UnderlyingReturnRateValuationStartDateOffsetDayType;
(function (UnderlyingReturnRateValuationStartDateOffsetDayType) {
    UnderlyingReturnRateValuationStartDateOffsetDayType[UnderlyingReturnRateValuationStartDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingReturnRateValuationStartDateOffsetDayType[UnderlyingReturnRateValuationStartDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingReturnRateValuationStartDateOffsetDayType[UnderlyingReturnRateValuationStartDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingReturnRateValuationStartDateOffsetDayType[UnderlyingReturnRateValuationStartDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingReturnRateValuationStartDateOffsetDayType[UnderlyingReturnRateValuationStartDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingReturnRateValuationStartDateOffsetDayType[UnderlyingReturnRateValuationStartDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingReturnRateValuationStartDateOffsetDayType = exports.UnderlyingReturnRateValuationStartDateOffsetDayType || (exports.UnderlyingReturnRateValuationStartDateOffsetDayType = {}));
var UnderlyingReturnRateValuationEndDateOffsetUnit;
(function (UnderlyingReturnRateValuationEndDateOffsetUnit) {
    UnderlyingReturnRateValuationEndDateOffsetUnit["Day"] = "D";
    UnderlyingReturnRateValuationEndDateOffsetUnit["Week"] = "Wk";
    UnderlyingReturnRateValuationEndDateOffsetUnit["Month"] = "Mo";
    UnderlyingReturnRateValuationEndDateOffsetUnit["Year"] = "Yr";
})(UnderlyingReturnRateValuationEndDateOffsetUnit = exports.UnderlyingReturnRateValuationEndDateOffsetUnit || (exports.UnderlyingReturnRateValuationEndDateOffsetUnit = {}));
var UnderlyingReturnRateValuationEndDateOffsetDayType;
(function (UnderlyingReturnRateValuationEndDateOffsetDayType) {
    UnderlyingReturnRateValuationEndDateOffsetDayType[UnderlyingReturnRateValuationEndDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingReturnRateValuationEndDateOffsetDayType[UnderlyingReturnRateValuationEndDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingReturnRateValuationEndDateOffsetDayType[UnderlyingReturnRateValuationEndDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingReturnRateValuationEndDateOffsetDayType[UnderlyingReturnRateValuationEndDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingReturnRateValuationEndDateOffsetDayType[UnderlyingReturnRateValuationEndDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingReturnRateValuationEndDateOffsetDayType[UnderlyingReturnRateValuationEndDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingReturnRateValuationEndDateOffsetDayType = exports.UnderlyingReturnRateValuationEndDateOffsetDayType || (exports.UnderlyingReturnRateValuationEndDateOffsetDayType = {}));
var UnderlyingReturnRateValuationFrequencyUnit;
(function (UnderlyingReturnRateValuationFrequencyUnit) {
    UnderlyingReturnRateValuationFrequencyUnit["Day"] = "D";
    UnderlyingReturnRateValuationFrequencyUnit["Week"] = "Wk";
    UnderlyingReturnRateValuationFrequencyUnit["Month"] = "Mo";
    UnderlyingReturnRateValuationFrequencyUnit["Year"] = "Yr";
    UnderlyingReturnRateValuationFrequencyUnit["Hour"] = "H";
    UnderlyingReturnRateValuationFrequencyUnit["Minute"] = "Min";
    UnderlyingReturnRateValuationFrequencyUnit["Second"] = "S";
    UnderlyingReturnRateValuationFrequencyUnit["Term"] = "T";
})(UnderlyingReturnRateValuationFrequencyUnit = exports.UnderlyingReturnRateValuationFrequencyUnit || (exports.UnderlyingReturnRateValuationFrequencyUnit = {}));
var UnderlyingReturnRateValuationFrequencyRollConvention;
(function (UnderlyingReturnRateValuationFrequencyRollConvention) {
    UnderlyingReturnRateValuationFrequencyRollConvention["E1stDayOfTheMonth"] = "1";
    UnderlyingReturnRateValuationFrequencyRollConvention["E2ndDayOfTheMonth"] = "2";
    UnderlyingReturnRateValuationFrequencyRollConvention["E3rdDayOfTheMonth"] = "3";
    UnderlyingReturnRateValuationFrequencyRollConvention["E4thDayOfTheMonth"] = "4";
    UnderlyingReturnRateValuationFrequencyRollConvention["E5thDayOfTheMonth"] = "5";
    UnderlyingReturnRateValuationFrequencyRollConvention["E6ThdDayOfTheMonth"] = "6";
    UnderlyingReturnRateValuationFrequencyRollConvention["E7thDayOfTheMonth"] = "7";
    UnderlyingReturnRateValuationFrequencyRollConvention["E8thDayOfTheMonth"] = "8";
    UnderlyingReturnRateValuationFrequencyRollConvention["E9thDayOfTheMonth"] = "9";
    UnderlyingReturnRateValuationFrequencyRollConvention["E10thDayOfTheMonth"] = "10";
    UnderlyingReturnRateValuationFrequencyRollConvention["E11ThDayOfTheMonth"] = "11";
    UnderlyingReturnRateValuationFrequencyRollConvention["E12ThDayOfTheMonth"] = "12";
    UnderlyingReturnRateValuationFrequencyRollConvention["E13ThDayOfTheMonth"] = "13";
    UnderlyingReturnRateValuationFrequencyRollConvention["E14thDayOfTheMonth"] = "14";
    UnderlyingReturnRateValuationFrequencyRollConvention["E15thDayOfTheMonth"] = "15";
    UnderlyingReturnRateValuationFrequencyRollConvention["E16thDayOfTheMonth"] = "16";
    UnderlyingReturnRateValuationFrequencyRollConvention["E17thDayOfTheMonth"] = "17";
    UnderlyingReturnRateValuationFrequencyRollConvention["E18thDayOfTheMonth"] = "18";
    UnderlyingReturnRateValuationFrequencyRollConvention["E19thDayOfTheMonth"] = "19";
    UnderlyingReturnRateValuationFrequencyRollConvention["E20thDayOfTheMonth"] = "20";
    UnderlyingReturnRateValuationFrequencyRollConvention["E21stDayOfTheMonth"] = "21";
    UnderlyingReturnRateValuationFrequencyRollConvention["E22ndDayOfTheMonth"] = "22";
    UnderlyingReturnRateValuationFrequencyRollConvention["E23rdDayOfTheMonth"] = "23";
    UnderlyingReturnRateValuationFrequencyRollConvention["E24thDayOfTheMonth"] = "24";
    UnderlyingReturnRateValuationFrequencyRollConvention["E25thDayOfTheMonth"] = "25";
    UnderlyingReturnRateValuationFrequencyRollConvention["E26thDayOfTheMonth"] = "26";
    UnderlyingReturnRateValuationFrequencyRollConvention["E27thDayOfTheMonth"] = "27";
    UnderlyingReturnRateValuationFrequencyRollConvention["E28thDayOfTheMonth"] = "28";
    UnderlyingReturnRateValuationFrequencyRollConvention["E29thDayOfTheMonth"] = "29";
    UnderlyingReturnRateValuationFrequencyRollConvention["E30thDayOfTheMonth"] = "30";
    UnderlyingReturnRateValuationFrequencyRollConvention["TheEndOfTheMonth"] = "EOM";
    UnderlyingReturnRateValuationFrequencyRollConvention["TheFloatingRateNoteConventionOrEurodollarConvention"] = "FRN";
    UnderlyingReturnRateValuationFrequencyRollConvention["TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth"] = "IMM";
    UnderlyingReturnRateValuationFrequencyRollConvention["TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange"] = "IMMCAD";
    UnderlyingReturnRateValuationFrequencyRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract"] = "IMMAUD";
    UnderlyingReturnRateValuationFrequencyRollConvention["TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract"] = "IMMNZD";
    UnderlyingReturnRateValuationFrequencyRollConvention["TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates"] = "SFE";
    UnderlyingReturnRateValuationFrequencyRollConvention["NoAdjustment"] = "NONE";
    UnderlyingReturnRateValuationFrequencyRollConvention["The13WeekAnd26WeekUSTreasuryBillAuctionDates"] = "TBILL";
    UnderlyingReturnRateValuationFrequencyRollConvention["Monday"] = "MON";
    UnderlyingReturnRateValuationFrequencyRollConvention["Tuesday"] = "TUE";
    UnderlyingReturnRateValuationFrequencyRollConvention["Wednesday"] = "WED";
    UnderlyingReturnRateValuationFrequencyRollConvention["Thursday"] = "THU";
    UnderlyingReturnRateValuationFrequencyRollConvention["Friday"] = "FRI";
    UnderlyingReturnRateValuationFrequencyRollConvention["Saturday"] = "SAT";
    UnderlyingReturnRateValuationFrequencyRollConvention["Sunday"] = "SUN";
})(UnderlyingReturnRateValuationFrequencyRollConvention = exports.UnderlyingReturnRateValuationFrequencyRollConvention || (exports.UnderlyingReturnRateValuationFrequencyRollConvention = {}));
var UnderlyingReturnRateValuationDateBusinessDayConvention;
(function (UnderlyingReturnRateValuationDateBusinessDayConvention) {
    UnderlyingReturnRateValuationDateBusinessDayConvention[UnderlyingReturnRateValuationDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingReturnRateValuationDateBusinessDayConvention[UnderlyingReturnRateValuationDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingReturnRateValuationDateBusinessDayConvention[UnderlyingReturnRateValuationDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingReturnRateValuationDateBusinessDayConvention[UnderlyingReturnRateValuationDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingReturnRateValuationDateBusinessDayConvention[UnderlyingReturnRateValuationDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingReturnRateValuationDateBusinessDayConvention[UnderlyingReturnRateValuationDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingReturnRateValuationDateBusinessDayConvention[UnderlyingReturnRateValuationDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingReturnRateValuationDateBusinessDayConvention[UnderlyingReturnRateValuationDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingReturnRateValuationDateBusinessDayConvention = exports.UnderlyingReturnRateValuationDateBusinessDayConvention || (exports.UnderlyingReturnRateValuationDateBusinessDayConvention = {}));
var UnderlyingReturnRateFXRateCalc;
(function (UnderlyingReturnRateFXRateCalc) {
    UnderlyingReturnRateFXRateCalc["Multiply"] = "M";
    UnderlyingReturnRateFXRateCalc["Divide"] = "D";
})(UnderlyingReturnRateFXRateCalc = exports.UnderlyingReturnRateFXRateCalc || (exports.UnderlyingReturnRateFXRateCalc = {}));
var UnderlyingReturnRatePriceSequence;
(function (UnderlyingReturnRatePriceSequence) {
    UnderlyingReturnRatePriceSequence[UnderlyingReturnRatePriceSequence["Initial"] = 0] = "Initial";
    UnderlyingReturnRatePriceSequence[UnderlyingReturnRatePriceSequence["Interim"] = 1] = "Interim";
    UnderlyingReturnRatePriceSequence[UnderlyingReturnRatePriceSequence["Final"] = 2] = "Final";
})(UnderlyingReturnRatePriceSequence = exports.UnderlyingReturnRatePriceSequence || (exports.UnderlyingReturnRatePriceSequence = {}));
var UnderlyingReturnRateCommissionBasis;
(function (UnderlyingReturnRateCommissionBasis) {
    UnderlyingReturnRateCommissionBasis["AmountPerUnit"] = "1";
    UnderlyingReturnRateCommissionBasis["Percent"] = "2";
    UnderlyingReturnRateCommissionBasis["Absolute"] = "3";
    UnderlyingReturnRateCommissionBasis["PercentageWaivedCashDiscountBasis"] = "4";
    UnderlyingReturnRateCommissionBasis["PercentageWaivedEnhancedUnitsBasis"] = "5";
    UnderlyingReturnRateCommissionBasis["PointsPerBondOrContract"] = "6";
    UnderlyingReturnRateCommissionBasis["BasisPoints"] = "7";
    UnderlyingReturnRateCommissionBasis["AmountPerContract"] = "8";
})(UnderlyingReturnRateCommissionBasis = exports.UnderlyingReturnRateCommissionBasis || (exports.UnderlyingReturnRateCommissionBasis = {}));
var UnderlyingReturnRateQuoteMethod;
(function (UnderlyingReturnRateQuoteMethod) {
    UnderlyingReturnRateQuoteMethod[UnderlyingReturnRateQuoteMethod["Bid"] = 0] = "Bid";
    UnderlyingReturnRateQuoteMethod[UnderlyingReturnRateQuoteMethod["Mid"] = 1] = "Mid";
    UnderlyingReturnRateQuoteMethod[UnderlyingReturnRateQuoteMethod["Offer"] = 2] = "Offer";
})(UnderlyingReturnRateQuoteMethod = exports.UnderlyingReturnRateQuoteMethod || (exports.UnderlyingReturnRateQuoteMethod = {}));
var UnderlyingReturnRateQuoteTimeType;
(function (UnderlyingReturnRateQuoteTimeType) {
    UnderlyingReturnRateQuoteTimeType[UnderlyingReturnRateQuoteTimeType["Open"] = 0] = "Open";
    UnderlyingReturnRateQuoteTimeType[UnderlyingReturnRateQuoteTimeType["OfficialSettlementPriceTime"] = 1] = "OfficialSettlementPriceTime";
    UnderlyingReturnRateQuoteTimeType[UnderlyingReturnRateQuoteTimeType["Xetra"] = 2] = "Xetra";
    UnderlyingReturnRateQuoteTimeType[UnderlyingReturnRateQuoteTimeType["Close"] = 3] = "Close";
    UnderlyingReturnRateQuoteTimeType[UnderlyingReturnRateQuoteTimeType["DerivativesClose"] = 4] = "DerivativesClose";
    UnderlyingReturnRateQuoteTimeType[UnderlyingReturnRateQuoteTimeType["High"] = 5] = "High";
    UnderlyingReturnRateQuoteTimeType[UnderlyingReturnRateQuoteTimeType["Low"] = 6] = "Low";
    UnderlyingReturnRateQuoteTimeType[UnderlyingReturnRateQuoteTimeType["AsSpecifiedInTheMasterConfirmation"] = 7] = "AsSpecifiedInTheMasterConfirmation";
})(UnderlyingReturnRateQuoteTimeType = exports.UnderlyingReturnRateQuoteTimeType || (exports.UnderlyingReturnRateQuoteTimeType = {}));
var UnderlyingReturnRateValuationTimeType;
(function (UnderlyingReturnRateValuationTimeType) {
    UnderlyingReturnRateValuationTimeType[UnderlyingReturnRateValuationTimeType["Open"] = 0] = "Open";
    UnderlyingReturnRateValuationTimeType[UnderlyingReturnRateValuationTimeType["OfficialSettlementPriceTime"] = 1] = "OfficialSettlementPriceTime";
    UnderlyingReturnRateValuationTimeType[UnderlyingReturnRateValuationTimeType["Xetra"] = 2] = "Xetra";
    UnderlyingReturnRateValuationTimeType[UnderlyingReturnRateValuationTimeType["Close"] = 3] = "Close";
    UnderlyingReturnRateValuationTimeType[UnderlyingReturnRateValuationTimeType["DerivativesClose"] = 4] = "DerivativesClose";
    UnderlyingReturnRateValuationTimeType[UnderlyingReturnRateValuationTimeType["High"] = 5] = "High";
    UnderlyingReturnRateValuationTimeType[UnderlyingReturnRateValuationTimeType["Low"] = 6] = "Low";
    UnderlyingReturnRateValuationTimeType[UnderlyingReturnRateValuationTimeType["AsSpecifiedInTheMasterConfirmation"] = 7] = "AsSpecifiedInTheMasterConfirmation";
})(UnderlyingReturnRateValuationTimeType = exports.UnderlyingReturnRateValuationTimeType || (exports.UnderlyingReturnRateValuationTimeType = {}));
var UnderlyingReturnRateValuationPriceOption;
(function (UnderlyingReturnRateValuationPriceOption) {
    UnderlyingReturnRateValuationPriceOption[UnderlyingReturnRateValuationPriceOption["NoneTheDefault"] = 0] = "NoneTheDefault";
    UnderlyingReturnRateValuationPriceOption[UnderlyingReturnRateValuationPriceOption["FuturesPrice"] = 1] = "FuturesPrice";
    UnderlyingReturnRateValuationPriceOption[UnderlyingReturnRateValuationPriceOption["OptionsPrice"] = 2] = "OptionsPrice";
})(UnderlyingReturnRateValuationPriceOption = exports.UnderlyingReturnRateValuationPriceOption || (exports.UnderlyingReturnRateValuationPriceOption = {}));
var UnderlyingReturnRateFinalPriceFallback;
(function (UnderlyingReturnRateFinalPriceFallback) {
    UnderlyingReturnRateFinalPriceFallback[UnderlyingReturnRateFinalPriceFallback["Close"] = 0] = "Close";
    UnderlyingReturnRateFinalPriceFallback[UnderlyingReturnRateFinalPriceFallback["HedgeElection"] = 1] = "HedgeElection";
})(UnderlyingReturnRateFinalPriceFallback = exports.UnderlyingReturnRateFinalPriceFallback || (exports.UnderlyingReturnRateFinalPriceFallback = {}));
var UnderlyingReturnRateInformationSource;
(function (UnderlyingReturnRateInformationSource) {
    UnderlyingReturnRateInformationSource[UnderlyingReturnRateInformationSource["Bloomberg"] = 0] = "Bloomberg";
    UnderlyingReturnRateInformationSource[UnderlyingReturnRateInformationSource["Reuters"] = 1] = "Reuters";
    UnderlyingReturnRateInformationSource[UnderlyingReturnRateInformationSource["Telerate"] = 2] = "Telerate";
    UnderlyingReturnRateInformationSource[UnderlyingReturnRateInformationSource["IsdaSettlementRateOption"] = 3] = "IsdaSettlementRateOption";
    UnderlyingReturnRateInformationSource[UnderlyingReturnRateInformationSource["Other"] = 99] = "Other";
})(UnderlyingReturnRateInformationSource = exports.UnderlyingReturnRateInformationSource || (exports.UnderlyingReturnRateInformationSource = {}));
var UnderlyingReturnRatePriceBasis;
(function (UnderlyingReturnRatePriceBasis) {
    UnderlyingReturnRatePriceBasis[UnderlyingReturnRatePriceBasis["Gross"] = 0] = "Gross";
    UnderlyingReturnRatePriceBasis[UnderlyingReturnRatePriceBasis["Net"] = 1] = "Net";
    UnderlyingReturnRatePriceBasis[UnderlyingReturnRatePriceBasis["Accrued"] = 2] = "Accrued";
    UnderlyingReturnRatePriceBasis[UnderlyingReturnRatePriceBasis["CleanNet"] = 3] = "CleanNet";
})(UnderlyingReturnRatePriceBasis = exports.UnderlyingReturnRatePriceBasis || (exports.UnderlyingReturnRatePriceBasis = {}));
var UnderlyingReturnRatePriceType;
(function (UnderlyingReturnRatePriceType) {
    UnderlyingReturnRatePriceType[UnderlyingReturnRatePriceType["AbsoluteTerms"] = 0] = "AbsoluteTerms";
    UnderlyingReturnRatePriceType[UnderlyingReturnRatePriceType["PercentageOfNotional"] = 1] = "PercentageOfNotional";
})(UnderlyingReturnRatePriceType = exports.UnderlyingReturnRatePriceType || (exports.UnderlyingReturnRatePriceType = {}));
var UnderlyingReturnRateValuationDateType;
(function (UnderlyingReturnRateValuationDateType) {
    UnderlyingReturnRateValuationDateType[UnderlyingReturnRateValuationDateType["Unadjusted"] = 0] = "Unadjusted";
    UnderlyingReturnRateValuationDateType[UnderlyingReturnRateValuationDateType["Adjusted"] = 1] = "Adjusted";
})(UnderlyingReturnRateValuationDateType = exports.UnderlyingReturnRateValuationDateType || (exports.UnderlyingReturnRateValuationDateType = {}));
var UnderlyingSettlMethodElectionDateBusinessDayConvention;
(function (UnderlyingSettlMethodElectionDateBusinessDayConvention) {
    UnderlyingSettlMethodElectionDateBusinessDayConvention[UnderlyingSettlMethodElectionDateBusinessDayConvention["NotApplicable"] = 0] = "NotApplicable";
    UnderlyingSettlMethodElectionDateBusinessDayConvention[UnderlyingSettlMethodElectionDateBusinessDayConvention["NoneCurrentDay"] = 1] = "NoneCurrentDay";
    UnderlyingSettlMethodElectionDateBusinessDayConvention[UnderlyingSettlMethodElectionDateBusinessDayConvention["FollowingDay"] = 2] = "FollowingDay";
    UnderlyingSettlMethodElectionDateBusinessDayConvention[UnderlyingSettlMethodElectionDateBusinessDayConvention["FloatingRateNote"] = 3] = "FloatingRateNote";
    UnderlyingSettlMethodElectionDateBusinessDayConvention[UnderlyingSettlMethodElectionDateBusinessDayConvention["ModifiedFollowingDay"] = 4] = "ModifiedFollowingDay";
    UnderlyingSettlMethodElectionDateBusinessDayConvention[UnderlyingSettlMethodElectionDateBusinessDayConvention["PrecedingDay"] = 5] = "PrecedingDay";
    UnderlyingSettlMethodElectionDateBusinessDayConvention[UnderlyingSettlMethodElectionDateBusinessDayConvention["ModifiedPrecedingDay"] = 6] = "ModifiedPrecedingDay";
    UnderlyingSettlMethodElectionDateBusinessDayConvention[UnderlyingSettlMethodElectionDateBusinessDayConvention["NearestDay"] = 7] = "NearestDay";
})(UnderlyingSettlMethodElectionDateBusinessDayConvention = exports.UnderlyingSettlMethodElectionDateBusinessDayConvention || (exports.UnderlyingSettlMethodElectionDateBusinessDayConvention = {}));
var UnderlyingSettlMethodElectionDateOffsetUnit;
(function (UnderlyingSettlMethodElectionDateOffsetUnit) {
    UnderlyingSettlMethodElectionDateOffsetUnit["Day"] = "D";
    UnderlyingSettlMethodElectionDateOffsetUnit["Week"] = "Wk";
    UnderlyingSettlMethodElectionDateOffsetUnit["Month"] = "Mo";
    UnderlyingSettlMethodElectionDateOffsetUnit["Year"] = "Yr";
})(UnderlyingSettlMethodElectionDateOffsetUnit = exports.UnderlyingSettlMethodElectionDateOffsetUnit || (exports.UnderlyingSettlMethodElectionDateOffsetUnit = {}));
var UnderlyingSettlMethodElectionDateOffsetDayType;
(function (UnderlyingSettlMethodElectionDateOffsetDayType) {
    UnderlyingSettlMethodElectionDateOffsetDayType[UnderlyingSettlMethodElectionDateOffsetDayType["Business"] = 0] = "Business";
    UnderlyingSettlMethodElectionDateOffsetDayType[UnderlyingSettlMethodElectionDateOffsetDayType["Calendar"] = 1] = "Calendar";
    UnderlyingSettlMethodElectionDateOffsetDayType[UnderlyingSettlMethodElectionDateOffsetDayType["CommodityBusiness"] = 2] = "CommodityBusiness";
    UnderlyingSettlMethodElectionDateOffsetDayType[UnderlyingSettlMethodElectionDateOffsetDayType["CurrencyBusiness"] = 3] = "CurrencyBusiness";
    UnderlyingSettlMethodElectionDateOffsetDayType[UnderlyingSettlMethodElectionDateOffsetDayType["ExchangeBusiness"] = 4] = "ExchangeBusiness";
    UnderlyingSettlMethodElectionDateOffsetDayType[UnderlyingSettlMethodElectionDateOffsetDayType["ScheduledTradingDay"] = 5] = "ScheduledTradingDay";
})(UnderlyingSettlMethodElectionDateOffsetDayType = exports.UnderlyingSettlMethodElectionDateOffsetDayType || (exports.UnderlyingSettlMethodElectionDateOffsetDayType = {}));
var UnderlyingStreamNotionalAdjustments;
(function (UnderlyingStreamNotionalAdjustments) {
    UnderlyingStreamNotionalAdjustments[UnderlyingStreamNotionalAdjustments["Execution"] = 0] = "Execution";
    UnderlyingStreamNotionalAdjustments[UnderlyingStreamNotionalAdjustments["PortfolioRebalancing"] = 1] = "PortfolioRebalancing";
    UnderlyingStreamNotionalAdjustments[UnderlyingStreamNotionalAdjustments["Standard"] = 2] = "Standard";
})(UnderlyingStreamNotionalAdjustments = exports.UnderlyingStreamNotionalAdjustments || (exports.UnderlyingStreamNotionalAdjustments = {}));
var BatchProcessMode;
(function (BatchProcessMode) {
    BatchProcessMode[BatchProcessMode["UpdateIncrementalDefaultIfNotSpecified"] = 0] = "UpdateIncrementalDefaultIfNotSpecified";
    BatchProcessMode[BatchProcessMode["Snapshot"] = 1] = "Snapshot";
})(BatchProcessMode = exports.BatchProcessMode || (exports.BatchProcessMode = {}));
var PostTradeType;
(function (PostTradeType) {
    PostTradeType[PostTradeType["GiceUp"] = 0] = "GiceUp";
    PostTradeType[PostTradeType["AveragePrice"] = 1] = "AveragePrice";
    PostTradeType[PostTradeType["CrossExchangeGiveUp"] = 2] = "CrossExchangeGiveUp";
})(PostTradeType = exports.PostTradeType || (exports.PostTradeType = {}));
var ExecutingClaimingIndicator;
(function (ExecutingClaimingIndicator) {
    ExecutingClaimingIndicator[ExecutingClaimingIndicator["ExecutingFirm"] = 0] = "ExecutingFirm";
    ExecutingClaimingIndicator[ExecutingClaimingIndicator["ClaimingFirm"] = 1] = "ClaimingFirm";
})(ExecutingClaimingIndicator = exports.ExecutingClaimingIndicator || (exports.ExecutingClaimingIndicator = {}));
//# sourceMappingURL=all-enum.js.map