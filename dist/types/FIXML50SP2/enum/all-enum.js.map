{"version":3,"file":"all-enum.js","sourceRoot":"","sources":["../../../../src/types/FIXML50SP2/enum/all-enum.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n*************************************\r\n* Broker's side of advertised trade *\r\n*************************************\r\n*/\r\nexport enum AdvSide {\r\n  Buy = 'B',\r\n  Sell = 'S',\r\n  Trade = 'T',\r\n  Cross = 'X'\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Identifies advertisement message transaction type *\r\n*****************************************************\r\n*/\r\nexport enum AdvTransType {\r\n  New = 'N',\r\n  Cancel = 'C',\r\n  Replace = 'R'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the basis or unit used to calculate the total *\r\n* commission based on the rate.                           *\r\n***********************************************************\r\n*/\r\nexport enum CommType {\r\n  AmountPerUnit = '1',\r\n  Percent = '2',\r\n  Absolute = '3',\r\n  PercentageWaivedCashDiscountBasis = '4',\r\n  PercentageWaivedEnhancedUnitsBasis = '5',\r\n  PointsPerBondOrContract = '6',\r\n  BasisPoints = '7',\r\n  AmountPerContract = '8'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Instructions for order handling on exchange trading floor.   *\r\n* If more than one instruction is applicable to an order, this *\r\n* field can contain multiple instructions separated by space.  *\r\n* *** SOME VALUES HAVE BEEN REPLACED - See \"Replaced Features  *\r\n* and Supported Approach\" *** (see Volume : \"Glossary\" for     *\r\n* value definitions)                                           *\r\n****************************************************************\r\n*/\r\nexport enum ExecInst {\r\n  StayOnOfferSide = '0',\r\n  NotHeld = '1',\r\n  Work = '2',\r\n  GoAlong = '3',\r\n  OverTheDay = '4',\r\n  Held = '5',\r\n  ParticipateDontInitiate = '6',\r\n  StrictScale = '7',\r\n  TryToScale = '8',\r\n  StayOnBidSide = '9',\r\n  NoCross = 'A',\r\n  OkToCross = 'B',\r\n  CallFirst = 'C',\r\n  PercentOfVolume = 'D',\r\n  DoNotIncreaseDni = 'E',\r\n  DoNotReduceDnr = 'F',\r\n  AllOrNoneAon = 'G',\r\n  ReinstateOnSystemFailure = 'H',\r\n  InstitutionsOnly = 'I',\r\n  ReinstateOnTradingHalt = 'J',\r\n  CancelOnTradingHalt = 'K',\r\n  LastPegLastSale = 'L',\r\n  MidPricePegMidpriceOfInsideQuote = 'M',\r\n  NonNegotiable = 'N',\r\n  OpeningPeg = 'O',\r\n  MarketPeg = 'P',\r\n  CancelOnSystemFailure = 'Q',\r\n  PrimaryPeg = 'R',\r\n  Suspend = 'S',\r\n  FixedPegToLocalBestBidOrOfferAtTimeOfOrder = 'T',\r\n  CustomerDisplayInstruction = 'U',\r\n  NettingForForex = 'V',\r\n  PegToVwap = 'W',\r\n  TradeAlong = 'X',\r\n  TryToStop = 'Y',\r\n  CancelIfNotBest = 'Z',\r\n  TrailingStopPeg = 'a',\r\n  StrictLimit = 'b',\r\n  IgnorePriceValidityChecks = 'c',\r\n  PegToLimitPrice = 'd',\r\n  WorkToTargetStrategy = 'e',\r\n  IntermarketSweep = 'f',\r\n  ExternalRoutingAllowed = 'g',\r\n  ExternalRoutingNotAllowed = 'h',\r\n  ImbalanceOnly = 'i',\r\n  SingleExecutionRequestedForBlockTrade = 'j',\r\n  BestExecution = 'k',\r\n  SuspendOnSystemFailure = 'l',\r\n  SuspendOnTradingHalt = 'm',\r\n  ReinstateOnConnectionLoss = 'n',\r\n  CancelOnConnectionLoss = 'o',\r\n  SuspendOnConnectionLoss = 'p',\r\n  Release = 'q',\r\n  ExecuteAsDeltaNeutralUsingVolatilityProvided = 'r',\r\n  ExecuteAsDurationNeutral = 's',\r\n  ExecuteAsFxNeutral = 't',\r\n  MinimumGuaranteedFillEligible = 'u',\r\n  BypassNonDisplayedLiquidity = 'v',\r\n  Lock = 'w',\r\n  IgnoreNotionalValueChecks = 'x',\r\n  TradeAtReferencePrice = 'y'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Instructions for order handling on Broker trading floor *\r\n***********************************************************\r\n*/\r\nexport enum HandlInst {\r\n  AutomatedExecutionOrderPrivateNoBrokerIntervention = '1',\r\n  AutomatedExecutionOrderPublicBrokerInterventionOk = '2',\r\n  ManualOrderBestExecution = '3'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Identifies class or source of the SecurityID(48) value. *\r\n***********************************************************\r\n*/\r\nexport enum SecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n**********************************\r\n* Relative quality of indication *\r\n**********************************\r\n*/\r\nexport enum IOIQltyInd {\r\n  High = 'H',\r\n  Low = 'L',\r\n  Medium = 'M'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Quantity (e.g. number of shares) in numeric form or relative *\r\n* size.                                                        *\r\n****************************************************************\r\n*/\r\nexport enum IOIQty {\r\n  Small = 'S',\r\n  Medium = 'M',\r\n  Large = 'L',\r\n  UndisclosedQuantity = 'U'\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Identifies IOI message transaction type *\r\n*******************************************\r\n*/\r\nexport enum IOITransType {\r\n  New = 'N',\r\n  Cancel = 'C',\r\n  Replace = 'R'\r\n}\r\n\r\n/*\r\n**************************************\r\n* Broker capacity in order execution *\r\n**************************************\r\n*/\r\nexport enum LastCapacity {\r\n  Agent = '1',\r\n  CrossAsAgent = '2',\r\n  CrossAsPrincipal = '3',\r\n  Principal = '4',\r\n  RisklessPrincipal = '5'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always *\r\n* unencrypted)                                                *\r\n* Note: A \"U\" as the first character in the MsgType field     *\r\n* (i.e. U, U2, etc) indicates that the message format is      *\r\n* privately defined between the sender and receiver.          *\r\n* *** Note the use of lower case letters ***                  *\r\n***************************************************************\r\n*/\r\nexport enum MsgType {\r\n  Heartbeat = '0',\r\n  TestRequest = '1',\r\n  ResendRequest = '2',\r\n  Reject = '3',\r\n  SequenceReset = '4',\r\n  Logout = '5',\r\n  Ioi = '6',\r\n  Advertisement = '7',\r\n  ExecutionReport = '8',\r\n  OrderCancelReject = '9',\r\n  Logon = 'A',\r\n  News = 'B',\r\n  Email = 'C',\r\n  NewOrderSingle = 'D',\r\n  NewOrderList = 'E',\r\n  OrderCancelRequest = 'F',\r\n  OrderCancelReplaceRequest = 'G',\r\n  OrderStatusRequest = 'H',\r\n  AllocationInstruction = 'J',\r\n  ListCancelRequest = 'K',\r\n  ListExecute = 'L',\r\n  ListStatusRequest = 'M',\r\n  ListStatus = 'N',\r\n  AllocationInstructionAck = 'P',\r\n  DontKnowTrade = 'Q',\r\n  QuoteRequest = 'R',\r\n  Quote = 'S',\r\n  SettlementInstructions = 'T',\r\n  MarketDataRequest = 'V',\r\n  MarketDataSnapshotFullRefresh = 'W',\r\n  MarketDataIncrementalRefresh = 'X',\r\n  MarketDataRequestReject = 'Y',\r\n  QuoteCancel = 'Z',\r\n  QuoteStatusRequest = 'a',\r\n  MassQuoteAck = 'b',\r\n  SecurityDefinitionRequest = 'c',\r\n  SecurityDefinition = 'd',\r\n  SecurityStatusRequest = 'e',\r\n  SecurityStatus = 'f',\r\n  TradingSessionStatusRequest = 'g',\r\n  TradingSessionStatus = 'h',\r\n  MassQuote = 'i',\r\n  BusinessMessageReject = 'j',\r\n  BidRequest = 'k',\r\n  BidResponse = 'l',\r\n  ListStrikePrice = 'm',\r\n  XmLnonFix = 'n',\r\n  RegistrationInstructions = 'o',\r\n  RegistrationInstructionsResponse = 'p',\r\n  OrderMassCancelRequest = 'q',\r\n  OrderMassCancelReport = 'r',\r\n  NewOrderCross = 's',\r\n  CrossOrderCancelReplaceRequest = 't',\r\n  CrossOrderCancelRequest = 'u',\r\n  SecurityTypeRequest = 'v',\r\n  SecurityTypes = 'w',\r\n  SecurityListRequest = 'x',\r\n  SecurityList = 'y',\r\n  DerivativeSecurityListRequest = 'z',\r\n  DerivativeSecurityList = 'AA',\r\n  NewOrderMultileg = 'AB',\r\n  MultilegOrderCancelReplace = 'AC',\r\n  TradeCaptureReportRequest = 'AD',\r\n  TradeCaptureReport = 'AE',\r\n  OrderMassStatusRequest = 'AF',\r\n  QuoteRequestReject = 'AG',\r\n  RfqRequest = 'AH',\r\n  QuoteStatusReport = 'AI',\r\n  QuoteResponse = 'AJ',\r\n  Confirmation = 'AK',\r\n  PositionMaintenanceRequest = 'AL',\r\n  PositionMaintenanceReport = 'AM',\r\n  RequestForPositions = 'AN',\r\n  RequestForPositionsAck = 'AO',\r\n  PositionReport = 'AP',\r\n  TradeCaptureReportRequestAck = 'AQ',\r\n  TradeCaptureReportAck = 'AR',\r\n  AllocationReport = 'AS',\r\n  AllocationReportAck = 'AT',\r\n  ConfirmationAck = 'AU',\r\n  SettlementInstructionRequest = 'AV',\r\n  AssignmentReport = 'AW',\r\n  CollateralRequest = 'AX',\r\n  CollateralAssignment = 'AY',\r\n  CollateralResponse = 'AZ',\r\n  CollateralReport = 'BA',\r\n  CollateralInquiry = 'BB',\r\n  NetworkCounterpartySystemStatusRequest = 'BC',\r\n  NetworkCounterpartySystemStatusResponse = 'BD',\r\n  UserRequest = 'BE',\r\n  UserResponse = 'BF',\r\n  CollateralInquiryAck = 'BG',\r\n  ConfirmationRequest = 'BH',\r\n  ContraryIntentionReport = 'BO',\r\n  SecurityDefinitionUpdateReport = 'BP',\r\n  SecurityListUpdateReport = 'BK',\r\n  AdjustedPositionReport = 'BL',\r\n  AllocationInstructionAlert = 'BM',\r\n  ExecutionAck = 'BN',\r\n  TradingSessionList = 'BJ',\r\n  TradingSessionListRequest = 'BI',\r\n  SettlementObligationReport = 'BQ',\r\n  DerivativeSecurityListUpdateReport = 'BR',\r\n  TradingSessionListUpdateReport = 'BS',\r\n  MarketDefinitionRequest = 'BT',\r\n  MarketDefinition = 'BU',\r\n  MarketDefinitionUpdateReport = 'BV',\r\n  ApplicationMessageRequest = 'BW',\r\n  ApplicationMessageRequestAck = 'BX',\r\n  ApplicationMessageReport = 'BY',\r\n  OrderMassActionReport = 'BZ',\r\n  OrderMassActionRequest = 'CA',\r\n  UserNotification = 'CB',\r\n  StreamAssignmentRequest = 'CC',\r\n  StreamAssignmentReport = 'CD',\r\n  StreamAssignmentReportAck = 'CE',\r\n  PartyDetailsListRequest = 'CF',\r\n  PartyDetailsListReport = 'CG',\r\n  MarginRequirementInquiry = 'CH',\r\n  MarginRequirementInquiryAck = 'CI',\r\n  MarginRequirementReport = 'CJ',\r\n  PartyDetailsListUpdateReport = 'CK',\r\n  PartyRiskLimitsRequest = 'CL',\r\n  PartyRiskLimitsReport = 'CM',\r\n  SecurityMassStatusRequest = 'CN',\r\n  SecurityMassStatus = 'CO',\r\n  AccountSummaryReport = 'CQ',\r\n  PartyRiskLimitsUpdateReport = 'CR',\r\n  PartyRiskLimitsDefinitionRequest = 'CS',\r\n  PartyRiskLimitsDefinitionRequestAck = 'CT',\r\n  PartyEntitlementsRequest = 'CU',\r\n  PartyEntitlementsReport = 'CV',\r\n  QuoteAck = 'CW',\r\n  PartyDetailsDefinitionRequest = 'CX',\r\n  PartyDetailsDefinitionRequestAck = 'CY',\r\n  PartyEntitlementsUpdateReport = 'CZ',\r\n  PartyEntitlementsDefinitionRequest = 'DA',\r\n  PartyEntitlementsDefinitionRequestAck = 'DB',\r\n  TradeMatchReport = 'DC',\r\n  TradeMatchReportAck = 'DD',\r\n  PartyRiskLimitsReportAck = 'DE',\r\n  PartyRiskLimitCheckRequest = 'DF',\r\n  PartyRiskLimitCheckRequestAck = 'DG',\r\n  PartyActionRequest = 'DH',\r\n  PartyActionReport = 'DI',\r\n  MassOrder = 'DJ',\r\n  MassOrderAck = 'DK',\r\n  PositionTransferInstruction = 'DL',\r\n  PositionTransferInstructionAck = 'DM',\r\n  PositionTransferReport = 'DN',\r\n  MarketDataStatisticsRequest = 'DO',\r\n  MarketDataStatisticsReport = 'DP',\r\n  CollateralReportAck = 'DQ',\r\n  MarketDataReport = 'DR',\r\n  CrossRequest = 'DS',\r\n  CrossRequestAck = 'DT'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Identifies current status of order. *** SOME VALUES HAVE *\r\n* BEEN REPLACED - See \"Replaced Features and Supported     *\r\n* Approach\" *** (see Volume : \"Glossary\" for value         *\r\n* definitions)                                             *\r\n************************************************************\r\n*/\r\nexport enum OrdStatus {\r\n  New = '0',\r\n  PartiallyFilled = '1',\r\n  Filled = '2',\r\n  DoneForDay = '3',\r\n  Canceled = '4',\r\n  ReplacedNoLongerUsed = '5',\r\n  PendingCancelIEResultOfOrderCancelRequest = '6',\r\n  Stopped = '7',\r\n  Rejected = '8',\r\n  Suspended = '9',\r\n  PendingNew = 'A',\r\n  Calculated = 'B',\r\n  Expired = 'C',\r\n  AcceptedForBidding = 'D',\r\n  PendingReplaceIEResultOfOrderCancelReplaceRequest = 'E'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Order type. *** SOME VALUES ARE NO LONGER USED - See      *\r\n* \"Deprecated (Phased-out) Features and Supported Approach\" *\r\n* *** (see Volume : \"Glossary\" for value definitions)       *\r\n*************************************************************\r\n*/\r\nexport enum OrdType {\r\n  Market = '1',\r\n  Limit = '2',\r\n  StopStopLoss = '3',\r\n  StopLimit = '4',\r\n  MarketOnCloseNoLongerUsed = '5',\r\n  WithOrWithout = '6',\r\n  LimitOrBetter = '7',\r\n  LimitWithOrWithout = '8',\r\n  OnBasis = '9',\r\n  OnCloseNoLongerUsed = 'A',\r\n  LimitOnCloseNoLongerUsed = 'B',\r\n  ForexMarketNoLongerUsed = 'C',\r\n  PreviouslyQuoted = 'D',\r\n  PreviouslyIndicated = 'E',\r\n  ForexLimitNoLongerUsed = 'F',\r\n  ForexSwap = 'G',\r\n  ForexPreviouslyQuotedNoLongerUsed = 'H',\r\n  FunariLimitDayOrderWithUnexecutedPortionHandlesAsMarketOnCloseEGJapan = 'I',\r\n  MarketIfTouchedMit = 'J',\r\n  MarketWithLeftOverAsLimitMarketOrderWithUnexecutedQuantityBecomingLimitOrderAtLastPrice = 'K',\r\n  PreviousFundValuationPointHistoricPricingForCiv = 'L',\r\n  NextFundValuationPointForwardPricingForCiv = 'M',\r\n  Pegged = 'P',\r\n  CounterOrderSelection = 'Q',\r\n  StopOnBidOrOffer = 'R',\r\n  StopLimitOnBidOrOffer = 'S'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Indicates possible retransmission of message with this *\r\n* sequence number                                        *\r\n**********************************************************\r\n*/\r\nexport enum PossDupFlag {\r\n  OriginalTransmission = 'N',\r\n  PossibleDuplicate = 'Y'\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Side of order (see Volume : \"Glossary\" for value *\r\n* definitions)                                     *\r\n****************************************************\r\n*/\r\nexport enum Side {\r\n  Buy = '1',\r\n  Sell = '2',\r\n  BuyMinus = '3',\r\n  SellPlus = '4',\r\n  SellShort = '5',\r\n  SellShortExempt = '6',\r\n  Undisclosed = '7',\r\n  CrossOrdersWhereCounterpartyIsAnExchangeValidForAllMessagesExceptIoIs = '8',\r\n  CrossShort = '9',\r\n  CrossShortExempt = 'A',\r\n  AsDefinedForUseWithMultilegInstruments = 'B',\r\n  OppositeForUseWithMultilegInstruments = 'C',\r\n  SubscribeEGCiv = 'D',\r\n  RedeemEGCiv = 'E',\r\n  LendFinancingIdentifiesDirectionOfCollateral = 'F',\r\n  BorrowFinancingIdentifiesDirectionOfCollateral = 'G',\r\n  SellUndisclosed = 'H'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies how long the order remains in effect. Absence of   *\r\n* this field is interpreted as DAY. NOTE not applicable to CIV *\r\n* Orders. (see Volume : \"Glossary\" for value definitions)      *\r\n****************************************************************\r\n*/\r\nexport enum TimeInForce {\r\n  DayOrSession = '0',\r\n  GoodTillCancelGtc = '1',\r\n  AtTheOpeningOpg = '2',\r\n  ImmediateOrCancelIoc = '3',\r\n  FillOrKillFok = '4',\r\n  GoodTillCrossingGtx = '5',\r\n  GoodTillDateGtd = '6',\r\n  AtTheClose = '7',\r\n  GoodThroughCrossing = '8',\r\n  AtCrossing = '9',\r\n  GoodForTimeGft = 'A',\r\n  GoodForAuctionGfa = 'B'\r\n}\r\n\r\n/*\r\n****************\r\n* Urgency flag *\r\n****************\r\n*/\r\nexport enum Urgency {\r\n  Normal = '0',\r\n  Flash = '1',\r\n  Background = '2'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates order settlement period. If present, SettlDate     *\r\n* (64) overrides this field. If both SettlType (63) and        *\r\n* SettDate (64) are omitted, the default for SettlType (63) is *\r\n* 0 (Regular)                                                  *\r\n* Regular is defined as the default settlement period for the  *\r\n* particular security on the exchange of execution.            *\r\n* In Fixed Income the contents of this field may influence the *\r\n* instrument definition if the SecurityID (48) is ambiguous.   *\r\n* In the US an active Treasury offering may be re-opened, and  *\r\n* for a time one CUSIP will apply to both the current and      *\r\n* \"when-issued\" securities. Supplying a value of \"7\" clarifies *\r\n* the instrument description; any other value or the absence   *\r\n* of this field should cause the respondent to default to the  *\r\n* active issue.                                                *\r\n* Additionally the following patterns may be uses as well as   *\r\n* enum values                                                  *\r\n* Dx = FX tenor expression for \"days\", e.g. \"D5\", where \"x\" is *\r\n* any integer > 0                                              *\r\n* Mx = FX tenor expression for \"months\", e.g. \"M3\", where \"x\"  *\r\n* is any integer > 0                                           *\r\n* Wx = FX tenor expression for \"weeks\", e.g. \"W13\", where \"x\"  *\r\n* is any integer > 0                                           *\r\n* Yx = FX tenor expression for \"years\", e.g. \"Y1\", where \"x\"   *\r\n* is any integer > 0                                           *\r\n* Noted that for FX the tenors expressed using Dx, Mx, Wx, and *\r\n* Yx values do not denote business days, but calendar days.    *\r\n****************************************************************\r\n*/\r\nexport enum SettlType {\r\n  RegularFxSpotSettlementT1OrT2DependingOnCurrency = '0',\r\n  CashTodT0 = '1',\r\n  NextDayTomT1 = '2',\r\n  T2 = '3',\r\n  T3 = '4',\r\n  T4 = '5',\r\n  Future = '6',\r\n  WhenAndIfIssued = '7',\r\n  SellersOption = '8',\r\n  T5 = '9',\r\n  BrokenDate = 'B',\r\n  FxSpotNextSettlementSpot1AkaNextDay = 'C'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Additional information about the security (e.g. preferred, *\r\n* warrants, etc.). Note also see SecurityType (167).         *\r\n* As defined in the NYSE Stock and bond Symbol Directory and *\r\n* in the AMEX Fitch Directory.                               *\r\n**************************************************************\r\n*/\r\nexport enum SymbolSfx {\r\n  EucpWithLumpSumInterestRatherThanDiscountPrice = 'CD',\r\n  WhenIssuedForASecurityToBeReissuedUnderAnOldCusipOrIsin = 'WI'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Identifies allocation transaction type *** SOME VALUES HAVE *\r\n* BEEN REPLACED - See \"Replaced Features and Supported        *\r\n* Approach\" ***                                               *\r\n***************************************************************\r\n*/\r\nexport enum AllocTransType {\r\n  New = '0',\r\n  Replace = '1',\r\n  Cancel = '2',\r\n  PreliminaryWithoutMiscFeesAndNetMoneyRemovedReplaced = '3',\r\n  CalculatedIncludesMiscFeesAndNetMoneyRemovedReplaced = '4',\r\n  CalculatedWithoutPreliminarySentUnsolicitedByBrokerIncludesMiscFeesAndNetMoneyRemovedReplaced = '5',\r\n  Reversal = '6'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates whether the resulting position after a trade      *\r\n* should be an opening position or closing position. Used for *\r\n* omnibus accounting - where accounts are held on a gross     *\r\n* basis instead of being netted together.                     *\r\n***************************************************************\r\n*/\r\nexport enum PositionEffect {\r\n  Close = 'C',\r\n  Fifo = 'F',\r\n  Open = 'O',\r\n  Rolled = 'R',\r\n  CloseButNotifyOnOpen = 'N',\r\n  Default = 'D'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Processing code for sub-account. Absence of this field in *\r\n* AllocAccount (79) / AllocPrice (366) /AllocQty (80) /     *\r\n* ProcessCode instance indicates regular trade.             *\r\n*************************************************************\r\n*/\r\nexport enum ProcessCode {\r\n  Regular = '0',\r\n  SoftDollar = '1',\r\n  StepIn = '2',\r\n  StepOut = '3',\r\n  SoftDollarStepIn = '4',\r\n  SoftDollarStepOut = '5',\r\n  PlanSponsor = '6'\r\n}\r\n\r\n/*\r\n************************************\r\n* Identifies status of allocation. *\r\n************************************\r\n*/\r\nexport enum AllocStatus {\r\n  AcceptedSuccessfullyProcessed = 0,\r\n  BlockLevelReject = 1,\r\n  AccountLevelReject = 2,\r\n  ReceivedReceivedNotYetProcessed = 3,\r\n  Incomplete = 4,\r\n  RejectedByIntermediary = 5,\r\n  AllocationPending = 6,\r\n  Reversed = 7,\r\n  CancelledByIntermediary = 8,\r\n  Claimed = 9,\r\n  Refused = 10,\r\n  PendingGiveUpApproval = 11,\r\n  Cancelled = 12,\r\n  PendingTakeUpApproval = 13,\r\n  ReversalPending = 14\r\n}\r\n\r\n/*\r\n************************************\r\n* Identifies reason for rejection. *\r\n************************************\r\n*/\r\nexport enum AllocRejCode {\r\n  UnknownOrMissingAccountS = 0,\r\n  IncorrectOrMissingBlockQuantity = 1,\r\n  IncorrectOrMissingAveragePrice = 2,\r\n  UnknownExecutingBrokerMnemonic = 3,\r\n  IncorrectOrMissingCommission = 4,\r\n  UnknownOrderId37 = 5,\r\n  UnknownListId66 = 6,\r\n  OtherFurtherInText58 = 7,\r\n  IncorrectOrMissingAllocatedQuantity = 8,\r\n  CalculationDifference = 9,\r\n  UnknownOrStaleExecId = 10,\r\n  MismatchedData = 11,\r\n  UnknownClOrdId = 12,\r\n  WarehouseRequestRejected = 13,\r\n  DuplicateOrMissingIndividualAllocId467 = 14,\r\n  TradeNotRecognized = 15,\r\n  TradePreviouslyAllocated = 16,\r\n  IncorrectOrMissingInstrument = 17,\r\n  IncorrectOrMissingSettlementDate = 18,\r\n  IncorrectOrMissingFundIdOrFundName = 19,\r\n  IncorrectOrMissingSettlementInstructions = 20,\r\n  IncorrectOrMissingFees = 21,\r\n  IncorrectOrMissingTax = 22,\r\n  UnknownOrMissingParty = 23,\r\n  IncorrectOrMissingSide = 24,\r\n  IncorrectOrMissingNetMoney = 25,\r\n  IncorrectOrMissingTradeDate = 26,\r\n  IncorrectOrMissingSettlementCurrencyInstructions = 27,\r\n  IncorrrectOrMissingProcessCode81 = 28,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***********************\r\n* Email message type. *\r\n***********************\r\n*/\r\nexport enum EmailType {\r\n  New = '0',\r\n  Reply = '1',\r\n  AdminReply = '2'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates that message may contain information that has been *\r\n* sent under another sequence number.                          *\r\n****************************************************************\r\n*/\r\nexport enum PossResend {\r\n  OriginalTransmission = 'N',\r\n  PossibleResend = 'Y'\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Code to identify reason for cancel rejection. *\r\n*************************************************\r\n*/\r\nexport enum CxlRejReason {\r\n  TooLateToCancel = 0,\r\n  UnknownOrder = 1,\r\n  BrokerExchangeOption = 2,\r\n  OrderAlreadyInPendingCancelOrPendingReplaceStatus = 3,\r\n  UnableToProcessOrderMassCancelRequest = 4,\r\n  OrigOrdModTime586DidNotMatchLastTransactTime60OfOrder = 5,\r\n  DuplicateClOrdId11Received = 6,\r\n  PriceExceedsCurrentPrice = 7,\r\n  PriceExceedsCurrentPriceBand = 8,\r\n  InvalidPriceIncrement = 18,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Code to identify reason for order rejection. Note: Values 3, *\r\n* 4, and 5 will be used when rejecting an order due to         *\r\n* pre-allocation information errors.                           *\r\n****************************************************************\r\n*/\r\nexport enum OrdRejReason {\r\n  BrokerExchangeOption = 0,\r\n  UnknownSymbol = 1,\r\n  ExchangeClosed = 2,\r\n  OrderExceedsLimit = 3,\r\n  TooLateToEnter = 4,\r\n  UnknownOrder = 5,\r\n  DuplicateOrderEGDupeClOrdId = 6,\r\n  DuplicateOfAVerballyCommunicatedOrder = 7,\r\n  StaleOrder = 8,\r\n  TradeAlongRequired = 9,\r\n  InvalidInvestorId = 10,\r\n  UnsupportedOrderCharacteristic = 11,\r\n  SurveillanceOption = 12,\r\n  IncorrectQuantity = 13,\r\n  IncorrectAllocatedQuantity = 14,\r\n  UnknownAccountS = 15,\r\n  PriceExceedsCurrentPriceBand = 16,\r\n  InvalidPriceIncrement = 18,\r\n  ReferencePriceNotAvailable = 19,\r\n  NotionalValueExceedsThreshold = 20,\r\n  AlgorithmRiskThresholdBreached = 21,\r\n  ShortSellNotPermitted = 22,\r\n  ShortSellRejectedDueToSecurityPreBorrowRestriction = 23,\r\n  ShortSellRejectedDueToAccountPreBorrowRestriction = 24,\r\n  InsufficientCreditLimit = 25,\r\n  ExceededClipSizeLimit = 26,\r\n  ExceededMaximumNotionalOrderAmount = 27,\r\n  ExceededDv01Pv01Limit = 28,\r\n  ExceededCs01Limit = 29,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Code to qualify IOI use. (see Volume : \"Glossary\" for value *\r\n* definitions)                                                *\r\n***************************************************************\r\n*/\r\nexport enum IOIQualifier {\r\n  QuantityIsNegotiable = '1',\r\n  AllowLateBids = '2',\r\n  ImmediateOrCounter = '3',\r\n  AutoTrade = '4',\r\n  AllOrNoneAon = 'A',\r\n  MarketOnCloseMocHeldToClose = 'B',\r\n  AtTheCloseAroundNotHeldToClose = 'C',\r\n  VwapVolumeWeightedAveragePrice = 'D',\r\n  Axe = 'E',\r\n  AxeOnBid = 'F',\r\n  AxeOnOffer = 'G',\r\n  ClientNaturalWorking = 'H',\r\n  InTouchWith = 'I',\r\n  PositionWanted = 'J',\r\n  MarketMaking = 'K',\r\n  Limit = 'L',\r\n  MoreBehind = 'M',\r\n  ClientNaturalBlock = 'N',\r\n  AtTheOpen = 'O',\r\n  TakingAPosition = 'P',\r\n  AtTheMarketPreviouslyCalledCurrentQuote = 'Q',\r\n  ReadyToTrade = 'R',\r\n  InventoryOrPortfolioShown = 'S',\r\n  ThroughTheDay = 'T',\r\n  Unwind = 'U',\r\n  Versus = 'V',\r\n  IndicationWorkingAway = 'W',\r\n  CrossingOpportunity = 'X',\r\n  AtTheMidpoint = 'Y',\r\n  PreOpen = 'Z',\r\n  AutomaticSpot = 'a',\r\n  PlatformCalculatedSpot = 'b',\r\n  OutsideSpread = 'c',\r\n  DeferredSpot = 'd',\r\n  NegotiatedSpot = 'n'\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Identifies party of trade responsible for exchange *\r\n* reporting.                                         *\r\n******************************************************\r\n*/\r\nexport enum ReportToExch {\r\n  IndicatesThePartySendingMessageWillReportTrade = 'N',\r\n  IndicatesThePartyReceivingMessageMustReportTrade = 'Y'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Indicates whether the broker is to locate the stock in *\r\n* conjunction with a short sell order.                   *\r\n**********************************************************\r\n*/\r\nexport enum LocateReqd {\r\n  IndicatesTheBrokerIsNotRequiredToLocate = 'N',\r\n  IndicatesTheBrokerIsResponsibleForLocatingTheStock = 'Y'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Indicates request for forex accommodation trade to be *\r\n* executed along with security transaction.             *\r\n*********************************************************\r\n*/\r\nexport enum ForexReq {\r\n  DoNotExecuteForexAfterSecurityTrade = 'N',\r\n  ExecuteForexAfterSecurityTrade = 'Y'\r\n}\r\n\r\n/*\r\n***********************************\r\n* Reason for execution rejection. *\r\n***********************************\r\n*/\r\nexport enum DKReason {\r\n  UnknownSecurity = 'A',\r\n  WrongSide = 'B',\r\n  QuantityExceedsOrder = 'C',\r\n  NoMatchingOrder = 'D',\r\n  PriceExceedsLimit = 'E',\r\n  CalculationDifference = 'F',\r\n  NoMatchingExecutionReport358 = 'G',\r\n  Other = 'Z'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates that IOI is the result of an existing agency order *\r\n* or a facilitation position resulting from an agency order,   *\r\n* not from principal trading or order solicitation activity.   *\r\n****************************************************************\r\n*/\r\nexport enum IOINaturalFlag {\r\n  NotNatural = 'N',\r\n  Natural = 'Y'\r\n}\r\n\r\n/*\r\n****************************************\r\n* Indicates type of miscellaneous fee. *\r\n****************************************\r\n*/\r\nexport enum MiscFeeType {\r\n  RegulatoryEGSec = '1',\r\n  Tax = '2',\r\n  LocalCommission = '3',\r\n  ExchangeFees = '4',\r\n  Stamp = '5',\r\n  Levy = '6',\r\n  Other = '7',\r\n  Markup = '8',\r\n  ConsumptionTax = '9',\r\n  PerTransaction = '10',\r\n  Conversion = '11',\r\n  Agent = '12',\r\n  TransferFee = '13',\r\n  SecurityLending = '14',\r\n  TradeReporting = '15',\r\n  TaxOnPrincipalAmount = '16',\r\n  TaxOnAccruedInterestAmount = '17',\r\n  NewIssuanceFee = '18',\r\n  ServiceFee = '19',\r\n  OddLotFee = '20',\r\n  AuctionFee = '21',\r\n  ValueAddedTaxVat = '22',\r\n  SalesTax = '23'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Describes the specific ExecutionRpt (e.g. Pending Cancel)  *\r\n* while OrdStatus(39) will always identify the current order *\r\n* status (e.g. Partially Filled).                            *\r\n**************************************************************\r\n*/\r\nexport enum ExecType {\r\n  New = '0',\r\n  DoneForDay = '3',\r\n  Canceled = '4',\r\n  Replaced = '5',\r\n  PendingCancelEGResultOfOrderCancelRequest = '6',\r\n  Stopped = '7',\r\n  Rejected = '8',\r\n  Suspended = '9',\r\n  PendingNew = 'A',\r\n  Calculated = 'B',\r\n  Expired = 'C',\r\n  RestatedExecutionReportSentUnsolicitedBySellsideWithExecRestatementReason378Set = 'D',\r\n  PendingReplaceEGResultOfOrderCancelReplaceRequest = 'E',\r\n  TradePartialFillOrFill = 'F',\r\n  TradeCorrect = 'G',\r\n  TradeCancel = 'H',\r\n  OrderStatus = 'I',\r\n  TradeInAClearingHold = 'J',\r\n  TradeHasBeenReleasedToClearing = 'K',\r\n  TriggeredOrActivatedBySystem = 'L',\r\n  Locked = 'M',\r\n  Released = 'N'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies whether or not SettlCurrFxRate (155) should be *\r\n* multiplied or divided.                                   *\r\n************************************************************\r\n*/\r\nexport enum SettlCurrFxRateCalc {\r\n  Multiply = 'M',\r\n  Divide = 'D'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates mode used for Settlement Instructions message. *** *\r\n* SOME VALUES HAVE BEEN REPLACED - See \"Replaced Features and  *\r\n* Supported Approach\" ***                                      *\r\n****************************************************************\r\n*/\r\nexport enum SettlInstMode {\r\n  DefaultReplaced = '0',\r\n  StandingInstructionsProvided = '1',\r\n  SpecificAllocationAccountOverridingReplaced = '2',\r\n  SpecificAllocationAccountStandingReplaced = '3',\r\n  SpecificOrderForASingleAccountForCiv = '4',\r\n  RequestReject = '5'\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Settlement Instructions message transaction type *\r\n****************************************************\r\n*/\r\nexport enum SettlInstTransType {\r\n  New = 'N',\r\n  Cancel = 'C',\r\n  Replace = 'R',\r\n  Restate = 'T'\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Indicates source of Settlement Instructions *\r\n***********************************************\r\n*/\r\nexport enum SettlInstSource {\r\n  BrokersInstructions = '1',\r\n  InstitutionsInstructions = '2',\r\n  InvestorEGCivUse = '3'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates type of security. Security type enumerations are   *\r\n* grouped by Product(460) field value. NOTE: Additional values *\r\n* may be used by mutual agreement of the counterparties.       *\r\n****************************************************************\r\n*/\r\nexport enum SecurityType {\r\n  EuroSupranationalCoupons = 'EUSUPRA',\r\n  CorporateBond = 'CORP',\r\n  ForeignExchangeContract = 'FOR',\r\n  CommonStock = 'CS',\r\n  Repurchase = 'REPO',\r\n  BradyBond = 'BRADY',\r\n  TermLoan = 'TERM',\r\n  BankersAcceptance = 'BA',\r\n  AssetBackedSecurities = 'ABS',\r\n  OtherAnticipationNotesBanGanEtc = 'AN',\r\n  MutualFund = 'MF',\r\n  FederalAgencyCoupon = 'FAC',\r\n  CorporatePrivatePlacement = 'CPP',\r\n  PreferredStock = 'PS',\r\n  Forward = 'FORWARD',\r\n  CanadianTreasuryNotes = 'CAN',\r\n  RevolverLoan = 'RVLV',\r\n  BankDepositoryNote = 'BDN',\r\n  CanadianMortgageBonds = 'CMB',\r\n  CertificateOfObligation = 'COFO',\r\n  MultilegInstrument = 'MLEG',\r\n  NonDeliverableForward = 'FXNDF',\r\n  Cap = 'CAP',\r\n  FederalAgencyDiscountNote = 'FADN',\r\n  ConvertibleBond = 'CB',\r\n  CreditDefaultSwap = 'CDS',\r\n  BuySellback = 'BUYSELL',\r\n  CanadianTreasuryBills = 'CTB',\r\n  RevolverTermLoan = 'RVLVTRM',\r\n  BankNotes = 'BN',\r\n  CorpMortgageBackedSecurities = 'CMBS',\r\n  CertificateOfParticipation = 'COFP',\r\n  NoSecurityType = 'NONE',\r\n  FxSpot = 'FXSPOT',\r\n  UsTreasuryNoteDeprecatedValueUseTnote = 'UST',\r\n  PrivateExportFunding = 'PEF',\r\n  DualCurrency = 'DUAL',\r\n  SecuritiesLoan = 'SECLOAN',\r\n  EuroSovereigns = 'EUSOV',\r\n  BridgeLoan = 'BRIDGE',\r\n  BillOfExchanges = 'BOX',\r\n  CollateralizedMortgageObligation = 'CMO',\r\n  GeneralObligationBonds = 'GO',\r\n  FxForward = 'FXFWD',\r\n  Collar = 'CLLR',\r\n  UsTreasuryBillDeprecatedValueUseTbill = 'USTB',\r\n  UsdSupranationalCoupons = 'SUPRA',\r\n  EuroCorporateBond = 'EUCORP',\r\n  SecuritiesPledge = 'SECPLEDGE',\r\n  CanadianProvincialBonds = 'PROV',\r\n  LetterOfCredit = 'LOFC',\r\n  CanadianMoneyMarkets = 'CAMM',\r\n  IoetteMortgage = 'IET',\r\n  MandatoryTender = 'MT',\r\n  FxSwap = 'FXSWAP',\r\n  CommoditySwap = 'CMDTYSWAP',\r\n  EuroCorporateFloatingRateNotes = 'EUFRN',\r\n  TreasuryBillNonUs = 'TB',\r\n  SwingLineFacility = 'SWING',\r\n  CertificateOfDeposit = 'CD',\r\n  MortgageBackedSecurities = 'MBS',\r\n  RevenueAnticipationNote = 'RAN',\r\n  WildcardEntryForUseOnSecurityDefinitionRequest = '?',\r\n  DeliveryVersusPledge = 'DVPLDG',\r\n  Exotic = 'EXOTIC',\r\n  UsCorporateFloatingRateNotes = 'FRN',\r\n  OptionsOnCombo = 'OOC',\r\n  UsTreasuryBond = 'TBOND',\r\n  DebtorInPossession = 'DINP',\r\n  CallLoans = 'CL',\r\n  MortgageInterestOnly = 'MIO',\r\n  RevenueBonds = 'REV',\r\n  Cash = 'CASH',\r\n  Floor = 'FLR',\r\n  CollateralBasket = 'COLLBSKT',\r\n  IndexedLinked = 'XLINKD',\r\n  InterestStripFromAnyBondOrNote = 'TINT',\r\n  Defaulted = 'DEFLTED',\r\n  CommercialPaper = 'CP',\r\n  MortgagePrincipalOnly = 'MPO',\r\n  SpecialAssessment = 'SPCLA',\r\n  ForwardRateAgreement = 'FRA',\r\n  StructuredNotes = 'STRUCT',\r\n  Future = 'FUT',\r\n  UsTreasuryBill = 'TBILL',\r\n  TreasuryInflationProtectedSecurities = 'TIPS',\r\n  Withdrawn = 'WITHDRN',\r\n  DepositNotes = 'DN',\r\n  MortgagePrivatePlacement = 'MPP',\r\n  SpecialObligation = 'SPCLO',\r\n  YankeeCorporateBond = 'YANK',\r\n  PrincipalStripOfACallableBondOrNote = 'TCAL',\r\n  Replaced = 'REPLACD',\r\n  EuroCertificateOfDeposit = 'EUCD',\r\n  MiscellaneousPassThrough = 'MPT',\r\n  SpecialTax = 'SPCLT',\r\n  DerivativeForward = 'FWD',\r\n  InterestRateSwap = 'IRS',\r\n  PrincipalStripFromANonCallableBondOrNote = 'TPRN',\r\n  Matured = 'MATURED',\r\n  EuroCommercialPaper = 'EUCP',\r\n  Pfandbriefe = 'PFAND',\r\n  TaxAnticipationNote = 'TAN',\r\n  TotalReturnSwap = 'TRS',\r\n  UsTreasuryNote = 'TNOTE',\r\n  AmendedRestated = 'AMENDED',\r\n  LiquidityNote = 'LQN',\r\n  ToBeAnnounced = 'TBA',\r\n  TaxAllocation = 'TAXA',\r\n  LoanLease = 'LOANLEASE',\r\n  Retired = 'RETIRED',\r\n  MediumTermNotes = 'MTN',\r\n  TaxExemptCommercialPaper = 'TECP',\r\n  OptionsOnFutures = 'OOF',\r\n  Overnight = 'ONITE',\r\n  TaxableMunicipalCp = 'TMCP',\r\n  OptionsOnPhysicalUseNotRecommended = 'OOP',\r\n  PromissoryNote = 'PN',\r\n  ShortTermLoanNote = 'STN',\r\n  TaxRevenueAnticipationNote = 'TRAN',\r\n  Option = 'OPT',\r\n  PlazosFijos = 'PZFJ',\r\n  VariableRateDemandNote = 'VRDN',\r\n  SecuredLiquidityNote = 'SLQN',\r\n  Warrant = 'WAR',\r\n  SpotForward = 'SPOTFWD',\r\n  TimeDeposit = 'TD',\r\n  SwapOption = 'SWAPTION',\r\n  Transmission = 'XMISSION',\r\n  TermLiquidityNote = 'TLQN',\r\n  GeneralTypeForAContractBasedOnAnEstablishedIndex = 'INDEX',\r\n  ExtendedCommNote = 'XCN',\r\n  BondBasket = 'BDBSKT',\r\n  YankeeCertificateOfDeposit = 'YCD',\r\n  ContractForDifference = 'CFD',\r\n  CorrelationSwap = 'CRLTNSWAP',\r\n  DividendSwap = 'DVDNDSWAP',\r\n  EquityBasket = 'EQBSKT',\r\n  EquityForward = 'EQFWD',\r\n  ReturnSwap = 'RTRNSWAP',\r\n  VarianceSwap = 'VARSWAP'\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Identifies the Standing Instruction database used *\r\n*****************************************************\r\n*/\r\nexport enum StandInstDbType {\r\n  Other = 0,\r\n  DtcSid = 1,\r\n  ThomsonAlert = 2,\r\n  AGlobalCustodianStandInstDbName70MustBeProvided = 3,\r\n  AccountNet = 4\r\n}\r\n\r\n/*\r\n*********************************\r\n* Identifies type of settlement *\r\n*********************************\r\n*/\r\nexport enum SettlDeliveryType {\r\n  VersusPaymentDeliverIfSellOrReceiveIfBuyVsAgainstPayment = 0,\r\n  FreeDeliverIfSellOrReceiveIfBuyFree = 1,\r\n  TriParty = 2,\r\n  HoldInCustody = 3\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies the type of Allocation linkage when AllocLinkID *\r\n* (96) is used.                                              *\r\n**************************************************************\r\n*/\r\nexport enum AllocLinkType {\r\n  FxNetting = 0,\r\n  FxSwap = 1\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Indicates whether an option contract is a put or call *\r\n*********************************************************\r\n*/\r\nexport enum PutOrCall {\r\n  Put = 0,\r\n  Call = 1\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Used for derivative products, such as options *\r\n*************************************************\r\n*/\r\nexport enum CoveredOrUncovered {\r\n  Covered = 0,\r\n  Uncovered = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicates whether or not details should be communicated to *\r\n* BrokerOfCredit (i.e. step-in broker).                      *\r\n**************************************************************\r\n*/\r\nexport enum NotifyBrokerOfCredit {\r\n  DetailsShouldNotBeCommunicated = 'N',\r\n  DetailsShouldBeCommunicated = 'Y'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates how the receiver (i.e. third party) of Allocation *\r\n* message should handle/process the account details.          *\r\n***************************************************************\r\n*/\r\nexport enum AllocHandlInst {\r\n  Match = 1,\r\n  Forward = 2,\r\n  ForwardAndMatch = 3\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Indicates the type of RoutingID (217) specified. *\r\n****************************************************\r\n*/\r\nexport enum RoutingType {\r\n  TargetFirm = 1,\r\n  TargetList = 2,\r\n  BlockFirm = 3,\r\n  BlockList = 4,\r\n  TargetPerson = 5,\r\n  BlockPerson = 6\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Name of benchmark curve.                               *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\nexport enum BenchmarkCurveName {\r\n  Eonia = 'EONIA',\r\n  Eurepo = 'EUREPO',\r\n  EuriborDeprecatedUseEnumEuriborInstead = 'Euribor',\r\n  FutureSwap = 'FutureSWAP',\r\n  Libid = 'LIBID',\r\n  LiborLondonInterBankOffer = 'LIBOR',\r\n  MuniAaa = 'MuniAAA',\r\n  Other = 'OTHER',\r\n  Pfandbriefe = 'Pfandbriefe',\r\n  Sonia = 'SONIA',\r\n  Swap = 'SWAP',\r\n  Treasury = 'Treasury',\r\n  UsFederalReserveFedFundsEffectiveRate = 'FEDEFF',\r\n  UsFedFundsTargetRate = 'FEDOPEN',\r\n  EuroInterbankOfferRate = 'EURIBOR'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* For Fixed Income.                                      *\r\n* Type of Stipulation.                                   *\r\n* Other types may be used by mutual agreement of the     *\r\n* counterparties.                                        *\r\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\r\n**********************************************************\r\n*/\r\nexport enum StipulationType {\r\n  AlternativeMinimumTaxYN = 'AMT',\r\n  AbsolutePrepaymentSpeed = 'ABS',\r\n  IncurredRecoveryYN = 'INCURRCVY',\r\n  AutoReinvestmentAtRateOrBetter = 'AUTOREINV',\r\n  ConstantPrepaymentPenalty = 'CPP',\r\n  AdditionalTerm = 'ADDTRM',\r\n  BankQualifiedYN = 'BANKQUAL',\r\n  ConstantPrepaymentRate = 'CPR',\r\n  ModifiedEquityDelivery = 'MODEQTYDLVY',\r\n  BargainConditionsSeeStipulationValue234ForValues = 'BGNCON',\r\n  ConstantPrepaymentYield = 'CPY',\r\n  NoReferenceObligationYN = 'NOREFOBLIG',\r\n  CouponRange = 'COUPON',\r\n  FinalCprOfHomeEquityPrepaymentCurve = 'HEP',\r\n  UnknownReferenceObligationYN = 'UNKREFOBLIG',\r\n  IsoCurrencyCode = 'CURRENCY',\r\n  PercentOfManufacturedHousingPrepaymentCurve = 'MHP',\r\n  AllGuaranteesYN = 'ALLGUARANTEES',\r\n  CustomStartEndDate = 'CUSTOMDATE',\r\n  MonthlyPrepaymentRate = 'MPR',\r\n  ReferencePriceYN = 'REFPX',\r\n  GeographicsAndRangeEx234Ca080MinimumOf80CaliforniaAssets = 'GEOG',\r\n  PercentOfProspectusPrepaymentCurve = 'PPC',\r\n  ReferencePolicyYN = 'REFPOLICY',\r\n  ValuationDiscount = 'HAIRCUT',\r\n  PercentOfBmaPrepaymentCurve = 'PSA',\r\n  SecuredListYN = 'SECRDLIST',\r\n  InsuredYN = 'INSURED',\r\n  SingleMonthlyMortality = 'SMM',\r\n  YearOrYearMonthOfIssueEx234200209 = 'ISSUE',\r\n  IssuersTicker = 'ISSUER',\r\n  IssueSizeRange = 'ISSUESIZE',\r\n  LookbackDays = 'LOOKBACK',\r\n  ExplicitLotIdentifier = 'LOT',\r\n  LotVarianceValueInPercentMaximumOverOrUnderAllocationAllowed = 'LOTVAR',\r\n  MaturityYearAndMonth = 'MAT',\r\n  MaturityRange = 'MATURITY',\r\n  MaximumSubstitutionsRepo = 'MAXSUBS',\r\n  MinimumDenomination = 'MINDNOM',\r\n  MinimumIncrement = 'MININCR',\r\n  MinimumQuantity = 'MINQTY',\r\n  PaymentFrequencyCalendar = 'PAYFREQ',\r\n  NumberOfPieces = 'PIECES',\r\n  PoolsMaximum = 'PMAX',\r\n  PoolsPerLot = 'PPL',\r\n  PoolsPerMillion = 'PPM',\r\n  PoolsPerTrade = 'PPT',\r\n  PriceRange = 'PRICE',\r\n  PricingFrequency = 'PRICEFREQ',\r\n  ProductionYear = 'PROD',\r\n  CallProtection = 'PROTECT',\r\n  Purpose = 'PURPOSE',\r\n  BenchmarkPriceSource = 'PXSOURCE',\r\n  RatingSourceAndRange = 'RATING',\r\n  TypeOfRedemptionValuesAreNonCallablePrefundedEscrowedToMaturityPutableConvertible = 'REDEMPTION',\r\n  RestrictedYN = 'RESTRICTED',\r\n  MarketSector = 'SECTOR',\r\n  SecurityTypeIncludedOrExcluded = 'SECTYPE',\r\n  Structure = 'STRUCT',\r\n  SubstitutionsFrequencyRepo = 'SUBSFREQ',\r\n  SubstitutionsLeftRepo = 'SUBSLEFT',\r\n  FreeformText = 'TEXT',\r\n  TradeVarianceValueInPercentMaximumOverOrUnderAllocationAllowed = 'TRDVAR',\r\n  WeightedAverageCouponValueInPercentExactOrRangePlusGrossOrNetOfServicingSpreadTheDefaultEx23465NetMinimumOf65NetOfServicingFee = 'WAC',\r\n  WeightedAverageLifeCouponValueInPercentExactOrRange = 'WAL',\r\n  WeightedAverageLoanAgeValueInMonthsExactOrRange = 'WALA',\r\n  WeightedAverageMaturityValueInMonthsExactOrRange = 'WAM',\r\n  WholePoolYN = 'WHOLE',\r\n  YieldRange = 'YIELD',\r\n  AverageFicoScore = 'AVFICO',\r\n  OriginalAmount = 'ORIGAMT',\r\n  AverageLoanSize = 'AVSIZE',\r\n  PoolEffectiveDate = 'POOLEFFDT',\r\n  MaximumLoanBalance = 'MAXBAL',\r\n  PoolInitialFactor = 'POOLINITFCTR',\r\n  PoolIdentifier = 'POOL',\r\n  TrancheIdentifier = 'TRANCHE',\r\n  TypeOfRollTrade = 'ROLLTYPE',\r\n  SubstitutionYN = 'SUBSTITUTION',\r\n  ReferenceToRollingOrClosingTrade = 'REFTRADE',\r\n  MultipleExchangeFallbackYN = 'MULTEXCHFLLBCK',\r\n  PrincipalOfRollingOrClosingTrade = 'REFPRIN',\r\n  ComponentSecurityFallbackYN = 'COMPSECFLLBCK',\r\n  InterestOfRollingOrClosingTrade = 'REFINT',\r\n  LocalJurisdictionYN = 'LOCLJRSDCTN',\r\n  AvailableOfferQuantityToBeShownToTheStreet = 'AVAILQTY',\r\n  RelevantJurisdictionYN = 'RELVJRSDCTN',\r\n  BrokersSalesCredit = 'BROKERCREDIT',\r\n  OfferPriceToBeShownToInternalBrokers = 'INTERNALPX',\r\n  OfferQuantityToBeShownToInternalBrokers = 'INTERNALQTY',\r\n  TheMinimumResidualOfferQuantity = 'LEAVEQTY',\r\n  MaximumOrderSize = 'MAXORDQTY',\r\n  OrderQuantityIncrement = 'ORDRINCR',\r\n  PrimaryOrSecondaryMarketIndicator = 'PRIMARY',\r\n  BrokerSalesCreditOverride = 'SALESCREDITOVR',\r\n  TradersCredit = 'TRADERCREDIT',\r\n  DiscountRateWhenPriceIsDenominatedInPercentOfPar = 'DISCOUNT',\r\n  YieldToMaturityWhenYieldType235AndYield236ShowADifferentYield = 'YTM'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Type of yield. (Note tag # was reserved in FIX 4.1, added in *\r\n* FIX 4.3)                                                     *\r\n****************************************************************\r\n*/\r\nexport enum YieldType {\r\n  AfterTaxYieldMunicipals = 'AFTERTAX',\r\n  AnnualYield = 'ANNUAL',\r\n  YieldAtIssueMunicipals = 'ATISSUE',\r\n  YieldToAvgMaturity = 'AVGMATURITY',\r\n  BookYield = 'BOOK',\r\n  YieldToNextCall = 'CALL',\r\n  YieldChangeSinceClose = 'CHANGE',\r\n  ClosingYield = 'CLOSE',\r\n  CompoundYield = 'COMPOUND',\r\n  CurrentYield = 'CURRENT',\r\n  GvntEquivalentYield = 'GOVTEQUIV',\r\n  TrueGrossYield = 'GROSS',\r\n  YieldWithInflationAssumption = 'INFLATION',\r\n  InverseFloaterBondYield = 'INVERSEFLOATER',\r\n  MostRecentClosingYield = 'LASTCLOSE',\r\n  ClosingYieldMostRecentMonth = 'LASTMONTH',\r\n  ClosingYieldMostRecentQuarter = 'LASTQUARTER',\r\n  ClosingYieldMostRecentYear = 'LASTYEAR',\r\n  YieldToLongestAverageLife = 'LONGAVGLIFE',\r\n  MarkToMarketYield = 'MARK',\r\n  YieldToMaturity = 'MATURITY',\r\n  YieldToNextRefundSinkingFundBonds = 'NEXTREFUND',\r\n  OpenAverageYield = 'OPENAVG',\r\n  PreviousCloseYield = 'PREVCLOSE',\r\n  ProceedsYield = 'PROCEEDS',\r\n  YieldToNextPut = 'PUT',\r\n  SemiAnnualYield = 'SEMIANNUAL',\r\n  YieldToShortestAverageLife = 'SHORTAVGLIFE',\r\n  SimpleYield = 'SIMPLE',\r\n  TaxEquivalentYield = 'TAXEQUIV',\r\n  YieldToTenderDate = 'TENDER',\r\n  TrueYield = 'TRUE',\r\n  YieldValueOf132 = 'VALUE1_32',\r\n  YieldToWorst = 'WORST'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Driver and part of trade in the event that the Security    *\r\n* Master file was wrong at the point of entry(Note tag # was *\r\n* reserved in FIX 4.1, added in FIX 4.3)                     *\r\n**************************************************************\r\n*/\r\nexport enum TradedFlatSwitch {\r\n  NotTradedFlat = 'N',\r\n  TradedFlat = 'Y'\r\n}\r\n\r\n/*\r\n*****************************\r\n* Subscription Request Type *\r\n*****************************\r\n*/\r\nexport enum SubscriptionRequestType {\r\n  Snapshot = '0',\r\n  SnapshotUpdatesSubscribe = '1',\r\n  DisablePreviousSnapshotUpdateRequestUnsubscribe = '2'\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Specifies the type of Market Data update. *\r\n*********************************************\r\n*/\r\nexport enum MDUpdateType {\r\n  FullRefresh = 0,\r\n  IncrementalRefresh = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies whether or not book entries should be aggregated. *\r\n* (Not specified) = broker option                             *\r\n***************************************************************\r\n*/\r\nexport enum AggregatedBook {\r\n  BookEntriesToBeAggregated = 'Y',\r\n  BookEntriesShouldNotBeAggregated = 'N'\r\n}\r\n\r\n/*\r\n******************************\r\n* Type of market data entry. *\r\n******************************\r\n*/\r\nexport enum MDEntryType {\r\n  Bid = '0',\r\n  Offer = '1',\r\n  Trade = '2',\r\n  IndexValue = '3',\r\n  OpeningPrice = '4',\r\n  ClosingPrice = '5',\r\n  SettlementPrice = '6',\r\n  TradingSessionHighPrice = '7',\r\n  TradingSessionLowPrice = '8',\r\n  TradingSessionVolumeWeightedAveragePriceVwap = '9',\r\n  Imbalance = 'A',\r\n  TradeVolume = 'B',\r\n  OpenInterest = 'C',\r\n  CompositeUnderlyingPrice = 'D',\r\n  SimulatedSellPrice = 'E',\r\n  SimulatedBuyPrice = 'F',\r\n  MarginRate = 'G',\r\n  MidPrice = 'H',\r\n  EmptyBook = 'J',\r\n  SettleHighPrice = 'K',\r\n  SettleLowPrice = 'L',\r\n  PriorSettlePrice = 'M',\r\n  SessionHighBid = 'N',\r\n  SessionLowOffer = 'O',\r\n  EarlyPrices = 'P',\r\n  AuctionClearingPrice = 'Q',\r\n  SwapValueFactorSvfForSwapsClearedThroughACentralCounterpartyCcp = 'S',\r\n  DailyValueAdjustmentForLongPositions = 'R',\r\n  CumulativeValueAdjustmentForLongPositions = 'T',\r\n  DailyValueAdjustmentForShortPositions = 'U',\r\n  CumulativeValueAdjustmentForShortPositions = 'V',\r\n  FixingPrice = 'W',\r\n  CashRate = 'X',\r\n  RecoveryRate = 'Y',\r\n  RecoveryRateForLongPositions = 'Z',\r\n  RecoveryRateForShortPositions = 'a',\r\n  MarketBid = 'b',\r\n  MarketOffer = 'c',\r\n  ShortSaleMinimumPrice = 'd',\r\n  PreviousClosingPrice = 'e'\r\n}\r\n\r\n/*\r\n****************************\r\n* Direction of the \"tick\". *\r\n****************************\r\n*/\r\nexport enum TickDirection {\r\n  PlusTick = '0',\r\n  ZeroPlusTick = '1',\r\n  MinusTick = '2',\r\n  ZeroMinusTick = '3'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Space-delimited list of conditions describing a quote. *\r\n**********************************************************\r\n*/\r\nexport enum QuoteCondition {\r\n  ReservedSam = '0',\r\n  NoActiveSam = '1',\r\n  Restricted = '2',\r\n  RestOfBookVwap = '3',\r\n  BetterPricesInConditionalOrders = '4',\r\n  MedianPrice = '5',\r\n  FullCurve = '6',\r\n  FlatCurve = '7',\r\n  OpenActive = 'A',\r\n  ClosedInactive = 'B',\r\n  ExchangeBest = 'C',\r\n  ConsolidatedBest = 'D',\r\n  Locked = 'E',\r\n  Crossed = 'F',\r\n  Depth = 'G',\r\n  FastTrading = 'H',\r\n  NonFirm = 'I',\r\n  ManualSlowQuote = 'L',\r\n  OutrightPrice = 'J',\r\n  ImpliedPrice = 'K',\r\n  DepthOnOffer = 'M',\r\n  DepthOnBid = 'N',\r\n  Closing = 'O',\r\n  NewsDissemination = 'P',\r\n  TradingRange = 'Q',\r\n  OrderInflux = 'R',\r\n  DueToRelated = 'S',\r\n  NewsPending = 'T',\r\n  AdditionalInfo = 'U',\r\n  AdditionalInfoDueToRelated = 'V',\r\n  Resume = 'W',\r\n  ViewOfCommon = 'X',\r\n  VolumeAlert = 'Y',\r\n  OrderImbalance = 'Z',\r\n  EquipmentChangeover = 'a',\r\n  NoOpenNoResume = 'b',\r\n  RegularEth = 'c',\r\n  AutomaticExecution = 'd',\r\n  AutomaticExecutionEth = 'e',\r\n  FastMarketEth = 'f ',\r\n  InactiveEth = 'g',\r\n  Rotation = 'h',\r\n  RotationEth = 'i',\r\n  Halt = 'j',\r\n  HaltEth = 'k',\r\n  DueToNewsDissemination = 'l',\r\n  DueToNewsPending = 'm',\r\n  TradingResume = 'n',\r\n  OutOfSequence = 'o',\r\n  BidSpecialist = 'p',\r\n  OfferSpecialist = 'q',\r\n  BidOfferSpecialist = 'r',\r\n  EndOfDaySam = 's',\r\n  ForbiddenSam = 't',\r\n  FrozenSam = 'u',\r\n  PreOpeningSam = 'v',\r\n  OpeningSam = 'w',\r\n  OpenSam = 'x',\r\n  SurveillanceSam = 'y',\r\n  SuspendedSam = 'z'\r\n}\r\n\r\n/*\r\n******************************\r\n* Type of market data entry. *\r\n******************************\r\n*/\r\nexport enum TradeCondition {\r\n  Cancel = '0',\r\n  ImpliedTrade = '1',\r\n  MarketplaceEnteredTrade = '2',\r\n  MultiAssetClassMultilegTrade = '3',\r\n  MultilegToMultilegTrade = '4',\r\n  ShortSaleMinimumPrice = '5',\r\n  Benchmark = '6',\r\n  CashOnlyMarket = 'A',\r\n  AveragePriceTrade = 'B',\r\n  CashTradeSameDayClearing = 'C',\r\n  NextDayOnlyMarket = 'D',\r\n  OpeningReopeningTradeDetail = 'E',\r\n  IntradayTradeDetail = 'F',\r\n  Rule127TradeNyse = 'G',\r\n  Rule155TradeAmex = 'H',\r\n  SoldLastLateReporting = 'I',\r\n  NextDayTradeNextDayClearing = 'J',\r\n  OpenedLateReportOfOpenedTrade = 'K',\r\n  Seller = 'L',\r\n  SoldOutOfSequence = 'M',\r\n  StoppedStockGuaranteeOfPriceButDoesNotExecuteTheOrder = 'N',\r\n  ImbalanceMoreBuyersCannotBeUsedInCombinationWithQ = 'P',\r\n  ImbalanceMoreSellersCannotBeUsedInCombinationWithP = 'Q',\r\n  OpeningPrice = 'R',\r\n  BargainConditionLse = 'S',\r\n  ConvertedPriceIndicator = 'T',\r\n  ExchangeLast = 'U',\r\n  FinalPriceOfSession = 'V',\r\n  ExPit = 'W',\r\n  Crossed = 'X',\r\n  TradesResultingFromManualSlowQuote = 'Y',\r\n  TradesResultingFromIntermarketSweep = 'Z',\r\n  VolumeOnly = 'a',\r\n  DirectPlus = 'b',\r\n  Acquisition = 'c',\r\n  Bunched = 'd',\r\n  Distribution = 'e',\r\n  BunchedSale = 'f',\r\n  SplitTrade = 'g',\r\n  CancelStopped = 'h',\r\n  CancelEth = 'i',\r\n  CancelStoppedEth = 'j',\r\n  OutOfSequenceEth = 'k',\r\n  CancelLastEth = 'l',\r\n  SoldLastSaleEth = 'm',\r\n  CancelLast = 'n',\r\n  SoldLastSale = 'o',\r\n  CancelOpen = 'p',\r\n  CancelOpenEth = 'q',\r\n  OpenedSaleEth = 'r',\r\n  CancelOnly = 's',\r\n  CancelOnlyEth = 't',\r\n  LateOpenEth = 'u',\r\n  AutoExecutionEth = 'v',\r\n  Reopen = 'w',\r\n  ReopenEth = 'x',\r\n  Adjusted = 'y',\r\n  AdjustedEth = 'z',\r\n  Spread = 'AA',\r\n  SpreadEth = 'AB',\r\n  Straddle = 'AC',\r\n  StraddleEth = 'AD',\r\n  Stopped = 'AE',\r\n  StoppedEth = 'AF',\r\n  RegularEth = 'AG',\r\n  Combo = 'AH',\r\n  ComboEth = 'AI',\r\n  OfficialClosingPrice = 'AJ',\r\n  PriorReferencePrice = 'AK',\r\n  StoppedSoldLast = 'AL',\r\n  StoppedOutOfSequence = 'AM',\r\n  OfficalClosingPriceDuplicateEnumerationUseAjInstead = 'AN',\r\n  CrossedDuplicateEnumerationUseXInstead = 'AO',\r\n  FastMarket = 'AP',\r\n  AutomaticExecution = 'AQ',\r\n  FormT = 'AR',\r\n  BasketIndex = 'AS',\r\n  BurstBasket = 'AT',\r\n  TradeThroughExempt = 'AU',\r\n  QuoteSpread = 'AV',\r\n  LastAuctionPrice = 'AW',\r\n  HighPrice = 'AX',\r\n  LowPrice = 'AY',\r\n  SystematicInternaliserSi = 'AZ',\r\n  AwayMarket = 'BA',\r\n  MidPointPrice = 'BB',\r\n  TradedBeforeIssueDate = 'BC',\r\n  PreviousClosingPrice = 'BD',\r\n  NationalBestBidAndOffer = 'BE'\r\n}\r\n\r\n/*\r\n**************************************\r\n* Type of Market Data update action. *\r\n**************************************\r\n*/\r\nexport enum MDUpdateAction {\r\n  New = '0',\r\n  Change = '1',\r\n  Delete = '2',\r\n  DeleteThru = '3',\r\n  DeleteFrom = '4',\r\n  Overlay = '5'\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Reason for the rejection of a Market Data request. *\r\n******************************************************\r\n*/\r\nexport enum MDReqRejReason {\r\n  UnknownSymbol = '0',\r\n  DuplicateMdReqId = '1',\r\n  InsufficientBandwidth = '2',\r\n  InsufficientPermissions = '3',\r\n  UnsupportedSubscriptionRequestType = '4',\r\n  UnsupportedMarketDepth = '5',\r\n  UnsupportedMdUpdateType = '6',\r\n  UnsupportedAggregatedBook = '7',\r\n  UnsupportedMdEntryType = '8',\r\n  UnsupportedTradingSessionId = '9',\r\n  UnsupportedScope = 'A',\r\n  UnsupportedOpenCloseSettleFlag = 'B',\r\n  UnsupportedMdImplicitDelete = 'C',\r\n  InsufficientCredit = 'D'\r\n}\r\n\r\n/*\r\n************************\r\n* Reason for deletion. *\r\n************************\r\n*/\r\nexport enum DeleteReason {\r\n  CancellationTradeBust = '0',\r\n  Error = '1'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Flag that identifies a market data entry. (Prior to FIX 4.3 *\r\n* this field was of type char)                                *\r\n***************************************************************\r\n*/\r\nexport enum OpenCloseSettlFlag {\r\n  DailyOpenCloseSettlementEntry = '0',\r\n  SessionOpenCloseSettlementEntry = '1',\r\n  DeliverySettlementEntry = '2',\r\n  ExpectedEntry = '3',\r\n  EntryFromPreviousBusinessDay = '4',\r\n  TheoreticalPriceValue = '5'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Identifies a firm's or a security's financial status *\r\n********************************************************\r\n*/\r\nexport enum FinancialStatus {\r\n  Bankrupt = '1',\r\n  PendingDelisting = '2',\r\n  Restricted = '3'\r\n}\r\n\r\n/*\r\n********************************************\r\n* Identifies the type of Corporate Action. *\r\n********************************************\r\n*/\r\nexport enum CorporateAction {\r\n  ExDividend = 'A',\r\n  ExDistribution = 'B',\r\n  ExRights = 'C',\r\n  New = 'D',\r\n  ExInterest = 'E',\r\n  CashDividend = 'F',\r\n  StockDividend = 'G',\r\n  NonIntegerStockSplit = 'H',\r\n  ReverseStockSplit = 'I',\r\n  StandardIntegerStockSplit = 'J',\r\n  PositionConsolidation = 'K',\r\n  LiquidationReorganization = 'L',\r\n  MergerReorganization = 'M',\r\n  RightsOffering = 'N',\r\n  ShareholderMeeting = 'O',\r\n  Spinoff = 'P',\r\n  TenderOffer = 'Q',\r\n  Warrant = 'R',\r\n  SpecialAction = 'S',\r\n  SymbolConversion = 'T',\r\n  CusipNameChange = 'U',\r\n  LeapRollover = 'V',\r\n  SuccessionEvent = 'W'\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Identifies the status of the quote acknowledgement. *\r\n*******************************************************\r\n*/\r\nexport enum QuoteStatus {\r\n  Accepted = 0,\r\n  CanceledForSpecificSecurities = 1,\r\n  CanceledForSpecificSecurityTypes167 = 2,\r\n  CanceledForUnderlying = 3,\r\n  CanceledAll = 4,\r\n  Rejected = 5,\r\n  RemovedFromMarket = 6,\r\n  Expired = 7,\r\n  Query = 8,\r\n  QuoteNotFound = 9,\r\n  Pending = 10,\r\n  Pass = 11,\r\n  LockedMarketWarning = 12,\r\n  CrossedMarketWarning = 13,\r\n  CanceledDueToLockedMarket = 14,\r\n  CanceledDueToCrossedMarket = 15,\r\n  Active = 16,\r\n  Canceled = 17,\r\n  UnsolicitedQuoteReplenishment = 18,\r\n  PendingEndTrade = 19,\r\n  TooLateToEnd = 20,\r\n  Traded = 21,\r\n  TradedAndRemoved = 22\r\n}\r\n\r\n/*\r\n****************************************\r\n* Identifies the type of quote cancel. *\r\n****************************************\r\n*/\r\nexport enum QuoteCancelType {\r\n  CancelForOneOrMoreSecurities = 1,\r\n  CancelForSecurityTypeS = 2,\r\n  CancelForUnderlyingSecurity = 3,\r\n  CancelAllQuotes = 4,\r\n  CancelSpecifiedSingleQuote = 5,\r\n  CancelByTypeOfQuote = 6,\r\n  CancelForSecurityIssuer = 7,\r\n  CancelForIssuerOfUnderlyingSecurity = 8\r\n}\r\n\r\n/*\r\n******************************\r\n* Reason Quote was rejected: *\r\n******************************\r\n*/\r\nexport enum QuoteRejectReason {\r\n  UnknownSymbolSecurity = 1,\r\n  ExchangeSecurityClosed = 2,\r\n  QuoteRequestExceedsLimit = 3,\r\n  TooLateToEnter = 4,\r\n  UnknownQuote = 5,\r\n  DuplicateQuote = 6,\r\n  InvalidBidAskSpread = 7,\r\n  InvalidPrice = 8,\r\n  NotAuthorizedToQuoteSecurity = 9,\r\n  PriceExceedsCurrentPriceBand = 10,\r\n  QuoteLockedUnableToUpdateCancel = 11,\r\n  InvalidOrUnknownSecurityIssuer = 12,\r\n  InvalidOrUnknownIssuerOfUnderlyingSecurity = 13,\r\n  NotionalValueExceedsThreshold = 14,\r\n  PriceExceedsCurrentPriceBand2 = 15,\r\n  ReferencePriceNotAvailable = 16,\r\n  InsufficientCreditLimit = 17,\r\n  ExceededClipSizeLimit = 18,\r\n  ExceededMaximumNotionalOrderAmount = 19,\r\n  ExceededDv01Pv01Limit = 20,\r\n  ExceededCs01Limit = 21,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Level of Response requested from receiver of quote messages. *\r\n* A default value should be bilaterally agreed.                *\r\n****************************************************************\r\n*/\r\nexport enum QuoteResponseLevel {\r\n  NoAcknowledgement = 0,\r\n  AcknowledgeOnlyNegativeOrErroneousQuotes = 1,\r\n  AcknowledgeEachQuoteMessage = 2,\r\n  SummaryAcknowledgement = 3\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Indicates the type of Quote Request being generated *\r\n*******************************************************\r\n*/\r\nexport enum QuoteRequestType {\r\n  Manual = 1,\r\n  Automatic = 2,\r\n  ConfirmQuote = 3\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Underlying security's SecurityIDSource.       *\r\n* Valid values: see SecurityIDSource (22) field *\r\n*************************************************\r\n*/\r\nexport enum UnderlyingSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Underlying security's SecurityType.                         *\r\n* Valid values: see SecurityType (167) field                  *\r\n* (see below for details concerning this fields use in        *\r\n* conjunction with SecurityType=REPO)                         *\r\n* The following applies when used in conjunction with         *\r\n* SecurityType=REPO                                           *\r\n* Represents the general or specific type of security that    *\r\n* underlies a financing agreement                             *\r\n* Valid values for SecurityType=REPO:                         *\r\n* If bonds of a particular issuer or country are wanted in an *\r\n* Order or are in the basket of an Execution and the          *\r\n* SecurityType is not granular enough, include the            *\r\n* UnderlyingIssuer (306), UnderlyingCountryOfIssue (592),     *\r\n* UnderlyingProgram, UnderlyingRegType and/or <               *\r\n* UnderlyingStipulations > block e.g.:                        *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingSecurityType {\r\n  EuroSupranationalCoupons = 'EUSUPRA',\r\n  CorporateBond = 'CORP',\r\n  ForeignExchangeContract = 'FOR',\r\n  CommonStock = 'CS',\r\n  Repurchase = 'REPO',\r\n  BradyBond = 'BRADY',\r\n  TermLoan = 'TERM',\r\n  BankersAcceptance = 'BA',\r\n  AssetBackedSecurities = 'ABS',\r\n  OtherAnticipationNotesBanGanEtc = 'AN',\r\n  MutualFund = 'MF',\r\n  FederalAgencyCoupon = 'FAC',\r\n  CorporatePrivatePlacement = 'CPP',\r\n  PreferredStock = 'PS',\r\n  Forward = 'FORWARD',\r\n  CanadianTreasuryNotes = 'CAN',\r\n  RevolverLoan = 'RVLV',\r\n  BankDepositoryNote = 'BDN',\r\n  CanadianMortgageBonds = 'CMB',\r\n  CertificateOfObligation = 'COFO',\r\n  MultilegInstrument = 'MLEG',\r\n  NonDeliverableForward = 'FXNDF',\r\n  Cap = 'CAP',\r\n  FederalAgencyDiscountNote = 'FADN',\r\n  ConvertibleBond = 'CB',\r\n  CreditDefaultSwap = 'CDS',\r\n  BuySellback = 'BUYSELL',\r\n  CanadianTreasuryBills = 'CTB',\r\n  RevolverTermLoan = 'RVLVTRM',\r\n  BankNotes = 'BN',\r\n  CorpMortgageBackedSecurities = 'CMBS',\r\n  CertificateOfParticipation = 'COFP',\r\n  NoSecurityType = 'NONE',\r\n  FxSpot = 'FXSPOT',\r\n  UsTreasuryNoteDeprecatedValueUseTnote = 'UST',\r\n  PrivateExportFunding = 'PEF',\r\n  DualCurrency = 'DUAL',\r\n  SecuritiesLoan = 'SECLOAN',\r\n  EuroSovereigns = 'EUSOV',\r\n  BridgeLoan = 'BRIDGE',\r\n  BillOfExchanges = 'BOX',\r\n  CollateralizedMortgageObligation = 'CMO',\r\n  GeneralObligationBonds = 'GO',\r\n  FxForward = 'FXFWD',\r\n  Collar = 'CLLR',\r\n  UsTreasuryBillDeprecatedValueUseTbill = 'USTB',\r\n  UsdSupranationalCoupons = 'SUPRA',\r\n  EuroCorporateBond = 'EUCORP',\r\n  SecuritiesPledge = 'SECPLEDGE',\r\n  CanadianProvincialBonds = 'PROV',\r\n  LetterOfCredit = 'LOFC',\r\n  CanadianMoneyMarkets = 'CAMM',\r\n  IoetteMortgage = 'IET',\r\n  MandatoryTender = 'MT',\r\n  FxSwap = 'FXSWAP',\r\n  CommoditySwap = 'CMDTYSWAP',\r\n  EuroCorporateFloatingRateNotes = 'EUFRN',\r\n  TreasuryBillNonUs = 'TB',\r\n  SwingLineFacility = 'SWING',\r\n  CertificateOfDeposit = 'CD',\r\n  MortgageBackedSecurities = 'MBS',\r\n  RevenueAnticipationNote = 'RAN',\r\n  WildcardEntryForUseOnSecurityDefinitionRequest = '?',\r\n  DeliveryVersusPledge = 'DVPLDG',\r\n  Exotic = 'EXOTIC',\r\n  UsCorporateFloatingRateNotes = 'FRN',\r\n  OptionsOnCombo = 'OOC',\r\n  UsTreasuryBond = 'TBOND',\r\n  DebtorInPossession = 'DINP',\r\n  CallLoans = 'CL',\r\n  MortgageInterestOnly = 'MIO',\r\n  RevenueBonds = 'REV',\r\n  Cash = 'CASH',\r\n  Floor = 'FLR',\r\n  CollateralBasket = 'COLLBSKT',\r\n  IndexedLinked = 'XLINKD',\r\n  InterestStripFromAnyBondOrNote = 'TINT',\r\n  Defaulted = 'DEFLTED',\r\n  CommercialPaper = 'CP',\r\n  MortgagePrincipalOnly = 'MPO',\r\n  SpecialAssessment = 'SPCLA',\r\n  ForwardRateAgreement = 'FRA',\r\n  StructuredNotes = 'STRUCT',\r\n  Future = 'FUT',\r\n  UsTreasuryBill = 'TBILL',\r\n  TreasuryInflationProtectedSecurities = 'TIPS',\r\n  Withdrawn = 'WITHDRN',\r\n  DepositNotes = 'DN',\r\n  MortgagePrivatePlacement = 'MPP',\r\n  SpecialObligation = 'SPCLO',\r\n  YankeeCorporateBond = 'YANK',\r\n  PrincipalStripOfACallableBondOrNote = 'TCAL',\r\n  Replaced = 'REPLACD',\r\n  EuroCertificateOfDeposit = 'EUCD',\r\n  MiscellaneousPassThrough = 'MPT',\r\n  SpecialTax = 'SPCLT',\r\n  DerivativeForward = 'FWD',\r\n  InterestRateSwap = 'IRS',\r\n  PrincipalStripFromANonCallableBondOrNote = 'TPRN',\r\n  Matured = 'MATURED',\r\n  EuroCommercialPaper = 'EUCP',\r\n  Pfandbriefe = 'PFAND',\r\n  TaxAnticipationNote = 'TAN',\r\n  TotalReturnSwap = 'TRS',\r\n  UsTreasuryNote = 'TNOTE',\r\n  AmendedRestated = 'AMENDED',\r\n  LiquidityNote = 'LQN',\r\n  ToBeAnnounced = 'TBA',\r\n  TaxAllocation = 'TAXA',\r\n  LoanLease = 'LOANLEASE',\r\n  Retired = 'RETIRED',\r\n  MediumTermNotes = 'MTN',\r\n  TaxExemptCommercialPaper = 'TECP',\r\n  OptionsOnFutures = 'OOF',\r\n  Overnight = 'ONITE',\r\n  TaxableMunicipalCp = 'TMCP',\r\n  OptionsOnPhysicalUseNotRecommended = 'OOP',\r\n  PromissoryNote = 'PN',\r\n  ShortTermLoanNote = 'STN',\r\n  TaxRevenueAnticipationNote = 'TRAN',\r\n  Option = 'OPT',\r\n  PlazosFijos = 'PZFJ',\r\n  VariableRateDemandNote = 'VRDN',\r\n  SecuredLiquidityNote = 'SLQN',\r\n  Warrant = 'WAR',\r\n  SpotForward = 'SPOTFWD',\r\n  TimeDeposit = 'TD',\r\n  SwapOption = 'SWAPTION',\r\n  Transmission = 'XMISSION',\r\n  TermLiquidityNote = 'TLQN',\r\n  GeneralTypeForAContractBasedOnAnEstablishedIndex = 'INDEX',\r\n  ExtendedCommNote = 'XCN',\r\n  BondBasket = 'BDBSKT',\r\n  YankeeCertificateOfDeposit = 'YCD',\r\n  ContractForDifference = 'CFD',\r\n  CorrelationSwap = 'CRLTNSWAP',\r\n  DividendSwap = 'DVDNDSWAP',\r\n  EquityBasket = 'EQBSKT',\r\n  EquityForward = 'EQFWD',\r\n  ReturnSwap = 'RTRNSWAP',\r\n  VarianceSwap = 'VARSWAP'\r\n}\r\n\r\n/*\r\n********************************************\r\n* Underlying security's SymbolSfx.         *\r\n* See SymbolSfx (65) field for description *\r\n********************************************\r\n*/\r\nexport enum UnderlyingSymbolSfx {\r\n  EucpWithLumpSumInterestRatherThanDiscountPrice = 'CD',\r\n  WhenIssuedForASecurityToBeReissuedUnderAnOldCusipOrIsin = 'WI'\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Put or call indicator of the underlying security. *\r\n* See PutOrCall(201).                               *\r\n*****************************************************\r\n*/\r\nexport enum UnderlyingPutOrCall {\r\n  Put = 0,\r\n  Call = 1\r\n}\r\n\r\n/*\r\n****************************************\r\n* Type of Security Definition Request. *\r\n****************************************\r\n*/\r\nexport enum SecurityRequestType {\r\n  RequestSecurityIdentityAndSpecifications = 0,\r\n  RequestSecurityIdentityForTheSpecificationsProvidedNameOfTheSecurityIsNotSupplied = 1,\r\n  RequestListSecurityTypes = 2,\r\n  RequestListSecuritiesCanBeQualifiedWithSymbolSecurityTypeTradingSessionIdSecurityExchangeIfProvidedThenOnlyListSecuritiesForTheSpecificType = 3,\r\n  Symbol = 4,\r\n  SecurityTypeAndOrCfiCode = 5,\r\n  Product = 6,\r\n  TradingSessionId = 7,\r\n  AllSecurities = 8,\r\n  MarketIdOrMarketIdMarketSegmentId = 9\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Type of Security Definition message response. *\r\n*************************************************\r\n*/\r\nexport enum SecurityResponseType {\r\n  AcceptSecurityProposalAsIs = 1,\r\n  AcceptSecurityProposalWithRevisionsAsIndicatedInTheMessage = 2,\r\n  ListOfSecurityTypesReturnedPerRequest = 3,\r\n  ListOfSecuritiesReturnedPerRequest = 4,\r\n  RejectSecurityProposal = 5,\r\n  CannotMatchSelectionCriteria = 6\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicates whether or not message is being sent as a result *\r\n* of a subscription request or not.                          *\r\n**************************************************************\r\n*/\r\nexport enum UnsolicitedIndicator {\r\n  MessageIsBeingSentAsAResultOfAPriorRequest = 'N',\r\n  MessageIsBeingSentUnsolicited = 'Y'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies the trading status applicable to the transaction. *\r\n****************************************************************\r\n*/\r\nexport enum SecurityTradingStatus {\r\n  OpeningDelay = 1,\r\n  TradingHalt = 2,\r\n  Resume = 3,\r\n  NoOpenNoResume = 4,\r\n  PriceIndication = 5,\r\n  TradingRangeIndication = 6,\r\n  MarketImbalanceBuy = 7,\r\n  MarketImbalanceSell = 8,\r\n  MarketOnCloseImbalanceBuy = 9,\r\n  MarketOnCloseImbalanceSell = 10,\r\n  NoMarketImbalance = 12,\r\n  NoMarketOnCloseImbalance = 13,\r\n  ItsPreOpening = 14,\r\n  NewPriceIndication = 15,\r\n  TradeDisseminationTime = 16,\r\n  ReadyToTradeStartOfSession = 17,\r\n  NotAvailableForTradingEndOfSession = 18,\r\n  NotTradedOnThisMarket = 19,\r\n  UnknownOrInvalid = 20,\r\n  PreOpen = 21,\r\n  OpeningRotation = 22,\r\n  FastMarket = 23,\r\n  PreCrossSystemIsInAPreCrossStateAllowingMarketToRespondToEitherSideOfCross = 24,\r\n  CrossSystemHasCrossedAPercentageOfTheOrdersAndAllowsMarketToRespondPriorToCrossingRemainingPortion = 25,\r\n  PostClose = 26,\r\n  NoCancel = 27\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Denotes the reason for the Opening Delay or Trading Halt. *\r\n*************************************************************\r\n*/\r\nexport enum HaltReason {\r\n  NewsDissemination = 0,\r\n  OrderInflux = 1,\r\n  OrderImbalance = 2,\r\n  AdditionalInformation = 3,\r\n  NewsPending = 4,\r\n  EquipmentChangeover = 5\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates whether or not the halt was due to Common Stock *\r\n* trading being halted.                                     *\r\n*************************************************************\r\n*/\r\nexport enum InViewOfCommon {\r\n  HaltWasNotRelatedToAHaltOfTheCommonStock = 'N',\r\n  HaltWasDueToCommonStockBeingHalted = 'Y'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Indicates whether or not the halt was due to the Related *\r\n* Security being halted.                                   *\r\n************************************************************\r\n*/\r\nexport enum DueToRelated {\r\n  HaltWasNotRelatedToAHaltOfTheRelatedSecurity = 'N',\r\n  HaltWasDueToRelatedSecurityBeingHalted = 'Y'\r\n}\r\n\r\n/*\r\n**************************************\r\n* Identifies the type of adjustment. *\r\n**************************************\r\n*/\r\nexport enum Adjustment {\r\n  Cancel = 1,\r\n  Error = 2,\r\n  Correction = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Identifier for a trading session.                           *\r\n* A trading session spans an extended period of time that can *\r\n* also be expressed informally in terms of the trading day.   *\r\n* Usage is determined by market or counterparties.            *\r\n* To specify good for session where session spans more than   *\r\n* one calendar day, use TimeInForce = 0 (Day) in conjunction  *\r\n* with TradingSessionID(336).                                 *\r\n* Bilaterally agreed values of data type \"String\" that start  *\r\n* with a character can be used for backward compatibility.    *\r\n***************************************************************\r\n*/\r\nexport enum TradingSessionID {\r\n  Day = '1',\r\n  HalfDay = '2',\r\n  Morning = '3',\r\n  Afternoon = '4',\r\n  Evening = '5',\r\n  AfterHours = '6',\r\n  Holiday = '7'\r\n}\r\n\r\n/*\r\n*********************\r\n* Method of trading *\r\n*********************\r\n*/\r\nexport enum TradSesMethod {\r\n  Electronic = 1,\r\n  OpenOutcry = 2,\r\n  TwoParty = 3\r\n}\r\n\r\n/*\r\n************************\r\n* Trading Session Mode *\r\n************************\r\n*/\r\nexport enum TradSesMode {\r\n  Testing = 1,\r\n  Simulated = 2,\r\n  Production = 3\r\n}\r\n\r\n/*\r\n*********************************\r\n* State of the trading session. *\r\n*********************************\r\n*/\r\nexport enum TradSesStatus {\r\n  Unknown = 0,\r\n  Halted = 1,\r\n  Open = 2,\r\n  Closed = 3,\r\n  PreOpen = 4,\r\n  PreClose = 5,\r\n  RequestRejected = 6\r\n}\r\n\r\n/*\r\n************************************\r\n* Reason Quote Entry was rejected: *\r\n************************************\r\n*/\r\nexport enum QuoteEntryRejectReason {\r\n  UnknownSymbolSecurity = 1,\r\n  ExchangeSecurityClosed = 2,\r\n  QuoteRequestExceedsLimit = 3,\r\n  TooLateToEnter = 4,\r\n  UnknownQuote = 5,\r\n  DuplicateQuote = 6,\r\n  InvalidBidAskSpread = 7,\r\n  InvalidPrice = 8,\r\n  NotAuthorizedToQuoteSecurity = 9,\r\n  PriceExceedsCurrentPriceBand = 10,\r\n  QuoteLockedUnableToUpdateCancel = 11,\r\n  InvalidOrUnknownSecurityIssuer = 12,\r\n  InvalidOrUnknownIssuerOfUnderlyingSecurity = 13,\r\n  NotionalValueExceedsThreshold = 14,\r\n  PriceExceedsCurrentPriceBand2 = 15,\r\n  ReferencePriceNotAvailable = 16,\r\n  InsufficientCreditLimit = 17,\r\n  ExceededClipSizeLimit = 18,\r\n  ExceededMaximumNotionalOrderAmount = 19,\r\n  ExceededDv01Pv01Limit = 20,\r\n  ExceededCs01Limit = 21,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* The MsgType (35) of the FIX message being referenced. *\r\n*********************************************************\r\n*/\r\nexport enum RefMsgType {\r\n  Heartbeat = '0',\r\n  TestRequest = '1',\r\n  ResendRequest = '2',\r\n  Reject = '3',\r\n  SequenceReset = '4',\r\n  Logout = '5',\r\n  Ioi = '6',\r\n  Advertisement = '7',\r\n  ExecutionReport = '8',\r\n  OrderCancelReject = '9',\r\n  Logon = 'A',\r\n  News = 'B',\r\n  Email = 'C',\r\n  NewOrderSingle = 'D',\r\n  NewOrderList = 'E',\r\n  OrderCancelRequest = 'F',\r\n  OrderCancelReplaceRequest = 'G',\r\n  OrderStatusRequest = 'H',\r\n  AllocationInstruction = 'J',\r\n  ListCancelRequest = 'K',\r\n  ListExecute = 'L',\r\n  ListStatusRequest = 'M',\r\n  ListStatus = 'N',\r\n  AllocationInstructionAck = 'P',\r\n  DontKnowTrade = 'Q',\r\n  QuoteRequest = 'R',\r\n  Quote = 'S',\r\n  SettlementInstructions = 'T',\r\n  MarketDataRequest = 'V',\r\n  MarketDataSnapshotFullRefresh = 'W',\r\n  MarketDataIncrementalRefresh = 'X',\r\n  MarketDataRequestReject = 'Y',\r\n  QuoteCancel = 'Z',\r\n  QuoteStatusRequest = 'a',\r\n  MassQuoteAck = 'b',\r\n  SecurityDefinitionRequest = 'c',\r\n  SecurityDefinition = 'd',\r\n  SecurityStatusRequest = 'e',\r\n  SecurityStatus = 'f',\r\n  TradingSessionStatusRequest = 'g',\r\n  TradingSessionStatus = 'h',\r\n  MassQuote = 'i',\r\n  BusinessMessageReject = 'j',\r\n  BidRequest = 'k',\r\n  BidResponse = 'l',\r\n  ListStrikePrice = 'm',\r\n  XmLnonFix = 'n',\r\n  RegistrationInstructions = 'o',\r\n  RegistrationInstructionsResponse = 'p',\r\n  OrderMassCancelRequest = 'q',\r\n  OrderMassCancelReport = 'r',\r\n  NewOrderCross = 's',\r\n  CrossOrderCancelReplaceRequest = 't',\r\n  CrossOrderCancelRequest = 'u',\r\n  SecurityTypeRequest = 'v',\r\n  SecurityTypes = 'w',\r\n  SecurityListRequest = 'x',\r\n  SecurityList = 'y',\r\n  DerivativeSecurityListRequest = 'z',\r\n  DerivativeSecurityList = 'AA',\r\n  NewOrderMultileg = 'AB',\r\n  MultilegOrderCancelReplace = 'AC',\r\n  TradeCaptureReportRequest = 'AD',\r\n  TradeCaptureReport = 'AE',\r\n  OrderMassStatusRequest = 'AF',\r\n  QuoteRequestReject = 'AG',\r\n  RfqRequest = 'AH',\r\n  QuoteStatusReport = 'AI',\r\n  QuoteResponse = 'AJ',\r\n  Confirmation = 'AK',\r\n  PositionMaintenanceRequest = 'AL',\r\n  PositionMaintenanceReport = 'AM',\r\n  RequestForPositions = 'AN',\r\n  RequestForPositionsAck = 'AO',\r\n  PositionReport = 'AP',\r\n  TradeCaptureReportRequestAck = 'AQ',\r\n  TradeCaptureReportAck = 'AR',\r\n  AllocationReport = 'AS',\r\n  AllocationReportAck = 'AT',\r\n  ConfirmationAck = 'AU',\r\n  SettlementInstructionRequest = 'AV',\r\n  AssignmentReport = 'AW',\r\n  CollateralRequest = 'AX',\r\n  CollateralAssignment = 'AY',\r\n  CollateralResponse = 'AZ',\r\n  CollateralReport = 'BA',\r\n  CollateralInquiry = 'BB',\r\n  NetworkCounterpartySystemStatusRequest = 'BC',\r\n  NetworkCounterpartySystemStatusResponse = 'BD',\r\n  UserRequest = 'BE',\r\n  UserResponse = 'BF',\r\n  CollateralInquiryAck = 'BG',\r\n  ConfirmationRequest = 'BH',\r\n  ContraryIntentionReport = 'BO',\r\n  SecurityDefinitionUpdateReport = 'BP',\r\n  SecurityListUpdateReport = 'BK',\r\n  AdjustedPositionReport = 'BL',\r\n  AllocationInstructionAlert = 'BM',\r\n  ExecutionAck = 'BN',\r\n  TradingSessionList = 'BJ',\r\n  TradingSessionListRequest = 'BI',\r\n  SettlementObligationReport = 'BQ',\r\n  DerivativeSecurityListUpdateReport = 'BR',\r\n  TradingSessionListUpdateReport = 'BS',\r\n  MarketDefinitionRequest = 'BT',\r\n  MarketDefinition = 'BU',\r\n  MarketDefinitionUpdateReport = 'BV',\r\n  ApplicationMessageRequest = 'BW',\r\n  ApplicationMessageRequestAck = 'BX',\r\n  ApplicationMessageReport = 'BY',\r\n  OrderMassActionReport = 'BZ',\r\n  OrderMassActionRequest = 'CA',\r\n  UserNotification = 'CB',\r\n  StreamAssignmentRequest = 'CC',\r\n  StreamAssignmentReport = 'CD',\r\n  StreamAssignmentReportAck = 'CE',\r\n  PartyDetailsListRequest = 'CF',\r\n  PartyDetailsListReport = 'CG',\r\n  MarginRequirementInquiry = 'CH',\r\n  MarginRequirementInquiryAck = 'CI',\r\n  MarginRequirementReport = 'CJ',\r\n  PartyDetailsListUpdateReport = 'CK',\r\n  PartyRiskLimitsRequest = 'CL',\r\n  PartyRiskLimitsReport = 'CM',\r\n  SecurityMassStatusRequest = 'CN',\r\n  SecurityMassStatus = 'CO',\r\n  AccountSummaryReport = 'CQ',\r\n  PartyRiskLimitsUpdateReport = 'CR',\r\n  PartyRiskLimitsDefinitionRequest = 'CS',\r\n  PartyRiskLimitsDefinitionRequestAck = 'CT',\r\n  PartyEntitlementsRequest = 'CU',\r\n  PartyEntitlementsReport = 'CV',\r\n  QuoteAck = 'CW',\r\n  PartyDetailsDefinitionRequest = 'CX',\r\n  PartyDetailsDefinitionRequestAck = 'CY',\r\n  PartyEntitlementsUpdateReport = 'CZ',\r\n  PartyEntitlementsDefinitionRequest = 'DA',\r\n  PartyEntitlementsDefinitionRequestAck = 'DB',\r\n  TradeMatchReport = 'DC',\r\n  TradeMatchReportAck = 'DD',\r\n  PartyRiskLimitsReportAck = 'DE',\r\n  PartyRiskLimitCheckRequest = 'DF',\r\n  PartyRiskLimitCheckRequestAck = 'DG',\r\n  PartyActionRequest = 'DH',\r\n  PartyActionReport = 'DI',\r\n  MassOrder = 'DJ',\r\n  MassOrderAck = 'DK',\r\n  PositionTransferInstruction = 'DL',\r\n  PositionTransferInstructionAck = 'DM',\r\n  PositionTransferReport = 'DN',\r\n  MarketDataStatisticsRequest = 'DO',\r\n  MarketDataStatisticsReport = 'DP',\r\n  CollateralReportAck = 'DQ',\r\n  MarketDataReport = 'DR',\r\n  CrossRequest = 'DS',\r\n  CrossRequestAck = 'DT'\r\n}\r\n\r\n/*\r\n********************************************\r\n* Identifies the Bid Request message type. *\r\n********************************************\r\n*/\r\nexport enum BidRequestTransType {\r\n  Cancel = 'C',\r\n  New = 'N'\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Indicates whether or not the order was solicited. *\r\n*****************************************************\r\n*/\r\nexport enum SolicitedFlag {\r\n  WasNotSolicited = 'N',\r\n  WasSolicited = 'Y'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The reason for restatement when an ExecutionReport(35=8) or  *\r\n* TradeCaptureReport(35=AE) message is sent with ExecType(150) *\r\n* = D (Restated) or used when communicating an unsolicited     *\r\n* cancel.                                                      *\r\n****************************************************************\r\n*/\r\nexport enum ExecRestatementReason {\r\n  GtCorporateAction = 0,\r\n  GtRenewalRestatementNoCorporateAction = 1,\r\n  VerbalChange = 2,\r\n  RepricingOfOrder = 3,\r\n  BrokerOption = 4,\r\n  PartialDeclineOfOrderQtyEGExchangeInitiatedPartialCancel = 5,\r\n  CancelOnTradingHalt = 6,\r\n  CancelOnSystemFailure = 7,\r\n  MarketExchangeOption = 8,\r\n  CanceledNotBest = 9,\r\n  WarehouseRecap = 10,\r\n  PegRefresh = 11,\r\n  CancelOnConnectionLoss = 12,\r\n  CancelOnLogout = 13,\r\n  AssignTimePriority = 14,\r\n  CancelledTradePriceViolation = 15,\r\n  CancelledCrossImbalance = 16,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Code to identify reason for a Business Message Reject *\r\n* message.                                              *\r\n*********************************************************\r\n*/\r\nexport enum BusinessRejectReason {\r\n  Other = 0,\r\n  UnknownId = 1,\r\n  UnknownSecurity = 2,\r\n  UnsupportedMessageType = 3,\r\n  ApplicationNotAvailable = 4,\r\n  ConditionallyRequiredFieldMissing = 5,\r\n  NotAuthorized = 6,\r\n  DeliverToFirmNotAvailableAtThisTime = 7,\r\n  ThrottleLimitExceeded = 8,\r\n  ThrottleLimitExceededSessionWillBeDisconnected = 9,\r\n  ThrottledMessagesRejectedOnRequest = 10,\r\n  InvalidPriceIncrement = 18\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Code to identify the price a DiscretionOffsetValue (389) is *\r\n* related to and should be mathematically added to.           *\r\n***************************************************************\r\n*/\r\nexport enum DiscretionInst {\r\n  RelatedToDisplayedPrice = '0',\r\n  RelatedToMarketPrice = '1',\r\n  RelatedToPrimaryPrice = '2',\r\n  RelatedToLocalPrimaryPrice = '3',\r\n  RelatedToMidpointPrice = '4',\r\n  RelatedToLastTradePrice = '5',\r\n  RelatedToVwap = '6',\r\n  AveragePriceGuarantee = '7'\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Code to identify the type of Bid Request. *\r\n*********************************************\r\n*/\r\nexport enum BidType {\r\n  NonDisclosedStyleEGUsEuropean = 1,\r\n  DisclosedSytleEGJapanese = 2,\r\n  NoBiddingProcess = 3\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Code to identify the type of BidDescriptor (400). *\r\n*****************************************************\r\n*/\r\nexport enum BidDescriptorType {\r\n  Sector = 1,\r\n  Country = 2,\r\n  Index = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Code to identify which \"SideValue\" the value refers to.      *\r\n* SideValue1 and SideValue2 are used as opposed to Buy or Sell *\r\n* so that the basket can be quoted either way as Buy or Sell.  *\r\n****************************************************************\r\n*/\r\nexport enum SideValueInd {\r\n  SideValue1 = 1,\r\n  SideValue2 = 2\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Code to identify the type of liquidity indicator. *\r\n*****************************************************\r\n*/\r\nexport enum LiquidityIndType {\r\n  E5DayMovingAverage = 1,\r\n  E20DayMovingAverage = 2,\r\n  NormalMarketSize = 3,\r\n  Other = 4\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Indicates whether or not to exchange for phsyical. *\r\n******************************************************\r\n*/\r\nexport enum ExchangeForPhysical {\r\n  False = 'N',\r\n  True = 'Y'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Code to identify the desired frequency of progress reports. *\r\n***************************************************************\r\n*/\r\nexport enum ProgRptReqs {\r\n  BuySideExplicitlyRequestsStatusUsingStatueRequestDefaultTheSellSideFirmCanHoweverSendADoneStatusListSTatusResponseInAnUnsolicitedFashion = 1,\r\n  SellSidePeriodicallySendsStatusUsingListStatusPeriodOptionallySpecifiedInProgressPeriod = 2,\r\n  RealTimeExecutionReportsToBeDiscourage = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Code to represent whether value is net (inclusive of tax) or *\r\n* gross.                                                       *\r\n****************************************************************\r\n*/\r\nexport enum IncTaxInd {\r\n  Net = 1,\r\n  Gross = 2\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Code to represent the type of trade.                *\r\n* (Prior to FIX 4.4 this field was named \"TradeType\") *\r\n*******************************************************\r\n*/\r\nexport enum BidTradeType {\r\n  Agency = 'A',\r\n  VwapGuarantee = 'G',\r\n  GuaranteedClose = 'J',\r\n  RiskTrade = 'R'\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Code to represent the basis price type. *\r\n*******************************************\r\n*/\r\nexport enum BasisPxType {\r\n  ClosingPriceAtMorningSession = '2',\r\n  ClosingPrice = '3',\r\n  CurrentPrice = '4',\r\n  Sq = '5',\r\n  VwapThroughADay = '6',\r\n  VwapThroughAMorningSession = '7',\r\n  VwapThroughAnAfternoonSession = '8',\r\n  VwapThroughADayExceptYoriAnOpeningAuction = '9',\r\n  VwapThroughAMorningSessionExceptYoriAnOpeningAuction = 'A',\r\n  VwapThroughAnAfternoonSessionExceptYoriAnOpeningAuction = 'B',\r\n  Strike = 'C',\r\n  Open = 'D',\r\n  Others = 'Z'\r\n}\r\n\r\n/*\r\n*************************************\r\n* Code to represent the price type. *\r\n*************************************\r\n*/\r\nexport enum PriceType {\r\n  PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome = 1,\r\n  PerUnitIEPerShareOrContract = 2,\r\n  FixedAmountAbsoluteValue = 3,\r\n  DiscountPercentagePointsBelowPar = 4,\r\n  PremiumPercentagePointsOverPar = 5,\r\n  SpreadBasisPointsSpread = 6,\r\n  TedPrice = 7,\r\n  TedYield = 8,\r\n  Yield = 9,\r\n  FixedCabinetTradePricePrimarilyForListedFuturesAndOptions = 10,\r\n  VariableCabinetTradePricePrimarilyForListedFuturesAndOptions = 11,\r\n  PriceSpread = 12,\r\n  ProductTicksInHalves = 13,\r\n  ProductTicksInFourths = 14,\r\n  ProductTicksInEighths = 15,\r\n  ProductTicksInSixteenths = 16,\r\n  ProductTicksInThirtySeconds = 17,\r\n  ProductTicksInSixtyFourths = 18,\r\n  ProductTicksInOneTwentyEighths = 19,\r\n  NormalRateRepresentationEGFxRate = 20,\r\n  InverseRateRepresentationEGFxRate = 21,\r\n  BasisPoints = 22,\r\n  UpFrontPoints = 23,\r\n  InterestRate = 24,\r\n  PercentageOfNotional = 25\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Code to identify whether to book out executions on a *\r\n* part-filled GT order on the day of execution or to   *\r\n* accumulate.                                          *\r\n********************************************************\r\n*/\r\nexport enum GTBookingInst {\r\n  BookOutAllTradesOnDayOfExecution = 0,\r\n  AccumulateExecutionsUntilOrderIsFilledOrExpires = 1,\r\n  AccumulateUntilVerballyNotifiedOtherwise = 2\r\n}\r\n\r\n/*\r\n**************************************\r\n* Code to represent the status type. *\r\n**************************************\r\n*/\r\nexport enum ListStatusType {\r\n  Ack = 1,\r\n  Response = 2,\r\n  Timed = 3,\r\n  ExecStarted = 4,\r\n  AllDone = 5,\r\n  Alert = 6\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Code to represent whether value is net (inclusive of tax) or *\r\n* gross.                                                       *\r\n****************************************************************\r\n*/\r\nexport enum NetGrossInd {\r\n  Net = 1,\r\n  Gross = 2\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Code to represent the status of a list order. *\r\n*************************************************\r\n*/\r\nexport enum ListOrderStatus {\r\n  InBiddingProcess = 1,\r\n  ReceivedForExecution = 2,\r\n  Executing = 3,\r\n  Cancelling = 4,\r\n  Alert = 5,\r\n  AllDone = 6,\r\n  Reject = 7\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Identifies the type of ListExecInst (69). *\r\n*********************************************\r\n*/\r\nexport enum ListExecInstType {\r\n  Immediate = '1',\r\n  WaitForExecutInstructionIEAListExecutMessageOrPhoneCallBeforeProceedingWithExecutionOfTheList = '2',\r\n  ExchangeSwitchCivOrderSellDriven = '3',\r\n  ExchangeSwitchCivOrderBuyDrivenCashTopUpIEAdditionalCashWillBeProvidedToFulfillTheOrder = '4',\r\n  ExchangeSwitchCivOrderBuyDrivenCashWithdrawIEAdditionalCashWillNotBeProvidedToFulfillTheOrder = '5'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Identifies the type of request that a Cancel Reject is in *\r\n* response to.                                              *\r\n*************************************************************\r\n*/\r\nexport enum CxlRejResponseTo {\r\n  OrderCancelRequest = '1',\r\n  OrderCancelReplaceRequest = '2'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Used to indicate how the multi-legged security (e.g. option *\r\n* strategies, spreads, etc.) is being reported.               *\r\n***************************************************************\r\n*/\r\nexport enum MultiLegReportingType {\r\n  SingleSecurityDefaultIfNotSpecified = '1',\r\n  IndividualLegOfAMultiLegSecurity = '2',\r\n  MultiLegSecurity = '3'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Identifies class or source of the PartyID (448) value.    *\r\n* Required if PartyID is specified. Note: applicable values *\r\n* depend upon PartyRole (452) specified.                    *\r\n* See \"Appendix 6-G - Use of <Parties> Component Block\"     *\r\n*************************************************************\r\n*/\r\nexport enum PartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Identifies the type or role of the PartyID (448) specified. *\r\n* See \"Appendix 6-G - Use of <Parties> Component Block\"       *\r\n* (see Volume : \"Glossary\" for value definitions)             *\r\n***************************************************************\r\n*/\r\nexport enum PartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies class or source of the SecurityAltID (455) value. *\r\n* Required if SecurityAltID is specified.                      *\r\n* Valid values:                                                *\r\n* Same valid values as the SecurityIDSource (22) field         *\r\n****************************************************************\r\n*/\r\nexport enum SecurityAltIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Identifies class or source of the UnderlyingSecurityAltID *\r\n* (458) value. Required if UnderlyingSecurityAltID is       *\r\n* specified.                                                *\r\n* Valid values:                                             *\r\n* Same valid values as the SecurityIDSource (22) field      *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingSecurityAltIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Indicates the type of product the security is associated *\r\n* with. See also the CFICode (461) and SecurityType (167)  *\r\n* fields.                                                  *\r\n************************************************************\r\n*/\r\nexport enum Product {\r\n  Agency = 1,\r\n  Commodity = 2,\r\n  Corporate = 3,\r\n  Currency = 4,\r\n  Equity = 5,\r\n  Government = 6,\r\n  Index = 7,\r\n  Loan = 8,\r\n  Moneymarket = 9,\r\n  Mortgage = 10,\r\n  Municipal = 11,\r\n  Other = 12,\r\n  Financing = 13\r\n}\r\n\r\n/*\r\n****************************************\r\n* Underlying security's Product.       *\r\n* Valid values: see Product(460) field *\r\n****************************************\r\n*/\r\nexport enum UnderlyingProduct {\r\n  Agency = 1,\r\n  Commodity = 2,\r\n  Corporate = 3,\r\n  Currency = 4,\r\n  Equity = 5,\r\n  Government = 6,\r\n  Index = 7,\r\n  Loan = 8,\r\n  Moneymarket = 9,\r\n  Mortgage = 10,\r\n  Municipal = 11,\r\n  Other = 12,\r\n  Financing = 13\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies which direction to round For CIV - indicates       *\r\n* whether or not the quantity of shares/units is to be rounded *\r\n* and in which direction where CashOrdQty (152) or (for CIV    *\r\n* only) OrderPercent (516) are specified on an order.          *\r\n* The default is for rounding to be at the discretion of the   *\r\n* executing broker or fund manager.                            *\r\n* e.g. for an order specifying CashOrdQty or OrderPercent if   *\r\n* the calculated number of shares/units was 325.76 and         *\r\n* RoundingModulus (469) was 0 - \"round down\" would give 320    *\r\n* units, 1 - \"round up\" would give 330 units and \"round to     *\r\n* nearest\" would give 320 units.                               *\r\n****************************************************************\r\n*/\r\nexport enum RoundingDirection {\r\n  RoundToNearest = '0',\r\n  RoundDown = '1',\r\n  RoundUp = '2'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* A code identifying the payment method for a (fractional)     *\r\n* distribution.                                                *\r\n* 13 through 998 are reserved for future use                   *\r\n* Values above 1000 are available for use by private agreement *\r\n* among counterparties                                         *\r\n****************************************************************\r\n*/\r\nexport enum DistribPaymentMethod {\r\n  Crest = 1,\r\n  Nscc = 2,\r\n  Euroclear = 3,\r\n  Clearstream = 4,\r\n  Cheque = 5,\r\n  TelegraphicTransfer = 6,\r\n  FedWire = 7,\r\n  DirectCreditBecsBacs = 8,\r\n  AchCredit = 9,\r\n  Bpay = 10,\r\n  HighValueClearingSystemHvacs = 11,\r\n  ReinvestInFund = 12\r\n}\r\n\r\n/*\r\n******************************************************\r\n* For CIV - A one character code identifying whether *\r\n* Cancellation rights/Cooling off period applies.    *\r\n******************************************************\r\n*/\r\nexport enum CancellationRights {\r\n  Yes = 'Y',\r\n  NoExecutionOnly = 'N',\r\n  NoWaiverAgreement = 'M',\r\n  NoInstitutional = 'O'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* A one character code identifying Money laundering status. *\r\n*************************************************************\r\n*/\r\nexport enum MoneyLaunderingStatus {\r\n  ExemptBelowTheLimit = '1',\r\n  ExemptClientMoneyTypeExemption = '2',\r\n  ExemptAuthorisedCreditOrFinancialInstitution = '3',\r\n  Passed = 'Y',\r\n  NotChecked = 'N'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* For CIV - Identifies how the execution price LastPx (31) was *\r\n* calculated from the fund unit/share price(s) calculated at   *\r\n* the fund valuation point.                                    *\r\n****************************************************************\r\n*/\r\nexport enum ExecPriceType {\r\n  BidPrice = 'B',\r\n  CreationPrice = 'C',\r\n  CreationPricePlusAdjustmentPercent = 'D',\r\n  CreationPricePlusAdjustmentAmount = 'E',\r\n  OfferPrice = 'O',\r\n  OfferPriceMinusAdjustmentPercent = 'P',\r\n  OfferPriceMinusAdjustmentAmount = 'Q',\r\n  SinglePrice = 'S'\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Identifies Trade Report message transaction type *\r\n* (Prior to FIX 4.4 this field was of type char)   *\r\n****************************************************\r\n*/\r\nexport enum TradeReportTransType {\r\n  New = 0,\r\n  Cancel = 1,\r\n  Replace = 2,\r\n  Release = 3,\r\n  Reverse = 4,\r\n  CancelDueToBackOutOfTrade = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* A code identifying the Settlement payment method. 16 through *\r\n* 998 are reserved for future use                              *\r\n* Values above 1000 are available for use by private agreement *\r\n* among counterparties                                         *\r\n****************************************************************\r\n*/\r\nexport enum PaymentMethod {\r\n  Crest = 1,\r\n  Nscc = 2,\r\n  Euroclear = 3,\r\n  Clearstream = 4,\r\n  Cheque = 5,\r\n  TelegraphicTransfer = 6,\r\n  FedWire = 7,\r\n  DebitCard = 8,\r\n  DirectDebitBecs = 9,\r\n  DirectCreditBecs = 10,\r\n  CreditCard = 11,\r\n  AchDebit = 12,\r\n  AchCredit = 13,\r\n  Bpay = 14,\r\n  HighValueClearingSystemHvacs = 15,\r\n  Chips = 16,\r\n  SWIFT = 17,\r\n  Chaps = 18,\r\n  Sic = 19,\r\n  EuroSic = 20\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* For CIV - a code identifying the type of tax exempt account  *\r\n* in which purchased shares/units are to be held.              *\r\n* 30 - 998 are reserved for future use by recognized taxation  *\r\n* authorities                                                  *\r\n* 999=Other                                                    *\r\n* values above 1000 are available for use by private agreement *\r\n* among counterparties                                         *\r\n****************************************************************\r\n*/\r\nexport enum TaxAdvantageType {\r\n  NoneNotApplicableDefault = 0,\r\n  MaxiIsaUk = 1,\r\n  TessaUk = 2,\r\n  MiniCashIsaUk = 3,\r\n  MiniStocksAndSharesIsaUk = 4,\r\n  MiniInsuranceIsaUk = 5,\r\n  CurrentYearPaymentUs = 6,\r\n  PriorYearPaymentUs = 7,\r\n  AssetTransferUs = 8,\r\n  EmployeePriorYearUs = 9,\r\n  EmployeeCurrentYearUs = 10,\r\n  EmployerPriorYearUs = 11,\r\n  EmployerCurrentYearUs = 12,\r\n  NonFundPrototypeIraUs = 13,\r\n  NonFundQualifiedPlanUs = 14,\r\n  DefinedContributionPlanUs = 15,\r\n  IndividualRetirementAccountUs = 16,\r\n  IndividualRetirementAccountRolloverUs = 17,\r\n  KeoghUs = 18,\r\n  ProfitSharingPlanUs = 19,\r\n  E401KUs = 20,\r\n  SelfDirectedIraUs = 21,\r\n  E403BUs = 22,\r\n  E457Us = 23,\r\n  RothIraFundPrototypeUs = 24,\r\n  RothIraNonPrototypeUs = 25,\r\n  RothConversionIraFundPrototypeUs = 26,\r\n  RothConversionIraNonPrototypeUs = 27,\r\n  EducationIraFundPrototypeUs = 28,\r\n  EducationIraNonPrototypeUs = 29,\r\n  Other = 999\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* A one character code identifying whether the Fund based *\r\n* renewal commission is to be waived.                     *\r\n***********************************************************\r\n*/\r\nexport enum FundRenewWaiv {\r\n  No = 'N',\r\n  Yes = 'Y'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Registration status as returned by the broker or (for CIV) *\r\n* the fund manager:                                          *\r\n**************************************************************\r\n*/\r\nexport enum RegistStatus {\r\n  Accepted = 'A',\r\n  Rejected = 'R',\r\n  Held = 'H',\r\n  ReminderIERegistrationInstructionsAreStillOutstanding = 'N'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Reason(s) why Registration Instructions has been rejected. *\r\n* The reason may be further amplified in the                 *\r\n* RegistRejReasonCode field.                                 *\r\n* Possible values of reason code include:                    *\r\n**************************************************************\r\n*/\r\nexport enum RegistRejReasonCode {\r\n  InvalidUnacceptableAccountType = 1,\r\n  InvalidUnacceptableTaxExemptType = 2,\r\n  InvalidUnacceptableOwnershipType = 3,\r\n  InvalidUnacceptableNoRegDetails = 4,\r\n  InvalidUnacceptableRegSeqNo = 5,\r\n  InvalidUnacceptableRegDetails = 6,\r\n  InvalidUnacceptableMailingDetails = 7,\r\n  InvalidUnacceptableMailingInstructions = 8,\r\n  InvalidUnacceptableInvestorId = 9,\r\n  InvalidUnaceeptableInvestorIdSource = 10,\r\n  InvalidUnacceptableDateOfBirth = 11,\r\n  InvalidUnacceptableInvestorCountryOfResidence = 12,\r\n  InvalidUnacceptableNoDistribInstns = 13,\r\n  InvalidUnacceptableDistribPercentage = 14,\r\n  InvalidUnacceptableDistribPaymentMethod = 15,\r\n  InvalidUnacceptableCashDistribAgentAcctName = 16,\r\n  InvalidUnacceptableCashDistribAgentCode = 17,\r\n  InvalidUnacceptableCashDistribAgentAcctNum = 18,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Identifies Registration Instructions transaction type *\r\n*********************************************************\r\n*/\r\nexport enum RegistTransType {\r\n  New = '0',\r\n  Replace = '1',\r\n  Cancel = '2'\r\n}\r\n\r\n/*\r\n**************************************************\r\n* The relationship between Registration parties. *\r\n**************************************************\r\n*/\r\nexport enum OwnershipType {\r\n  JointTrustees = '2',\r\n  JointInvestors = 'J',\r\n  TenantsInCommon = 'T'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Type of ContAmtValue (520).                                *\r\n* NOTE That Commission Amount / % in Contract Amounts is the *\r\n* commission actually charged, rather than the commission    *\r\n* instructions given in Fields 2/3.                          *\r\n**************************************************************\r\n*/\r\nexport enum ContAmtType {\r\n  CommissionAmountActual = 1,\r\n  CommissionPercentActual = 2,\r\n  InitialChargeAmount = 3,\r\n  InitialChargePercent = 4,\r\n  DiscountAmount = 5,\r\n  DiscountPercent = 6,\r\n  DilutionLevyAmount = 7,\r\n  DilutionLevyPercent = 8,\r\n  ExitChargeAmount = 9,\r\n  ExitChargePercent = 10,\r\n  FundBasedRenewalCommissionPercentAKATrailCommission = 11,\r\n  ProjectedFundValueIEForInvestmentsIntendedToRealiseOrExceedASpecificFutureValue = 12,\r\n  FundBasedRenewalCommissionAmountBasedOnOrderValue = 13,\r\n  FundBasedRenewalCommissionAmountBasedOnProjectedFundValue = 14,\r\n  NetSettlementAmount = 15\r\n}\r\n\r\n/*\r\n*********************************\r\n* Identifies the type of owner. *\r\n*********************************\r\n*/\r\nexport enum OwnerType {\r\n  IndividualInvestor = 1,\r\n  PublicCompany = 2,\r\n  PrivateCompany = 3,\r\n  IndividualTrustee = 4,\r\n  CompanyTrustee = 5,\r\n  PensionPlan = 6,\r\n  CustodianUnderGiftsToMinorsAct = 7,\r\n  Trusts = 8,\r\n  Fiduciaries = 9,\r\n  NetworkingSubAccount = 10,\r\n  NonProfitOrganization = 11,\r\n  CorporateBody = 12,\r\n  Nominee = 13,\r\n  InstitutionalCustomer = 14,\r\n  Combined = 15,\r\n  MemberFirmEmployeeOrAssociatedPerson = 16,\r\n  MarketMakingAccount = 17,\r\n  ProprietaryAccount = 18,\r\n  NonBrokerDealer = 19,\r\n  UnknownBeneficialOwnerType = 20,\r\n  ErrorAccountOfFirm = 21\r\n}\r\n\r\n/*\r\n********************************************************\r\n* PartyIDSource value within a nested repeating group. *\r\n* Same values as PartyIDSource (447)                   *\r\n********************************************************\r\n*/\r\nexport enum NestedPartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Designates the capacity of the firm placing the order.      *\r\n* (as of FIX 4.3, this field replaced Rule80A (tag 47) --used *\r\n* in conjunction with OrderRestrictions (529) field)          *\r\n* (see Volume : \"Glossary\" for value definitions)             *\r\n***************************************************************\r\n*/\r\nexport enum OrderCapacity {\r\n  Agency = 'A',\r\n  Proprietary = 'G',\r\n  Individual = 'I',\r\n  Principal = 'P',\r\n  RisklessPrincipal = 'R',\r\n  AgentForOtherMember = 'W',\r\n  MixedCapacity = 'M'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Restrictions associated with an order. If more than one *\r\n* restriction is applicable to an order, this field can   *\r\n* contain multiple instructions separated by space.       *\r\n***********************************************************\r\n*/\r\nexport enum OrderRestrictions {\r\n  ProgramTrade = '1',\r\n  IndexArbitrage = '2',\r\n  NonIndexArbitrage = '3',\r\n  CompetingMarketMaker = '4',\r\n  ActingAsMarketMakerOrSpecialistInTheSecurity = '5',\r\n  ActingAsMarketMakerOrSpecialistInTheUnderlyingSecurityOfADerivativeSecurity = '6',\r\n  ForeignEntityOfForeignGovernmentOrRegulatoryJurisdiction = '7',\r\n  ExternalMarketParticipant = '8',\r\n  ExternalInterConnectedMarketLinkage = '9',\r\n  RisklessArbitrage = 'A',\r\n  IssuerHolding = 'B',\r\n  IssuePriceStabilization = 'C',\r\n  NonAlgorithmic = 'D',\r\n  Algorithmic = 'E',\r\n  Cross = 'F',\r\n  InsiderAccount = 'G',\r\n  SignificantShareholder = 'H',\r\n  NormalCourseIssuerBidNcib = 'I'\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Specifies scope of Order Mass Cancel Request. *\r\n*************************************************\r\n*/\r\nexport enum MassCancelRequestType {\r\n  CancelOrdersForASecurity = '1',\r\n  CancelOrdersForAnUnderlyingSecurity = '2',\r\n  CancelOrdersForAProduct = '3',\r\n  CancelOrdersForACfiCode = '4',\r\n  CancelOrdersForASecurityType = '5',\r\n  CancelOrdersForATradingSession = '6',\r\n  CancelAllOrders = '7',\r\n  CancelOrdersForAMarket = '8',\r\n  CancelOrdersForAMarketSegment = '9',\r\n  CancelOrdersForASecurityGroup = 'A',\r\n  CancelForSecurityIssuer = 'B',\r\n  CancelForIssuerOfUnderlyingSecurity = 'C'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the action taken by counterparty order handling *\r\n* system as a result of the Order Mass Cancel Request       *\r\n*************************************************************\r\n*/\r\nexport enum MassCancelResponse {\r\n  CancelRequestRejectedSeeMassCancelRejectReason532 = '0',\r\n  CancelOrdersForASecurity = '1',\r\n  CancelOrdersForAnUnderlyingSecurity = '2',\r\n  CancelOrdersForAProduct = '3',\r\n  CancelOrdersForACfiCode = '4',\r\n  CancelOrdersForASecurityType = '5',\r\n  CancelOrdersForATradingSession = '6',\r\n  CancelAllOrders = '7',\r\n  CancelOrdersForAMarket = '8',\r\n  CancelOrdersForAMarketSegment = '9',\r\n  CancelOrdersForASecurityGroup = 'A',\r\n  CancelOrdersForASecuritiesIssuer = 'B',\r\n  CancelOrdersForIssuerOfUnderlyingSecurity = 'C'\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Reason Order Mass Cancel Request was rejected *\r\n*************************************************\r\n*/\r\nexport enum MassCancelRejectReason {\r\n  MassCancelNotSupported = 0,\r\n  InvalidOrUnknownSecurity = 1,\r\n  InvalidOrUnkownUnderlyingSecurity = 2,\r\n  InvalidOrUnknownProduct = 3,\r\n  InvalidOrUnknownCfiCode = 4,\r\n  InvalidOrUnknownSecurityType = 5,\r\n  InvalidOrUnknownTradingSession = 6,\r\n  InvalidOrUnknownMarket = 7,\r\n  InvalidOrUnkownMarketSegment = 8,\r\n  InvalidOrUnknownSecurityGroup = 9,\r\n  InvalidOrUnknownSecurityIssuer = 10,\r\n  InvalidOrUnknownIssuerOfUnderlyingSecurity = 11,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies the type of quote.                                *\r\n* An indicative quote is used to inform a counterparty of a    *\r\n* market. An indicative quote does not result directly in a    *\r\n* trade.                                                       *\r\n* A tradeable quote is submitted to a market and will result   *\r\n* directly in a trade against other orders and quotes in a     *\r\n* market.                                                      *\r\n* A restricted tradeable quote is submitted to a market and    *\r\n* within a certain restriction (possibly based upon price or   *\r\n* quantity) will automatically trade against orders. Order     *\r\n* that do not comply with restrictions are sent to the quote   *\r\n* issuer who can choose to accept or decline the order.        *\r\n* A counter quote is used in the negotiation model. See Volume *\r\n* 7 - Product: Fixed Income for example usage.                 *\r\n****************************************************************\r\n*/\r\nexport enum QuoteType {\r\n  Indicative = 0,\r\n  Tradeable = 1,\r\n  RestrictedTradeable = 2,\r\n  CounterTradeable = 3,\r\n  InitiallyTradeable = 4\r\n}\r\n\r\n/*\r\n****************************************************\r\n* PartyRole value within a nested repeating group. *\r\n* Same values as PartyRole (452)                   *\r\n****************************************************\r\n*/\r\nexport enum NestedPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies whether an order is a margin order or a           *\r\n* non-margin order. This is primarily used when sending orders *\r\n* to Japanese exchanges to indicate sell margin or buy to      *\r\n* cover. The same tag could be assigned also by buy-side to    *\r\n* indicate the intent to sell or buy margin and the sell-side  *\r\n* to accept or reject (base on some validation criteria) the   *\r\n* margin request.                                              *\r\n****************************************************************\r\n*/\r\nexport enum CashMargin {\r\n  Cash = '1',\r\n  MarginOpen = '2',\r\n  MarginClose = '3'\r\n}\r\n\r\n/*\r\n**************************************************\r\n* Specifies the market scope of the market data. *\r\n**************************************************\r\n*/\r\nexport enum Scope {\r\n  LocalMarketExchangeEcnAts = '1',\r\n  National = '2',\r\n  Global = '3'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Defines how a server handles distribution of a truncated *\r\n* book. Defaults to broker option.                         *\r\n************************************************************\r\n*/\r\nexport enum MDImplicitDelete {\r\n  ServerMustSendAnExplicitDeleteForBidsOrOffersFallingOutsideTheRequestedMarketDepthOfTheRequest = 'N',\r\n  ClientHasResponsibilityForImplicitlyDeletingBidsOrOffersFallingOutsideTheMarketDepthOfTheRequest = 'Y'\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Type of cross being submitted to a market *\r\n*********************************************\r\n*/\r\nexport enum CrossType {\r\n  AllOrNoneCross = 1,\r\n  ImmediateOrCancelCross = 2,\r\n  OneSidedCross = 3,\r\n  CrossExecutedAgainstBook = 4,\r\n  BasisCross = 5,\r\n  ContingentCross = 6,\r\n  VolumeWeightedAveragePriceVwapCross = 7,\r\n  SpecialTradingSessionCross = 8,\r\n  CustomerToCustomerCross = 9\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicates if one side or the other of a cross order should *\r\n* be prioritized.                                            *\r\n* The definition of prioritization is left to the market. In *\r\n* some markets prioritization means which side of the cross  *\r\n* order is applied to the market first. In other markets -   *\r\n* prioritization may mean that the prioritized side is fully *\r\n* executed (sometimes referred to as the side being          *\r\n* protected).                                                *\r\n**************************************************************\r\n*/\r\nexport enum CrossPrioritization {\r\n  None = 0,\r\n  BuySideIsPrioritized = 1,\r\n  SellSideIsPrioritized = 2\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Identifies the type/criteria of Security List Request *\r\n*********************************************************\r\n*/\r\nexport enum SecurityListRequestType {\r\n  Symbol = 0,\r\n  SecurityTypeAndOrCfiCode = 1,\r\n  Product = 2,\r\n  TradingSessionId = 3,\r\n  AllSecurities = 4,\r\n  MarketIdOrMarketIdMarketSegmentId = 5\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The results returned to a Security Request message *\r\n******************************************************\r\n*/\r\nexport enum SecurityRequestResult {\r\n  ValidRequest = 0,\r\n  InvalidOrUnsupportedRequest = 1,\r\n  NoInstrumentsFoundThatMatchSelectionCriteria = 2,\r\n  NotAuthorizedToRetrieveInstrumentData = 3,\r\n  InstrumentDataTemporarilyUnavailable = 4,\r\n  RequestForInstrumentDataNotSupported = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Indicates the method of execution reporting requested by *\r\n* issuer of the order.                                     *\r\n************************************************************\r\n*/\r\nexport enum MultiLegRptTypeReq {\r\n  ReportByMulitlegSecurityOnlyDoNotReportLegs = 0,\r\n  ReportByMultilegSecurityAndByInstrumentLegsBelongingToTheMultilegSecurity = 1,\r\n  ReportByInstrumentLegsBelongingToTheMultilegSecurityOnlyDoNotReportStatusOfMultilegSecurity = 2\r\n}\r\n\r\n/*\r\n*************************************************\r\n* PositionEffect for leg of a multileg          *\r\n* See PositionEffect (77) field for description *\r\n*************************************************\r\n*/\r\nexport enum LegPositionEffect {\r\n  Close = 'C',\r\n  Fifo = 'F',\r\n  Open = 'O',\r\n  Rolled = 'R',\r\n  CloseButNotifyOnOpen = 'N',\r\n  Default = 'D'\r\n}\r\n\r\n/*\r\n******************************************************\r\n* CoveredOrUncovered for leg of a multileg           *\r\n* See CoveredOrUncovered (203) field for description *\r\n******************************************************\r\n*/\r\nexport enum LegCoveredOrUncovered {\r\n  Covered = 0,\r\n  Uncovered = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates the reason a Trading Session Status Request was *\r\n* rejected.                                                 *\r\n*************************************************************\r\n*/\r\nexport enum TradSesStatusRejReason {\r\n  UnknownOrInvalidTradingSessionId = 1,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*********************************\r\n* Type of Trade Capture Report. *\r\n*********************************\r\n*/\r\nexport enum TradeRequestType {\r\n  AllTrades = 0,\r\n  MatchedTradesMatchingCriteriaProvidedOnRequestPartiesExecIdTradeIdOrderIdInstrumentInputSourceEtc = 1,\r\n  UnmatchedTradesThatMatchCriteria = 2,\r\n  UnreportedTradesThatMatchCriteria = 3,\r\n  AdvisoriesThatMatchCriteria = 4\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Indicates if the trade capture report was previously *\r\n* reported to the counterparty or market.              *\r\n********************************************************\r\n*/\r\nexport enum PreviouslyReported {\r\n  NotReportedToCounterpartyOrMarket = 'N',\r\n  PreviouslyReportedToCounterpartyOrMarket = 'Y'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* The status of this trade with respect to matching or *\r\n* comparison.                                          *\r\n********************************************************\r\n*/\r\nexport enum MatchStatus {\r\n  ComparedMatchedOrAffirmed = '0',\r\n  UncomparedUnmatchedOrUnaffirmed = '1',\r\n  AdvisoryOrAlert = '2'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The point in the matching process at which this trade was *\r\n* matched.                                                  *\r\n*************************************************************\r\n*/\r\nexport enum MatchType {\r\n  OnePartyTradeReportPrivatelyNegotiatedTrade = '1',\r\n  TwoPartyTradeReportPrivatelyNegotiatedTrade = '2',\r\n  ConfirmedTradeReportReportingFromRecognizedMarkets = '3',\r\n  AutoMatch = '4',\r\n  CrossAuction = '5',\r\n  CounterOrderSelection = '6',\r\n  CallAuction = '7',\r\n  IssuingBuyBackAuction = '8',\r\n  SystematicInternaliserSi = '9',\r\n  AutoMatchWithLastLook = '10',\r\n  CrossAuctionWithLastLook = '11',\r\n  ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusFourBadgesAndExecutionTimeWithinTwoMinuteWindow = 'A1',\r\n  ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusFourBadges = 'A2',\r\n  ActAcceptedTrade = 'M3',\r\n  ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusTwoBadgesAndExecutionTimeWithinTwoMinuteWindow = 'A3',\r\n  ActDefaultTrade = 'M4',\r\n  ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusTwoBadges = 'A4',\r\n  ActDefaultAfterM2 = 'M5',\r\n  ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusExecutionTimeWithinTwoMinuteWindow = 'A5',\r\n  ActM6Match = 'M6',\r\n  ComparedRecordsResultingFromStampedAdvisoriesOrSpecialistAcceptsPairOffs = 'AQ',\r\n  SummarizedMatchUsingA1ExactMatchCriteriaExceptQuantityIsSummaried = 'S1',\r\n  SummarizedMatchUsingA2ExactMatchCriteriaExceptQuantityIsSummarized = 'S2',\r\n  SummarizedMatchUsingA3ExactMatchCriteriaExceptQuantityIsSummarized = 'S3',\r\n  SummarizedMatchUsingA4ExactMatchCriteriaExceptQuantityIsSummarized = 'S4',\r\n  SummarizedMatchUsingA5ExactMatchCriteriaExceptQuantityIsSummarized = 'S5',\r\n  ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorMinusBadgesAndTimesActM1Match = 'M1',\r\n  SummarizedMatchMinusBadgesAndTimesActM2Match = 'M2',\r\n  OcsLockedInNonAct = 'MT'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* This trade is to be treated as an odd lot               *\r\n* If this field is not specified, the default will be \"N\" *\r\n***********************************************************\r\n*/\r\nexport enum OddLot {\r\n  TreatAsRoundLotDefault = 'N',\r\n  TreatAsOddLot = 'Y'\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Eligibility of this trade for clearing and central *\r\n* counterparty processing.                           *\r\n******************************************************\r\n*/\r\nexport enum ClearingInstruction {\r\n  ProcessNormally = 0,\r\n  ExcludeFromAllNetting = 1,\r\n  BilateralNettingOnly = 2,\r\n  ExClearing = 3,\r\n  SpecialTrade = 4,\r\n  MultilateralNetting = 5,\r\n  ClearAgainstCentralCounterparty = 6,\r\n  ExcludeFromCentralCounterparty = 7,\r\n  ManualModePrePostingAndOrPreGiveup = 8,\r\n  AutomaticPostingModeTradePostingToThePositionAccountNumberSpecified = 9,\r\n  AutomaticGiveUpModeTradeGiveUpToTheGiveUpDestinationNumberSpecified = 10,\r\n  QualifiedServiceRepresentativeQsr = 11,\r\n  CustomerTrade = 12,\r\n  SelfClearing = 13,\r\n  BuyIn = 14\r\n}\r\n\r\n/*\r\n********************************************\r\n* Type of account associated with an order *\r\n********************************************\r\n*/\r\nexport enum AccountType {\r\n  AccountIsCarriedOnCustomerSideOfTheBooks = 1,\r\n  AccountIsCarriedOnNonCustomerSideOfBooks = 2,\r\n  HouseTrader = 3,\r\n  FloorTrader = 4,\r\n  AccountIsCarriedOnNonCustomerSideOfBooksAndIsCrossMargined = 6,\r\n  AccountIsHouseTraderAndIsCrossMargined = 7,\r\n  JointBackOfficeAccountJbo = 8,\r\n  EquitiesSpecialist = 9,\r\n  OptionsMarketMaker = 10,\r\n  OptionsFirmAccount = 11\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Capacity of customer placing the order. *\r\n*******************************************\r\n*/\r\nexport enum CustOrderCapacity {\r\n  MemberTradingForTheirOwnAccount = 1,\r\n  ClearingFirmTradingForItsProprietaryAccount = 2,\r\n  MemberTradingForAnotherMember = 3,\r\n  AllOther = 4,\r\n  RetailCustomer = 5\r\n}\r\n\r\n/*\r\n****************************\r\n* Mass Status Request Type *\r\n****************************\r\n*/\r\nexport enum MassStatusReqType {\r\n  StatusForOrdersForASecurity = 1,\r\n  StatusForOrdersForAnUnderlyingSecurity = 2,\r\n  StatusForOrdersForAProduct = 3,\r\n  StatusForOrdersForACfiCode = 4,\r\n  StatusForOrdersForASecurityType = 5,\r\n  StatusForOrdersForATradingSession = 6,\r\n  StatusForAllOrders = 7,\r\n  StatusForOrdersForAPartyId = 8,\r\n  StatusForSecurityIssuer = 9,\r\n  StatusForIssuerOfUnderlyingSecurity = 10\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates order settlement period. If present, LegSettlDate  *\r\n* (588) overrides this field. If both LegSettlType (587) and   *\r\n* LegSettDate (588) are omitted, the default for LegSettlType  *\r\n* (587) is 0 (Regular)                                         *\r\n* Regular is defined as the default settlement period for the  *\r\n* particular security on the exchange of execution.            *\r\n* In Fixed Income the contents of this field may influence the *\r\n* instrument definition if the LegSecurityID (602) is          *\r\n* ambiguous. In the US an active Treasury offering may be      *\r\n* re-opened, and for a time one CUSIP will apply to both the   *\r\n* current and \"when-issued\" securities. Supplying a value of   *\r\n* \"7\" clarifies the instrument description; any other value or *\r\n* the absence of this field should cause the respondent to     *\r\n* default to the active issue.                                 *\r\n* Additionally the following patterns may be uses as well as   *\r\n* enum values                                                  *\r\n* Dx = FX tenor expression for \"days\", e.g. \"D5\", where \"x\" is *\r\n* any integer > 0                                              *\r\n* Mx = FX tenor expression for \"months\", e.g. \"M3\", where \"x\"  *\r\n* is any integer > 0                                           *\r\n* Wx = FX tenor expression for \"weeks\", e.g. \"W13\", where \"x\"  *\r\n* is any integer > 0                                           *\r\n* Yx = FX tenor expression for \"years\", e.g. \"Y1\", where \"x\"   *\r\n* is any integer > 0.                                          *\r\n* Note that for FX the tenors expressed using Dx, Mx, Wx, and  *\r\n* Yx values do not denote business days, but calendar days.    *\r\n****************************************************************\r\n*/\r\nexport enum LegSettlType {\r\n  RegularFxSpotSettlementT1OrT2DependingOnCurrency = '0',\r\n  CashTodT0 = '1',\r\n  NextDayTomT1 = '2',\r\n  T2 = '3',\r\n  T3 = '4',\r\n  T4 = '5',\r\n  Future = '6',\r\n  WhenAndIfIssued = '7',\r\n  SellersOption = '8',\r\n  T5 = '9',\r\n  BrokenDate = 'B',\r\n  FxSpotNextSettlementSpot1AkaNextDay = 'C'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Indicates whether or not automatic booking can occur. *\r\n*********************************************************\r\n*/\r\nexport enum DayBookingInst {\r\n  CanTriggerBookingWithoutReferenceToTheOrderInitiatorAuto = '0',\r\n  SpeakWithOrderInitiatorBeforeBookingSpeakFirst = '1',\r\n  Accumulate = '2'\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Indicates what constitutes a bookable unit. *\r\n***********************************************\r\n*/\r\nexport enum BookingUnit {\r\n  EachPartialExecutionIsABookableUnit = '0',\r\n  AggregatePartialExecutionsOnThisOrderAndBookOneTradePerOrder = '1',\r\n  AggregateExecutionsForThisSymbolSideAndSettlementDate = '2'\r\n}\r\n\r\n/*\r\n******************************************\r\n* Indicates the method of preallocation. *\r\n******************************************\r\n*/\r\nexport enum PreallocMethod {\r\n  ProRata = '0',\r\n  DoNotProRataDiscussFirst = '1'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Multileg instrument's individual security's SymbolSfx. *\r\n* See SymbolSfx (65) field for description               *\r\n**********************************************************\r\n*/\r\nexport enum LegSymbolSfx {\r\n  EucpWithLumpSumInterestRatherThanDiscountPrice = 'CD',\r\n  WhenIssuedForASecurityToBeReissuedUnderAnOldCusipOrIsin = 'WI'\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Multileg instrument's individual security's     *\r\n* SecurityIDSource.                               *\r\n* See SecurityIDSource (22) field for description *\r\n***************************************************\r\n*/\r\nexport enum LegSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Multileg instrument's individual security's         *\r\n* SecurityAltIDSource.                                *\r\n* See SecurityAltIDSource (456) field for description *\r\n*******************************************************\r\n*/\r\nexport enum LegSecurityAltIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Multileg instrument's individual security's Product. *\r\n* See Product (460) field for description              *\r\n********************************************************\r\n*/\r\nexport enum LegProduct {\r\n  Agency = 1,\r\n  Commodity = 2,\r\n  Corporate = 3,\r\n  Currency = 4,\r\n  Equity = 5,\r\n  Government = 6,\r\n  Index = 7,\r\n  Loan = 8,\r\n  Moneymarket = 9,\r\n  Mortgage = 10,\r\n  Municipal = 11,\r\n  Other = 12,\r\n  Financing = 13\r\n}\r\n\r\n/*\r\n********************************************\r\n* Refer to definition of SecurityType(167) *\r\n********************************************\r\n*/\r\nexport enum LegSecurityType {\r\n  EuroSupranationalCoupons = 'EUSUPRA',\r\n  CorporateBond = 'CORP',\r\n  ForeignExchangeContract = 'FOR',\r\n  CommonStock = 'CS',\r\n  Repurchase = 'REPO',\r\n  BradyBond = 'BRADY',\r\n  TermLoan = 'TERM',\r\n  BankersAcceptance = 'BA',\r\n  AssetBackedSecurities = 'ABS',\r\n  OtherAnticipationNotesBanGanEtc = 'AN',\r\n  MutualFund = 'MF',\r\n  FederalAgencyCoupon = 'FAC',\r\n  CorporatePrivatePlacement = 'CPP',\r\n  PreferredStock = 'PS',\r\n  Forward = 'FORWARD',\r\n  CanadianTreasuryNotes = 'CAN',\r\n  RevolverLoan = 'RVLV',\r\n  BankDepositoryNote = 'BDN',\r\n  CanadianMortgageBonds = 'CMB',\r\n  CertificateOfObligation = 'COFO',\r\n  MultilegInstrument = 'MLEG',\r\n  NonDeliverableForward = 'FXNDF',\r\n  Cap = 'CAP',\r\n  FederalAgencyDiscountNote = 'FADN',\r\n  ConvertibleBond = 'CB',\r\n  CreditDefaultSwap = 'CDS',\r\n  BuySellback = 'BUYSELL',\r\n  CanadianTreasuryBills = 'CTB',\r\n  RevolverTermLoan = 'RVLVTRM',\r\n  BankNotes = 'BN',\r\n  CorpMortgageBackedSecurities = 'CMBS',\r\n  CertificateOfParticipation = 'COFP',\r\n  NoSecurityType = 'NONE',\r\n  FxSpot = 'FXSPOT',\r\n  UsTreasuryNoteDeprecatedValueUseTnote = 'UST',\r\n  PrivateExportFunding = 'PEF',\r\n  DualCurrency = 'DUAL',\r\n  SecuritiesLoan = 'SECLOAN',\r\n  EuroSovereigns = 'EUSOV',\r\n  BridgeLoan = 'BRIDGE',\r\n  BillOfExchanges = 'BOX',\r\n  CollateralizedMortgageObligation = 'CMO',\r\n  GeneralObligationBonds = 'GO',\r\n  FxForward = 'FXFWD',\r\n  Collar = 'CLLR',\r\n  UsTreasuryBillDeprecatedValueUseTbill = 'USTB',\r\n  UsdSupranationalCoupons = 'SUPRA',\r\n  EuroCorporateBond = 'EUCORP',\r\n  SecuritiesPledge = 'SECPLEDGE',\r\n  CanadianProvincialBonds = 'PROV',\r\n  LetterOfCredit = 'LOFC',\r\n  CanadianMoneyMarkets = 'CAMM',\r\n  IoetteMortgage = 'IET',\r\n  MandatoryTender = 'MT',\r\n  FxSwap = 'FXSWAP',\r\n  CommoditySwap = 'CMDTYSWAP',\r\n  EuroCorporateFloatingRateNotes = 'EUFRN',\r\n  TreasuryBillNonUs = 'TB',\r\n  SwingLineFacility = 'SWING',\r\n  CertificateOfDeposit = 'CD',\r\n  MortgageBackedSecurities = 'MBS',\r\n  RevenueAnticipationNote = 'RAN',\r\n  WildcardEntryForUseOnSecurityDefinitionRequest = '?',\r\n  DeliveryVersusPledge = 'DVPLDG',\r\n  Exotic = 'EXOTIC',\r\n  UsCorporateFloatingRateNotes = 'FRN',\r\n  OptionsOnCombo = 'OOC',\r\n  UsTreasuryBond = 'TBOND',\r\n  DebtorInPossession = 'DINP',\r\n  CallLoans = 'CL',\r\n  MortgageInterestOnly = 'MIO',\r\n  RevenueBonds = 'REV',\r\n  Cash = 'CASH',\r\n  Floor = 'FLR',\r\n  CollateralBasket = 'COLLBSKT',\r\n  IndexedLinked = 'XLINKD',\r\n  InterestStripFromAnyBondOrNote = 'TINT',\r\n  Defaulted = 'DEFLTED',\r\n  CommercialPaper = 'CP',\r\n  MortgagePrincipalOnly = 'MPO',\r\n  SpecialAssessment = 'SPCLA',\r\n  ForwardRateAgreement = 'FRA',\r\n  StructuredNotes = 'STRUCT',\r\n  Future = 'FUT',\r\n  UsTreasuryBill = 'TBILL',\r\n  TreasuryInflationProtectedSecurities = 'TIPS',\r\n  Withdrawn = 'WITHDRN',\r\n  DepositNotes = 'DN',\r\n  MortgagePrivatePlacement = 'MPP',\r\n  SpecialObligation = 'SPCLO',\r\n  YankeeCorporateBond = 'YANK',\r\n  PrincipalStripOfACallableBondOrNote = 'TCAL',\r\n  Replaced = 'REPLACD',\r\n  EuroCertificateOfDeposit = 'EUCD',\r\n  MiscellaneousPassThrough = 'MPT',\r\n  SpecialTax = 'SPCLT',\r\n  DerivativeForward = 'FWD',\r\n  InterestRateSwap = 'IRS',\r\n  PrincipalStripFromANonCallableBondOrNote = 'TPRN',\r\n  Matured = 'MATURED',\r\n  EuroCommercialPaper = 'EUCP',\r\n  Pfandbriefe = 'PFAND',\r\n  TaxAnticipationNote = 'TAN',\r\n  TotalReturnSwap = 'TRS',\r\n  UsTreasuryNote = 'TNOTE',\r\n  AmendedRestated = 'AMENDED',\r\n  LiquidityNote = 'LQN',\r\n  ToBeAnnounced = 'TBA',\r\n  TaxAllocation = 'TAXA',\r\n  LoanLease = 'LOANLEASE',\r\n  Retired = 'RETIRED',\r\n  MediumTermNotes = 'MTN',\r\n  TaxExemptCommercialPaper = 'TECP',\r\n  OptionsOnFutures = 'OOF',\r\n  Overnight = 'ONITE',\r\n  TaxableMunicipalCp = 'TMCP',\r\n  OptionsOnPhysicalUseNotRecommended = 'OOP',\r\n  PromissoryNote = 'PN',\r\n  ShortTermLoanNote = 'STN',\r\n  TaxRevenueAnticipationNote = 'TRAN',\r\n  Option = 'OPT',\r\n  PlazosFijos = 'PZFJ',\r\n  VariableRateDemandNote = 'VRDN',\r\n  SecuredLiquidityNote = 'SLQN',\r\n  Warrant = 'WAR',\r\n  SpotForward = 'SPOTFWD',\r\n  TimeDeposit = 'TD',\r\n  SwapOption = 'SWAPTION',\r\n  Transmission = 'XMISSION',\r\n  TermLiquidityNote = 'TLQN',\r\n  GeneralTypeForAContractBasedOnAnEstablishedIndex = 'INDEX',\r\n  ExtendedCommNote = 'XCN',\r\n  BondBasket = 'BDBSKT',\r\n  YankeeCertificateOfDeposit = 'YCD',\r\n  ContractForDifference = 'CFD',\r\n  CorrelationSwap = 'CRLTNSWAP',\r\n  DividendSwap = 'DVDNDSWAP',\r\n  EquityBasket = 'EQBSKT',\r\n  EquityForward = 'EQFWD',\r\n  ReturnSwap = 'RTRNSWAP',\r\n  VarianceSwap = 'VARSWAP'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* The side of this individual leg (multileg security). *\r\n* See Side (54) field for description and values       *\r\n********************************************************\r\n*/\r\nexport enum LegSide {\r\n  Buy = '1',\r\n  Sell = '2',\r\n  BuyMinus = '3',\r\n  SellPlus = '4',\r\n  SellShort = '5',\r\n  SellShortExempt = '6',\r\n  Undisclosed = '7',\r\n  CrossOrdersWhereCounterpartyIsAnExchangeValidForAllMessagesExceptIoIs = '8',\r\n  CrossShort = '9',\r\n  CrossShortExempt = 'A',\r\n  AsDefinedForUseWithMultilegInstruments = 'B',\r\n  OppositeForUseWithMultilegInstruments = 'C',\r\n  SubscribeEGCiv = 'D',\r\n  RedeemEGCiv = 'E',\r\n  LendFinancingIdentifiesDirectionOfCollateral = 'F',\r\n  BorrowFinancingIdentifiesDirectionOfCollateral = 'G',\r\n  SellUndisclosed = 'H'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Optional market assigned sub identifier for a trading phase  *\r\n* within a trading session. Usage is determined by market or   *\r\n* counterparties. Used by US based futures markets to identify *\r\n* exchange specific execution time bracket codes as required   *\r\n* by US market regulations. Bilaterally agreed values of data  *\r\n* type \"String\" that start with a character can be used for    *\r\n* backward compatibility                                       *\r\n****************************************************************\r\n*/\r\nexport enum TradingSessionSubID {\r\n  PreTrading = '1',\r\n  OpeningOrOpeningAuction = '2',\r\n  ContinuousTrading = '3',\r\n  ClosingOrClosingAuction = '4',\r\n  PostTrading = '5',\r\n  ScheduledIntradayAuction = '6',\r\n  Quiescent = '7',\r\n  AnyAuction = '8',\r\n  UnscheduledIntradayAuction = '9',\r\n  OutOfMainSessionTrading = '10',\r\n  PrivateAuction = '11',\r\n  PublicAuction = '12',\r\n  GroupAuction = '13'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Describes the specific type or purpose of an Allocation     *\r\n* message (i.e. \"Buyside Calculated\")                         *\r\n* (see Volume : \"Glossary\" for value definitions)             *\r\n* *** SOME VALUES HAVE BEEN REPLACED - See \"Replaced Features *\r\n* and Supported Approach\" ***                                 *\r\n***************************************************************\r\n*/\r\nexport enum AllocType {\r\n  CalculatedIncludesMiscFeesAndNetMoney = 1,\r\n  PreliminaryWithoutMiscFeesAndNetMoney = 2,\r\n  SellsideCalculatedUsingPreliminaryIncludesMiscFeesAndNetMoneyReplaced = 3,\r\n  SellsideCalculateddWithoutPreliminarySentUnsolicitedBySellsideIncludesMiscFeesAndNetMoneyReplaced = 4,\r\n  ReadyToBookSingleOrder = 5,\r\n  BuysideReadyToBookCombinedSetOfOrdersReplaced = 6,\r\n  WarehouseInstruction = 7,\r\n  RequestToIntermediary = 8,\r\n  Accept = 9,\r\n  Reject = 10,\r\n  AcceptPending = 11,\r\n  IncompleteGroup = 12,\r\n  CompleteGroup = 13,\r\n  ReversalPending = 14,\r\n  ReopenGroup = 15,\r\n  CancelGroup = 16,\r\n  GiveUp = 17,\r\n  TakeUp = 18,\r\n  RefuseTakeUp = 19,\r\n  InitiateReversal = 20,\r\n  Reverse = 21,\r\n  RefuseReversal = 22,\r\n  SubAllocationGiveUp = 23,\r\n  ApproveGiveUp = 24,\r\n  ApproveTakeUp = 25\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Indicates type of fee being assessed of the customer for *\r\n* trade executions at an exchange. Applicable for futures  *\r\n* markets only at this time.                               *\r\n* (Values source CBOT, CME, NYBOT, and NYMEX):             *\r\n************************************************************\r\n*/\r\nexport enum ClearingFeeIndicator {\r\n  E1stYearDelegateTradingForOwnAccount = '1',\r\n  E2ndYearDelegateTradingForOwnAccount = '2',\r\n  E3rdYearDelegateTradingForOwnAccount = '3',\r\n  E4thYearDelegateTradingForOwnAccount = '4',\r\n  E5thYearDelegateTradingForOwnAccount = '5',\r\n  E6thYearDelegateTradingForOwnAccount = '9',\r\n  CboeMember = 'B',\r\n  NonMemberAndCustomer = 'C',\r\n  EquityMemberAndClearingMember = 'E',\r\n  FullAndAssociateMemberTradingForOwnAccountAndAsFloorBrokers = 'F',\r\n  E106HAnd106JFirms = 'H',\r\n  GimIdemAndComMembershipInterestHolders = 'I',\r\n  Lessee106FEmployees = 'L',\r\n  AllOtherOwnershipTypes = 'M'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates if the order is currently being worked. Applicable *\r\n* only for OrdStatus = \"New\". For open outcry markets this     *\r\n* indicates that the order is being worked in the crowd. For   *\r\n* electronic markets it indicates that the order has           *\r\n* transitioned from a contingent order to a market order.      *\r\n****************************************************************\r\n*/\r\nexport enum WorkingIndicator {\r\n  OrderHasBeenAcceptedButNotYetInAWorkingState = 'N',\r\n  OrderIsCurrentlyBeingWorked = 'Y'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates if a Cancel/Replace has caused an order to lose *\r\n* book priority.                                            *\r\n*************************************************************\r\n*/\r\nexport enum PriorityIndicator {\r\n  PriorityUnchanged = 0,\r\n  LostPriorityAsResultOfOrderChange = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Indicates that this message is to serve as the final and *\r\n* legal confirmation.                                      *\r\n************************************************************\r\n*/\r\nexport enum LegalConfirm {\r\n  DoesNotConsituteALegalConfirm = 'N',\r\n  LegalConfirm = 'Y'\r\n}\r\n\r\n/*\r\n******************************\r\n* Reason Quote was rejected: *\r\n******************************\r\n*/\r\nexport enum QuoteRequestRejectReason {\r\n  UnknownSymbolSecurity = 1,\r\n  ExchangeSecurityClosed = 2,\r\n  QuoteRequestExceedsLimit = 3,\r\n  TooLateToEnter = 4,\r\n  InvalidPrice = 5,\r\n  NotAuthorizedToRequestQuote = 6,\r\n  NoMatchForInquiry = 7,\r\n  NoMarketForInstrument = 8,\r\n  NoInventory = 9,\r\n  Pass = 10,\r\n  InsufficientCredit = 11,\r\n  ExceededClipSizeLimit = 12,\r\n  ExceededMaximumNotionalOrderAmount = 13,\r\n  ExceededDv01Pv01Limit = 14,\r\n  ExceededCs01Limit = 15,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Used to identify the source of the Account (1) code. This is *\r\n* especially useful if the account is a new account that the   *\r\n* Respondent may not have setup yet in their system.           *\r\n****************************************************************\r\n*/\r\nexport enum AcctIDSource {\r\n  Bic = 1,\r\n  SidCode = 2,\r\n  TfmGspta = 3,\r\n  OmgeoAlertId = 4,\r\n  DtccCode = 5,\r\n  OtherCustomOrProprietary = 99\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Used to identify the source of the AllocAccount (79) code. *\r\n* See AcctIDSource (660) for valid values.                   *\r\n**************************************************************\r\n*/\r\nexport enum AllocAcctIDSource {\r\n  Bic = 1,\r\n  SidCode = 2,\r\n  TfmGspta = 3,\r\n  OmgeoAlertId = 4,\r\n  DtccCode = 5,\r\n  OtherCustomOrProprietary = 99\r\n}\r\n\r\n/*\r\n********************************************\r\n* Identifies type of BenchmarkPrice (662). *\r\n* See PriceType (423) for valid values.    *\r\n********************************************\r\n*/\r\nexport enum BenchmarkPriceType {\r\n  PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome = 1,\r\n  PerUnitIEPerShareOrContract = 2,\r\n  FixedAmountAbsoluteValue = 3,\r\n  DiscountPercentagePointsBelowPar = 4,\r\n  PremiumPercentagePointsOverPar = 5,\r\n  SpreadBasisPointsSpread = 6,\r\n  TedPrice = 7,\r\n  TedYield = 8,\r\n  Yield = 9,\r\n  FixedCabinetTradePricePrimarilyForListedFuturesAndOptions = 10,\r\n  VariableCabinetTradePricePrimarilyForListedFuturesAndOptions = 11,\r\n  PriceSpread = 12,\r\n  ProductTicksInHalves = 13,\r\n  ProductTicksInFourths = 14,\r\n  ProductTicksInEighths = 15,\r\n  ProductTicksInSixteenths = 16,\r\n  ProductTicksInThirtySeconds = 17,\r\n  ProductTicksInSixtyFourths = 18,\r\n  ProductTicksInOneTwentyEighths = 19,\r\n  NormalRateRepresentationEGFxRate = 20,\r\n  InverseRateRepresentationEGFxRate = 21,\r\n  BasisPoints = 22,\r\n  UpFrontPoints = 23,\r\n  InterestRate = 24,\r\n  PercentageOfNotional = 25\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Identifies the status of the Confirmation. *\r\n**********************************************\r\n*/\r\nexport enum ConfirmStatus {\r\n  Received = 1,\r\n  MismatchedAccount = 2,\r\n  MissingSettlementInstructions = 3,\r\n  Confirmed = 4,\r\n  RequestRejected = 5\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Identifies the Confirmation transaction type. *\r\n*************************************************\r\n*/\r\nexport enum ConfirmTransType {\r\n  New = 0,\r\n  Replace = 1,\r\n  Cancel = 2\r\n}\r\n\r\n/*\r\n************************************\r\n* Identifies the form of delivery. *\r\n************************************\r\n*/\r\nexport enum DeliveryForm {\r\n  BookEntryDefault = 1,\r\n  Bearer = 2\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Name of the Leg Benchmark Curve.                      *\r\n* See BenchmarkCurveName (22) for description and valid *\r\n* values.                                               *\r\n*********************************************************\r\n*/\r\nexport enum LegBenchmarkCurveName {\r\n  Eonia = 'EONIA',\r\n  Eurepo = 'EUREPO',\r\n  EuriborDeprecatedUseEnumEuriborInstead = 'Euribor',\r\n  FutureSwap = 'FutureSWAP',\r\n  Libid = 'LIBID',\r\n  LiborLondonInterBankOffer = 'LIBOR',\r\n  MuniAaa = 'MuniAAA',\r\n  Other = 'OTHER',\r\n  Pfandbriefe = 'Pfandbriefe',\r\n  Sonia = 'SONIA',\r\n  Swap = 'SWAP',\r\n  Treasury = 'Treasury',\r\n  UsFederalReserveFedFundsEffectiveRate = 'FEDEFF',\r\n  UsFedFundsTargetRate = 'FEDOPEN',\r\n  EuroInterbankOfferRate = 'EURIBOR'\r\n}\r\n\r\n/*\r\n*************************************************\r\n* The price type of the LegBenchmarkPrice(679). *\r\n*************************************************\r\n*/\r\nexport enum LegBenchmarkPriceType {\r\n  PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome = 1,\r\n  PerUnitIEPerShareOrContract = 2,\r\n  FixedAmountAbsoluteValue = 3,\r\n  DiscountPercentagePointsBelowPar = 4,\r\n  PremiumPercentagePointsOverPar = 5,\r\n  SpreadBasisPointsSpread = 6,\r\n  TedPrice = 7,\r\n  TedYield = 8,\r\n  Yield = 9,\r\n  FixedCabinetTradePricePrimarilyForListedFuturesAndOptions = 10,\r\n  VariableCabinetTradePricePrimarilyForListedFuturesAndOptions = 11,\r\n  PriceSpread = 12,\r\n  ProductTicksInHalves = 13,\r\n  ProductTicksInFourths = 14,\r\n  ProductTicksInEighths = 15,\r\n  ProductTicksInSixteenths = 16,\r\n  ProductTicksInThirtySeconds = 17,\r\n  ProductTicksInSixtyFourths = 18,\r\n  ProductTicksInOneTwentyEighths = 19,\r\n  NormalRateRepresentationEGFxRate = 20,\r\n  InverseRateRepresentationEGFxRate = 21,\r\n  BasisPoints = 22,\r\n  UpFrontPoints = 23,\r\n  InterestRate = 24,\r\n  PercentageOfNotional = 25\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Leg-specific IOI quantity.                       *\r\n* See IOIQty (27) for description and valid values *\r\n****************************************************\r\n*/\r\nexport enum LegIOIQty {\r\n  Small = 'S',\r\n  Medium = 'M',\r\n  Large = 'L',\r\n  UndisclosedQuantity = 'U'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* The price type of the LegBidPx (681) and/or LegOfferPx *\r\n* (684).                                                 *\r\n* See PriceType (423) for description and valid values   *\r\n**********************************************************\r\n*/\r\nexport enum LegPriceType {\r\n  PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome = 1,\r\n  PerUnitIEPerShareOrContract = 2,\r\n  FixedAmountAbsoluteValue = 3,\r\n  DiscountPercentagePointsBelowPar = 4,\r\n  PremiumPercentagePointsOverPar = 5,\r\n  SpreadBasisPointsSpread = 6,\r\n  TedPrice = 7,\r\n  TedYield = 8,\r\n  Yield = 9,\r\n  FixedCabinetTradePricePrimarilyForListedFuturesAndOptions = 10,\r\n  VariableCabinetTradePricePrimarilyForListedFuturesAndOptions = 11,\r\n  PriceSpread = 12,\r\n  ProductTicksInHalves = 13,\r\n  ProductTicksInFourths = 14,\r\n  ProductTicksInEighths = 15,\r\n  ProductTicksInSixteenths = 16,\r\n  ProductTicksInThirtySeconds = 17,\r\n  ProductTicksInSixtyFourths = 18,\r\n  ProductTicksInOneTwentyEighths = 19,\r\n  NormalRateRepresentationEGFxRate = 20,\r\n  InverseRateRepresentationEGFxRate = 21,\r\n  BasisPoints = 22,\r\n  UpFrontPoints = 23,\r\n  InterestRate = 24,\r\n  PercentageOfNotional = 25\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* For Fixed Income, type of Stipulation for this leg.        *\r\n* See StipulationType (233) for description and valid values *\r\n**************************************************************\r\n*/\r\nexport enum LegStipulationType {\r\n  AlternativeMinimumTaxYN = 'AMT',\r\n  AbsolutePrepaymentSpeed = 'ABS',\r\n  IncurredRecoveryYN = 'INCURRCVY',\r\n  AutoReinvestmentAtRateOrBetter = 'AUTOREINV',\r\n  ConstantPrepaymentPenalty = 'CPP',\r\n  AdditionalTerm = 'ADDTRM',\r\n  BankQualifiedYN = 'BANKQUAL',\r\n  ConstantPrepaymentRate = 'CPR',\r\n  ModifiedEquityDelivery = 'MODEQTYDLVY',\r\n  BargainConditionsSeeStipulationValue234ForValues = 'BGNCON',\r\n  ConstantPrepaymentYield = 'CPY',\r\n  NoReferenceObligationYN = 'NOREFOBLIG',\r\n  CouponRange = 'COUPON',\r\n  FinalCprOfHomeEquityPrepaymentCurve = 'HEP',\r\n  UnknownReferenceObligationYN = 'UNKREFOBLIG',\r\n  IsoCurrencyCode = 'CURRENCY',\r\n  PercentOfManufacturedHousingPrepaymentCurve = 'MHP',\r\n  AllGuaranteesYN = 'ALLGUARANTEES',\r\n  CustomStartEndDate = 'CUSTOMDATE',\r\n  MonthlyPrepaymentRate = 'MPR',\r\n  ReferencePriceYN = 'REFPX',\r\n  GeographicsAndRangeEx234Ca080MinimumOf80CaliforniaAssets = 'GEOG',\r\n  PercentOfProspectusPrepaymentCurve = 'PPC',\r\n  ReferencePolicyYN = 'REFPOLICY',\r\n  ValuationDiscount = 'HAIRCUT',\r\n  PercentOfBmaPrepaymentCurve = 'PSA',\r\n  SecuredListYN = 'SECRDLIST',\r\n  InsuredYN = 'INSURED',\r\n  SingleMonthlyMortality = 'SMM',\r\n  YearOrYearMonthOfIssueEx234200209 = 'ISSUE',\r\n  IssuersTicker = 'ISSUER',\r\n  IssueSizeRange = 'ISSUESIZE',\r\n  LookbackDays = 'LOOKBACK',\r\n  ExplicitLotIdentifier = 'LOT',\r\n  LotVarianceValueInPercentMaximumOverOrUnderAllocationAllowed = 'LOTVAR',\r\n  MaturityYearAndMonth = 'MAT',\r\n  MaturityRange = 'MATURITY',\r\n  MaximumSubstitutionsRepo = 'MAXSUBS',\r\n  MinimumDenomination = 'MINDNOM',\r\n  MinimumIncrement = 'MININCR',\r\n  MinimumQuantity = 'MINQTY',\r\n  PaymentFrequencyCalendar = 'PAYFREQ',\r\n  NumberOfPieces = 'PIECES',\r\n  PoolsMaximum = 'PMAX',\r\n  PoolsPerLot = 'PPL',\r\n  PoolsPerMillion = 'PPM',\r\n  PoolsPerTrade = 'PPT',\r\n  PriceRange = 'PRICE',\r\n  PricingFrequency = 'PRICEFREQ',\r\n  ProductionYear = 'PROD',\r\n  CallProtection = 'PROTECT',\r\n  Purpose = 'PURPOSE',\r\n  BenchmarkPriceSource = 'PXSOURCE',\r\n  RatingSourceAndRange = 'RATING',\r\n  TypeOfRedemptionValuesAreNonCallablePrefundedEscrowedToMaturityPutableConvertible = 'REDEMPTION',\r\n  RestrictedYN = 'RESTRICTED',\r\n  MarketSector = 'SECTOR',\r\n  SecurityTypeIncludedOrExcluded = 'SECTYPE',\r\n  Structure = 'STRUCT',\r\n  SubstitutionsFrequencyRepo = 'SUBSFREQ',\r\n  SubstitutionsLeftRepo = 'SUBSLEFT',\r\n  FreeformText = 'TEXT',\r\n  TradeVarianceValueInPercentMaximumOverOrUnderAllocationAllowed = 'TRDVAR',\r\n  WeightedAverageCouponValueInPercentExactOrRangePlusGrossOrNetOfServicingSpreadTheDefaultEx23465NetMinimumOf65NetOfServicingFee = 'WAC',\r\n  WeightedAverageLifeCouponValueInPercentExactOrRange = 'WAL',\r\n  WeightedAverageLoanAgeValueInMonthsExactOrRange = 'WALA',\r\n  WeightedAverageMaturityValueInMonthsExactOrRange = 'WAM',\r\n  WholePoolYN = 'WHOLE',\r\n  YieldRange = 'YIELD',\r\n  AverageFicoScore = 'AVFICO',\r\n  OriginalAmount = 'ORIGAMT',\r\n  AverageLoanSize = 'AVSIZE',\r\n  PoolEffectiveDate = 'POOLEFFDT',\r\n  MaximumLoanBalance = 'MAXBAL',\r\n  PoolInitialFactor = 'POOLINITFCTR',\r\n  PoolIdentifier = 'POOL',\r\n  TrancheIdentifier = 'TRANCHE',\r\n  TypeOfRollTrade = 'ROLLTYPE',\r\n  SubstitutionYN = 'SUBSTITUTION',\r\n  ReferenceToRollingOrClosingTrade = 'REFTRADE',\r\n  MultipleExchangeFallbackYN = 'MULTEXCHFLLBCK',\r\n  PrincipalOfRollingOrClosingTrade = 'REFPRIN',\r\n  ComponentSecurityFallbackYN = 'COMPSECFLLBCK',\r\n  InterestOfRollingOrClosingTrade = 'REFINT',\r\n  LocalJurisdictionYN = 'LOCLJRSDCTN',\r\n  AvailableOfferQuantityToBeShownToTheStreet = 'AVAILQTY',\r\n  RelevantJurisdictionYN = 'RELVJRSDCTN',\r\n  BrokersSalesCredit = 'BROKERCREDIT',\r\n  OfferPriceToBeShownToInternalBrokers = 'INTERNALPX',\r\n  OfferQuantityToBeShownToInternalBrokers = 'INTERNALQTY',\r\n  TheMinimumResidualOfferQuantity = 'LEAVEQTY',\r\n  MaximumOrderSize = 'MAXORDQTY',\r\n  OrderQuantityIncrement = 'ORDRINCR',\r\n  PrimaryOrSecondaryMarketIndicator = 'PRIMARY',\r\n  BrokerSalesCreditOverride = 'SALESCREDITOVR',\r\n  TradersCredit = 'TRADERCREDIT',\r\n  DiscountRateWhenPriceIsDenominatedInPercentOfPar = 'DISCOUNT',\r\n  YieldToMaturityWhenYieldType235AndYield236ShowADifferentYield = 'YTM'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* For Fixed Income, used instead of LegOrderQty(685) to      *\r\n* requests the respondent to calculate the quantity based on *\r\n* the quantity on the opposite side of the swap.             *\r\n**************************************************************\r\n*/\r\nexport enum LegSwapType {\r\n  ParForPar = 1,\r\n  ModifiedDuration = 2,\r\n  Risk = 4,\r\n  Proceeds = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Code to represent price type requested in Quote.            *\r\n* If the Quote Request is for a Swap, values 1-8 apply to all *\r\n* legs.                                                       *\r\n***************************************************************\r\n*/\r\nexport enum QuotePriceType {\r\n  PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome = 1,\r\n  PerUnitIEPerShareOrContract = 2,\r\n  FixedAmountAbsoluteValue = 3,\r\n  DiscountPercentagePointsBelowPar = 4,\r\n  PremiumPercentagePointsOverPar = 5,\r\n  SpreadBasisPointsRelativeToBenchmark = 6,\r\n  TedPrice = 7,\r\n  TedYield = 8,\r\n  YieldSpreadSwaps = 9,\r\n  Yield = 10,\r\n  PriceSpread = 12,\r\n  ProductTicksInHalves = 13,\r\n  ProductTicksInFourths = 14,\r\n  ProductTicksInEighths = 15,\r\n  ProductTicksInSixteenths = 16,\r\n  ProductTicksInThirtySeconds = 17,\r\n  ProductTicksInSixtyFourths = 18,\r\n  ProductTicksInOneTwentyEighths = 19,\r\n  NormalRateRepresentationEGFxRate = 20,\r\n  InverseRateRepresentationEGFxRate = 21,\r\n  BasisPoints = 22,\r\n  UpFrontPoints = 23,\r\n  InterestRate = 24,\r\n  PercentageOfNotional = 25\r\n}\r\n\r\n/*\r\n******************************************\r\n* Identifies the type of Quote Response. *\r\n******************************************\r\n*/\r\nexport enum QuoteRespType {\r\n  HitLift = 1,\r\n  Counter = 2,\r\n  Expired = 3,\r\n  Cover = 4,\r\n  DoneAway = 5,\r\n  Pass = 6,\r\n  EndTrade = 7,\r\n  TimedOut = 8,\r\n  Tied = 9,\r\n  TiedCover = 10\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Code to qualify Quote use and other aspects of price *\r\n* negotiation.                                         *\r\n********************************************************\r\n*/\r\nexport enum QuoteQualifier {\r\n  QuantityIsNegotiable = '1',\r\n  AllowLateBids = '2',\r\n  ImmediateOrCounter = '3',\r\n  AutoTrade = '4',\r\n  AllOrNoneAon = 'A',\r\n  MarketOnCloseMocHeldToClose = 'B',\r\n  AtTheCloseAroundNotHeldToClose = 'C',\r\n  VwapVolumeWeightedAveragePrice = 'D',\r\n  Axe = 'E',\r\n  AxeOnBid = 'F',\r\n  AxeOnOffer = 'G',\r\n  ClientNaturalWorking = 'H',\r\n  InTouchWith = 'I',\r\n  PositionWanted = 'J',\r\n  MarketMaking = 'K',\r\n  Limit = 'L',\r\n  MoreBehind = 'M',\r\n  ClientNaturalBlock = 'N',\r\n  AtTheOpen = 'O',\r\n  TakingAPosition = 'P',\r\n  AtTheMarketPreviouslyCalledCurrentQuote = 'Q',\r\n  ReadyToTrade = 'R',\r\n  InventoryOrPortfolioShown = 'S',\r\n  ThroughTheDay = 'T',\r\n  Unwind = 'U',\r\n  Versus = 'V',\r\n  IndicationWorkingAway = 'W',\r\n  CrossingOpportunity = 'X',\r\n  AtTheMidpoint = 'Y',\r\n  PreOpen = 'Z',\r\n  AutomaticSpot = 'a',\r\n  PlatformCalculatedSpot = 'b',\r\n  OutsideSpread = 'c',\r\n  DeferredSpot = 'd',\r\n  NegotiatedSpot = 'n'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* The price type of the YieldRedemptionPrice (697)      *\r\n* See PriceType (423) for description and valid values. *\r\n*********************************************************\r\n*/\r\nexport enum YieldRedemptionPriceType {\r\n  PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome = 1,\r\n  PerUnitIEPerShareOrContract = 2,\r\n  FixedAmountAbsoluteValue = 3,\r\n  DiscountPercentagePointsBelowPar = 4,\r\n  PremiumPercentagePointsOverPar = 5,\r\n  SpreadBasisPointsSpread = 6,\r\n  TedPrice = 7,\r\n  TedYield = 8,\r\n  Yield = 9,\r\n  FixedCabinetTradePricePrimarilyForListedFuturesAndOptions = 10,\r\n  VariableCabinetTradePricePrimarilyForListedFuturesAndOptions = 11,\r\n  PriceSpread = 12,\r\n  ProductTicksInHalves = 13,\r\n  ProductTicksInFourths = 14,\r\n  ProductTicksInEighths = 15,\r\n  ProductTicksInSixteenths = 16,\r\n  ProductTicksInThirtySeconds = 17,\r\n  ProductTicksInSixtyFourths = 18,\r\n  ProductTicksInOneTwentyEighths = 19,\r\n  NormalRateRepresentationEGFxRate = 20,\r\n  InverseRateRepresentationEGFxRate = 21,\r\n  BasisPoints = 22,\r\n  UpFrontPoints = 23,\r\n  InterestRate = 24,\r\n  PercentageOfNotional = 25\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Used to identify the type of quantity that is being *\r\n* returned.                                           *\r\n*******************************************************\r\n*/\r\nexport enum PosType {\r\n  AllocationTradeQty = 'ALC',\r\n  OptionAssignment = 'AS',\r\n  AsOfTradeQty = 'ASF',\r\n  DeliveryQty = 'DLV',\r\n  ElectronicTradeQty = 'ETR',\r\n  OptionExerciseQty = 'EX',\r\n  EndOfDayQty = 'FIN',\r\n  IntraSpreadQty = 'IAS',\r\n  InterSpreadQty = 'IES',\r\n  AdjustmentQty = 'PA',\r\n  PitTradeQty = 'PIT',\r\n  StartOfDayQty = 'SOD',\r\n  IntegralSplit = 'SPL',\r\n  TransactionFromAssignment = 'TA',\r\n  TotalTransactionQty = 'TOT',\r\n  TransactionQuantity = 'TQ',\r\n  TransferTradeQty = 'TRF',\r\n  TransactionFromExercise = 'TX',\r\n  CrossMarginQty = 'XM',\r\n  ReceiveQuantity = 'RCV',\r\n  CorporateActionAdjustment = 'CAA',\r\n  DeliveryNoticeQty = 'DN',\r\n  ExchangeForPhysicalQty = 'EP',\r\n  PrivatelyNegotiatedTradeQtyNonRegulated = 'PNTN',\r\n  NetDeltaQty = 'DLT',\r\n  CreditEventAdjustment = 'CEA',\r\n  SuccessionEventAdjustment = 'SEA',\r\n  NetQty = 'NET',\r\n  GrossQty = 'GRS',\r\n  IntradayQty = 'ITD',\r\n  GrossNonDeltaAdjustedSwaptionPosition = 'NDAS',\r\n  DeltaAdjustedPairedSwaptionPosition = 'DAS',\r\n  ExpiringQuantity = 'EXP',\r\n  QuantityNotExercised = 'UNEX',\r\n  RequestedExerciseQuantity = 'REQ',\r\n  CashFuturesEquivalentQuantity = 'CFE'\r\n}\r\n\r\n/*\r\n****************************\r\n* Status of this position. *\r\n****************************\r\n*/\r\nexport enum PosQtyStatus {\r\n  Submitted = 0,\r\n  Accepted = 1,\r\n  Rejected = 2\r\n}\r\n\r\n/*\r\n***************************\r\n* Type of Position amount *\r\n***************************\r\n*/\r\nexport enum PosAmtType {\r\n  CashAmountCorporateEvent = 'CASH',\r\n  CashResidualAmount = 'CRES',\r\n  FinalMarkToMarketAmount = 'FMTM',\r\n  IncrementalMarkToMarket = 'IMTM',\r\n  PremiumAmount = 'PREM',\r\n  StartOfDayMarkToMarket = 'SMTM',\r\n  TradeVariationAmount = 'TVAR',\r\n  ValueAdjustedAmount = 'VADJ',\r\n  SettlementValue = 'SETL',\r\n  InitialTradeCouponAmount = 'ICPN',\r\n  AccruedCouponAmount = 'ACPN',\r\n  CouponAmount = 'CPN',\r\n  IncrementalAccruedCoupon = 'IACPN',\r\n  CollateralizedMarkToMarket = 'CMTM',\r\n  IncrementalCollateralizedMarkToMarket = 'ICMTM',\r\n  CompensationAmount = 'DLV',\r\n  TotalBankedAmount = 'BANK',\r\n  TotalCollateralizedAmount = 'COLAT',\r\n  LongPairedSwapOrSwaptionNotionalValue = 'LSNV',\r\n  ShortPairedSwapOrSwaptionNotionalValue = 'SSNV',\r\n  StartOfDayAccruedCoupon = 'SACPN',\r\n  NetPresentValue = 'NPV',\r\n  StartOfDayNetPresentValue = 'SNPV',\r\n  NetCashFlow = 'NCF',\r\n  PresentValueOfAllFees = 'PVFEES',\r\n  PresentValueOfOneBasisPoints = 'PV01',\r\n  TheFiveYearEquivalentNotionalAmount = '5YREN',\r\n  UndiscountedMarkToMarket = 'UMTM',\r\n  MarkToModel = 'MTD',\r\n  MarkToMarketVariance = 'VMTM',\r\n  MarkToModelVariance = 'VMTD',\r\n  UpfrontPayment = 'UPFRNT'\r\n}\r\n\r\n/*\r\n************************************************\r\n* Identifies the type of position transaction. *\r\n************************************************\r\n*/\r\nexport enum PosTransType {\r\n  Exercise = 1,\r\n  DoNotExercise = 2,\r\n  PositionAdjustment = 3,\r\n  PositionChangeSubmissionMarginDisposition = 4,\r\n  Pledge = 5,\r\n  LargeTraderSubmission = 6,\r\n  LargePositionsReportingSubmission = 7,\r\n  LongHoldings = 8,\r\n  InternalTransfer = 9,\r\n  TransferOfFirm = 10,\r\n  ExternalTransfer = 11,\r\n  CorporateAction = 12,\r\n  Notification = 13,\r\n  PositionCreation = 14,\r\n  CloseOut = 15,\r\n  Reopen = 16\r\n}\r\n\r\n/*\r\n***************************************\r\n* Maintenance Action to be performed. *\r\n***************************************\r\n*/\r\nexport enum PosMaintAction {\r\n  New = 1,\r\n  Replace = 2,\r\n  Cancel = 3,\r\n  Reverse = 4\r\n}\r\n\r\n/*\r\n********************************************\r\n* Identifies a specific settlement session *\r\n********************************************\r\n*/\r\nexport enum SettlSessID {\r\n  Intraday = 'ITD',\r\n  RegularTradingHours = 'RTH',\r\n  ElectronicTradingHours = 'ETH',\r\n  EndOfDay = 'EOD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Type of adjustment to be applied. Used for Position Change *\r\n* Submission (PCS), Position Adjustment (PAJ), and Customer  *\r\n* Gross Margin (CGM).                                        *\r\n**************************************************************\r\n*/\r\nexport enum AdjustmentType {\r\n  ProcessRequestAsMarginDisposition = 0,\r\n  DeltaPlus = 1,\r\n  DeltaMinus = 2,\r\n  Final = 3,\r\n  CustomerSpecificPosition = 4\r\n}\r\n\r\n/*\r\n******************************************\r\n* Status of Position Maintenance Request *\r\n******************************************\r\n*/\r\nexport enum PosMaintStatus {\r\n  Accepted = 0,\r\n  AcceptedWithWarnings = 1,\r\n  Rejected = 2,\r\n  Completed = 3,\r\n  CompletedWithWarnings = 4\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Result of Position Maintenance Request. *\r\n*******************************************\r\n*/\r\nexport enum PosMaintResult {\r\n  SuccessfulCompletionNoWarningsOrErrors = 0,\r\n  Rejected = 1,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Used to specify the type of position request being made. *\r\n************************************************************\r\n*/\r\nexport enum PosReqType {\r\n  Positions = 0,\r\n  Trades = 1,\r\n  Exercises = 2,\r\n  Assignments = 3,\r\n  SettlementActivity = 4,\r\n  BackoutMessage = 5,\r\n  DeltaPositions = 6,\r\n  NetPosition = 7,\r\n  LargePositionsReporting = 8,\r\n  ExercisePositionReportingSubmission = 9,\r\n  PositionLimitReportingSubmission = 10\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Identifies how the response to the request should be *\r\n* transmitted.                                         *\r\n* Details specified via ResponseDestination (726).     *\r\n********************************************************\r\n*/\r\nexport enum ResponseTransportType {\r\n  InBandDefault = 0,\r\n  OutOfBand = 1\r\n}\r\n\r\n/*\r\n************************************\r\n* Result of Request for Positions. *\r\n************************************\r\n*/\r\nexport enum PosReqResult {\r\n  ValidRequest = 0,\r\n  InvalidOrUnsupportedRequest = 1,\r\n  NoPositionsFoundThatMatchCriteria = 2,\r\n  NotAuthorizedToRequestPositions = 3,\r\n  RequestForPositionNotSupported = 4,\r\n  OtherUseText58InConjunctionWithThisCodeForAnExplaination = 99\r\n}\r\n\r\n/*\r\n***********************************\r\n* Status of Request for Positions *\r\n***********************************\r\n*/\r\nexport enum PosReqStatus {\r\n  Completed = 0,\r\n  CompletedWithWarnings = 1,\r\n  Rejected = 2\r\n}\r\n\r\n/*\r\n****************************\r\n* Type of settlement price *\r\n****************************\r\n*/\r\nexport enum SettlPriceType {\r\n  Final = 1,\r\n  Theoretical = 2\r\n}\r\n\r\n/*\r\n**************************************************\r\n* Underlying security's SettlPriceType.          *\r\n* See SettlPriceType (731) field for description *\r\n**************************************************\r\n*/\r\nexport enum UnderlyingSettlPriceType {\r\n  Final = 1,\r\n  Theoretical = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Method by which short positions are assigned to an exercise *\r\n* notice during exercise and assignment processing            *\r\n***************************************************************\r\n*/\r\nexport enum AssignmentMethod {\r\n  ProRata = 'P',\r\n  Random = 'R'\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Exercise Method used to in performing assignment. *\r\n*****************************************************\r\n*/\r\nexport enum ExerciseMethod {\r\n  Automatic = 'A',\r\n  Manual = 'M'\r\n}\r\n\r\n/*\r\n***************************\r\n* Result of Trade Request *\r\n***************************\r\n*/\r\nexport enum TradeRequestResult {\r\n  SuccessfulDefault = 0,\r\n  InvalidOrUnknownInstrument = 1,\r\n  InvalidTypeOfTradeRequested = 2,\r\n  InvalidParties = 3,\r\n  InvalidTransportTypeRequested = 4,\r\n  InvalidDestinationRequested = 5,\r\n  TradeRequestTypeNotSupported = 8,\r\n  NotAuthorized = 9,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************\r\n* Status of Trade Request. *\r\n****************************\r\n*/\r\nexport enum TradeRequestStatus {\r\n  Accepted = 0,\r\n  Completed = 1,\r\n  Rejected = 2\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Reason Trade Capture Request was rejected.               *\r\n* 100+ Reserved and available for bi-laterally agreed upon *\r\n* user-defined values.                                     *\r\n************************************************************\r\n*/\r\nexport enum TradeReportRejectReason {\r\n  SuccessfulDefault = 0,\r\n  InvalidPartyInformation = 1,\r\n  UnknownInstrument = 2,\r\n  UnauthorizedToReportTrades = 3,\r\n  InvalidTradeType = 4,\r\n  PriceExceedsCurrentPriceBand = 5,\r\n  ReferencePriceNotAvailable = 6,\r\n  NotionalValueExceedsThreshold = 7,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Used to indicate if the side being reported on Trade Capture *\r\n* Report represents a leg of a multileg instrument or a single *\r\n* security.                                                    *\r\n****************************************************************\r\n*/\r\nexport enum SideMultiLegReportingType {\r\n  SingleSecurityDefaultIfNotSpecified = 1,\r\n  IndividualLegOfAMultilegSecurity = 2,\r\n  MultilegSecurity = 3\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* PartyIDSource value within a \"second instance\" Nested *\r\n* repeating group.                                      *\r\n* Same values as PartyIDSource (447)                    *\r\n*********************************************************\r\n*/\r\nexport enum Nested2PartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* PartyRole value within a \"second instance\" Nested repeating *\r\n* group.                                                      *\r\n* Same values as PartyRole (452)                              *\r\n***************************************************************\r\n*/\r\nexport enum Nested2PartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Identifies class or source of the BenchmarkSecurityID (699) *\r\n* value. Required if BenchmarkSecurityID is specified.        *\r\n* Same values as the SecurityIDSource (22) field              *\r\n***************************************************************\r\n*/\r\nexport enum BenchmarkSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Trading / Regulatory timestamp type.                     *\r\n* Note of Applicability: values are required in US futures *\r\n* markets by the CFTC to support computerized trade        *\r\n* reconstruction.                                          *\r\n* (see Volume : \"Glossary\" for value definitions)          *\r\n************************************************************\r\n*/\r\nexport enum TrdRegTimestampType {\r\n  ExecutionTime = 1,\r\n  TimeIn = 2,\r\n  TimeOut = 3,\r\n  BrokerReceipt = 4,\r\n  BrokerExecution = 5,\r\n  DeskReceipt = 6,\r\n  SubmissionToClearing = 7,\r\n  TimePriority = 8,\r\n  OrderbookEntryTime = 9,\r\n  OrderSubmissionTime = 10,\r\n  PubliclyReported = 11,\r\n  PublicReportUpdated = 12,\r\n  NonPubliclyReported = 13,\r\n  NonPublicReportUpdated = 14,\r\n  SubmittedForConfirmation = 15,\r\n  UpdatedForConfirmation = 16,\r\n  Confirmed = 17,\r\n  UpdatedForClearing = 18,\r\n  Cleared = 19,\r\n  AllocationsSubmitted = 20,\r\n  AllocationsUpdated = 21,\r\n  ApplicationCompleted = 22,\r\n  SubmittedToRepository = 23,\r\n  PostTradeContinuationEvent = 24,\r\n  PostTradeValuation = 25,\r\n  PreviousTimePriority = 26\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Identifies the type of Confirmation message being sent. *\r\n***********************************************************\r\n*/\r\nexport enum ConfirmType {\r\n  Status = 1,\r\n  Confirmation = 2,\r\n  ConfirmationRequestRejectedReasonCanBeStatedInText58Field = 3\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Identifies the reason for rejecting a Confirmation. *\r\n*******************************************************\r\n*/\r\nexport enum ConfirmRejReason {\r\n  IncorrectOrMissingAccount = 1,\r\n  IncorrectOrMissingSettlementInstructions = 2,\r\n  UnknownOrMissingIndividualAllocId467 = 3,\r\n  TransactionNotRecognized = 4,\r\n  DuplicateTransaction = 5,\r\n  IncorrectOrMissingInstrument = 6,\r\n  IncorrectOrMissingPrice = 7,\r\n  IncorrectOrMissingCommission = 8,\r\n  IncorrectOrMissingSettlementDate = 9,\r\n  IncorrectOrMissingFundIdOrFundName = 10,\r\n  IncorrectOrMissingQuantity = 11,\r\n  IncorrectOrMissingFees = 12,\r\n  IncorrectOrMissingTax = 13,\r\n  IncorrectOrMissingParty = 14,\r\n  IncorrectOrMissingSide = 15,\r\n  IncorrectOrMissingNetMoney = 16,\r\n  IncorrectOrMissingTradeDate = 17,\r\n  IncorrectOrMissingSettlementCurrencyInstructions = 18,\r\n  IncorrectOrMissingCapacity = 19,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Method for booking out this order. Used when notifying a   *\r\n* broker that an order to be settled by that broker is to be *\r\n* booked out as an OTC derivative (e.g. CFD or similar).     *\r\n**************************************************************\r\n*/\r\nexport enum BookingType {\r\n  RegularBooking = 0,\r\n  CfdContractForDifference = 1,\r\n  TotalReturnSwap = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identified reason for rejecting an individual AllocAccount *\r\n* (79) detail.                                               *\r\n* Same values as AllocRejCode (88)                           *\r\n**************************************************************\r\n*/\r\nexport enum IndividualAllocRejCode {\r\n  UnknownOrMissingAccountS = 0,\r\n  IncorrectOrMissingBlockQuantity = 1,\r\n  IncorrectOrMissingAveragePrice = 2,\r\n  UnknownExecutingBrokerMnemonic = 3,\r\n  IncorrectOrMissingCommission = 4,\r\n  UnknownOrderId37 = 5,\r\n  UnknownListId66 = 6,\r\n  OtherFurtherInText58 = 7,\r\n  IncorrectOrMissingAllocatedQuantity = 8,\r\n  CalculationDifference = 9,\r\n  UnknownOrStaleExecId = 10,\r\n  MismatchedData = 11,\r\n  UnknownClOrdId = 12,\r\n  WarehouseRequestRejected = 13,\r\n  DuplicateOrMissingIndividualAllocId467 = 14,\r\n  TradeNotRecognized = 15,\r\n  TradePreviouslyAllocated = 16,\r\n  IncorrectOrMissingInstrument = 17,\r\n  IncorrectOrMissingSettlementDate = 18,\r\n  IncorrectOrMissingFundIdOrFundName = 19,\r\n  IncorrectOrMissingSettlementInstructions = 20,\r\n  IncorrectOrMissingFees = 21,\r\n  IncorrectOrMissingTax = 22,\r\n  UnknownOrMissingParty = 23,\r\n  IncorrectOrMissingSide = 24,\r\n  IncorrectOrMissingNetMoney = 25,\r\n  IncorrectOrMissingTradeDate = 26,\r\n  IncorrectOrMissingSettlementCurrencyInstructions = 27,\r\n  IncorrrectOrMissingProcessCode81 = 28,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Used to indicate whether settlement instructions are       *\r\n* provided on an allocation instruction message, and if not, *\r\n* how they are to be derived.                                *\r\n**************************************************************\r\n*/\r\nexport enum AllocSettlInstType {\r\n  UseDefaultInstructions = 0,\r\n  DeriveFromParametersProvided = 1,\r\n  FullDetailsProvided = 2,\r\n  SsiDbIDsProvided = 3,\r\n  PhoneForInstructions = 4\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* PartyIDSource value within a settlement parties component. *\r\n* Same values as PartyIDSource (447)                         *\r\n**************************************************************\r\n*/\r\nexport enum SettlPartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* PartyRole value within a settlement parties component. *\r\n* Same values as PartyRole (452)                         *\r\n**********************************************************\r\n*/\r\nexport enum SettlPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n****************************************\r\n* Type of SettlPartySubID (785) value. *\r\n* Same values as PartySubIDType (803)  *\r\n****************************************\r\n*/\r\nexport enum SettlPartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Used to indicate whether a delivery instruction is used for *\r\n* securities or cash settlement.                              *\r\n***************************************************************\r\n*/\r\nexport enum DlvyInstType {\r\n  Cash = 'C',\r\n  Securities = 'S'\r\n}\r\n\r\n/*\r\n**********************************\r\n* Type of financing termination. *\r\n**********************************\r\n*/\r\nexport enum TerminationType {\r\n  Overnight = 1,\r\n  Term = 2,\r\n  Flexible = 3,\r\n  Open = 4\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies reason for rejection (of a settlement instruction *\r\n* request message).                                            *\r\n****************************************************************\r\n*/\r\nexport enum SettlInstReqRejCode {\r\n  UnableToProcessRequest = 0,\r\n  UnknownAccount = 1,\r\n  NoMatchingSettlementInstructionsFound = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Describes the specific type or purpose of an Allocation *\r\n* Report message                                          *\r\n***********************************************************\r\n*/\r\nexport enum AllocReportType {\r\n  PreliminaryRequestToIntermediary = 2,\r\n  SellsideCalculatedUsingPreliminaryIncludesMiscFeesAndNetMoney = 3,\r\n  SellsideCalculatedWithoutPreliminarySentUnsolicitedBySellsideIncludesMiscFeesAndNetMoney = 4,\r\n  WarehouseRecap = 5,\r\n  RequestToIntermediary = 8,\r\n  Accept = 9,\r\n  Reject = 10,\r\n  AcceptPending = 11,\r\n  Complete = 12,\r\n  ReversePending = 14,\r\n  GiveUp = 15,\r\n  TakeUp = 16,\r\n  Reversal = 17,\r\n  AllegedReversal = 18,\r\n  SubAllocationGiveUp = 19\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reason for cancelling or replacing an Allocation Instruction *\r\n* or Allocation Report message                                 *\r\n****************************************************************\r\n*/\r\nexport enum AllocCancReplaceReason {\r\n  OriginalDetailsIncompleteIncorrect = 1,\r\n  ChangeInUnderlyingOrderDetails = 2,\r\n  CancelledByGiveUpFirm = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Type of account associated with a confirmation or other *\r\n* trade-level message                                     *\r\n***********************************************************\r\n*/\r\nexport enum AllocAccountType {\r\n  AccountIsCarriedPnCustomerSideOfBooks = 1,\r\n  AccountIsCarriedOnNonCustomerSideOfBooks = 2,\r\n  HouseTrader = 3,\r\n  FloorTrader = 4,\r\n  AccountIsCarriedOnNonCustomerSideOfBooksAndIsCrossMargined = 6,\r\n  AccountIsHouseTraderAndIsCrossMargined = 7,\r\n  JointBackOfficeAccountJbo = 8\r\n}\r\n\r\n/*\r\n**********************************\r\n* Type of PartySubID(523) value. *\r\n**********************************\r\n*/\r\nexport enum PartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Type of NestedPartySubID (545) value. *\r\n* Same values as PartySubIDType (803)   *\r\n*****************************************\r\n*/\r\nexport enum NestedPartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Type of Nested2PartySubID (760) value. Second instance of *\r\n* <NestedParties>.                                          *\r\n* Same values as PartySubIDType (803)                       *\r\n*************************************************************\r\n*/\r\nexport enum Nested2PartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Response to allocation to be communicated to a counterparty *\r\n* through an intermediary, i.e. clearing house. Used in       *\r\n* conjunction with AllocType = \"Request to Intermediary\" and  *\r\n* AllocReportType = \"Request to Intermediary\"                 *\r\n***************************************************************\r\n*/\r\nexport enum AllocIntermedReqType {\r\n  PendingAccept = 1,\r\n  PendingRelease = 2,\r\n  PendingReversal = 3,\r\n  Accept = 4,\r\n  BlockLevelReject = 5,\r\n  AccountLevelReject = 6\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Resolution taken when ApplQueueDepth (813) exceeds         *\r\n* ApplQueueMax (812) or system specified maximum queue size. *\r\n**************************************************************\r\n*/\r\nexport enum ApplQueueResolution {\r\n  NoActionTaken = 0,\r\n  QueueFlushed = 1,\r\n  OverlayLast = 2,\r\n  EndSession = 3\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Action to take to resolve an application message queue *\r\n* (backlog).                                             *\r\n**********************************************************\r\n*/\r\nexport enum ApplQueueAction {\r\n  NoActionTaken = 0,\r\n  QueueFlushed = 1,\r\n  OverlayLast = 2,\r\n  EndSession = 3\r\n}\r\n\r\n/*\r\n*****************************\r\n* Average Pricing Indicator *\r\n*****************************\r\n*/\r\nexport enum AvgPxIndicator {\r\n  NoAveragePricing = 0,\r\n  TradeIsPartOfAnAveragePriceGroupIdentifiedByTheAvgPxGroupId1731 = 1,\r\n  LastTradeIsTheAveragePriceGroupIdentifiedByTheAvgPxGroupId1731 = 2\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Identifies if, and how, the trade is to be allocated or *\r\n* split.                                                  *\r\n***********************************************************\r\n*/\r\nexport enum TradeAllocIndicator {\r\n  AllocationNotRequired = 0,\r\n  AllocationRequiredGiveUpTradeAllocationInformationNotProvidedIncomplete = 1,\r\n  UseAllocationProvidedWithTheTrade = 2,\r\n  AllocationGiveUpExecutor = 3,\r\n  AllocationFromExecutor = 4,\r\n  AllocationToClaimAccount = 5,\r\n  TradeSplit = 6\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Part of trading cycle when an instrument expires. Field is *\r\n* applicable for derivatives.                                *\r\n**************************************************************\r\n*/\r\nexport enum ExpirationCycle {\r\n  ExpireOnTradingSessionCloseDefault = 0,\r\n  ExpireOnTradingSessionOpen = 1,\r\n  TradingEligibilityExpirationSpecifiedInTheDateAndTimeFieldsEventDate866AndEventTime1145AssociatedWithEventType8657LastEligibleTradeDate = 2\r\n}\r\n\r\n/*\r\n******************\r\n* Type of trade. *\r\n******************\r\n*/\r\nexport enum TrdType {\r\n  RegularTrade = 0,\r\n  BlockTrade = 1,\r\n  ExchangeForPhysicalEfp = 2,\r\n  Transfer = 3,\r\n  LateTrade = 4,\r\n  TTrade = 5,\r\n  WeightedAveragePriceTrade = 6,\r\n  BunchedTrade = 7,\r\n  LateBunchedTrade = 8,\r\n  PriorReferencePriceTrade = 9,\r\n  AfterHoursTrade = 10,\r\n  ExchangeForRiskEfr = 11,\r\n  ExchangeForSwapEfs = 12,\r\n  ExchangeOfFuturesForInMarketFuturesEfm = 13,\r\n  ExchangeOfOptionsForOptionsEoo = 14,\r\n  TradingAtSettlement = 15,\r\n  AllOrNone = 16,\r\n  FuturesLargeOrderExecution = 17,\r\n  ExchangeOfFuturesForExternalMarketFuturesEff = 18,\r\n  OptionInterimTrade = 19,\r\n  OptionCabinetTrade = 20,\r\n  PrivatelyNegotiatedTrade = 22,\r\n  SubstitutionOfFuturesForForwards = 23,\r\n  ErrorTrade = 24,\r\n  SpecialCumDividendCd = 25,\r\n  SpecialExDividendXd = 26,\r\n  SpecialCumCouponCc = 27,\r\n  SpecialExCouponXc = 28,\r\n  CashSettlementCs = 29,\r\n  SpecialPriceSp = 30,\r\n  GuaranteedDeliveryGd = 31,\r\n  SpecialCumRightsCr = 32,\r\n  SpecialExRightsXr = 33,\r\n  SpecialCumCapitalRepaymentsCp = 34,\r\n  SpecialExCapitalRepaymentsXp = 35,\r\n  SpecialCumBonusCb = 36,\r\n  SpecialExBonusXb = 37,\r\n  BlockTrade2 = 38,\r\n  WorkedPrincipalTrade = 39,\r\n  BlockTrades = 40,\r\n  NameChange = 41,\r\n  PortfolioTransfer = 42,\r\n  ProrogationBuy = 43,\r\n  ProrogationSell = 44,\r\n  OptionExercise = 45,\r\n  DeltaNeutralTransaction = 46,\r\n  FinancingTransaction = 47,\r\n  NonStandardSettlement = 48,\r\n  DerivativeRelatedTransaction = 49,\r\n  PortfolioTrade = 50,\r\n  VolumeWeightedAverageTrade = 51,\r\n  ExchangeGrantedTrade = 52,\r\n  RepurchaseAgreement = 53,\r\n  Otc = 54,\r\n  ExchangeBasisFacilityEbf = 55,\r\n  OpeningTrade = 56,\r\n  NettedTrade = 57,\r\n  BlockSwapTrade = 58,\r\n  CreditEventTrade = 59,\r\n  SuccessionEventTrade = 60,\r\n  GiveUpGiveInTrade = 61,\r\n  DarkTrade = 62,\r\n  TechnicalTrade = 63,\r\n  Benchmark = 64,\r\n  PackageTrade = 65\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Further qualification to the trade type *\r\n*******************************************\r\n*/\r\nexport enum TrdSubType {\r\n  Cmta = 0,\r\n  InternalTransferOrAdjustment = 1,\r\n  ExternalTransferOrTransferOfAccount = 2,\r\n  RejectForSubmittingSide = 3,\r\n  AdvisoryForContraSide = 4,\r\n  OffsetDueToAnAllocation = 5,\r\n  OnsetDueToAnAllocation = 6,\r\n  DifferentialSpread = 7,\r\n  ImpliedSpreadLegExecutedAgainstAnOutright = 8,\r\n  TransactionFromExercise = 9,\r\n  TransactionFromAssignment = 10,\r\n  Acats = 11,\r\n  AiAutomatedInputFacilityDisabledInResponseToAnExchangeRequest = 14,\r\n  BTransactionBetweenTwoMemberFirmsWhereNeitherMemberFirmIsRegisteredAsAMarketMakerInTheSecurityInQuestionAndNeitherIsADesignatedFundManagerAlsoUsedByBrokerDealersWhenDealingWithAnotherBrokerWhichIsNotAMemberFirmNonOrderBookSecuritiesOnly = 15,\r\n  KTransactionUsingBlockTradeFacility = 16,\r\n  LcCorrectionSubmittedMoreThanThreeDaysAfterPublicationOfTheOriginalTradeReport = 17,\r\n  MTransactionOtherThanATransactionResultingFromAStockSwapOrStockSwitchBetweenTwoMarketMakersRegisteredInThatSecurityIncludingIdbOrAPublicDisplaySystemTradesNonOrderBookSecuritiesOnly = 18,\r\n  NNonProtectedPortfolioTransactionOrAFullyDisclosedPortfolioTransaction = 19,\r\n  NmITransactionWhereExchangeHasGrantedPermissionForNonPublicationIiIdbIsReportingAsSellerIiiSubmittingATransactionReportToTheExchangeWhereTheTransactionReportIsNotAlsoATradeReport = 20,\r\n  NrNonRiskTransactionInASeatsSecurityOtherThanAnAimSecurity = 21,\r\n  PProtectedPortfolioTransactionOrAWorkedPrincipalAgreementToEffectAPortfolioTransactionWhichIncludesOrderBookSecurities = 22,\r\n  PaProtectedTransactionNotification = 23,\r\n  PcContraTradeForTransactionWhichTookPlaceOnAPreviousDayAndWhichWasAutomaticallyExecutedOnTheExchangeTradingSystem = 24,\r\n  PnWorkedPrincipalNotificationForAPortfolioTransactionWhichIncludesOrderBookSecurities = 25,\r\n  RIRisklessPrincipalTransactionBetweenNonMembersWhereTheBuyingAndSellingTransactionsAreExecutedAtDifferentPricesOrOnDifferentTermsRequiresATradeReportWithTradeTypeIndicatorRForEachTransactionIiMarketMakerIsReportingAllTheLegsOfARisklessPrincipalTransactionWhereTheBuyingAndSellingTransactionsAreExecutedAtDifferentPricesRequiresATradeReportWithTradeTypeIndicatorRForEachTransactionOrIiiMarketMakerIsReportingTheOnwardLegOfARisklessPrincipalTransactionWhereTheLegsAreExecutedAtDifferentPricesAndAnotherMarketMakerHasSubmittedATradeReportUsingTradeTypeIndicatorMForTheFirstLegThisRequiresASingleTradeReportWithTradeTypeIndicatorR = 26,\r\n  RoTransactionWhichResultedFromTheExerciseOfATraditionalOptionOrAStockSettledCoveredWarrant = 27,\r\n  RtRiskTransactionInASeatsSecurityExcludingAimSecurityReportedByAMarketMakerRegisteredInThatSecurity = 28,\r\n  SwTransactionsResultingFromStockSwapOrAStockSwitchOneReportIsRequiredForEachLineOfStock = 29,\r\n  TIfReportingASingleProtectedTransaction = 30,\r\n  WnWorkedPrincipalNotificationForASingleOrderBookSecurity = 31,\r\n  WtWorkedPrincipalTransactionOtherThanAPortfolioTransaction = 32,\r\n  OffHoursTrade = 33,\r\n  OnHoursTrade = 34,\r\n  OtcQuote = 35,\r\n  ConvertedSwap = 36,\r\n  CrossedTradeX = 37,\r\n  InterimProtectedTradeI = 38,\r\n  LargeInScaleL = 39,\r\n  WashTrade = 40,\r\n  TradeAtSettlementTas = 41,\r\n  AuctionTrade = 42,\r\n  TradeAtMarkerTam = 43,\r\n  DefaultCreditEvent = 44,\r\n  RestructuringCreditEvent = 45,\r\n  MergerSuccessionEvent = 46,\r\n  SpinOffSuccessionEvent = 47,\r\n  MultilateralCompression = 48,\r\n  Balancing = 50,\r\n  BasisTradeIndexCloseBtic = 51\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Describes whether peg is static or floats *\r\n*********************************************\r\n*/\r\nexport enum PegMoveType {\r\n  FloatingDefault = 0,\r\n  Fixed = 1\r\n}\r\n\r\n/*\r\n****************************\r\n* Type of Peg Offset value *\r\n****************************\r\n*/\r\nexport enum PegOffsetType {\r\n  PriceDefault = 0,\r\n  BasisPoints = 1,\r\n  Ticks = 2,\r\n  PriceTierLevel = 3,\r\n  Percentage = 4\r\n}\r\n\r\n/*\r\n*********************\r\n* Type of Peg Limit *\r\n*********************\r\n*/\r\nexport enum PegLimitType {\r\n  OrBetterDefaultPriceImprovementAllowed = 0,\r\n  StrictLimitIsAStrictLimit = 1,\r\n  OrWorseForABuyThePegLimitIsAMinimumAndForASellThePegLimitIsAMaximumForUseForOrdersWhichHaveAPriceRange = 2\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* If the calculated peg price is not a valid tick price,  *\r\n* specifies whether to round the price to be more or less *\r\n* aggressive                                              *\r\n***********************************************************\r\n*/\r\nexport enum PegRoundDirection {\r\n  MoreAggressiveOnABuyOrderRoundThePriceUpToTheNearestTickOnASellOrderRoundDownToTheNearestTick = 1,\r\n  MorePassiveOnABuyOrderRoundDownToTheNearestTickOnASellOrderRoundUpToTheNearestTick = 2\r\n}\r\n\r\n/*\r\n************************\r\n* The scope of the peg *\r\n************************\r\n*/\r\nexport enum PegScope {\r\n  LocalExchangeEcnAts = 1,\r\n  National = 2,\r\n  Global = 3,\r\n  NationalExcludingLocal = 4\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Describes whether discretionay price is static or floats *\r\n************************************************************\r\n*/\r\nexport enum DiscretionMoveType {\r\n  FloatingDefault = 0,\r\n  Fixed = 1\r\n}\r\n\r\n/*\r\n***********************************\r\n* Type of Discretion Offset value *\r\n***********************************\r\n*/\r\nexport enum DiscretionOffsetType {\r\n  PriceDefault = 0,\r\n  BasisPoints = 1,\r\n  Ticks = 2,\r\n  PriceTierLevel = 3\r\n}\r\n\r\n/*\r\n****************************\r\n* Type of Discretion Limit *\r\n****************************\r\n*/\r\nexport enum DiscretionLimitType {\r\n  OrBetterDefaultPriceImprovementAllowed = 0,\r\n  StrictLimitIsAStrictLimit = 1,\r\n  OrWorseForABuyTheDiscretionPriceIsAMinimumAndForASellTheDiscretionPriceIsAMaximumForUseForOrdersWhichHaveAPriceRange = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* If the calculated discretionary price is not a valid tick *\r\n* price, specifies whether to round the price to be more or *\r\n* less aggressive                                           *\r\n*************************************************************\r\n*/\r\nexport enum DiscretionRoundDirection {\r\n  MoreAggressiveOnABuyOrderRoundThePriceUpToTheNearestTickOnASellRoundDownToTheNearestTick = 1,\r\n  MorePassiveOnABuyOrderRoundDownToTheNearestTickOnASellOrderRoundUpToTheNearestTick = 2\r\n}\r\n\r\n/*\r\n*******************************\r\n* The scope of the discretion *\r\n*******************************\r\n*/\r\nexport enum DiscretionScope {\r\n  LocalExchangeEcnAts = 1,\r\n  National = 2,\r\n  Global = 3,\r\n  NationalExcludingLocal = 4\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The target strategy of the order                            *\r\n* 1000+ = Reserved and available for bi-laterally agreed upon *\r\n* user defined values                                         *\r\n***************************************************************\r\n*/\r\nexport enum TargetStrategy {\r\n  Vwap = 1,\r\n  ParticipateIEAimToBeXPercentOfTheMarketVolume = 2,\r\n  MininizeMarketImpact = 3\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicator to identify whether this fill was a result of a  *\r\n* liquidity provider providing or liquidity taker taking the *\r\n* liquidity.                                                 *\r\n**************************************************************\r\n*/\r\nexport enum LastLiquidityInd {\r\n  AddedLiquidity = 1,\r\n  RemovedLiquidity = 2,\r\n  LiquidityRoutedOut = 3,\r\n  Auction = 4,\r\n  TriggeredStopOrder = 5,\r\n  TriggeredContingencyOrder = 6,\r\n  TriggeredMarketOrder = 7\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Indicates if a trade should be reported via a market *\r\n* reporting service.                                   *\r\n********************************************************\r\n*/\r\nexport enum PublishTrdIndicator {\r\n  DoNotReportTrade = 'N',\r\n  ReportTrade = 'Y'\r\n}\r\n\r\n/*\r\n**************************\r\n* Reason for short sale. *\r\n**************************\r\n*/\r\nexport enum ShortSaleReason {\r\n  DealerSoldShort = 0,\r\n  DealerSoldShortExempt = 1,\r\n  SellingCustomerSoldShort = 2,\r\n  SellingCustomerSoldShortExempt = 3,\r\n  QualifiedServiceRepresentativeQsrOrAutomaticGiveUpAguContraSideSoldShort = 4,\r\n  QsrOrAguContraSideSoldShortExempt = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Type of quantity specified in quantity field.               *\r\n* ContractMultiplier (tag 231) is required when QtyType = 1   *\r\n* (Contracts). UnitOfMeasure (tag 996) and TimeUnit (tag 997) *\r\n* are required when QtyType =  2 (Units of Measure per Time   *\r\n* Unit).                                                      *\r\n***************************************************************\r\n*/\r\nexport enum QtyType {\r\n  UnitsSharesParCurrency = 0,\r\n  Contracts = 1,\r\n  UnitOfMeasurePerTimeUnit = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Additional TrdType(828) assigned to a trade by trade match *\r\n* system.                                                    *\r\n**************************************************************\r\n*/\r\nexport enum SecondaryTrdType {\r\n  RegularTrade = 0,\r\n  BlockTrade = 1,\r\n  ExchangeForPhysicalEfp = 2,\r\n  Transfer = 3,\r\n  LateTrade = 4,\r\n  TTrade = 5,\r\n  WeightedAveragePriceTrade = 6,\r\n  BunchedTrade = 7,\r\n  LateBunchedTrade = 8,\r\n  PriorReferencePriceTrade = 9,\r\n  AfterHoursTrade = 10,\r\n  ExchangeForRiskEfr = 11,\r\n  ExchangeForSwapEfs = 12,\r\n  ExchangeOfFuturesForInMarketFuturesEfm = 13,\r\n  ExchangeOfOptionsForOptionsEoo = 14,\r\n  TradingAtSettlement = 15,\r\n  AllOrNone = 16,\r\n  FuturesLargeOrderExecution = 17,\r\n  ExchangeOfFuturesForExternalMarketFuturesEff = 18,\r\n  OptionInterimTrade = 19,\r\n  OptionCabinetTrade = 20,\r\n  PrivatelyNegotiatedTrade = 22,\r\n  SubstitutionOfFuturesForForwards = 23,\r\n  ErrorTrade = 24,\r\n  SpecialCumDividendCd = 25,\r\n  SpecialExDividendXd = 26,\r\n  SpecialCumCouponCc = 27,\r\n  SpecialExCouponXc = 28,\r\n  CashSettlementCs = 29,\r\n  SpecialPriceSp = 30,\r\n  GuaranteedDeliveryGd = 31,\r\n  SpecialCumRightsCr = 32,\r\n  SpecialExRightsXr = 33,\r\n  SpecialCumCapitalRepaymentsCp = 34,\r\n  SpecialExCapitalRepaymentsXp = 35,\r\n  SpecialCumBonusCb = 36,\r\n  SpecialExBonusXb = 37,\r\n  BlockTrade2 = 38,\r\n  WorkedPrincipalTrade = 39,\r\n  BlockTrades = 40,\r\n  NameChange = 41,\r\n  PortfolioTransfer = 42,\r\n  ProrogationBuy = 43,\r\n  ProrogationSell = 44,\r\n  OptionExercise = 45,\r\n  DeltaNeutralTransaction = 46,\r\n  FinancingTransaction = 47,\r\n  NonStandardSettlement = 48,\r\n  DerivativeRelatedTransaction = 49,\r\n  PortfolioTrade = 50,\r\n  VolumeWeightedAverageTrade = 51,\r\n  ExchangeGrantedTrade = 52,\r\n  RepurchaseAgreement = 53,\r\n  Otc = 54,\r\n  ExchangeBasisFacilityEbf = 55,\r\n  OpeningTrade = 56,\r\n  NettedTrade = 57,\r\n  BlockSwapTrade = 58,\r\n  CreditEventTrade = 59,\r\n  SuccessionEventTrade = 60,\r\n  GiveUpGiveInTrade = 61,\r\n  DarkTrade = 62,\r\n  TechnicalTrade = 63,\r\n  Benchmark = 64,\r\n  PackageTrade = 65\r\n}\r\n\r\n/*\r\n************************\r\n* Type of Trade Report *\r\n************************\r\n*/\r\nexport enum TradeReportType {\r\n  Submit = 0,\r\n  Alleged = 1,\r\n  Accept = 2,\r\n  Decline = 3,\r\n  Addendum = 4,\r\n  NoWas = 5,\r\n  TradeReportCancel = 6,\r\n  LockedInTradeBreak = 7,\r\n  Defaulted = 8,\r\n  InvalidCmta = 9,\r\n  Pended = 10,\r\n  AllegedNew = 11,\r\n  AllegedAddendum = 12,\r\n  AllegedNoWas = 13,\r\n  AllegedTradeReportCancel = 14,\r\n  AllegedLockedInTradeBreak = 15,\r\n  Verify = 16,\r\n  Dispute = 17\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicates how the orders being booked and allocated by an  *\r\n* AllocationInstruction or AllocationReport message are      *\r\n* identified, e.g. by explicit definition in the OrdAllocGrp *\r\n* or ExecAllocGrp components, or not identified explicitly.  *\r\n**************************************************************\r\n*/\r\nexport enum AllocNoOrdersType {\r\n  NotSpecified = 0,\r\n  ExplicitListProvided = 1\r\n}\r\n\r\n/*\r\n***************************************\r\n* Code to represent the type of event *\r\n***************************************\r\n*/\r\nexport enum EventType {\r\n  Put = 1,\r\n  Call = 2,\r\n  Tender = 3,\r\n  SinkingFundCall = 4,\r\n  Activation = 5,\r\n  Inactivation = 6,\r\n  LastEligibleTradeDate = 7,\r\n  SwapStartDate = 8,\r\n  SwapEndDate = 9,\r\n  SwapRollDate = 10,\r\n  SwapNextStartDate = 11,\r\n  SwapNextRollDate = 12,\r\n  FirstDeliveryDate = 13,\r\n  LastDeliveryDate = 14,\r\n  InitialInventoryDueDate = 15,\r\n  FinalInventoryDueDate = 16,\r\n  FirstIntentDate = 17,\r\n  LastIntentDate = 18,\r\n  PositionRemovalDate = 19,\r\n  MinimumNotice = 20,\r\n  DeliveryStartTime = 21,\r\n  DeliveryEndTime = 22,\r\n  FirstNoticeDate = 23,\r\n  LastNoticeDate = 24,\r\n  FirstExerciseDate = 25,\r\n  RedemptionDate = 26,\r\n  TradeContinuationEffectiveDate = 27,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Code to represent the type of instrument attribute *\r\n******************************************************\r\n*/\r\nexport enum InstrAttribType {\r\n  FlatSecuritiesPayInterestOnACurrentBasisButAreTradedWithoutInterest = 1,\r\n  ZeroCoupon = 2,\r\n  InterestBearingForEuroCommercialPaperWhenNotIssuedAtDiscount = 3,\r\n  NoPeriodicPayments = 4,\r\n  VariableRate = 5,\r\n  LessFeeForPut = 6,\r\n  SteppedCoupon = 7,\r\n  CouponPeriodIfNotSemiAnnual = 8,\r\n  WhenAndIfIssued = 9,\r\n  OriginalIssueDiscount = 10,\r\n  CallablePuttable = 11,\r\n  EscrowedToMaturity = 12,\r\n  EscrowedToRedemptionDateCallable = 13,\r\n  PreRefunded = 14,\r\n  InDefault = 15,\r\n  Unrated = 16,\r\n  Taxable = 17,\r\n  Indexed = 18,\r\n  SubjectToAlternativeMinimumTax = 19,\r\n  OriginalIssueDiscountPrice = 20,\r\n  CallableBelowMaturityValue = 21,\r\n  CallableWithoutNoticeByMailToHolderUnlessRegistered = 22,\r\n  PriceTickRulesForSecurity = 23,\r\n  TradeTypeEligibilityDetailsForSecurity = 24,\r\n  InstrumentDenominator = 25,\r\n  InstrumentNumerator = 26,\r\n  InstrumentPricePrecision = 27,\r\n  InstrumentStrikePrice = 28,\r\n  TradeableIndicator = 29,\r\n  InstrumentIsEligibleToAcceptAnonymousOrders = 30,\r\n  MinimumGuaranteedFillVolume = 31,\r\n  MinimumGuaranteedFillStatus = 32,\r\n  TradeAtSettlementTasEligibility = 33,\r\n  TestInstrument = 34,\r\n  DummyInstrument = 35,\r\n  NegativeSettlementPriceEligibility = 36,\r\n  NegativeStrikePriceEligibility = 37,\r\n  UsStandardContractIndicator = 38,\r\n  Text = 99\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The program under which a commercial paper offering is   *\r\n* exempt from SEC registration identified by the paragraph *\r\n* number(s) within the US Securities Act of 1933 or as     *\r\n* identified below.                                        *\r\n************************************************************\r\n*/\r\nexport enum CPProgram {\r\n  E3A3 = 1,\r\n  E42 = 2,\r\n  E3A2 = 3,\r\n  E3A33C7 = 4,\r\n  E3A4 = 5,\r\n  E3A5 = 6,\r\n  E3A7 = 7,\r\n  E3C7 = 8,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The program under which the underlying commercial paper is *\r\n* issued                                                     *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingCPProgram {\r\n  E3A3 = 1,\r\n  E42 = 2,\r\n  E3A2 = 3,\r\n  E3A33C7 = 4,\r\n  E3A4 = 5,\r\n  E3A5 = 6,\r\n  E3A7 = 7,\r\n  E3C7 = 8,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************\r\n* Type of stipulation.                 *\r\n* Same values as StipulationType (233) *\r\n****************************************\r\n*/\r\nexport enum UnderlyingStipType {\r\n  AlternativeMinimumTaxYN = 'AMT',\r\n  AbsolutePrepaymentSpeed = 'ABS',\r\n  IncurredRecoveryYN = 'INCURRCVY',\r\n  AutoReinvestmentAtRateOrBetter = 'AUTOREINV',\r\n  ConstantPrepaymentPenalty = 'CPP',\r\n  AdditionalTerm = 'ADDTRM',\r\n  BankQualifiedYN = 'BANKQUAL',\r\n  ConstantPrepaymentRate = 'CPR',\r\n  ModifiedEquityDelivery = 'MODEQTYDLVY',\r\n  BargainConditionsSeeStipulationValue234ForValues = 'BGNCON',\r\n  ConstantPrepaymentYield = 'CPY',\r\n  NoReferenceObligationYN = 'NOREFOBLIG',\r\n  CouponRange = 'COUPON',\r\n  FinalCprOfHomeEquityPrepaymentCurve = 'HEP',\r\n  UnknownReferenceObligationYN = 'UNKREFOBLIG',\r\n  IsoCurrencyCode = 'CURRENCY',\r\n  PercentOfManufacturedHousingPrepaymentCurve = 'MHP',\r\n  AllGuaranteesYN = 'ALLGUARANTEES',\r\n  CustomStartEndDate = 'CUSTOMDATE',\r\n  MonthlyPrepaymentRate = 'MPR',\r\n  ReferencePriceYN = 'REFPX',\r\n  GeographicsAndRangeEx234Ca080MinimumOf80CaliforniaAssets = 'GEOG',\r\n  PercentOfProspectusPrepaymentCurve = 'PPC',\r\n  ReferencePolicyYN = 'REFPOLICY',\r\n  ValuationDiscount = 'HAIRCUT',\r\n  PercentOfBmaPrepaymentCurve = 'PSA',\r\n  SecuredListYN = 'SECRDLIST',\r\n  InsuredYN = 'INSURED',\r\n  SingleMonthlyMortality = 'SMM',\r\n  YearOrYearMonthOfIssueEx234200209 = 'ISSUE',\r\n  IssuersTicker = 'ISSUER',\r\n  IssueSizeRange = 'ISSUESIZE',\r\n  LookbackDays = 'LOOKBACK',\r\n  ExplicitLotIdentifier = 'LOT',\r\n  LotVarianceValueInPercentMaximumOverOrUnderAllocationAllowed = 'LOTVAR',\r\n  MaturityYearAndMonth = 'MAT',\r\n  MaturityRange = 'MATURITY',\r\n  MaximumSubstitutionsRepo = 'MAXSUBS',\r\n  MinimumDenomination = 'MINDNOM',\r\n  MinimumIncrement = 'MININCR',\r\n  MinimumQuantity = 'MINQTY',\r\n  PaymentFrequencyCalendar = 'PAYFREQ',\r\n  NumberOfPieces = 'PIECES',\r\n  PoolsMaximum = 'PMAX',\r\n  PoolsPerLot = 'PPL',\r\n  PoolsPerMillion = 'PPM',\r\n  PoolsPerTrade = 'PPT',\r\n  PriceRange = 'PRICE',\r\n  PricingFrequency = 'PRICEFREQ',\r\n  ProductionYear = 'PROD',\r\n  CallProtection = 'PROTECT',\r\n  Purpose = 'PURPOSE',\r\n  BenchmarkPriceSource = 'PXSOURCE',\r\n  RatingSourceAndRange = 'RATING',\r\n  TypeOfRedemptionValuesAreNonCallablePrefundedEscrowedToMaturityPutableConvertible = 'REDEMPTION',\r\n  RestrictedYN = 'RESTRICTED',\r\n  MarketSector = 'SECTOR',\r\n  SecurityTypeIncludedOrExcluded = 'SECTYPE',\r\n  Structure = 'STRUCT',\r\n  SubstitutionsFrequencyRepo = 'SUBSFREQ',\r\n  SubstitutionsLeftRepo = 'SUBSLEFT',\r\n  FreeformText = 'TEXT',\r\n  TradeVarianceValueInPercentMaximumOverOrUnderAllocationAllowed = 'TRDVAR',\r\n  WeightedAverageCouponValueInPercentExactOrRangePlusGrossOrNetOfServicingSpreadTheDefaultEx23465NetMinimumOf65NetOfServicingFee = 'WAC',\r\n  WeightedAverageLifeCouponValueInPercentExactOrRange = 'WAL',\r\n  WeightedAverageLoanAgeValueInMonthsExactOrRange = 'WALA',\r\n  WeightedAverageMaturityValueInMonthsExactOrRange = 'WAM',\r\n  WholePoolYN = 'WHOLE',\r\n  YieldRange = 'YIELD',\r\n  AverageFicoScore = 'AVFICO',\r\n  OriginalAmount = 'ORIGAMT',\r\n  AverageLoanSize = 'AVSIZE',\r\n  PoolEffectiveDate = 'POOLEFFDT',\r\n  MaximumLoanBalance = 'MAXBAL',\r\n  PoolInitialFactor = 'POOLINITFCTR',\r\n  PoolIdentifier = 'POOL',\r\n  TrancheIdentifier = 'TRANCHE',\r\n  TypeOfRollTrade = 'ROLLTYPE',\r\n  SubstitutionYN = 'SUBSTITUTION',\r\n  ReferenceToRollingOrClosingTrade = 'REFTRADE',\r\n  MultipleExchangeFallbackYN = 'MULTEXCHFLLBCK',\r\n  PrincipalOfRollingOrClosingTrade = 'REFPRIN',\r\n  ComponentSecurityFallbackYN = 'COMPSECFLLBCK',\r\n  InterestOfRollingOrClosingTrade = 'REFINT',\r\n  LocalJurisdictionYN = 'LOCLJRSDCTN',\r\n  AvailableOfferQuantityToBeShownToTheStreet = 'AVAILQTY',\r\n  RelevantJurisdictionYN = 'RELVJRSDCTN',\r\n  BrokersSalesCredit = 'BROKERCREDIT',\r\n  OfferPriceToBeShownToInternalBrokers = 'INTERNALPX',\r\n  OfferQuantityToBeShownToInternalBrokers = 'INTERNALQTY',\r\n  TheMinimumResidualOfferQuantity = 'LEAVEQTY',\r\n  MaximumOrderSize = 'MAXORDQTY',\r\n  OrderQuantityIncrement = 'ORDRINCR',\r\n  PrimaryOrSecondaryMarketIndicator = 'PRIMARY',\r\n  BrokerSalesCreditOverride = 'SALESCREDITOVR',\r\n  TradersCredit = 'TRADERCREDIT',\r\n  DiscountRateWhenPriceIsDenominatedInPercentOfPar = 'DISCOUNT',\r\n  YieldToMaturityWhenYieldType235AndYield236ShowADifferentYield = 'YTM'\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Defines the unit for a miscellaneous fee. *\r\n*********************************************\r\n*/\r\nexport enum MiscFeeBasis {\r\n  Absolute = 0,\r\n  PerUnit = 1,\r\n  Percentage = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates whether this message is the last in a sequence of  *\r\n* messages for those messages that support fragmentation, such *\r\n* as Allocation Instruction, Mass Quote, Security List,        *\r\n* Derivative Security List                                     *\r\n****************************************************************\r\n*/\r\nexport enum LastFragment {\r\n  NotLastMessage = 'N',\r\n  LastMessage = 'Y'\r\n}\r\n\r\n/*\r\n************************************\r\n* Reason for Collateral Assignment *\r\n************************************\r\n*/\r\nexport enum CollAsgnReason {\r\n  Initial = 0,\r\n  Scheduled = 1,\r\n  TimeWarning = 2,\r\n  MarginDeficiency = 3,\r\n  MarginExcess = 4,\r\n  ForwardCollateralDemand = 5,\r\n  EventOfDefault = 6,\r\n  AdverseTaxEvent = 7,\r\n  TransferDeposit = 8,\r\n  TransferWithdrawal = 9,\r\n  Pledge = 10\r\n}\r\n\r\n/*\r\n**********************************\r\n* Collateral inquiry qualifiers: *\r\n**********************************\r\n*/\r\nexport enum CollInquiryQualifier {\r\n  TradeDate = 0,\r\n  GcInstrument = 1,\r\n  CollateralInstrument = 2,\r\n  SubstitutionEligible = 3,\r\n  NotAssigned = 4,\r\n  PartiallyAssigned = 5,\r\n  FullyAssigned = 6,\r\n  OutstandingTradesTodayEndDate = 7\r\n}\r\n\r\n/*\r\n******************************************\r\n* Collateral Assignment Transaction Type *\r\n******************************************\r\n*/\r\nexport enum CollAsgnTransType {\r\n  New = 0,\r\n  Replace = 1,\r\n  Cancel = 2,\r\n  Release = 3,\r\n  Reverse = 4\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Type of collateral assignment response. *\r\n*******************************************\r\n*/\r\nexport enum CollAsgnRespType {\r\n  Received = 0,\r\n  Accepted = 1,\r\n  Declined = 2,\r\n  Rejected = 3,\r\n  TransactionPending = 4,\r\n  TransactionCompletedWithWarningSeeText58ForFurtherInformation = 5\r\n}\r\n\r\n/*\r\n***************************************\r\n* Collateral Assignment Reject Reason *\r\n***************************************\r\n*/\r\nexport enum CollAsgnRejectReason {\r\n  UnknownDealOrderTrade = 0,\r\n  UnknownOrInvalidInstrument = 1,\r\n  UnauthorizedTransaction = 2,\r\n  InsufficientCollateral = 3,\r\n  InvalidTypeOfCollateral = 4,\r\n  ExcessiveSubstitution = 5,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*********************\r\n* Collateral Status *\r\n*********************\r\n*/\r\nexport enum CollStatus {\r\n  Unassigned = 0,\r\n  PartiallyAssigned = 1,\r\n  AssignmentProposed = 2,\r\n  AssignedAccepted = 3,\r\n  Challenged = 4\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates whether this message is the last report message in *\r\n* response to a request message, e.g.                          *\r\n* OrderMassStatusRequest(35=AF),                               *\r\n* TradeCaptureReportRequest(35=AD).                            *\r\n****************************************************************\r\n*/\r\nexport enum LastRptRequested {\r\n  NotLastMessage = 'N',\r\n  LastMessage = 'Y'\r\n}\r\n\r\n/*\r\n*********************************\r\n* Identifies type of settlement *\r\n*********************************\r\n*/\r\nexport enum DeliveryType {\r\n  VersusPaymentDeliverIfSellOrReceiveIfBuyVsAgainstPayment = 0,\r\n  FreeDeliverIfSellOrReceiveIfBuyFree = 1,\r\n  TriParty = 2,\r\n  HoldInCustody = 3\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Indicates the action required by a User Request Message *\r\n***********************************************************\r\n*/\r\nexport enum UserRequestType {\r\n  LogOnUser = 1,\r\n  LogOffUser = 2,\r\n  ChangePasswordForUser = 3,\r\n  RequestIndividualUserStatus = 4,\r\n  RequestThrottleLimit = 5\r\n}\r\n\r\n/*\r\n**********************************\r\n* Indicates the status of a user *\r\n**********************************\r\n*/\r\nexport enum UserStatus {\r\n  LoggedIn = 1,\r\n  NotLoggedIn = 2,\r\n  UserNotRecognised = 3,\r\n  PasswordIncorrect = 4,\r\n  PasswordChanged = 5,\r\n  Other = 6,\r\n  ForcedUserLogoutByExchange = 7,\r\n  SessionShutdownWarning = 8,\r\n  ThrottleParametersChanged = 9\r\n}\r\n\r\n/*\r\n************************************************\r\n* Indicates the status of a network connection *\r\n************************************************\r\n*/\r\nexport enum StatusValue {\r\n  Connected = 1,\r\n  NotConnectedDownExpectedUp = 2,\r\n  NotConnectedDownExpectedDown = 3,\r\n  InProcess = 4\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Indicates the type and level of details required for a *\r\n* Network Status Request Message                         *\r\n* Boolean logic applies EG If you want to subscribe for  *\r\n* changes to certain id's then UserRequestType =0 (8+2), *\r\n* Snapshot for certain ID's = 9 (8+1)                    *\r\n**********************************************************\r\n*/\r\nexport enum NetworkRequestType {\r\n  Snapshot = 1,\r\n  Subscribe = 2,\r\n  StopSubscribing = 4,\r\n  LevelOfDetailThenNoCompIDsBecomesRequired = 8\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Indicates the type of Network Response Message. *\r\n***************************************************\r\n*/\r\nexport enum NetworkStatusResponseType {\r\n  Full = 1,\r\n  IncrementalUpdate = 2\r\n}\r\n\r\n/*\r\n***********************\r\n* Trade Report Status *\r\n***********************\r\n*/\r\nexport enum TrdRptStatus {\r\n  Accepted = 0,\r\n  Rejected = 1,\r\n  Cancelled = 2,\r\n  AcceptedWithErrors = 3,\r\n  PendingNew = 4,\r\n  PendingCancel = 5,\r\n  PendingReplace = 6,\r\n  Terminated = 7,\r\n  PendingVerification = 8,\r\n  DeemedVerified = 9,\r\n  Verified = 10,\r\n  Disputed = 11\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Specifies the affirmation status of the confirmation. *\r\n*********************************************************\r\n*/\r\nexport enum AffirmStatus {\r\n  Received = 1,\r\n  ConfirmRejectedIENotAffirmed = 2,\r\n  Affirmed = 3\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Action proposed for an Underlying Instrument instance. *\r\n**********************************************************\r\n*/\r\nexport enum CollAction {\r\n  Retain = 0,\r\n  Add = 1,\r\n  Remove = 2\r\n}\r\n\r\n/*\r\n********************************\r\n* Status of Collateral Inquiry *\r\n********************************\r\n*/\r\nexport enum CollInquiryStatus {\r\n  Accepted = 0,\r\n  AcceptedWithWarnings = 1,\r\n  Completed = 2,\r\n  CompletedWithWarnings = 3,\r\n  Rejected = 4\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Result returned in response to Collateral Inquiry         *\r\n* 4000+ Reserved and available for bi-laterally agreed upon *\r\n* user-defined values                                       *\r\n*************************************************************\r\n*/\r\nexport enum CollInquiryResult {\r\n  SuccessfulDefault = 0,\r\n  InvalidOrUnknownInstrument = 1,\r\n  InvalidOrUnknownCollateralType = 2,\r\n  InvalidParties = 3,\r\n  InvalidTransportTypeRequested = 4,\r\n  InvalidDestinationRequested = 5,\r\n  NoCollateralFoundForTheTradeSpecified = 6,\r\n  NoCollateralFoundForTheOrderSpecified = 7,\r\n  CollateralInquiryTypeNotSupported = 8,\r\n  UnauthorizedForCollateralInquiry = 9,\r\n  OtherFurtherInformationInText58Field = 99\r\n}\r\n\r\n/*\r\n********************************************************\r\n* PartyIDSource value within a \"third instance\" Nested *\r\n* repeating group.                                     *\r\n* Same values as PartyIDSource (447)                   *\r\n********************************************************\r\n*/\r\nexport enum Nested3PartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* PartyRole value within a \"third instance\" Nested repeating *\r\n* group.                                                     *\r\n* Same values as PartyRole (452)                             *\r\n**************************************************************\r\n*/\r\nexport enum Nested3PartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* PartySubIDType value within a \"third instance\" Nested *\r\n* repeating group.                                      *\r\n* Same values as PartySubIDType (803)                   *\r\n*********************************************************\r\n*/\r\nexport enum Nested3PartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n*****************************\r\n* Datatype of the parameter *\r\n*****************************\r\n*/\r\nexport enum StrategyParameterType {\r\n  Int = 1,\r\n  Length = 2,\r\n  NumInGroup = 3,\r\n  SeqNum = 4,\r\n  TagNum = 5,\r\n  Float = 6,\r\n  Qty = 7,\r\n  Price = 8,\r\n  PriceOffset = 9,\r\n  Amt = 10,\r\n  Percentage = 11,\r\n  Char = 12,\r\n  Boolean = 13,\r\n  String = 14,\r\n  MultipleCharValue = 15,\r\n  Currency = 16,\r\n  Exchange = 17,\r\n  MonthYear = 18,\r\n  UtcTimestamp = 19,\r\n  UtcTimeOnly = 20,\r\n  LocalMktDate = 21,\r\n  UtcDateOnly = 22,\r\n  Data = 23,\r\n  MultipleStringValue = 24,\r\n  Country = 25,\r\n  Language = 26,\r\n  TzTimeOnly = 27,\r\n  TzTimestamp = 28,\r\n  Tenor = 29\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Used for derivatives. Denotes the current state of the *\r\n* Instrument.                                            *\r\n**********************************************************\r\n*/\r\nexport enum SecurityStatus {\r\n  Active = '1',\r\n  Inactive = '2',\r\n  ActiveClosingOrdersOnly = '3',\r\n  Expired = '4',\r\n  Delisted = '5',\r\n  KnockedOut = '6',\r\n  KnockOutRevoked = '7',\r\n  PendingExpiry = '8',\r\n  Suspended = '9',\r\n  Published = '10',\r\n  PendingDeletion = '11'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Used for derivatives that deliver into cash underlying. *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingCashType {\r\n  Fixed = 'FIXED',\r\n  Diff = 'DIFF'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Indicates order settlement period for the underlying *\r\n* instrument.                                          *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingSettlementType {\r\n  T1 = 2,\r\n  T3 = 4,\r\n  T4 = 5\r\n}\r\n\r\nexport enum SecurityUpdateAction {\r\n  Add = 'A',\r\n  Delete = 'D',\r\n  Modify = 'M'\r\n}\r\n\r\n/*\r\n****************************\r\n* Expiration Quantity type *\r\n****************************\r\n*/\r\nexport enum ExpirationQtyType {\r\n  AutoExercise = 1,\r\n  NonAutoExercise = 2,\r\n  FinalWillBeExercised = 3,\r\n  ContraryIntention = 4,\r\n  Difference = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Identifies whether the allocation is to be sub-allocated or *\r\n* allocated to a third party                                  *\r\n***************************************************************\r\n*/\r\nexport enum IndividualAllocType {\r\n  SubAllocate = 1,\r\n  ThirdPartyAllocation = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The unit of measure of the underlying commodity upon which   *\r\n* the contract is based. Two groups of units of measure        *\r\n* enumerations are supported.                                  *\r\n* Fixed Magnitude UOMs are primarily used in energy            *\r\n* derivatives and specify a magnitude (such as, MM, Kilo, M,   *\r\n* etc.) and the dimension (such as, watt hours, BTU's) to      *\r\n* produce standard fixed measures (such as MWh -               *\r\n* Megawatt-hours, MMBtu - One million BTUs).                   *\r\n* The second group, Variable Quantity UOMs, specifies the      *\r\n* dimension as a single unit without a magnitude (or more      *\r\n* accurately a magnitude of one) and uses the                  *\r\n* UnitOfMeasureQty(1147) field to define the quantity of units *\r\n* per contract. Variable Quantity UOMs are used for both       *\r\n* commodities (such as lbs of lean cattle, bushels of corn,    *\r\n* ounces of gold) and financial futures.                       *\r\n* Examples:                                                    *\r\n* For lean cattle futures contracts, a UnitOfMeasure of 'lbs'  *\r\n* with a UnitOfMeasureQty(1147) of 40,000, means each lean     *\r\n* cattle futures contract represents 40,000 lbs of lean        *\r\n* cattle.                                                      *\r\n* For Eurodollars futures contracts, a UnitOfMeasure of Ccy    *\r\n* with a UnitOfMeasureCurrency(1716)  of USD and a             *\r\n* UnitOfMeasureQty(1147) of 1,000,000, means a Eurodollar      *\r\n* futures contract represents 1,000,000 USD.                   *\r\n* For gold futures contracts, a UnitOfMeasure is oz_tr (Troy   *\r\n* ounce) with a UnitOfMeasureQty(1147) of 1,000, means each    *\r\n* gold futures contract represents 1,000 troy ounces of gold.  *\r\n****************************************************************\r\n*/\r\nexport enum UnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Unit of time associated with the contract.                 *\r\n* NOTE: Additional values may be used by mutual agreement of *\r\n* the counterparties                                         *\r\n**************************************************************\r\n*/\r\nexport enum TimeUnit {\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Quarter = 'Q'\r\n}\r\n\r\n/*\r\n********************************************\r\n* Refer to defintion of UnitOfMeasure(996) *\r\n********************************************\r\n*/\r\nexport enum UnderlyingUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n********************************************\r\n* Refer to defintion of UnitOfMeasure(996) *\r\n********************************************\r\n*/\r\nexport enum LegUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n*********************\r\n* Same as TimeUnit. *\r\n*********************\r\n*/\r\nexport enum UnderlyingTimeUnit {\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Quarter = 'Q'\r\n}\r\n\r\n/*\r\n*********************\r\n* Same as TimeUnit. *\r\n*********************\r\n*/\r\nexport enum LegTimeUnit {\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Quarter = 'Q'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Specifies the method under which a trade quantity was *\r\n* allocated.                                            *\r\n*********************************************************\r\n*/\r\nexport enum AllocMethod {\r\n  Automatic = 1,\r\n  Guarantor = 2,\r\n  Manual = 3,\r\n  BrokerAssigned = 4\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Used on a multi-sided trade to specify the type of trade for *\r\n* a given side. Same values as TrdSubType (829).               *\r\n****************************************************************\r\n*/\r\nexport enum SideTrdSubTyp {\r\n  Cmta = 0,\r\n  InternalTransferOrAdjustment = 1,\r\n  ExternalTransferOrTransferOfAccount = 2,\r\n  RejectForSubmittingSide = 3,\r\n  AdvisoryForContraSide = 4,\r\n  OffsetDueToAnAllocation = 5,\r\n  OnsetDueToAnAllocation = 6,\r\n  DifferentialSpread = 7,\r\n  ImpliedSpreadLegExecutedAgainstAnOutright = 8,\r\n  TransactionFromExercise = 9,\r\n  TransactionFromAssignment = 10,\r\n  Acats = 11,\r\n  AiAutomatedInputFacilityDisabledInResponseToAnExchangeRequest = 14,\r\n  BTransactionBetweenTwoMemberFirmsWhereNeitherMemberFirmIsRegisteredAsAMarketMakerInTheSecurityInQuestionAndNeitherIsADesignatedFundManagerAlsoUsedByBrokerDealersWhenDealingWithAnotherBrokerWhichIsNotAMemberFirmNonOrderBookSecuritiesOnly = 15,\r\n  KTransactionUsingBlockTradeFacility = 16,\r\n  LcCorrectionSubmittedMoreThanThreeDaysAfterPublicationOfTheOriginalTradeReport = 17,\r\n  MTransactionOtherThanATransactionResultingFromAStockSwapOrStockSwitchBetweenTwoMarketMakersRegisteredInThatSecurityIncludingIdbOrAPublicDisplaySystemTradesNonOrderBookSecuritiesOnly = 18,\r\n  NNonProtectedPortfolioTransactionOrAFullyDisclosedPortfolioTransaction = 19,\r\n  NmITransactionWhereExchangeHasGrantedPermissionForNonPublicationIiIdbIsReportingAsSellerIiiSubmittingATransactionReportToTheExchangeWhereTheTransactionReportIsNotAlsoATradeReport = 20,\r\n  NrNonRiskTransactionInASeatsSecurityOtherThanAnAimSecurity = 21,\r\n  PProtectedPortfolioTransactionOrAWorkedPrincipalAgreementToEffectAPortfolioTransactionWhichIncludesOrderBookSecurities = 22,\r\n  PaProtectedTransactionNotification = 23,\r\n  PcContraTradeForTransactionWhichTookPlaceOnAPreviousDayAndWhichWasAutomaticallyExecutedOnTheExchangeTradingSystem = 24,\r\n  PnWorkedPrincipalNotificationForAPortfolioTransactionWhichIncludesOrderBookSecurities = 25,\r\n  RIRisklessPrincipalTransactionBetweenNonMembersWhereTheBuyingAndSellingTransactionsAreExecutedAtDifferentPricesOrOnDifferentTermsRequiresATradeReportWithTradeTypeIndicatorRForEachTransactionIiMarketMakerIsReportingAllTheLegsOfARisklessPrincipalTransactionWhereTheBuyingAndSellingTransactionsAreExecutedAtDifferentPricesRequiresATradeReportWithTradeTypeIndicatorRForEachTransactionOrIiiMarketMakerIsReportingTheOnwardLegOfARisklessPrincipalTransactionWhereTheLegsAreExecutedAtDifferentPricesAndAnotherMarketMakerHasSubmittedATradeReportUsingTradeTypeIndicatorMForTheFirstLegThisRequiresASingleTradeReportWithTradeTypeIndicatorR = 26,\r\n  RoTransactionWhichResultedFromTheExerciseOfATraditionalOptionOrAStockSettledCoveredWarrant = 27,\r\n  RtRiskTransactionInASeatsSecurityExcludingAimSecurityReportedByAMarketMakerRegisteredInThatSecurity = 28,\r\n  SwTransactionsResultingFromStockSwapOrAStockSwitchOneReportIsRequiredForEachLineOfStock = 29,\r\n  TIfReportingASingleProtectedTransaction = 30,\r\n  WnWorkedPrincipalNotificationForASingleOrderBookSecurity = 31,\r\n  WtWorkedPrincipalTransactionOtherThanAPortfolioTransaction = 32,\r\n  OffHoursTrade = 33,\r\n  OnHoursTrade = 34,\r\n  OtcQuote = 35,\r\n  ConvertedSwap = 36,\r\n  CrossedTradeX = 37,\r\n  InterimProtectedTradeI = 38,\r\n  LargeInScaleL = 39,\r\n  WashTrade = 40,\r\n  TradeAtSettlementTas = 41,\r\n  AuctionTrade = 42,\r\n  TradeAtMarkerTam = 43,\r\n  DefaultCreditEvent = 44,\r\n  RestructuringCreditEvent = 45,\r\n  MergerSuccessionEvent = 46,\r\n  SpinOffSuccessionEvent = 47,\r\n  MultilateralCompression = 48,\r\n  Balancing = 50,\r\n  BasisTradeIndexCloseBtic = 51\r\n}\r\n\r\n/*\r\n*******************************\r\n* Same as TrdRegTimeStampType *\r\n*******************************\r\n*/\r\nexport enum SideTrdRegTimestampType {\r\n  ExecutionTime = 1,\r\n  TimeIn = 2,\r\n  TimeOut = 3,\r\n  BrokerReceipt = 4,\r\n  BrokerExecution = 5,\r\n  DeskReceipt = 6,\r\n  SubmissionToClearing = 7,\r\n  TimePriority = 8,\r\n  OrderbookEntryTime = 9,\r\n  OrderSubmissionTime = 10,\r\n  PubliclyReported = 11,\r\n  PublicReportUpdated = 12,\r\n  NonPubliclyReported = 13,\r\n  NonPublicReportUpdated = 14,\r\n  SubmittedForConfirmation = 15,\r\n  UpdatedForConfirmation = 16,\r\n  Confirmed = 17,\r\n  UpdatedForClearing = 18,\r\n  Cleared = 19,\r\n  AllocationsSubmitted = 20,\r\n  AllocationsUpdated = 21,\r\n  ApplicationCompleted = 22,\r\n  SubmittedToRepository = 23,\r\n  PostTradeContinuationEvent = 24,\r\n  PostTradeValuation = 25,\r\n  PreviousTimePriority = 26\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* A trade that is being submitted for a trade date prior to    *\r\n* the current trade or clearing date, e.g. in an open outcry   *\r\n* market an out trade being submitted for the previous trading *\r\n* session or trading day.                                      *\r\n****************************************************************\r\n*/\r\nexport enum AsOfIndicator {\r\n  FalseTradeIsNotAnAsOfTrade = '0',\r\n  TrueTradeIsAnAsOfTrade = '1'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Describes the type of book for which the feed is intended. *\r\n* Used when multiple feeds are provided over the same        *\r\n* connection                                                 *\r\n**************************************************************\r\n*/\r\nexport enum MDBookType {\r\n  TopOfBook = 1,\r\n  PriceDepth = 2,\r\n  OrderDepth = 3\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Used to describe the origin of the market data entry. *\r\n*********************************************************\r\n*/\r\nexport enum MDOriginType {\r\n  Book = 0,\r\n  OffBook = 1,\r\n  Cross = 2,\r\n  QuoteDrivenMarket = 3,\r\n  DarkOrderBook = 4,\r\n  AuctionDrivenMarket = 5,\r\n  QuoteNegotiation = 6,\r\n  VoiceNegotiation = 7,\r\n  HybridMarket = 8\r\n}\r\n\r\n/*\r\n***************************************************************************************\r\n* Codes that apply special information that the Broker /                              *\r\n* Dealer needs to report, as specified by the customer.                               *\r\n* NOTE: This field and its values have no bearing on the                              *\r\n* ExecInst and TimeInForce fields. These values should not be                         *\r\n* used instead of ExecInst or TimeInForce. This field and its                         *\r\n* values are intended for compliance reporting and/or billing                         *\r\n* purposes only.                                                                      *\r\n*                                                                                     *\r\n* For OrderHandlingInstSrc(1032) = 1 (FINRA OATS), valid                              *\r\n* values are (as of OATS Phase 3 as provided by FINRA. See                            *\r\n* also                                                                                *\r\n* http://www.finra.org/Industry/Compliance/MarketTransparency/OATS/PhaseIII/index.htm *\r\n* for a complete list.                                                                *\r\n*                                                                                     *\r\n* For OrderHandlingInstSrc(1032) = 2 (FIA Execution Source                            *\r\n* Code), only one enumeration value may be specified.                                 *\r\n***************************************************************************************\r\n*/\r\nexport enum CustOrderHandlingInst {\r\n  PhoneSimple = 'A',\r\n  GOrderFinraOatsFcmApiOrFixFiaExecutionSource = 'G',\r\n  AddOnOrder = 'ADD',\r\n  PhoneComplex = 'B',\r\n  AllOrNone = 'AON',\r\n  FcmProvidedScreen = 'C',\r\n  OtherProvidedScreen = 'D',\r\n  ConditionalOrder = 'CND',\r\n  CashNotHeld = 'CNH',\r\n  ClientProvidedPlatformControlledByFcm = 'E',\r\n  ClientProvidedPlatformDirectToExchange = 'F',\r\n  DeliveryInstructionsCash = 'CSH',\r\n  DirectedOrder = 'DIR',\r\n  AlgoEngine = 'H',\r\n  DiscretionaryLimitOrder = 'DLO',\r\n  ExchangeForPhysicalTransaction = 'E.W',\r\n  PriceAtExecutionPriceAddedAtInitialOrderEntryTradingMiddleOfficeOrTimeOfGiveUp = 'J',\r\n  FillOrKill = 'FOK',\r\n  DeskElectronic = 'W',\r\n  DeskPit = 'X',\r\n  ClientElectronic = 'Y',\r\n  IntradayCross = 'IDX',\r\n  ImbalanceOnly = 'IO',\r\n  ClientPit = 'Z',\r\n  ImmediateOrCancel = 'IOC',\r\n  IntermarketSweepOrder = 'ISO',\r\n  LimitOnOpen = 'LOO',\r\n  LimitOnClose = 'LOC',\r\n  MarketAtOpen = 'MAO',\r\n  MarketAtClose = 'MAC',\r\n  MarketOnOpen = 'MOO',\r\n  MarketOnClose = 'MOC',\r\n  MergerRelatedTransferPosition = 'MPT',\r\n  MinimumQuantity = 'MQT',\r\n  MarketToLimit = 'MTL',\r\n  DeliveryInstructionsNextDay = 'ND',\r\n  NotHeld = 'NH',\r\n  OptionsRelatedTransaction = 'OPT',\r\n  OverTheDay = 'OVD',\r\n  Pegged = 'PEG',\r\n  ReserveSizeOrder = 'RSV',\r\n  StopStockTransaction = 'S.W',\r\n  Scale = 'SCL',\r\n  DeliveryInstructionsSellersOption = 'SLR',\r\n  TimeOrder = 'TMO',\r\n  TrailingStop = 'TS',\r\n  Work = 'WRK',\r\n  StayOnOfferside = 'F0',\r\n  GoAlong = 'F3',\r\n  ParticipateDoNotInitiate = 'F6',\r\n  StrictScale = 'F7',\r\n  TryToScale = 'F8',\r\n  StayOnBidside = 'F9',\r\n  NoCross = 'FA',\r\n  OkToCross = 'FB',\r\n  CallFirst = 'FC',\r\n  PercentOfVolume = 'FD',\r\n  ReinstateOnSystemFailure = 'FH',\r\n  InstitutionOnly = 'FI',\r\n  ReinstateOnTradingHalt = 'FJ',\r\n  CancelOnTradingHalf = 'FK',\r\n  LastPeg = 'FL',\r\n  MidPricePeg = 'FM',\r\n  NonNegotiable = 'FN',\r\n  OpeningPeg = 'FO',\r\n  MarketPeg = 'FP',\r\n  CancelOnSystemFailure = 'FQ',\r\n  PrimaryPeg = 'FR',\r\n  Suspend = 'FS',\r\n  FixedPegToLocalBestBidOrOfferAtTimeOfOrder = 'FT',\r\n  PegToVwap = 'FW',\r\n  TradeAlong = 'FX',\r\n  TryToStop = 'FY',\r\n  CancelIfNotBest = 'FZ',\r\n  StrictLimit = 'Fb',\r\n  IgnorePriceValidityChecks = 'Fc',\r\n  PegToLimitPrice = 'Fd',\r\n  WorkToTargetStrategy = 'Fe'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies the class or source of the order handling         *\r\n* instruction values.  Scope of this will apply to both        *\r\n* CustOrderHandlingInst(1031) and DeskOrderHandlingInst(1035). *\r\n* Conditionally required when CustOrderHandlingInst(1031) or   *\r\n* DeskOrderHandlingInst(1035) is specified.                    *\r\n****************************************************************\r\n*/\r\nexport enum OrderHandlingInstSource {\r\n  FinraOats = 1,\r\n  FiaExecutionSourceCode = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Identifies the type of Trading Desk.                      *\r\n* Conditionally required when InformationBarrierID(1727) is *\r\n* specified for OATS.                                       *\r\n*************************************************************\r\n*/\r\nexport enum DeskType {\r\n  Agency = 'A',\r\n  Arbitrage = 'AR',\r\n  BlockTrading = 'B',\r\n  ConvertibleDesk = 'C',\r\n  CentralRiskBooks = 'CR',\r\n  Derivatives = 'D',\r\n  EquityCapitalMarkets = 'EC',\r\n  International = 'IN',\r\n  Institutional = 'IS',\r\n  Other = 'O',\r\n  PreferredTrading = 'PF',\r\n  Proprietary = 'PR',\r\n  ProgramTrading = 'PT',\r\n  Sales = 'S',\r\n  Swaps = 'SW',\r\n  TradingDeskOrSystemNonMarketMaker = 'T',\r\n  Treasury = 'TR'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Identifies the class or source of DeskType(1033) values. *\r\n* Conditionally required when DeskType(1033) is specified. *\r\n************************************************************\r\n*/\r\nexport enum DeskTypeSource {\r\n  FinraOats = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Codes that apply special information that the broker-dealer *\r\n* needs to report.                                            *\r\n***************************************************************\r\n*/\r\nexport enum DeskOrderHandlingInst {\r\n  PhoneSimple = 'A',\r\n  GOrderFinraOatsFcmApiOrFixFiaExecutionSource = 'G',\r\n  AddOnOrder = 'ADD',\r\n  PhoneComplex = 'B',\r\n  AllOrNone = 'AON',\r\n  FcmProvidedScreen = 'C',\r\n  OtherProvidedScreen = 'D',\r\n  ConditionalOrder = 'CND',\r\n  CashNotHeld = 'CNH',\r\n  ClientProvidedPlatformControlledByFcm = 'E',\r\n  ClientProvidedPlatformDirectToExchange = 'F',\r\n  DeliveryInstructionsCash = 'CSH',\r\n  DirectedOrder = 'DIR',\r\n  AlgoEngine = 'H',\r\n  DiscretionaryLimitOrder = 'DLO',\r\n  ExchangeForPhysicalTransaction = 'E.W',\r\n  PriceAtExecutionPriceAddedAtInitialOrderEntryTradingMiddleOfficeOrTimeOfGiveUp = 'J',\r\n  FillOrKill = 'FOK',\r\n  DeskElectronic = 'W',\r\n  DeskPit = 'X',\r\n  ClientElectronic = 'Y',\r\n  IntradayCross = 'IDX',\r\n  ImbalanceOnly = 'IO',\r\n  ClientPit = 'Z',\r\n  ImmediateOrCancel = 'IOC',\r\n  IntermarketSweepOrder = 'ISO',\r\n  LimitOnOpen = 'LOO',\r\n  LimitOnClose = 'LOC',\r\n  MarketAtOpen = 'MAO',\r\n  MarketAtClose = 'MAC',\r\n  MarketOnOpen = 'MOO',\r\n  MarketOnClose = 'MOC',\r\n  MergerRelatedTransferPosition = 'MPT',\r\n  MinimumQuantity = 'MQT',\r\n  MarketToLimit = 'MTL',\r\n  DeliveryInstructionsNextDay = 'ND',\r\n  NotHeld = 'NH',\r\n  OptionsRelatedTransaction = 'OPT',\r\n  OverTheDay = 'OVD',\r\n  Pegged = 'PEG',\r\n  ReserveSizeOrder = 'RSV',\r\n  StopStockTransaction = 'S.W',\r\n  Scale = 'SCL',\r\n  DeliveryInstructionsSellersOption = 'SLR',\r\n  TimeOrder = 'TMO',\r\n  TrailingStop = 'TS',\r\n  Work = 'WRK',\r\n  StayOnOfferside = 'F0',\r\n  GoAlong = 'F3',\r\n  ParticipateDoNotInitiate = 'F6',\r\n  StrictScale = 'F7',\r\n  TryToScale = 'F8',\r\n  StayOnBidside = 'F9',\r\n  NoCross = 'FA',\r\n  OkToCross = 'FB',\r\n  CallFirst = 'FC',\r\n  PercentOfVolume = 'FD',\r\n  ReinstateOnSystemFailure = 'FH',\r\n  InstitutionOnly = 'FI',\r\n  ReinstateOnTradingHalt = 'FJ',\r\n  CancelOnTradingHalf = 'FK',\r\n  LastPeg = 'FL',\r\n  MidPricePeg = 'FM',\r\n  NonNegotiable = 'FN',\r\n  OpeningPeg = 'FO',\r\n  MarketPeg = 'FP',\r\n  CancelOnSystemFailure = 'FQ',\r\n  PrimaryPeg = 'FR',\r\n  Suspend = 'FS',\r\n  FixedPegToLocalBestBidOrOfferAtTimeOfOrder = 'FT',\r\n  PegToVwap = 'FW',\r\n  TradeAlong = 'FX',\r\n  TryToStop = 'FY',\r\n  CancelIfNotBest = 'FZ',\r\n  StrictLimit = 'Fb',\r\n  IgnorePriceValidityChecks = 'Fc',\r\n  PegToLimitPrice = 'Fd',\r\n  WorkToTargetStrategy = 'Fe'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* The status of this execution acknowledgement message. *\r\n*********************************************************\r\n*/\r\nexport enum ExecAckStatus {\r\n  ReceivedNotYetProcessed = '0',\r\n  Accepted = '1',\r\n  DontKnowRejected = '2'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Settlement method for a contract or instrument. Additional *\r\n* values may be used with bilateral agreement.               *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingSettlMethod {\r\n  CashSettlementRequired = 'C',\r\n  PhysicalSettlementRequired = 'P',\r\n  ElectionAtExercise = 'E'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* conveys how the collateral should be/has been applied *\r\n*********************************************************\r\n*/\r\nexport enum CollApplType {\r\n  SpecificDeposit = 0,\r\n  General = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies whether the UnderlyingFxRate(1045) should be *\r\n* multiplied or divided.                                 *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingFXRateCalc {\r\n  Divide = 'D',\r\n  Multiply = 'M'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates whether the resulting position after a trade      *\r\n* should be an opening position or closing position. Used for *\r\n* omnibus accounting - where accounts are held on a gross     *\r\n* basis instead of being netted together.                     *\r\n***************************************************************\r\n*/\r\nexport enum AllocPositionEffect {\r\n  Open = 'O',\r\n  Close = 'C',\r\n  Rolled = 'R',\r\n  Fifo = 'F'\r\n}\r\n\r\n/*\r\n************************************************\r\n* Identifies role of dealer; Agent, Principal, *\r\n* RisklessPrincipal                            *\r\n************************************************\r\n*/\r\nexport enum DealingCapacity {\r\n  Agent = 'A',\r\n  Principal = 'P',\r\n  RisklessPrincipal = 'R'\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Method under which assignment was conducted *\r\n***********************************************\r\n*/\r\nexport enum InstrmtAssignmentMethod {\r\n  ProRata = 'P',\r\n  Random = 'R'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* PartyIDSource value within an instrument partyrepeating *\r\n* group.                                                  *\r\n* Same values as PartyIDSource (447)                      *\r\n***********************************************************\r\n*/\r\nexport enum InstrumentPartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* PartyRole value within an instrument partyepeating group. *\r\n* Same values as PartyRole (452)                            *\r\n*************************************************************\r\n*/\r\nexport enum InstrumentPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Type of InstrumentPartySubID (1053) value. *\r\n* Same values as PartySubIDType (803)        *\r\n**********************************************\r\n*/\r\nexport enum InstrumentPartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Used to identify whether the order initiator is an aggressor *\r\n* or not in the trade.                                         *\r\n****************************************************************\r\n*/\r\nexport enum AggressorIndicator {\r\n  OrderInitiatorIsAggressor = 'Y',\r\n  OrderInitiatorIsPassive = 'N'\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* PartyIDSource value within an underlying instrument *\r\n* partyrepeating group.                               *\r\n* Same values as PartyIDSource (447)                  *\r\n*******************************************************\r\n*/\r\nexport enum UnderlyingInstrumentPartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n***************************************************\r\n* PartyRole value within an underlying instrument *\r\n* partyepeating group.                            *\r\n* Same values as PartyRole (452)                  *\r\n***************************************************\r\n*/\r\nexport enum UnderlyingInstrumentPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Type of underlying InstrumentPartySubID (1053) value. *\r\n* Same values as PartySubIDType (803)                   *\r\n*********************************************************\r\n*/\r\nexport enum UnderlyingInstrumentPartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n**************************************\r\n* Identifies market data quote type. *\r\n**************************************\r\n*/\r\nexport enum MDQuoteType {\r\n  Indicative = 0,\r\n  Tradeable = 1,\r\n  RestrictedTradeable = 2,\r\n  Counter = 3,\r\n  IndicativeAndTradeable = 4\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Used to specify what identifier, provided in order depth   *\r\n* market data, to use when hitting (taking) a specific order *\r\n* or to identify what type of order or quote reference is    *\r\n* being provided when seeking credit limit check.            *\r\n**************************************************************\r\n*/\r\nexport enum RefOrderIDSource {\r\n  SecondaryOrderId198 = '0',\r\n  OrderId37 = '1',\r\n  MdEntryId278 = '2',\r\n  QuoteEntryId299 = '3',\r\n  OriginalOrderId = '4',\r\n  QuoteId117 = '5',\r\n  QuoteReqId131 = '6'\r\n}\r\n\r\n/*\r\n************************************************\r\n* Instructs when to refresh DisplayQty (1138). *\r\n************************************************\r\n*/\r\nexport enum DisplayWhen {\r\n  ImmediateAfterEachFill = '1',\r\n  ExhaustWhenDisplayQty0 = '2'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Defines what value to use in DisplayQty (1138). If not *\r\n* specified the default DisplayMethod is \"1\"             *\r\n**********************************************************\r\n*/\r\nexport enum DisplayMethod {\r\n  InitialUseOriginalDisplayQty = '1',\r\n  NewUseRefreshQty = '2',\r\n  RandomRandomizeValue = '3',\r\n  UndisclosedInvisibleOrder = '4'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Defines the type of price protection the customer requires *\r\n* on their order.                                            *\r\n**************************************************************\r\n*/\r\nexport enum PriceProtectionScope {\r\n  None = '0',\r\n  LocalExchangeEcnAts = '1',\r\n  NationalAcrossAllNationalMarkets = '2',\r\n  GlobalAcrossAllMarkets = '3'\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Defines the lot type assigned to the order. *\r\n***********************************************\r\n*/\r\nexport enum LotType {\r\n  OddLot = '1',\r\n  RoundLot = '2',\r\n  BlockLot = '3',\r\n  RoundLotBasedUponUnitOfMeasure996 = '4'\r\n}\r\n\r\n/*\r\n****************************\r\n* Defines the type of peg. *\r\n****************************\r\n*/\r\nexport enum PegPriceType {\r\n  LastPegLastSale = 1,\r\n  MidPricePegMidpriceOfInsideQuote = 2,\r\n  OpeningPeg = 3,\r\n  MarketPeg = 4,\r\n  PrimaryPegPrimaryMarketBuyAtBidOrSellAtOffer = 5,\r\n  PegToVwap = 7,\r\n  TrailingStopPeg = 8,\r\n  PegToLimitPrice = 9,\r\n  ShortSaleMinimumPricePeg = 10\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Defines the identity of the security off whose prices the *\r\n* order will peg. Same values as SecurityIDSource (22)      *\r\n*************************************************************\r\n*/\r\nexport enum PegSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Defines when the trigger will hit, i.e. the action specified *\r\n* by the trigger instructions will come into effect.           *\r\n****************************************************************\r\n*/\r\nexport enum TriggerType {\r\n  PartialExecution = '1',\r\n  SpecifiedTradingSession = '2',\r\n  NextAuction = '3',\r\n  PriceMovement = '4',\r\n  OnOrderEntryOrOrderModificationEntry = '5'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Defines the type of action to take when the trigger hits. *\r\n*************************************************************\r\n*/\r\nexport enum TriggerAction {\r\n  Activate = '1',\r\n  Modify = '2',\r\n  Cancel = '3'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Defines the identity of the security whose prices will be *\r\n* tracked by the trigger logic. Same values as              *\r\n* SecurityIDSource (22).                                    *\r\n*************************************************************\r\n*/\r\nexport enum TriggerSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The type of price that the trigger is compared to. *\r\n******************************************************\r\n*/\r\nexport enum TriggerPriceType {\r\n  BestOffer = '1',\r\n  LastTrade = '2',\r\n  BestBid = '3',\r\n  BestBidOrLastTrade = '4',\r\n  BestOfferOrLastTrade = '5',\r\n  BestMid = '6'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Defines the type of price protection the customer requires *\r\n* on their order.                                            *\r\n**************************************************************\r\n*/\r\nexport enum TriggerPriceTypeScope {\r\n  None = '0',\r\n  LocalExchangeEcnAts = '1',\r\n  NationalAcrossAllNationalMarkets = '2',\r\n  GlobalAcrossAllMarkets = '3'\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* The side from which the trigger price is reached. *\r\n*****************************************************\r\n*/\r\nexport enum TriggerPriceDirection {\r\n  TriggerIfThePriceOfTheSpecifiedTypeGoesUpToOrThroughTheSpecifiedTriggerPrice = 'U',\r\n  TriggerIfThePriceOfTheSpecifiedTypeGoesDownToOrThroughTheSpecifiedTriggerPrice = 'D'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The OrdType the order should have after the trigger has hit. *\r\n* Required to express orders that change from Limit to Market. *\r\n* Other values from OrdType (40) may be used if appropriate    *\r\n* and bilaterally agreed upon.                                 *\r\n****************************************************************\r\n*/\r\nexport enum TriggerOrderType {\r\n  Market = '1',\r\n  Limit = '2'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Defines the type of interest behind a trade (fill or partial *\r\n* fill).                                                       *\r\n****************************************************************\r\n*/\r\nexport enum OrderCategory {\r\n  Order = '1',\r\n  Quote = '2',\r\n  PrivatelyNegotiatedTrade = '3',\r\n  MultilegOrder = '4',\r\n  LinkedOrder = '5',\r\n  QuoteRequest = '6',\r\n  ImpliedOrder = '7',\r\n  CrossOrder = '8',\r\n  StreamingPriceQuote = '9',\r\n  InternalCrossOrder = 'A'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* PartyIDSource value within a root parties component. Same *\r\n* values as PartyIDSource (447)                             *\r\n*************************************************************\r\n*/\r\nexport enum RootPartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* PartyRole value within a root parties component. Same values *\r\n* as PartyRole (452)                                           *\r\n****************************************************************\r\n*/\r\nexport enum RootPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Type of RootPartySubID (1121) value. Same values as *\r\n* PartySubIDType (803)                                *\r\n*******************************************************\r\n*/\r\nexport enum RootPartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Specified how the TradeCaptureReport(35=AE) should be *\r\n* handled by the respondent.                            *\r\n*********************************************************\r\n*/\r\nexport enum TradeHandlingInstr {\r\n  TradeConfirmation = '0',\r\n  TwoPartyReport = '1',\r\n  OnePartyReportForMatching = '2',\r\n  OnePartyReportForPassThrough = '3',\r\n  AutomatedFloorOrderRouting = '4',\r\n  TwoPartyReportForClaim = '5',\r\n  OnePartyReport = '6',\r\n  ThirdPartyReportForPassThrough = '7',\r\n  OnePartyReportForAutoMatch = '8'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Optionally used with TradeHandlingInstr = 0 to relay the    *\r\n* trade handling instruction used when reporting the trade to *\r\n* the marketplace. Same values as TradeHandlingInstr (1123)   *\r\n***************************************************************\r\n*/\r\nexport enum OrigTradeHandlingInstr {\r\n  TradeConfirmation = '0',\r\n  TwoPartyReport = '1',\r\n  OnePartyReportForMatching = '2',\r\n  OnePartyReportForPassThrough = '3',\r\n  AutomatedFloorOrderRouting = '4',\r\n  TwoPartyReportForClaim = '5',\r\n  OnePartyReport = '6',\r\n  ThirdPartyReportForPassThrough = '7',\r\n  OnePartyReportForAutoMatch = '8'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the service pack release being applied at message *\r\n* level. Enumerated field with values assigned at time of     *\r\n* service pack release                                        *\r\n***************************************************************\r\n*/\r\nexport enum ApplVerID {\r\n  Fix27 = '0',\r\n  Fix30 = '1',\r\n  Fix40 = '2',\r\n  Fix41 = '3',\r\n  Fix42 = '4',\r\n  Fix43 = '5',\r\n  Fix44 = '6',\r\n  Fix50 = '7',\r\n  Fix50Sp1 = '8',\r\n  Fix50Sp2 = '9'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the service pack release being applied to a      *\r\n* message at the session level. Enumerated field with values *\r\n* assigned at time of service pack release. Uses same values *\r\n* as ApplVerID                                               *\r\n**************************************************************\r\n*/\r\nexport enum RefApplVerID {\r\n  Fix27 = '0',\r\n  Fix30 = '1',\r\n  Fix40 = '2',\r\n  Fix41 = '3',\r\n  Fix42 = '4',\r\n  Fix43 = '5',\r\n  Fix44 = '6',\r\n  Fix50 = '7',\r\n  Fix50Sp1 = '8',\r\n  Fix50Sp2 = '9'\r\n}\r\n\r\n/*\r\n**********************************\r\n* The ID source of ExDestination *\r\n**********************************\r\n*/\r\nexport enum ExDestinationIDSource {\r\n  BicBankIdentificationCodeIso9362 = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  MicIso10383MarketIdentifierCode = 'G'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the service pack release being applied, by       *\r\n* default, to message at the session level. Enumerated field *\r\n* with values assigned at time of service pack release. Uses *\r\n* same values as ApplVerID                                   *\r\n**************************************************************\r\n*/\r\nexport enum DefaultApplVerID {\r\n  Fix27 = '0',\r\n  Fix30 = '1',\r\n  Fix40 = '2',\r\n  Fix41 = '3',\r\n  Fix42 = '4',\r\n  Fix43 = '5',\r\n  Fix44 = '6',\r\n  Fix50 = '7',\r\n  Fix50Sp1 = '8',\r\n  Fix50Sp2 = '9'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates that an implied market should be created for      *\r\n* either the legs of a multi-leg instrument (Implied-in) or   *\r\n* for the multi-leg instrument based on the existence of the  *\r\n* legs (Implied-out). Determination as to whether implied     *\r\n* markets should be created is generally done at the level of *\r\n* the multi-leg instrument. Commonly used in listed           *\r\n* derivatives.                                                *\r\n***************************************************************\r\n*/\r\nexport enum ImpliedMarketIndicator {\r\n  NotImplied = 0,\r\n  ImpliedInTheExistenceOfAMultiLegInstrumentIsImpliedByTheLegsOfThatInstrument = 1,\r\n  ImpliedOutTheExistenceOfTheUnderlyingLegsAreImpliedByTheMultiLegInstrument = 2,\r\n  BothImpliedInAndImpliedOut = 3\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Used to identify the reporting mode of the settlement *\r\n* obligation which is either preliminary or final       *\r\n*********************************************************\r\n*/\r\nexport enum SettlObligMode {\r\n  Preliminary = 1,\r\n  Final = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Transaction Type - required except where SettlInstMode is *\r\n* 5=Reject SSI request                                      *\r\n*************************************************************\r\n*/\r\nexport enum SettlObligTransType {\r\n  Cancel = 'C',\r\n  New = 'N',\r\n  Replace = 'R',\r\n  Restate = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Used to identify whether these delivery instructions are for *\r\n* the buyside or the sellside.                                 *\r\n****************************************************************\r\n*/\r\nexport enum SettlObligSource {\r\n  InstructionsOfBroker = '1',\r\n  InstructionsForInstitution = '2',\r\n  Investor = '3',\r\n  BuyersSettlementInstructions = '4',\r\n  SellersSettlementInstructions = '5'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Identifies the status of an individual quote. See also *\r\n* QuoteStatus(297) which is used for single Quotes.      *\r\n**********************************************************\r\n*/\r\nexport enum QuoteEntryStatus {\r\n  Accepted = 0,\r\n  Rejected = 5,\r\n  RemovedFromMarket = 6,\r\n  Expired = 7,\r\n  LockedMarketWarning = 12,\r\n  CrossMarketWarning = 13,\r\n  CanceledDueToLockMarket = 14,\r\n  CanceledDueToCrossMarket = 15,\r\n  Active = 16\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies whether a quote is public, i.e. available to the *\r\n* market, or private, i.e. available to a specified          *\r\n* counterparty only.                                         *\r\n**************************************************************\r\n*/\r\nexport enum PrivateQuote {\r\n  PrivateQuote = 'Y',\r\n  PublicQuote = 'N'\r\n}\r\n\r\n/*\r\n************************************************\r\n* Specifies the type of respondents requested. *\r\n************************************************\r\n*/\r\nexport enum RespondentType {\r\n  AllMarketParticipants = 1,\r\n  SpecifiedMarketParticipants = 2,\r\n  AllMarketMakers = 3,\r\n  PrimaryMarketMakerS = 4\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies an event related to a SecurityTradingStatus(326). *\r\n* An event occurs and is gone, it is not a state that applies  *\r\n* for a period of time.                                        *\r\n****************************************************************\r\n*/\r\nexport enum SecurityTradingEvent {\r\n  OrderImbalanceAuctionIsExtended = 1,\r\n  TradingResumesAfterHalt = 2,\r\n  PriceVolatilityInterruption = 3,\r\n  ChangeOfTradingSession = 4,\r\n  ChangeOfTradingSubsession = 5,\r\n  ChangeOfSecurityTradingStatus = 6,\r\n  ChangeOfBookType = 7,\r\n  ChangeOfMarketDepth = 8,\r\n  CorporateAction = 9\r\n}\r\n\r\n/*\r\n**********************\r\n* Type of statistics *\r\n**********************\r\n*/\r\nexport enum StatsType {\r\n  ExchangeLast = 1,\r\n  HighLowPrice = 2,\r\n  AveragePriceVwapTwap = 3,\r\n  TurnoverPriceQty = 4\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Specifies the type of secondary size. *\r\n*****************************************\r\n*/\r\nexport enum MDSecSizeType {\r\n  Customer = 1,\r\n  CustomerProfessional = 2,\r\n  DoNotTradeThrough = 3\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Used to express the UOM of the price if different from the *\r\n* contract. In futures, this can be different for cross-rate *\r\n* products in which the price is quoted in units differently *\r\n* from the contract                                          *\r\n**************************************************************\r\n*/\r\nexport enum PriceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Settlement method for a contract or instrument. Additional *\r\n* values may be used with bilateral agreement.               *\r\n**************************************************************\r\n*/\r\nexport enum SettlMethod {\r\n  CashSettlementRequired = 'C',\r\n  PhysicalSettlementRequired = 'P',\r\n  ElectionAtExercise = 'E'\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Type of exercise of a derivatives security *\r\n**********************************************\r\n*/\r\nexport enum ExerciseStyle {\r\n  European = 0,\r\n  American = 1,\r\n  Bermuda = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n******************************\r\n* Method for price quotation *\r\n******************************\r\n*/\r\nexport enum PriceQuoteMethod {\r\n  StandardMoneyPerUnitOfAPhysical = 'STD',\r\n  Index = 'INX',\r\n  InterestRateIndex = 'INT',\r\n  PercentOfPar = 'PCTPAR'\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Specifies the type of valuation method applied. *\r\n***************************************************\r\n*/\r\nexport enum ValuationMethod {\r\n  PremiumStyle = 'EQTY',\r\n  FuturesStyleMarkToMarket = 'FUT',\r\n  FuturesStyleWithAnAttachedCashAdjustment = 'FUTDA',\r\n  CdsStyleCollateralizationOfMarketToMarketAndCoupon = 'CDS',\r\n  CdsInDeliveryUseRecoveryRateToCalculateObligation = 'CDSD'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Indicates whether instruments are pre-listed only or can *\r\n* also be defined via user request                         *\r\n************************************************************\r\n*/\r\nexport enum ListMethod {\r\n  PreListedOnly = 0,\r\n  UserRequested = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of tick rule which is being described *\r\n************************************************************\r\n*/\r\nexport enum TickRuleType {\r\n  RegularTrading = 0,\r\n  VariableCabinet = 1,\r\n  FixedCabinet = 2,\r\n  TradedAsASpreadLeg = 3,\r\n  SettledAsASpreadLeg = 4,\r\n  TradedAsSpread = 5\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Code to represent the type of instrument attribute *\r\n******************************************************\r\n*/\r\nexport enum NestedInstrAttribType {\r\n  FlatSecuritiesPayInterestOnACurrentBasisButAreTradedWithoutInterest = 1,\r\n  ZeroCoupon = 2,\r\n  InterestBearingForEuroCommercialPaperWhenNotIssuedAtDiscount = 3,\r\n  NoPeriodicPayments = 4,\r\n  VariableRate = 5,\r\n  LessFeeForPut = 6,\r\n  SteppedCoupon = 7,\r\n  CouponPeriodIfNotSemiAnnual = 8,\r\n  WhenAndIfIssued = 9,\r\n  OriginalIssueDiscount = 10,\r\n  CallablePuttable = 11,\r\n  EscrowedToMaturity = 12,\r\n  EscrowedToRedemptionDateCallable = 13,\r\n  PreRefunded = 14,\r\n  InDefault = 15,\r\n  Unrated = 16,\r\n  Taxable = 17,\r\n  Indexed = 18,\r\n  SubjectToAlternativeMinimumTax = 19,\r\n  OriginalIssueDiscountPrice = 20,\r\n  CallableBelowMaturityValue = 21,\r\n  CallableWithoutNoticeByMailToHolderUnlessRegistered = 22,\r\n  PriceTickRulesForSecurity = 23,\r\n  TradeTypeEligibilityDetailsForSecurity = 24,\r\n  InstrumentDenominator = 25,\r\n  InstrumentNumerator = 26,\r\n  InstrumentPricePrecision = 27,\r\n  InstrumentStrikePrice = 28,\r\n  TradeableIndicator = 29,\r\n  InstrumentIsEligibleToAcceptAnonymousOrders = 30,\r\n  MinimumGuaranteedFillVolume = 31,\r\n  MinimumGuaranteedFillStatus = 32,\r\n  TradeAtSettlementTasEligibility = 33,\r\n  TestInstrument = 34,\r\n  DummyInstrument = 35,\r\n  NegativeSettlementPriceEligibility = 36,\r\n  NegativeStrikePriceEligibility = 37,\r\n  UsStandardContractIndicator = 38,\r\n  Text = 99\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Refer to definition for SymbolSfx(65) *\r\n*****************************************\r\n*/\r\nexport enum DerivativeSymbolSfx {\r\n  EucpWithLumpSumInterestRatherThanDiscountPrice = 'CD',\r\n  WhenIssuedForASecurityToBeReissuedUnderAnOldCusipOrIsin = 'WI'\r\n}\r\n\r\n/*\r\n************************************************\r\n* Refer to definition for SecurityIDSoruce(22) *\r\n************************************************\r\n*/\r\nexport enum DerivativeSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Refer to definition for SecurityAltIDSource(456) *\r\n****************************************************\r\n*/\r\nexport enum DerivativeSecurityAltIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n****************************************\r\n* The commission rate unit of measure. *\r\n****************************************\r\n*/\r\nexport enum CommUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\nexport enum DerivativeProduct {\r\n  Agency = 1,\r\n  Commodity = 2,\r\n  Corporate = 3,\r\n  Currency = 4,\r\n  Equity = 5,\r\n  Government = 6,\r\n  Index = 7,\r\n  Loan = 8,\r\n  Moneymarket = 9,\r\n  Mortgage = 10,\r\n  Municipal = 11,\r\n  Other = 12,\r\n  Financing = 13\r\n}\r\n\r\nexport enum DerivativeSecurityType {\r\n  EuroSupranationalCoupons = 'EUSUPRA',\r\n  CorporateBond = 'CORP',\r\n  ForeignExchangeContract = 'FOR',\r\n  CommonStock = 'CS',\r\n  Repurchase = 'REPO',\r\n  BradyBond = 'BRADY',\r\n  TermLoan = 'TERM',\r\n  BankersAcceptance = 'BA',\r\n  AssetBackedSecurities = 'ABS',\r\n  OtherAnticipationNotesBanGanEtc = 'AN',\r\n  MutualFund = 'MF',\r\n  FederalAgencyCoupon = 'FAC',\r\n  CorporatePrivatePlacement = 'CPP',\r\n  PreferredStock = 'PS',\r\n  Forward = 'FORWARD',\r\n  CanadianTreasuryNotes = 'CAN',\r\n  RevolverLoan = 'RVLV',\r\n  BankDepositoryNote = 'BDN',\r\n  CanadianMortgageBonds = 'CMB',\r\n  CertificateOfObligation = 'COFO',\r\n  MultilegInstrument = 'MLEG',\r\n  NonDeliverableForward = 'FXNDF',\r\n  Cap = 'CAP',\r\n  FederalAgencyDiscountNote = 'FADN',\r\n  ConvertibleBond = 'CB',\r\n  CreditDefaultSwap = 'CDS',\r\n  BuySellback = 'BUYSELL',\r\n  CanadianTreasuryBills = 'CTB',\r\n  RevolverTermLoan = 'RVLVTRM',\r\n  BankNotes = 'BN',\r\n  CorpMortgageBackedSecurities = 'CMBS',\r\n  CertificateOfParticipation = 'COFP',\r\n  NoSecurityType = 'NONE',\r\n  FxSpot = 'FXSPOT',\r\n  UsTreasuryNoteDeprecatedValueUseTnote = 'UST',\r\n  PrivateExportFunding = 'PEF',\r\n  DualCurrency = 'DUAL',\r\n  SecuritiesLoan = 'SECLOAN',\r\n  EuroSovereigns = 'EUSOV',\r\n  BridgeLoan = 'BRIDGE',\r\n  BillOfExchanges = 'BOX',\r\n  CollateralizedMortgageObligation = 'CMO',\r\n  GeneralObligationBonds = 'GO',\r\n  FxForward = 'FXFWD',\r\n  Collar = 'CLLR',\r\n  UsTreasuryBillDeprecatedValueUseTbill = 'USTB',\r\n  UsdSupranationalCoupons = 'SUPRA',\r\n  EuroCorporateBond = 'EUCORP',\r\n  SecuritiesPledge = 'SECPLEDGE',\r\n  CanadianProvincialBonds = 'PROV',\r\n  LetterOfCredit = 'LOFC',\r\n  CanadianMoneyMarkets = 'CAMM',\r\n  IoetteMortgage = 'IET',\r\n  MandatoryTender = 'MT',\r\n  FxSwap = 'FXSWAP',\r\n  CommoditySwap = 'CMDTYSWAP',\r\n  EuroCorporateFloatingRateNotes = 'EUFRN',\r\n  TreasuryBillNonUs = 'TB',\r\n  SwingLineFacility = 'SWING',\r\n  CertificateOfDeposit = 'CD',\r\n  MortgageBackedSecurities = 'MBS',\r\n  RevenueAnticipationNote = 'RAN',\r\n  WildcardEntryForUseOnSecurityDefinitionRequest = '?',\r\n  DeliveryVersusPledge = 'DVPLDG',\r\n  Exotic = 'EXOTIC',\r\n  UsCorporateFloatingRateNotes = 'FRN',\r\n  OptionsOnCombo = 'OOC',\r\n  UsTreasuryBond = 'TBOND',\r\n  DebtorInPossession = 'DINP',\r\n  CallLoans = 'CL',\r\n  MortgageInterestOnly = 'MIO',\r\n  RevenueBonds = 'REV',\r\n  Cash = 'CASH',\r\n  Floor = 'FLR',\r\n  CollateralBasket = 'COLLBSKT',\r\n  IndexedLinked = 'XLINKD',\r\n  InterestStripFromAnyBondOrNote = 'TINT',\r\n  Defaulted = 'DEFLTED',\r\n  CommercialPaper = 'CP',\r\n  MortgagePrincipalOnly = 'MPO',\r\n  SpecialAssessment = 'SPCLA',\r\n  ForwardRateAgreement = 'FRA',\r\n  StructuredNotes = 'STRUCT',\r\n  Future = 'FUT',\r\n  UsTreasuryBill = 'TBILL',\r\n  TreasuryInflationProtectedSecurities = 'TIPS',\r\n  Withdrawn = 'WITHDRN',\r\n  DepositNotes = 'DN',\r\n  MortgagePrivatePlacement = 'MPP',\r\n  SpecialObligation = 'SPCLO',\r\n  YankeeCorporateBond = 'YANK',\r\n  PrincipalStripOfACallableBondOrNote = 'TCAL',\r\n  Replaced = 'REPLACD',\r\n  EuroCertificateOfDeposit = 'EUCD',\r\n  MiscellaneousPassThrough = 'MPT',\r\n  SpecialTax = 'SPCLT',\r\n  DerivativeForward = 'FWD',\r\n  InterestRateSwap = 'IRS',\r\n  PrincipalStripFromANonCallableBondOrNote = 'TPRN',\r\n  Matured = 'MATURED',\r\n  EuroCommercialPaper = 'EUCP',\r\n  Pfandbriefe = 'PFAND',\r\n  TaxAnticipationNote = 'TAN',\r\n  TotalReturnSwap = 'TRS',\r\n  UsTreasuryNote = 'TNOTE',\r\n  AmendedRestated = 'AMENDED',\r\n  LiquidityNote = 'LQN',\r\n  ToBeAnnounced = 'TBA',\r\n  TaxAllocation = 'TAXA',\r\n  LoanLease = 'LOANLEASE',\r\n  Retired = 'RETIRED',\r\n  MediumTermNotes = 'MTN',\r\n  TaxExemptCommercialPaper = 'TECP',\r\n  OptionsOnFutures = 'OOF',\r\n  Overnight = 'ONITE',\r\n  TaxableMunicipalCp = 'TMCP',\r\n  OptionsOnPhysicalUseNotRecommended = 'OOP',\r\n  PromissoryNote = 'PN',\r\n  ShortTermLoanNote = 'STN',\r\n  TaxRevenueAnticipationNote = 'TRAN',\r\n  Option = 'OPT',\r\n  PlazosFijos = 'PZFJ',\r\n  VariableRateDemandNote = 'VRDN',\r\n  SecuredLiquidityNote = 'SLQN',\r\n  Warrant = 'WAR',\r\n  SpotForward = 'SPOTFWD',\r\n  TimeDeposit = 'TD',\r\n  SwapOption = 'SWAPTION',\r\n  Transmission = 'XMISSION',\r\n  TermLiquidityNote = 'TLQN',\r\n  GeneralTypeForAContractBasedOnAnEstablishedIndex = 'INDEX',\r\n  ExtendedCommNote = 'XCN',\r\n  BondBasket = 'BDBSKT',\r\n  YankeeCertificateOfDeposit = 'YCD',\r\n  ContractForDifference = 'CFD',\r\n  CorrelationSwap = 'CRLTNSWAP',\r\n  DividendSwap = 'DVDNDSWAP',\r\n  EquityBasket = 'EQBSKT',\r\n  EquityForward = 'EQFWD',\r\n  ReturnSwap = 'RTRNSWAP',\r\n  VarianceSwap = 'VARSWAP'\r\n}\r\n\r\nexport enum DerivativeInstrmtAssignmentMethod {\r\n  ProRata = 'P',\r\n  Random = 'R'\r\n}\r\n\r\nexport enum DerivativeSecurityStatus {\r\n  Active = '1',\r\n  Inactive = '2',\r\n  ActiveClosingOrdersOnly = '3',\r\n  Expired = '4',\r\n  Delisted = '5',\r\n  KnockedOut = '6',\r\n  KnockOutRevoked = '7',\r\n  PendingExpiry = '8',\r\n  Suspended = '9',\r\n  Published = '10',\r\n  PendingDeletion = '11'\r\n}\r\n\r\nexport enum DerivativeUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\nexport enum DerivativeTimeUnit {\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Quarter = 'Q'\r\n}\r\n\r\nexport enum DerivativeEventType {\r\n  Put = 1,\r\n  Call = 2,\r\n  Tender = 3,\r\n  SinkingFundCall = 4,\r\n  Activation = 5,\r\n  Inactivation = 6,\r\n  LastEligibleTradeDate = 7,\r\n  SwapStartDate = 8,\r\n  SwapEndDate = 9,\r\n  SwapRollDate = 10,\r\n  SwapNextStartDate = 11,\r\n  SwapNextRollDate = 12,\r\n  FirstDeliveryDate = 13,\r\n  LastDeliveryDate = 14,\r\n  InitialInventoryDueDate = 15,\r\n  FinalInventoryDueDate = 16,\r\n  FirstIntentDate = 17,\r\n  LastIntentDate = 18,\r\n  PositionRemovalDate = 19,\r\n  MinimumNotice = 20,\r\n  DeliveryStartTime = 21,\r\n  DeliveryEndTime = 22,\r\n  FirstNoticeDate = 23,\r\n  LastNoticeDate = 24,\r\n  FirstExerciseDate = 25,\r\n  RedemptionDate = 26,\r\n  TradeContinuationEffectiveDate = 27,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Refer to definition of PartyIDSource(447) *\r\n*********************************************\r\n*/\r\nexport enum DerivativeInstrumentPartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n*****************************************\r\n* REfer to definition of PartyRole(452) *\r\n*****************************************\r\n*/\r\nexport enum DerivativeInstrumentPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Refer to definition for PartySubIDType(803) *\r\n***********************************************\r\n*/\r\nexport enum DerivativeInstrumentPartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Type of exercise of a derivatives security *\r\n**********************************************\r\n*/\r\nexport enum DerivativeExerciseStyle {\r\n  European = 0,\r\n  American = 1,\r\n  Bermuda = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Unit of measure for the Maturity Month Year Increment *\r\n*********************************************************\r\n*/\r\nexport enum MaturityMonthYearIncrementUnits {\r\n  Months = 0,\r\n  Days = 1,\r\n  Weeks = 2,\r\n  Years = 3\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Format used to generate the MaturityMonthYear for each *\r\n* option                                                 *\r\n**********************************************************\r\n*/\r\nexport enum MaturityMonthYearFormat {\r\n  YearMonthOnlyDefault = 0,\r\n  YearMonthDay = 1,\r\n  YearMonthWeek = 2\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Expiration Style for an option class: *\r\n*****************************************\r\n*/\r\nexport enum StrikeExerciseStyle {\r\n  European = 0,\r\n  American = 1,\r\n  Bermuda = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Describes the how the price limits are expressed *\r\n****************************************************\r\n*/\r\nexport enum SecondaryPriceLimitType {\r\n  PriceDefault = 0,\r\n  Ticks = 1,\r\n  Percentage = 2\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Describes the how the price limits are expressed. *\r\n*****************************************************\r\n*/\r\nexport enum PriceLimitType {\r\n  PriceDefault = 0,\r\n  Ticks = 1,\r\n  Percentage = 2\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Indicates execution instructions that are valid for the *\r\n* specified market segment                                *\r\n***********************************************************\r\n*/\r\nexport enum ExecInstValue {\r\n  StayOnOfferSide = '0',\r\n  NotHeld = '1',\r\n  Work = '2',\r\n  GoAlong = '3',\r\n  OverTheDay = '4',\r\n  Held = '5',\r\n  ParticipateDontInitiate = '6',\r\n  StrictScale = '7',\r\n  TryToScale = '8',\r\n  StayOnBidSide = '9',\r\n  NoCross = 'A',\r\n  OkToCross = 'B',\r\n  CallFirst = 'C',\r\n  PercentOfVolume = 'D',\r\n  DoNotIncreaseDni = 'E',\r\n  DoNotReduceDnr = 'F',\r\n  AllOrNoneAon = 'G',\r\n  ReinstateOnSystemFailure = 'H',\r\n  InstitutionsOnly = 'I',\r\n  ReinstateOnTradingHalt = 'J',\r\n  CancelOnTradingHalt = 'K',\r\n  LastPegLastSale = 'L',\r\n  MidPricePegMidpriceOfInsideQuote = 'M',\r\n  NonNegotiable = 'N',\r\n  OpeningPeg = 'O',\r\n  MarketPeg = 'P',\r\n  CancelOnSystemFailure = 'Q',\r\n  PrimaryPeg = 'R',\r\n  Suspend = 'S',\r\n  FixedPegToLocalBestBidOrOfferAtTimeOfOrder = 'T',\r\n  CustomerDisplayInstruction = 'U',\r\n  NettingForForex = 'V',\r\n  PegToVwap = 'W',\r\n  TradeAlong = 'X',\r\n  TryToStop = 'Y',\r\n  CancelIfNotBest = 'Z',\r\n  TrailingStopPeg = 'a',\r\n  StrictLimit = 'b',\r\n  IgnorePriceValidityChecks = 'c',\r\n  PegToLimitPrice = 'd',\r\n  WorkToTargetStrategy = 'e',\r\n  IntermarketSweep = 'f',\r\n  ExternalRoutingAllowed = 'g',\r\n  ExternalRoutingNotAllowed = 'h',\r\n  ImbalanceOnly = 'i',\r\n  SingleExecutionRequestedForBlockTrade = 'j',\r\n  BestExecution = 'k',\r\n  SuspendOnSystemFailure = 'l',\r\n  SuspendOnTradingHalt = 'm',\r\n  ReinstateOnConnectionLoss = 'n',\r\n  CancelOnConnectionLoss = 'o',\r\n  SuspendOnConnectionLoss = 'p',\r\n  Release = 'q',\r\n  ExecuteAsDeltaNeutralUsingVolatilityProvided = 'r',\r\n  ExecuteAsDurationNeutral = 's',\r\n  ExecuteAsFxNeutral = 't',\r\n  MinimumGuaranteedFillEligible = 'u',\r\n  BypassNonDisplayedLiquidity = 'v',\r\n  Lock = 'w',\r\n  IgnoreNotionalValueChecks = 'x',\r\n  TradeAtReferencePrice = 'y'\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Refer to definition of InstrAttribType(871) *\r\n***********************************************\r\n*/\r\nexport enum DerivativeInstrAttribType {\r\n  FlatSecuritiesPayInterestOnACurrentBasisButAreTradedWithoutInterest = 1,\r\n  ZeroCoupon = 2,\r\n  InterestBearingForEuroCommercialPaperWhenNotIssuedAtDiscount = 3,\r\n  NoPeriodicPayments = 4,\r\n  VariableRate = 5,\r\n  LessFeeForPut = 6,\r\n  SteppedCoupon = 7,\r\n  CouponPeriodIfNotSemiAnnual = 8,\r\n  WhenAndIfIssued = 9,\r\n  OriginalIssueDiscount = 10,\r\n  CallablePuttable = 11,\r\n  EscrowedToMaturity = 12,\r\n  EscrowedToRedemptionDateCallable = 13,\r\n  PreRefunded = 14,\r\n  InDefault = 15,\r\n  Unrated = 16,\r\n  Taxable = 17,\r\n  Indexed = 18,\r\n  SubjectToAlternativeMinimumTax = 19,\r\n  OriginalIssueDiscountPrice = 20,\r\n  CallableBelowMaturityValue = 21,\r\n  CallableWithoutNoticeByMailToHolderUnlessRegistered = 22,\r\n  PriceTickRulesForSecurity = 23,\r\n  TradeTypeEligibilityDetailsForSecurity = 24,\r\n  InstrumentDenominator = 25,\r\n  InstrumentNumerator = 26,\r\n  InstrumentPricePrecision = 27,\r\n  InstrumentStrikePrice = 28,\r\n  TradeableIndicator = 29,\r\n  InstrumentIsEligibleToAcceptAnonymousOrders = 30,\r\n  MinimumGuaranteedFillVolume = 31,\r\n  MinimumGuaranteedFillStatus = 32,\r\n  TradeAtSettlementTasEligibility = 33,\r\n  TestInstrument = 34,\r\n  DummyInstrument = 35,\r\n  NegativeSettlementPriceEligibility = 36,\r\n  NegativeStrikePriceEligibility = 37,\r\n  UsStandardContractIndicator = 38,\r\n  Text = 99\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Refer to definition for PriceUnitOfMeasure(1191) *\r\n****************************************************\r\n*/\r\nexport enum DerivativePriceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Settlement method for a contract or instrument. Additional *\r\n* values may be used with bilateral agreement.               *\r\n**************************************************************\r\n*/\r\nexport enum DerivativeSettlMethod {\r\n  CashSettlementRequired = 'C',\r\n  PhysicalSettlementRequired = 'P',\r\n  ElectionAtExercise = 'E'\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Refer to definition of PriceQuoteMethod(1196) *\r\n*************************************************\r\n*/\r\nexport enum DerivativePriceQuoteMethod {\r\n  StandardMoneyPerUnitOfAPhysical = 'STD',\r\n  Index = 'INX',\r\n  InterestRateIndex = 'INT',\r\n  PercentOfPar = 'PCTPAR'\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Refer to definition of ValuationMethod(1197). *\r\n*************************************************\r\n*/\r\nexport enum DerivativeValuationMethod {\r\n  PremiumStyle = 'EQTY',\r\n  FuturesStyleMarkToMarket = 'FUT',\r\n  FuturesStyleWithAnAttachedCashAdjustment = 'FUTDA',\r\n  CdsStyleCollateralizationOfMarketToMarketAndCoupon = 'CDS',\r\n  CdsInDeliveryUseRecoveryRateToCalculateObligation = 'CDSD'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Indicates whether instruments are pre-listed only or can *\r\n* also be defined via user request                         *\r\n************************************************************\r\n*/\r\nexport enum DerivativeListMethod {\r\n  PreListedOnly = 0,\r\n  UserRequested = 1\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Indicates whether an Option is for a put or call *\r\n****************************************************\r\n*/\r\nexport enum DerivativePutOrCall {\r\n  Put = 0,\r\n  Call = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* If provided, then Instrument occurrence has explicitly *\r\n* changed                                                *\r\n**********************************************************\r\n*/\r\nexport enum ListUpdateAction {\r\n  Add = 'A',\r\n  Delete = 'D',\r\n  Modify = 'M',\r\n  Snapshot = 'S'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the action taken for the specified trading *\r\n* sessions.                                            *\r\n********************************************************\r\n*/\r\nexport enum TradSesUpdateAction {\r\n  Add = 'A',\r\n  Delete = 'D',\r\n  Modify = 'M'\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Type of Application Message Request being made. *\r\n***************************************************\r\n*/\r\nexport enum ApplReqType {\r\n  RetransmissionOfApplicationMessagesForTheSpecifiedApplications = 0,\r\n  SubscriptionToTheSpecifiedApplications = 1,\r\n  RequestForTheLastApplLastSeqNumPublishedForTheSpecifiedApplications = 2,\r\n  RequestValidSetOfApplications = 3,\r\n  UnsubscribeToTheSpecifiedApplications = 4,\r\n  CancelRetransmission = 5,\r\n  CancelRetransmissionAndUnsubscribeToTheSpecifiedApplications = 6\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Used to indicate the type of acknowledgement being sent. *\r\n************************************************************\r\n*/\r\nexport enum ApplResponseType {\r\n  RequestSuccessfullyProcessed = 0,\r\n  ApplicationDoesNotExist = 1,\r\n  MessagesNotAvailable = 2\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Used to return an error code or text associated with a *\r\n* response to an Application Request.                    *\r\n**********************************************************\r\n*/\r\nexport enum ApplResponseError {\r\n  ApplicationDoesNotExist = 0,\r\n  MessagesRequestedAreNotAvailable = 1,\r\n  UserNotAuthorizedForApplication = 2\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Put or call indicator of the leg security. *\r\n* See PutOrCall(201).                        *\r\n**********************************************\r\n*/\r\nexport enum LegPutOrCall {\r\n  Put = 0,\r\n  Call = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies an event related to a TradSesStatus(340). An      *\r\n* event occurs and is gone, it is not a state that applies for *\r\n* a period of time.                                            *\r\n****************************************************************\r\n*/\r\nexport enum TradSesEvent {\r\n  TradingResumesAfterHalt = 0,\r\n  ChangeOfTradingSession = 1,\r\n  ChangeOfTradingSubsession = 2,\r\n  ChangeOfTradingStatus = 3\r\n}\r\n\r\n/*\r\n******************************************\r\n* Specifies the type of action requested *\r\n******************************************\r\n*/\r\nexport enum MassActionType {\r\n  SuspendOrders = 1,\r\n  ReleaseOrdersFromSuspension = 2,\r\n  CancelOrders = 3\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Specifies scope of Order Mass Action Request. *\r\n*************************************************\r\n*/\r\nexport enum MassActionScope {\r\n  AllOrdersForASecurity = 1,\r\n  AllOrdersForAnUnderlyingSecurity = 2,\r\n  AllOrdersForAProduct = 3,\r\n  AllOrdersForACfiCode = 4,\r\n  AllOrdersForASecurityType = 5,\r\n  AllOrdersForATradingSession = 6,\r\n  AllOrders = 7,\r\n  AllOrdersForAMarket = 8,\r\n  AllOrdersForAMarketSegmentOrMultipleSegments = 9,\r\n  AllOrdersForASecurityGroup = 10,\r\n  CancelForSecurityIssuer = 11,\r\n  CancelForIssuerOfUnderlyingSecurity = 12\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the action taken by counterparty order handling *\r\n* system as a result of the action type indicated in        *\r\n* MassActionType of the Order Mass Action Request.          *\r\n*************************************************************\r\n*/\r\nexport enum MassActionResponse {\r\n  RejectedSeeMassActionRejectReason1376 = 0,\r\n  Accepted = 1,\r\n  Completed = 2\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Reason Order Mass Action Request was rejected *\r\n*************************************************\r\n*/\r\nexport enum MassActionRejectReason {\r\n  MassActionNotSupported = 0,\r\n  InvalidOrUnknownSecurity = 1,\r\n  InvalidOrUnknownUnderlyingSecurity = 2,\r\n  InvalidOrUnknownProduct = 3,\r\n  InvalidOrUnknownCfiCode = 4,\r\n  InvalidOrUnknownSecurityType = 5,\r\n  InvalidOrUnknownTradingSession = 6,\r\n  InvalidOrUnknownMarket = 7,\r\n  InvalidOrUnknownMarketSegment = 8,\r\n  InvalidOrUnknownSecurityGroup = 9,\r\n  InvalidOrUnknownSecurityIssuer = 10,\r\n  InvalidOrUnknownIssuerOfUnderlyingSecurity = 11,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the type of multileg order. Defines whether the *\r\n* security is pre-defined or user-defined. Note that        *\r\n* MultilegModel(1377)=2(User-defined, Non-Securitized,      *\r\n* Multileg) does not apply for Securities.                  *\r\n*************************************************************\r\n*/\r\nexport enum MultilegModel {\r\n  PredefinedMultilegSecurity = 0,\r\n  UserDefinedMultilegSecurity = 1,\r\n  UserDefinedNonSecuritizedMultileg = 2\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Code to represent how the multileg price is to be       *\r\n* interpreted when applied to the legs.                   *\r\n* (See Volume : \"Glossary\" for further value definitions) *\r\n***********************************************************\r\n*/\r\nexport enum MultilegPriceMethod {\r\n  NetPrice = 0,\r\n  ReversedNetPrice = 1,\r\n  YieldDifference = 2,\r\n  Individual = 3,\r\n  ContractWeightedAveragePrice = 4,\r\n  MultipliedPrice = 5\r\n}\r\n\r\n/*\r\n*******************************\r\n* Refer to ExecInst(18)       *\r\n* Same values as ExecInst(18) *\r\n*******************************\r\n*/\r\nexport enum LegExecInst {\r\n  StayOnOfferSide = '0',\r\n  NotHeld = '1',\r\n  Work = '2',\r\n  GoAlong = '3',\r\n  OverTheDay = '4',\r\n  Held = '5',\r\n  ParticipateDontInitiate = '6',\r\n  StrictScale = '7',\r\n  TryToScale = '8',\r\n  StayOnBidSide = '9',\r\n  NoCross = 'A',\r\n  OkToCross = 'B',\r\n  CallFirst = 'C',\r\n  PercentOfVolume = 'D',\r\n  DoNotIncreaseDni = 'E',\r\n  DoNotReduceDnr = 'F',\r\n  AllOrNoneAon = 'G',\r\n  ReinstateOnSystemFailure = 'H',\r\n  InstitutionsOnly = 'I',\r\n  ReinstateOnTradingHalt = 'J',\r\n  CancelOnTradingHalt = 'K',\r\n  LastPegLastSale = 'L',\r\n  MidPricePegMidpriceOfInsideQuote = 'M',\r\n  NonNegotiable = 'N',\r\n  OpeningPeg = 'O',\r\n  MarketPeg = 'P',\r\n  CancelOnSystemFailure = 'Q',\r\n  PrimaryPeg = 'R',\r\n  Suspend = 'S',\r\n  FixedPegToLocalBestBidOrOfferAtTimeOfOrder = 'T',\r\n  CustomerDisplayInstruction = 'U',\r\n  NettingForForex = 'V',\r\n  PegToVwap = 'W',\r\n  TradeAlong = 'X',\r\n  TryToStop = 'Y',\r\n  CancelIfNotBest = 'Z',\r\n  TrailingStopPeg = 'a',\r\n  StrictLimit = 'b',\r\n  IgnorePriceValidityChecks = 'c',\r\n  PegToLimitPrice = 'd',\r\n  WorkToTargetStrategy = 'e',\r\n  IntermarketSweep = 'f',\r\n  ExternalRoutingAllowed = 'g',\r\n  ExternalRoutingNotAllowed = 'h',\r\n  ImbalanceOnly = 'i',\r\n  SingleExecutionRequestedForBlockTrade = 'j',\r\n  BestExecution = 'k',\r\n  SuspendOnSystemFailure = 'l',\r\n  SuspendOnTradingHalt = 'm',\r\n  ReinstateOnConnectionLoss = 'n',\r\n  CancelOnConnectionLoss = 'o',\r\n  SuspendOnConnectionLoss = 'p',\r\n  Release = 'q',\r\n  ExecuteAsDeltaNeutralUsingVolatilityProvided = 'r',\r\n  ExecuteAsDurationNeutral = 's',\r\n  ExecuteAsFxNeutral = 't',\r\n  MinimumGuaranteedFillEligible = 'u',\r\n  BypassNonDisplayedLiquidity = 'v',\r\n  Lock = 'w',\r\n  IgnoreNotionalValueChecks = 'x',\r\n  TradeAtReferencePrice = 'y'\r\n}\r\n\r\n/*\r\n************************************\r\n* Defines the type of contingency. *\r\n************************************\r\n*/\r\nexport enum ContingencyType {\r\n  OneCancelsTheOtherOco = 1,\r\n  OneTriggersTheOtherOto = 2,\r\n  OneUpdatesTheOtherOuoAbsoluteQuantityReduction = 3,\r\n  OneUpdatesTheOtherOuoProportionalQuantityReduction = 4,\r\n  BidAndOffer = 5,\r\n  BidAndOfferOco = 6\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies the reason for rejection of a New Order List      *\r\n* message. Note that OrdRejReason(103) is used if the          *\r\n* rejection is based on properties of an individual order part *\r\n* of the List.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum ListRejectReason {\r\n  BrokerExchangeOption = 0,\r\n  ExchangeClosed = 2,\r\n  TooLateToEnter = 4,\r\n  UnknownOrder = 5,\r\n  DuplicateOrderEGDupeClOrdId = 6,\r\n  UnsupportedOrderCharacteristic = 11,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Identifies the type of party for trade reporting. Same *\r\n* values as PartyRole(452).                              *\r\n**********************************************************\r\n*/\r\nexport enum TrdRepPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Indicates if a trade should be reported via a market   *\r\n* reporting service. The indicator governs all reporting *\r\n* services of the recipient. Replaces                    *\r\n* PublishTrdIndicator(852).                              *\r\n**********************************************************\r\n*/\r\nexport enum TradePublishIndicator {\r\n  DoNotPublishTrade = 0,\r\n  PublishTrade = 1,\r\n  DeferredPublication = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the action taken for the specified MarketID(1301) *\r\n* + MarketSegmentID(1300).                                    *\r\n***************************************************************\r\n*/\r\nexport enum MarketUpdateAction {\r\n  Add = 'A',\r\n  Delete = 'D',\r\n  Modify = 'M'\r\n}\r\n\r\n/*\r\n***************************\r\n* Status of a FIX session *\r\n***************************\r\n*/\r\nexport enum SessionStatus {\r\n  SessionActive = 0,\r\n  SessionPasswordChanged = 1,\r\n  SessionPasswordDueToExpire = 2,\r\n  NewSessionPasswordDoesNotComplyWithPolicy = 3,\r\n  SessionLogoutComplete = 4,\r\n  InvalidUsernameOrPassword = 5,\r\n  AccountLocked = 6,\r\n  LogonsAreNotAllowedAtThisTime = 7,\r\n  PasswordExpired = 8,\r\n  ReceivedMsgSeqNum34IsTooLow = 9,\r\n  ReceivedNextExpectedMsgSeqNum789IsTooHigh = 10\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Refer to definition of PartySubIDType(803) *\r\n**********************************************\r\n*/\r\nexport enum Nested4PartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Refer to definition of PartyIDSource(447) *\r\n*********************************************\r\n*/\r\nexport enum Nested4PartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Refer to definition of PartyRole(452) *\r\n*****************************************\r\n*/\r\nexport enum Nested4PartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Type of exercise of a derivatives security *\r\n**********************************************\r\n*/\r\nexport enum UnderlyingExerciseStyle {\r\n  European = 0,\r\n  American = 1,\r\n  Bermuda = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Type of exercise of a derivatives security *\r\n**********************************************\r\n*/\r\nexport enum LegExerciseStyle {\r\n  European = 0,\r\n  American = 1,\r\n  Bermuda = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Refer to definition for PriceUnitOfMeasure(1191) *\r\n****************************************************\r\n*/\r\nexport enum LegPriceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Refer to definition for PriceUnitOfMeasure(1191) *\r\n****************************************************\r\n*/\r\nexport enum UnderlyingPriceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n******************\r\n* Type of report *\r\n******************\r\n*/\r\nexport enum ApplReportType {\r\n  ResetApplSeqNumToNewValueSpecifiedInApplNewSeqNum1399 = 0,\r\n  ReportsThatTheLastMessageHasBeenSentForTheApplIDsReferToRefApplLastSeqNum1357ForTheApplicationSequenceNumberOfTheLastMessage = 1,\r\n  HeartbeatMessageIndicatingThatApplicationIdentifiedByRefApplId1355IsStillAliveReferToRefApplLastSeqNum1357ForTheApplicationSequenceNumberOfThePreviousMessage = 2,\r\n  ApplicationMessageReSendCompleted = 3\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Time unit in which the OrderDelay(1428) is expressed *\r\n********************************************************\r\n*/\r\nexport enum OrderDelayUnit {\r\n  SecondsDefaultIfNotSpecified = 0,\r\n  TenthsOfASecond = 1,\r\n  HundredthsOfASecond = 2,\r\n  Milliseconds = 3,\r\n  Microseconds = 4,\r\n  Nanoseconds = 5,\r\n  Minutes = 10,\r\n  Hours = 11,\r\n  Days = 12,\r\n  Weeks = 13,\r\n  Months = 14,\r\n  Years = 15\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Identifies the type of venue where a trade was executed *\r\n***********************************************************\r\n*/\r\nexport enum VenueType {\r\n  ElectronicExchange = 'E',\r\n  Pit = 'P',\r\n  ExPit = 'X',\r\n  Clearinghouse = 'C',\r\n  RegisteredMarket = 'R',\r\n  OffMarket = 'O',\r\n  CentralLimitOrderBook = 'B',\r\n  QuoteDrivenMarket = 'Q',\r\n  DarkOrderBook = 'D',\r\n  AuctionDrivenMarket = 'A',\r\n  QuoteNegotiation = 'N',\r\n  VoiceNeotiation = 'V',\r\n  HybridMarket = 'H'\r\n}\r\n\r\n/*\r\n****************************************\r\n* The reason for updating the RefOrdID *\r\n****************************************\r\n*/\r\nexport enum RefOrdIDReason {\r\n  GtcFromPreviousDay = 0,\r\n  PartialFillRemaining = 1,\r\n  OrderChanged = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The customer capacity for this trade at the time of the     *\r\n* order/execution.                                            *\r\n* Primarily used by futures exchanges to indicate the CTICode *\r\n* (customer type indicator) as required by the US CFTC        *\r\n* (Commodity Futures Trading Commission).                     *\r\n***************************************************************\r\n*/\r\nexport enum OrigCustOrderCapacity {\r\n  MemberTradingForTheirOwnAccount = 1,\r\n  ClearingFirmTradingForItsProprietaryAccount = 2,\r\n  MemberTradingForAnotherMember = 3,\r\n  AllOther = 4\r\n}\r\n\r\n/*\r\n******************************\r\n* Type of pricing model used *\r\n******************************\r\n*/\r\nexport enum ModelType {\r\n  UtilityProvidedStandardModel = 0,\r\n  ProprietaryUserSuppliedModel = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates the type of multiplier being applied to the        *\r\n* contract. Can be optionally used to further define what unit *\r\n* ContractMultiplier(tag 231) is expressed in.                 *\r\n****************************************************************\r\n*/\r\nexport enum ContractMultiplierUnit {\r\n  Shares = 0,\r\n  Hours = 1,\r\n  Days = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* \"Indicates the type of multiplier being applied to the       *\r\n* contract. Can be optionally used to further define what unit *\r\n* LegContractMultiplier(tag 614) is expressed in.              *\r\n****************************************************************\r\n*/\r\nexport enum LegContractMultiplierUnit {\r\n  Shares = 0,\r\n  Hours = 1,\r\n  Days = 2\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Indicates the type of multiplier being applied to the *\r\n* contract.                                             *\r\n*********************************************************\r\n*/\r\nexport enum UnderlyingContractMultiplierUnit {\r\n  Shares = 0,\r\n  Hours = 1,\r\n  Days = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates the type of multiplier being applied to the        *\r\n* contract. Can be optionally used to further define what unit *\r\n* DerivativeContractMultiplier(tag 1266)is expressed in.       *\r\n****************************************************************\r\n*/\r\nexport enum DerivativeContractMultiplierUnit {\r\n  Shares = 0,\r\n  Hours = 1,\r\n  Days = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The industry standard flow schedule by which electricity or *\r\n* natural gas is traded. Schedules exist by regions and       *\r\n* on-peak and off-peak status, such as \"Western Peak\".        *\r\n***************************************************************\r\n*/\r\nexport enum FlowScheduleType {\r\n  NercEasternOffPeak = 0,\r\n  NercWesternOffPeak = 1,\r\n  NercCalendarAllDaysInMonth = 2,\r\n  NercEasternPeak = 3,\r\n  NercWesternPeak = 4\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The industry standard flow schedule by which electricity or *\r\n* natural gas is traded. Schedules exist by regions and       *\r\n* on-peak and off-peak status, such as \"Western Peak\".        *\r\n***************************************************************\r\n*/\r\nexport enum LegFlowScheduleType {\r\n  NercEasternOffPeak = 0,\r\n  NercWesternOffPeak = 1,\r\n  NercCalendarAllDaysInMonth = 2,\r\n  NercEasternPeak = 3,\r\n  NercWesternPeak = 4\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The industry standard flow schedule by which electricity or *\r\n* natural gas is traded. Schedules exist by regions and       *\r\n* on-peak and off-peak status, such as \"Western Peak\".        *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingFlowScheduleType {\r\n  NercEasternOffPeak = 0,\r\n  NercWesternOffPeak = 1,\r\n  NercCalendarAllDaysInMonth = 2,\r\n  NercEasternPeak = 3,\r\n  NercWesternPeak = 4\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The industry standard flow schedule by which electricity or *\r\n* natural gas is traded. Schedules exist by regions and       *\r\n* on-peak and off-peak status, such as \"Western Peak\".        *\r\n***************************************************************\r\n*/\r\nexport enum DerivativeFlowScheduleType {\r\n  NercEasternOffPeak = 0,\r\n  NercWesternOffPeak = 1,\r\n  NercCalendarAllDaysInMonth = 2,\r\n  NercEasternPeak = 3,\r\n  NercWesternPeak = 4\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicator to identify whether this fill was a result of a  *\r\n* liquidity provider providing or liquidity taker taking the *\r\n* liquidity. Applicable only for OrdStatus of Partial or     *\r\n* Filled                                                     *\r\n**************************************************************\r\n*/\r\nexport enum FillLiquidityInd {\r\n  AddedLiquidity = 1,\r\n  RemovedLiquidity = 2,\r\n  LiquidityRoutedOut = 3,\r\n  Auction = 4,\r\n  TriggeredStopOrder = 5,\r\n  TriggeredContingencyOrder = 6,\r\n  TriggeredMarketOrder = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicator to identify whether this fill was a result of a  *\r\n* liquidity provider providing or liquidity taker taking the *\r\n* liquidity. Applicable only for OrdStatus of Partial or     *\r\n* Filled.                                                    *\r\n**************************************************************\r\n*/\r\nexport enum SideLiquidityInd {\r\n  AddedLiquidity = 1,\r\n  RemovedLiquidity = 2,\r\n  LiquidityRoutedOut = 3,\r\n  Auction = 4,\r\n  TriggeredStopOrder = 5,\r\n  TriggeredContingencyOrder = 6,\r\n  TriggeredMarketOrder = 7\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Identifies the source of rate information.              *\r\n* For FX, the reference source to be used for the FX spot *\r\n* rate.                                                   *\r\n***********************************************************\r\n*/\r\nexport enum RateSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates whether the rate source specified is a primary or *\r\n* secondary source.                                           *\r\n***************************************************************\r\n*/\r\nexport enum RateSourceType {\r\n  Primary = 0,\r\n  Secondary = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* A category of CDS credit event in which the underlying bond *\r\n* experiences a restructuring.                                *\r\n* Used to define a CDS instrument.                            *\r\n***************************************************************\r\n*/\r\nexport enum RestructuringType {\r\n  FullRestructuring = 'FR',\r\n  ModifiedRestructuring = 'MR',\r\n  ModifiedModRestructuring = 'MM',\r\n  NoRestructuringSpecified = 'XR'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies which issue (underlying bond) will receive payment *\r\n* priority in the event of a default.                          *\r\n* Used to define a CDS instrument.                             *\r\n****************************************************************\r\n*/\r\nexport enum Seniority {\r\n  SeniorSecured = 'SD',\r\n  Senior = 'SR',\r\n  Subordinated = 'SB'\r\n}\r\n\r\n/*\r\n*******************************\r\n* See RestructuringType(1449) *\r\n*******************************\r\n*/\r\nexport enum UnderlyingRestructuringType {\r\n  FullRestructuring = 'FR',\r\n  ModifiedRestructuring = 'MR',\r\n  ModifiedModRestructuring = 'MM',\r\n  NoRestructuringSpecified = 'XR'\r\n}\r\n\r\n/*\r\n***********************\r\n* See Seniority(1450) *\r\n***********************\r\n*/\r\nexport enum UnderlyingSeniority {\r\n  SeniorSecured = 'SD',\r\n  Senior = 'SR',\r\n  Subordinated = 'SB'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* PartyIDSource value within an target party repeating group. *\r\n* Same values as PartyIDSource (447)                          *\r\n***************************************************************\r\n*/\r\nexport enum TargetPartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* PartyRole value within an target party repeating group. *\r\n* Same values as PartyRole (452)                          *\r\n***********************************************************\r\n*/\r\nexport enum TargetPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n**************************************\r\n* Specifies a type of Security List. *\r\n**************************************\r\n*/\r\nexport enum SecurityListType {\r\n  IndustryClassification = 1,\r\n  TradingList = 2,\r\n  MarketMarketSegmentList = 3,\r\n  NewspaperList = 4\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies a specific source for a SecurityListType. Relevant *\r\n* when a certain type can be provided from various sources.    *\r\n****************************************************************\r\n*/\r\nexport enum SecurityListTypeSource {\r\n  IcbIndustryClassificationBenchmarkPublishedByDowJonesAndFtseWwwIcbenchmarkCom = 1,\r\n  NaicsNorthAmericanIndustryClassificationSystemReplacedSicStandardIndustryClassificationWwwCensusGovNaicsOrWwwNaicsCom = 2,\r\n  GicsGlobalIndustryClassificationStandardPublishedByStandardsPoor = 3\r\n}\r\n\r\n/*\r\n****************************\r\n* Category of news mesage. *\r\n****************************\r\n*/\r\nexport enum NewsCategory {\r\n  CompanyNews = 0,\r\n  MarketplaceNews = 1,\r\n  FinancialMarketNews = 2,\r\n  TechnicalNews = 3,\r\n  OtherNews = 99\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Type of reference to another News(35=B) message item. *\r\n*********************************************************\r\n*/\r\nexport enum NewsRefType {\r\n  Replacement = 0,\r\n  OtherLanguage = 1,\r\n  Complimentary = 2,\r\n  Withdrawal = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies how the strike price is determined at the point of *\r\n* option exercise. The strike may be fixed throughout the life *\r\n* of the option, set at expiration to the value of the         *\r\n* underlying, set to the average value of the underlying , or  *\r\n* set to the optimal value of the underlying.                  *\r\n****************************************************************\r\n*/\r\nexport enum StrikePriceDeterminationMethod {\r\n  FixedStrikeDefaultIfNotSpecified = 1,\r\n  StrikeSetAtExpirationToUnderlyingOrOtherValueLookbackFloating = 2,\r\n  StrikeSetToAverageOfUnderlyingSettlementPriceAcrossTheLifeOfTheOption = 3,\r\n  StrikeSetToOptimalValue = 4\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the boundary condition to be used for the strike *\r\n* price relative to the underlying price at the point of     *\r\n* option exercise.                                           *\r\n**************************************************************\r\n*/\r\nexport enum StrikePriceBoundaryMethod {\r\n  LessThanUnderlyingPriceIsInTheMoneyItm = 1,\r\n  LessThanOrEqualToTheUnderlyingPriceIsInTheMoneyItm = 2,\r\n  EqualToTheUnderlyingPriceIsInTheMoneyItm = 3,\r\n  GreaterThanOrEqualToUnderlyingPriceIsInTheMoneyItm = 4,\r\n  GreaterThanUnderlyingIsInTheMoneyItm = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies how the underlying price is determined at the      *\r\n* point of option exercise. The underlying price may be set to *\r\n* the current settlement price, set to a special reference,    *\r\n* set to the optimal value of the underlying during the        *\r\n* defined period (\"Look-back\") or set to the average value of  *\r\n* the underlying during the defined period (\"Asian option\").   *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPriceDeterminationMethod {\r\n  Regular = 1,\r\n  SpecialReference = 2,\r\n  OptimalValueLookback = 3,\r\n  AverageValueAsianOption = 4\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Indicates the type of payout that will result from an *\r\n* in-the-money option.                                  *\r\n*********************************************************\r\n*/\r\nexport enum OptPayoutType {\r\n  Vanilla = 1,\r\n  Capped = 2,\r\n  Binary = 3\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Identifies the type of complex event. *\r\n*****************************************\r\n*/\r\nexport enum ComplexEventType {\r\n  Capped = 1,\r\n  Trigger = 2,\r\n  KnockInUp = 3,\r\n  KnockInDown = 4,\r\n  KnockOutUp = 5,\r\n  KnockOutDown = 6,\r\n  Underlying = 7,\r\n  ResetBarrier = 8,\r\n  RollingBarrier = 9,\r\n  OneTouch = 10,\r\n  NoTouch = 11,\r\n  DoubleOneTouch = 12,\r\n  DoubleNoTouch = 13,\r\n  ForeignExchangeComposite = 14,\r\n  ForeignExchangeQuanto = 15,\r\n  ForeignExchangeCrossCurrency = 16,\r\n  StrikeSpread = 17,\r\n  CalendarSpread = 18,\r\n  PriceObservationAsianOrLookback = 19,\r\n  PassThrough = 20,\r\n  StrikeSchedule = 21,\r\n  EquityValuation = 22,\r\n  DividendValuation = 23\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the boundary condition to be used for the event *\r\n* price relative to the underlying price at the point the   *\r\n* complex event outcome takes effect as determined by the   *\r\n* ComplexEventPriceTimeType.                                *\r\n*************************************************************\r\n*/\r\nexport enum ComplexEventPriceBoundaryMethod {\r\n  LessThanComplexEventPrice1486 = 1,\r\n  LessThanOrEqualToComplexEventPrice1486 = 2,\r\n  EqualToComplexEventPrice1486 = 3,\r\n  GreaterThanOrEqualToComplexEventPrice1486 = 4,\r\n  GreaterThanComplexEventPrice1486 = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies when the complex event outcome takes effect. The  *\r\n* outcome of a complex event is a payout or barrier action as *\r\n* specified by the ComplexEventType(1484).                    *\r\n***************************************************************\r\n*/\r\nexport enum ComplexEventPriceTimeType {\r\n  Expiration = 1,\r\n  ImmediateAtAnyTime = 2,\r\n  SpecifiedDateTime = 3,\r\n  Close = 4,\r\n  Open = 5,\r\n  OfficialSettlementPrice = 6,\r\n  DerivativesClose = 7,\r\n  AsSpecifiedInMasterConfirmation = 8\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the condition between complex events when more    *\r\n* than one event is specified.                                *\r\n* Multiple barrier events would use an \"or\" condition since   *\r\n* only one can be effective at a given time. A set of digital *\r\n* range events would use an \"and\" condition since both        *\r\n* conditions must be in effect for a payout to result.        *\r\n***************************************************************\r\n*/\r\nexport enum ComplexEventCondition {\r\n  And = 1,\r\n  Or = 2\r\n}\r\n\r\n/*\r\n**************************************\r\n* Type of stream assignment request. *\r\n**************************************\r\n*/\r\nexport enum StreamAsgnReqType {\r\n  StreamAssignmentForNewCustomerS = 1,\r\n  StreamAssignmentForExistingCustomerS = 2\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Reason code for stream assignment request reject. *\r\n*****************************************************\r\n*/\r\nexport enum StreamAsgnRejReason {\r\n  UnknownClient = 0,\r\n  ExceedsMaximumSize = 1,\r\n  UnknownOrInvalidCurrencyPair = 2,\r\n  NoAvailableStream = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************\r\n* Type of acknowledgement. *\r\n****************************\r\n*/\r\nexport enum StreamAsgnAckType {\r\n  AssignmentAccepted = 0,\r\n  AssignmentRejected = 1\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Identifies the type or role of party that has been *\r\n* requested.                                         *\r\n******************************************************\r\n*/\r\nexport enum RequestedPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Result of a request as identified by the appropriate request *\r\n* ID field                                                     *\r\n****************************************************************\r\n*/\r\nexport enum RequestResult {\r\n  ValidRequest = 0,\r\n  InvalidOrUnsupportedRequest = 1,\r\n  NoDataFoundThatMatchSelectionCriteria = 2,\r\n  NotAuthorizedToRetrieveData = 3,\r\n  DataTemporarilyUnavailable = 4,\r\n  RequestForDataNotSupported = 5,\r\n  OtherFurtherInformationInRejectText1328Field = 99\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Used to specify the type of the party relationship. *\r\n*******************************************************\r\n*/\r\nexport enum PartyRelationship {\r\n  IsAlso = 0,\r\n  ClearsFor = 1,\r\n  ClearsThrough = 2,\r\n  TradesFor = 3,\r\n  TradesThrough = 4,\r\n  Sponsors = 5,\r\n  SponsoredThrough = 6,\r\n  ProvidesGuaranteeFor = 7,\r\n  IsGuaranteedBy = 8,\r\n  MemberOf = 9,\r\n  HasMembers = 10,\r\n  ProvidesMarketplaceFor = 11,\r\n  ParticipantOfMarketplace = 12,\r\n  CarriesPositionsFor = 13,\r\n  PostsTradesTo = 14,\r\n  EntersTradesFor = 15,\r\n  EntersTradesThrough = 16,\r\n  ProvidesQuotesTo = 17,\r\n  RequestsQuotesFrom = 18,\r\n  InvestsFor = 19,\r\n  InvestsThrough = 20,\r\n  BrokersTradesFor = 21,\r\n  BrokersTradesThrough = 22,\r\n  ProvidesTradingServicesFor = 23,\r\n  UsesTradingServicesOf = 24,\r\n  ApprovesOf = 25,\r\n  ApprovedBy = 26,\r\n  ParentFirmFor = 27,\r\n  SubsidiaryOf = 28,\r\n  RegulatoryOwnerOf = 29,\r\n  OwnedByRegulatory = 30,\r\n  Controls = 31,\r\n  IsControlledBy = 32,\r\n  LegalTitledOwnerOf = 33,\r\n  OwnedByLegalTitle = 34,\r\n  BeneficialOwnerOf = 35,\r\n  OwnedByBeneficial = 36,\r\n  SettlesFor = 37,\r\n  SettlesThrough = 38\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies the source of the PartyDetailAltID(1517) value. *\r\n**************************************************************\r\n*/\r\nexport enum PartyDetailAltIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n********************************************\r\n* Type of PartyDetailAltSubID(1520) value. *\r\n********************************************\r\n*/\r\nexport enum PartyDetailAltSubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Used to indicate the status of the trade submission (not the *\r\n* trade report)                                                *\r\n****************************************************************\r\n*/\r\nexport enum TrdAckStatus {\r\n  Accepted = 0,\r\n  Rejected = 1,\r\n  Received = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Used to specify the type of risk limit amount or position *\r\n* limit quantity or margin requirement amounts.             *\r\n*************************************************************\r\n*/\r\nexport enum RiskLimitType {\r\n  CreditLimit = 0,\r\n  GrossLimit = 1,\r\n  NetLimit = 2,\r\n  Exposure = 3,\r\n  LongLimit = 4,\r\n  ShortLimit = 5,\r\n  CashMargin = 6,\r\n  AdditionalMargin = 7,\r\n  TotalMargin = 8,\r\n  LimitConsumed = 9,\r\n  ClipSizeNotionalLimitPerTimePeriod = 10,\r\n  MaximumNotionalOrderSize = 11,\r\n  Dv01Pv01Limit = 12,\r\n  Cs01Limit = 13,\r\n  VolumeLimitPerTimePeriod = 14,\r\n  VolumeFilledAsPercentOfOrderedVolumePerTimePeriod = 15,\r\n  NotionalFilledAsPercentOfNotionalPerTimePeriod = 16,\r\n  TransactionExecutionLimitPerTimePeriod = 17\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Operator to perform on the instrument(s) specified *\r\n******************************************************\r\n*/\r\nexport enum InstrumentScopeOperator {\r\n  Include = 1,\r\n  Exclude = 2\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Used to limit instrument scope to specified security *\r\n* identifier source.                                   *\r\n* See SecurityIDSource(22) field for description.      *\r\n********************************************************\r\n*/\r\nexport enum InstrumentScopeSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Used to limit instrument scope to specified instrument *\r\n* product category.                                      *\r\n* See Product (460) field for description.               *\r\n**********************************************************\r\n*/\r\nexport enum InstrumentScopeProduct {\r\n  Agency = 1,\r\n  Commodity = 2,\r\n  Corporate = 3,\r\n  Currency = 4,\r\n  Equity = 5,\r\n  Government = 6,\r\n  Index = 7,\r\n  Loan = 8,\r\n  Moneymarket = 9,\r\n  Mortgage = 10,\r\n  Municipal = 11,\r\n  Other = 12,\r\n  Financing = 13\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Used to limit instrument scope to specified security type. *\r\n* See SecurityType(167) field for description).              *\r\n**************************************************************\r\n*/\r\nexport enum InstrumentScopeSecurityType {\r\n  EuroSupranationalCoupons = 'EUSUPRA',\r\n  CorporateBond = 'CORP',\r\n  ForeignExchangeContract = 'FOR',\r\n  CommonStock = 'CS',\r\n  Repurchase = 'REPO',\r\n  BradyBond = 'BRADY',\r\n  TermLoan = 'TERM',\r\n  BankersAcceptance = 'BA',\r\n  AssetBackedSecurities = 'ABS',\r\n  OtherAnticipationNotesBanGanEtc = 'AN',\r\n  MutualFund = 'MF',\r\n  FederalAgencyCoupon = 'FAC',\r\n  CorporatePrivatePlacement = 'CPP',\r\n  PreferredStock = 'PS',\r\n  Forward = 'FORWARD',\r\n  CanadianTreasuryNotes = 'CAN',\r\n  RevolverLoan = 'RVLV',\r\n  BankDepositoryNote = 'BDN',\r\n  CanadianMortgageBonds = 'CMB',\r\n  CertificateOfObligation = 'COFO',\r\n  MultilegInstrument = 'MLEG',\r\n  NonDeliverableForward = 'FXNDF',\r\n  Cap = 'CAP',\r\n  FederalAgencyDiscountNote = 'FADN',\r\n  ConvertibleBond = 'CB',\r\n  CreditDefaultSwap = 'CDS',\r\n  BuySellback = 'BUYSELL',\r\n  CanadianTreasuryBills = 'CTB',\r\n  RevolverTermLoan = 'RVLVTRM',\r\n  BankNotes = 'BN',\r\n  CorpMortgageBackedSecurities = 'CMBS',\r\n  CertificateOfParticipation = 'COFP',\r\n  NoSecurityType = 'NONE',\r\n  FxSpot = 'FXSPOT',\r\n  UsTreasuryNoteDeprecatedValueUseTnote = 'UST',\r\n  PrivateExportFunding = 'PEF',\r\n  DualCurrency = 'DUAL',\r\n  SecuritiesLoan = 'SECLOAN',\r\n  EuroSovereigns = 'EUSOV',\r\n  BridgeLoan = 'BRIDGE',\r\n  BillOfExchanges = 'BOX',\r\n  CollateralizedMortgageObligation = 'CMO',\r\n  GeneralObligationBonds = 'GO',\r\n  FxForward = 'FXFWD',\r\n  Collar = 'CLLR',\r\n  UsTreasuryBillDeprecatedValueUseTbill = 'USTB',\r\n  UsdSupranationalCoupons = 'SUPRA',\r\n  EuroCorporateBond = 'EUCORP',\r\n  SecuritiesPledge = 'SECPLEDGE',\r\n  CanadianProvincialBonds = 'PROV',\r\n  LetterOfCredit = 'LOFC',\r\n  CanadianMoneyMarkets = 'CAMM',\r\n  IoetteMortgage = 'IET',\r\n  MandatoryTender = 'MT',\r\n  FxSwap = 'FXSWAP',\r\n  CommoditySwap = 'CMDTYSWAP',\r\n  EuroCorporateFloatingRateNotes = 'EUFRN',\r\n  TreasuryBillNonUs = 'TB',\r\n  SwingLineFacility = 'SWING',\r\n  CertificateOfDeposit = 'CD',\r\n  MortgageBackedSecurities = 'MBS',\r\n  RevenueAnticipationNote = 'RAN',\r\n  WildcardEntryForUseOnSecurityDefinitionRequest = '?',\r\n  DeliveryVersusPledge = 'DVPLDG',\r\n  Exotic = 'EXOTIC',\r\n  UsCorporateFloatingRateNotes = 'FRN',\r\n  OptionsOnCombo = 'OOC',\r\n  UsTreasuryBond = 'TBOND',\r\n  DebtorInPossession = 'DINP',\r\n  CallLoans = 'CL',\r\n  MortgageInterestOnly = 'MIO',\r\n  RevenueBonds = 'REV',\r\n  Cash = 'CASH',\r\n  Floor = 'FLR',\r\n  CollateralBasket = 'COLLBSKT',\r\n  IndexedLinked = 'XLINKD',\r\n  InterestStripFromAnyBondOrNote = 'TINT',\r\n  Defaulted = 'DEFLTED',\r\n  CommercialPaper = 'CP',\r\n  MortgagePrincipalOnly = 'MPO',\r\n  SpecialAssessment = 'SPCLA',\r\n  ForwardRateAgreement = 'FRA',\r\n  StructuredNotes = 'STRUCT',\r\n  Future = 'FUT',\r\n  UsTreasuryBill = 'TBILL',\r\n  TreasuryInflationProtectedSecurities = 'TIPS',\r\n  Withdrawn = 'WITHDRN',\r\n  DepositNotes = 'DN',\r\n  MortgagePrivatePlacement = 'MPP',\r\n  SpecialObligation = 'SPCLO',\r\n  YankeeCorporateBond = 'YANK',\r\n  PrincipalStripOfACallableBondOrNote = 'TCAL',\r\n  Replaced = 'REPLACD',\r\n  EuroCertificateOfDeposit = 'EUCD',\r\n  MiscellaneousPassThrough = 'MPT',\r\n  SpecialTax = 'SPCLT',\r\n  DerivativeForward = 'FWD',\r\n  InterestRateSwap = 'IRS',\r\n  PrincipalStripFromANonCallableBondOrNote = 'TPRN',\r\n  Matured = 'MATURED',\r\n  EuroCommercialPaper = 'EUCP',\r\n  Pfandbriefe = 'PFAND',\r\n  TaxAnticipationNote = 'TAN',\r\n  TotalReturnSwap = 'TRS',\r\n  UsTreasuryNote = 'TNOTE',\r\n  AmendedRestated = 'AMENDED',\r\n  LiquidityNote = 'LQN',\r\n  ToBeAnnounced = 'TBA',\r\n  TaxAllocation = 'TAXA',\r\n  LoanLease = 'LOANLEASE',\r\n  Retired = 'RETIRED',\r\n  MediumTermNotes = 'MTN',\r\n  TaxExemptCommercialPaper = 'TECP',\r\n  OptionsOnFutures = 'OOF',\r\n  Overnight = 'ONITE',\r\n  TaxableMunicipalCp = 'TMCP',\r\n  OptionsOnPhysicalUseNotRecommended = 'OOP',\r\n  PromissoryNote = 'PN',\r\n  ShortTermLoanNote = 'STN',\r\n  TaxRevenueAnticipationNote = 'TRAN',\r\n  Option = 'OPT',\r\n  PlazosFijos = 'PZFJ',\r\n  VariableRateDemandNote = 'VRDN',\r\n  SecuredLiquidityNote = 'SLQN',\r\n  Warrant = 'WAR',\r\n  SpotForward = 'SPOTFWD',\r\n  TimeDeposit = 'TD',\r\n  SwapOption = 'SWAPTION',\r\n  Transmission = 'XMISSION',\r\n  TermLiquidityNote = 'TLQN',\r\n  GeneralTypeForAContractBasedOnAnEstablishedIndex = 'INDEX',\r\n  ExtendedCommNote = 'XCN',\r\n  BondBasket = 'BDBSKT',\r\n  YankeeCertificateOfDeposit = 'YCD',\r\n  ContractForDifference = 'CFD',\r\n  CorrelationSwap = 'CRLTNSWAP',\r\n  DividendSwap = 'DVDNDSWAP',\r\n  EquityBasket = 'EQBSKT',\r\n  EquityForward = 'EQFWD',\r\n  ReturnSwap = 'RTRNSWAP',\r\n  VarianceSwap = 'VARSWAP'\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Used to limit instrument scope to puts or calls. *\r\n* See PutOrCall(201) field for description.        *\r\n****************************************************\r\n*/\r\nexport enum InstrumentScopePutOrCall {\r\n  Put = 0,\r\n  Call = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Used to limit instrument scope to specified settlement type. *\r\n* See SettlType(63) field for description.                     *\r\n****************************************************************\r\n*/\r\nexport enum InstrumentScopeSettlType {\r\n  RegularFxSpotSettlementT1OrT2DependingOnCurrency = '0',\r\n  CashTodT0 = '1',\r\n  NextDayTomT1 = '2',\r\n  T2 = '3',\r\n  T3 = '4',\r\n  T4 = '5',\r\n  Future = '6',\r\n  WhenAndIfIssued = '7',\r\n  SellersOption = '8',\r\n  T5 = '9',\r\n  BrokenDate = 'B',\r\n  FxSpotNextSettlementSpot1AkaNextDay = 'C'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Identifies the source of the RelatedPartyDetailID(1563). *\r\n************************************************************\r\n*/\r\nexport enum RelatedPartyDetailIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Identifies the type or role of the    *\r\n* RelatedPartyDetailID(1563) specified. *\r\n*****************************************\r\n*/\r\nexport enum RelatedPartyDetailRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n************************************************\r\n* Type of RelatedPartyDetailSubID(1567) value. *\r\n************************************************\r\n*/\r\nexport enum RelatedPartyDetailSubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies the source of the RelatedPartyDetailAltID(1570) *\r\n* value.                                                     *\r\n**************************************************************\r\n*/\r\nexport enum RelatedPartyDetailAltIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Type of RelatedPartyDetailAltSubID(1573) value. *\r\n***************************************************\r\n*/\r\nexport enum RelatedPartyDetailAltSubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n*********************************************\r\n* The subclassification or subtype of swap. *\r\n*********************************************\r\n*/\r\nexport enum SwapSubClass {\r\n  Amortizing = 'AMTZ',\r\n  Compounding = 'COMP'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Allows classification of instruments according to a set of *\r\n* high level reasons. Classification reasons describe the    *\r\n* classes in which the instrument participates.              *\r\n**************************************************************\r\n*/\r\nexport enum SecurityClassificationReason {\r\n  Fee = 0,\r\n  CreditControls = 1,\r\n  Margin = 2,\r\n  EntitlementEligibility = 3,\r\n  MarketData = 4,\r\n  AccountSelection = 5,\r\n  DeliveryProcess = 6,\r\n  Sector = 7\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the reason for an amount type when reported on a  *\r\n* position. Useful when multiple instances of the same amount *\r\n* type are reported.                                          *\r\n***************************************************************\r\n*/\r\nexport enum PosAmtReason {\r\n  OptionsSettlement = 0,\r\n  PendingErosionAdjustment = 1,\r\n  FinalErosionAdjustment = 2,\r\n  TearUpCouponAmount = 3,\r\n  PriceAlignmentInterest = 4,\r\n  DeliveryInvoiceCharges = 5,\r\n  DeliveryStorageCharges = 6\r\n}\r\n\r\n/*\r\n********************************\r\n* Type of leg position amount. *\r\n********************************\r\n*/\r\nexport enum LegPosAmtType {\r\n  CashAmountCorporateEvent = 'CASH',\r\n  CashResidualAmount = 'CRES',\r\n  FinalMarkToMarketAmount = 'FMTM',\r\n  IncrementalMarkToMarket = 'IMTM',\r\n  PremiumAmount = 'PREM',\r\n  StartOfDayMarkToMarket = 'SMTM',\r\n  TradeVariationAmount = 'TVAR',\r\n  ValueAdjustedAmount = 'VADJ',\r\n  SettlementValue = 'SETL',\r\n  InitialTradeCouponAmount = 'ICPN',\r\n  AccruedCouponAmount = 'ACPN',\r\n  CouponAmount = 'CPN',\r\n  IncrementalAccruedCoupon = 'IACPN',\r\n  CollateralizedMarkToMarket = 'CMTM',\r\n  IncrementalCollateralizedMarkToMarket = 'ICMTM',\r\n  CompensationAmount = 'DLV',\r\n  TotalBankedAmount = 'BANK',\r\n  TotalCollateralizedAmount = 'COLAT',\r\n  LongPairedSwapOrSwaptionNotionalValue = 'LSNV',\r\n  ShortPairedSwapOrSwaptionNotionalValue = 'SSNV',\r\n  StartOfDayAccruedCoupon = 'SACPN',\r\n  NetPresentValue = 'NPV',\r\n  StartOfDayNetPresentValue = 'SNPV',\r\n  NetCashFlow = 'NCF',\r\n  PresentValueOfAllFees = 'PVFEES',\r\n  PresentValueOfOneBasisPoints = 'PV01',\r\n  TheFiveYearEquivalentNotionalAmount = '5YREN',\r\n  UndiscountedMarkToMarket = 'UMTM',\r\n  MarkToModel = 'MTD',\r\n  MarkToMarketVariance = 'VMTM',\r\n  MarkToModelVariance = 'VMTD',\r\n  UpfrontPayment = 'UPFRNT'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the reason for an amount type when reported on a  *\r\n* position. Useful when multiple instances of the same amount *\r\n* type are reported.                                          *\r\n***************************************************************\r\n*/\r\nexport enum LegPosAmtReason {\r\n  OptionsSettlement = 0,\r\n  PendingErosionAdjustment = 1,\r\n  FinalErosionAdjustment = 2,\r\n  TearUpCouponAmount = 3,\r\n  PriceAlignmentInterest = 4,\r\n  DeliveryInvoiceCharges = 5,\r\n  DeliveryStorageCharges = 6\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Type of quantity specified in LegQty field.                  *\r\n* LegContractMultiplier (614) is required when LegQtyType = 1  *\r\n* (Contracts). LegUnitOfMeasure (tag 999) and LegTimeUnit (tag *\r\n* 1001) are required when LegQtyType = 2 (Units of Measure per *\r\n* Time Unit). LegQtyType can be different for each leg.        *\r\n****************************************************************\r\n*/\r\nexport enum LegQtyType {\r\n  UnitsSharesParCurrency = 0,\r\n  Contracts = 1,\r\n  UnitOfMeasurePerTimeUnit = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates to recipient whether trade is clearing at          *\r\n* execution prices LastPx(tag 31) or alternate clearing prices *\r\n* SideClearingTradePrice(tag 1597).                            *\r\n****************************************************************\r\n*/\r\nexport enum SideClearingTradePriceType {\r\n  TradeClearingAtExecutionPrice = 0,\r\n  TradeClearingAtAlternateClearingPrice = 1\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Identifies the reason  a security definition request is *\r\n* being rejected.                                         *\r\n***********************************************************\r\n*/\r\nexport enum SecurityRejectReason {\r\n  InvalidInstrumentRequested = 1,\r\n  InstrumentAlreadyExists = 2,\r\n  RequestTypeNotSupported = 3,\r\n  SystemUnavailableForInstrumentCreation = 4,\r\n  IneligibleInstrumentGroup = 5,\r\n  InstrumentIdUnavailable = 6,\r\n  InvalidOrMissingDataOnOptionLeg = 7,\r\n  InvalidOrMissingDataOnFutureLeg = 8,\r\n  InvalidOrMissingDataOnFxLeg = 10,\r\n  InvalidLegPriceSpecified = 11,\r\n  InvalidInstrumentStructureSpecified = 12\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Indicates whether a message was queued as a result of *\r\n* throttling.                                           *\r\n*********************************************************\r\n*/\r\nexport enum ThrottleStatus {\r\n  ThrottleLimitNotExceededNotQueued = 0,\r\n  QueuedDueToThrottleLimitExceeded = 1\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Action to take should throttle limit be exceeded. *\r\n*****************************************************\r\n*/\r\nexport enum ThrottleAction {\r\n  QueueInbound = 0,\r\n  QueueOutbound = 1,\r\n  Reject = 2,\r\n  Disconnect = 3,\r\n  Warning = 4\r\n}\r\n\r\n/*\r\n*********************\r\n* Type of throttle. *\r\n*********************\r\n*/\r\nexport enum ThrottleType {\r\n  InboundRate = 0,\r\n  OutstandingRequests = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Units in which ThrottleTimeInterval is expressed. Uses same *\r\n* enumerations as OrderDelayUnit(1429).                       *\r\n***************************************************************\r\n*/\r\nexport enum ThrottleTimeUnit {\r\n  SecondsDefaultIfNotSpecified = 0,\r\n  TenthsOfASecond = 1,\r\n  HundredthsOfASecond = 2,\r\n  Milliseconds = 3,\r\n  Microseconds = 4,\r\n  Nanoseconds = 5,\r\n  Minutes = 10,\r\n  Hours = 11,\r\n  Days = 12,\r\n  Weeks = 13,\r\n  Months = 14,\r\n  Years = 15\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* The type of assignment being affected in the Stream *\r\n* Assignment Report.                                  *\r\n*******************************************************\r\n*/\r\nexport enum StreamAsgnType {\r\n  Assignment = 1,\r\n  Rejected = 2,\r\n  TerminateUnassign = 3\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* The MsgType (35) of the FIX message being referenced. *\r\n*********************************************************\r\n*/\r\nexport enum ThrottleMsgType {\r\n  Heartbeat = '0',\r\n  TestRequest = '1',\r\n  ResendRequest = '2',\r\n  Reject = '3',\r\n  SequenceReset = '4',\r\n  Logout = '5',\r\n  Ioi = '6',\r\n  Advertisement = '7',\r\n  ExecutionReport = '8',\r\n  OrderCancelReject = '9',\r\n  Logon = 'A',\r\n  News = 'B',\r\n  Email = 'C',\r\n  NewOrderSingle = 'D',\r\n  NewOrderList = 'E',\r\n  OrderCancelRequest = 'F',\r\n  OrderCancelReplaceRequest = 'G',\r\n  OrderStatusRequest = 'H',\r\n  AllocationInstruction = 'J',\r\n  ListCancelRequest = 'K',\r\n  ListExecute = 'L',\r\n  ListStatusRequest = 'M',\r\n  ListStatus = 'N',\r\n  AllocationInstructionAck = 'P',\r\n  DontKnowTrade = 'Q',\r\n  QuoteRequest = 'R',\r\n  Quote = 'S',\r\n  SettlementInstructions = 'T',\r\n  MarketDataRequest = 'V',\r\n  MarketDataSnapshotFullRefresh = 'W',\r\n  MarketDataIncrementalRefresh = 'X',\r\n  MarketDataRequestReject = 'Y',\r\n  QuoteCancel = 'Z',\r\n  QuoteStatusRequest = 'a',\r\n  MassQuoteAck = 'b',\r\n  SecurityDefinitionRequest = 'c',\r\n  SecurityDefinition = 'd',\r\n  SecurityStatusRequest = 'e',\r\n  SecurityStatus = 'f',\r\n  TradingSessionStatusRequest = 'g',\r\n  TradingSessionStatus = 'h',\r\n  MassQuote = 'i',\r\n  BusinessMessageReject = 'j',\r\n  BidRequest = 'k',\r\n  BidResponse = 'l',\r\n  ListStrikePrice = 'm',\r\n  XmLnonFix = 'n',\r\n  RegistrationInstructions = 'o',\r\n  RegistrationInstructionsResponse = 'p',\r\n  OrderMassCancelRequest = 'q',\r\n  OrderMassCancelReport = 'r',\r\n  NewOrderCross = 's',\r\n  CrossOrderCancelReplaceRequest = 't',\r\n  CrossOrderCancelRequest = 'u',\r\n  SecurityTypeRequest = 'v',\r\n  SecurityTypes = 'w',\r\n  SecurityListRequest = 'x',\r\n  SecurityList = 'y',\r\n  DerivativeSecurityListRequest = 'z',\r\n  DerivativeSecurityList = 'AA',\r\n  NewOrderMultileg = 'AB',\r\n  MultilegOrderCancelReplace = 'AC',\r\n  TradeCaptureReportRequest = 'AD',\r\n  TradeCaptureReport = 'AE',\r\n  OrderMassStatusRequest = 'AF',\r\n  QuoteRequestReject = 'AG',\r\n  RfqRequest = 'AH',\r\n  QuoteStatusReport = 'AI',\r\n  QuoteResponse = 'AJ',\r\n  Confirmation = 'AK',\r\n  PositionMaintenanceRequest = 'AL',\r\n  PositionMaintenanceReport = 'AM',\r\n  RequestForPositions = 'AN',\r\n  RequestForPositionsAck = 'AO',\r\n  PositionReport = 'AP',\r\n  TradeCaptureReportRequestAck = 'AQ',\r\n  TradeCaptureReportAck = 'AR',\r\n  AllocationReport = 'AS',\r\n  AllocationReportAck = 'AT',\r\n  ConfirmationAck = 'AU',\r\n  SettlementInstructionRequest = 'AV',\r\n  AssignmentReport = 'AW',\r\n  CollateralRequest = 'AX',\r\n  CollateralAssignment = 'AY',\r\n  CollateralResponse = 'AZ',\r\n  CollateralReport = 'BA',\r\n  CollateralInquiry = 'BB',\r\n  NetworkCounterpartySystemStatusRequest = 'BC',\r\n  NetworkCounterpartySystemStatusResponse = 'BD',\r\n  UserRequest = 'BE',\r\n  UserResponse = 'BF',\r\n  CollateralInquiryAck = 'BG',\r\n  ConfirmationRequest = 'BH',\r\n  ContraryIntentionReport = 'BO',\r\n  SecurityDefinitionUpdateReport = 'BP',\r\n  SecurityListUpdateReport = 'BK',\r\n  AdjustedPositionReport = 'BL',\r\n  AllocationInstructionAlert = 'BM',\r\n  ExecutionAck = 'BN',\r\n  TradingSessionList = 'BJ',\r\n  TradingSessionListRequest = 'BI',\r\n  SettlementObligationReport = 'BQ',\r\n  DerivativeSecurityListUpdateReport = 'BR',\r\n  TradingSessionListUpdateReport = 'BS',\r\n  MarketDefinitionRequest = 'BT',\r\n  MarketDefinition = 'BU',\r\n  MarketDefinitionUpdateReport = 'BV',\r\n  ApplicationMessageRequest = 'BW',\r\n  ApplicationMessageRequestAck = 'BX',\r\n  ApplicationMessageReport = 'BY',\r\n  OrderMassActionReport = 'BZ',\r\n  OrderMassActionRequest = 'CA',\r\n  UserNotification = 'CB',\r\n  StreamAssignmentRequest = 'CC',\r\n  StreamAssignmentReport = 'CD',\r\n  StreamAssignmentReportAck = 'CE',\r\n  PartyDetailsListRequest = 'CF',\r\n  PartyDetailsListReport = 'CG',\r\n  MarginRequirementInquiry = 'CH',\r\n  MarginRequirementInquiryAck = 'CI',\r\n  MarginRequirementReport = 'CJ',\r\n  PartyDetailsListUpdateReport = 'CK',\r\n  PartyRiskLimitsRequest = 'CL',\r\n  PartyRiskLimitsReport = 'CM',\r\n  SecurityMassStatusRequest = 'CN',\r\n  SecurityMassStatus = 'CO',\r\n  AccountSummaryReport = 'CQ',\r\n  PartyRiskLimitsUpdateReport = 'CR',\r\n  PartyRiskLimitsDefinitionRequest = 'CS',\r\n  PartyRiskLimitsDefinitionRequestAck = 'CT',\r\n  PartyEntitlementsRequest = 'CU',\r\n  PartyEntitlementsReport = 'CV',\r\n  QuoteAck = 'CW',\r\n  PartyDetailsDefinitionRequest = 'CX',\r\n  PartyDetailsDefinitionRequestAck = 'CY',\r\n  PartyEntitlementsUpdateReport = 'CZ',\r\n  PartyEntitlementsDefinitionRequest = 'DA',\r\n  PartyEntitlementsDefinitionRequestAck = 'DB',\r\n  TradeMatchReport = 'DC',\r\n  TradeMatchReportAck = 'DD',\r\n  PartyRiskLimitsReportAck = 'DE',\r\n  PartyRiskLimitCheckRequest = 'DF',\r\n  PartyRiskLimitCheckRequestAck = 'DG',\r\n  PartyActionRequest = 'DH',\r\n  PartyActionReport = 'DI',\r\n  MassOrder = 'DJ',\r\n  MassOrderAck = 'DK',\r\n  PositionTransferInstruction = 'DL',\r\n  PositionTransferInstructionAck = 'DM',\r\n  PositionTransferReport = 'DN',\r\n  MarketDataStatisticsRequest = 'DO',\r\n  MarketDataStatisticsReport = 'DP',\r\n  CollateralReportAck = 'DQ',\r\n  MarketDataReport = 'DR',\r\n  CrossRequest = 'DS',\r\n  CrossRequestAck = 'DT'\r\n}\r\n\r\n/*\r\n***************************************\r\n* Matching Instruction for the order. *\r\n***************************************\r\n*/\r\nexport enum MatchInst {\r\n  Match = 1,\r\n  DoNotMatch = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Defines the scope of TriggerAction(1101) when it is set to *\r\n* \"cancel\" (3).                                              *\r\n**************************************************************\r\n*/\r\nexport enum TriggerScope {\r\n  ThisOrderDefault = 0,\r\n  OtherOrderUseRefId = 1,\r\n  AllOtherOrdersForTheGivenSecurity = 2,\r\n  AllOtherOrdersForTheGivenSecurityAndPrice = 3,\r\n  AllOtherOrdersForTheGivenSecurityAndSide = 4,\r\n  AllOtherOrdersForTheGivenSecurityPriceAndSide = 5\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Identifies the type of limit amount expressed in *\r\n* LastLimitAmt(1632) and LimitAmtRemaining(1633).  *\r\n****************************************************\r\n*/\r\nexport enum LimitAmtType {\r\n  CreditLimit = 0,\r\n  GrossPositionLimit = 1,\r\n  NetPositionLimit = 2,\r\n  RiskExposureLimit = 3,\r\n  LongPositionLimit = 4,\r\n  ShortPositionLimit = 5\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Qualifier for MarginRequirementInquiry to identify a *\r\n* specific report.                                     *\r\n********************************************************\r\n*/\r\nexport enum MarginReqmtInqQualifier {\r\n  Summary = 0,\r\n  Detail = 1,\r\n  ExcessDeficit = 2,\r\n  NetPosition = 3\r\n}\r\n\r\n/*\r\n************************************\r\n* Type of MarginRequirementReport. *\r\n************************************\r\n*/\r\nexport enum MarginReqmtRptType {\r\n  Summary = 0,\r\n  Detail = 1,\r\n  ExcessDeficit = 2\r\n}\r\n\r\n/*\r\n***************************************\r\n* Status of MarginRequirementInquiry. *\r\n***************************************\r\n*/\r\nexport enum MarginReqmtInqStatus {\r\n  Accepted = 0,\r\n  AcceptedWithWarnings = 1,\r\n  Completed = 2,\r\n  CompletedWithWarnings = 3,\r\n  Rejected = 4\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Result returned in response to MarginRequirementInquiry. *\r\n************************************************************\r\n*/\r\nexport enum MarginReqmtInqResult {\r\n  SuccessfulDefault = 0,\r\n  InvalidOrUnknownInstrument = 1,\r\n  InvalidOrUnknownMarginClass = 2,\r\n  InvalidParties = 3,\r\n  InvalidTransportTypeRequested = 4,\r\n  InvalidDestinationRequested = 5,\r\n  NoMarginRequirementFound = 6,\r\n  MarginRequirementInquiryQualifierNotSupported = 7,\r\n  UnauthorizedForMarginRequirementInquiry = 8,\r\n  OtherFurtherInformationInText58Field = 99\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Type of margin requirement amount being specified. *\r\n******************************************************\r\n*/\r\nexport enum MarginAmtType {\r\n  AdditionalMargin = 1,\r\n  AdjustedMargin = 2,\r\n  UnadjustedMargin = 3,\r\n  BinaryAddOnAmount = 4,\r\n  CashBalanceAmount = 5,\r\n  ConcentrationMargin = 6,\r\n  CoreMargin = 7,\r\n  DeliveryMargin = 8,\r\n  DiscretionaryMargin = 9,\r\n  FuturesSpreadMargin = 10,\r\n  InitialMargin = 11,\r\n  LiquidatingMargin = 12,\r\n  MarginCallAmount = 13,\r\n  MarginDeficitAmountShortfall = 14,\r\n  MarginExcessAmountSurplus = 15,\r\n  OptionPremiumAmount = 16,\r\n  PremiumMargin = 17,\r\n  ReserveMargin = 18,\r\n  SecurityCollateralAmount = 19,\r\n  StressTestAddOnAmount = 20,\r\n  SuperMargin = 21,\r\n  TotalMargin = 22,\r\n  VariationMargin = 23,\r\n  SecondaryVariationMargin = 24,\r\n  RolledUpMarginDeficit = 25,\r\n  SpreadResponseMargin = 26,\r\n  SystemicRiskMargin = 27,\r\n  CurveRiskMargin = 28,\r\n  IndexSpreadRiskMargin = 29,\r\n  SectorRiskMargin = 30,\r\n  JumpToDefaultRiskMargin = 31,\r\n  BasisRiskMargin = 32,\r\n  InterestRateRiskMargin = 33,\r\n  JumpToHealthRiskMargin = 34,\r\n  OtherRiskMargin = 35\r\n}\r\n\r\n/*\r\n***************************************\r\n* The type of instrument relationship *\r\n***************************************\r\n*/\r\nexport enum RelatedInstrumentType {\r\n  HedgesForInstrument = 1,\r\n  Underlier = 2,\r\n  EquityEquivalent = 3,\r\n  NearestExchangeTradedContract = 4,\r\n  RetailEquivalentOfWholesaleInstrument = 5,\r\n  Leg = 6\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies class or source of the RelatedSecurityID (1650) *\r\n* value.                                                     *\r\n**************************************************************\r\n*/\r\nexport enum RelatedSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Indicates market maker participation in security. *\r\n*****************************************************\r\n*/\r\nexport enum MarketMakerActivity {\r\n  NoParticipation = 0,\r\n  BuyParticipation = 1,\r\n  SellParticipation = 2,\r\n  BothBuyAndSellParticipation = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Identifies the source of the RequestingPartyID(1658) value. *\r\n***************************************************************\r\n*/\r\nexport enum RequestingPartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies the type or role of the RequestingPartyID(1658) *\r\n* specified.                                                 *\r\n**************************************************************\r\n*/\r\nexport enum RequestingPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Type of RequestingPartySubID(1662) value. *\r\n*********************************************\r\n*/\r\nexport enum RequestingPartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Indicates the status of the party identified with *\r\n* PartyDetailID(1691).                              *\r\n*****************************************************\r\n*/\r\nexport enum PartyDetailStatus {\r\n  ActiveDefaultIfNotSpecified = 0,\r\n  Suspended = 1,\r\n  Halted = 2\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Qualifies the value of PartyDetailRole(1693). *\r\n*************************************************\r\n*/\r\nexport enum PartyDetailRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Qualifies the value of RelatedPartyRole(1565) *\r\n*************************************************\r\n*/\r\nexport enum RelatedPartyDetailRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Identifies the trading status applicable to a group of *\r\n* instruments.                                           *\r\n**********************************************************\r\n*/\r\nexport enum SecurityMassTradingStatus {\r\n  OpeningDelay = 1,\r\n  TradingHalt = 2,\r\n  Resume = 3,\r\n  NoOpenNoResume = 4,\r\n  PriceIndication = 5,\r\n  TradingRangeIndication = 6,\r\n  MarketImbalanceBuy = 7,\r\n  MarketImbalanceSell = 8,\r\n  MarketOnCloseImbalanceBuy = 9,\r\n  MarketOnCloseImbalanceSell = 10,\r\n  NoMarketImbalance = 12,\r\n  NoMarketOnCloseImbalance = 13,\r\n  ItsPreOpening = 14,\r\n  NewPriceIndication = 15,\r\n  TradeDisseminationTime = 16,\r\n  ReadyToTradeStartOfSession = 17,\r\n  NotAvailableForTradingEndOfSession = 18,\r\n  NotTradedOnThisMarket = 19,\r\n  UnknownOrInvalid = 20,\r\n  PreOpen = 21,\r\n  OpeningRotation = 22,\r\n  FastMarket = 23,\r\n  PreCrossSystemIsInAPreCrossStateAllowingMarketToRespondToEitherSideOfCross = 24,\r\n  CrossSystemHasCrossedAPercentageOfTheOrdersAndAllowsMarketToRespondPriorToCrossingRemainingPortion = 25,\r\n  PostClose = 26,\r\n  NoCancel = 27\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Identifies an event related to the mass trading status. *\r\n***********************************************************\r\n*/\r\nexport enum SecurityMassTradingEvent {\r\n  OrderImbalanceAuctionIsExtended = 1,\r\n  TradingResumesAfterHalt = 2,\r\n  PriceVolatilityInterruption = 3,\r\n  ChangeOfTradingSession = 4,\r\n  ChangeOfTradingSubsession = 5,\r\n  ChangeOfSecurityTradingStatus = 6,\r\n  ChangeOfBookType = 7,\r\n  ChangeOfMarketDepth = 8,\r\n  CorporateAction = 9\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Denotes the reason for the Opening Delay or Trading halt of *\r\n* a group of securities.                                      *\r\n***************************************************************\r\n*/\r\nexport enum MassHaltReason {\r\n  NewsDissemination = 0,\r\n  OrderInflux = 1,\r\n  OrderImbalance = 2,\r\n  AdditionalInformation = 3,\r\n  NewsPending = 4,\r\n  EquipmentChangeover = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies the trading status applicable to the instrument *\r\n* in the market data message.                                *\r\n**************************************************************\r\n*/\r\nexport enum MDSecurityTradingStatus {\r\n  OpeningDelay = 1,\r\n  TradingHalt = 2,\r\n  Resume = 3,\r\n  NoOpenNoResume = 4,\r\n  PriceIndication = 5,\r\n  TradingRangeIndication = 6,\r\n  MarketImbalanceBuy = 7,\r\n  MarketImbalanceSell = 8,\r\n  MarketOnCloseImbalanceBuy = 9,\r\n  MarketOnCloseImbalanceSell = 10,\r\n  NoMarketImbalance = 12,\r\n  NoMarketOnCloseImbalance = 13,\r\n  ItsPreOpening = 14,\r\n  NewPriceIndication = 15,\r\n  TradeDisseminationTime = 16,\r\n  ReadyToTradeStartOfSession = 17,\r\n  NotAvailableForTradingEndOfSession = 18,\r\n  NotTradedOnThisMarket = 19,\r\n  UnknownOrInvalid = 20,\r\n  PreOpen = 21,\r\n  OpeningRotation = 22,\r\n  FastMarket = 23,\r\n  PreCrossSystemIsInAPreCrossStateAllowingMarketToRespondToEitherSideOfCross = 24,\r\n  CrossSystemHasCrossedAPercentageOfTheOrdersAndAllowsMarketToRespondPriorToCrossingRemainingPortion = 25,\r\n  PostClose = 26,\r\n  NoCancel = 27\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Denotes the reason for the Opening Delay or Trading Halt. *\r\n*************************************************************\r\n*/\r\nexport enum MDHaltReason {\r\n  NewsDissemination = 0,\r\n  OrderInflux = 1,\r\n  OrderImbalance = 2,\r\n  AdditionalInformation = 3,\r\n  NewsPending = 4,\r\n  EquipmentChangeover = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Describes action recipient should take if a throttle limit *\r\n* were exceeded.                                             *\r\n**************************************************************\r\n*/\r\nexport enum ThrottleInst {\r\n  RejectIfThrottleLimitExceeded = 0,\r\n  QueueIfThrottleLimitExceeded = 1\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Indicates whether a message decrements the number of *\r\n* outstanding requests, e.g. one where ThrottleType =  *\r\n* Outstanding Requests.                                *\r\n********************************************************\r\n*/\r\nexport enum ThrottleCountIndicator {\r\n  OutstandingRequestsUnchanged = 0,\r\n  OutstandingRequestsDecreased = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicates whether a restriction applies to short selling a *\r\n* security.                                                  *\r\n**************************************************************\r\n*/\r\nexport enum ShortSaleRestriction {\r\n  NoRestrictions = 0,\r\n  SecurityIsNotShortable = 1,\r\n  SecurityNotShortableAtOrBelowTheBestBid = 2,\r\n  SecurityIsNotShortableWithoutPreBorrow = 3\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicates the reason a short sale order is exempted from   *\r\n* applicable regulation (e.g. Reg SHO addendum (b)(1) in the *\r\n* U.S.).                                                     *\r\n**************************************************************\r\n*/\r\nexport enum ShortSaleExemptionReason {\r\n  ExemptionReasonUnknown = 0,\r\n  IncomeSellShortExempt = 1,\r\n  AboveNationalBestBidBrokerDealerProvision = 2,\r\n  DelayedDelivery = 3,\r\n  OddLot = 4,\r\n  DomesticArbitrage = 5,\r\n  InternationalArbitrage = 6,\r\n  UnderwriterOrSyndicateDistribution = 7,\r\n  RisklessPrincipal = 8,\r\n  Vwap = 9\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicates the reason a short sale is exempted from         *\r\n* applicable regulation (e.g. Reg SHO addendum (b)(1) in the *\r\n* U.S.)                                                      *\r\n**************************************************************\r\n*/\r\nexport enum LegShortSaleExemptionReason {\r\n  ExemptionReasonUnknown = 0,\r\n  IncomeSellShortExempt = 1,\r\n  AboveNationalBestBidBrokerDealerProvision = 2,\r\n  DelayedDelivery = 3,\r\n  OddLot = 4,\r\n  DomesticArbitrage = 5,\r\n  InternationalArbitrage = 6,\r\n  UnderwriterOrSyndicateDistribution = 7,\r\n  RisklessPrincipal = 8,\r\n  Vwap = 9\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicates the reason a short sale is exempted from         *\r\n* applicable regulation (e.g. Reg SHO addendum (b)(1) in the *\r\n* U.S.)                                                      *\r\n**************************************************************\r\n*/\r\nexport enum SideShortSaleExemptionReason {\r\n  ExemptionReasonUnknown = 0,\r\n  IncomeSellShortExempt = 1,\r\n  AboveNationalBestBidBrokerDealerProvision = 2,\r\n  DelayedDelivery = 3,\r\n  OddLot = 4,\r\n  DomesticArbitrage = 5,\r\n  InternationalArbitrage = 6,\r\n  UnderwriterOrSyndicateDistribution = 7,\r\n  RisklessPrincipal = 8,\r\n  Vwap = 9\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Source of the identifier of the PartyDetailID(1691) *\r\n* specified.                                          *\r\n*******************************************************\r\n*/\r\nexport enum PartyDetailIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Identifies the type or role of PartyDetailID(1691) *\r\n* specified.                                         *\r\n******************************************************\r\n*/\r\nexport enum PartyDetailRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Type of PartyDetailSubID(1695) value. *\r\n*****************************************\r\n*/\r\nexport enum PartyDetailSubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Used to express the unit of measure (UOM) of the price if *\r\n* different from the contract.                              *\r\n*************************************************************\r\n*/\r\nexport enum StrikeUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***************************************\r\n* Identifies the origin of the order. *\r\n***************************************\r\n*/\r\nexport enum OrderOrigination {\r\n  OrderReceivedFromACustomer = 1,\r\n  OrderReceivedFromWithinTheFirm = 2,\r\n  OrderReceivedFromAnotherBrokerDealer = 3,\r\n  OrderReceivedFromACustomerOrOriginatedWithTheFirm = 4,\r\n  OrderReceivedFromADirectAccessOrSponsoredAccessCustomer = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* An indicator to override the normal procedure to roll up *\r\n* allocations for the same take-up firm.                   *\r\n************************************************************\r\n*/\r\nexport enum AllocationRollupInstruction {\r\n  RollUp = 0,\r\n  DoNotRollUp = 1\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Identifies the status of a reversal transaction. *\r\n****************************************************\r\n*/\r\nexport enum AllocReversalStatus {\r\n  Completed = 0,\r\n  Refused = 1,\r\n  Cancelled = 2\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Type of reference obligation for credit derivatives *\r\n* contracts.                                          *\r\n*******************************************************\r\n*/\r\nexport enum ObligationType {\r\n  Bond = '0',\r\n  ConvertibleBond = '1',\r\n  Mortgage = '2',\r\n  Loan = '3'\r\n}\r\n\r\n/*\r\n**************************************************\r\n* Method used for negotiation of contract price. *\r\n**************************************************\r\n*/\r\nexport enum TradePriceNegotiationMethod {\r\n  PercentOfPar = 0,\r\n  DealSpread = 1,\r\n  UpfrontPoints = 2,\r\n  UpfrontAmount = 3,\r\n  PercentOfParAndUpfrontAmount = 4,\r\n  DealSpreadAndUpfrontAmount = 5,\r\n  UpfrontPointsAndUpfrontAmount = 6\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Type of price used to determine upfront payment for swaps *\r\n* contracts.                                                *\r\n*************************************************************\r\n*/\r\nexport enum UpfrontPriceType {\r\n  PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome = 1,\r\n  FixedAmountAbsoluteValue = 3\r\n}\r\n\r\n/*\r\n***********************************\r\n* Type of risk limit information. *\r\n***********************************\r\n*/\r\nexport enum RiskLimitRequestType {\r\n  DefinitionsDefault = 1,\r\n  Utilization = 2,\r\n  DefinitionsAndUtilization = 3\r\n}\r\n\r\n/*\r\n********************************************\r\n* Result of risk limit definition request. *\r\n********************************************\r\n*/\r\nexport enum RiskLimitRequestResult {\r\n  SuccessfulDefault = 0,\r\n  InvalidPartyIes = 1,\r\n  InvalidRelatedPartyIes = 2,\r\n  InvalidRiskLimitTypeS = 3,\r\n  InvalidRiskLimitIdS = 4,\r\n  InvalidRiskLimitAmountS = 5,\r\n  InvalidRiskWarningLevelActionS = 6,\r\n  InvalidRiskInstrumentScopeS = 7,\r\n  RiskLimitActionsNotSupported = 8,\r\n  WarningLevelsNotSupported = 9,\r\n  WarningLevelActionsNotSupported = 10,\r\n  RiskInstrumentScopeNotSupported = 11,\r\n  RiskLimitNotApprovedForPartyIes = 12,\r\n  RiskLimitAlreadyDefinedForPartyIes = 13,\r\n  InstrumentNotApprovedForPartyIes = 14,\r\n  NotAuthorized = 98,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n********************************************\r\n* Status of risk limit definition request. *\r\n********************************************\r\n*/\r\nexport enum RiskLimitRequestStatus {\r\n  Accepted = 0,\r\n  AcceptedWithChanges = 1,\r\n  Rejected = 2,\r\n  AcceptancePending = 3\r\n}\r\n\r\n/*\r\n**************************************************\r\n* Status of risk limit definition for one party. *\r\n**************************************************\r\n*/\r\nexport enum RiskLimitStatus {\r\n  Accepted = 0,\r\n  AcceptedWithChanges = 1,\r\n  Rejected = 2\r\n}\r\n\r\n/*\r\n**************************************************\r\n* Result of risk limit definition for one party. *\r\n**************************************************\r\n*/\r\nexport enum RiskLimitResult {\r\n  SuccessfulDefault = 0,\r\n  InvalidPartyIes = 1,\r\n  InvalidRelatedPartyIes = 2,\r\n  InvalidRiskLimitTypeS = 3,\r\n  InvalidRiskLimitIdS = 4,\r\n  InvalidRiskLimitAmountS = 5,\r\n  InvalidRiskWarningLevelActionS = 6,\r\n  InvalidRiskInstrumentScopeS = 7,\r\n  RiskLimitActionsNotSupported = 8,\r\n  WarningLevelsNotSupported = 9,\r\n  WarningLevelActionsNotSupported = 10,\r\n  RiskInstrumentScopeNotSupported = 11,\r\n  RiskLimitNotApprovedForPartyIes = 12,\r\n  RiskLimitAlreadyDefinedForPartyIes = 13,\r\n  InstrumentNotApprovedForPartyIes = 14,\r\n  NotAuthorized = 98,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies the action to take or risk model to assume should *\r\n* risk limit be exceeded or breached for the specified party.  *\r\n****************************************************************\r\n*/\r\nexport enum RiskLimitAction {\r\n  QueueInbound = 0,\r\n  QueueOutbound = 1,\r\n  Reject = 2,\r\n  Disconnect = 3,\r\n  Warning = 4,\r\n  PingCreditCheckModelWithRevalidation = 5,\r\n  PingCreditCheckModelWithoutRevalidation = 6,\r\n  PushCreditCheckModelWithRevalidation = 7,\r\n  PushCreditCheckModelWithoutRevalidation = 8,\r\n  Suspend = 9,\r\n  HaltTrading = 10\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Action to take should warning level be exceeded. *\r\n****************************************************\r\n*/\r\nexport enum RiskWarningLevelAction {\r\n  QueueInbound = 0,\r\n  QueueOutbound = 1,\r\n  Reject = 2,\r\n  Disconnect = 3,\r\n  Warning = 4,\r\n  PingCreditCheckModelWithRevalidation = 5,\r\n  PingCreditCheckModelWithoutRevalidation = 6,\r\n  PushCreditCheckModelWithRevalidation = 7,\r\n  PushCreditCheckModelWithoutRevalidation = 8,\r\n  Suspend = 9,\r\n  HaltTrading = 10\r\n}\r\n\r\n/*\r\n************************\r\n* Type of entitlement. *\r\n************************\r\n*/\r\nexport enum EntitlementType {\r\n  Trade = 0,\r\n  MakeMarkets = 1,\r\n  HoldPositions = 2,\r\n  PerformGiveUps = 3,\r\n  SubmitIndicationsOfInterestIoIs = 4,\r\n  SubscribeToMarketData = 5,\r\n  ShortWithPreBorrow = 6,\r\n  SubmitQuoteRequests = 7,\r\n  RespondToQuoteRequests = 8\r\n}\r\n\r\n/*\r\n******************************************\r\n* Datatype of the entitlement attribute. *\r\n******************************************\r\n*/\r\nexport enum EntitlementAttribDatatype {\r\n  Int = 1,\r\n  Length = 2,\r\n  NumInGroup = 3,\r\n  SeqNum = 4,\r\n  TagNum = 5,\r\n  Float = 6,\r\n  Qty = 7,\r\n  Price = 8,\r\n  PriceOffset = 9,\r\n  Amt = 10,\r\n  Percentage = 11,\r\n  Char = 12,\r\n  Boolean = 13,\r\n  String = 14,\r\n  MultipleCharValue = 15,\r\n  Currency = 16,\r\n  Exchange = 17,\r\n  MonthYear = 18,\r\n  UtcTimestamp = 19,\r\n  UtcTimeOnly = 20,\r\n  LocalMktDate = 21,\r\n  UtcDateOnly = 22,\r\n  Data = 23,\r\n  MultipleStringValue = 24,\r\n  Country = 25,\r\n  Language = 26,\r\n  TzTimeOnly = 27,\r\n  TzTimestamp = 28,\r\n  Tenor = 29,\r\n  DayOfMonth = 30,\r\n  XmlData = 31,\r\n  Pattern = 32,\r\n  Reserved100Plus = 33,\r\n  Reserved1000Plus = 34,\r\n  Reserved4000Plus = 35\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Indicates how control of trading session and subsession *\r\n* transitions are performed.                              *\r\n***********************************************************\r\n*/\r\nexport enum TradSesControl {\r\n  AutomaticDefault = 0,\r\n  Manual = 1\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Define the type of trade volume applicable for the *\r\n* MinTradeVol(562) and MaxTradeVol(1140)             *\r\n******************************************************\r\n*/\r\nexport enum TradeVolType {\r\n  NumberOfUnitsEGShareParCurrencyContractsDefault = 0,\r\n  NumberOfRoundLots = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The type of event affecting an order. The last event type *\r\n* within the OrderEventGrp component indicates the          *\r\n* ExecType(150) value resulting from the series of events   *\r\n* (ExecType(150) values are shown in brackets).             *\r\n*************************************************************\r\n*/\r\nexport enum OrderEventType {\r\n  Added0New = 1,\r\n  Modified5Replaced = 2,\r\n  Deleted4Canceled = 3,\r\n  PartiallyFilledFTrade = 4,\r\n  FilledFTrade = 5,\r\n  Suspended9Suspended = 6,\r\n  ReleasedNReleased = 7,\r\n  RestatedDRestated = 8,\r\n  LockedMLocked = 9,\r\n  TriggeredLTriggeredOrActivatedBySystem = 10,\r\n  ActivatedLTriggeredOrActivatedBySystem = 11\r\n}\r\n\r\n/*\r\n******************************************\r\n* Action that caused the event to occur. *\r\n******************************************\r\n*/\r\nexport enum OrderEventReason {\r\n  AddOrderRequest = 1,\r\n  ModifyOrderRequest = 2,\r\n  DeleteOrderRequest = 3,\r\n  OrderEnteredOutOfBand = 4,\r\n  OrderModifiedOutOfBand = 5,\r\n  OrderDeletedOutOfBand = 6,\r\n  OrderActivatedOrTriggered = 7,\r\n  OrderExpired = 8,\r\n  ReserveOrderRefreshed = 9,\r\n  AwayMarketBetter = 10,\r\n  CorporateAction = 11,\r\n  StartOfDay = 12,\r\n  EndOfDay = 13\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicator to identify whether this fill was a result of a  *\r\n* liquidity provider providing or liquidity taker taking the *\r\n* liquidity. Applicable only for OrderEventType(1796) values *\r\n* of 4(Partially Filled) or 5(Filled).                       *\r\n**************************************************************\r\n*/\r\nexport enum OrderEventLiquidityIndicator {\r\n  AddedLiquidity = 1,\r\n  RemovedLiquidity = 2,\r\n  LiquidityRoutedOut = 3,\r\n  Auction = 4,\r\n  TriggeredStopOrder = 5,\r\n  TriggeredContingencyOrder = 6,\r\n  TriggeredMarketOrder = 7\r\n}\r\n\r\n/*\r\n**************************\r\n* Type of auction order. *\r\n**************************\r\n*/\r\nexport enum AuctionType {\r\n  None = 0,\r\n  BlockOrderAuction = 1,\r\n  DirectedOrderAuction = 2,\r\n  ExposureOrderAuction = 3,\r\n  FlashOrderAuction = 4,\r\n  FacilitationOrderAuction = 5,\r\n  SolicitationOrderAuction = 6,\r\n  PriceImprovementMechanismPim = 7,\r\n  DirectedOrderPriceImprovementMechanismPim = 8\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Instruction related to system generated auctions, e.g. flash *\r\n* order auctions.                                              *\r\n****************************************************************\r\n*/\r\nexport enum AuctionInstruction {\r\n  AutomaticAuctionPermittedDefault = 0,\r\n  AutomaticAuctionNotPermitted = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates whether an order is locked and for what reason. *\r\n*************************************************************\r\n*/\r\nexport enum LockType {\r\n  NotLocked = 0,\r\n  AwayMarketBetter = 1,\r\n  ThreeTickLocked = 2,\r\n  LockedByMarketMaker = 3,\r\n  DirectedOrderLock = 4,\r\n  MultilegLock = 5,\r\n  MarketOrderLock = 6,\r\n  PreAssignmentLock = 7\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Instruction to define conditions under which to release a *\r\n* locked order or parts of it.                              *\r\n*************************************************************\r\n*/\r\nexport enum ReleaseInstruction {\r\n  IntermarketSweepOrderIso = 1,\r\n  NoAwayMarketBetterCheck = 2\r\n}\r\n\r\n/*\r\n**************************************\r\n* Information subject to disclosure. *\r\n**************************************\r\n*/\r\nexport enum DisclosureType {\r\n  Volume = 1,\r\n  Price = 2,\r\n  Side = 3,\r\n  Aon = 4,\r\n  General = 5,\r\n  ClearingAccount = 6,\r\n  CmtaAccount = 7\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Instruction to disclose information or to use default value *\r\n* of the receiver.                                            *\r\n***************************************************************\r\n*/\r\nexport enum DisclosureInstruction {\r\n  No = 0,\r\n  Yes = 1,\r\n  UseDefaultSetting = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Designates the capacity in which the order is submitted for *\r\n* trading by the market participant.                          *\r\n***************************************************************\r\n*/\r\nexport enum TradingCapacity {\r\n  Customer = 1,\r\n  CustomerProfessional = 2,\r\n  BrokerDealer = 3,\r\n  CustomerBrokerDealer = 4,\r\n  Principal = 5,\r\n  MarketMaker = 6,\r\n  AwayMarketMaker = 7,\r\n  SystematicInternaliser = 8\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Designates the account type to be used for the order when *\r\n* submitted to clearing.                                    *\r\n*************************************************************\r\n*/\r\nexport enum ClearingAccountType {\r\n  Customer = 1,\r\n  Firm = 2,\r\n  MarketMaker = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Designates the capacity in which the order will be submitted *\r\n* to clearing.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum LegClearingAccountType {\r\n  Customer = 1,\r\n  Firm = 2,\r\n  MarketMaker = 3\r\n}\r\n\r\n/*\r\n**************************************************\r\n* Qualifies the value of TargetPartyRole (1464). *\r\n**************************************************\r\n*/\r\nexport enum TargetPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Source for the price of a related entity, e.g. price of the *\r\n* underlying instrument in an Underlying Price Contingency    *\r\n* (UPC) order. Can be used together with RelatedHighPrice     *\r\n* (1819) and/or RelatedLowPrice (1820).                       *\r\n***************************************************************\r\n*/\r\nexport enum RelatedPriceSource {\r\n  NbbNationalBestBid = 1,\r\n  NboNationalBestOffer = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates how the minimum quantity should be applied when *\r\n* executing the order.                                      *\r\n*************************************************************\r\n*/\r\nexport enum MinQtyMethod {\r\n  OnceAppliesOnlyToFirstExecution = 1,\r\n  MultipleAppliesToEveryExecution = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates whether order has been triggered during its       *\r\n* lifetime. Applies to cases where original information, e.g. *\r\n* OrdType(40), is modified when the order is triggered.       *\r\n***************************************************************\r\n*/\r\nexport enum Triggered {\r\n  NotTriggeredDefault = 0,\r\n  Triggered = 1,\r\n  StopOrderTriggered = 2,\r\n  OneCancelsTheOtherOcoOrderTriggered = 3,\r\n  OneTriggersTheOtherOtoOrderTriggered = 4,\r\n  OneUpdatesTheOtherOuoOrderTriggered = 5\r\n}\r\n\r\n/*\r\n****************************************\r\n* Time unit associated with the event. *\r\n****************************************\r\n*/\r\nexport enum EventTimeUnit {\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicates whether the trade or position being reported was *\r\n* cleared through a clearing organization.                   *\r\n**************************************************************\r\n*/\r\nexport enum ClearedIndicator {\r\n  NotCleared = 0,\r\n  Cleared = 1,\r\n  Submitted = 2,\r\n  Rejected = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Additional information related to the pricing of a commodity *\r\n* swaps position, specifically an indicator referring to the   *\r\n* position type.                                               *\r\n****************************************************************\r\n*/\r\nexport enum ContractRefPosType {\r\n  TwoComponentIntercommoditySpread = 0,\r\n  IndexOrBasket = 1,\r\n  TwoComponentLocationalBasis = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Used to describe the ownership of the position. *\r\n***************************************************\r\n*/\r\nexport enum PositionCapacity {\r\n  Principal = 0,\r\n  Agent = 1,\r\n  Customer = 2,\r\n  Counterparty = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates the unit of measure of the position quantity when *\r\n* not expressed in contracts.                                 *\r\n***************************************************************\r\n*/\r\nexport enum PosQtyUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Price conditions in effect at the time of the trade.         *\r\n* Multiple price conditions can be in effect at the same time. *\r\n* Price conditions are usually required to be reported in      *\r\n* markets that have regulations on price execution at a market *\r\n* or national best bid or offer, and the trade price differs   *\r\n* from the best bid or offer.                                  *\r\n****************************************************************\r\n*/\r\nexport enum TradePriceCondition {\r\n  SpecialCumDividendCd = 0,\r\n  SpecialCumRightsCr = 1,\r\n  SpecialExDividendXd = 2,\r\n  SpecialExRightsXr = 3,\r\n  SpecialCumCouponCc = 4,\r\n  SpecialCumCapitalRepaymentsCp = 5,\r\n  SpecialExCouponXc = 6,\r\n  SpecialExCapitalRepaymentsXp = 7,\r\n  CashSettlementCs = 8,\r\n  SpecialCumBonusCb = 9,\r\n  SpecialPriceSp = 10,\r\n  SpecialExBonusXb = 11,\r\n  GuaranteedDeliveryGd = 12,\r\n  SpecialDividend = 13,\r\n  PriceImprovement = 14,\r\n  NonPriceFormingTrade = 15,\r\n  TradeExemptedFromTradingObligation = 16,\r\n  PriceIsPending = 17,\r\n  PriceIsNotApplicable = 18\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Identifies the status of an allocation when using a *\r\n* pre-clear workflow.                                 *\r\n*******************************************************\r\n*/\r\nexport enum TradeAllocStatus {\r\n  PendingClear = 0,\r\n  Claimed = 1,\r\n  Cleared = 2,\r\n  Rejected = 3\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Indicates the type of trade quantity in TradeQty(1843). *\r\n***********************************************************\r\n*/\r\nexport enum TradeQtyType {\r\n  ClearedQuantity = 0,\r\n  LongSideClaimedQuantity = 1,\r\n  ShortSideClaimedQuantity = 2,\r\n  LongSideRejectedQuantity = 3,\r\n  ShortSideRejectedQuantity = 4,\r\n  PendingQuantity = 5,\r\n  TransactionQuantity = 6,\r\n  RemainingTradeQuantity = 7,\r\n  PreviousRemainingTradeQuantity = 8\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Type of the amount associated with a trade allocation. *\r\n**********************************************************\r\n*/\r\nexport enum TradeAllocAmtType {\r\n  CashAmountCorporateEvent = 'CASH',\r\n  CashResidualAmount = 'CRES',\r\n  FinalMarkToMarketAmount = 'FMTM',\r\n  IncrementalMarkToMarket = 'IMTM',\r\n  PremiumAmount = 'PREM',\r\n  StartOfDayMarkToMarket = 'SMTM',\r\n  TradeVariationAmount = 'TVAR',\r\n  ValueAdjustedAmount = 'VADJ',\r\n  SettlementValue = 'SETL',\r\n  InitialTradeCouponAmount = 'ICPN',\r\n  AccruedCouponAmount = 'ACPN',\r\n  CouponAmount = 'CPN',\r\n  IncrementalAccruedCoupon = 'IACPN',\r\n  CollateralizedMarkToMarket = 'CMTM',\r\n  IncrementalCollateralizedMarkToMarket = 'ICMTM',\r\n  CompensationAmount = 'DLV',\r\n  TotalBankedAmount = 'BANK',\r\n  TotalCollateralizedAmount = 'COLAT',\r\n  LongPairedSwapOrSwaptionNotionalValue = 'LSNV',\r\n  ShortPairedSwapOrSwaptionNotionalValue = 'SSNV',\r\n  StartOfDayAccruedCoupon = 'SACPN',\r\n  NetPresentValue = 'NPV',\r\n  StartOfDayNetPresentValue = 'SNPV',\r\n  NetCashFlow = 'NCF',\r\n  PresentValueOfAllFees = 'PVFEES',\r\n  PresentValueOfOneBasisPoints = 'PV01',\r\n  TheFiveYearEquivalentNotionalAmount = '5YREN',\r\n  UndiscountedMarkToMarket = 'UMTM',\r\n  MarkToModel = 'MTD',\r\n  MarkToMarketVariance = 'VMTM',\r\n  MarkToModelVariance = 'VMTD',\r\n  UpfrontPayment = 'UPFRNT'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Instruction on how to add a trade to an allocation group *\r\n* when it is being given-up.                               *\r\n************************************************************\r\n*/\r\nexport enum TradeAllocGroupInstruction {\r\n  AddToAnExistingAllocationGroupIfOneExists = 0,\r\n  DoNotAddTheTradeToAnAllocationGroup = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Indicates the trade is a result of an offset or onset. *\r\n**********************************************************\r\n*/\r\nexport enum OffsetInstruction {\r\n  Offset = 0,\r\n  Onset = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the reason for an amount type when reported on an *\r\n* allocation. Useful when multiple instances of the same      *\r\n* amount type are reported.                                   *\r\n***************************************************************\r\n*/\r\nexport enum TradeAllocAmtReason {\r\n  OptionsSettlement = 0,\r\n  PendingErosionAdjustment = 1,\r\n  FinalErosionAdjustment = 2,\r\n  TearUpCouponAmount = 3,\r\n  PriceAlignmentInterest = 4,\r\n  DeliveryInvoiceCharges = 5,\r\n  DeliveryStorageCharges = 6\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Used to indicate whether a trade or a sub-allocation should  *\r\n* be allocated at the trade price (e.g. no average pricing),   *\r\n* or whether it should be grouped with other                   *\r\n* trades/sub-allocations and allocated at the average price of *\r\n* the group.                                                   *\r\n****************************************************************\r\n*/\r\nexport enum SideAvgPxIndicator {\r\n  NoAveragePricing = 0,\r\n  TradeIsPartOfTheAveragePriceGroupIdentifiedByTheSideAvgPxGroupId1854 = 1,\r\n  LastTradeIsTheAveragePriceGroupIdentifiedByTheSideAvgPxGroupId1854 = 2\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Describes the source of the identifier that *\r\n* RelatedTradeID(1856) represents.            *\r\n***********************************************\r\n*/\r\nexport enum RelatedTradeIDSource {\r\n  NonFixSource = 0,\r\n  TradeId = 1,\r\n  SecondaryTradeId = 2,\r\n  TradeReportId = 3,\r\n  FirmTradeId = 4,\r\n  SecondaryFirmTradeId = 5,\r\n  RegulatoryTradeId = 6\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Describes the source of the identifier that *\r\n* RelatedPositionID(1862) represents.         *\r\n***********************************************\r\n*/\r\nexport enum RelatedPositionIDSource {\r\n  PositionMaintenanceReportIdPosMaintRptId721 = 1,\r\n  PositionTransferIdTransferId2437 = 2,\r\n  PositionEntityIdPositionId2618 = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Acknowledgement status of a Quote(35=S) or QuoteCancel(35=Z) *\r\n* message submission.                                          *\r\n****************************************************************\r\n*/\r\nexport enum QuoteAckStatus {\r\n  ReceivedNotYetProcessed = 0,\r\n  Accepted = 1,\r\n  Rejected = 2\r\n}\r\n\r\n/*\r\n********************************\r\n* Type of value to be checked. *\r\n********************************\r\n*/\r\nexport enum ValueCheckType {\r\n  PriceCheck = 1,\r\n  NotionalValueCheck = 2\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Action to be taken for the ValueCheckType(1869). *\r\n****************************************************\r\n*/\r\nexport enum ValueCheckAction {\r\n  DoNotCheck = 0,\r\n  Check = 1,\r\n  BestEffort = 2\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Result party detail definition request. *\r\n*******************************************\r\n*/\r\nexport enum PartyDetailRequestResult {\r\n  SuccessfulDefault = 0,\r\n  InvalidPartyIes = 1,\r\n  InvalidRelatedPartyIes = 2,\r\n  InvalidPartyStatusEs = 3,\r\n  NotAuthorized = 98,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Status of party details definition request. *\r\n***********************************************\r\n*/\r\nexport enum PartyDetailRequestStatus {\r\n  Accepted = 0,\r\n  AcceptedWithChanges = 1,\r\n  Rejected = 2,\r\n  AcceptancePending = 3\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Status of party detail definition for one party. *\r\n****************************************************\r\n*/\r\nexport enum PartyDetailDefinitionStatus {\r\n  Accepted = 0,\r\n  AcceptedWithChanges = 1,\r\n  Rejected = 2\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Result of party detail definition for one party. *\r\n****************************************************\r\n*/\r\nexport enum PartyDetailDefinitionResult {\r\n  SuccessfulDefault = 0,\r\n  InvalidPartyIes = 1,\r\n  InvalidRelatedPartyIes = 2,\r\n  InvalidPartyStatusEs = 3,\r\n  NotAuthorized = 98,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n********************************************\r\n* Result of risk limit definition request. *\r\n********************************************\r\n*/\r\nexport enum EntitlementRequestResult {\r\n  SuccessfulDefault = 0,\r\n  InvalidPartyIes = 1,\r\n  InvalidRelatedPartyIes = 2,\r\n  InvalidEntitlementTypeS = 3,\r\n  InvalidEntitlementIdSRefIdS = 4,\r\n  InvalidEntitlementAttributeS = 5,\r\n  InvalidInstrumentScopeS = 6,\r\n  InvalidMarketSegmentScopeS = 7,\r\n  InvalidStartDate = 8,\r\n  InvalidEndDate = 9,\r\n  InstrumentScopeNotSupported = 10,\r\n  MarketSegmentScopeNotSupported = 11,\r\n  EntitlementNotApprovedForPartyIes = 12,\r\n  EntitlementAlreadyDefinedForPartyIes = 13,\r\n  InstrumentNotApprovedForPartyIes = 14,\r\n  NotAuthorized = 98,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Status of party entitlements definition request. *\r\n****************************************************\r\n*/\r\nexport enum EntitlementRequestStatus {\r\n  Accepted = 0,\r\n  AcceptedWithChanges = 1,\r\n  Rejected = 2,\r\n  AcceptancePending = 3\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Status of entitlement definition for one party. *\r\n***************************************************\r\n*/\r\nexport enum EntitlementStatus {\r\n  Accepted = 0,\r\n  AcceptedWithChanges = 1,\r\n  Rejected = 2,\r\n  Pending = 3,\r\n  Requested = 4,\r\n  Deferred = 5\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Result of entitlement definition for one party. *\r\n***************************************************\r\n*/\r\nexport enum EntitlementResult {\r\n  SuccessfulDefault = 0,\r\n  InvalidPartyIes = 1,\r\n  InvalidRelatedPartyIes = 2,\r\n  InvalidEntitlementTypeS = 3,\r\n  InvalidEntitlementIdSRefIdS = 4,\r\n  InvalidEntitlementAttributeS = 5,\r\n  InvalidInstrumentScopeS = 6,\r\n  InvalidMarketSegmentScopeS = 7,\r\n  InvalidStartDate = 8,\r\n  InvalidEndDate = 9,\r\n  InstrumentScopeNotSupported = 10,\r\n  MarketSegmentScopeNotSupported = 11,\r\n  EntitlementNotApprovedForPartyIes = 12,\r\n  EntitlementAlreadyDefinedForPartyIes = 13,\r\n  InstrumentNotApprovedForPartyIes = 14,\r\n  NotAuthorized = 98,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Used to express the unit of measure of the settlement price *\r\n* if different from the contract.                             *\r\n***************************************************************\r\n*/\r\nexport enum SettlPriceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Used to indicate the status of the trade match report *\r\n* submission.                                           *\r\n*********************************************************\r\n*/\r\nexport enum TradeMatchAckStatus {\r\n  ReceivedNotYetProcessed = 0,\r\n  Accepted = 1,\r\n  Rejected = 2\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Reason the trade match report submission was rejected. *\r\n**********************************************************\r\n*/\r\nexport enum TradeMatchRejectReason {\r\n  Successful = 0,\r\n  InvalidPartyInformation = 1,\r\n  UnknownInstrument = 2,\r\n  NotAuthorizedToReportTrades = 3,\r\n  InvalidTradeType = 4,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Identifies the type of venue where the trade was executed *\r\n* for the side.                                             *\r\n*************************************************************\r\n*/\r\nexport enum SideVenueType {\r\n  ElectronicExchange = 'E',\r\n  Pit = 'P',\r\n  ExPit = 'X',\r\n  Clearinghouse = 'C',\r\n  RegisteredMarket = 'R',\r\n  OffMarket = 'O',\r\n  CentralLimitOrderBook = 'B',\r\n  QuoteDrivenMarket = 'Q',\r\n  DarkOrderBook = 'D',\r\n  AuctionDrivenMarket = 'A',\r\n  QuoteNegotiation = 'N',\r\n  VoiceNeotiation = 'V',\r\n  HybridMarket = 'H'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies the event which caused origination of the         *\r\n* identifier in RegulatoryTradeID(1903). When more than one    *\r\n* event is the cause, use the higher enumeration value.  For   *\r\n* example, if the identifier is originated due to an allocated *\r\n* trade which was cleared and reported, use the enumeration    *\r\n* value 2 (Clearing).                                          *\r\n****************************************************************\r\n*/\r\nexport enum RegulatoryTradeIDEvent {\r\n  InitialBlockTrade = 0,\r\n  Allocation = 1,\r\n  Clearing = 2,\r\n  Compression = 3,\r\n  Novation = 4,\r\n  Termination = 5,\r\n  PostTradeValuation = 6\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the type of trade identifier provided in          *\r\n* RegulatoryTradeID(1903).                                    *\r\n* Contextual hierarchy of events for the same trade or        *\r\n* transaction maybe captured through use of the different     *\r\n* RegulatoryTradeIDType(1906) values using multiple instances *\r\n* of the repeating group as needed for regulatory reporting.  *\r\n***************************************************************\r\n*/\r\nexport enum RegulatoryTradeIDType {\r\n  Current = 0,\r\n  Previous = 1,\r\n  Block = 2,\r\n  Related = 3,\r\n  ClearedBlockTrade = 4,\r\n  TradingVenueTransactionIdentifier = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Identifies the event which caused the origination of the    *\r\n* identifier in AllocRegulatoryTradeID(1909).  When more than *\r\n* one event is the cause, use the higher enumeration value.   *\r\n* For example, if the identifier is originated due to an      *\r\n* allocated trade which was cleared and reported, use the     *\r\n* enumeration value 2(Clearing).                              *\r\n***************************************************************\r\n*/\r\nexport enum AllocRegulatoryTradeIDEvent {\r\n  InitialBlockTrade = 0,\r\n  Allocation = 1,\r\n  Clearing = 2,\r\n  Compression = 3,\r\n  Novation = 4,\r\n  Termination = 5,\r\n  PostTradeValuation = 6\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the type of trade identifier provided in      *\r\n* AllocRegulatoryTradeID(1909), within the context of the *\r\n* hierarchy of trade events.                              *\r\n***********************************************************\r\n*/\r\nexport enum AllocRegulatoryTradeIDType {\r\n  Current = 0,\r\n  Previous = 1,\r\n  Block = 2,\r\n  Related = 3,\r\n  ClearedBlockTrade = 4,\r\n  TradingVenueTransactionIdentifier = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit in which the ExposureDuration(1629) is expressed. *\r\n***************************************************************\r\n*/\r\nexport enum ExposureDurationUnit {\r\n  SecondsDefaultIfNotSpecified = 0,\r\n  TenthsOfASecond = 1,\r\n  HundredthsOfASecond = 2,\r\n  Milliseconds = 3,\r\n  Microseconds = 4,\r\n  Nanoseconds = 5,\r\n  Minutes = 10,\r\n  Hours = 11,\r\n  Days = 12,\r\n  Weeks = 13,\r\n  Months = 14,\r\n  Years = 15\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Describes the format of the PriceMovementValue(1921). *\r\n*********************************************************\r\n*/\r\nexport enum PriceMovementType {\r\n  Amount = 0,\r\n  Percentage = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the party's or parties' intention to clear the *\r\n* trade.                                                   *\r\n************************************************************\r\n*/\r\nexport enum ClearingIntention {\r\n  DoNotIntendToClear = 0,\r\n  IntendToClear = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the eligibility of this trade for clearing and *\r\n* central counterparty processing.                         *\r\n************************************************************\r\n*/\r\nexport enum TradeClearingInstruction {\r\n  ProcessNormally = 0,\r\n  ExcludeFromAllNetting = 1,\r\n  BilateralNettingOnly = 2,\r\n  ExClearing = 3,\r\n  SpecialTrade = 4,\r\n  MultilateralNetting = 5,\r\n  ClearAgainstCentralCounterparty = 6,\r\n  ExcludeFromCentralCounterparty = 7,\r\n  ManualModePrePostingAndOrPreGiveup = 8,\r\n  AutomaticPostingModeTradePostingToThePositionAccountNumberSpecified = 9,\r\n  AutomaticGiveUpModeTradeGiveUpToTheGiveUpDestinationNumberSpecified = 10,\r\n  QualifiedServiceRepresentativeQsr = 11,\r\n  CustomerTrade = 12,\r\n  SelfClearing = 13,\r\n  BuyIn = 14\r\n}\r\n\r\n/*\r\n****************************************\r\n* Specifies how a trade was confirmed. *\r\n****************************************\r\n*/\r\nexport enum ConfirmationMethod {\r\n  NonElectronic = 0,\r\n  Electronic = 1,\r\n  Unconfirmed = 2\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Indication of how a trade was verified. *\r\n*******************************************\r\n*/\r\nexport enum VerificationMethod {\r\n  NonElectronic = 0,\r\n  Electronic = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies whether a party to a swap is using an exception to *\r\n* a clearing requirement. In the US, one such clearing         *\r\n* requirement is CFTC's rule pursuant to CEA Section 2(h)(1).  *\r\n****************************************************************\r\n*/\r\nexport enum ClearingRequirementException {\r\n  NoException = 0,\r\n  Exception = 1,\r\n  EndUserException = 2,\r\n  InterAffiliateException = 3,\r\n  TreasuryAffiliateException = 4,\r\n  CooperativeException = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Used to specify whether the principal is paying or receiving *\r\n* the fixed rate in an interest rate swap.                     *\r\n****************************************************************\r\n*/\r\nexport enum IRSDirection {\r\n  PrincipalIsPayingFixedRate = 'PAY',\r\n  PrincipalIsReceivingFixedRate = 'RCV',\r\n  SwapIsFloatFloatOrFixedFixed = 'NA'\r\n}\r\n\r\n/*\r\n******************************\r\n* Type of regulatory report. *\r\n******************************\r\n*/\r\nexport enum RegulatoryReportType {\r\n  RealTimeRt = 0,\r\n  PrimaryEconomicTermsPet = 1,\r\n  Snapshot = 2,\r\n  Confirmation = 3,\r\n  CombinationOfRtAndPet = 4,\r\n  CombinationOfPetAndConfirmation = 5,\r\n  CombinationOfRtPetAndConfirmation = 6,\r\n  PostTradeValuation = 7,\r\n  Verification = 8,\r\n  PostTradeEvent = 9,\r\n  PostTradeEventRtReportable = 10,\r\n  LimitedDetailsTrade = 11,\r\n  DailyAggregatedTrade = 12,\r\n  VolumeOmissionTrade = 13,\r\n  FourWeeksAggregationTrade = 14,\r\n  IndefiniteAggregationTrade = 15,\r\n  VolumeOmissionTradeEligibleForSubsequentAggregatedEnrichment = 16,\r\n  FullDetailsTradeOfLimitedDetailsTrade = 17,\r\n  FullDetailsOfDailyAggregatedTrade = 18,\r\n  FullDetailsOfVolumeOmissionTrade = 19,\r\n  FullDetailsOfFourWeeksAggregationTrade = 20,\r\n  FullDetailsInAggregatedFormOfVolumeOmissionTradeEligibleForSubsequentAggregatedEnrichment = 21\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Specifies how the trade is collateralized. *\r\n**********************************************\r\n*/\r\nexport enum TradeCollateralization {\r\n  Uncollateralized = 0,\r\n  PartiallyCollateralized = 1,\r\n  OneWayCollaterallization = 2,\r\n  FullyCollateralized = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the post-execution trade continuation or lifecycle *\r\n* event. Additional values may be used by mutual agreement of  *\r\n* the counterparties.                                          *\r\n****************************************************************\r\n*/\r\nexport enum TradeContinuation {\r\n  Novation = 0,\r\n  PartialNovation = 1,\r\n  TradeUnwind = 2,\r\n  PartialTradeUnwind = 3,\r\n  Exercise = 4,\r\n  CompressionNetting = 5,\r\n  FullNetting = 6,\r\n  PartialNetting = 7,\r\n  Amendment = 8,\r\n  Increase = 9,\r\n  CreditEvent = 10,\r\n  StrategicRestructuring = 11,\r\n  SuccessionEventReorganization = 12,\r\n  SuccessionEventRenaming = 13,\r\n  Porting = 14,\r\n  Withdrawal = 15,\r\n  Void = 16,\r\n  AccountTransfer = 17,\r\n  GiveUp = 18,\r\n  TakeUp = 19,\r\n  AveragePricing = 20,\r\n  Reversal = 21,\r\n  AllocationTradePosting = 22,\r\n  Cascade = 23,\r\n  Delivery = 24,\r\n  OptionAssignment = 25,\r\n  Expiration = 26,\r\n  Maturity = 27,\r\n  EqualPositionAdjustment = 28,\r\n  UnequalPositionAdjustment = 29,\r\n  Correction = 30,\r\n  OtherPriceFormingContinuationData = 99\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* The broad asset category for assessing risk exposure. *\r\n*********************************************************\r\n*/\r\nexport enum AssetClass {\r\n  InterestRate = 1,\r\n  Currency = 2,\r\n  Credit = 3,\r\n  Equity = 4,\r\n  Commodity = 5,\r\n  Other = 6,\r\n  Cash = 7,\r\n  Debt = 8,\r\n  Fund = 9,\r\n  LoanFacility = 10\r\n}\r\n\r\n/*\r\n***************************************************\r\n* The subcategory description of the asset class. *\r\n***************************************************\r\n*/\r\nexport enum AssetSubClass {\r\n  SingleCurrency = 1,\r\n  CrossCurrency = 2,\r\n  BasketForMultiCurrency = 3,\r\n  SingleName = 4,\r\n  CreditIndex = 5,\r\n  IndexTranche = 6,\r\n  CreditBasket = 7,\r\n  Exotic = 8,\r\n  Common = 9,\r\n  Preferred = 10,\r\n  EquityIndex = 11,\r\n  EquityBasket = 12,\r\n  Metals = 13,\r\n  Bullion = 14,\r\n  Energy = 15,\r\n  CommodityIndex = 16,\r\n  Agricultural = 17,\r\n  Environmental = 18,\r\n  Freight = 19,\r\n  Government = 20,\r\n  Agency = 21,\r\n  Corporate = 22,\r\n  Financing = 23,\r\n  MoneyMarket = 24,\r\n  Mortgage = 25,\r\n  Municipal = 26,\r\n  MutualFund = 27,\r\n  CollectiveInvestmentVehicle = 28,\r\n  InvestmentProgram = 29,\r\n  SpecializedAccountProgram = 30,\r\n  TermLoan = 31,\r\n  BridgeLoan = 32,\r\n  LetterOfCredit = 33\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The classification or type of swap. Additional values may be *\r\n* used by mutual agreement of the counterparties.              *\r\n****************************************************************\r\n*/\r\nexport enum SwapClass {\r\n  BasisSwap = 'BS',\r\n  IndexSwap = 'IX',\r\n  BroadBasedSecuritySwap = 'BB',\r\n  BasketSwap = 'SK'\r\n}\r\n\r\n/*\r\n****************************\r\n* Coupon type of the bond. *\r\n****************************\r\n*/\r\nexport enum CouponType {\r\n  Zero = 0,\r\n  FixedRate = 1,\r\n  FloatingRate = 2,\r\n  Structured = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency of the bond's coupon *\r\n* payment.                                                     *\r\n****************************************************************\r\n*/\r\nexport enum CouponFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The day count convention used in interest calculations for a *\r\n* bond or an interest bearing security.  Absence of this field *\r\n* for a bond or an interest bearing security transaction       *\r\n* implies a \"flat\" trade, i.e. no accrued interest determined  *\r\n* at time of the transaction.                                  *\r\n****************************************************************\r\n*/\r\nexport enum CouponDayCount {\r\n  E11 = 0,\r\n  E3036030U360OrBondBasis = 1,\r\n  E30360Sia = 2,\r\n  E30360M = 3,\r\n  E30E360EurobondBasis = 4,\r\n  E30E360Isda = 5,\r\n  Act360 = 6,\r\n  Act365Fixed = 7,\r\n  ActActAfb = 8,\r\n  ActActIcma = 9,\r\n  ActActIcsmaUltimo = 10,\r\n  ActActIsda = 11,\r\n  Bus252 = 12,\r\n  E30E360 = 13,\r\n  Act365L = 14,\r\n  Nl365 = 15,\r\n  Nl360 = 16,\r\n  Act364 = 17\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Identifies class or source of the       *\r\n* ConvertibleBondEquityID(1951) value.    *\r\n* 100+ are reserved for private security. *\r\n*******************************************\r\n*/\r\nexport enum ConvertibleBondEquityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Indicates the seniority level of the lien in a loan. *\r\n********************************************************\r\n*/\r\nexport enum LienSeniority {\r\n  Unknown = 0,\r\n  FirstLien = 1,\r\n  SecondLien = 2,\r\n  ThirdLien = 3\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the type of loan when the credit default swap's *\r\n* reference obligation is a loan.                           *\r\n*************************************************************\r\n*/\r\nexport enum LoanFacility {\r\n  BridgeLoan = 0,\r\n  LetterOfCredit = 1,\r\n  RevolvingLoan = 2,\r\n  SwinglineFunding = 3,\r\n  TermLoan = 4,\r\n  TradeClaim = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the type of reference entity for first-to-default *\r\n* CDS basket contracts.                                       *\r\n***************************************************************\r\n*/\r\nexport enum ReferenceEntityType {\r\n  Asian = 1,\r\n  AustralianAndNewZealand = 2,\r\n  EuropeanEmergingMarkets = 3,\r\n  Japanese = 4,\r\n  NorthAmericanHighYield = 5,\r\n  NorthAmericanInsurance = 6,\r\n  NorthAmericanInvestmentGrade = 7,\r\n  Singaporean = 8,\r\n  WesternEuropean = 9,\r\n  WesternEuropeanInsurance = 10\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Identifies the event which caused origination of the      *\r\n* identifier in SideRegulatoryTradeID(1972). When more than *\r\n* one event is the cause, use the higher enumeration value. *\r\n* For example, if the identifier is originated due to an    *\r\n* allocated trade which was cleared and reported, use the   *\r\n* enumeration value 2 (Clearing).                           *\r\n*************************************************************\r\n*/\r\nexport enum SideRegulatoryTradeIDEvent {\r\n  InitialBlockTrade = 0,\r\n  Allocation = 1,\r\n  Clearing = 2,\r\n  Compression = 3,\r\n  Novation = 4,\r\n  Termination = 5,\r\n  PostTradeValuation = 6\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the type of trade identifier provided in     *\r\n* SideRegulatoryTradeID(1972), within the context of the *\r\n* hierarchy of trade events.                             *\r\n**********************************************************\r\n*/\r\nexport enum SideRegulatoryTradeIDType {\r\n  Current = 0,\r\n  Previous = 1,\r\n  Block = 2,\r\n  Related = 3,\r\n  ClearedBlockTrade = 4,\r\n  TradingVenueTransactionIdentifier = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The broad asset category for assessing risk exposure for a *\r\n* multi-asset trade.                                         *\r\n**************************************************************\r\n*/\r\nexport enum SecondaryAssetClass {\r\n  InterestRate = 1,\r\n  Currency = 2,\r\n  Credit = 3,\r\n  Equity = 4,\r\n  Commodity = 5,\r\n  Other = 6,\r\n  Cash = 7,\r\n  Debt = 8,\r\n  Fund = 9,\r\n  LoanFacility = 10\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* An indication of the general description of the asset class. *\r\n****************************************************************\r\n*/\r\nexport enum SecondaryAssetSubClass {\r\n  SingleCurrency = 1,\r\n  CrossCurrency = 2,\r\n  BasketForMultiCurrency = 3,\r\n  SingleName = 4,\r\n  CreditIndex = 5,\r\n  IndexTranche = 6,\r\n  CreditBasket = 7,\r\n  Exotic = 8,\r\n  Common = 9,\r\n  Preferred = 10,\r\n  EquityIndex = 11,\r\n  EquityBasket = 12,\r\n  Metals = 13,\r\n  Bullion = 14,\r\n  Energy = 15,\r\n  CommodityIndex = 16,\r\n  Agricultural = 17,\r\n  Environmental = 18,\r\n  Freight = 19,\r\n  Government = 20,\r\n  Agency = 21,\r\n  Corporate = 22,\r\n  Financing = 23,\r\n  MoneyMarket = 24,\r\n  Mortgage = 25,\r\n  Municipal = 26,\r\n  MutualFund = 27,\r\n  CollectiveInvestmentVehicle = 28,\r\n  InvestmentProgram = 29,\r\n  SpecializedAccountProgram = 30,\r\n  TermLoan = 31,\r\n  BridgeLoan = 32,\r\n  LetterOfCredit = 33\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Indication that a block trade will be allocated. *\r\n****************************************************\r\n*/\r\nexport enum BlockTrdAllocIndicator {\r\n  BlockToBeAllocated = 0,\r\n  BlockNotToBeAllocated = 1,\r\n  AllocatedTrade = 2\r\n}\r\n\r\n/*\r\n****************************************\r\n* Code to represent the type of event. *\r\n****************************************\r\n*/\r\nexport enum UnderlyingEventType {\r\n  Put = 1,\r\n  Call = 2,\r\n  Tender = 3,\r\n  SinkingFundCall = 4,\r\n  Activation = 5,\r\n  Inactivation = 6,\r\n  LastEligibleTradeDate = 7,\r\n  SwapStartDate = 8,\r\n  SwapEndDate = 9,\r\n  SwapRollDate = 10,\r\n  SwapNextStartDate = 11,\r\n  SwapNextRollDate = 12,\r\n  FirstDeliveryDate = 13,\r\n  LastDeliveryDate = 14,\r\n  InitialInventoryDueDate = 15,\r\n  FinalInventoryDueDate = 16,\r\n  FirstIntentDate = 17,\r\n  LastIntentDate = 18,\r\n  PositionRemovalDate = 19,\r\n  MinimumNotice = 20,\r\n  DeliveryStartTime = 21,\r\n  DeliveryEndTime = 22,\r\n  FirstNoticeDate = 23,\r\n  LastNoticeDate = 24,\r\n  FirstExerciseDate = 25,\r\n  RedemptionDate = 26,\r\n  TradeContinuationEffectiveDate = 27,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Specifies the coupon type of the underlying bond. *\r\n*****************************************************\r\n*/\r\nexport enum UnderlyingCouponType {\r\n  Zero = 0,\r\n  FixedRate = 1,\r\n  FloatingRate = 2,\r\n  Structured = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency of the bond's coupon *\r\n* payment.                                                     *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingCouponFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The day count convention used in interest calculations for a *\r\n* bond or an interest bearing security.                        *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingCouponDayCount {\r\n  E11 = 0,\r\n  E3036030U360OrBondBasis = 1,\r\n  E30360Sia = 2,\r\n  E30360M = 3,\r\n  E30E360EurobondBasis = 4,\r\n  E30E360Isda = 5,\r\n  Act360 = 6,\r\n  Act365Fixed = 7,\r\n  ActActAfb = 8,\r\n  ActActIcma = 9,\r\n  ActActIcsmaUltimo = 10,\r\n  ActActIsda = 11,\r\n  Bus252 = 12,\r\n  E30E360 = 13,\r\n  Act365L = 14,\r\n  Nl365 = 15,\r\n  Nl360 = 16,\r\n  Act364 = 17\r\n}\r\n\r\n/*\r\n***************************************\r\n* Identifies the source scheme of the *\r\n* UnderlyingObligationID(1994).       *\r\n***************************************\r\n*/\r\nexport enum UnderlyingObligationIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Identifies the source of the UnderlyingEquityID(1996). *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingEquityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Indicates the seniority level of the lien in a loan. *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingLienSeniority {\r\n  Unknown = 0,\r\n  FirstLien = 1,\r\n  SecondLien = 2,\r\n  ThirdLien = 3\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the type of loan when the credit default swap's *\r\n* reference obligation is a loan.                           *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingLoanFacility {\r\n  BridgeLoan = 0,\r\n  LetterOfCredit = 1,\r\n  RevolvingLoan = 2,\r\n  SwinglineFunding = 3,\r\n  TermLoan = 4,\r\n  TradeClaim = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the type of reference entity for first-to-default *\r\n* CDS basket contracts.                                       *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingReferenceEntityType {\r\n  Asian = 1,\r\n  AustralianAndNewZealand = 2,\r\n  EuropeanEmergingMarkets = 3,\r\n  Japanese = 4,\r\n  NorthAmericanHighYield = 5,\r\n  NorthAmericanInsurance = 6,\r\n  NorthAmericanInvestmentGrade = 7,\r\n  Singaporean = 8,\r\n  WesternEuropean = 9,\r\n  WesternEuropeanInsurance = 10\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Method under which assignment was conducted *\r\n***********************************************\r\n*/\r\nexport enum UnderlyingAssignmentMethod {\r\n  ProRata = 'P',\r\n  Random = 'R'\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Gives the current state of the instrument *\r\n*********************************************\r\n*/\r\nexport enum UnderlyingSecurityStatus {\r\n  Active = '1',\r\n  Inactive = '2',\r\n  ActiveClosingOrdersOnly = '3',\r\n  Expired = '4',\r\n  Delisted = '5',\r\n  KnockedOut = '6',\r\n  KnockOutRevoked = '7',\r\n  PendingExpiry = '8',\r\n  Suspended = '9',\r\n  Published = '10',\r\n  PendingDeletion = '11'\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Type of reference obligation for credit derivatives *\r\n* contracts.                                          *\r\n*******************************************************\r\n*/\r\nexport enum UnderlyingObligationType {\r\n  Bond = '0',\r\n  ConvertibleBond = '1',\r\n  Mortgage = '2',\r\n  Loan = '3'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* The broad asset category for assessing risk exposure. *\r\n*********************************************************\r\n*/\r\nexport enum UnderlyingAssetClass {\r\n  InterestRate = 1,\r\n  Currency = 2,\r\n  Credit = 3,\r\n  Equity = 4,\r\n  Commodity = 5,\r\n  Other = 6,\r\n  Cash = 7,\r\n  Debt = 8,\r\n  Fund = 9,\r\n  LoanFacility = 10\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* An indication of the general description of the asset class. *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingAssetSubClass {\r\n  SingleCurrency = 1,\r\n  CrossCurrency = 2,\r\n  BasketForMultiCurrency = 3,\r\n  SingleName = 4,\r\n  CreditIndex = 5,\r\n  IndexTranche = 6,\r\n  CreditBasket = 7,\r\n  Exotic = 8,\r\n  Common = 9,\r\n  Preferred = 10,\r\n  EquityIndex = 11,\r\n  EquityBasket = 12,\r\n  Metals = 13,\r\n  Bullion = 14,\r\n  Energy = 15,\r\n  CommodityIndex = 16,\r\n  Agricultural = 17,\r\n  Environmental = 18,\r\n  Freight = 19,\r\n  Government = 20,\r\n  Agency = 21,\r\n  Corporate = 22,\r\n  Financing = 23,\r\n  MoneyMarket = 24,\r\n  Mortgage = 25,\r\n  Municipal = 26,\r\n  MutualFund = 27,\r\n  CollectiveInvestmentVehicle = 28,\r\n  InvestmentProgram = 29,\r\n  SpecializedAccountProgram = 30,\r\n  TermLoan = 31,\r\n  BridgeLoan = 32,\r\n  LetterOfCredit = 33\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The type or classification of swap. Additional values may be *\r\n* used by mutual agreement of the counterparties.              *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingSwapClass {\r\n  BasisSwap = 'BS',\r\n  IndexSwap = 'IX',\r\n  BroadBasedSecuritySwap = 'BB',\r\n  BasketSwap = 'SK'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies how the strike price is determined at the point of *\r\n* option exercise. The strike may be fixed throughout the life *\r\n* of the option, set at expiration to the value of the         *\r\n* underlying, set to the average value of the underlying , or  *\r\n* set to the optimal value of the underlying.                  *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingStrikePriceDeterminationMethod {\r\n  FixedStrikeDefaultIfNotSpecified = 1,\r\n  StrikeSetAtExpirationToUnderlyingOrOtherValueLookbackFloating = 2,\r\n  StrikeSetToAverageOfUnderlyingSettlementPriceAcrossTheLifeOfTheOption = 3,\r\n  StrikeSetToOptimalValue = 4\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the boundary condition to be used for the strike *\r\n* price relative to the underlying price at the point of     *\r\n* option exercise.                                           *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingStrikePriceBoundaryMethod {\r\n  LessThanUnderlyingPriceIsInTheMoneyItm = 1,\r\n  LessThanOrEqualToTheUnderlyingPriceIsInTheMoneyItm = 2,\r\n  EqualToTheUnderlyingPriceIsInTheMoneyItm = 3,\r\n  GreaterThanOrEqualToUnderlyingPriceIsInTheMoneyItm = 4,\r\n  GreaterThanUnderlyingIsInTheMoneyItm = 5\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Indicates the type of payout that will result from an *\r\n* in-the-money option.                                  *\r\n*********************************************************\r\n*/\r\nexport enum UnderlyingOptPayoutType {\r\n  Vanilla = 1,\r\n  Capped = 2,\r\n  Binary = 3\r\n}\r\n\r\n/*\r\n*******************************\r\n* Method for price quotation. *\r\n*******************************\r\n*/\r\nexport enum UnderlyingPriceQuoteMethod {\r\n  StandardMoneyPerUnitOfAPhysical = 'STD',\r\n  Index = 'INX',\r\n  InterestRateIndex = 'INT',\r\n  PercentOfPar = 'PCTPAR'\r\n}\r\n\r\n/*\r\n********************************************\r\n* Indicates type of valuation method used. *\r\n********************************************\r\n*/\r\nexport enum UnderlyingValuationMethod {\r\n  PremiumStyle = 'EQTY',\r\n  FuturesStyleMarkToMarket = 'FUT',\r\n  FuturesStyleWithAnAttachedCashAdjustment = 'FUTDA',\r\n  CdsStyleCollateralizationOfMarketToMarketAndCoupon = 'CDS',\r\n  CdsInDeliveryUseRecoveryRateToCalculateObligation = 'CDSD'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates whether the instruments are pre-listed only or can *\r\n* also be defined via user request.                            *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingListMethod {\r\n  PreListedOnly = 0,\r\n  UserRequested = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicates whether a restriction applies to short selling a *\r\n* security.                                                  *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingShortSaleRestriction {\r\n  NoRestrictions = 0,\r\n  SecurityIsNotShortable = 1,\r\n  SecurityNotShortableAtOrBelowTheBestBid = 2,\r\n  SecurityIsNotShortableWithoutPreBorrow = 3\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Identifies the type of complex event. *\r\n*****************************************\r\n*/\r\nexport enum UnderlyingComplexEventType {\r\n  Capped = 1,\r\n  Trigger = 2,\r\n  KnockInUp = 3,\r\n  KnockInDown = 4,\r\n  KnockOutUp = 5,\r\n  KnockOutDown = 6,\r\n  Underlying = 7,\r\n  ResetBarrier = 8,\r\n  RollingBarrier = 9,\r\n  OneTouch = 10,\r\n  NoTouch = 11,\r\n  DoubleOneTouch = 12,\r\n  DoubleNoTouch = 13,\r\n  ForeignExchangeComposite = 14,\r\n  ForeignExchangeQuanto = 15,\r\n  ForeignExchangeCrossCurrency = 16,\r\n  StrikeSpread = 17,\r\n  CalendarSpread = 18,\r\n  PriceObservationAsianOrLookback = 19,\r\n  PassThrough = 20,\r\n  StrikeSchedule = 21,\r\n  EquityValuation = 22,\r\n  DividendValuation = 23\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the boundary condition to be used for the event    *\r\n* price relative to the UnderlyingComplexEventPrice(2048) at   *\r\n* the point the complex event outcome takes effect as          *\r\n* determined by the UnderlyingComplexEventPriceTimeType(2051). *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingComplexEventPriceBoundaryMethod {\r\n  LessThanComplexEventPrice1486 = 1,\r\n  LessThanOrEqualToComplexEventPrice1486 = 2,\r\n  EqualToComplexEventPrice1486 = 3,\r\n  GreaterThanOrEqualToComplexEventPrice1486 = 4,\r\n  GreaterThanComplexEventPrice1486 = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies when the complex event outcome takes effect. The  *\r\n* outcome of a complex event is a payout or barrier action as *\r\n* specified by the UnderlyingComplexEventType(2046).          *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingComplexEventPriceTimeType {\r\n  Expiration = 1,\r\n  ImmediateAtAnyTime = 2,\r\n  SpecifiedDateTime = 3,\r\n  Close = 4,\r\n  Open = 5,\r\n  OfficialSettlementPrice = 6,\r\n  DerivativesClose = 7,\r\n  AsSpecifiedInMasterConfirmation = 8\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the condition between complex events when more    *\r\n* than one event is specified.                                *\r\n*                                                             *\r\n* Multiple barrier events would use an \"or\" condition since   *\r\n* only one can be effective at a given time. A set of digital *\r\n* range events would use an \"and\" condition since both        *\r\n* conditions must be in effect for a payout to result.        *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingComplexEventCondition {\r\n  And = 1,\r\n  Or = 2\r\n}\r\n\r\n/*\r\n****************************************\r\n* Code to represent the type of event. *\r\n****************************************\r\n*/\r\nexport enum LegEventType {\r\n  Put = 1,\r\n  Call = 2,\r\n  Tender = 3,\r\n  SinkingFundCall = 4,\r\n  Activation = 5,\r\n  Inactivation = 6,\r\n  LastEligibleTradeDate = 7,\r\n  SwapStartDate = 8,\r\n  SwapEndDate = 9,\r\n  SwapRollDate = 10,\r\n  SwapNextStartDate = 11,\r\n  SwapNextRollDate = 12,\r\n  FirstDeliveryDate = 13,\r\n  LastDeliveryDate = 14,\r\n  InitialInventoryDueDate = 15,\r\n  FinalInventoryDueDate = 16,\r\n  FirstIntentDate = 17,\r\n  LastIntentDate = 18,\r\n  PositionRemovalDate = 19,\r\n  MinimumNotice = 20,\r\n  DeliveryStartTime = 21,\r\n  DeliveryEndTime = 22,\r\n  FirstNoticeDate = 23,\r\n  LastNoticeDate = 24,\r\n  FirstExerciseDate = 25,\r\n  RedemptionDate = 26,\r\n  TradeContinuationEffectiveDate = 27,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************\r\n* Time unit associated with the event. *\r\n****************************************\r\n*/\r\nexport enum LegEventTimeUnit {\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* The broad asset category for assessing risk exposure. *\r\n*********************************************************\r\n*/\r\nexport enum LegAssetClass {\r\n  InterestRate = 1,\r\n  Currency = 2,\r\n  Credit = 3,\r\n  Equity = 4,\r\n  Commodity = 5,\r\n  Other = 6,\r\n  Cash = 7,\r\n  Debt = 8,\r\n  Fund = 9,\r\n  LoanFacility = 10\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* The general subcategory description of the asset class. *\r\n***********************************************************\r\n*/\r\nexport enum LegAssetSubClass {\r\n  SingleCurrency = 1,\r\n  CrossCurrency = 2,\r\n  BasketForMultiCurrency = 3,\r\n  SingleName = 4,\r\n  CreditIndex = 5,\r\n  IndexTranche = 6,\r\n  CreditBasket = 7,\r\n  Exotic = 8,\r\n  Common = 9,\r\n  Preferred = 10,\r\n  EquityIndex = 11,\r\n  EquityBasket = 12,\r\n  Metals = 13,\r\n  Bullion = 14,\r\n  Energy = 15,\r\n  CommodityIndex = 16,\r\n  Agricultural = 17,\r\n  Environmental = 18,\r\n  Freight = 19,\r\n  Government = 20,\r\n  Agency = 21,\r\n  Corporate = 22,\r\n  Financing = 23,\r\n  MoneyMarket = 24,\r\n  Mortgage = 25,\r\n  Municipal = 26,\r\n  MutualFund = 27,\r\n  CollectiveInvestmentVehicle = 28,\r\n  InvestmentProgram = 29,\r\n  SpecializedAccountProgram = 30,\r\n  TermLoan = 31,\r\n  BridgeLoan = 32,\r\n  LetterOfCredit = 33\r\n}\r\n\r\n/*\r\n**************\r\n* Swap type. *\r\n**************\r\n*/\r\nexport enum LegSwapClass {\r\n  BasisSwap = 'BS',\r\n  IndexSwap = 'IX',\r\n  BroadBasedSecuritySwap = 'BB',\r\n  BasketSwap = 'SK'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The broad asset category for assessing risk exposure for a *\r\n* multi-asset trade.                                         *\r\n**************************************************************\r\n*/\r\nexport enum LegSecondaryAssetClass {\r\n  InterestRate = 1,\r\n  Currency = 2,\r\n  Credit = 3,\r\n  Equity = 4,\r\n  Commodity = 5,\r\n  Other = 6,\r\n  Cash = 7,\r\n  Debt = 8,\r\n  Fund = 9,\r\n  LoanFacility = 10\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* An indication of the general description of the asset class. *\r\n****************************************************************\r\n*/\r\nexport enum LegSecondaryAssetSubClass {\r\n  SingleCurrency = 1,\r\n  CrossCurrency = 2,\r\n  BasketForMultiCurrency = 3,\r\n  SingleName = 4,\r\n  CreditIndex = 5,\r\n  IndexTranche = 6,\r\n  CreditBasket = 7,\r\n  Exotic = 8,\r\n  Common = 9,\r\n  Preferred = 10,\r\n  EquityIndex = 11,\r\n  EquityBasket = 12,\r\n  Metals = 13,\r\n  Bullion = 14,\r\n  Energy = 15,\r\n  CommodityIndex = 16,\r\n  Agricultural = 17,\r\n  Environmental = 18,\r\n  Freight = 19,\r\n  Government = 20,\r\n  Agency = 21,\r\n  Corporate = 22,\r\n  Financing = 23,\r\n  MoneyMarket = 24,\r\n  Mortgage = 25,\r\n  Municipal = 26,\r\n  MutualFund = 27,\r\n  CollectiveInvestmentVehicle = 28,\r\n  InvestmentProgram = 29,\r\n  SpecializedAccountProgram = 30,\r\n  TermLoan = 31,\r\n  BridgeLoan = 32,\r\n  LetterOfCredit = 33\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The broad asset category for assessing risk exposure for a *\r\n* multi-asset trade.                                         *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingSecondaryAssetClass {\r\n  InterestRate = 1,\r\n  Currency = 2,\r\n  Credit = 3,\r\n  Equity = 4,\r\n  Commodity = 5,\r\n  Other = 6,\r\n  Cash = 7,\r\n  Debt = 8,\r\n  Fund = 9,\r\n  LoanFacility = 10\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* An indication of the general description of the asset class. *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingSecondaryAssetSubClass {\r\n  SingleCurrency = 1,\r\n  CrossCurrency = 2,\r\n  BasketForMultiCurrency = 3,\r\n  SingleName = 4,\r\n  CreditIndex = 5,\r\n  IndexTranche = 6,\r\n  CreditBasket = 7,\r\n  Exotic = 8,\r\n  Common = 9,\r\n  Preferred = 10,\r\n  EquityIndex = 11,\r\n  EquityBasket = 12,\r\n  Metals = 13,\r\n  Bullion = 14,\r\n  Energy = 15,\r\n  CommodityIndex = 16,\r\n  Agricultural = 17,\r\n  Environmental = 18,\r\n  Freight = 19,\r\n  Government = 20,\r\n  Agency = 21,\r\n  Corporate = 22,\r\n  Financing = 23,\r\n  MoneyMarket = 24,\r\n  Mortgage = 25,\r\n  Municipal = 26,\r\n  MutualFund = 27,\r\n  CollectiveInvestmentVehicle = 28,\r\n  InvestmentProgram = 29,\r\n  SpecializedAccountProgram = 30,\r\n  TermLoan = 31,\r\n  BridgeLoan = 32,\r\n  LetterOfCredit = 33\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies whether or not MarginAmtFXRate(2088) should be *\r\n* multipled or divided.                                    *\r\n************************************************************\r\n*/\r\nexport enum MarginAmtFXRateCalc {\r\n  Divide = 'D',\r\n  Multiply = 'M'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies whether or not CollateralFXRate(2090) should be *\r\n* multipled or divided.                                     *\r\n*************************************************************\r\n*/\r\nexport enum CollateralFXRateCalc {\r\n  Divide = 'D',\r\n  Multiply = 'M'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies whether or not PayCollectFXRate(2094) should be *\r\n* multipled or divided.                                     *\r\n*************************************************************\r\n*/\r\nexport enum PayCollectFXRateCalc {\r\n  Divide = 'D',\r\n  Multiply = 'M'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies whether or not PositionFXRate(2097) should be *\r\n* multipled or divided.                                   *\r\n***********************************************************\r\n*/\r\nexport enum PositionFXRateCalc {\r\n  Divide = 'D',\r\n  Multiply = 'M'\r\n}\r\n\r\n/*\r\n************************************************\r\n* The encoding type of the content provided in *\r\n* EncodedAttachment(2112).                     *\r\n************************************************\r\n*/\r\nexport enum AttachmentEncodingType {\r\n  Base64Encoding = 0,\r\n  UnencodedBinaryContent = 1\r\n}\r\n\r\n/*\r\n************************************************\r\n* Specifies the negotiation method to be used. *\r\n************************************************\r\n*/\r\nexport enum NegotiationMethod {\r\n  AutoSpot = 0,\r\n  NegotiatedSpot = 1,\r\n  TheSpotPriceForTheReferenceOrBenchmarkSecurityIsToBeNegotiatedViaPhoneOrVoice = 2\r\n}\r\n\r\n/*\r\n*******************************\r\n* Trade side of payout payer. *\r\n*******************************\r\n*/\r\nexport enum ComplexOptPayoutPaySide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n**********************************\r\n* Trade side of payout receiver. *\r\n**********************************\r\n*/\r\nexport enum ComplexOptPayoutReceiveSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n******************************************\r\n* Specifies when the payout is to occur. *\r\n******************************************\r\n*/\r\nexport enum ComplexOptPayoutTime {\r\n  Close = 0,\r\n  Open = 1,\r\n  OfficialSettlement = 2,\r\n  ValuationTime = 3,\r\n  ExchangeSettlementTime = 4,\r\n  DerivativesClose = 5,\r\n  AsSpecifiedInMasterConfirmation = 6\r\n}\r\n\r\n/*\r\n***********************************************\r\n* For foreign exchange Quanto option feature. *\r\n***********************************************\r\n*/\r\nexport enum ComplexEventQuoteBasis {\r\n  Currency1PerCurrency2 = 0,\r\n  Currency2PerCurrency1 = 1\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Used to identify the calculation agent. *\r\n*******************************************\r\n*/\r\nexport enum ComplexEventCalculationAgent {\r\n  ExercisingParty = 0,\r\n  NonExercisingParty = 1,\r\n  AsSpecifiedInTheMasterAgreement = 2,\r\n  AsSpecifiedInTheStandardTermsSupplement = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The notifying party is the party that notifies the other    *\r\n* party when a credit event has occurred by means of a credit *\r\n* event notice. If more than one party is referenced as being *\r\n* the notifying party then either party may notify the other  *\r\n* of a credit event occurring.                                *\r\n***************************************************************\r\n*/\r\nexport enum ComplexEventCreditEventNotifyingParty {\r\n  SellerNotifies = 0,\r\n  BuyerNotifies = 1,\r\n  SellerOrBuyerNotifies = 2\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Specifies the type of trade strategy. *\r\n*****************************************\r\n*/\r\nexport enum StrategyType {\r\n  Straddle = 'STD',\r\n  Strangle = 'STG',\r\n  Butterfly = 'BF',\r\n  Condor = 'CNDR',\r\n  CallableInversibleSnowball = 'CISN',\r\n  Other = 'OTHER'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the consequences of bullion settlement disruption *\r\n* events.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum SettlDisruptionProvision {\r\n  Negotiation = 1,\r\n  CancellationAndPayment = 2\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Specifies the rounding direction if not overridden *\r\n* elsewhere.                                         *\r\n******************************************************\r\n*/\r\nexport enum InstrumentRoundingDirection {\r\n  RoundToNearest = '0',\r\n  RoundDown = '1',\r\n  RoundUp = '2'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the method under which assignment was conducted. *\r\n**************************************************************\r\n*/\r\nexport enum LegInstrmtAssignmentMethod {\r\n  ProRata = 'P',\r\n  Random = 'R'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Used for derivatives. Denotes the current state of the *\r\n* InstrumentLeg.                                         *\r\n**********************************************************\r\n*/\r\nexport enum LegSecurityStatus {\r\n  Active = '1',\r\n  Inactive = '2',\r\n  ActiveClosingOrdersOnly = '3',\r\n  Expired = '4',\r\n  Delisted = '5',\r\n  KnockedOut = '6',\r\n  KnockOutRevoked = '7',\r\n  PendingExpiry = '8',\r\n  Suspended = '9',\r\n  Published = '10',\r\n  PendingDeletion = '11'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* A category of CDS credit event in which the underlying bond *\r\n* experiences a restructuring.                                *\r\n* Used to define a CDS instrument.                            *\r\n***************************************************************\r\n*/\r\nexport enum LegRestructuringType {\r\n  FullRestructuring = 'FR',\r\n  ModifiedRestructuring = 'MR',\r\n  ModifiedModRestructuring = 'MM',\r\n  NoRestructuringSpecified = 'XR'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies which issue (underlying bond) will receive payment *\r\n* priority in the event of a default.                          *\r\n* Used to define a CDS instrument.                             *\r\n****************************************************************\r\n*/\r\nexport enum LegSeniority {\r\n  SeniorSecured = 'SD',\r\n  Senior = 'SR',\r\n  Subordinated = 'SB'\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Type of reference obligation for credit derivatives *\r\n* contracts.                                          *\r\n*******************************************************\r\n*/\r\nexport enum LegObligationType {\r\n  Bond = '0',\r\n  ConvertibleBond = '1',\r\n  Mortgage = '2',\r\n  Loan = '3'\r\n}\r\n\r\n/*\r\n*********************************************\r\n* The subclassification or subtype of swap. *\r\n*********************************************\r\n*/\r\nexport enum LegSwapSubClass {\r\n  Amortizing = 'AMTZ',\r\n  Compounding = 'COMP'\r\n}\r\n\r\n/*\r\n******************************************\r\n* Specifies the coupon type of the bond. *\r\n******************************************\r\n*/\r\nexport enum LegCouponType {\r\n  Zero = 0,\r\n  FixedRate = 1,\r\n  FloatingRate = 2,\r\n  Structured = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency of the bond's coupon *\r\n* payment.                                                     *\r\n****************************************************************\r\n*/\r\nexport enum LegCouponFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The day count convention used in interest calculations for a *\r\n* bond or an interest bearing security.                        *\r\n****************************************************************\r\n*/\r\nexport enum LegCouponDayCount {\r\n  E11 = 0,\r\n  E3036030U360OrBondBasis = 1,\r\n  E30360Sia = 2,\r\n  E30360M = 3,\r\n  E30E360EurobondBasis = 4,\r\n  E30E360Isda = 5,\r\n  Act360 = 6,\r\n  Act365Fixed = 7,\r\n  ActActAfb = 8,\r\n  ActActIcma = 9,\r\n  ActActIcsmaUltimo = 10,\r\n  ActActIsda = 11,\r\n  Bus252 = 12,\r\n  E30E360 = 13,\r\n  Act365L = 14,\r\n  Nl365 = 15,\r\n  Nl360 = 16,\r\n  Act364 = 17\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Identifies class or source of the               *\r\n* LegConvertibleBondEquitySecurityID(2166) value. *\r\n***************************************************\r\n*/\r\nexport enum LegConvertibleBondEquityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Indicates the seniority level of the lien in a loan. *\r\n********************************************************\r\n*/\r\nexport enum LegLienSeniority {\r\n  Unknown = 0,\r\n  FirstLien = 1,\r\n  SecondLien = 2,\r\n  ThirdLien = 3\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the type of loan when the credit default swap's *\r\n* reference obligation is a loan.                           *\r\n*************************************************************\r\n*/\r\nexport enum LegLoanFacility {\r\n  BridgeLoan = 0,\r\n  LetterOfCredit = 1,\r\n  RevolvingLoan = 2,\r\n  SwinglineFunding = 3,\r\n  TermLoan = 4,\r\n  TradeClaim = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the type of reference entity for first-to-default *\r\n* CDS basket contracts.                                       *\r\n***************************************************************\r\n*/\r\nexport enum LegReferenceEntityType {\r\n  Asian = 1,\r\n  AustralianAndNewZealand = 2,\r\n  EuropeanEmergingMarkets = 3,\r\n  Japanese = 4,\r\n  NorthAmericanHighYield = 5,\r\n  NorthAmericanInsurance = 6,\r\n  NorthAmericanInvestmentGrade = 7,\r\n  Singaporean = 8,\r\n  WesternEuropean = 9,\r\n  WesternEuropeanInsurance = 10\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Used to express the unit of measure (UOM) of the price if *\r\n* different from the contract.                              *\r\n*************************************************************\r\n*/\r\nexport enum LegStrikeUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies how the strike price is determined at the point of *\r\n* option exercise. The strike may be fixed throughout the life *\r\n* of the option, set at expiration to the value of the         *\r\n* underlying, set to the average value of the underlying , or  *\r\n* set to the optimal value of the underlying.                  *\r\n****************************************************************\r\n*/\r\nexport enum LegStrikePriceDeterminationMethod {\r\n  FixedStrikeDefaultIfNotSpecified = 1,\r\n  StrikeSetAtExpirationToUnderlyingOrOtherValueLookbackFloating = 2,\r\n  StrikeSetToAverageOfUnderlyingSettlementPriceAcrossTheLifeOfTheOption = 3,\r\n  StrikeSetToOptimalValue = 4\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the boundary condition to be used for the strike *\r\n* price relative to the underlying price at the point of     *\r\n* option exercise.                                           *\r\n**************************************************************\r\n*/\r\nexport enum LegStrikePriceBoundaryMethod {\r\n  LessThanUnderlyingPriceIsInTheMoneyItm = 1,\r\n  LessThanOrEqualToTheUnderlyingPriceIsInTheMoneyItm = 2,\r\n  EqualToTheUnderlyingPriceIsInTheMoneyItm = 3,\r\n  GreaterThanOrEqualToUnderlyingPriceIsInTheMoneyItm = 4,\r\n  GreaterThanUnderlyingIsInTheMoneyItm = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies how the underlying price is determined at the      *\r\n* point of option exercise. The underlying price may be set to *\r\n* the current settlement price, set to a special reference,    *\r\n* set to the optimal value of the underlying during the        *\r\n* defined period (\"Look-back\") or set to the average value of  *\r\n* the underlying during the defined period (\"Asian option\").   *\r\n****************************************************************\r\n*/\r\nexport enum LegUnderlyingPriceDeterminationMethod {\r\n  Regular = 1,\r\n  SpecialReference = 2,\r\n  OptimalValueLookback = 3,\r\n  AverageValueAsianOption = 4\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Settlement method for a contract or instrument. Additional *\r\n* values may be used with bilateral agreement.               *\r\n**************************************************************\r\n*/\r\nexport enum LegSettlMethod {\r\n  CashSettlementRequired = 'C',\r\n  PhysicalSettlementRequired = 'P',\r\n  ElectionAtExercise = 'E'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Indicates the type of payout that will result from an *\r\n* in-the-money option.                                  *\r\n*********************************************************\r\n*/\r\nexport enum LegOptPayoutType {\r\n  Vanilla = 1,\r\n  Capped = 2,\r\n  Binary = 3\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Specifies the method for price quotation. *\r\n*********************************************\r\n*/\r\nexport enum LegPriceQuoteMethod {\r\n  StandardMoneyPerUnitOfAPhysical = 'STD',\r\n  Index = 'INX',\r\n  InterestRateIndex = 'INT',\r\n  PercentOfPar = 'PCTPAR'\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Specifies the type of valuation method applied. *\r\n***************************************************\r\n*/\r\nexport enum LegValuationMethod {\r\n  PremiumStyle = 'EQTY',\r\n  FuturesStyleMarkToMarket = 'FUT',\r\n  FuturesStyleWithAnAttachedCashAdjustment = 'FUTDA',\r\n  CdsStyleCollateralizationOfMarketToMarketAndCoupon = 'CDS',\r\n  CdsInDeliveryUseRecoveryRateToCalculateObligation = 'CDSD'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Indicates whether instruments are pre-listed only or can *\r\n* also be defined via user request.                        *\r\n************************************************************\r\n*/\r\nexport enum LegListMethod {\r\n  PreListedOnly = 0,\r\n  UserRequested = 1\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* The program under which a commercial paper is issued. *\r\n*********************************************************\r\n*/\r\nexport enum LegCPProgram {\r\n  E3A3 = 1,\r\n  E42 = 2,\r\n  E3A2 = 3,\r\n  E3A33C7 = 4,\r\n  E3A4 = 5,\r\n  E3A5 = 6,\r\n  E3A7 = 7,\r\n  E3C7 = 8,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Indicates whether a restriction applies to short selling a *\r\n* security.                                                  *\r\n**************************************************************\r\n*/\r\nexport enum LegShortSaleRestriction {\r\n  NoRestrictions = 0,\r\n  SecurityIsNotShortable = 1,\r\n  SecurityNotShortableAtOrBelowTheBestBid = 2,\r\n  SecurityIsNotShortableWithoutPreBorrow = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates the broad product or asset classification.  May be *\r\n* used to provide grouping for the product taxonomy            *\r\n* (Product(460), SecurityType(167), etc.) and/or the risk      *\r\n* taxonomy (AssetClass(1938), AssetSubClass(1939),             *\r\n* AssetType(1940), etc.).                                      *\r\n****************************************************************\r\n*/\r\nexport enum AssetGroup {\r\n  Financials = 1,\r\n  Commodities = 2,\r\n  AlternativeInvestments = 3\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Specifies the type of trade strategy. *\r\n*****************************************\r\n*/\r\nexport enum LegStrategyType {\r\n  Straddle = 'STD',\r\n  Strangle = 'STG',\r\n  Butterfly = 'BF',\r\n  Condor = 'CNDR',\r\n  CallableInversibleSnowball = 'CISN',\r\n  Other = 'OTHER'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the consequences of bullion settlement disruption *\r\n* events.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum LegSettlDisruptionProvision {\r\n  Negotiation = 1,\r\n  CancellationAndPayment = 2\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Specifies the rounding direction if not overridden *\r\n* elsewhere.                                         *\r\n******************************************************\r\n*/\r\nexport enum LegInstrumentRoundingDirection {\r\n  RoundToNearest = '0',\r\n  RoundDown = '1',\r\n  RoundUp = '2'\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Identifies the type of complex event. *\r\n*****************************************\r\n*/\r\nexport enum LegComplexEventType {\r\n  Capped = 1,\r\n  Trigger = 2,\r\n  KnockInUp = 3,\r\n  KnockInDown = 4,\r\n  KnockOutUp = 5,\r\n  KnockOutDown = 6,\r\n  Underlying = 7,\r\n  ResetBarrier = 8,\r\n  RollingBarrier = 9,\r\n  OneTouch = 10,\r\n  NoTouch = 11,\r\n  DoubleOneTouch = 12,\r\n  DoubleNoTouch = 13,\r\n  ForeignExchangeComposite = 14,\r\n  ForeignExchangeQuanto = 15,\r\n  ForeignExchangeCrossCurrency = 16,\r\n  StrikeSpread = 17,\r\n  CalendarSpread = 18,\r\n  PriceObservationAsianOrLookback = 19,\r\n  PassThrough = 20,\r\n  StrikeSchedule = 21,\r\n  EquityValuation = 22,\r\n  DividendValuation = 23\r\n}\r\n\r\n/*\r\n*******************************\r\n* Trade side of payout payer. *\r\n*******************************\r\n*/\r\nexport enum LegComplexOptPayoutPaySide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n**********************************\r\n* Trade side of payout receiver. *\r\n**********************************\r\n*/\r\nexport enum LegComplexOptPayoutReceiveSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n******************************************\r\n* Specifies when the payout is to occur. *\r\n******************************************\r\n*/\r\nexport enum LegComplexOptPayoutTime {\r\n  Close = 0,\r\n  Open = 1,\r\n  OfficialSettlement = 2,\r\n  ValuationTime = 3,\r\n  ExchangeSettlementTime = 4,\r\n  DerivativesClose = 5,\r\n  AsSpecifiedInMasterConfirmation = 6\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the boundary condition to be used for the event  *\r\n* price relative to the complex event price at the point the *\r\n* complex event outcome takes effect as determined by the    *\r\n* LegComplexEventPriceTimeType(2231).                        *\r\n**************************************************************\r\n*/\r\nexport enum LegComplexEventPriceBoundaryMethod {\r\n  LessThanComplexEventPrice1486 = 1,\r\n  LessThanOrEqualToComplexEventPrice1486 = 2,\r\n  EqualToComplexEventPrice1486 = 3,\r\n  GreaterThanOrEqualToComplexEventPrice1486 = 4,\r\n  GreaterThanComplexEventPrice1486 = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies when the complex event outcome takes effect. The  *\r\n* outcome of a complex event is a payout or barrier action as *\r\n* specified by the LegComplexEventType(2219).                 *\r\n***************************************************************\r\n*/\r\nexport enum LegComplexEventPriceTimeType {\r\n  Expiration = 1,\r\n  ImmediateAtAnyTime = 2,\r\n  SpecifiedDateTime = 3,\r\n  Close = 4,\r\n  Open = 5,\r\n  OfficialSettlementPrice = 6,\r\n  DerivativesClose = 7,\r\n  AsSpecifiedInMasterConfirmation = 8\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the condition between complex events when more    *\r\n* than one event is specified.                                *\r\n* Multiple barrier events would use an \"or\" condition since   *\r\n* only one can be effective at a given time. A set of digital *\r\n* range events would use an \"and\" condition since both        *\r\n* conditions must be in effect for a payout to result.        *\r\n***************************************************************\r\n*/\r\nexport enum LegComplexEventCondition {\r\n  And = 1,\r\n  Or = 2\r\n}\r\n\r\n/*\r\n***********************************************\r\n* For foreign exchange Quanto option feature. *\r\n***********************************************\r\n*/\r\nexport enum LegComplexEventQuoteBasis {\r\n  Currency1PerCurrency2 = 0,\r\n  Currency2PerCurrency1 = 1\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Used to identify the calculation agent. *\r\n*******************************************\r\n*/\r\nexport enum LegComplexEventCalculationAgent {\r\n  ExercisingParty = 0,\r\n  NonExercisingParty = 1,\r\n  AsSpecifiedInTheMasterAgreement = 2,\r\n  AsSpecifiedInTheStandardTermsSupplement = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The notifying party is the party that notifies the other    *\r\n* party when a credit event has occurred by means of a credit *\r\n* event notice. If more than one party is referenced as being *\r\n* the notifying party then either party may notify the other  *\r\n* of a credit event occurring.                                *\r\n***************************************************************\r\n*/\r\nexport enum LegComplexEventCreditEventNotifyingParty {\r\n  SellerNotifies = 0,\r\n  BuyerNotifies = 1,\r\n  SellerOrBuyerNotifies = 2\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Used to identify source of instrument party id. *\r\n***************************************************\r\n*/\r\nexport enum LegInstrumentPartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Used to identify the role of instrument party id. *\r\n*****************************************************\r\n*/\r\nexport enum LegInstrumentPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Type of LegInstrumentPartySubID (2259) value. *\r\n*************************************************\r\n*/\r\nexport enum LegInstrumentPartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n*******************************\r\n* Trade side of payout payer. *\r\n*******************************\r\n*/\r\nexport enum UnderlyingComplexOptPayoutPaySide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n**********************************\r\n* Trade side of payout receiver. *\r\n**********************************\r\n*/\r\nexport enum UnderlyingComplexOptPayoutReceiveSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n*****************************************\r\n* The time when the payout is to occur. *\r\n*****************************************\r\n*/\r\nexport enum UnderlyingComplexOptPayoutTime {\r\n  Close = 0,\r\n  Open = 1,\r\n  OfficialSettlement = 2,\r\n  ValuationTime = 3,\r\n  ExchangeSettlementTime = 4,\r\n  DerivativesClose = 5,\r\n  AsSpecifiedInMasterConfirmation = 6\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Specifies the currency pairing for the quote. *\r\n*************************************************\r\n*/\r\nexport enum UnderlyingComplexEventQuoteBasis {\r\n  Currency1PerCurrency2 = 0,\r\n  Currency2PerCurrency1 = 1\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Used to identify the calculation agent. *\r\n*******************************************\r\n*/\r\nexport enum UnderlyingComplexEventCalculationAgent {\r\n  ExercisingParty = 0,\r\n  NonExercisingParty = 1,\r\n  AsSpecifiedInTheMasterAgreement = 2,\r\n  AsSpecifiedInTheStandardTermsSupplement = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The notifying party is the party that notifies the other    *\r\n* party when a credit event has occurred by means of a credit *\r\n* event notice. If more than one party is referenced as being *\r\n* the notifying party then either party may notify the other  *\r\n* of a credit event occurring.                                *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingComplexEventCreditEventNotifyingParty {\r\n  SellerNotifies = 0,\r\n  BuyerNotifies = 1,\r\n  SellerOrBuyerNotifies = 2\r\n}\r\n\r\n/*\r\n*********************************************\r\n* The subclassification or subtype of swap. *\r\n*********************************************\r\n*/\r\nexport enum UnderlyingSwapSubClass {\r\n  Amortizing = 'AMTZ',\r\n  Compounding = 'COMP'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Used to express the unit of measure (UOM) of the price if *\r\n* different from the contract.                              *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingStrikeUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Specifies the type of trade strategy. *\r\n*****************************************\r\n*/\r\nexport enum UnderlyingStrategyType {\r\n  Straddle = 'STD',\r\n  Strangle = 'STG',\r\n  Butterfly = 'BF',\r\n  Condor = 'CNDR',\r\n  CallableInversibleSnowball = 'CISN',\r\n  Other = 'OTHER'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the consequences of settlement disruption events. *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingSettlDisruptionProvision {\r\n  Negotiation = 1,\r\n  CancellationAndPayment = 2\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Specifies the rounding direction if not overridden *\r\n* elsewhere.                                         *\r\n******************************************************\r\n*/\r\nexport enum UnderlyingInstrumentRoundingDirection {\r\n  RoundToNearest = '0',\r\n  RoundDown = '1',\r\n  RoundUp = '2'\r\n}\r\n\r\n/*\r\n********************************\r\n* Status of risk limit report. *\r\n********************************\r\n*/\r\nexport enum RiskLimitReportStatus {\r\n  Accepted = 0,\r\n  Rejected = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The reason for rejecting the PartyRiskLimitsReport(35=CM) or *\r\n* PartyRiskLimitsUpdateReport(35=CR).                          *\r\n****************************************************************\r\n*/\r\nexport enum RiskLimitReportRejectReason {\r\n  UnknownRiskLimitReportId1667 = 0,\r\n  UnknownParty = 1,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the transaction type of the risk limit check *\r\n* request.                                               *\r\n**********************************************************\r\n*/\r\nexport enum RiskLimitCheckTransType {\r\n  New = 0,\r\n  Cancel = 1,\r\n  Replace = 2\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Specifies the type of limit check message. *\r\n**********************************************\r\n*/\r\nexport enum RiskLimitCheckType {\r\n  Submit = 0,\r\n  LimitConsumed = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the type of limit amount check being requested. *\r\n*************************************************************\r\n*/\r\nexport enum RiskLimitCheckRequestType {\r\n  AllOrNoneDefaultIfNotSpecified = 0,\r\n  Partial = 1\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Indicates the status of the risk limit check request. *\r\n*********************************************************\r\n*/\r\nexport enum RiskLimitCheckRequestStatus {\r\n  Approved = 0,\r\n  PartiallyApproved = 1,\r\n  Rejected = 2,\r\n  ApprovalPending = 3,\r\n  Cancelled = 4\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Result of the credit limit check request. *\r\n*********************************************\r\n*/\r\nexport enum RiskLimitCheckRequestResult {\r\n  SuccessfulDefault = 0,\r\n  InvalidParty = 1,\r\n  RequestedAmountExceedsCreditLimit = 2,\r\n  RequestedAmountExceedsClipSizeLimit = 3,\r\n  RequestExceedsMaximumNotionalOrderAmount = 4,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the type of action to take or was taken for a *\r\n* given party.                                            *\r\n***********************************************************\r\n*/\r\nexport enum PartyActionType {\r\n  Suspend = 0,\r\n  HaltTrading = 1,\r\n  Reinstate = 2\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the action taken as a result of the          *\r\n* PartyActionType(2239) of the PartyActionRequest(35=DH) *\r\n* message.                                               *\r\n**********************************************************\r\n*/\r\nexport enum PartyActionResponse {\r\n  Accepted = 0,\r\n  Completed = 1,\r\n  Rejected = 2\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the reason the PartyActionRequest(35=DH) was *\r\n* rejected.                                              *\r\n**********************************************************\r\n*/\r\nexport enum PartyActionRejectReason {\r\n  InvalidPartyOrParties = 0,\r\n  UnknownRequestingParty = 1,\r\n  NotAuthorized = 98,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Specifies which type of identifier is specified in *\r\n* RefRiskLimitCheckID(2334) field.                   *\r\n******************************************************\r\n*/\r\nexport enum RefRiskLimitCheckIDType {\r\n  RiskLimitRequestId1666 = 0,\r\n  RiskLimitCheckId2319 = 1,\r\n  OutOfBandIdentifier = 3\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Unit of time in which RiskLimitVelocityPeriod(2336) is *\r\n* expressed.                                             *\r\n**********************************************************\r\n*/\r\nexport enum RiskLimitVelocityUnit {\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Quarter = 'Q'\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Qualifies the value of RequestingPartyRole(1660). *\r\n*****************************************************\r\n*/\r\nexport enum RequestingPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the type of credit limit check model workflow to *\r\n* apply for the specified party                              *\r\n**************************************************************\r\n*/\r\nexport enum RiskLimitCheckModelType {\r\n  NoneDefaultIfNotSpecified = 0,\r\n  PlusOneModel = 1,\r\n  PingModel = 2,\r\n  PushModel = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates the status of the risk limit check performed on a *\r\n* trade.                                                      *\r\n***************************************************************\r\n*/\r\nexport enum RiskLimitCheckStatus {\r\n  Accepted = 0,\r\n  Rejected = 1,\r\n  ClaimRequired = 2,\r\n  PreDefinedLimitCheckSucceeded = 3,\r\n  PreDefinedLimitCheckFailed = 4,\r\n  PreDefinedAutoAcceptRuleInvoked = 5,\r\n  PreDefinedAutoRejectRuleInvoked = 6,\r\n  AcceptedByClearingFirm = 7,\r\n  RejectedByClearingFirm = 8,\r\n  Pending = 9,\r\n  AcceptedByCreditHub = 10,\r\n  RejectedByCreditHub = 11,\r\n  PendingCreditHubCheck = 12,\r\n  AcceptedByExecutionVenue = 13,\r\n  RejectedByExecutionVenue = 14\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates the status of the risk limit check performed on *\r\n* the side of a trade.                                      *\r\n*************************************************************\r\n*/\r\nexport enum SideRiskLimitCheckStatus {\r\n  Accepted = 0,\r\n  Rejected = 1,\r\n  ClaimRequired = 2,\r\n  PreDefinedLimitCheckSucceeded = 3,\r\n  PreDefinedLimitCheckFailed = 4,\r\n  PreDefinedAutoAcceptRuleInvoked = 5,\r\n  PreDefinedAutoRejectRuleInvoked = 6,\r\n  AcceptedByClearingFirm = 7,\r\n  RejectedByClearingFirm = 8,\r\n  Pending = 9,\r\n  AcceptedByCreditHub = 10,\r\n  RejectedByCreditHub = 11,\r\n  PendingCreditHubCheck = 12,\r\n  AcceptedByExecutionVenue = 13,\r\n  RejectedByExecutionVenue = 14\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Specifies the regulatory mandate or rule that the *\r\n* transaction complies with.                        *\r\n*****************************************************\r\n*/\r\nexport enum RegulatoryTransactionType {\r\n  NoneDefaultIfNotSpecified = 0,\r\n  SwapExecutionFacilitySefRequiredTransaction = 1,\r\n  SwapExecutionFacilitySefPermittedTransaction = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates the broad product or asset classification.  May be *\r\n* used to provide grouping for the product taxonomy            *\r\n* (Product(460), SecurityType(167), etc.) and/or the risk      *\r\n* taxonomy (AssetClass(1938), AssetSubClass(1939),             *\r\n* AssetType(1940), etc.).                                      *\r\n****************************************************************\r\n*/\r\nexport enum LegAssetGroup {\r\n  Financials = 1,\r\n  Commodities = 2,\r\n  AlternativeInvestments = 3\r\n}\r\n\r\n/*\r\n******************************************\r\n* The status of risk limits for a party. *\r\n******************************************\r\n*/\r\nexport enum PartyRiskLimitStatus {\r\n  Disabled = 0,\r\n  Enabled = 1\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Indicates whether the trade price was adjusted for  *\r\n* compensation (i.e. includes a mark-up, mark-down or *\r\n* commission) in the price paid.                      *\r\n*******************************************************\r\n*/\r\nexport enum RemunerationIndicator {\r\n  NoRemunerationPaid = 0,\r\n  RemunerationPaid = 1\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Indicates action that triggered the Position Report. *\r\n********************************************************\r\n*/\r\nexport enum PosReportAction {\r\n  New = 1,\r\n  Replace = 2,\r\n  Cancel = 3,\r\n  Reverse = 4\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies whether LastPx(31) [TradeCaptureReport] or     *\r\n* SettlPrice(730) [PositionReport] should be multiplied or *\r\n* divided.                                                 *\r\n************************************************************\r\n*/\r\nexport enum SettlPriceFxRateCalc {\r\n  Multiply = 'M',\r\n  Divide = 'D'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The type of identification taxonomy used to identify the *\r\n* security.                                                *\r\n************************************************************\r\n*/\r\nexport enum TaxonomyType {\r\n  IsinOrAlternateInstrumentIdentifierPlusCfi = 'I',\r\n  InterimTaxonomy = 'E'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Used to further qualify the value of PartyRole(452). *\r\n********************************************************\r\n*/\r\nexport enum PartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n****************************************\r\n* Used to further qualify the value of *\r\n* DerivativeInstrumentPartyRole(1295). *\r\n****************************************\r\n*/\r\nexport enum DerivativeInstrumentPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n****************************************\r\n* Used to further qualify the value of *\r\n* InstrumentPartyRole(1051).           *\r\n****************************************\r\n*/\r\nexport enum InstrumentPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n****************************************\r\n* Used to further qualify the value of *\r\n* LegInstrumentPartyRole(2257).        *\r\n****************************************\r\n*/\r\nexport enum LegInstrumentPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n****************************************\r\n* Used to further qualify the value of *\r\n* LegProvisionPartyRole(40536).        *\r\n****************************************\r\n*/\r\nexport enum LegProvisionPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Used to further qualify the value of Nested2PartyRole(759). *\r\n***************************************************************\r\n*/\r\nexport enum Nested2PartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Used to further qualify the value of Nested3PartyRole(951). *\r\n***************************************************************\r\n*/\r\nexport enum Nested3PartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Used to further qualify the value of Nested4PartyRole(1417). *\r\n****************************************************************\r\n*/\r\nexport enum Nested4PartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Used to further qualify the value of NestedPartyRole(538). *\r\n**************************************************************\r\n*/\r\nexport enum NestedPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n****************************************\r\n* Used to further qualify the value of *\r\n* ProvisionPartyRole(40177).           *\r\n****************************************\r\n*/\r\nexport enum ProvisionPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n****************************************\r\n* Used to further qualify the value of *\r\n* RequestedPartyRole(1509).            *\r\n****************************************\r\n*/\r\nexport enum RequestedPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates the contingency attribute for a trade in an asset *\r\n* class that may be contingent on the clearing of a           *\r\n* corresponding paired trade (for example Exchange for        *\r\n* Physical (EFP), Exchange for Swap (EFS), Exchange for       *\r\n* Related (EFR) or Exchange for Option (EFO), collectively    *\r\n* called EFRPs). Once the paired trade clears or fails to     *\r\n* clear, the related trade (the trade which carries this      *\r\n* attribute) ceases to exist.                                 *\r\n***************************************************************\r\n*/\r\nexport enum TradeContingency {\r\n  DoesNotApplyDefaultIfNotSpecified = 0,\r\n  ContingentTrade = 1,\r\n  NonContingentTrade = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Used to further qualify the value of RootPartyRole(1119). *\r\n*************************************************************\r\n*/\r\nexport enum RootPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Used to further qualify the value of SettlPartyRole(784). *\r\n*************************************************************\r\n*/\r\nexport enum SettlPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n****************************************\r\n* Used to further qualify the value of *\r\n* UnderlyingInstrumentPartyRole(1061). *\r\n****************************************\r\n*/\r\nexport enum UnderlyingInstrumentPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Specifies which type of identifier is specified in *\r\n* AllocRefRiskLimitCheckID(2392) field.              *\r\n******************************************************\r\n*/\r\nexport enum AllocRefRiskLimitCheckIDType {\r\n  RiskLimitRequestId1666 = 0,\r\n  RiskLimitCheckId2319 = 1,\r\n  OutOfBandIdentifier = 3\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Indicates the scope of the limit by role. *\r\n*********************************************\r\n*/\r\nexport enum LimitRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the scope to which the RegulatoryTradeID(1903)     *\r\n* applies.  Used when a trade must be assigned more than one   *\r\n* identifier, e.g. one for the clearing member and another for *\r\n* the client on a cleared trade as with the principal model in *\r\n* Europe.                                                      *\r\n****************************************************************\r\n*/\r\nexport enum RegulatoryTradeIDScope {\r\n  ClearingMember = 1,\r\n  Client = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the scope to which the SideRegulatoryTradeID(1972) *\r\n* applies.  Used when a trade must be assigned more than one   *\r\n* identifier, e.g. one for the clearing member and another for *\r\n* the client on a cleared trade as with the principal model in *\r\n* Europe.                                                      *\r\n****************************************************************\r\n*/\r\nexport enum SideRegulatoryTradeIDScope {\r\n  ClearingMember = 1,\r\n  Client = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the scope to which the                            *\r\n* AllocRegulatoryTradeID(1909) applies.  Used when a trade    *\r\n* must be assigned more than one identifier, e.g. one for the *\r\n* clearing member and another for the client on a cleared     *\r\n* trade as with the principal model in Europe.                *\r\n***************************************************************\r\n*/\r\nexport enum AllocRegulatoryTradeIDScope {\r\n  ClearingMember = 1,\r\n  Client = 2\r\n}\r\n\r\n/*\r\n******************************************\r\n* Subtype of an entitlement specified in *\r\n* EntitlementType(1775).                 *\r\n******************************************\r\n*/\r\nexport enum EntitlementSubType {\r\n  OrderEntry = 1,\r\n  HitLift = 2,\r\n  ViewIndicativePrices = 3,\r\n  ViewExecutablePrices = 4,\r\n  SingleQuote = 5,\r\n  StreamingQuotes = 6,\r\n  SingleBroker = 7,\r\n  MultiBrokers = 8\r\n}\r\n\r\n/*\r\n********************\r\n* Quote model type *\r\n********************\r\n*/\r\nexport enum QuoteModelType {\r\n  QuoteEntry = 1,\r\n  QuoteModification = 2\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies how the transaction was executed, e.g. via an *\r\n* automated execution platform or other method.           *\r\n***********************************************************\r\n*/\r\nexport enum ExecMethod {\r\n  UndefinedUnspecifiedDefaultWhenNotSpecified = 0,\r\n  Manual = 1,\r\n  Automated = 2,\r\n  VoiceBrokered = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Identifies class or source of the RelatedToSecurityID(2413) *\r\n* value.                                                      *\r\n***************************************************************\r\n*/\r\nexport enum RelatedToSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n*********************************\r\n* Status of mass order request. *\r\n*********************************\r\n*/\r\nexport enum MassOrderRequestStatus {\r\n  Accepted = 1,\r\n  AcceptedWithAdditionalEvents = 2,\r\n  Rejected = 3\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Request result of mass order request. *\r\n*****************************************\r\n*/\r\nexport enum MassOrderRequestResult {\r\n  Successful = 0,\r\n  ResponseLevelNotSupported = 1,\r\n  InvalidMarket = 2,\r\n  InvalidMarketSegment = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The level of response requested from receiver of mass order *\r\n* messages. A default value should be bilaterally agreed.     *\r\n***************************************************************\r\n*/\r\nexport enum OrderResponseLevel {\r\n  NoAcknowledgement = 0,\r\n  MinimumAcknowledgement = 1,\r\n  AcknowledgeEachOrder = 2,\r\n  SummaryAcknowledgement = 3\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Specifies the action to be taken for the given order. *\r\n*********************************************************\r\n*/\r\nexport enum OrderEntryAction {\r\n  Add = '1',\r\n  Modify = '2',\r\n  DeleteCancel = '3',\r\n  Suspend = '4',\r\n  Release = '5'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The initiating event when an ExecutionReport(35=8) is sent. *\r\n***************************************************************\r\n*/\r\nexport enum ExecTypeReason {\r\n  OrderAddedUponRequest = 1,\r\n  OrderReplacedUponRequest = 2,\r\n  OrderCancelledUponRequest = 3,\r\n  UnsolicitedOrderCancellation = 4,\r\n  NonRestingOrderAddedUponRequest = 5,\r\n  OrderReplacedWithNonRestingOrderUponRequest = 6,\r\n  TriggerOrderReplacedUponRequest = 7,\r\n  SuspendedOrderReplacedUponRequest = 8,\r\n  SuspendedOrderCanceledUponRequest = 9,\r\n  OrderCancellationPending = 10,\r\n  PendingCancellationExecuted = 11,\r\n  RestingOrderTriggered = 12,\r\n  SuspendedOrderActivated = 13,\r\n  ActiveOrderSuspended = 14,\r\n  OrderExpired = 15\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Type of TargetPartySubID(2434) value. *\r\n*****************************************\r\n*/\r\nexport enum TargetPartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Indicates the type of transfer transaction. *\r\n***********************************************\r\n*/\r\nexport enum TransferTransType {\r\n  New = 0,\r\n  Replace = 1,\r\n  Cancel = 2\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Indicates the type of transfer request. *\r\n*******************************************\r\n*/\r\nexport enum TransferType {\r\n  RequestTransfer = 0,\r\n  AcceptTransfer = 1,\r\n  DeclineTransfer = 2\r\n}\r\n\r\n/*\r\n***********************************\r\n* Indicates the type of transfer. *\r\n***********************************\r\n*/\r\nexport enum TransferScope {\r\n  InterFirmTransfer = 0,\r\n  IntraFirmTransfer = 1,\r\n  ClearingMemberTradeAssignment = 2\r\n}\r\n\r\n/*\r\n***************************\r\n* Status of the transfer. *\r\n***************************\r\n*/\r\nexport enum TransferStatus {\r\n  Received = 0,\r\n  RejectedByIntermediary = 1,\r\n  AcceptPending = 2,\r\n  Accepted = 3,\r\n  Declined = 4,\r\n  Cancelled = 5\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Reason the transfer instruction was rejected. *\r\n*************************************************\r\n*/\r\nexport enum TransferRejectReason {\r\n  Success = 0,\r\n  InvalidParty = 1,\r\n  UnknownInstrument = 2,\r\n  NotAuthorizedToSubmitTransfers = 3,\r\n  UnknownPosition = 4,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n******************************************\r\n* Indicates the type of transfer report. *\r\n******************************************\r\n*/\r\nexport enum TransferReportType {\r\n  Submit = 0,\r\n  Alleged = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Side of aggressive order or quote resulting in match event. *\r\n***************************************************************\r\n*/\r\nexport enum AggressorSide {\r\n  Buy = '1',\r\n  Sell = '2',\r\n  BuyMinus = '3',\r\n  SellPlus = '4',\r\n  SellShort = '5',\r\n  SellShortExempt = '6',\r\n  Undisclosed = '7',\r\n  CrossOrdersWhereCounterpartyIsAnExchangeValidForAllMessagesExceptIoIs = '8',\r\n  CrossShort = '9',\r\n  CrossShortExempt = 'A',\r\n  AsDefinedForUseWithMultilegInstruments = 'B',\r\n  OppositeForUseWithMultilegInstruments = 'C',\r\n  SubscribeEGCiv = 'D',\r\n  RedeemEGCiv = 'E',\r\n  LendFinancingIdentifiesDirectionOfCollateral = 'F',\r\n  BorrowFinancingIdentifiesDirectionOfCollateral = 'G',\r\n  SellUndisclosed = 'H'\r\n}\r\n\r\n/*\r\n****************************\r\n* Type of statistic value. *\r\n****************************\r\n*/\r\nexport enum MDStatisticType {\r\n  Count = 1,\r\n  AverageVolume = 2,\r\n  TotalVolume = 3,\r\n  Distribution = 4,\r\n  Ratio = 5,\r\n  Liquidity = 6,\r\n  VolumeWeightedAveragePriceVwap = 7,\r\n  Volatility = 8,\r\n  Duration = 9,\r\n  Tick = 10,\r\n  AverageTurnover = 11,\r\n  TotalTurnover = 12,\r\n  High = 13,\r\n  Low = 14,\r\n  Midpoint = 15,\r\n  First = 16,\r\n  Last = 17,\r\n  Final = 18,\r\n  ExchangeBest = 19,\r\n  ExchangeBestWithVolume = 20,\r\n  ConsolidatedBest = 21,\r\n  ConsolidatedBestWithVolume = 22,\r\n  TimeWeightedAveragePriceTwap = 23\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Entities used as basis for the statistics. *\r\n**********************************************\r\n*/\r\nexport enum MDStatisticScope {\r\n  BidPrices = 1,\r\n  OfferPrices = 2,\r\n  BidDepth = 3,\r\n  OfferDepth = 4,\r\n  Orders = 5,\r\n  Quotes = 6,\r\n  OrdersAndQuotes = 7,\r\n  Trades = 8,\r\n  TradePrices = 9,\r\n  AuctionPrices = 10,\r\n  OpeningPrices = 11,\r\n  ClosingPrices = 12,\r\n  SettlementPrices = 13,\r\n  UnderlyingPrices = 14,\r\n  OpenInterest = 15,\r\n  IndexValues = 16,\r\n  MarginRates = 17\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Sub-scope of the statistics to further reduce the entities *\r\n* used as basis for the statistics.                          *\r\n**************************************************************\r\n*/\r\nexport enum MDStatisticSubScope {\r\n  Visible = 1,\r\n  Hidden = 2,\r\n  Indicative = 3,\r\n  Tradeable = 4,\r\n  Passive = 5,\r\n  MarketConsensus = 6\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Scope details of the statistics to reduce the number of *\r\n* events being used as basis for the statistics.          *\r\n***********************************************************\r\n*/\r\nexport enum MDStatisticScopeType {\r\n  EntryRate = 1,\r\n  ModificationRate = 2,\r\n  CancelRate = 3,\r\n  DownwardMove = 4,\r\n  UpwardMove = 5\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Time unit for MDStatisticFrequencyPeriod(2460). *\r\n***************************************************\r\n*/\r\nexport enum MDStatisticFrequencyUnit {\r\n  SecondsDefaultIfNotSpecified = 0,\r\n  TenthsOfASecond = 1,\r\n  HundredthsOfASecond = 2,\r\n  Milliseconds = 3,\r\n  Microseconds = 4,\r\n  Nanoseconds = 5,\r\n  Minutes = 10,\r\n  Hours = 11,\r\n  Days = 12,\r\n  Weeks = 13,\r\n  Months = 14,\r\n  Years = 15\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Time unit for MDStatisticDelayPeriod(2462). *\r\n***********************************************\r\n*/\r\nexport enum MDStatisticDelayUnit {\r\n  SecondsDefaultIfNotSpecified = 0,\r\n  TenthsOfASecond = 1,\r\n  HundredthsOfASecond = 2,\r\n  Milliseconds = 3,\r\n  Microseconds = 4,\r\n  Nanoseconds = 5,\r\n  Minutes = 10,\r\n  Hours = 11,\r\n  Days = 12,\r\n  Weeks = 13,\r\n  Months = 14,\r\n  Years = 15\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Type of interval over which statistic is calculated. *\r\n********************************************************\r\n*/\r\nexport enum MDStatisticIntervalType {\r\n  SlidingWindow = 1,\r\n  SlidingWindowPeak = 2,\r\n  FixedDateRange = 3,\r\n  FixedTimeRange = 4,\r\n  CurrentTimeUnit = 5,\r\n  PreviousTimeUnit = 6,\r\n  MaximumRange = 7,\r\n  MaximumRangeUpToPreviousTimeUnit = 8\r\n}\r\n\r\n/*\r\n************************************************\r\n* Time unit for MDStatisticIntervalType(2464). *\r\n************************************************\r\n*/\r\nexport enum MDStatisticIntervalTypeUnit {\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Quarter = 'Q'\r\n}\r\n\r\n/*\r\n**************************************************\r\n* Time unit for MDStatisticIntervalPeriod(2466). *\r\n**************************************************\r\n*/\r\nexport enum MDStatisticIntervalUnit {\r\n  SecondsDefaultIfNotSpecified = 0,\r\n  TenthsOfASecond = 1,\r\n  HundredthsOfASecond = 2,\r\n  Milliseconds = 3,\r\n  Microseconds = 4,\r\n  Nanoseconds = 5,\r\n  Minutes = 10,\r\n  Hours = 11,\r\n  Days = 12,\r\n  Weeks = 13,\r\n  Months = 14,\r\n  Years = 15\r\n}\r\n\r\n/*\r\n************************************\r\n* Ratios between various entities. *\r\n************************************\r\n*/\r\nexport enum MDStatisticRatioType {\r\n  BuyersToSellers = 1,\r\n  UpticksToDownticks = 2,\r\n  MarketMakerToNonMarketMaker = 3,\r\n  AutomatedToNonAutomated = 4,\r\n  OrdersToTrades = 5,\r\n  QuotesToTrades = 6,\r\n  OrdersAndQuotesToTrades = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Result returned in response to MarketDataStatisticsRequest *\r\n* (35=DO).                                                   *\r\n**************************************************************\r\n*/\r\nexport enum MDStatisticRequestResult {\r\n  SuccessfulDefault = 0,\r\n  InvalidOrUnknownMarket = 1,\r\n  InvalidOrUnknownMarketSegment = 2,\r\n  InvalidOrUnknownSecurityList = 3,\r\n  InvalidOrUnknownInstrumentS = 4,\r\n  InvalidParties = 5,\r\n  TradeDateOutOfSupportedRange = 6,\r\n  StatisticTypeNotSupported = 7,\r\n  ScopeOrSubScopeNotSupported = 8,\r\n  ScopeTypeNotSupported = 9,\r\n  MarketDepthNotSupported = 10,\r\n  FrequencyNotSupported = 11,\r\n  StatisticIntervalNotSupported = 12,\r\n  StatisticDateRangeNotSupported = 13,\r\n  StatisticTimeRangeNotSupported = 14,\r\n  RatioTypeNotSupported = 15,\r\n  InvalidOrUnknownTradeInputSource = 16,\r\n  InvalidOrUnknownTradingSession = 17,\r\n  UnauthorizedForStatisticRequest = 18,\r\n  OtherFurtherInformationInText58Field = 99\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Status for a statistic to indicate its availability. *\r\n********************************************************\r\n*/\r\nexport enum MDStatisticStatus {\r\n  ActiveDefault = 1,\r\n  InactiveNotDisseminated = 2\r\n}\r\n\r\n/*\r\n******************************\r\n* Type of statistical value. *\r\n******************************\r\n*/\r\nexport enum MDStatisticValueType {\r\n  Absolute = 1,\r\n  Percentage = 2\r\n}\r\n\r\n/*\r\n***************************************\r\n* Unit of time for statistical value. *\r\n***************************************\r\n*/\r\nexport enum MDStatisticValueUnit {\r\n  SecondsDefaultIfNotSpecified = 0,\r\n  TenthsOfASecond = 1,\r\n  HundredthsOfASecond = 2,\r\n  Milliseconds = 3,\r\n  Microseconds = 4,\r\n  Nanoseconds = 5,\r\n  Minutes = 10,\r\n  Hours = 11,\r\n  Days = 12,\r\n  Weeks = 13,\r\n  Months = 14,\r\n  Years = 15\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates the status of the risk limit check performed on a *\r\n* trade for this allocation instance.                         *\r\n***************************************************************\r\n*/\r\nexport enum AllocRiskLimitCheckStatus {\r\n  Accepted = 0,\r\n  Rejected = 1,\r\n  ClaimRequired = 2,\r\n  PreDefinedLimitCheckSucceeded = 3,\r\n  PreDefinedLimitCheckFailed = 4,\r\n  PreDefinedAutoAcceptRuleInvoked = 5,\r\n  PreDefinedAutoRejectRuleInvoked = 6,\r\n  AcceptedByClearingFirm = 7,\r\n  RejectedByClearingFirm = 8,\r\n  Pending = 9,\r\n  AcceptedByCreditHub = 10,\r\n  RejectedByCreditHub = 11,\r\n  PendingCreditHubCheck = 12,\r\n  AcceptedByExecutionVenue = 13,\r\n  RejectedByExecutionVenue = 14\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Reject reason code for rejecting the collateral report. *\r\n***********************************************************\r\n*/\r\nexport enum CollRptRejectReason {\r\n  UnknownTradeOrTransaction = 0,\r\n  UnknownOrInvalidInstrument = 1,\r\n  UnknownOrInvalidCounterparty = 2,\r\n  UnknownOrInvalidPosition = 3,\r\n  UnacceptableOrInvalidTypeOfCollateral = 4,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************\r\n* The status of the collateral report. *\r\n****************************************\r\n*/\r\nexport enum CollRptStatus {\r\n  AcceptedSuccessfullyProcessed = 0,\r\n  ReceivedNotYetProcessed = 1,\r\n  Rejected = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates the broad product or asset classification.  May be *\r\n* used to provide grouping for the product taxonomy            *\r\n* (Product(460), SecurityType(167), etc.) and/or the risk      *\r\n* taxonomy (AssetClass(1938), AssetSubClass(1939),             *\r\n* AssetType(1940), etc.).                                      *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingAssetGroup {\r\n  Financials = 1,\r\n  Commodities = 2,\r\n  AlternativeInvestments = 3\r\n}\r\n\r\n/*\r\n**********************************\r\n* Identifies type of settlement. *\r\n**********************************\r\n*/\r\nexport enum LegDeliveryType {\r\n  VersusPaymentDeliverIfSellOrReceiveIfBuyVsAgainstPayment = 0,\r\n  FreeDeliverIfSellOrReceiveIfBuyFree = 1,\r\n  TriParty = 2,\r\n  HoldInCustody = 3\r\n}\r\n\r\n/*\r\n**********************************\r\n* Type of financing termination. *\r\n**********************************\r\n*/\r\nexport enum LegTerminationType {\r\n  Overnight = 1,\r\n  Term = 2,\r\n  Flexible = 3,\r\n  Open = 4\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates whether the order or quote was crossed with       *\r\n* another order or quote having the same context, e.g. having *\r\n* accounts with a common ownership.                           *\r\n***************************************************************\r\n*/\r\nexport enum CrossedIndicator {\r\n  NoCross = 0,\r\n  CrossRejected = 1,\r\n  CrossAccepted = 2\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Used between parties to convey trade reporting status. *\r\n**********************************************************\r\n*/\r\nexport enum TradeReportingIndicator {\r\n  TradeHasNotYetBeenReported = 0,\r\n  TradeHasBeenReportedByATradingVenueAsAnOnBookTrade = 1,\r\n  TradeHasBeenReportedAsASystematicInternaliserSellerTrade = 2,\r\n  TradeHasBeenReportedAsASystematicInternaliserBuyerTrade = 3,\r\n  TradeHasBeenReportedAsANonSystematicInternaliserSellerTrade = 4,\r\n  TradeHasBeenReportedUnderASubDelegationArrangementByAnInvestmentFirmToAReportingFacilityEGApaOnBehalfOfAnotherInvestmentFirm = 5\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Indicates the type of relative value measurement being *\r\n* specified.                                             *\r\n**********************************************************\r\n*/\r\nexport enum RelativeValueType {\r\n  AssetSwapSpread = 1,\r\n  OvernightIndexedSwapSpread = 2,\r\n  ZeroVolatilitySpread = 3,\r\n  DiscountMargin = 4,\r\n  InterpolatedSpread = 5,\r\n  OptionAdjustedSpread = 6,\r\n  GSpread = 7,\r\n  CdsBasis = 8,\r\n  CdsInterpolatedBasis = 9\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Specifies the side of the relative value. *\r\n*********************************************\r\n*/\r\nexport enum RelativeValueSide {\r\n  Bid = 1,\r\n  Mid = 2,\r\n  Offer = 3\r\n}\r\n\r\n/*\r\n********************************************\r\n* Technical event within market data feed. *\r\n********************************************\r\n*/\r\nexport enum MDReportEvent {\r\n  StartOfInstrumentReferenceData = 1,\r\n  EndOfInstrumentReferenceData = 2,\r\n  StartOfOffMarketTrades = 3,\r\n  EndOfOffMarketTrades = 4,\r\n  StartOfOrderBookTrades = 5,\r\n  EndOfOrderBookTrades = 6,\r\n  StartOfOpenInterest = 7,\r\n  EndOfOpenInterest = 8,\r\n  StartOfSettlementPrices = 9,\r\n  EndOfSettlementPrices = 10,\r\n  StartOfStatisticsReferenceData = 11,\r\n  EndOfStatisticsReferenceData = 12,\r\n  StartOfStatistics = 13,\r\n  EndOfStatistics = 14\r\n}\r\n\r\n/*\r\n*****************************\r\n* Status of market segment. *\r\n*****************************\r\n*/\r\nexport enum MarketSegmentStatus {\r\n  Active = 1,\r\n  Inactive = 2,\r\n  Published = 3\r\n}\r\n\r\n/*\r\n************************************************\r\n* Used to classify the type of market segment. *\r\n************************************************\r\n*/\r\nexport enum MarketSegmentType {\r\n  Pool = 1,\r\n  Retail = 2,\r\n  Wholesale = 3\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Used to further categorize market segments within a *\r\n* MarketSegmentType(2543).                            *\r\n*******************************************************\r\n*/\r\nexport enum MarketSegmentSubType {\r\n  InterProductSpread = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Type of relationship between two or more market segments. *\r\n*************************************************************\r\n*/\r\nexport enum MarketSegmentRelationship {\r\n  MarketSegmentPoolMember = 1,\r\n  RetailSegment = 2,\r\n  WholesaleSegment = 3\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Indicates whether single sided quotes are allowed. *\r\n******************************************************\r\n*/\r\nexport enum QuoteSideIndicator {\r\n  SingleSidedQuotesAreNotAllowed = 'N',\r\n  SingleSidedQuotesAreAllowed = 'Y'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* The time unit associated with the time interval of the *\r\n* netting of market data in a price depth feed.          *\r\n**********************************************************\r\n*/\r\nexport enum MarketDepthTimeIntervalUnit {\r\n  SecondsDefaultIfNotSpecified = 0,\r\n  TenthsOfASecond = 1,\r\n  HundredthsOfASecond = 2,\r\n  Milliseconds = 3,\r\n  Microseconds = 4,\r\n  Nanoseconds = 5,\r\n  Minutes = 10,\r\n  Hours = 11,\r\n  Days = 12,\r\n  Weeks = 13,\r\n  Months = 14,\r\n  Years = 15\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The time unit associated with the time interval between two *\r\n* cycles of the same market data in cyclic data recovery      *\r\n* feeds.                                                      *\r\n***************************************************************\r\n*/\r\nexport enum MDRecoveryTimeIntervalUnit {\r\n  SecondsDefaultIfNotSpecified = 0,\r\n  TenthsOfASecond = 1,\r\n  HundredthsOfASecond = 2,\r\n  Milliseconds = 3,\r\n  Microseconds = 4,\r\n  Nanoseconds = 5,\r\n  Minutes = 10,\r\n  Hours = 11,\r\n  Days = 12,\r\n  Weeks = 13,\r\n  Months = 14,\r\n  Years = 15\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Specifies the kind of priority given to customers. *\r\n******************************************************\r\n*/\r\nexport enum CustomerPriority {\r\n  NoPriority = 0,\r\n  UnconditionalPriority = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies a suitable settlement sub-method for a given *\r\n* settlement method.                                     *\r\n**********************************************************\r\n*/\r\nexport enum SettlSubMethod {\r\n  Shares = 1,\r\n  Derivatives = 2,\r\n  PaymentVsPayment = 3,\r\n  Notional = 4,\r\n  Cascade = 5,\r\n  Repurchase = 6,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Relative identification of a business day. *\r\n**********************************************\r\n*/\r\nexport enum BusinessDayType {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Specifies how the calculation will be made. *\r\n***********************************************\r\n*/\r\nexport enum CalculationMethod {\r\n  AutomaticDefault = 0,\r\n  Manual = 1\r\n}\r\n\r\n/*\r\n********************************\r\n* The type of order attribute. *\r\n********************************\r\n*/\r\nexport enum OrderAttributeType {\r\n  AggregatedOrder = 0,\r\n  PendingAllocation = 1,\r\n  LiquidityProvisionActivityOrder = 2,\r\n  RiskReductionOrder = 3,\r\n  AlgorithmicOrder = 4,\r\n  SystemicInternaliserOrder = 5,\r\n  AllExecutionsForTheOrderAreToBeSubmittedToAnApa = 6,\r\n  OrderExecutionInstructedByClient = 7,\r\n  LargeInScale = 8,\r\n  Hidden = 9\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the fallback provisions for the hedging party in *\r\n* the determination of the final settlement price.           *\r\n**************************************************************\r\n*/\r\nexport enum ComplexEventPVFinalPriceElectionFallback {\r\n  Close = 0,\r\n  HedgeElection = 1\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The quote side from which the index price is to be *\r\n* determined.                                        *\r\n******************************************************\r\n*/\r\nexport enum StrikeIndexQuote {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Defines how adjustments will be made to the contract should *\r\n* one or more of the extraordinary events occur.              *\r\n***************************************************************\r\n*/\r\nexport enum ExtraordinaryEventAdjustmentMethod {\r\n  CalculationAgent = 0,\r\n  OptionsExchange = 1\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The quote side from which the index price is to be *\r\n* determined.                                        *\r\n******************************************************\r\n*/\r\nexport enum LegStrikeIndexQuote {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Defines how adjustments will be made to the contract should *\r\n* one or more of the extraordinary events occur.              *\r\n***************************************************************\r\n*/\r\nexport enum LegExtraordinaryEventAdjustmentMethod {\r\n  CalculationAgent = 0,\r\n  OptionsExchange = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the fallback provisions for the hedging party in *\r\n* the determination of the final settlement price            *\r\n**************************************************************\r\n*/\r\nexport enum LegComplexEventPVFinalPriceElectionFallback {\r\n  Close = 0,\r\n  HedgeElection = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the fallback provisions for the hedging party in *\r\n* the determination of the final settlement price            *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingComplexEventPVFinalPriceElectionFallback {\r\n  Close = 0,\r\n  HedgeElection = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the conditions that govern the adjustment to the *\r\n* number of units of the return swap.                        *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingNotionalAdjustments {\r\n  Execution = 0,\r\n  PortfolioRebalancing = 1,\r\n  Standrd = 2\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Identifies the source of the UnderlyingFutureID(2620). *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingFutureIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The quote side from which the index price is to be *\r\n* determined.                                        *\r\n******************************************************\r\n*/\r\nexport enum UnderlyingStrikeIndexQuote {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Defines how adjustments will be made to the contract should *\r\n* one or more of the extraordinary events occur.              *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingExtraordinaryEventAdjustmentMethod {\r\n  CalculationAgent = 0,\r\n  OptionsExchange = 1\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* The type of value in CurrentCollateralAmount(1704). *\r\n*******************************************************\r\n*/\r\nexport enum CollateralAmountType {\r\n  MarketValuationTheDefault = 0,\r\n  PortfolioValueBeforeProcessingPledgeRequest = 1,\r\n  ValueConfirmedAsLockedUpForProcessingAPledgeRequest = 2,\r\n  CreditValueOfCollateralAtCcpProcessingAPledgeRequest = 3,\r\n  AdditionalCollateralValue = 4\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Indicates what type of commission is being expressed in *\r\n* CommissionAmount(2640).                                 *\r\n***********************************************************\r\n*/\r\nexport enum CommissionAmountType {\r\n  Unspecified = 0,\r\n  Acceptance = 1,\r\n  Broker = 2,\r\n  ClearingBroker = 3,\r\n  Retail = 4,\r\n  SalesCommission = 5,\r\n  LocalCommission = 6\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Specifies the basis or unit used to calculate the *\r\n* commission.                                       *\r\n*****************************************************\r\n*/\r\nexport enum CommissionBasis {\r\n  AmountPerUnit = '1',\r\n  Percent = '2',\r\n  Absolute = '3',\r\n  PercentageWaivedCashDiscountBasis = '4',\r\n  PercentageWaivedEnhancedUnitsBasis = '5',\r\n  PointsPerBondOrContract = '6',\r\n  BasisPoints = '7',\r\n  AmountPerContract = '8'\r\n}\r\n\r\n/*\r\n****************************************\r\n* The commission rate unit of measure. *\r\n****************************************\r\n*/\r\nexport enum CommissionUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Indicates what type of commission is being expressed in *\r\n* AllocCommissionAmount(2654).                            *\r\n***********************************************************\r\n*/\r\nexport enum AllocCommissionAmountType {\r\n  Unspecified = 0,\r\n  Acceptance = 1,\r\n  Broker = 2,\r\n  ClearingBroker = 3,\r\n  Retail = 4,\r\n  SalesCommission = 5,\r\n  LocalCommission = 6\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Specifies the basis or unit used to calculate the *\r\n* commission.                                       *\r\n*****************************************************\r\n*/\r\nexport enum AllocCommissionBasis {\r\n  AmountPerUnit = '1',\r\n  Percent = '2',\r\n  Absolute = '3',\r\n  PercentageWaivedCashDiscountBasis = '4',\r\n  PercentageWaivedEnhancedUnitsBasis = '5',\r\n  PointsPerBondOrContract = '6',\r\n  BasisPoints = '7',\r\n  AmountPerContract = '8'\r\n}\r\n\r\n/*\r\n****************************************\r\n* The commission rate unit of measure. *\r\n****************************************\r\n*/\r\nexport enum AllocCommissionUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Indicates that the order or trade originates from a computer *\r\n* program or algorithm requiring little-to-no human            *\r\n* intervention.                                                *\r\n****************************************************************\r\n*/\r\nexport enum AlgorithmicTradeIndicator {\r\n  NonAlgorithmicTrade = 0,\r\n  AlgorithmicTrade = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the type of regulatory trade publication.          *\r\n* Additional reasons for the publication type may be specified *\r\n* in TrdRegPublicationReason(2670).                            *\r\n****************************************************************\r\n*/\r\nexport enum TrdRegPublicationType {\r\n  PreTradeTransparencyWaiver = 0,\r\n  PostTradeDeferral = 1,\r\n  ExemptFromPublication = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Additional reason for trade publication type specified in *\r\n* TrdRegPublicationType(2669).                              *\r\n* Reasons may be specific to regulatory trade publication   *\r\n* rules.                                                    *\r\n*************************************************************\r\n*/\r\nexport enum TrdRegPublicationReason {\r\n  NoPrecedingOrderInBookAsTransactionPriceSetWithinAverageSpreadOfALiquidInstrument = 0,\r\n  NoPrecedingOrderInBookAsTransactionPriceDependsOnSystemSetReferencePriceForAnIlliquidInstrument = 1,\r\n  NoPrecedingOrderInBookAsTransactionPriceIsForTransactionSubjectToConditionsOtherThanCurrentMarketPrice = 2,\r\n  NoPublicPriceForPrecedingOrderAsPublicReferencePriceWasUsedForMatchingOrders = 3,\r\n  NoPublicPriceQuotedAsInstrumentIsIlliquid = 4,\r\n  NoPublicPriceQuotedBySystematicInternaliserAsOrderIsAboveStandardMarketSize = 5,\r\n  DeferralDueToLargeInScale = 6,\r\n  DeferralDueToIlliquidInstrument = 7,\r\n  DeferralDueToSizeSpecific = 8,\r\n  NoPublicPriceAndOrSizeQuotedAsTransactionIsLargeInScale = 9,\r\n  NoPublicPriceAndOrSizeQuotedDueToOrderBeingHidden = 10,\r\n  ExemptedDueToSecuritiesFinancingTransaction = 11,\r\n  ExemptedDueToEuropeanSystemOfCentralBanksEscbPolicyTransaction = 12\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Used between parties to convey trade reporting status. *\r\n**********************************************************\r\n*/\r\nexport enum SideTradeReportingIndicator {\r\n  TradeHasNotYetBeenReported = 0,\r\n  TradeHasBeenReportedByATradingVenueAsAnOnBookTrade = 1,\r\n  TradeHasBeenReportedAsASystematicInternaliserSellerTrade = 2,\r\n  TradeHasBeenReportedAsASystematicInternaliserBuyerTrade = 3,\r\n  TradeHasBeenReportedAsANonSystematicInternaliserSellerTrade = 4,\r\n  TradeHasBeenReportedUnderASubDelegationArrangementByAnInvestmentFirmToAReportingFacilityEGApaOnBehalfOfAnotherInvestmentFirm = 5\r\n}\r\n\r\n/*\r\n*****************************************\r\n* Reason for submission of mass action. *\r\n*****************************************\r\n*/\r\nexport enum MassActionReason {\r\n  NoSpecialReasonDefault = 0,\r\n  TradingRiskControl = 1,\r\n  ClearingRiskControl = 2,\r\n  MarketMakerProtection = 3,\r\n  StopTrading = 4,\r\n  EmergencyAction = 5,\r\n  SessionLossOrLogout = 6,\r\n  DuplicateLogin = 7,\r\n  ProductNotTraded = 8,\r\n  InstrumentNotTraded = 9,\r\n  ComplexInstrumentDeleted = 10,\r\n  CircuitBreakerActivated = 11,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reason for order being unaffected by mass action even though *\r\n* it belongs to the orders covered by MassActionScope(1374).   *\r\n****************************************************************\r\n*/\r\nexport enum NotAffectedReason {\r\n  OrderSuspended = 0,\r\n  InstrumentSuspended = 1\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Change of ownership of an order to a specific party. *\r\n********************************************************\r\n*/\r\nexport enum OrderOwnershipIndicator {\r\n  NoChangeOfOwnershipDefault = 0,\r\n  ChangeOfOwnershipToExecutingParty = 1,\r\n  ChangeOfOwnershipToEnteringParty = 2,\r\n  ChangeOfOwnershipToSpecifiedParty = 3\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies an option instrument's \"in the money\" condition. *\r\n**************************************************************\r\n*/\r\nexport enum InTheMoneyCondition {\r\n  StandardInTheMoney = 0,\r\n  AtTheMoneyIsInTheMoney = 1,\r\n  AtTheMoneyCallIsInTheMoney = 2,\r\n  AtTheMoneyPutIsInTheMoney = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies an option instrument's \"in the money\" condition in *\r\n* general terms.                                               *\r\n****************************************************************\r\n*/\r\nexport enum LegInTheMoneyCondition {\r\n  StandardInTheMoney = 0,\r\n  AtTheMoneyIsInTheMoney = 1,\r\n  AtTheMoneyCallIsInTheMoney = 2,\r\n  AtTheMoneyPutIsInTheMoney = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies an option instrument's \"in the money\" condition in *\r\n* general terms.                                               *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingInTheMoneyCondition {\r\n  StandardInTheMoney = 0,\r\n  AtTheMoneyIsInTheMoney = 1,\r\n  AtTheMoneyCallIsInTheMoney = 2,\r\n  AtTheMoneyPutIsInTheMoney = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies an option instrument's \"in the money\" condition in *\r\n* general terms.                                               *\r\n****************************************************************\r\n*/\r\nexport enum DerivativeInTheMoneyCondition {\r\n  StandardInTheMoney = 0,\r\n  AtTheMoneyIsInTheMoney = 1,\r\n  AtTheMoneyCallIsInTheMoney = 2,\r\n  AtTheMoneyPutIsInTheMoney = 3\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* The type of value in CurrentCollateralAmount(1704). *\r\n*******************************************************\r\n*/\r\nexport enum SideCollateralAmountType {\r\n  MarketValuationTheDefault = 0,\r\n  PortfolioValueBeforeProcessingPledgeRequest = 1,\r\n  ValueConfirmedAsLockedUpForProcessingAPledgeRequest = 2,\r\n  CreditValueOfCollateralAtCcpProcessingAPledgeRequest = 3,\r\n  AdditionalCollateralValue = 4\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies whether or not SideCollateralFXRate(2696) should *\r\n* be multiplied or divided.                                  *\r\n**************************************************************\r\n*/\r\nexport enum SideCollateralFXRateCalc {\r\n  Divide = 'D',\r\n  Multiply = 'M'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Identifies the type of execution destination for the order. *\r\n***************************************************************\r\n*/\r\nexport enum ExDestinationType {\r\n  NoRestriction = 0,\r\n  CanBeTradedOnlyOnATradingVenue = 1,\r\n  CanBeTradedOnlyOnASystematicInternaliserSi = 2,\r\n  CanBeTradedOnATradingVenueOrSystematicInternaliserSi = 3\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Identifies the source scheme of the        *\r\n* AdditionalTermBondSecurityID(40001) value. *\r\n**********************************************\r\n*/\r\nexport enum AdditionalTermBondSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the bond's payment priority in the event of a *\r\n* default.                                                *\r\n***********************************************************\r\n*/\r\nexport enum AdditionalTermBondSeniority {\r\n  SeniorSecured = 'SD',\r\n  Senior = 'SR',\r\n  Subordinated = 'SB'\r\n}\r\n\r\n/*\r\n****************************\r\n* Coupon type of the bond. *\r\n****************************\r\n*/\r\nexport enum AdditionalTermBondCouponType {\r\n  Zero = 0,\r\n  FixedRate = 1,\r\n  FloatingRate = 2,\r\n  Structured = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency of the bond's coupon *\r\n* payment.                                                     *\r\n****************************************************************\r\n*/\r\nexport enum AdditionalTermBondCouponFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The day count convention used in interest calculations for a *\r\n* bond or an interest bearing security.                        *\r\n****************************************************************\r\n*/\r\nexport enum AdditionalTermBondDayCount {\r\n  E11 = 0,\r\n  E3036030U360OrBondBasis = 1,\r\n  E30360Sia = 2,\r\n  E30360M = 3,\r\n  E30E360EurobondBasis = 4,\r\n  E30E360Isda = 5,\r\n  Act360 = 6,\r\n  Act365Fixed = 7,\r\n  ActActAfb = 8,\r\n  ActActIcma = 9,\r\n  ActActIcsmaUltimo = 10,\r\n  ActActIsda = 11,\r\n  Bus252 = 12,\r\n  E30E360 = 13,\r\n  Act365L = 14,\r\n  Nl365 = 15,\r\n  Nl360 = 16,\r\n  Act364 = 17\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* The type of quote used to determine the cash settlement *\r\n* price.                                                  *\r\n***********************************************************\r\n*/\r\nexport enum CashSettlQuoteMethod {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The ISDA defined methodology for determining the final price *\r\n* of the reference obligation for purposes of cash settlement. *\r\n****************************************************************\r\n*/\r\nexport enum CashSettlValuationMethod {\r\n  Market = 0,\r\n  Highest = 1,\r\n  AverageMarket = 2,\r\n  AverageHighest = 3,\r\n  BlendedMarket = 4,\r\n  BlendedHighest = 5,\r\n  AverageBlendedMarket = 6,\r\n  AverageBlendedHighest = 7\r\n}\r\n\r\n/*\r\n************************\r\n* Type of swap stream. *\r\n************************\r\n*/\r\nexport enum StreamType {\r\n  PaymentCashSettlement = 0,\r\n  PhysicalDelivery = 1\r\n}\r\n\r\n/*\r\n********************************************\r\n* The side of the party paying the stream. *\r\n********************************************\r\n*/\r\nexport enum StreamPaySide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n***********************************************\r\n* The side of the party receiving the stream. *\r\n***********************************************\r\n*/\r\nexport enum StreamReceiveSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The business day convention used to adjust the underlying  *\r\n* instrument's stream's effective, or relative effective,    *\r\n* date. Used only to override the business day convention    *\r\n* specified in the UnderlyingDateAdjustment component within *\r\n* the UnderlyingInstrument component.                        *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingStreamEffectiveDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Time unit associated with the relative effective date *\r\n* offset.                                               *\r\n*********************************************************\r\n*/\r\nexport enum UnderlyingStreamEffectiveDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Specifies the day type of the relative effective date *\r\n* offset.                                               *\r\n*********************************************************\r\n*/\r\nexport enum UnderlyingStreamEffectiveDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the instrument's *\r\n* stream's termination, or relative termination, date. Used   *\r\n* only to override the business day convention specified in   *\r\n* the DateAdjustment component within the Instrument          *\r\n* component.                                                  *\r\n***************************************************************\r\n*/\r\nexport enum StreamTerminationDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Time unit associated with the relative termination date *\r\n* offset.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum StreamTerminationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the day type of the relative termination date *\r\n* offset.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum StreamTerminationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The business day convention used to adjust calculation     *\r\n* periods. Used only to override the business day convention *\r\n* specified in the DateAdjustment component within the       *\r\n* Instrument component.                                      *\r\n**************************************************************\r\n*/\r\nexport enum StreamCalculationPeriodBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the instrument's *\r\n* stream's first calculation period start date. Used only to  *\r\n* override the business day convention specified in the       *\r\n* DateAdjustment component within the Instrument component.   *\r\n***************************************************************\r\n*/\r\nexport enum StreamFirstPeriodStartDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency at which calculation *\r\n* period end dates occur.                                      *\r\n****************************************************************\r\n*/\r\nexport enum StreamCalculationFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of end dates. It *\r\n* is used in conjunction with a specified frequency. Used only *\r\n* to override the roll convention specified in the             *\r\n* DateAdjustment component within the Instrument component.    *\r\n****************************************************************\r\n*/\r\nexport enum StreamCalculationRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n**************************************************\r\n* Identifies the source of the rate information. *\r\n**************************************************\r\n*/\r\nexport enum LegPaymentStreamNonDeliverableSettlRateSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Used to identify the settlement rate postponement *\r\n* calculation agent.                                *\r\n*****************************************************\r\n*/\r\nexport enum SettlRatePostponementCalculationAgent {\r\n  ExercisingParty = 0,\r\n  NonExercisingParty = 1,\r\n  AsSpecifiedInTheMasterAgreement = 2,\r\n  AsSpecifiedInTheStandardTermsSupplement = 3\r\n}\r\n\r\n/*\r\n***********************\r\n* Type of provisions. *\r\n***********************\r\n*/\r\nexport enum ProvisionType {\r\n  MandatoryEarlyTermination = 0,\r\n  OptionalEarlyTermination = 1,\r\n  Cancelable = 2,\r\n  Extendible = 3,\r\n  MutualEarlyTermination = 4\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the instrument's *\r\n* provision's dates. Used only to override the business day   *\r\n* convention specified in the DateAdjustment component within *\r\n* the Instrument component.                                   *\r\n***************************************************************\r\n*/\r\nexport enum ProvisionDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Time unit associated with the provision's tenor period. *\r\n***********************************************************\r\n*/\r\nexport enum ProvisionDateTenorUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Used to identify the calculation agent.  The calculation    *\r\n* agent may be identified in ProvisionCalculationAgent(40098) *\r\n* or in the ProvisionParties component.                       *\r\n***************************************************************\r\n*/\r\nexport enum ProvisionCalculationAgent {\r\n  ExercisingParty = 0,\r\n  NonExercisingParty = 1,\r\n  AsSpecifiedInTheMasterAgreement = 2,\r\n  AsSpecifiedInTheStandardTermsSupplement = 3\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* If optional early termination is not available to both  *\r\n* parties then this component identifies the buyer of the *\r\n* option through its side of the trade.                   *\r\n***********************************************************\r\n*/\r\nexport enum ProvisionOptionSinglePartyBuyerSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n************************************************************\r\n* If optional early termination is not available to both   *\r\n* parties then this component identifies the seller of the *\r\n* option through its side of the trade.                    *\r\n************************************************************\r\n*/\r\nexport enum ProvisionOptionSinglePartySellerSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* The instrument provision option\u0019s exercise style. *\r\n*****************************************************\r\n*/\r\nexport enum ProvisionOptionExerciseStyle {\r\n  European = 0,\r\n  American = 1,\r\n  Bermuda = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* An ISDA defined cash settlement method used for the         *\r\n* determination of the applicable cash settlement amount. The *\r\n* method is defined in the 2006 ISDA Definitions, Section     *\r\n* 18.3. Cash Settlement Methods, paragraph (e).               *\r\n***************************************************************\r\n*/\r\nexport enum ProvisionCashSettlMethod {\r\n  CashPrice = 0,\r\n  CashPriceAlternate = 1,\r\n  ParYieldCurveAdjusted = 2,\r\n  ZeroCouponYieldCurveAdjusted = 3,\r\n  ParYieldCurveUnadjusted = 4,\r\n  CrossCurrency = 5,\r\n  CollateralizedPrice = 6\r\n}\r\n\r\n/*\r\n********************************************\r\n* Identifies the type of quote to be used. *\r\n********************************************\r\n*/\r\nexport enum ProvisionCashSettlQuoteType {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2,\r\n  ExercisingPartyPays = 3\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Identifies the source of quote information. *\r\n***********************************************\r\n*/\r\nexport enum ProvisionCashSettlQuoteSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The cash settlement valuation date adjustment business day  *\r\n* convention. Used only to override the business day          *\r\n* convention specified in the DateAdjustment component within *\r\n* the Instrument component.                                   *\r\n***************************************************************\r\n*/\r\nexport enum ProvisionCashSettlValueDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative cash settlement value *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum ProvisionCashSettlValueDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the day type of the provision's relative cash *\r\n* settlement value date offset.                           *\r\n***********************************************************\r\n*/\r\nexport enum ProvisionCashSettlValueDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the instrument's *\r\n* provision's option exercise date. Used only to override the *\r\n* business day convention specified in the DateAdjustment     *\r\n* component within the Instrument component.                  *\r\n***************************************************************\r\n*/\r\nexport enum ProvisionOptionExerciseBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the interval to the first (and *\r\n* possibly only) exercise date in the exercise period.     *\r\n************************************************************\r\n*/\r\nexport enum ProvisionOptionExerciseEarliestDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency of subsequent        *\r\n* exercise dates in the exercise period following the earliest *\r\n* exercise date.                                               *\r\n****************************************************************\r\n*/\r\nexport enum ProvisionOptionExerciseFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative option exercise start *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum ProvisionOptionExerciseStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the day type of the provision's relative option *\r\n* exercise start date offset.                               *\r\n*************************************************************\r\n*/\r\nexport enum ProvisionOptionExerciseStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of date (e.g. adjusted for holidays). *\r\n************************************************************\r\n*/\r\nexport enum ProvisionOptionExerciseFixedDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the instrument's *\r\n* provision's option expiration date. Used only to override   *\r\n* the business day convention specified in the DateAdjustment *\r\n* component within the Instrument component.                  *\r\n***************************************************************\r\n*/\r\nexport enum ProvisionOptionExpirationDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative option expiration *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum ProvisionOptionExpirationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the day type of the provision's relative option *\r\n* expiration date offset.                                   *\r\n*************************************************************\r\n*/\r\nexport enum ProvisionOptionExpirationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the instrument's *\r\n* provision's option underlying date. Used only to override   *\r\n* the business day convention specified in the DateAdjustment *\r\n* component within the Instrument component.                  *\r\n***************************************************************\r\n*/\r\nexport enum ProvisionOptionRelevantUnderlyingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative option relevant *\r\n* underlying date offset.                                *\r\n**********************************************************\r\n*/\r\nexport enum ProvisionOptionRelevantUnderlyingDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the day type of the provision's relative option *\r\n* relevant underlying date offset.                          *\r\n*************************************************************\r\n*/\r\nexport enum ProvisionOptionRelevantUnderlyingDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the provisional  *\r\n* cash settlement payment's termination or relative           *\r\n* termination date.  Used only to override the business day   *\r\n* convention specified in the DateAdjustment component within *\r\n* the Instrument component.                                   *\r\n***************************************************************\r\n*/\r\nexport enum ProvisionCashSettlPaymentDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative cash settlement *\r\n* payment date offset.                                   *\r\n**********************************************************\r\n*/\r\nexport enum ProvisionCashSettlPaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the day type of the provision's relative cash *\r\n* settlement payment date offset.                         *\r\n***********************************************************\r\n*/\r\nexport enum ProvisionCashSettlPaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of date (e.g. adjusted for holidays). *\r\n************************************************************\r\n*/\r\nexport enum ProvisionCashSettlPaymentDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Identifies class or source of the ProvisionPartyID(40175) *\r\n* value.                                                    *\r\n*************************************************************\r\n*/\r\nexport enum ProvisionPartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Identifies the type or role of ProvisionPartyID(40175) *\r\n* specified.                                             *\r\n**********************************************************\r\n*/\r\nexport enum ProvisionPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n*******************************************\r\n* The type of ProvisionPartySubID(40179). *\r\n*******************************************\r\n*/\r\nexport enum ProvisionPartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Time unit associated with protection term events. *\r\n*****************************************************\r\n*/\r\nexport enum ProtectionTermEventUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Day type for events that specify a period and unit. *\r\n*******************************************************\r\n*/\r\nexport enum ProtectionTermEventDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Protection term event qualifier.  Used to further qualify *\r\n* ProtectionTermEventType(40192).                           *\r\n*************************************************************\r\n*/\r\nexport enum ProtectionTermEventQualifier {\r\n  RetructuringMultipleHoldingObligations = 'H',\r\n  RestructuringMultipleCreditEventNotices = 'E',\r\n  FloatingRateInterestShortfall = 'C'\r\n}\r\n\r\n/*\r\n********************\r\n* Type of payment. *\r\n********************\r\n*/\r\nexport enum PaymentType {\r\n  Brokerage = 0,\r\n  UpfrontFee = 1,\r\n  IndependentAmountCollateral = 2,\r\n  PrincipalExchange = 3,\r\n  NovationTermination = 4,\r\n  EarlyTerminationProvision = 5,\r\n  CancelableProvision = 6,\r\n  ExtendibleProvision = 7,\r\n  CapRateProvision = 8,\r\n  FloorRateProvision = 9,\r\n  OptionPremium = 10,\r\n  SettlementPayment = 11,\r\n  CashSettlement = 12,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*********************************************\r\n* The side of the party paying the payment. *\r\n*********************************************\r\n*/\r\nexport enum PaymentPaySide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n************************************************\r\n* The side of the party receiving the payment. *\r\n************************************************\r\n*/\r\nexport enum PaymentReceiveSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The business day convention used to adjust the payment date. *\r\n* Used only to override the business day convention specified  *\r\n* in the DateAdjustment component within the Instrument        *\r\n* component.                                                   *\r\n****************************************************************\r\n*/\r\nexport enum PaymentBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n*****************************\r\n* Payment settlement style. *\r\n*****************************\r\n*/\r\nexport enum PaymentSettlStyle {\r\n  Standard = 0,\r\n  Net = 1,\r\n  StandardAndNet = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies the class or source of PaymentSettlPartyID(40234) *\r\n* value (e.g. BIC).                                            *\r\n****************************************************************\r\n*/\r\nexport enum PaymentSettlPartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Identifies the role of PaymentSettlPartyID(40234) (e.g. the *\r\n* beneficiary's bank or depository institution).              *\r\n***************************************************************\r\n*/\r\nexport enum PaymentSettlPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Qualifies the value of PaymentSettlPartyRole(40236). *\r\n********************************************************\r\n*/\r\nexport enum PaymentSettlPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n****************************************************\r\n* The type of PaymentSettlPartySubID(40239) value. *\r\n****************************************************\r\n*/\r\nexport enum PaymentSettlPartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n************************\r\n* Type of swap stream. *\r\n************************\r\n*/\r\nexport enum LegStreamType {\r\n  PaymentCashSettlement = 0,\r\n  PhysicalDelivery = 1\r\n}\r\n\r\n/*\r\n********************************************\r\n* The side of the party paying the stream. *\r\n********************************************\r\n*/\r\nexport enum LegStreamPaySide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n***********************************************\r\n* The side of the party receiving the stream. *\r\n***********************************************\r\n*/\r\nexport enum LegStreamReceiveSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the instrument   *\r\n* leg's stream's effective date or relative effective date.   *\r\n* Used only to override the business day convention specified *\r\n* in the LegDateAdjustment component within the InstrumentLeg *\r\n* component.                                                  *\r\n***************************************************************\r\n*/\r\nexport enum LegStreamEffectiveDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Time unit associated with the relative effective date *\r\n* offset.                                               *\r\n*********************************************************\r\n*/\r\nexport enum LegStreamEffectiveDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Specifies the day type of the relative effective date *\r\n* offset.                                               *\r\n*********************************************************\r\n*/\r\nexport enum LegStreamEffectiveDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the instrument   *\r\n* leg's stream's termination, or relative termination, date.  *\r\n* Used only to override the business day convention specified *\r\n* in the LegDateAdjustment component within the InstrumentLeg *\r\n* component.                                                  *\r\n***************************************************************\r\n*/\r\nexport enum LegStreamTerminationDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Time unit associated with the relative termination date *\r\n* offset.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum LegStreamTerminationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the day type of the relative termination date *\r\n* offset.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum LegStreamTerminationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust calculation      *\r\n* periods.  Used only to override the business day convention *\r\n* specified in the LegDateAdjustment component within the     *\r\n* InstrumentLeg component.                                    *\r\n***************************************************************\r\n*/\r\nexport enum LegStreamCalculationPeriodBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The business day convention used to adjust the instrument *\r\n* leg's stream's first calculation period start date. Used  *\r\n* only to override the business day convention specified in *\r\n* the LegDateAdjustment component within the InstrumentLeg  *\r\n* component.                                                *\r\n*************************************************************\r\n*/\r\nexport enum LegStreamFirstPeriodStartDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency at which calculation *\r\n* period end dates occur.                                      *\r\n****************************************************************\r\n*/\r\nexport enum LegStreamCalculationFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of end dates. It *\r\n* is used in conjunction with a specified frequency.  Used     *\r\n* only to override the roll convention specified in the        *\r\n* LegDateAdjustment component within the InstrumentLeg         *\r\n* component.                                                   *\r\n****************************************************************\r\n*/\r\nexport enum LegStreamCalculationRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies the type of payment stream applicable to the swap *\r\n* stream associated with the instrument leg.                   *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStreamType {\r\n  PeriodicDefault = 0,\r\n  Initial = 1,\r\n  Single = 2,\r\n  Dividend = 3,\r\n  Interest = 4,\r\n  DividendReturn = 5,\r\n  PriceReturn = 6,\r\n  TotalReturn = 7,\r\n  Variance = 8,\r\n  Correlation = 9\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* The day count convention used in the payment stream *\r\n* calculations.                                       *\r\n*******************************************************\r\n*/\r\nexport enum LegPaymentStreamDayCount {\r\n  E11 = 0,\r\n  E3036030U360OrBondBasis = 1,\r\n  E30360Sia = 2,\r\n  E30360M = 3,\r\n  E30E360EurobondBasis = 4,\r\n  E30E360Isda = 5,\r\n  Act360 = 6,\r\n  Act365Fixed = 7,\r\n  ActActAfb = 8,\r\n  ActActIcma = 9,\r\n  ActActIcsmaUltimo = 10,\r\n  ActActIsda = 11,\r\n  Bus252 = 12,\r\n  E30E360 = 13,\r\n  Act365L = 14,\r\n  Nl365 = 15,\r\n  Nl360 = 16,\r\n  Act364 = 17\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* The method of calculating discounted payment amounts. *\r\n*********************************************************\r\n*/\r\nexport enum LegPaymentStreamDiscountType {\r\n  Standard = 0,\r\n  ForwardRateAgreementFra = 1\r\n}\r\n\r\n/*\r\n*******************************************\r\n* The day count convention applied to the *\r\n* LegPaymentStreamDiscountRate(40286).    *\r\n*******************************************\r\n*/\r\nexport enum LegPaymentStreamDiscountRateDayCount {\r\n  E11 = 0,\r\n  E3036030U360OrBondBasis = 1,\r\n  E30360Sia = 2,\r\n  E30360M = 3,\r\n  E30E360EurobondBasis = 4,\r\n  E30E360Isda = 5,\r\n  Act360 = 6,\r\n  Act365Fixed = 7,\r\n  ActActAfb = 8,\r\n  ActActIcma = 9,\r\n  ActActIcsmaUltimo = 10,\r\n  ActActIsda = 11,\r\n  Bus252 = 12,\r\n  E30E360 = 13,\r\n  Act365L = 14,\r\n  Nl365 = 15,\r\n  Nl360 = 16,\r\n  Act364 = 17\r\n}\r\n\r\n/*\r\n***********************\r\n* Compounding method. *\r\n***********************\r\n*/\r\nexport enum LegPaymentStreamCompoundingMethod {\r\n  None = 0,\r\n  Flat = 1,\r\n  Straight = 2,\r\n  SpreadExclusive = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the payment      *\r\n* stream's payment date. Used only to override the business   *\r\n* day convention specified in the LegDateAdjustment component *\r\n* within the InstrumentLeg component.                         *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentStreamPaymentDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Time unit associated with the frequency of payments. *\r\n********************************************************\r\n*/\r\nexport enum LegPaymentStreamPaymentFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of end dates. It *\r\n* is used in conjunction with a specified frequency.  Used     *\r\n* only to override the roll convention specified in the        *\r\n* LegDateAdjustment component within the InstrumentLeg         *\r\n* component.                                                   *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStreamPaymentRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the relative payment date offset. *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentStreamPaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the day type of the relative payment date offset. *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentStreamPaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the payment      *\r\n* stream's reset date. Used only to override the business day *\r\n* convention specified in the LegDateAdjustment component     *\r\n* within the InstrumentLeg component.                         *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentStreamResetDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************\r\n* Time unit associated with frequency of resets. *\r\n**************************************************\r\n*/\r\nexport enum LegPaymentStreamResetFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Used to specify the day of the week in which the reset *\r\n* occurs for payments that reset on a weekly basis.      *\r\n**********************************************************\r\n*/\r\nexport enum LegPaymentStreamResetWeeklyRollConvention {\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The business day convention used to adjust the payment     *\r\n* stream's initial fixing date. Used only to override the    *\r\n* business day convention specified in the LegDateAdjustment *\r\n* component within the InstrumentLeg component.              *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamInitialFixingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative initial fixing date *\r\n* offset.                                                    *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamInitialFixingDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the day type of the relative initial fixing date *\r\n* offset.                                                    *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamInitialFixingDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The business day convention used to adjust the payment       *\r\n* stream's fixing date. Used only to override the business day *\r\n* convention specified in the LegDateAdjustment component      *\r\n* within the InstrumentLeg component.                          *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStreamFixingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative fixing date offset. *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamFixingDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the day type of the relative fixing date offset. *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamFixingDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative rate cut-off date *\r\n* offset.                                                  *\r\n************************************************************\r\n*/\r\nexport enum LegPaymentStreamRateCutoffDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the day type of the relative rate cut-off date *\r\n* offset.                                                  *\r\n************************************************************\r\n*/\r\nexport enum LegPaymentStreamRateCutoffDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* The source of the payment stream floating rate index. *\r\n*********************************************************\r\n*/\r\nexport enum LegPaymentStreamRateIndexSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the payment stream's floating rate *\r\n* index curve period.                                          *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStreamRateIndexCurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the yield calculation treatment for the index. *\r\n************************************************************\r\n*/\r\nexport enum LegPaymentStreamRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Reference to the buyer of the cap rate option through its *\r\n* trade side.                                               *\r\n*************************************************************\r\n*/\r\nexport enum LegPaymentStreamCapRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Reference to the seller of the cap rate option through its *\r\n* trade side.                                                *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamCapRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the buyer of the floor rate option through its *\r\n* trade side.                                                 *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentStreamFloorRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reference to the seller of the floor rate option through its *\r\n* trade side.                                                  *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStreamFloorRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n*************************************\r\n* Specifies the rounding direction. *\r\n*************************************\r\n*/\r\nexport enum LegPaymentStreamFinalRateRoundingDirection {\r\n  RoundToNearest = '0',\r\n  RoundDown = '1',\r\n  RoundUp = '2'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* When averaging is applicable, used to specify whether a    *\r\n* weighted or unweighted average method of calculation is to *\r\n* be used.                                                   *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamAveragingMethod {\r\n  Unweighted = 0,\r\n  Weighted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The specification of any provisions for calculating payment *\r\n* obligations when a floating rate is negative (either due to *\r\n* a quoted negative floating rate or by operation of a spread *\r\n* that is subtracted from the floating rate).                 *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentStreamNegativeRateTreatment {\r\n  ZeroInterestRateMethod = 0,\r\n  NegativeInterestRateMethod = 1\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Time unit associated with the inflation lag period. *\r\n*******************************************************\r\n*/\r\nexport enum LegPaymentStreamInflationLagUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************\r\n* The inflation lag period day type. *\r\n**************************************\r\n*/\r\nexport enum LegPaymentStreamInflationLagDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The method used when calculating the inflation index level *\r\n* from multiple points. The most common is linear method.    *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamInflationInterpolationMethod {\r\n  None = 0,\r\n  LinearZeroYield = 1\r\n}\r\n\r\n/*\r\n*****************************************\r\n* The inflation index reference source. *\r\n*****************************************\r\n*/\r\nexport enum LegPaymentStreamInflationIndexSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The method of Forward Rate Agreement (FRA) discounting, if *\r\n* any, that will apply.                                      *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamFRADiscounting {\r\n  None = 0,\r\n  InternationalSwapsAndDerivativesAssociationIsda = 1,\r\n  AustralianFinancialMarketsAssociationAfma = 2\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The business day convention used to adjust the payment   *\r\n* stream's fixing date for the non-deliverable settlement  *\r\n* terms. Used only to override the business day convention *\r\n* specified in the LegDateAdjustment component within the  *\r\n* InstrumentLeg component.                                 *\r\n************************************************************\r\n*/\r\nexport enum LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative non-deliverable *\r\n* fixing date offset.                                    *\r\n**********************************************************\r\n*/\r\nexport enum LegPaymentStreamNonDeliverableFixingDatesOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative non-deliverable *\r\n* fixing date offset.                                    *\r\n**********************************************************\r\n*/\r\nexport enum LegPaymentStreamNonDeliverableFixingDatesOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Identifies the source of rate information. *\r\n**********************************************\r\n*/\r\nexport enum LegSettlRateFallbackRateSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of date (e.g. adjusted for holidays). *\r\n************************************************************\r\n*/\r\nexport enum LegNonDeliverableFixingDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Identifies the source of rate information. *\r\n**********************************************\r\n*/\r\nexport enum PaymentStreamNonDeliverableSettlRateSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Identifies the source of rate information. *\r\n**********************************************\r\n*/\r\nexport enum SettlRateFallbackRateSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***********************************\r\n* Specifies the type of schedule. *\r\n***********************************\r\n*/\r\nexport enum LegPaymentScheduleType {\r\n  Notional = 0,\r\n  CashFlow = 1,\r\n  FxLinkedNotional = 2,\r\n  FixedRate = 3,\r\n  FutureValueNotional = 4,\r\n  KnownAmount = 5,\r\n  FloatingRateMultiplier = 6,\r\n  Spread = 7,\r\n  CapRate = 8,\r\n  FloorRate = 9,\r\n  NonDeliverableSettlementPaymentDates = 10,\r\n  NonDeliverableSettlementCalculationDates = 11,\r\n  NonDeliverableFixingDates = 12,\r\n  SettlementPeriodNotional = 13,\r\n  SettlementPeriodPrice = 14,\r\n  CalculationPeriod = 15,\r\n  DividendAccrualRateMultiplier = 16,\r\n  DividendAccrualRateSpread = 17,\r\n  DividendAccrualCapRate = 18,\r\n  DividendAccrualFloorRate = 19,\r\n  CompoundingRateMultiplier = 20,\r\n  CompoundingRateSpread = 21,\r\n  CompoundingCapRate = 22,\r\n  CompoundingFloorRate = 23\r\n}\r\n\r\n/*\r\n**************************************************\r\n* Indicates to which stub this schedule applies. *\r\n**************************************************\r\n*/\r\nexport enum LegPaymentScheduleStubType {\r\n  Initial = 0,\r\n  Final = 1,\r\n  CompoundingInitial = 2,\r\n  CompoundingFinal = 3\r\n}\r\n\r\n/*\r\n***************************************************\r\n* The side of the party paying the step schedule. *\r\n***************************************************\r\n*/\r\nexport enum LegPaymentSchedulePaySide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The side of the party receiving the step schedule. *\r\n******************************************************\r\n*/\r\nexport enum LegPaymentScheduleReceiveSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies whether the rate spread is applied to a long or a *\r\n* short position.                                              *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentScheduleRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the yield calculation treatment for the step *\r\n* schedule.                                              *\r\n**********************************************************\r\n*/\r\nexport enum LegPaymentScheduleRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Time unit associated with the step frequency. *\r\n*************************************************\r\n*/\r\nexport enum LegPaymentScheduleStepFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies whether the LegPaymentScheduleStepRate(40393) or   *\r\n* LegPaymentScheduleStepOffsetValue(40392) should be applied   *\r\n* to the initial notional or the previous notional in order to *\r\n* calculate the notional step change amount.                   *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentScheduleStepRelativeTo {\r\n  Initial = 0,\r\n  Previous = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the payment      *\r\n* schedule's fixing date. Used only to override the business  *\r\n* day convention specified in the LegDateAdjustment component *\r\n* within the InstrumentLeg component.                         *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentScheduleFixingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative fixing date offset. *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentScheduleFixingDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the day type of the relative fixing date offset. *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentScheduleFixingDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the payment      *\r\n* schedule's interim exchange date. Used only to override the *\r\n* business day convention specified in the LegDateAdjustment  *\r\n* component within the InstrumentLeg component.               *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentScheduleInterimExchangeDatesBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative interim exchange date *\r\n* offset.                                                      *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentScheduleInterimExchangeDatesOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative interim exchange date *\r\n* offset.                                                      *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentScheduleInterimExchangeDatesOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Identifies the source of rate information. *\r\n**********************************************\r\n*/\r\nexport enum LegPaymentScheduleRateSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*********************\r\n* Rate source type. *\r\n*********************\r\n*/\r\nexport enum LegPaymentScheduleRateSourceType {\r\n  Primary = 0,\r\n  Secondary = 1\r\n}\r\n\r\n/*\r\n**************\r\n* Stub type. *\r\n**************\r\n*/\r\nexport enum LegPaymentStubType {\r\n  Initial = 0,\r\n  Final = 1,\r\n  CompoundingInitial = 2,\r\n  CompoundingFinal = 3\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Optional indication whether stub is shorter or longer than *\r\n* the regular swap period.                                   *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStubLength {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************\r\n* The source for the stub floating rate index. *\r\n************************************************\r\n*/\r\nexport enum LegPaymentStubIndexSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Time unit associated with the floating rate index. *\r\n******************************************************\r\n*/\r\nexport enum LegPaymentStubIndexCurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies whether the rate spread is applied to a long or a *\r\n* short position.                                              *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStubIndexRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the yield calculation treatment for the stub *\r\n* index.                                                 *\r\n**********************************************************\r\n*/\r\nexport enum LegPaymentStubIndexRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Reference to the buyer of the cap rate option through its *\r\n* trade side.                                               *\r\n*************************************************************\r\n*/\r\nexport enum LegPaymentStubIndexCapRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Reference to the seller of the cap rate option through its *\r\n* trade side.                                                *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStubIndexCapRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the buyer of the floor rate option through its *\r\n* trade side.                                                 *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentStubIndexFloorRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reference to the seller of the floor rate option through its *\r\n* trade side.                                                  *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStubIndexFloorRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* The source for the second stub floating rate index. *\r\n*******************************************************\r\n*/\r\nexport enum LegPaymentStubIndex2Source {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Secondary time unit associated with the stub floating rate *\r\n* index curve.                                               *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStubIndex2CurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies whether the rate spread is applied to a long or a *\r\n* short position.                                              *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStubIndex2RateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the yield calculation treatment for the second *\r\n* stub index.                                              *\r\n************************************************************\r\n*/\r\nexport enum LegPaymentStubIndex2RateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n***********************\r\n* Type of provisions. *\r\n***********************\r\n*/\r\nexport enum LegProvisionType {\r\n  MandatoryEarlyTermination = 0,\r\n  OptionalEarlyTermination = 1,\r\n  Cancelable = 2,\r\n  Extendible = 3,\r\n  MutualEarlyTermination = 4\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the instrument   *\r\n* leg's provision's date. Used only to override the business  *\r\n* day convention specified in the LegDateAdjustment component *\r\n* within the InstrumentLeg component.                         *\r\n***************************************************************\r\n*/\r\nexport enum LegProvisionDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the leg provision's tenor period. *\r\n***************************************************************\r\n*/\r\nexport enum LegProvisionDateTenorUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Used to identify the calculation agent.  The calculation *\r\n* agent may be identified in                               *\r\n* LegProvisionCalculationAgent(40456) or in the            *\r\n* ProvisionParties component.                              *\r\n************************************************************\r\n*/\r\nexport enum LegProvisionCalculationAgent {\r\n  ExercisingParty = 0,\r\n  NonExercisingParty = 1,\r\n  AsSpecifiedInTheMasterAgreement = 2,\r\n  AsSpecifiedInTheStandardTermsSupplement = 3\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* If optional early termination is not available to both  *\r\n* parties then this component identifies the buyer of the *\r\n* option through its side of the trade.                   *\r\n***********************************************************\r\n*/\r\nexport enum LegProvisionOptionSinglePartyBuyerSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n************************************************************\r\n* If optional early termination is not available to both   *\r\n* parties then this component identifies the seller of the *\r\n* option through its side of the trade.                    *\r\n************************************************************\r\n*/\r\nexport enum LegProvisionOptionSinglePartySellerSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n***************************************************\r\n* The instrument provision option exercise style. *\r\n***************************************************\r\n*/\r\nexport enum LegProvisionOptionExerciseStyle {\r\n  European = 0,\r\n  American = 1,\r\n  Bermuda = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* An ISDA defined cash settlement method used for the         *\r\n* determination of the applicable cash settlement amount. The *\r\n* method is defined in the 2006 ISDA Definitions, Section     *\r\n* 18.3. Cash Settlement Methods, paragraph (e).               *\r\n***************************************************************\r\n*/\r\nexport enum LegProvisionCashSettlMethod {\r\n  CashPrice = 0,\r\n  CashPriceAlternate = 1,\r\n  ParYieldCurveAdjusted = 2,\r\n  ZeroCouponYieldCurveAdjusted = 3,\r\n  ParYieldCurveUnadjusted = 4,\r\n  CrossCurrency = 5,\r\n  CollateralizedPrice = 6\r\n}\r\n\r\n/*\r\n********************************************\r\n* Identifies the type of quote to be used. *\r\n********************************************\r\n*/\r\nexport enum LegProvisionCashSettlQuoteType {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2,\r\n  ExercisingPartyPays = 3\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Identifies the source of quote information. *\r\n***********************************************\r\n*/\r\nexport enum LegProvisionCashSettlQuoteSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of date (e.g. adjusted for holidays). *\r\n************************************************************\r\n*/\r\nexport enum LegProvisionCashSettlPaymentDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The business day convention used to adjust the instrument *\r\n* leg's provision's option exercise date. Used only to      *\r\n* override the business day convention specified in the     *\r\n* LegDateAdjustment component within the InstrumentLeg      *\r\n* component.                                                *\r\n*************************************************************\r\n*/\r\nexport enum LegProvisionOptionExerciseBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the interval to the first (and *\r\n* possibly only) exercise date in the exercise period.     *\r\n************************************************************\r\n*/\r\nexport enum LegProvisionOptionExerciseEarliestDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with subsequent exercise dates in the *\r\n* exercise period following the earliest exercise date.      *\r\n**************************************************************\r\n*/\r\nexport enum LegProvisionOptionExerciseFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative option exercise start *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum LegProvisionOptionExerciseStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the day type of the provision's relative option *\r\n* exercise start date offset.                               *\r\n*************************************************************\r\n*/\r\nexport enum LegProvisionOptionExerciseStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of date (e.g. adjusted for holidays). *\r\n************************************************************\r\n*/\r\nexport enum LegProvisionOptionExerciseFixedDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The business day convention used to adjust the instrument *\r\n* leg's provision's option expiration date. Used only to    *\r\n* override the business day convention specified in the     *\r\n* LegDateAdjustment component within the InstrumentLeg      *\r\n* component.                                                *\r\n*************************************************************\r\n*/\r\nexport enum LegProvisionOptionExpirationDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative option expiration *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum LegProvisionOptionExpirationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the day type of the provision's relative option *\r\n* expiration date offset.                                   *\r\n*************************************************************\r\n*/\r\nexport enum LegProvisionOptionExpirationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The business day convention used to adjust the instrument    *\r\n* leg's provision's option relevant underlying date. Used only *\r\n* to override the business day convention specified in the     *\r\n* LegDateAdjustment component within the InstrumentLeg         *\r\n* component.                                                   *\r\n****************************************************************\r\n*/\r\nexport enum LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative option relevant *\r\n* underlying date offset.                                *\r\n**********************************************************\r\n*/\r\nexport enum LegProvisionOptionRelevantUnderlyingDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the day type of the provision's relative option *\r\n* relevant underlying date offset.                          *\r\n*************************************************************\r\n*/\r\nexport enum LegProvisionOptionRelevantUnderlyingDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The business day convention used to adjust the provisional *\r\n* cash settlement payment's termination, or relative         *\r\n* termination, date. Used only to override the business day  *\r\n* convention specified in the LegDateAdjustment component    *\r\n* within the InstrumentLeg component.                        *\r\n**************************************************************\r\n*/\r\nexport enum LegProvisionCashSettlPaymentDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative cash settlement *\r\n* payment date offset.                                   *\r\n**********************************************************\r\n*/\r\nexport enum LegProvisionCashSettlPaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the day type of the provision's relative cash *\r\n* settlement payment date offset.                         *\r\n***********************************************************\r\n*/\r\nexport enum LegProvisionCashSettlPaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The business day convention used to adjust the provision's *\r\n* cash settlement valuation date. Used only to override the  *\r\n* business day convention specified in the LegDateAdjustment *\r\n* component within the InstrumentLeg component.              *\r\n**************************************************************\r\n*/\r\nexport enum LegProvisionCashSettlValueDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative cash settlement value *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum LegProvisionCashSettlValueDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the day type of the provision's relative cash *\r\n* settlement value date offset.                           *\r\n***********************************************************\r\n*/\r\nexport enum LegProvisionCashSettlValueDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n*************************************\r\n* Identifies the class or source of *\r\n* LegProvisionPartyID(40534).       *\r\n*************************************\r\n*/\r\nexport enum LegProvisionPartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Identifies the type or role of LegProvisionPartyID(40534) *\r\n* specified.                                                *\r\n*************************************************************\r\n*/\r\nexport enum LegProvisionPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n****************************************************\r\n* The type of LegProvisionPartySubID(40538) value. *\r\n****************************************************\r\n*/\r\nexport enum LegProvisionPartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n************************\r\n* Type of swap stream. *\r\n************************\r\n*/\r\nexport enum UnderlyingStreamType {\r\n  PaymentCashSettlement = 0,\r\n  PhysicalDelivery = 1\r\n}\r\n\r\n/*\r\n********************************************\r\n* The side of the party paying the stream. *\r\n********************************************\r\n*/\r\nexport enum UnderlyingStreamPaySide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n***********************************************\r\n* The side of the party receiving the stream. *\r\n***********************************************\r\n*/\r\nexport enum UnderlyingStreamReceiveSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the underlying   *\r\n* instrument's stream's termination, or relative termination, *\r\n* date. Used only to override the business day convention     *\r\n* specified in the UnderlyingDateAdjustment component within  *\r\n* the UnderlyingInstrument component.                         *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingStreamTerminationDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Time unit associated with the relative termination date *\r\n* offset.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingStreamTerminationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the day type of the relative termination date *\r\n* offset.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingStreamTerminationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The business day convention used to adjust the calculation *\r\n* periods. Used only to override the business day convention *\r\n* specified in the UnderlyingDateAdjustment component within *\r\n* the UnderlyingInstrument component.                        *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingStreamCalculationPeriodBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the underlying   *\r\n* instrument's stream's first calculation period start date.  *\r\n* Used only to override the business day convention specified *\r\n* in the UnderlyingDateAdjustment component within the        *\r\n* UnderlyingInstrument component.                             *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingStreamFirstPeriodStartDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency at which calculation *\r\n* period end dates occur.                                      *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingStreamCalculationFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of end dates. It *\r\n* is used in conjunction with a specified frequency. Used only *\r\n* to override the roll convention specified in the             *\r\n* UnderlyingDateAdjustment component within the                *\r\n* UnderlyingInstrument component.                              *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingStreamCalculationRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Identifies the type of payment stream applicable to the swap *\r\n* stream associated with the underlying instrument.            *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamType {\r\n  PeriodicDefault = 0,\r\n  Initial = 1,\r\n  Single = 2,\r\n  Dividend = 3,\r\n  Interest = 4,\r\n  DividendReturn = 5,\r\n  PriceReturn = 6,\r\n  TotalReturn = 7,\r\n  Variance = 8,\r\n  Correlation = 9\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* The day count convention used in the payment stream *\r\n* calculations.                                       *\r\n*******************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamDayCount {\r\n  E11 = 0,\r\n  E3036030U360OrBondBasis = 1,\r\n  E30360Sia = 2,\r\n  E30360M = 3,\r\n  E30E360EurobondBasis = 4,\r\n  E30E360Isda = 5,\r\n  Act360 = 6,\r\n  Act365Fixed = 7,\r\n  ActActAfb = 8,\r\n  ActActIcma = 9,\r\n  ActActIcsmaUltimo = 10,\r\n  ActActIsda = 11,\r\n  Bus252 = 12,\r\n  E30E360 = 13,\r\n  Act365L = 14,\r\n  Nl365 = 15,\r\n  Nl360 = 16,\r\n  Act364 = 17\r\n}\r\n\r\n/*\r\n********************************************************\r\n* The method of calculating discounted payment amounts *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamDiscountType {\r\n  Standard = 0,\r\n  ForwardRateAgreementFra = 1\r\n}\r\n\r\n/*\r\n***********************************************\r\n* The day count convention applied to the     *\r\n* UnderlyingPaymentStreamDiscountRate(40575). *\r\n***********************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamDiscountRateDayCount {\r\n  E11 = 0,\r\n  E3036030U360OrBondBasis = 1,\r\n  E30360Sia = 2,\r\n  E30360M = 3,\r\n  E30E360EurobondBasis = 4,\r\n  E30E360Isda = 5,\r\n  Act360 = 6,\r\n  Act365Fixed = 7,\r\n  ActActAfb = 8,\r\n  ActActIcma = 9,\r\n  ActActIcsmaUltimo = 10,\r\n  ActActIsda = 11,\r\n  Bus252 = 12,\r\n  E30E360 = 13,\r\n  Act365L = 14,\r\n  Nl365 = 15,\r\n  Nl360 = 16,\r\n  Act364 = 17\r\n}\r\n\r\n/*\r\n***********************\r\n* Compounding Method. *\r\n***********************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingMethod {\r\n  None = 0,\r\n  Flat = 1,\r\n  Straight = 2,\r\n  SpreadExclusive = 3\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The business day convention used to adjust the payment    *\r\n* stream's payment date. Used only to override the business *\r\n* day convention specified in the UnderlyingDateAdjustment  *\r\n* component within the UnderlyingInstrument component.      *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamPaymentDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Time unit associated with the frequency of payments. *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamPaymentFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of end dates. It *\r\n* is used in conjunction with a specified frequency. Used only *\r\n* to override the roll convention specified in the             *\r\n* UnderlyingDateAdjustment component within the                *\r\n* UnderlyingInstrument component.                              *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamPaymentRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the relative payment date offset. *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamPaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the day type of the relative payment date offset. *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamPaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the payment      *\r\n* stream's reset date. Used only to override the business day *\r\n* convention specified in the UnderlyingDateAdjustment        *\r\n* component within the UnderlyingInstrument component.        *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamResetDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************\r\n* Time unit associated with frequency of resets. *\r\n**************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamResetFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Used to specify the day of the week in which the reset *\r\n* occurs for payments that reset on a weekly basis.      *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamResetWeeklyRollConvention {\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* The business day convention used to adjust the payment  *\r\n* stream's initial fixing date. Used only to override the *\r\n* business day convention specified in the                *\r\n* UnderlyingDateAdjustment component within the           *\r\n* UnderlyingInstrument component.                         *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative initial fixing date *\r\n* offset.                                                    *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamInitialFixingDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the day type of the relative initial fixing date *\r\n* offset.                                                    *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamInitialFixingDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The business day convention used to adjust the payment       *\r\n* stream's fixing date. Used only to override the business day *\r\n* convention specified in the UnderlyingDateAdjustment         *\r\n* component within the UnderlyingInstrument component.         *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamFixingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative fixing date offset. *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamFixingDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the day type of the relative fixing date offset. *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamFixingDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative rate cut-off date *\r\n* offset.                                                  *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamRateCutoffDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the day type of the relative rate cut-off date *\r\n* offset.                                                  *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamRateCutoffDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* The source of the payment stream floating rate index. *\r\n*********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamRateIndexSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Time unit associated with the underlying instrument\u0019s *\r\n* floating rate index.                                  *\r\n*********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamRateIndexCurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n********************************************\r\n* Identifies a short or long spread value. *\r\n********************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the yield calculation treatment for the index. *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Reference to the buyer of the cap rate option through its *\r\n* trade side.                                               *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCapRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Reference to the seller of the cap rate option through its *\r\n* trade side.                                                *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCapRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the buyer of the floor rate option through its *\r\n* trade side.                                                 *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamFloorRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reference to the seller of the floor rate option through its *\r\n* trade side.                                                  *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamFloorRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n*************************************\r\n* Specifies the rounding direction. *\r\n*************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamFinalRateRoundingDirection {\r\n  RoundToNearest = '0',\r\n  RoundDown = '1',\r\n  RoundUp = '2'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* When rate averaging is applicable, used to specify whether a *\r\n* weighted or unweighted average calculation method is to be   *\r\n* used.                                                        *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamAveragingMethod {\r\n  Unweighted = 0,\r\n  Weighted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The specification of any provisions for calculating payment *\r\n* obligations when a floating rate is negative (either due to *\r\n* a quoted negative floating rate or by operation of a spread *\r\n* that is subtracted from the floating rate).                 *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamNegativeRateTreatment {\r\n  ZeroInterestRateMethod = 0,\r\n  NegativeInterestRateMethod = 1\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Time unit associated with the inflation lag period. *\r\n*******************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamInflationLagUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************\r\n* The inflation lag period day type. *\r\n**************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamInflationLagDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The method used when calculating the Inflation Index Level *\r\n* from multiple points - the most common is Linear.          *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamInflationInterpolationMethod {\r\n  None = 0,\r\n  LinearZeroYield = 1\r\n}\r\n\r\n/*\r\n*****************************************\r\n* The inflation index reference source. *\r\n*****************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamInflationIndexSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The method of Forward Rate Agreement (FRA) discounting, if *\r\n* any, that will apply.                                      *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamFRADiscounting {\r\n  None = 0,\r\n  InternationalSwapsAndDerivativesAssociationIsda = 1,\r\n  AustralianFinancialMarketsAssociationAfma = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The business day convention used to adjust the payment    *\r\n* stream's fixing date for the non-deliverable terms. Used  *\r\n* only to override the business day convention specified in *\r\n* the UnderlyingDateAdjustment component within the         *\r\n* UnderlyingInstrument component.                           *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative non-deliverable *\r\n* fixing date offset.                                    *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative non-deliverable *\r\n* fixing date offset.                                    *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of date (e.g. adjusted for holidays). *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingNonDeliverableFixingDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Identifies the source of rate information. *\r\n**********************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamNonDeliverableSettlRateSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Used to identify the settlement rate postponement *\r\n* calculation agent.                                *\r\n*****************************************************\r\n*/\r\nexport enum UnderlyingSettlRatePostponementCalculationAgent {\r\n  ExercisingParty = 0,\r\n  NonExercisingParty = 1,\r\n  AsSpecifiedInTheMasterAgreement = 2,\r\n  AsSpecifiedInTheStandardTermsSupplement = 3\r\n}\r\n\r\n/*\r\n*********************\r\n* Type of schedule. *\r\n*********************\r\n*/\r\nexport enum UnderlyingPaymentScheduleType {\r\n  Notional = 0,\r\n  CashFlow = 1,\r\n  FxLinkedNotional = 2,\r\n  FixedRate = 3,\r\n  FutureValueNotional = 4,\r\n  KnownAmount = 5,\r\n  FloatingRateMultiplier = 6,\r\n  Spread = 7,\r\n  CapRate = 8,\r\n  FloorRate = 9,\r\n  NonDeliverableSettlementPaymentDates = 10,\r\n  NonDeliverableSettlementCalculationDates = 11,\r\n  NonDeliverableFixingDates = 12,\r\n  SettlementPeriodNotional = 13,\r\n  SettlementPeriodPrice = 14,\r\n  CalculationPeriod = 15,\r\n  DividendAccrualRateMultiplier = 16,\r\n  DividendAccrualRateSpread = 17,\r\n  DividendAccrualCapRate = 18,\r\n  DividendAccrualFloorRate = 19,\r\n  CompoundingRateMultiplier = 20,\r\n  CompoundingRateSpread = 21,\r\n  CompoundingCapRate = 22,\r\n  CompoundingFloorRate = 23\r\n}\r\n\r\n/*\r\n**************************************************\r\n* Indicates to which stub this schedule applies. *\r\n**************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleStubType {\r\n  Initial = 0,\r\n  Final = 1,\r\n  CompoundingInitial = 2,\r\n  CompoundingFinal = 3\r\n}\r\n\r\n/*\r\n***************************************************\r\n* The side of the party paying the step schedule. *\r\n***************************************************\r\n*/\r\nexport enum UnderlyingPaymentSchedulePaySide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The side of the party receiving the step schedule. *\r\n******************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleReceiveSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the yield calculation treatment for the step *\r\n* schedule.                                              *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Time unit associated with the step frequency. *\r\n*************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleStepFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies whether the                                       *\r\n* UnderlyingPaymentScheduleStepRate(40683) or                 *\r\n* UnderlyingPaymentScheduleStepOffsetValue(40682) should be   *\r\n* applied to the initial notional or the previous notional in *\r\n* order to calculate the notional step change amount.         *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleStepRelativeTo {\r\n  Initial = 0,\r\n  Previous = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The business day convention used to adjust the payment     *\r\n* schedule's fixing date. Used only to override the business *\r\n* day convention specified in the UnderlyingDateAdjustment   *\r\n* component within the UnderlyingInstrument component.       *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative fixing date offset. *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleFixingDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the day type of the relative fixing date offset. *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleFixingDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the payment      *\r\n* schedule's interim exchange date. Used only to override the *\r\n* business day convention specified in the                    *\r\n* UnderlyingDateAdjustment component within the               *\r\n* UnderlyingInstrument component.                             *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative interim exchange date *\r\n* offset.                                                      *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative interim exchange date *\r\n* offset.                                                      *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Identifies the source of rate information. *\r\n**********************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleRateSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*********************\r\n* Rate source type. *\r\n*********************\r\n*/\r\nexport enum UnderlyingPaymentScheduleRateSourceType {\r\n  Primary = 0,\r\n  Secondary = 1\r\n}\r\n\r\n/*\r\n**************\r\n* Stub type. *\r\n**************\r\n*/\r\nexport enum UnderlyingPaymentStubType {\r\n  Initial = 0,\r\n  Final = 1,\r\n  CompoundingInitial = 2,\r\n  CompoundingFinal = 3\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Optional indication whether stub is shorter or longer than *\r\n* the regular swap period.                                   *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubLength {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The source for the underlying payment stub floating rate *\r\n* index.                                                   *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubIndexSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Time unit associated with the underlying payment stub *\r\n* floating rate index.                                  *\r\n*********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubIndexCurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubIndexRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the yield calculation treatment for the stub *\r\n* index.                                                 *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubIndexRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Reference to the buyer of the cap rate option through its *\r\n* trade side.                                               *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubIndexCapRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Reference to the seller of the cap rate option through its *\r\n* trade side.                                                *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubIndexCapRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the buyer of the floor rate option through its *\r\n* trade side.                                                 *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubIndexFloorRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reference to the seller of the floor rate option through its *\r\n* trade side.                                                  *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubIndexFloorRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The source of the second stub floating rate index. *\r\n******************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubIndex2Source {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Secondary time unit associated with the stub floating rate *\r\n* index curve.                                               *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubIndex2CurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubIndex2RateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the yield calculation treatment for the second *\r\n* stub index.                                              *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubIndex2RateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Identifies the type of payment stream associated with the *\r\n* swap.                                                     *\r\n*************************************************************\r\n*/\r\nexport enum PaymentStreamType {\r\n  PeriodicDefault = 0,\r\n  Initial = 1,\r\n  Single = 2,\r\n  Dividend = 3,\r\n  Interest = 4,\r\n  DividendReturn = 5,\r\n  PriceReturn = 6,\r\n  TotalReturn = 7,\r\n  Variance = 8,\r\n  Correlation = 9\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* The day count convention used in the payment stream *\r\n* calculations.                                       *\r\n*******************************************************\r\n*/\r\nexport enum PaymentStreamDayCount {\r\n  E11 = 0,\r\n  E3036030U360OrBondBasis = 1,\r\n  E30360Sia = 2,\r\n  E30360M = 3,\r\n  E30E360EurobondBasis = 4,\r\n  E30E360Isda = 5,\r\n  Act360 = 6,\r\n  Act365Fixed = 7,\r\n  ActActAfb = 8,\r\n  ActActIcma = 9,\r\n  ActActIcsmaUltimo = 10,\r\n  ActActIsda = 11,\r\n  Bus252 = 12,\r\n  E30E360 = 13,\r\n  Act365L = 14,\r\n  Nl365 = 15,\r\n  Nl360 = 16,\r\n  Act364 = 17\r\n}\r\n\r\n/*\r\n********************************************************\r\n* The method of calculating discounted payment amounts *\r\n********************************************************\r\n*/\r\nexport enum PaymentStreamDiscountType {\r\n  Standard = 0,\r\n  ForwardRateAgreementFra = 1\r\n}\r\n\r\n/*\r\n*******************************************\r\n* The day count convention applied to the *\r\n* PaymentStreamDiscountRate(40745).       *\r\n*******************************************\r\n*/\r\nexport enum PaymentStreamDiscountRateDayCount {\r\n  E11 = 0,\r\n  E3036030U360OrBondBasis = 1,\r\n  E30360Sia = 2,\r\n  E30360M = 3,\r\n  E30E360EurobondBasis = 4,\r\n  E30E360Isda = 5,\r\n  Act360 = 6,\r\n  Act365Fixed = 7,\r\n  ActActAfb = 8,\r\n  ActActIcma = 9,\r\n  ActActIcsmaUltimo = 10,\r\n  ActActIsda = 11,\r\n  Bus252 = 12,\r\n  E30E360 = 13,\r\n  Act365L = 14,\r\n  Nl365 = 15,\r\n  Nl360 = 16,\r\n  Act364 = 17\r\n}\r\n\r\n/*\r\n***********************\r\n* Compounding method. *\r\n***********************\r\n*/\r\nexport enum PaymentStreamCompoundingMethod {\r\n  None = 0,\r\n  Flat = 1,\r\n  Straight = 2,\r\n  SpreadExclusive = 3\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The business day convention used to adjust the payment    *\r\n* stream's payment date. Used only to override the business *\r\n* day convention specified in the DateAdjustment component  *\r\n* within the Instrument component.                          *\r\n*************************************************************\r\n*/\r\nexport enum PaymentStreamPaymentDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Time unit associated with the frequency of payments. *\r\n********************************************************\r\n*/\r\nexport enum PaymentStreamPaymentFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of end dates. It *\r\n* is used in conjunction with a specified frequency. Used only *\r\n* to override the roll convention specified in the             *\r\n* DateAdjustment component within the Instrument component.    *\r\n****************************************************************\r\n*/\r\nexport enum PaymentStreamPaymentRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Time unit multiplier for the relative initial fixing date *\r\n* offset.                                                   *\r\n*************************************************************\r\n*/\r\nexport enum PaymentStreamPaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the payment      *\r\n* stream's reset date. Used only to override the business day *\r\n* convention specified in the DateAdjustment component within *\r\n* the Instrument component.                                   *\r\n***************************************************************\r\n*/\r\nexport enum PaymentStreamResetDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Time unit associated with the frequency of resets. *\r\n******************************************************\r\n*/\r\nexport enum PaymentStreamResetFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Used to specify the day of the week in which the reset *\r\n* occurs for payments that reset on a weekly basis.      *\r\n**********************************************************\r\n*/\r\nexport enum PaymentStreamResetWeeklyRollConvention {\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* The business day convention used to adjust the payment  *\r\n* stream's initial fixing date. Used only to override the *\r\n* business day convention specified in the DateAdjustment *\r\n* component within the Instrument component.              *\r\n***********************************************************\r\n*/\r\nexport enum PaymentStreamInitialFixingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative initial fixing date *\r\n* offset.                                                    *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamInitialFixingDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the day type of the relative initial fixing date *\r\n* offset.                                                    *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamInitialFixingDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The business day convention used to adjust the payment       *\r\n* stream's fixing date. Used only to override the business day *\r\n* convention specified in the DateAdjustment component within  *\r\n* the Instrument component.                                    *\r\n****************************************************************\r\n*/\r\nexport enum PaymentStreamFixingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative fixing date offset. *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamFixingDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the day type of the relative fixing date offset. *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamFixingDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative rate cut-off date *\r\n* offset.                                                  *\r\n************************************************************\r\n*/\r\nexport enum PaymentStreamRateCutoffDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the day type of the relative rate cut-off date *\r\n* offset.                                                  *\r\n************************************************************\r\n*/\r\nexport enum PaymentStreamRateCutoffDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* The source of the payment stream floating rate index. *\r\n*********************************************************\r\n*/\r\nexport enum PaymentStreamRateIndexSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Time unit associated with the floating rate index. *\r\n******************************************************\r\n*/\r\nexport enum PaymentStreamRateIndexCurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the yield calculation treatment for the index. *\r\n************************************************************\r\n*/\r\nexport enum PaymentStreamRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Reference to the buyer of the cap rate option through its *\r\n* trade side.                                               *\r\n*************************************************************\r\n*/\r\nexport enum PaymentStreamCapRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Reference to the seller of the cap rate option through its *\r\n* trade side.                                                *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamCapRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the buyer of the floor rate option through its *\r\n* trade side.                                                 *\r\n***************************************************************\r\n*/\r\nexport enum PaymentStreamFloorRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reference to the seller of the floor rate option through its *\r\n* trade side.                                                  *\r\n****************************************************************\r\n*/\r\nexport enum PaymentStreamFloorRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n*************************************\r\n* Specifies the rounding direction. *\r\n*************************************\r\n*/\r\nexport enum PaymentStreamFinalRateRoundingDirection {\r\n  RoundToNearest = '0',\r\n  RoundDown = '1',\r\n  RoundUp = '2'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* When rate averaging is applicable, used to specify whether a *\r\n* weighted or unweighted average calculation method is to be   *\r\n* used.                                                        *\r\n****************************************************************\r\n*/\r\nexport enum PaymentStreamAveragingMethod {\r\n  Unweighted = 0,\r\n  Weighted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The specification of any provisions for calculating payment *\r\n* obligations when a floating rate is negative (either due to *\r\n* a quoted negative floating rate or by operation of a spread *\r\n* that is subtracted from the floating rate).                 *\r\n***************************************************************\r\n*/\r\nexport enum PaymentStreamNegativeRateTreatment {\r\n  ZeroInterestRateMethod = 0,\r\n  NegativeInterestRateMethod = 1\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Time unit associated with the inflation lag period. *\r\n*******************************************************\r\n*/\r\nexport enum PaymentStreamInflationLagUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************\r\n* The inflation lag period day type. *\r\n**************************************\r\n*/\r\nexport enum PaymentStreamInflationLagDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The method used when calculating the Inflation Index Level *\r\n* from multiple points - the most common is Linear.          *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamInflationInterpolationMethod {\r\n  None = 0,\r\n  LinearZeroYield = 1\r\n}\r\n\r\n/*\r\n*****************************************\r\n* The inflation index reference source. *\r\n*****************************************\r\n*/\r\nexport enum PaymentStreamInflationIndexSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The method of Forward Rate Agreement (FRA) discounting, if *\r\n* any, that will apply.                                      *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamFRADiscounting {\r\n  None = 0,\r\n  InternationalSwapsAndDerivativesAssociationIsda = 1,\r\n  AustralianFinancialMarketsAssociationAfma = 2\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The business day convention used to adjust the payment   *\r\n* stream's fixing date for the non-deliverable settlement  *\r\n* terms. Used only to override the business day convention *\r\n* specified in the DateAdjustment component within the     *\r\n* Instrument component                                     *\r\n************************************************************\r\n*/\r\nexport enum PaymentStreamNonDeliverableFixingDatesBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative non-deliverable *\r\n* fixing date offset.                                    *\r\n**********************************************************\r\n*/\r\nexport enum PaymentStreamNonDeliverableFixingDatesOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative non-deliverable *\r\n* fixing date offset.                                    *\r\n**********************************************************\r\n*/\r\nexport enum PaymentStreamNonDeliverableFixingDatesOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of date (e.g. adjusted for holidays). *\r\n************************************************************\r\n*/\r\nexport enum NonDeliverableFixingDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n*********************\r\n* Type of schedule. *\r\n*********************\r\n*/\r\nexport enum PaymentScheduleType {\r\n  Notional = 0,\r\n  CashFlow = 1,\r\n  FxLinkedNotional = 2,\r\n  FixedRate = 3,\r\n  FutureValueNotional = 4,\r\n  KnownAmount = 5,\r\n  FloatingRateMultiplier = 6,\r\n  Spread = 7,\r\n  CapRate = 8,\r\n  FloorRate = 9,\r\n  NonDeliverableSettlementPaymentDates = 10,\r\n  NonDeliverableSettlementCalculationDates = 11,\r\n  NonDeliverableFixingDates = 12,\r\n  SettlementPeriodNotional = 13,\r\n  SettlementPeriodPrice = 14,\r\n  CalculationPeriod = 15,\r\n  DividendAccrualRateMultiplier = 16,\r\n  DividendAccrualRateSpread = 17,\r\n  DividendAccrualCapRate = 18,\r\n  DividendAccrualFloorRate = 19,\r\n  CompoundingRateMultiplier = 20,\r\n  CompoundingRateSpread = 21,\r\n  CompoundingCapRate = 22,\r\n  CompoundingFloorRate = 23\r\n}\r\n\r\n/*\r\n**************************************************\r\n* Indicates to which stub this schedule applies. *\r\n**************************************************\r\n*/\r\nexport enum PaymentScheduleStubType {\r\n  Initial = 0,\r\n  Final = 1,\r\n  CompoundingInitial = 2,\r\n  CompoundingFinal = 3\r\n}\r\n\r\n/*\r\n***************************************************\r\n* The side of the party paying the step schedule. *\r\n***************************************************\r\n*/\r\nexport enum PaymentSchedulePaySide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* The side of the party receiving the stepf schedule. *\r\n*******************************************************\r\n*/\r\nexport enum PaymentScheduleReceiveSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum PaymentScheduleRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the yield calculation treatment for the step *\r\n* schedule.                                              *\r\n**********************************************************\r\n*/\r\nexport enum PaymentScheduleRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Time unit associated with the step frequency. *\r\n*************************************************\r\n*/\r\nexport enum PaymentScheduleStepFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies whether the PaymentScheduleStepRate(40847) or    *\r\n* PaymentScheduleStepOffsetValue(40846) should be applied to *\r\n* the initial notional or the previous notional in order to  *\r\n* calculate the notional step change amount.                 *\r\n**************************************************************\r\n*/\r\nexport enum PaymentScheduleStepRelativeTo {\r\n  Initial = 0,\r\n  Previous = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The business day convention used to adjust the payment     *\r\n* schedule's fixing date. Used only to override the business *\r\n* day convention specified in the DateAdjustment component   *\r\n* within the Instrument component.                           *\r\n**************************************************************\r\n*/\r\nexport enum PaymentScheduleFixingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative fixing date offset. *\r\n**************************************************************\r\n*/\r\nexport enum PaymentScheduleFixingDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the day type of the relative fixing date offset. *\r\n**************************************************************\r\n*/\r\nexport enum PaymentScheduleFixingDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the payment      *\r\n* schedule's interim exchange date. Used only to override the *\r\n* business day convention specified in the DateAdjustment     *\r\n* component within the Instrument component.                  *\r\n***************************************************************\r\n*/\r\nexport enum PaymentScheduleInterimExchangeDatesBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative interim exchange date *\r\n* offset.                                                      *\r\n****************************************************************\r\n*/\r\nexport enum PaymentScheduleInterimExchangeDatesOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative interim exchange date *\r\n* offset.                                                      *\r\n****************************************************************\r\n*/\r\nexport enum PaymentScheduleInterimExchangeDatesOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Identifies the source of rate information. *\r\n**********************************************\r\n*/\r\nexport enum PaymentScheduleRateSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*********************\r\n* Rate source type. *\r\n*********************\r\n*/\r\nexport enum PaymentScheduleRateSourceType {\r\n  Primary = 0,\r\n  Secondary = 1\r\n}\r\n\r\n/*\r\n**************\r\n* Stub type. *\r\n**************\r\n*/\r\nexport enum PaymentStubType {\r\n  Initial = 0,\r\n  Final = 1,\r\n  CompoundingInitial = 2,\r\n  CompoundingFinal = 3\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Optional indication whether stub is shorter or longer than *\r\n* the regular swap period.                                   *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStubLength {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n***********************************************\r\n* The source of the stub floating rate index. *\r\n***********************************************\r\n*/\r\nexport enum PaymentStubIndexSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Time unit associated with the stub floating rate index. *\r\n***********************************************************\r\n*/\r\nexport enum PaymentStubIndexCurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStubIndexRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the yield calculation treatment for the payment *\r\n* stub index.                                               *\r\n*************************************************************\r\n*/\r\nexport enum PaymentStubIndexRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Reference to the buyer of the cap rate option through its *\r\n* trade side.                                               *\r\n*************************************************************\r\n*/\r\nexport enum PaymentStubIndexCapRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Reference to the seller of the cap rate option through its *\r\n* trade side.                                                *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStubIndexCapRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the buyer of the floor rate option through its *\r\n* trade side.                                                 *\r\n***************************************************************\r\n*/\r\nexport enum PaymentStubIndexFloorRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reference to the seller of the floor rate option through its *\r\n* trade side.                                                  *\r\n****************************************************************\r\n*/\r\nexport enum PaymentStubIndexFloorRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The source of the second stub floating rate index. *\r\n******************************************************\r\n*/\r\nexport enum PaymentStubIndex2Source {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Secondary time unit associated with the stub floating rate *\r\n* index curve.                                               *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStubIndex2CurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStubIndex2RateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the yield calculation treatment for the second *\r\n* stub index.                                              *\r\n************************************************************\r\n*/\r\nexport enum PaymentStubIndex2RateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Identifies the source of rate information. *\r\n**********************************************\r\n*/\r\nexport enum UnderlyingSettlRateFallbackRateSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Used to identify the settlement rate postponement *\r\n* calculation agent.                                *\r\n*****************************************************\r\n*/\r\nexport enum LegSettlRatePostponementCalculationAgent {\r\n  ExercisingParty = 0,\r\n  NonExercisingParty = 1,\r\n  AsSpecifiedInTheMasterAgreement = 2,\r\n  AsSpecifiedInTheStandardTermsSupplement = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the instrument's *\r\n* stream's effective, or relative effective, date. Used only  *\r\n* to override the business day convention specified in the    *\r\n* DateAdjustment component within the Instrument component.   *\r\n***************************************************************\r\n*/\r\nexport enum StreamEffectiveDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Time unit associated with the relative effective date *\r\n* offset.                                               *\r\n*********************************************************\r\n*/\r\nexport enum StreamEffectiveDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Specifies the day type of the relative effective date *\r\n* offset.                                               *\r\n*********************************************************\r\n*/\r\nexport enum StreamEffectiveDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************\r\n* Used to further qualify the value of *\r\n* UnderlyingProvisionPartyRole(42176). *\r\n****************************************\r\n*/\r\nexport enum UnderlyingProvisionPartyRoleQualifier {\r\n  Agency = 0,\r\n  Principal = 1,\r\n  RisklessPrincipal = 2,\r\n  GeneralClearingMember = 3,\r\n  IndividualClearingMember = 4,\r\n  PreferredMarketMaker = 5,\r\n  DirectedMarketMaker = 6,\r\n  Bank = 7,\r\n  Hub = 8,\r\n  PrimaryTradeRepository = 9,\r\n  OriginalTradeRepository = 10,\r\n  AdditionalInternationalTradeRepository = 11,\r\n  AdditionalDomesticTradeRepository = 12,\r\n  RelatedExchange = 13,\r\n  OptionsExchange = 14,\r\n  SpecifiedExchange = 15,\r\n  ConstituentExchange = 16,\r\n  ExemptFromTradeReporting = 17,\r\n  Current = 18,\r\n  New = 19,\r\n  DesignatedSponsor = 20,\r\n  Specialist = 21,\r\n  Algorithm = 22,\r\n  FirmOrLegalEntity = 23,\r\n  NaturalPerson = 24,\r\n  RegularTrader = 25,\r\n  HeadTrader = 26,\r\n  Supervisor = 27\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the type of price for PaymentPrice(40218). *\r\n********************************************************\r\n*/\r\nexport enum PaymentPriceType {\r\n  PercentageIEPercentOfParOftenCalledDollarPriceForFixedIncome = 1,\r\n  PerUnitIEPerShareOrContract = 2,\r\n  FixedAmountAbsoluteValue = 3,\r\n  DiscountPercentagePointsBelowPar = 4,\r\n  PremiumPercentagePointsOverPar = 5,\r\n  SpreadBasisPointsSpread = 6,\r\n  TedPrice = 7,\r\n  TedYield = 8,\r\n  Yield = 9,\r\n  FixedCabinetTradePricePrimarilyForListedFuturesAndOptions = 10,\r\n  VariableCabinetTradePricePrimarilyForListedFuturesAndOptions = 11,\r\n  PriceSpread = 12,\r\n  ProductTicksInHalves = 13,\r\n  ProductTicksInFourths = 14,\r\n  ProductTicksInEighths = 15,\r\n  ProductTicksInSixteenths = 16,\r\n  ProductTicksInThirtySeconds = 17,\r\n  ProductTicksInSixtyFourths = 18,\r\n  ProductTicksInOneTwentyEighths = 19,\r\n  NormalRateRepresentationEGFxRate = 20,\r\n  InverseRateRepresentationEGFxRate = 21,\r\n  BasisPoints = 22,\r\n  UpFrontPoints = 23,\r\n  InterestRate = 24,\r\n  PercentageOfNotional = 25\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the day type of the relative payment date offset. *\r\n***************************************************************\r\n*/\r\nexport enum PaymentStreamPaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The business day convention used for adjusting dates. The *\r\n* value defined here applies to all adjustable dates in the *\r\n* instrument unless specifically overridden.                *\r\n*************************************************************\r\n*/\r\nexport enum BusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining a sequence of dates. It is    *\r\n* used in conjunction with a specified frequency. The value    *\r\n* defined here applies to all adjustable dates in the          *\r\n* instrument unless specifically overridden. Additional values *\r\n* may be used by mutual agreement of the counterparties.       *\r\n****************************************************************\r\n*/\r\nexport enum DateRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The business day convention used for adjusting dates. The *\r\n* value defined here applies to all adjustable dates in the *\r\n* instrument leg unless specifically overridden.            *\r\n*************************************************************\r\n*/\r\nexport enum LegBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The convention for determining a sequence of dates. It is *\r\n* used in conjunction with a specified frequency. The value *\r\n* defined here applies to all adjustable dates in the       *\r\n* instrument leg unless specifically overridden.            *\r\n*************************************************************\r\n*/\r\nexport enum LegDateRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The business day convention used for adjusting dates. The *\r\n* value defined here applies to all adjustable dates in the *\r\n* underlying instrument unless specifically overridden.     *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The convention for determining a sequence of dates. It is *\r\n* used in conjunction with a specified frequency. The value *\r\n* defined here applies to all adjustable dates in the       *\r\n* underlying instrument unless specifically overridden.     *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingDateRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Used to further clarify the value of PaymentType(40213). *\r\n************************************************************\r\n*/\r\nexport enum PaymentSubType {\r\n  InitialPrincipalExchange = 0,\r\n  IntermediatePrincipalExchange = 1,\r\n  FinalPrincipalExchange = 2,\r\n  PrepaidPremiumForward = 3,\r\n  PostpaidPremiumForward = 4,\r\n  VariablePremiumForward = 5,\r\n  FixedPremiumForward = 6,\r\n  SwapPremium = 7,\r\n  ConditionalPrincipalExchangeOnExercise = 8\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Time unit associated with complex credit events. *\r\n****************************************************\r\n*/\r\nexport enum ComplexEventCreditEventUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Specifies the day type for the complex credit events. *\r\n*********************************************************\r\n*/\r\nexport enum ComplexEventCreditEventDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies a complex event qualifier. Used to further qualify *\r\n* ComplexEventCreditEventType(40998).                          *\r\n****************************************************************\r\n*/\r\nexport enum ComplexEventCreditEventQualifier {\r\n  RetructuringMultipleHoldingObligations = 'H',\r\n  RestructuringMultipleCreditEventNotices = 'E',\r\n  FloatingRateInterestShortfall = 'C'\r\n}\r\n\r\n/*\r\n******************************\r\n* Specifies the period type. *\r\n******************************\r\n*/\r\nexport enum ComplexEventPeriodType {\r\n  AsianOut = 0,\r\n  AsianIn = 1,\r\n  BarrierCap = 2,\r\n  BarrierFloor = 3,\r\n  KnockOut = 4,\r\n  KnockIn = 5\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Identifies the source of rate information. *\r\n**********************************************\r\n*/\r\nexport enum ComplexEventRateSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates whether the rate source specified is a primary or *\r\n* secondary source.                                           *\r\n***************************************************************\r\n*/\r\nexport enum ComplexEventRateSourceType {\r\n  Primary = 0,\r\n  Secondary = 1\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Time unit associated with the relative date offset. *\r\n*******************************************************\r\n*/\r\nexport enum ComplexEventDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Specifies the day type of the relative date offset. *\r\n*******************************************************\r\n*/\r\nexport enum ComplexEventDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The business day convention used to adjust the complex event *\r\n* date. Used only to override the business day convention      *\r\n* specified in the DateAdjustment component within the         *\r\n* Instrument component.                                        *\r\n****************************************************************\r\n*/\r\nexport enum ComplexEventDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the schedule date frequency. *\r\n**********************************************************\r\n*/\r\nexport enum ComplexEventScheduleFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of dates.  It is *\r\n* used in conjunction with a specified frequency.  Used only   *\r\n* to override the roll convention defined in the               *\r\n* DateAdjustment component in Instrument.                      *\r\n****************************************************************\r\n*/\r\nexport enum ComplexEventScheduleRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n********************************************\r\n* Specifies the type of delivery schedule. *\r\n********************************************\r\n*/\r\nexport enum DeliveryScheduleType {\r\n  Notional = 0,\r\n  Delivery = 1,\r\n  PhysicalSettlementPeriod = 2\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the delivery quantity unit of measure (UOM). *\r\n**********************************************************\r\n*/\r\nexport enum DeliveryScheduleNotionalUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***************************************\r\n* The frequency of notional delivery. *\r\n***************************************\r\n*/\r\nexport enum DeliveryScheduleNotionalCommodityFrequency {\r\n  Term = 0,\r\n  PerBusinessDay = 1,\r\n  PerCalculationPeriod = 2,\r\n  PerSettlementPeriod = 3,\r\n  PerCalendarDay = 4,\r\n  PerHour = 5,\r\n  PerMonth = 6\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the tolerance value's unit of measure (UOM). *\r\n**********************************************************\r\n*/\r\nexport enum DeliveryScheduleToleranceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***************************************\r\n* Specifies the tolerance value type. *\r\n***************************************\r\n*/\r\nexport enum DeliveryScheduleToleranceType {\r\n  Absolute = 0,\r\n  Percentage = 1\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Specifies the commodity delivery flow type. *\r\n***********************************************\r\n*/\r\nexport enum DeliveryScheduleSettlFlowType {\r\n  AllTimes = 0,\r\n  OnPeak = 1,\r\n  OffPeak = 2,\r\n  Base = 3,\r\n  BlockHours = 4,\r\n  Other = 5\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates whether holidays are included in the settlement *\r\n* periods. Required for electricity contracts.              *\r\n*************************************************************\r\n*/\r\nexport enum DeliveryScheduleSettlHolidaysProcessingInstruction {\r\n  DoNotIncludeHolidays = 0,\r\n  IncludeHolidays = 1\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Specifies the day or group of days for delivery. *\r\n****************************************************\r\n*/\r\nexport enum DeliveryScheduleSettlDay {\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6,\r\n  Sunday = 7,\r\n  AllWeekdays = 8,\r\n  AllDays = 9,\r\n  AllWeekends = 10\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the format of the delivery start and end time *\r\n* values.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum DeliveryScheduleSettlTimeType {\r\n  HourOfTheDay = 0,\r\n  HhMmTimeFormat = 1\r\n}\r\n\r\n/*\r\n******************************************\r\n* Specifies the type of delivery stream. *\r\n******************************************\r\n*/\r\nexport enum DeliveryStreamType {\r\n  PeriodicDefaultIfNotSpecified = 0,\r\n  Initial = 1,\r\n  Single = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies under what conditions the buyer and seller should *\r\n* be excused of their delivery obligations.                   *\r\n***************************************************************\r\n*/\r\nexport enum DeliveryStreamDeliveryRestriction {\r\n  Firm = 1,\r\n  InterruptableOrNonFirm = 2,\r\n  ForceMajeure = 3,\r\n  SystemFirm = 4,\r\n  UnitFirm = 5\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* The trade side value of the party responsible for *\r\n* electricity delivery contingency.                 *\r\n*****************************************************\r\n*/\r\nexport enum DeliveryStreamDeliveryContingentPartySide {\r\n  Buyer = 0,\r\n  Seller = 1\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Specifies the condition of title transfer. *\r\n**********************************************\r\n*/\r\nexport enum DeliveryStreamTitleTransferCondition {\r\n  TransfersWithRiskOfLoss = 0,\r\n  DoesNotTransferWithRiskOfLoss = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the tolerance value's unit of measure (UOM). *\r\n**********************************************************\r\n*/\r\nexport enum DeliveryStreamToleranceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***************************************\r\n* Specifies the tolerance value type. *\r\n***************************************\r\n*/\r\nexport enum DeliveryStreamToleranceType {\r\n  Absolute = 0,\r\n  Percentage = 1\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Indicates whether the tolerance is at the seller's or *\r\n* buyer's option.                                       *\r\n*********************************************************\r\n*/\r\nexport enum DeliveryStreamToleranceOptionSide {\r\n  Buyer = 1,\r\n  Seller = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* A reference to the party able to choose whether the gas is *\r\n* delivered for a particular period as found in a swing or   *\r\n* interruptible contract.                                    *\r\n**************************************************************\r\n*/\r\nexport enum DeliveryStreamElectingPartySide {\r\n  Buyer = 0,\r\n  Seller = 1\r\n}\r\n\r\n/*\r\n*************************************************\r\n* The consequences of market disruption events. *\r\n*************************************************\r\n*/\r\nexport enum MarketDisruptionProvision {\r\n  NotApplicable = 0,\r\n  Applicable = 1,\r\n  AsSpecifiedInMasterAgreement = 2,\r\n  AsSpecifiedInConfirmation = 3\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Specifies the location of the fallback provision *\r\n* documentation.                                   *\r\n****************************************************\r\n*/\r\nexport enum MarketDisruptionFallbackProvision {\r\n  AsSpecifiedInMasterAgreement = 0,\r\n  AsSpecifiedInConfirmation = 1\r\n}\r\n\r\n/*\r\n******************************************\r\n* The type of reference price underlier. *\r\n******************************************\r\n*/\r\nexport enum MarketDisruptionFallbackUnderlierType {\r\n  Basket = 0,\r\n  Bond = 1,\r\n  Cash = 2,\r\n  Commodity = 3,\r\n  ConvertibleBond = 4,\r\n  Equity = 5,\r\n  ExchangeTradedFund = 6,\r\n  Future = 7,\r\n  Index = 8,\r\n  Loan = 9,\r\n  Mortgage = 10,\r\n  MutualFund = 11\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the class or source scheme of the security *\r\n* identifier.                                          *\r\n********************************************************\r\n*/\r\nexport enum MarketDisruptionFallbackUnderlierSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Indicates whether follow-up confirmation of exercise     *\r\n* (written or electronic) is required following telephonic *\r\n* notice by the buyer to the seller or seller's agent.     *\r\n************************************************************\r\n*/\r\nexport enum ExerciseConfirmationMethod {\r\n  NotRequired = 0,\r\n  NonElectronic = 1,\r\n  Electronic = 2,\r\n  UnknownAtTimeOfReport = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the option       *\r\n* exercise dates. Used only to override the business day      *\r\n* convention specified in the DateAdjustment component within *\r\n* the Instrument component.                                   *\r\n***************************************************************\r\n*/\r\nexport enum OptionExerciseBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative earliest option *\r\n* exercise date offset.                                  *\r\n**********************************************************\r\n*/\r\nexport enum OptionExerciseEarliestDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative earliest exercise *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum OptionExerciseEarliestDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the frequency of exercise dates. *\r\n**************************************************************\r\n*/\r\nexport enum OptionExerciseFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative exercise start date *\r\n* offset.                                                    *\r\n**************************************************************\r\n*/\r\nexport enum OptionExerciseStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative option exercise start *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum OptionExerciseStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the type of date. When specified it applies not   *\r\n* only to the current date but to all subsequent dates in the *\r\n* group until overridden with a new type.                     *\r\n***************************************************************\r\n*/\r\nexport enum OptionExerciseDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* The business day convention used to adjust the option   *\r\n* exercise expiration dates. Used only to override the    *\r\n* business day convention specified in the DateAdjustment *\r\n* component within the Instrument component.              *\r\n***********************************************************\r\n*/\r\nexport enum OptionExerciseExpirationDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative exercise expiration *\r\n* date offset.                                               *\r\n**************************************************************\r\n*/\r\nexport enum OptionExerciseExpirationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Time unit associated with the frequency of exercise *\r\n* expiration dates.                                   *\r\n*******************************************************\r\n*/\r\nexport enum OptionExerciseExpirationFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of exercise      *\r\n* expiration dates. It is used in conjunction with a specified *\r\n* frequency. Used only to override the roll convention defined *\r\n* in the DateAdjustment component in Instrument.               *\r\n****************************************************************\r\n*/\r\nexport enum OptionExerciseExpirationRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative option exercise *\r\n* expiration date offset.                                *\r\n**********************************************************\r\n*/\r\nexport enum OptionExerciseExpirationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the type of option exercise expiration date. When  *\r\n* specified it applies not only to the current date but to all *\r\n* subsequent dates in the group until overridden with a new    *\r\n* type.                                                        *\r\n****************************************************************\r\n*/\r\nexport enum OptionExerciseExpirationDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Used to express the unit of measure (UOM) of the payment *\r\n* amount if not in the currency of the trade.              *\r\n************************************************************\r\n*/\r\nexport enum PaymentUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the relative payment date offset. *\r\n***************************************************************\r\n*/\r\nexport enum PaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the day type of the relative payment date offset. *\r\n***************************************************************\r\n*/\r\nexport enum PaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n*******************************\r\n* Forward start premium type. *\r\n*******************************\r\n*/\r\nexport enum PaymentForwardStartType {\r\n  Prepaid = 0,\r\n  PostPaid = 1,\r\n  Variable = 2,\r\n  Fixed = 3\r\n}\r\n\r\n/*\r\n********************************************************\r\n* The day of the week on which fixing will take place. *\r\n********************************************************\r\n*/\r\nexport enum PaymentScheduleFixingDayOfWeek {\r\n  EveryDayTheDefaultIfNotSpecified = 0,\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6,\r\n  Sunday = 7\r\n}\r\n\r\n/*\r\n********************************************\r\n* The schedule rate unit of measure (UOM). *\r\n********************************************\r\n*/\r\nexport enum PaymentScheduleRateUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is an absolute value to *\r\n* be added to the index rate or a percentage of the index    *\r\n* rate.                                                      *\r\n**************************************************************\r\n*/\r\nexport enum PaymentScheduleRateSpreadType {\r\n  Absolute = 0,\r\n  Percentage = 1\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The settlement period price unit of measure (UOM). *\r\n******************************************************\r\n*/\r\nexport enum PaymentScheduleSettlPeriodPriceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n********************************************\r\n* The schedule step unit of measure (UOM). *\r\n********************************************\r\n*/\r\nexport enum PaymentScheduleStepUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n************************************\r\n* The distribution of fixing days. *\r\n************************************\r\n*/\r\nexport enum PaymentScheduleFixingDayDistribution {\r\n  All = 0,\r\n  First = 1,\r\n  Last = 2,\r\n  Penultimate = 3\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Time unit associated with the fixing lag duration. *\r\n******************************************************\r\n*/\r\nexport enum PaymentScheduleFixingLagUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative first observation *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum PaymentScheduleFixingFirstObservationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the fixed payment amount unit of measure (UOM). *\r\n*************************************************************\r\n*/\r\nexport enum PaymentStreamFixedAmountUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Secondary time unit associated with the payment stream's *\r\n* floating rate index curve.                               *\r\n************************************************************\r\n*/\r\nexport enum PaymentStreamRateIndex2CurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The unit of measure (UOM) of the rate index level. *\r\n******************************************************\r\n*/\r\nexport enum PaymentStreamRateIndexUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies how weather index units are to be calculated. *\r\n***********************************************************\r\n*/\r\nexport enum PaymentStreamSettlLevel {\r\n  Average = 0,\r\n  Maximum = 1,\r\n  Minimum = 2,\r\n  Cumulative = 3\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* The unit of measure (UOM) of the rate reference level. *\r\n**********************************************************\r\n*/\r\nexport enum PaymentStreamReferenceLevelUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Species the unit of measure (UOM) of the floating rate *\r\n* spread.                                                *\r\n**********************************************************\r\n*/\r\nexport enum PaymentStreamRateSpreadUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is an absolute value to *\r\n* be added to the index rate or a percentage of the index    *\r\n* rate.                                                      *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamRateSpreadType {\r\n  Absolute = 0,\r\n  Percentage = 1\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Time unit associated with the calculation lag duration. *\r\n***********************************************************\r\n*/\r\nexport enum PaymentStreamCalculationLagUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative first observation *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum PaymentStreamFirstObservationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Specifies the commodity pricing day type. *\r\n*********************************************\r\n*/\r\nexport enum PaymentStreamPricingDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n*************************************\r\n* The distribution of pricing days. *\r\n*************************************\r\n*/\r\nexport enum PaymentStreamPricingDayDistribution {\r\n  All = 0,\r\n  First = 1,\r\n  Last = 2,\r\n  Penultimate = 3\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The business day convention used to adjust the payent      *\r\n* stream's pricing dates. Used only to override the business *\r\n* day convention specified in the DateAdjustment component   *\r\n* within the Instrument component.                           *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamPricingBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the type of payment date. When specified it      *\r\n* applies not only to the current date but to all subsequent *\r\n* dates in the group until overridden with a new type.       *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamPaymentDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the type of pricing date. When specified it      *\r\n* applies not only to the current date but to all subsequent *\r\n* dates in the group until overridden with a new type.       *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamPricingDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* The day of the week on which pricing takes place. *\r\n*****************************************************\r\n*/\r\nexport enum PaymentStreamPricingDayOfWeek {\r\n  EveryDayTheDefaultIfNotSpecified = 0,\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6,\r\n  Sunday = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The business day convention used to adjust pricing or fixing *\r\n* dates. Used only to override the business day convention     *\r\n* defined in the DateAdjustment component within the           *\r\n* Instrument component.                                        *\r\n****************************************************************\r\n*/\r\nexport enum PricingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the type of fixed calculation period date. When    *\r\n* specified it applies not only to the current date but to all *\r\n* subsequent dates in the group until overridden with a new    *\r\n* type.                                                        *\r\n****************************************************************\r\n*/\r\nexport enum StreamCalculationPeriodDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the length of time after the *\r\n* publication of the data when corrections can be made.  *\r\n**********************************************************\r\n*/\r\nexport enum StreamCalculationCorrectionUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Identifies the class or source of the         *\r\n* StreamCommoditySecurityIDSource(41253) value. *\r\n*************************************************\r\n*/\r\nexport enum StreamCommoditySecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* The unit of measure (UOM) of the commodity asset. *\r\n*****************************************************\r\n*/\r\nexport enum StreamCommodityUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Time unit associated with the nearby settlement day. *\r\n********************************************************\r\n*/\r\nexport enum StreamCommodityNearbySettlDayUnit {\r\n  Week = 'Wk',\r\n  Month = 'Mo'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the commodity    *\r\n* delivery date. Used only to override the business day       *\r\n* convention specified in the DateAdjustment component within *\r\n* the Instrument component.                                   *\r\n***************************************************************\r\n*/\r\nexport enum StreamCommoditySettlDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the commodity delivery date roll. *\r\n***************************************************************\r\n*/\r\nexport enum StreamCommoditySettlDateRollUnit {\r\n  Day = 'D'\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Specifies the commodity delivery roll day type. *\r\n***************************************************\r\n*/\r\nexport enum StreamCommoditySettlDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***********************************\r\n* Type of data source identifier. *\r\n***********************************\r\n*/\r\nexport enum StreamCommodityDataSourceIDType {\r\n  City4CharacterBusinessCenterCode = 0,\r\n  AirportIataStandard = 1,\r\n  WeatherStationWbanWeatherBureauArmyNavy = 2,\r\n  WeatherIndexWmoWorldMeteorologicalOrganization = 3\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Specifies the day or group of days for delivery. *\r\n****************************************************\r\n*/\r\nexport enum StreamCommoditySettlDay {\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6,\r\n  Sunday = 7,\r\n  AllWeekdays = 8,\r\n  AllDays = 9,\r\n  AllWeekends = 10\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Specifies the commodity delivery flow type. *\r\n***********************************************\r\n*/\r\nexport enum StreamCommoditySettlFlowType {\r\n  AllTimes = 0,\r\n  OnPeak = 1,\r\n  OffPeak = 2,\r\n  Base = 3,\r\n  BlockHours = 4,\r\n  Other = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the unit of measure (UOM) of the delivery quantity *\r\n* associated with this settlement period.                      *\r\n****************************************************************\r\n*/\r\nexport enum StreamCommoditySettlPeriodNotionalUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the settlement period frequency. *\r\n**************************************************************\r\n*/\r\nexport enum StreamCommoditySettlPeriodFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the settlement period price unit of measure (UOM). *\r\n****************************************************************\r\n*/\r\nexport enum StreamCommoditySettlPeriodPriceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates whether holidays are included in the settlement *\r\n* periods. Required for electricity contracts.              *\r\n*************************************************************\r\n*/\r\nexport enum StreamCommoditySettlHolidaysProcessingInstruction {\r\n  DoNotIncludeHolidays = 0,\r\n  IncludeHolidays = 1\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Time unit associated with the swap stream's notional *\r\n* frequency.                                           *\r\n********************************************************\r\n*/\r\nexport enum StreamNotionalFrequencyUnit {\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Quarter = 'Q'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The commodity's notional or quantity delivery frequency. *\r\n************************************************************\r\n*/\r\nexport enum StreamNotionalCommodityFrequency {\r\n  Term = 0,\r\n  PerBusinessDay = 1,\r\n  PerCalculationPeriod = 2,\r\n  PerSettlementPeriod = 3,\r\n  PerCalendarDay = 4,\r\n  PerHour = 5,\r\n  PerMonth = 6\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the delivery stream quantity unit of measure *\r\n* (UOM).                                                 *\r\n**********************************************************\r\n*/\r\nexport enum StreamNotionalUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the unit of measure (UOM) for the total notional *\r\n* or delivery quantity over the term of the contract.        *\r\n**************************************************************\r\n*/\r\nexport enum StreamTotalNotionalUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Identifies the source scheme of the           *\r\n* LegAdditionalTermBondSecurityID(41317) value. *\r\n*************************************************\r\n*/\r\nexport enum LegAdditionalTermBondSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the bond's payment priority in the event of a *\r\n* default.                                                *\r\n***********************************************************\r\n*/\r\nexport enum LegAdditionalTermBondSeniority {\r\n  SeniorSecured = 'SD',\r\n  Senior = 'SR',\r\n  Subordinated = 'SB'\r\n}\r\n\r\n/*\r\n******************************************\r\n* Specifies the coupon type of the bond. *\r\n******************************************\r\n*/\r\nexport enum LegAdditionalTermBondCouponType {\r\n  Zero = 0,\r\n  FixedRate = 1,\r\n  FloatingRate = 2,\r\n  Structured = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency of the bond's coupon *\r\n* payment.                                                     *\r\n****************************************************************\r\n*/\r\nexport enum LegAdditionalTermBondCouponFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The day count convention used in interest calculations for a *\r\n* bond or an interest bearing security.                        *\r\n****************************************************************\r\n*/\r\nexport enum LegAdditionalTermBondDayCount {\r\n  E11 = 0,\r\n  E3036030U360OrBondBasis = 1,\r\n  E30360Sia = 2,\r\n  E30360M = 3,\r\n  E30E360EurobondBasis = 4,\r\n  E30E360Isda = 5,\r\n  Act360 = 6,\r\n  Act365Fixed = 7,\r\n  ActActAfb = 8,\r\n  ActActIcma = 9,\r\n  ActActIcsmaUltimo = 10,\r\n  ActActIsda = 11,\r\n  Bus252 = 12,\r\n  E30E360 = 13,\r\n  Act365L = 14,\r\n  Nl365 = 15,\r\n  Nl360 = 16,\r\n  Act364 = 17\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* The type of quote used to determine the cash settlement *\r\n* price.                                                  *\r\n***********************************************************\r\n*/\r\nexport enum LegCashSettlQuoteMethod {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The ISDA defined methodology for determining the final price *\r\n* of the reference obligation for purposes of cash settlement. *\r\n****************************************************************\r\n*/\r\nexport enum LegCashSettlValuationMethod {\r\n  Market = 0,\r\n  Highest = 1,\r\n  AverageMarket = 2,\r\n  AverageHighest = 3,\r\n  BlendedMarket = 4,\r\n  BlendedHighest = 5,\r\n  AverageBlendedMarket = 6,\r\n  AverageBlendedHighest = 7\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Time unit associated with complex credit events. *\r\n****************************************************\r\n*/\r\nexport enum LegComplexEventCreditEventUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Specifies the day type for the complex credit events. *\r\n*********************************************************\r\n*/\r\nexport enum LegComplexEventCreditEventDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies a complex event qualifier. Used to further qualify *\r\n* LegComplexEventCreditEventType(41367).                       *\r\n****************************************************************\r\n*/\r\nexport enum LegComplexEventCreditEventQualifier {\r\n  RetructuringMultipleHoldingObligations = 'H',\r\n  RestructuringMultipleCreditEventNotices = 'E',\r\n  FloatingRateInterestShortfall = 'C'\r\n}\r\n\r\n/*\r\n******************************\r\n* Specifies the period type. *\r\n******************************\r\n*/\r\nexport enum LegComplexEventPeriodType {\r\n  AsianOut = 0,\r\n  AsianIn = 1,\r\n  BarrierCap = 2,\r\n  BarrierFloor = 3,\r\n  KnockOut = 4,\r\n  KnockIn = 5\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Identifies the source of rate information.              *\r\n* For FX, the reference source to be used for the FX spot *\r\n* rate.                                                   *\r\n***********************************************************\r\n*/\r\nexport enum LegComplexEventRateSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates whether the rate source specified is a primary or *\r\n* secondary source.                                           *\r\n***************************************************************\r\n*/\r\nexport enum LegComplexEventRateSourceType {\r\n  Primary = 0,\r\n  Secondary = 1\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Time unit associated with the relative date offset. *\r\n*******************************************************\r\n*/\r\nexport enum LegComplexEventDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Specifies the day type of the relative date offset. *\r\n*******************************************************\r\n*/\r\nexport enum LegComplexEventDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the event date.  *\r\n* Used only to override the business day convention specified *\r\n* in the LegDateAdjustment component within the InstrumentLeg *\r\n* component.                                                  *\r\n***************************************************************\r\n*/\r\nexport enum LegComplexEventDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the schedule date frequency. *\r\n**********************************************************\r\n*/\r\nexport enum LegComplexEventScheduleFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of dates. It is  *\r\n* used in conjunction with a specified frequency. Used only to *\r\n* override the roll convention defined in the                  *\r\n* LegDateAdjustment component in InstrumentLeg.                *\r\n****************************************************************\r\n*/\r\nexport enum LegComplexEventScheduleRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n********************************************\r\n* Specifies the type of delivery schedule. *\r\n********************************************\r\n*/\r\nexport enum LegDeliveryScheduleType {\r\n  Notional = 0,\r\n  Delivery = 1,\r\n  PhysicalSettlementPeriod = 2\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the delivery quantity unit of measure (UOM). *\r\n**********************************************************\r\n*/\r\nexport enum LegDeliveryScheduleNotionalUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***************************************\r\n* The frequency of notional delivery. *\r\n***************************************\r\n*/\r\nexport enum LegDeliveryScheduleNotionalCommodityFrequency {\r\n  Term = 0,\r\n  PerBusinessDay = 1,\r\n  PerCalculationPeriod = 2,\r\n  PerSettlementPeriod = 3,\r\n  PerCalendarDay = 4,\r\n  PerHour = 5,\r\n  PerMonth = 6\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the tolerance value's unit of measure (UOM). *\r\n**********************************************************\r\n*/\r\nexport enum LegDeliveryScheduleToleranceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***************************************\r\n* Specifies the tolerance value type. *\r\n***************************************\r\n*/\r\nexport enum LegDeliveryScheduleToleranceType {\r\n  Absolute = 0,\r\n  Percentage = 1\r\n}\r\n\r\n/*\r\n*************************************\r\n* Specifies the delivery flow type. *\r\n*************************************\r\n*/\r\nexport enum LegDeliveryScheduleSettlFlowType {\r\n  AllTimes = 0,\r\n  OnPeak = 1,\r\n  OffPeak = 2,\r\n  Base = 3,\r\n  BlockHours = 4,\r\n  Other = 5\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates whether holidays are included in the settlement *\r\n* periods. Required for electricity contracts.              *\r\n*************************************************************\r\n*/\r\nexport enum LegDeliveryScheduleSettlHolidaysProcessingInstruction {\r\n  DoNotIncludeHolidays = 0,\r\n  IncludeHolidays = 1\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Specifies the day or group of days for delivery. *\r\n****************************************************\r\n*/\r\nexport enum LegDeliveryScheduleSettlDay {\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6,\r\n  Sunday = 7,\r\n  AllWeekdays = 8,\r\n  AllDays = 9,\r\n  AllWeekends = 10\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the format of the delivery start and end time *\r\n* values.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum LegDeliveryScheduleSettlTimeType {\r\n  HourOfTheDay = 0,\r\n  HhMmTimeFormat = 1\r\n}\r\n\r\n/*\r\n******************************************\r\n* Specifies the type of delivery stream. *\r\n******************************************\r\n*/\r\nexport enum LegDeliveryStreamType {\r\n  PeriodicDefaultIfNotSpecified = 0,\r\n  Initial = 1,\r\n  Single = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies under what conditions the buyer and seller should *\r\n* be excused of their delivery obligations.                   *\r\n***************************************************************\r\n*/\r\nexport enum LegDeliveryStreamDeliveryRestriction {\r\n  Firm = 1,\r\n  InterruptableOrNonFirm = 2,\r\n  ForceMajeure = 3,\r\n  SystemFirm = 4,\r\n  UnitFirm = 5\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* The trade side value of the party responsible for *\r\n* electricity delivery contingency.                 *\r\n*****************************************************\r\n*/\r\nexport enum LegDeliveryStreamDeliveryContingentPartySide {\r\n  Buyer = 0,\r\n  Seller = 1\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Specifies the condition of title transfer. *\r\n**********************************************\r\n*/\r\nexport enum LegDeliveryStreamTitleTransferCondition {\r\n  TransfersWithRiskOfLoss = 0,\r\n  DoesNotTransferWithRiskOfLoss = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the tolerance value's unit of measure (UOM). *\r\n**********************************************************\r\n*/\r\nexport enum LegDeliveryStreamToleranceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***************************************\r\n* Specifies the tolerance value type. *\r\n***************************************\r\n*/\r\nexport enum LegDeliveryStreamToleranceType {\r\n  Absolute = 0,\r\n  Percentage = 1\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Indicates whether the tolerance is at the seller's or *\r\n* buyer's option.                                       *\r\n*********************************************************\r\n*/\r\nexport enum LegDeliveryStreamToleranceOptionSide {\r\n  Buyer = 1,\r\n  Seller = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* A reference to the party able to choose whether the gas is *\r\n* delivered for a particular period e.g. a swing or          *\r\n* interruptible contract.                                    *\r\n**************************************************************\r\n*/\r\nexport enum LegDeliveryStreamElectingPartySide {\r\n  Buyer = 0,\r\n  Seller = 1\r\n}\r\n\r\n/*\r\n*************************************************\r\n* The consequences of market disruption events. *\r\n*************************************************\r\n*/\r\nexport enum LegMarketDisruptionProvision {\r\n  NotApplicable = 0,\r\n  Applicable = 1,\r\n  AsSpecifiedInMasterAgreement = 2,\r\n  AsSpecifiedInConfirmation = 3\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Specifies the location of the fallback provision *\r\n* documentation.                                   *\r\n****************************************************\r\n*/\r\nexport enum LegMarketDisruptionFallbackProvision {\r\n  AsSpecifiedInMasterAgreement = 0,\r\n  AsSpecifiedInConfirmation = 1\r\n}\r\n\r\n/*\r\n******************************************\r\n* The type of reference price underlier. *\r\n******************************************\r\n*/\r\nexport enum LegMarketDisruptionFallbackUnderlierType {\r\n  Basket = 0,\r\n  Bond = 1,\r\n  Cash = 2,\r\n  Commodity = 3,\r\n  ConvertibleBond = 4,\r\n  Equity = 5,\r\n  ExchangeTradedFund = 6,\r\n  Future = 7,\r\n  Index = 8,\r\n  Loan = 9,\r\n  Mortgage = 10,\r\n  MutualFund = 11\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the class or source scheme of the security *\r\n* identifier.                                          *\r\n********************************************************\r\n*/\r\nexport enum LegMarketDisruptionFallbackUnderlierSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Indicates whether follow-up confirmation of exercise     *\r\n* (written or electronic) is required following telephonic *\r\n* notice by the buyer to the seller or seller's agent.     *\r\n************************************************************\r\n*/\r\nexport enum LegExerciseConfirmationMethod {\r\n  NotRequired = 0,\r\n  NonElectronic = 1,\r\n  Electronic = 2,\r\n  UnknownAtTimeOfReport = 3\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* The business day convention used to adjust the option   *\r\n* exercise dates. Used only to override the business day  *\r\n* convention specified in the LegDateAdjustment component *\r\n* within the InstrumentLeg component.                     *\r\n***********************************************************\r\n*/\r\nexport enum LegOptionExerciseBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the day type of the relative earliest exercise *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum LegOptionExerciseEarliestDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative earliest exercise *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum LegOptionExerciseEarliestDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the frequency of exercise dates. *\r\n**************************************************************\r\n*/\r\nexport enum LegOptionExerciseFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative exercise start date *\r\n* offset.                                                    *\r\n**************************************************************\r\n*/\r\nexport enum LegOptionExerciseStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative option exercise start *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum LegOptionExerciseStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the type of option exercise date. When specified *\r\n* it applies not only to the current date but to all         *\r\n* subsequent dates in the group until overridden with a new  *\r\n* type.                                                      *\r\n**************************************************************\r\n*/\r\nexport enum LegOptionExerciseDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The business day convention used to adjust the option      *\r\n* exercise expiration dates. Used only to override the       *\r\n* business day convention specified in the LegDateAdjustment *\r\n* component within the InstrumentLeg component.              *\r\n**************************************************************\r\n*/\r\nexport enum LegOptionExerciseExpirationDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative exercise expiration *\r\n* date offset.                                               *\r\n**************************************************************\r\n*/\r\nexport enum LegOptionExerciseExpirationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Time unit associated with the frequency of exercise *\r\n* expiration dates.                                   *\r\n*******************************************************\r\n*/\r\nexport enum LegOptionExerciseExpirationFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of exercise      *\r\n* expiration dates. It is used in conjunction with a specified *\r\n* frequency. Used only to override the roll convention defined *\r\n* in the LegDateAdjustment component in InstrumentLeg.         *\r\n****************************************************************\r\n*/\r\nexport enum LegOptionExerciseExpirationRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative option exercise *\r\n* expiration date offset.                                *\r\n**********************************************************\r\n*/\r\nexport enum LegOptionExerciseExpirationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the type of option exercise expiration date. When  *\r\n* specified it applies not only to the current date but to all *\r\n* subsequent dates in the group until overridden with a new    *\r\n* type.                                                        *\r\n****************************************************************\r\n*/\r\nexport enum LegOptionExerciseExpirationDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n****************************************************\r\n* The day of the week on which fixing takes place. *\r\n****************************************************\r\n*/\r\nexport enum LegPaymentScheduleFixingDayOfWeek {\r\n  EveryDayTheDefaultIfNotSpecified = 0,\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6,\r\n  Sunday = 7\r\n}\r\n\r\n/*\r\n********************************************\r\n* The schedule rate unit of measure (UOM). *\r\n********************************************\r\n*/\r\nexport enum LegPaymentScheduleRateUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is an absolute value to *\r\n* be added to the index rate or a percentage of the index    *\r\n* rate.                                                      *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentScheduleRateSpreadType {\r\n  Absolute = 0,\r\n  Percentage = 1\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The settlement period price unit of measure (UOM). *\r\n******************************************************\r\n*/\r\nexport enum LegPaymentScheduleSettlPeriodPriceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n********************************************\r\n* The schedule step unit of measure (UOM). *\r\n********************************************\r\n*/\r\nexport enum LegPaymentScheduleStepUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n************************************\r\n* The distribution of fixing days. *\r\n************************************\r\n*/\r\nexport enum LegPaymentScheduleFixingDayDistribution {\r\n  All = 0,\r\n  First = 1,\r\n  Last = 2,\r\n  Penultimate = 3\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Time unit associated with the fixing lag duration. *\r\n******************************************************\r\n*/\r\nexport enum LegPaymentScheduleFixingLagUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative first observation *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum LegPaymentScheduleFixingFirstObservationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************\r\n* The fixed payment amount unit of measure (UOM). *\r\n***************************************************\r\n*/\r\nexport enum LegPaymentStreamFixedAmountUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Secondary time unit associated with the payment stream's *\r\n* floating rate index curve.                               *\r\n************************************************************\r\n*/\r\nexport enum LegPaymentStreamRateIndex2CurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The unit of measure (UOM) of the rate index level. *\r\n******************************************************\r\n*/\r\nexport enum LegPaymentStreamRateIndexUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies how weather index units are to be calculated. *\r\n***********************************************************\r\n*/\r\nexport enum LegPaymentStreamSettlLevel {\r\n  Average = 0,\r\n  Maximum = 1,\r\n  Minimum = 2,\r\n  Cumulative = 3\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* The unit of measure (UOM) of the rate reference level. *\r\n**********************************************************\r\n*/\r\nexport enum LegPaymentStreamReferenceLevelUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the unit of measure (UOM) of the floating rate *\r\n* spread.                                                  *\r\n************************************************************\r\n*/\r\nexport enum LegPaymentStreamRateSpreadUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is an absolute value to *\r\n* be added to the index rate or a percentage of the index    *\r\n* rate.                                                      *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamRateSpreadType {\r\n  Absolute = 0,\r\n  Percentage = 1\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Time unit associated with the calculation lag duration. *\r\n***********************************************************\r\n*/\r\nexport enum LegPaymentStreamCalculationLagUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative first observation *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum LegPaymentStreamFirstObservationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Specifies the commodity pricing day type. *\r\n*********************************************\r\n*/\r\nexport enum LegPaymentStreamPricingDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n*************************************\r\n* The distribution of pricing days. *\r\n*************************************\r\n*/\r\nexport enum LegPaymentStreamPricingDayDistribution {\r\n  All = 0,\r\n  First = 1,\r\n  Last = 2,\r\n  Penultimate = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the payment      *\r\n* stream's pricing dates. Used only to override the business  *\r\n* day convention specified in the LegDateAdjustment component *\r\n* within the InstrumentLeg component.                         *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentStreamPricingBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the format of the commodities settlement start and *\r\n* end times.                                                   *\r\n****************************************************************\r\n*/\r\nexport enum StreamCommoditySettlTimeType {\r\n  HourOfTheDay = 0,\r\n  HhMmTimeFormat = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the type of payment date. When specified it      *\r\n* applies not only to the current date but to all subsequent *\r\n* dates in the group until overridden with a new type.       *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamPaymentDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the type of pricing date. When specified it      *\r\n* applies not only to the current date but to all subsequent *\r\n* dates in the group until overridden with a new type.       *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamPricingDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The day of the week on which pricing takes place.. *\r\n******************************************************\r\n*/\r\nexport enum LegPaymentStreamPricingDayOfWeek {\r\n  EveryDayTheDefaultIfNotSpecified = 0,\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6,\r\n  Sunday = 7\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The business day convention used to adjust the pricing or *\r\n* fixing date. Used only to override the business day       *\r\n* convention specified in the LegDateAdjustment component   *\r\n* within the InstrumentLeg component.                       *\r\n*************************************************************\r\n*/\r\nexport enum LegPricingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Time unit associated with protection term events. *\r\n*****************************************************\r\n*/\r\nexport enum LegProtectionTermEventUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Specifies the day type for protection term events. *\r\n******************************************************\r\n*/\r\nexport enum LegProtectionTermEventDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the protection term event qualifier. Used to *\r\n* further qualify LegProtectionTermEventType(41626).     *\r\n**********************************************************\r\n*/\r\nexport enum LegProtectionTermEventQualifier {\r\n  RetructuringMultipleHoldingObligations = 'H',\r\n  RestructuringMultipleCreditEventNotices = 'E',\r\n  FloatingRateInterestShortfall = 'C'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the type of fixed calculation period date. When    *\r\n* specified it applies not only to the current date but to all *\r\n* subsequent dates in the group until overridden with a new    *\r\n* type.                                                        *\r\n****************************************************************\r\n*/\r\nexport enum LegStreamCalculationPeriodDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the length of time after the *\r\n* publication of the data when corrections can be made.  *\r\n**********************************************************\r\n*/\r\nexport enum LegStreamCalculationCorrectionUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Identifies the class or source of the            *\r\n* LegStreamCommoditySecurityIDSource(41650) value. *\r\n****************************************************\r\n*/\r\nexport enum LegStreamCommoditySecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* The unit of measure (UOM) of the commodity asset. *\r\n*****************************************************\r\n*/\r\nexport enum LegStreamCommodityUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Time unit associated with the nearby settlement day. *\r\n********************************************************\r\n*/\r\nexport enum LegStreamCommodityNearbySettlDayUnit {\r\n  Week = 'Wk',\r\n  Month = 'Mo'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The business day convention used to adjust the commodity *\r\n* delivery date. Used only to override the business day    *\r\n* convention specified in the LegDateAdjustment component  *\r\n* within the InstrumentLeg component.                      *\r\n************************************************************\r\n*/\r\nexport enum LegStreamCommoditySettlDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the commodity delivery date roll. *\r\n***************************************************************\r\n*/\r\nexport enum LegStreamCommoditySettlDateRollUnit {\r\n  Day = 'D'\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Specifies the commodity delivery roll day type. *\r\n***************************************************\r\n*/\r\nexport enum LegStreamCommoditySettlDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Specifies the type of data source identifier. *\r\n*************************************************\r\n*/\r\nexport enum LegStreamCommodityDataSourceIDType {\r\n  City4CharacterBusinessCenterCode = 0,\r\n  AirportIataStandard = 1,\r\n  WeatherStationWbanWeatherBureauArmyNavy = 2,\r\n  WeatherIndexWmoWorldMeteorologicalOrganization = 3\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Specifies the day or group of days for delivery. *\r\n****************************************************\r\n*/\r\nexport enum LegStreamCommoditySettlDay {\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6,\r\n  Sunday = 7,\r\n  AllWeekdays = 8,\r\n  AllDays = 9,\r\n  AllWeekends = 10\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Specifies the commodity delivery flow type. *\r\n***********************************************\r\n*/\r\nexport enum LegStreamCommoditySettlFlowType {\r\n  AllTimes = 0,\r\n  OnPeak = 1,\r\n  OffPeak = 2,\r\n  Base = 3,\r\n  BlockHours = 4,\r\n  Other = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the unit of measure (UOM) of the delivery quantity *\r\n* associated with this settlement period.                      *\r\n****************************************************************\r\n*/\r\nexport enum LegStreamCommoditySettlPeriodNotionalUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the settlement period frequency. *\r\n**************************************************************\r\n*/\r\nexport enum LegStreamCommoditySettlPeriodFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The settlement period price unit of measure (UOM). *\r\n******************************************************\r\n*/\r\nexport enum LegStreamCommoditySettlPeriodPriceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates whether holidays are included in the settlement *\r\n* periods. Required for electricity contracts.              *\r\n*************************************************************\r\n*/\r\nexport enum LegStreamCommoditySettlHolidaysProcessingInstruction {\r\n  DoNotIncludeHolidays = 0,\r\n  IncludeHolidays = 1\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Identifies the source scheme of the                  *\r\n* UnderlyingAdditionalTermBondSecurityID(41341) value. *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingAdditionalTermBondSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Time unit associated with the swap stream's notional *\r\n* frequency.                                           *\r\n********************************************************\r\n*/\r\nexport enum LegStreamNotionalFrequencyUnit {\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Quarter = 'Q'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The commodity's notional or quantity delivery frequency. *\r\n************************************************************\r\n*/\r\nexport enum LegStreamNotionalCommodityFrequency {\r\n  Term = 0,\r\n  PerBusinessDay = 1,\r\n  PerCalculationPeriod = 2,\r\n  PerSettlementPeriod = 3,\r\n  PerCalendarDay = 4,\r\n  PerHour = 5,\r\n  PerMonth = 6\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the delivery quantity unit of measure (UOM). *\r\n**********************************************************\r\n*/\r\nexport enum LegStreamNotionalUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the unit of measure (UOM) for the total notional *\r\n* or delivery quantity over the term of the contract.        *\r\n**************************************************************\r\n*/\r\nexport enum LegStreamTotalNotionalUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Time unit associated with complex credit events. *\r\n****************************************************\r\n*/\r\nexport enum UnderlyingComplexEventCreditEventUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Specifies the day type for the complex credit events. *\r\n*********************************************************\r\n*/\r\nexport enum UnderlyingComplexEventCreditEventDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies a complex event qualifier. Used to further qualify *\r\n* UnderlyingComplexEventCreditEventType(41717).                *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingComplexEventCreditEventQualifier {\r\n  RetructuringMultipleHoldingObligations = 'H',\r\n  RestructuringMultipleCreditEventNotices = 'E',\r\n  FloatingRateInterestShortfall = 'C'\r\n}\r\n\r\n/*\r\n******************************\r\n* Specifies the period type. *\r\n******************************\r\n*/\r\nexport enum UnderlyingComplexEventPeriodType {\r\n  AsianOut = 0,\r\n  AsianIn = 1,\r\n  BarrierCap = 2,\r\n  BarrierFloor = 3,\r\n  KnockOut = 4,\r\n  KnockIn = 5\r\n}\r\n\r\n/*\r\n**********************************************\r\n* Identifies the source of rate information. *\r\n**********************************************\r\n*/\r\nexport enum UnderlyingComplexEventRateSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Indicates whether the rate source specified is a primary or *\r\n* secondary source.                                           *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingComplexEventRateSourceType {\r\n  Primary = 0,\r\n  Secondary = 1\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Time unit associated with the relative date offset. *\r\n*******************************************************\r\n*/\r\nexport enum UnderlyingComplexEventDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Specifies the day type of the relative date offset. *\r\n*******************************************************\r\n*/\r\nexport enum UnderlyingComplexEventDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the event date.  *\r\n* Used only to override the business day convention specified *\r\n* in the UnderlyingDateAdjustment component within the        *\r\n* UnderlyingInstrument component.                             *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingComplexEventDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the schedule date frequency. *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingComplexEventScheduleFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of dates. It is  *\r\n* used in conjunction with a specified frequency. Used only to *\r\n* override the roll convention defined in the                  *\r\n* UnderlyingDateAdjustment component in UnderlyingInstrument.  *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingComplexEventScheduleRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n********************************************\r\n* Specifies the type of delivery schedule. *\r\n********************************************\r\n*/\r\nexport enum UnderlyingDeliveryScheduleType {\r\n  Notional = 0,\r\n  Delivery = 1,\r\n  PhysicalSettlementPeriod = 2\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the delivery quantity unit of measure (UOM). *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingDeliveryScheduleNotionalUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***************************************\r\n* The frequency of notional delivery. *\r\n***************************************\r\n*/\r\nexport enum UnderlyingDeliveryScheduleNotionalCommodityFrequency {\r\n  Term = 0,\r\n  PerBusinessDay = 1,\r\n  PerCalculationPeriod = 2,\r\n  PerSettlementPeriod = 3,\r\n  PerCalendarDay = 4,\r\n  PerHour = 5,\r\n  PerMonth = 6\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the tolerance value's unit of measure (UOM). *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingDeliveryScheduleToleranceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***************************************\r\n* Specifies the tolerance value type. *\r\n***************************************\r\n*/\r\nexport enum UnderlyingDeliveryScheduleToleranceType {\r\n  Absolute = 0,\r\n  Percentage = 1\r\n}\r\n\r\n/*\r\n*************************************\r\n* Specifies the delivery flow type. *\r\n*************************************\r\n*/\r\nexport enum UnderlyingDeliveryScheduleSettlFlowType {\r\n  AllTimes = 0,\r\n  OnPeak = 1,\r\n  OffPeak = 2,\r\n  Base = 3,\r\n  BlockHours = 4,\r\n  Other = 5\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates whether holidays are included in the settlement *\r\n* periods. Required for electricity contracts.              *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction {\r\n  DoNotIncludeHolidays = 0,\r\n  IncludeHolidays = 1\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Specifies the day or group of days for delivery. *\r\n****************************************************\r\n*/\r\nexport enum UnderlyingDeliveryScheduleSettlDay {\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6,\r\n  Sunday = 7,\r\n  AllWeekdays = 8,\r\n  AllDays = 9,\r\n  AllWeekends = 10\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the format of the delivery start and end time *\r\n* values.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingDeliveryScheduleSettlTimeType {\r\n  HourOfTheDay = 0,\r\n  HhMmTimeFormat = 1\r\n}\r\n\r\n/*\r\n******************************************\r\n* Specifies the type of delivery stream. *\r\n******************************************\r\n*/\r\nexport enum UnderlyingDeliveryStreamType {\r\n  PeriodicDefaultIfNotSpecified = 0,\r\n  Initial = 1,\r\n  Single = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies under what conditions the buyer and seller should *\r\n* be excused of their delivery obligations.                   *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingDeliveryStreamDeliveryRestriction {\r\n  Firm = 1,\r\n  InterruptableOrNonFirm = 2,\r\n  ForceMajeure = 3,\r\n  SystemFirm = 4,\r\n  UnitFirm = 5\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* The trade side value of the party responsible for *\r\n* electricity delivery contingency.                 *\r\n*****************************************************\r\n*/\r\nexport enum UnderlyingDeliveryStreamDeliveryContingentPartySide {\r\n  Buyer = 0,\r\n  Seller = 1\r\n}\r\n\r\n/*\r\n*******************************************\r\n* Specifies the title transfer condition. *\r\n*******************************************\r\n*/\r\nexport enum UnderlyingDeliveryStreamTitleTransferCondition {\r\n  TransfersWithRiskOfLoss = 0,\r\n  DoesNotTransferWithRiskOfLoss = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the tolerance value's unit of measure (UOM). *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingDeliveryStreamToleranceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***************************************\r\n* Specifies the tolerance value type. *\r\n***************************************\r\n*/\r\nexport enum UnderlyingDeliveryStreamToleranceType {\r\n  Absolute = 0,\r\n  Percentage = 1\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Indicates whether the tolerance is at the seller's or *\r\n* buyer's option.                                       *\r\n*********************************************************\r\n*/\r\nexport enum UnderlyingDeliveryStreamToleranceOptionSide {\r\n  Buyer = 1,\r\n  Seller = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* A reference to the party able to choose whether the gas is *\r\n* delivered for a particular period e.g. a swing or          *\r\n* interruptible contract.                                    *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingDeliveryStreamElectingPartySide {\r\n  Buyer = 0,\r\n  Seller = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Indicates whether follow-up confirmation of exercise     *\r\n* (written or electronic) is required following telephonic *\r\n* notice by the buyer to the seller or seller's agent.     *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingExerciseConfirmationMethod {\r\n  NotRequired = 0,\r\n  NonElectronic = 1,\r\n  Electronic = 2,\r\n  UnknownAtTimeOfReport = 3\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* The business day convention used to adjust the option  *\r\n* exercise dates. Used only to override the business day *\r\n* convention specified in the UnderlyingDateAdjustment   *\r\n* component within the UnderlyingInstrument component.   *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingOptionExerciseBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the day type of the relative earliest exercise *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingOptionExerciseEarliestDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative earliest exercise *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingOptionExerciseEarliestDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the frequency of exercise dates. *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingOptionExerciseFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative exercise start date *\r\n* offset.                                                    *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingOptionExerciseStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative option exercise start *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingOptionExerciseStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the type of option exercise date. When specified *\r\n* it applies not only to the current date but to all         *\r\n* subsequent dates in the group until overridden with a new  *\r\n* type.                                                      *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingOptionExerciseDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* The business day convention used to adjust the option *\r\n* exercise expiration dates. Used only to override the  *\r\n* business day convention specified in the              *\r\n* UnderlyingDateAdjustment component within the         *\r\n* UnderlyingInstrument component.                       *\r\n*********************************************************\r\n*/\r\nexport enum UnderlyingOptionExerciseExpirationDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative exercise expiration *\r\n* date offset.                                               *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingOptionExerciseExpirationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Time unit associated with the frequency of exercise *\r\n* expiration dates.                                   *\r\n*******************************************************\r\n*/\r\nexport enum UnderlyingOptionExerciseExpirationFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of exercise      *\r\n* expiration dates. It is used in conjunction with a specified *\r\n* frequency. Used only to override the roll convention defined *\r\n* in the UnderlyingDateAdjustment component in                 *\r\n* UnderlyingInstrument.                                        *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingOptionExerciseExpirationRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative option exercise *\r\n* expiration date offset.                                *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingOptionExerciseExpirationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the type of option exercise expiration date. When  *\r\n* specified it applies not only to the current date but to all *\r\n* subsequent dates in the group until overridden with a new    *\r\n* type.                                                        *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingOptionExerciseExpirationDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n*************************************************\r\n* The consequences of market disruption events. *\r\n*************************************************\r\n*/\r\nexport enum UnderlyingMarketDisruptionProvision {\r\n  NotApplicable = 0,\r\n  Applicable = 1,\r\n  AsSpecifiedInMasterAgreement = 2,\r\n  AsSpecifiedInConfirmation = 3\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Specifies the location of the fallback provision *\r\n* documentation.                                   *\r\n****************************************************\r\n*/\r\nexport enum UnderlyingMarketDisruptionFallbackProvision {\r\n  AsSpecifiedInMasterAgreement = 0,\r\n  AsSpecifiedInConfirmation = 1\r\n}\r\n\r\n/*\r\n******************************************\r\n* The type of reference price underlier. *\r\n******************************************\r\n*/\r\nexport enum UnderlyingMarketDisruptionFallbackUnderlierType {\r\n  Basket = 0,\r\n  Bond = 1,\r\n  Cash = 2,\r\n  Commodity = 3,\r\n  ConvertibleBond = 4,\r\n  Equity = 5,\r\n  ExchangeTradedFund = 6,\r\n  Future = 7,\r\n  Index = 8,\r\n  Loan = 9,\r\n  Mortgage = 10,\r\n  MutualFund = 11\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the class or source scheme of the security *\r\n* identifier.                                          *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n****************************************************\r\n* The day of the week on which fixing takes place. *\r\n****************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleFixingDayOfWeek {\r\n  EveryDayTheDefaultIfNotSpecified = 0,\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6,\r\n  Sunday = 7\r\n}\r\n\r\n/*\r\n********************************************\r\n* The schedule rate unit of measure (UOM). *\r\n********************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleRateUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies whether the rate spread is an absolute value to be *\r\n* added to the index rate or a percentage of the index rate.   *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleRateSpreadType {\r\n  Absolute = 0,\r\n  Percentage = 1\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The settlement period price unit of measure (UOM). *\r\n******************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n********************************************\r\n* The schedule step unit of measure (UOM). *\r\n********************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleStepUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n************************************\r\n* The distribution of fixing days. *\r\n************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleFixingDayDistribution {\r\n  All = 0,\r\n  First = 1,\r\n  Last = 2,\r\n  Penultimate = 3\r\n}\r\n\r\n/*\r\n******************************************************\r\n* Time unit associated with the fixing lag duration. *\r\n******************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleFixingLagUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative first observation *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Fixed payment amount unit of measure (UOM). *\r\n***********************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamFixedAmountUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Secondary time unit associated with the payment stream\u0019s *\r\n* floating rate index curve.                               *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamRateIndex2CurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The unit of measure (UOM) of the rate index level. *\r\n******************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamRateIndexUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies how weather index units are to be calculated. *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamSettlLevel {\r\n  Average = 0,\r\n  Maximum = 1,\r\n  Minimum = 2,\r\n  Cumulative = 3\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* The unit of measure (UOM) of the rate reference level. *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamReferenceLevelUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the unit of measure (UOM) of the floating rate *\r\n* spread.                                                  *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamRateSpreadUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is an absolute value to *\r\n* be added to the index rate or a percentage of the index    *\r\n* rate.                                                      *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamRateSpreadType {\r\n  Absolute = 0,\r\n  Percentage = 1\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Time unit associated with the calculation lag duration. *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCalculationLagUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative first observation *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamFirstObservationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*********************************************\r\n* Specifies the commodity pricing day type. *\r\n*********************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamPricingDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n*************************************\r\n* The distribution of pricing days. *\r\n*************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamPricingDayDistribution {\r\n  All = 0,\r\n  First = 1,\r\n  Last = 2,\r\n  Penultimate = 3\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The business day convention used to adjust the payment     *\r\n* stream's pricing dates. Used only to override the business *\r\n* day convention specified in the UnderlyingDateAdjustment   *\r\n* component within the UnderlyingInstrument component.       *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamPricingBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the format of the commodity settlement start and *\r\n* end times.                                                 *\r\n**************************************************************\r\n*/\r\nexport enum LegStreamCommoditySettlTimeType {\r\n  HourOfTheDay = 0,\r\n  HhMmTimeFormat = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the format of the commodity settlement start and *\r\n* end times.                                                 *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingStreamCommoditySettlTimeType {\r\n  HourOfTheDay = 0,\r\n  HhMmTimeFormat = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the type of payment date. When specified it      *\r\n* applies not only to the current date but to all subsequent *\r\n* dates in the group until overridden with a new type.       *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamPaymentDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the type of pricing date. When specified it      *\r\n* applies not only to the current date but to all subsequent *\r\n* dates in the group until overridden with a new type.       *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamPricingDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* The day of the week on which pricing takes place. *\r\n*****************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamPricingDayOfWeek {\r\n  EveryDayTheDefaultIfNotSpecified = 0,\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6,\r\n  Sunday = 7\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The business day convention used to adjust the pricing or *\r\n* fixing date. Used only to override the business day       *\r\n* convention specified in the UnderlyingDateAdjustment      *\r\n* component within the UnderlyingInstrument component.      *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingPricingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the type of fixed calculation period date. When    *\r\n* specified it applies not only to the current date but to all *\r\n* subsequent dates in the group until overridden with a new    *\r\n* type.                                                        *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingStreamCalculationPeriodDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the length of time after the *\r\n* publication of the data when corrections can be made.  *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingStreamCalculationCorrectionUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Identifies the class or source of the                   *\r\n* UnderlyingStreamCommoditySecurityIDSource(41966) value. *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingStreamCommoditySecurityIDSource {\r\n  Cusip = '1',\r\n  Sedol = '2',\r\n  Quik = '3',\r\n  IsinNumber = '4',\r\n  RicCode = '5',\r\n  IsoCurrencyCode = '6',\r\n  IsoCountryCode = '7',\r\n  ExchangeSymbol = '8',\r\n  ConsolidatedTapeAssociationCtaSymbolSiacCtsCqsLineFormat = '9',\r\n  BloombergSymbol = 'A',\r\n  Wertpapier = 'B',\r\n  Dutch = 'C',\r\n  Valoren = 'D',\r\n  Sicovam = 'E',\r\n  Belgian = 'F',\r\n  CommonClearstreamAndEuroclear = 'G',\r\n  ClearingHouseClearingOrganization = 'H',\r\n  IsdaFpMlProductSpecificationXmlInSecurityXml1185 = 'I',\r\n  OptionPriceReportingAuthority = 'J',\r\n  IsdaFpMlProductUrlUrlInSecurityId48 = 'K',\r\n  LetterOfCredit = 'L',\r\n  MarketplaceAssignedIdentifier = 'M',\r\n  MarkitRedEntityClip = 'N',\r\n  MarkitRedPairClip = 'P',\r\n  CftcCommodityCode = 'Q',\r\n  IsdaCommodityReferencePrice = 'R',\r\n  FinancialInstrumentGlobalIdentifier = 'S',\r\n  LegalEntityIdentifier = 'T',\r\n  Synthetic = 'U',\r\n  FidessaInstrumentMnemonicFim = 'V'\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* The unit of measure (UOM) of the commodity asset. *\r\n*****************************************************\r\n*/\r\nexport enum UnderlyingStreamCommodityUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Time unit associated with the nearby settlement day. *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingStreamCommodityNearbySettlDayUnit {\r\n  Week = 'Wk',\r\n  Month = 'Mo'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The business day convention used to adjust the commodity *\r\n* delivery date. Used only to override the business day    *\r\n* convention specified in the UnderlyingDateAdjustment     *\r\n* component within the UnderlyingInstrument component.     *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingStreamCommoditySettlDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the commodity delivery date roll. *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingStreamCommoditySettlDateRollUnit {\r\n  Day = 'D'\r\n}\r\n\r\n/*\r\n***************************************************\r\n* Specifies the commodity delivery roll day type. *\r\n***************************************************\r\n*/\r\nexport enum UnderlyingStreamCommoditySettlDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Specifies the type of data source identifier. *\r\n*************************************************\r\n*/\r\nexport enum UnderlyingStreamCommodityDataSourceIDType {\r\n  City4CharacterBusinessCenterCode = 0,\r\n  AirportIataStandard = 1,\r\n  WeatherStationWbanWeatherBureauArmyNavy = 2,\r\n  WeatherIndexWmoWorldMeteorologicalOrganization = 3\r\n}\r\n\r\n/*\r\n****************************************************\r\n* Specifies the day or group of days for delivery. *\r\n****************************************************\r\n*/\r\nexport enum UnderlyingStreamCommoditySettlDay {\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6,\r\n  Sunday = 7,\r\n  AllWeekdays = 8,\r\n  AllDays = 9,\r\n  AllWeekends = 10\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Specifies the commodity delivery flow type. *\r\n***********************************************\r\n*/\r\nexport enum UnderlyingStreamCommoditySettlFlowType {\r\n  AllTimes = 0,\r\n  OnPeak = 1,\r\n  OffPeak = 2,\r\n  Base = 3,\r\n  BlockHours = 4,\r\n  Other = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the unit of measure (UOM) of the delivery quantity *\r\n* associated with this settlement period.                      *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the settlement period frequency. *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingStreamCommoditySettlPeriodFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the settlement period price unit of measure (UOM). *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates whether holidays are included in the settlement *\r\n* periods. Required for electricity contracts.              *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingStreamCommoditySettlHolidaysProcessingInstruction {\r\n  DoNotIncludeHolidays = 0,\r\n  IncludeHolidays = 1\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Time unit associated with the swap stream's notional *\r\n* frequency.                                           *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingStreamNotionalFrequencyUnit {\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Quarter = 'Q'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The commodity's notional or quantity delivery frequency. *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingStreamNotionalCommodityFrequency {\r\n  Term = 0,\r\n  PerBusinessDay = 1,\r\n  PerCalculationPeriod = 2,\r\n  PerSettlementPeriod = 3,\r\n  PerCalendarDay = 4,\r\n  PerHour = 5,\r\n  PerMonth = 6\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the delivery quantity unit of measure (UOM). *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingStreamNotionalUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the unit of measure (UOM) for the total notional *\r\n* or delivery quantity over the term of the contract.        *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingStreamTotalNotionalUnitOfMeasure {\r\n  BillionCubicFeet = 'Bcf',\r\n  Allowances = 'Alw',\r\n  Barrels = 'Bbl',\r\n  CubicMeters = 'CBM',\r\n  BoardFeet = 'BDFT',\r\n  Gigajoules = 'GJ',\r\n  Bushels = 'Bu',\r\n  KilowattHours = 'kWh',\r\n  OneMillionBtu = 'MMBtu',\r\n  AmountOfCurrency = 'Ccy',\r\n  MegawattHours = 'MWh',\r\n  CoolingDegreeDay = 'CDD',\r\n  CertifiedEmissionsReduction = 'CER',\r\n  Therms = 'thm',\r\n  CriticalPrecipitationDay = 'CPD',\r\n  ClimateReserveTonnes = 'CRT',\r\n  HundredweightUs = 'cwt',\r\n  Days = 'day',\r\n  DryMetricTons = 'dt',\r\n  EnvironmentalAllowanceCertificates = 'EnvAllwnc',\r\n  EnvironmentalCredit = 'EnvCrd',\r\n  EnvironmentalOffset = 'EnvOfst',\r\n  Grams = 'g',\r\n  Gallons = 'Gal',\r\n  GrossTons = 'GT',\r\n  HeatingDegreeDay = 'HDD',\r\n  IndexPoint = 'IPNT',\r\n  Kilograms = 'kg',\r\n  Kiloliters = 'kL',\r\n  KilowattYear = 'kW-a',\r\n  KilowattDay = 'kW-d',\r\n  KilowattHour = 'kW-h',\r\n  KilowattMonth = 'kW-M',\r\n  KilowattMinuteElectricalCapacity = 'kW-min ',\r\n  Liters = 'L',\r\n  Pounds = 'lbs',\r\n  MegawattYear = 'MW-a',\r\n  MegawattDay = 'MW-d',\r\n  MegawattHour = 'MW-h',\r\n  MegawattMonth = 'MW-M',\r\n  MegawattMinute = 'MW-min',\r\n  TroyOunces = 'oz_tr',\r\n  PrincipalWithRelationToDebtInstrument = 'PRINC',\r\n  MetricTons = 't',\r\n  TonsUs = 'tn',\r\n  MillionBarrels = 'MMbbl',\r\n  UsDollars = 'USD'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the bond's payment priority in the event of a *\r\n* default.                                                *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingAdditionalTermBondSeniority {\r\n  SeniorSecured = 'SD',\r\n  Senior = 'SR',\r\n  Subordinated = 'SB'\r\n}\r\n\r\n/*\r\n****************************\r\n* Coupon type of the bond. *\r\n****************************\r\n*/\r\nexport enum UnderlyingAdditionalTermBondCouponType {\r\n  Zero = 0,\r\n  FixedRate = 1,\r\n  FloatingRate = 2,\r\n  Structured = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency of the bond's coupon *\r\n* payment.                                                     *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingAdditionalTermBondCouponFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The day count convention used in interest calculations for a *\r\n* bond or an interest bearing security.                        *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingAdditionalTermBondDayCount {\r\n  E11 = 0,\r\n  E3036030U360OrBondBasis = 1,\r\n  E30360Sia = 2,\r\n  E30360M = 3,\r\n  E30E360EurobondBasis = 4,\r\n  E30E360Isda = 5,\r\n  Act360 = 6,\r\n  Act365Fixed = 7,\r\n  ActActAfb = 8,\r\n  ActActIcma = 9,\r\n  ActActIcsmaUltimo = 10,\r\n  ActActIsda = 11,\r\n  Bus252 = 12,\r\n  E30E360 = 13,\r\n  Act365L = 14,\r\n  Nl365 = 15,\r\n  Nl360 = 16,\r\n  Act364 = 17\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* The type of quote used to determine the cash settlement *\r\n* price.                                                  *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingCashSettlQuoteMethod {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The ISDA defined methodology for determining the final price *\r\n* of the reference obligation for purposes of cash settlement. *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingCashSettlValuationMethod {\r\n  Market = 0,\r\n  Highest = 1,\r\n  AverageMarket = 2,\r\n  AverageHighest = 3,\r\n  BlendedMarket = 4,\r\n  BlendedHighest = 5,\r\n  AverageBlendedMarket = 6,\r\n  AverageBlendedHighest = 7\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Time unit associated with protection term events. *\r\n*****************************************************\r\n*/\r\nexport enum UnderlyingProtectionTermEventUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Day type for events that specify a period and unit. *\r\n*******************************************************\r\n*/\r\nexport enum UnderlyingProtectionTermEventDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Protection term event qualifier. Used to further qualify *\r\n* UnderlyingProtectionTermEventType(43078).                *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingProtectionTermEventQualifier {\r\n  RetructuringMultipleHoldingObligations = 'H',\r\n  RestructuringMultipleCreditEventNotices = 'E',\r\n  FloatingRateInterestShortfall = 'C'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The business day convention used to adjust the provisional *\r\n* cash settlement payment's termination, or relative         *\r\n* termination, date.  Used only to override the business day *\r\n* convention specified in the UnderlyingDateAdjustment       *\r\n* component within the UnderlyingInstrument component.       *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative cash settlement *\r\n* payment date offset.                                   *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingProvisionCashSettlPaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the day type of the provision's relative cash *\r\n* settlement payment date offset.                         *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingProvisionCashSettlPaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of date (e.g. adjusted for holidays). *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingProvisionCashSettlPaymentDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n***********************************************\r\n* Identifies the source of quote information. *\r\n***********************************************\r\n*/\r\nexport enum UnderlyingProvisionCashSettlQuoteSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n********************************************************\r\n* The business day convention used to adjust the cash  *\r\n* settlement valuation date. Used only to override the *\r\n* business day convention specified in the             *\r\n* UnderlyingDateAdjustment component within the        *\r\n* UnderlyingInstrument component.                      *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingProvisionCashSettlValueDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative cash settlement value *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingProvisionCashSettlValueDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the day type of the provision's relative cash *\r\n* settlement value date offset.                           *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingProvisionCashSettlValueDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of date (e.g. adjusted for holidays). *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionExerciseFixedDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the underlying   *\r\n* instrument's provision's option exercise date. Used only to *\r\n* override the business day convention specified in the       *\r\n* UnderlyingDateAdjustment component within the               *\r\n* UnderlyingInstrument component.                             *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionExerciseBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the interval to the first (and *\r\n* possibly only) exercise date in the exercise period.     *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency of subsequent        *\r\n* exercise dates in the exercise period following the earliest *\r\n* exercise date.                                               *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionExerciseFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative option exercise start *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionExerciseStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the day type of the provision's relative option *\r\n* exercise start date offset.                               *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionExerciseStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The business day convention used to adjust the underlying  *\r\n* instrument's provision's option expiration date. Used only *\r\n* to override the business day convention specified in the   *\r\n* UnderlyingDateAdjustment component within the              *\r\n* UnderlyingInstrument component.                            *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionExpirationDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative option expiration *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionExpirationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the day type of the provision's relative option *\r\n* expiration date offset.                                   *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionExpirationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convnetion used to adjust the underlying   *\r\n* instrument provision's option underlying date. Used only to *\r\n* override the business day convention specified in the       *\r\n* UnderlyingDateAdjustment component within the               *\r\n* UnderlyingInstrument component.                             *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative option relevant *\r\n* underlying date offset.                                *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the day type of the provision's relative option *\r\n* relevant underlying date offset.                          *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**********************\r\n* Type of provision. *\r\n**********************\r\n*/\r\nexport enum UnderlyingProvisionType {\r\n  MandatoryEarlyTermination = 0,\r\n  OptionalEarlyTermination = 1,\r\n  Cancelable = 2,\r\n  Extendible = 3,\r\n  MutualEarlyTermination = 4\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The business day convention used to adjust the underlying *\r\n* instrument's provision's date. Used only to override the  *\r\n* business day convention specified in the                  *\r\n* UnderlyingDateAdjustment component within the             *\r\n* UnderlyingInstrument component.                           *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingProvisionDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Time unit associated with the provision's tenor period. *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingProvisionDateTenorUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Used to identify the calculation agent.  The calculation *\r\n* agent may be identified in                               *\r\n* UnderlyingProvisionCalculationAgent(42156) or in the     *\r\n* underlying provision parties component.                  *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingProvisionCalculationAgent {\r\n  ExercisingParty = 0,\r\n  NonExercisingParty = 1,\r\n  AsSpecifiedInTheMasterAgreement = 2,\r\n  AsSpecifiedInTheStandardTermsSupplement = 3\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* If optional early termination is not available to both  *\r\n* parties then this component identifies the buyer of the *\r\n* option through its side of the trade.                   *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionSinglePartyBuyerSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n************************************************************\r\n* If optional early termination is not available to both   *\r\n* parties then this component identifies the seller of the *\r\n* option through its side of the trade.                    *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionSinglePartySellerSide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n**********************************************\r\n* The instrument provision's exercise style. *\r\n**********************************************\r\n*/\r\nexport enum UnderlyingProvisionOptionExerciseStyle {\r\n  European = 0,\r\n  American = 1,\r\n  Bermuda = 2,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* An ISDA defined cash settlement method used for the         *\r\n* determination of the applicable cash settlement amount. The *\r\n* method is defined in the 2006 ISDA Definitions, Section     *\r\n* 18.3. Cash Settlement Methods, paragraph (e).               *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingProvisionCashSettlMethod {\r\n  CashPrice = 0,\r\n  CashPriceAlternate = 1,\r\n  ParYieldCurveAdjusted = 2,\r\n  ZeroCouponYieldCurveAdjusted = 3,\r\n  ParYieldCurveUnadjusted = 4,\r\n  CrossCurrency = 5,\r\n  CollateralizedPrice = 6\r\n}\r\n\r\n/*\r\n********************************************\r\n* Identifies the type of quote to be used. *\r\n********************************************\r\n*/\r\nexport enum UnderlyingProvisionCashSettlQuoteType {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2,\r\n  ExercisingPartyPays = 3\r\n}\r\n\r\n/*\r\n********************************************\r\n* Identifies the class or source of the    *\r\n* UnderlyingProvisionPartyID(42174) value. *\r\n********************************************\r\n*/\r\nexport enum UnderlyingProvisionPartyIDSource {\r\n  KoreanInvestorId = '1',\r\n  TaiwaneseQualifiedForeignInvestorIdQfiiFid = '2',\r\n  TaiwaneseTradingAcct = '3',\r\n  MalaysianCentralDepositoryMcdNumber = '4',\r\n  ChineseInvestorId = '5',\r\n  UkNationalInsuranceOrPensionNumber = '6',\r\n  UsSocialSecurityNumber = '7',\r\n  UsEmployerOrTaxIdNumber = '8',\r\n  AustralianBusinessNumber = '9',\r\n  DirectedBrokerThreeCharacterAcronymAsDefinedInIsitcEtcBestPracticeGuidelinesDocument = 'I',\r\n  BicBankIdentificationCodeSwiftManagedCodeIso9362SeeAppendix6B = 'B',\r\n  GenerallyAcceptedMarketParticipantIdentifierEGNasdMnemonic = 'C',\r\n  ProprietaryCustomCode = 'D',\r\n  IsoCountryCode = 'E',\r\n  AustralianTaxFileNumber = 'A',\r\n  SettlementEntityLocationNoteIfLocalMarketSettlementUseEIsoCountryCodeSeeAppendix6GForValidValues = 'F',\r\n  MicIso10383MarketIdentificerCodeSeeAppendix6C = 'G',\r\n  TaxId = 'J',\r\n  CsdParticipantMemberCodeEGEuroclearDtcCrestOrKassenvereinNumber = 'H',\r\n  AustralianCompanyNumber = 'K',\r\n  AustralianRegisteredBodyNumber = 'L',\r\n  CftcReportingFirmIdentifier = 'M',\r\n  LegalEntityIdentifierIso17442Lei = 'N',\r\n  InterimIdentifier = 'O',\r\n  ShortCodeIdentifier = 'P',\r\n  NationalIdOfNaturalPerson = 'Q'\r\n}\r\n\r\n/*\r\n************************************************\r\n* Identifies the type or role of               *\r\n* UnderlyingProvisionPartyID(42174) specified. *\r\n************************************************\r\n*/\r\nexport enum UnderlyingProvisionPartyRole {\r\n  ExecutingFirmFormerlyFix42ExecBroker = 1,\r\n  BrokerOfCreditFormerlyFix42BrokerOfCredit = 2,\r\n  ClientIdFormerlyFix42ClientId = 3,\r\n  ClearingFirmFormerlyFix42ClearingFirm = 4,\r\n  InvestorId = 5,\r\n  IntroducingFirm = 6,\r\n  EnteringFirm = 7,\r\n  LocateLendingFirmForShortSales = 8,\r\n  FundManagerClientIdForCiv = 9,\r\n  SettlementLocationFormerlyFix42SettlLocation = 10,\r\n  OrderOriginationTraderAssociatedWithOrderOriginationFirmIETraderWhoInitiatesSubmitsTheOrder = 11,\r\n  ExecutingTraderAssociatedWithExecutingFirmActuallyExecutes = 12,\r\n  OrderOriginationFirmEGBuySideFirm = 13,\r\n  GiveupClearingFirmFirmToWhichTradeIsGivenUp = 14,\r\n  CorrespondantClearingFirm = 15,\r\n  ExecutingSystem = 16,\r\n  ContraFirm = 17,\r\n  ContraClearingFirm = 18,\r\n  SponsoringFirm = 19,\r\n  UnderlyingContraFirm = 20,\r\n  ClearingOrganization = 21,\r\n  Exchange = 22,\r\n  CustomerAccount = 24,\r\n  CorrespondentClearingOrganization = 25,\r\n  CorrespondentBroker = 26,\r\n  BuyerSellerReceiverDeliverer = 27,\r\n  Custodian = 28,\r\n  Intermediary = 29,\r\n  Agent = 30,\r\n  SubCustodian = 31,\r\n  Beneficiary = 32,\r\n  InterestedParty = 33,\r\n  RegulatoryBody = 34,\r\n  LiquidityProvider = 35,\r\n  EnteringTrader = 36,\r\n  ContraTrader = 37,\r\n  PositionAccount = 38,\r\n  ContraInvestorId = 39,\r\n  TransferToFirm = 40,\r\n  ContraPositionAccount = 41,\r\n  ContraExchange = 42,\r\n  InternalCarryAccount = 43,\r\n  OrderEntryOperatorId = 44,\r\n  SecondaryAccountNumber = 45,\r\n  ForeignFirm = 46,\r\n  ThirdPartyAllocationFirm = 47,\r\n  ClaimingAccount = 48,\r\n  AssetManager = 49,\r\n  PledgorAccount = 50,\r\n  PledgeeAccount = 51,\r\n  LargeTraderReportableAccount = 52,\r\n  TraderMnemonic = 53,\r\n  SenderLocation = 54,\r\n  SessionId = 55,\r\n  AcceptableCounterparty = 56,\r\n  UnacceptableCounterparty = 57,\r\n  EnteringUnit = 58,\r\n  ExecutingUnit = 59,\r\n  IntroducingBroker = 60,\r\n  QuoteOriginator = 61,\r\n  ReportOriginator = 62,\r\n  SystematicInternaliserSi = 63,\r\n  MultilateralTradingFacilityMtf = 64,\r\n  RegulatedMarketRm = 65,\r\n  MarketMaker = 66,\r\n  InvestmentFirm = 67,\r\n  HostCompetentAuthorityHostCa = 68,\r\n  HomeCompetentAuthorityHomeCa = 69,\r\n  CompetentAuthorityOfTheMostRelevantMarketInTermsOfLiquidityCal = 70,\r\n  CompetentAuthorityOfTheTransactionExecutionVenueCatv = 71,\r\n  ReportingIntermediaryMediumVendorViaWhichReportHasBeenPublished = 72,\r\n  ExecutionVenue = 73,\r\n  MarketDataEntryOriginator = 74,\r\n  LocationId = 75,\r\n  DeskId = 76,\r\n  MarketDataMarket = 77,\r\n  AllocationEntity = 78,\r\n  PrimeBrokerProvidingGeneralTradeServices = 79,\r\n  StepOutFirmPrimeBroker = 80,\r\n  BrokerCientId = 81,\r\n  CentralRegistrationDepositoryCrd = 82,\r\n  ClearingAccount = 83,\r\n  AcceptableSettlingCounterparty = 84,\r\n  UnacceptableSettlingCounterparty = 85,\r\n  ClsMemberBank = 86,\r\n  InConcertGroup = 87,\r\n  InConcertControllingEntity = 88,\r\n  LargePositionsReportingAccount = 89,\r\n  SettlementFirm = 90,\r\n  SettlementAccount = 91,\r\n  ReportingMarketCenter = 92,\r\n  RelatedReportingMarketCenter = 93,\r\n  AwayMarket = 94,\r\n  GiveUpTradingFirm = 95,\r\n  TakeUpTradingFirm = 96,\r\n  GiveUpClearingFirm = 97,\r\n  TakeUpClearingFirm = 98,\r\n  OriginatingMarket = 99,\r\n  MarginAccount = 100,\r\n  CollateralAssetAccount = 101,\r\n  DataRepository = 102,\r\n  CalculationAgent = 103,\r\n  SenderOfExerciseNotice = 104,\r\n  ReceiverOfExerciseNotice = 105,\r\n  RateReferenceBank = 106,\r\n  Correspondent = 107,\r\n  BeneficiarysBankOrDepositoryInstitution = 109,\r\n  Borrower = 110,\r\n  PrimaryObligator = 111,\r\n  Guarantor = 112,\r\n  ExcludedReferenceEntity = 113,\r\n  DeterminingParty = 114,\r\n  HedgingParty = 115,\r\n  ReportingEntity = 116,\r\n  SalesPerson = 117,\r\n  Operator = 118,\r\n  CentralSecuritiesDepositoryCsd = 119,\r\n  InternationalCentralSecuritiesDepositoryIcsd = 120,\r\n  TradingSubAccount = 121,\r\n  InvestmentDecisionMaker = 122\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* The type of UnderlyingProvisionPartySubID(42178). *\r\n*****************************************************\r\n*/\r\nexport enum UnderlyingProvisionPartySubIDType {\r\n  Firm = 1,\r\n  Person = 2,\r\n  System = 3,\r\n  Application = 4,\r\n  FullLegalNameOfFirm = 5,\r\n  PostalAddress = 6,\r\n  PhoneNumber = 7,\r\n  EmailAddress = 8,\r\n  ContactName = 9,\r\n  SecuritiesAccountNumberForSettlementInstructions = 10,\r\n  RegistrationNumberForSettlementInstructionsAndConfirmations = 11,\r\n  RegisteredAddressForConfirmationPurposes = 12,\r\n  RegulatoryStatusForConfirmationPurposes = 13,\r\n  RegistrationNameForSettlementInstructions = 14,\r\n  CashAccountNumberForSettlementInstructions = 15,\r\n  Bic = 16,\r\n  CsdParticipantMemberCode = 17,\r\n  RegisteredAddress = 18,\r\n  FundAccountName = 19,\r\n  TelexNumber = 20,\r\n  FaxNumber = 21,\r\n  SecuritiesAccountName = 22,\r\n  CashAccountName = 23,\r\n  Department = 24,\r\n  LocationDesk = 25,\r\n  PositionAccountType = 26,\r\n  SecurityLocateId = 27,\r\n  MarketMaker = 28,\r\n  EligibleCounterparty = 29,\r\n  ProfessionalClient = 30,\r\n  Location = 31,\r\n  ExecutionVenue = 32,\r\n  CurrencyDeliveryIdentifier = 33,\r\n  AddressCity = 34,\r\n  AddressStateProvince = 35,\r\n  AddressPostalCode = 36,\r\n  AddressStreet = 37,\r\n  AddressCountryIsoCountryCode = 38,\r\n  IsoCountryCode = 39,\r\n  MarketSegment = 40,\r\n  CustomerAccountType = 41,\r\n  OmnibusAccount = 42,\r\n  FundsSegregationType = 43,\r\n  GuaranteeFund = 44,\r\n  SwapDealer = 45,\r\n  MajorParticipant = 46,\r\n  FinancialEntity = 47,\r\n  USPerson = 48,\r\n  ReportingEntityIndicator = 49,\r\n  ElectedClearingRequirementException = 50,\r\n  BusinessCenter = 51,\r\n  ReferenceText = 52,\r\n  ShortMarkingExemptAccount = 53,\r\n  ParentFirmIdentifier = 54,\r\n  ParentFirmName = 55,\r\n  DealIdentifier = 56,\r\n  SystemTradeIdentifier = 57,\r\n  SystemTradeSubIdentifier = 58,\r\n  FuturesCommissionMerchantFcmCode = 59,\r\n  DeliveryTerminalCustomerAccountCode = 60,\r\n  VoluntaryReportingEntity = 61,\r\n  ReportingObligationJurisdiction = 62,\r\n  VoluntaryReportingJurisdiction = 63,\r\n  CompanyActivities = 64,\r\n  EuropeanEconomicAreaDomiciled = 65,\r\n  ContractLinkedToCommercialOrTreasuryFinancingForThisCounterparty = 66,\r\n  ContractAboveClearingThresholdForThisCounterparty = 67,\r\n  VoluntaryReportingParty = 68,\r\n  EndUser = 69,\r\n  LocationOrJurisdiction = 70,\r\n  DerivativesDealer = 71,\r\n  Domicile = 72,\r\n  ExemptFromRecognition = 73,\r\n  Payer = 74,\r\n  Receiver = 75,\r\n  SystematicInternaliserSi = 76\r\n}\r\n\r\n/*\r\n***************************************\r\n* Identifies the class or source of   *\r\n* DeliveryStreamDeliveryPoint(41062). *\r\n***************************************\r\n*/\r\nexport enum DeliveryStreamDeliveryPointSource {\r\n  Proprietary = 0,\r\n  EnergyIdentificationCodeEic = 1\r\n}\r\n\r\n/*\r\n******************************************\r\n* Identifies the class or source of      *\r\n* LegDeliveryStreamDeliveryPoint(41433). *\r\n******************************************\r\n*/\r\nexport enum LegDeliveryStreamDeliveryPointSource {\r\n  Proprietary = 0,\r\n  EnergyIdentificationCodeEic = 1\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Identifies the class or source of             *\r\n* UnderlyingDeliveryStreamDeliveryPoint(41781). *\r\n*************************************************\r\n*/\r\nexport enum UnderlyingDeliveryStreamDeliveryPointSource {\r\n  Proprietary = 0,\r\n  EnergyIdentificationCodeEic = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The business day convention used to adjust the cash          *\r\n* settlement provision's date. Used only to override the       *\r\n* business day convention defined in the Instrument component. *\r\n****************************************************************\r\n*/\r\nexport enum CashSettlDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the relative cash settlement date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum CashSettlDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the day type of the relative cash settlement date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum CashSettlDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* The default election for determining settlement price. *\r\n**********************************************************\r\n*/\r\nexport enum CashSettlPriceDefault {\r\n  Close = 0,\r\n  Hedge = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the dividend accrual floating rate *\r\n* index curve period.                                          *\r\n****************************************************************\r\n*/\r\nexport enum DividendFloatingRateIndexCurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum DividendFloatingRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the yield calculation treatment for the index. *\r\n************************************************************\r\n*/\r\nexport enum DividendFloatingRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Reference to the buyer of the cap rate option through its *\r\n* trade side.                                               *\r\n*************************************************************\r\n*/\r\nexport enum DividendCapRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Reference to the seller of the cap rate option through its *\r\n* trade side.                                                *\r\n**************************************************************\r\n*/\r\nexport enum DividendCapRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the buyer of the floor rate option through its *\r\n* trade side.                                                 *\r\n***************************************************************\r\n*/\r\nexport enum DividendFloorRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reference to the seller of the floor rate option through its *\r\n* trade side.                                                  *\r\n****************************************************************\r\n*/\r\nexport enum DividendFloorRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Specifies the rounding direction of the final rate. *\r\n*******************************************************\r\n*/\r\nexport enum DividendFinalRateRoundingDirection {\r\n  RoundToNearest = '0',\r\n  RoundDown = '1',\r\n  RoundUp = '2'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* When averaging is applicable, used to specify whether a    *\r\n* weighted or unweighted average method of calculation is to *\r\n* be used.                                                   *\r\n**************************************************************\r\n*/\r\nexport enum DividendAveragingMethod {\r\n  Unweighted = 0,\r\n  Weighted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The specification of any provisions for calculating payment *\r\n* obligations when a floating rate is negative (either due to *\r\n* a quoted negative floating rate or by operation of a spread *\r\n* that is subtracted from the floating rate).                 *\r\n***************************************************************\r\n*/\r\nexport enum DividendNegativeRateTreatment {\r\n  ZeroInterestRateMethod = 0,\r\n  NegativeInterestRateMethod = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the relative accrual payment date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum DividendAccrualPaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the day type of the relative accrual payment date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum DividendAccrualPaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Accrual payment date adjustment business day convention. *\r\n************************************************************\r\n*/\r\nexport enum DividendAccrualPaymeentDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Defines the contract event which the receiver of the *\r\n* derivative is entitled to the dividend.              *\r\n********************************************************\r\n*/\r\nexport enum DividendEntitlementEvent {\r\n  ExDate = 0,\r\n  RecordDate = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates how the gross cash dividend amount per share is *\r\n* determined.                                               *\r\n*************************************************************\r\n*/\r\nexport enum DividendAmountType {\r\n  RecordAmount = 0,\r\n  ExAmount = 1,\r\n  PaidAmount = 2,\r\n  AsSpecifiedInMasterConfirmation = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the party through its side in the trade who    *\r\n* makes the determination whether dividends are extraordinary *\r\n* in relation to normal levels.                               *\r\n***************************************************************\r\n*/\r\nexport enum ExtraordinaryDividendPartySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Indicates how the extraordinary gross cash dividend per *\r\n* share is determined.                                    *\r\n***********************************************************\r\n*/\r\nexport enum ExtraordinaryDividendAmountType {\r\n  RecordAmount = 0,\r\n  ExAmount = 1,\r\n  PaidAmount = 2,\r\n  AsSpecifiedInMasterConfirmation = 3\r\n}\r\n\r\n/*\r\n********************************************************\r\n* The compounding method to be used when more than one *\r\n* dividend period contributes to a single payment.     *\r\n********************************************************\r\n*/\r\nexport enum DividendCompoundingMethod {\r\n  None = 0,\r\n  Flat = 1,\r\n  Straight = 2,\r\n  SpreadExclusive = 3\r\n}\r\n\r\n/*\r\n************************************************\r\n* Defines the treatment of non-cash dividends. *\r\n************************************************\r\n*/\r\nexport enum NonCashDividendTreatment {\r\n  PotentialAdjustmentEvent = 0,\r\n  CashEquivalent = 1\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Defines how the composition of dividends is to be *\r\n* determined.                                       *\r\n*****************************************************\r\n*/\r\nexport enum DividendComposition {\r\n  EquityAmountReceiverElection = 0,\r\n  CalculationAgentElection = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative FX trigger date *\r\n* offset.                                                *\r\n**********************************************************\r\n*/\r\nexport enum DividendFXTriggerDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative FX trigger date *\r\n* offset.                                                *\r\n**********************************************************\r\n*/\r\nexport enum DividendFXTriggerDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The business day convention used for the FX trigger date *\r\n* adjustment.                                              *\r\n************************************************************\r\n*/\r\nexport enum DividendFXTriggerDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The dividend period dates business day convention. *\r\n******************************************************\r\n*/\r\nexport enum DividendPeriodBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative dividend period *\r\n* valuation date offset.                                 *\r\n**********************************************************\r\n*/\r\nexport enum DividendPeriodValuationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative dividend period *\r\n* valuation date offset.                                 *\r\n**********************************************************\r\n*/\r\nexport enum DividendPeriodValuationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative dividend period *\r\n* payment date offset.                                   *\r\n**********************************************************\r\n*/\r\nexport enum DividendPeriodPaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative dividend period *\r\n* payment date offset.                                   *\r\n**********************************************************\r\n*/\r\nexport enum DividendPeriodPaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* The business day convention used to adjust the cash     *\r\n* settlement provision's date.  Used only to override the *\r\n* business day convention defined in the InstrumentLeg    *\r\n* component.                                              *\r\n***********************************************************\r\n*/\r\nexport enum LegCashSettlDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the relative cash settlement date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum LegCashSettlDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the day type of the relative cash settlement date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum LegCashSettlDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* The default election for determining settlement price. *\r\n**********************************************************\r\n*/\r\nexport enum LegCashSettlPriceDefault {\r\n  Close = 0,\r\n  Hedge = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the dividend accrual floating rate *\r\n* index curve period.                                          *\r\n****************************************************************\r\n*/\r\nexport enum LegDividendFloatingRateIndexCurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum LegDividendFloatingRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the yield calculation treatment for the index. *\r\n************************************************************\r\n*/\r\nexport enum LegDividendFloatingRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Reference to the buyer of the cap rate option through its *\r\n* trade side.                                               *\r\n*************************************************************\r\n*/\r\nexport enum LegDividendCapRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Reference to the seller of the cap rate option through its *\r\n* trade side.                                                *\r\n**************************************************************\r\n*/\r\nexport enum LegDividendCapRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the buyer of the floor rate option through its *\r\n* trade side.                                                 *\r\n***************************************************************\r\n*/\r\nexport enum LegDividendFloorRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reference to the seller of the floor rate option through its *\r\n* trade side.                                                  *\r\n****************************************************************\r\n*/\r\nexport enum LegDividendFloorRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Specifies the rounding direction of the final rate. *\r\n*******************************************************\r\n*/\r\nexport enum LegDividendFinalRateRoundingDirection {\r\n  RoundToNearest = '0',\r\n  RoundDown = '1',\r\n  RoundUp = '2'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* When averaging is applicable, used to specify whether a    *\r\n* weighted or unweighted average method of calculation is to *\r\n* be used.                                                   *\r\n**************************************************************\r\n*/\r\nexport enum LegDividendAveragingMethod {\r\n  Unweighted = 0,\r\n  Weighted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The specification of any provisions for calculating payment *\r\n* obligations when a floating rate is negative (either due to *\r\n* a quoted negative floating rate or by operation of a spread *\r\n* that is subtracted from the floating rate).                 *\r\n***************************************************************\r\n*/\r\nexport enum LegDividendNegativeRateTreatment {\r\n  ZeroInterestRateMethod = 0,\r\n  NegativeInterestRateMethod = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the relative accrual payment date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum LegDividendAccrualPaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the day type of the relative accrual payment date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum LegDividendAccrualPaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Accrual payment date adjustment business day convention. *\r\n************************************************************\r\n*/\r\nexport enum LegDividendAccrualPaymentDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Defines the contract event which the receiver of the *\r\n* derivative is entitled to the dividend.              *\r\n********************************************************\r\n*/\r\nexport enum LegDividendEntitlementEvent {\r\n  ExDate = 0,\r\n  RecordDate = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates how the gross cash dividend amount per share is *\r\n* determined.                                               *\r\n*************************************************************\r\n*/\r\nexport enum LegDividendAmountType {\r\n  RecordAmount = 0,\r\n  ExAmount = 1,\r\n  PaidAmount = 2,\r\n  AsSpecifiedInMasterConfirmation = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the party through its side in the trade who    *\r\n* makes the determination whether dividends are extraordinary *\r\n* in relation to normal levels.                               *\r\n***************************************************************\r\n*/\r\nexport enum LegExtraordinaryDividendPartySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Indicates how the extraordinary gross cash dividend per *\r\n* share is determined.                                    *\r\n***********************************************************\r\n*/\r\nexport enum LegExtraordinaryDividendAmountType {\r\n  RecordAmount = 0,\r\n  ExAmount = 1,\r\n  PaidAmount = 2,\r\n  AsSpecifiedInMasterConfirmation = 3\r\n}\r\n\r\n/*\r\n********************************************************\r\n* The compounding method to be used when more than one *\r\n* dividend period contributes to a single payment.     *\r\n********************************************************\r\n*/\r\nexport enum LegDividendCompoundingMethod {\r\n  None = 0,\r\n  Flat = 1,\r\n  Straight = 2,\r\n  SpreadExclusive = 3\r\n}\r\n\r\n/*\r\n************************************************\r\n* Defines the treatment of non-cash dividends. *\r\n************************************************\r\n*/\r\nexport enum LegNonCashDividendTreatment {\r\n  PotentialAdjustmentEvent = 0,\r\n  CashEquivalent = 1\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Defines how the composition of dividends is to be *\r\n* determined.                                       *\r\n*****************************************************\r\n*/\r\nexport enum LegDividendComposition {\r\n  EquityAmountReceiverElection = 0,\r\n  CalculationAgentElection = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative FX trigger date *\r\n* offset.                                                *\r\n**********************************************************\r\n*/\r\nexport enum LegDividendFXTriggerDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative FX trigger date *\r\n* offset.                                                *\r\n**********************************************************\r\n*/\r\nexport enum LegDividendFXTriggerDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The business day convention used for the FX trigger date *\r\n* adjustment.                                              *\r\n************************************************************\r\n*/\r\nexport enum LegDividendFXTriggerDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The dividend period dates business day convention. *\r\n******************************************************\r\n*/\r\nexport enum LegDividendPeriodBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative dividend period *\r\n* valuation date offset.                                 *\r\n**********************************************************\r\n*/\r\nexport enum LegDividendPeriodValuationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative dividend period *\r\n* valuation date offset.                                 *\r\n**********************************************************\r\n*/\r\nexport enum LegDividendPeriodValuationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative dividend period *\r\n* payment date offset.                                   *\r\n**********************************************************\r\n*/\r\nexport enum LegDividendPeriodPaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative dividend period *\r\n* payment date offset.                                   *\r\n**********************************************************\r\n*/\r\nexport enum LegDividendPeriodPaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Side value of the party electing the settlement method. *\r\n***********************************************************\r\n*/\r\nexport enum LegSettlMethodElectingPartySide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The quote side of the benchmark to be used for calculating *\r\n* the \"make whole\" amount.                                   *\r\n**************************************************************\r\n*/\r\nexport enum LegMakeWholeBenchmarkQuote {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The method used when calculating the \"make whole\" amount. *\r\n* The most common is linear method.                         *\r\n*************************************************************\r\n*/\r\nexport enum LegMakeWholeInterpolationMethod {\r\n  None = 0,\r\n  LinearZeroYield = 1\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* The method used when calculating the index rate from    *\r\n* multiple points on the curve. The most common is linear *\r\n* method.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum LegPaymentStreamInterpolationMethod {\r\n  None = 0,\r\n  LinearZeroYield = 1\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Defines applicable periods for interpolation. *\r\n*************************************************\r\n*/\r\nexport enum LegPaymentStreamInterpolationPeriod {\r\n  Initial = 0,\r\n  InitialAndFinal = 1,\r\n  Final = 2,\r\n  AnyPeriod = 3\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the type of payment compounding date (e.g. *\r\n* adjusted for holidays).                              *\r\n********************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n**************************************************\r\n* The compounding dates business day convention. *\r\n**************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingDatesBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Time unit associated with the relative compounding date *\r\n* offset.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingDatesOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the day type of the relative compounding date *\r\n* offset.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingDatesOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency at which compounding *\r\n* dates occur.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of compounding   *\r\n* dates. It is used in conjunction with a specified frequency. *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the relative compounding end date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingEndDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the day type of the relative compounding end date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingEndDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the payment stream's compounding *\r\n* floating rate index curve period.                          *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingRateIndexCurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the yield calculation treatment for the index. *\r\n************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Reference to the buyer of the compounding cap rate option *\r\n* through its trade side.                                   *\r\n*************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingCapRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Reference to the seller of the compounding cap rate option *\r\n* through its trade side.                                    *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingCapRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the buyer of the compounding floor rate option *\r\n* through its trade side.                                     *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingFloorRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reference to the seller of the floor rate option through its *\r\n* trade side.                                                  *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingFloorRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the rounding direction for the compounding *\r\n* floating rate.                                       *\r\n********************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingFinalRateRoundingDirection {\r\n  RoundToNearest = '0',\r\n  RoundDown = '1',\r\n  RoundUp = '2'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the averaging method when compounding floating    *\r\n* rate averaging is applicable (e.g. weighted or unweighted). *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingAveragingMethod {\r\n  Unweighted = 0,\r\n  Weighted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the method for calculating payment obligations    *\r\n* when a compounding floating rate is negative (either due to *\r\n* a quoted negative floating rate or by operation of a spread *\r\n* that is subtracted from the floating rate).                 *\r\n***************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingNegativeRateTreatment {\r\n  ZeroInterestRateMethod = 0,\r\n  NegativeInterestRateMethod = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative compounding start *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the day type of the relative compounding start *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum LegPaymentStreamCompoundingStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative final price payment *\r\n* date offset.                                               *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamFinalPricePaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the day type of the relative final price payment *\r\n* date offset.                                               *\r\n**************************************************************\r\n*/\r\nexport enum LegPaymentStreamFinalPricePaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the type of fixing date (e.g. adjusted for *\r\n* holidays).                                           *\r\n********************************************************\r\n*/\r\nexport enum LegPaymentStreamFixingDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the initial price observation date *\r\n* offset.                                                      *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStreamFirstObservationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n********************************************************\r\n* For a variance swap specifies how                    *\r\n* LegPaymentStreamLinkStrikePrice(42472) is expressed. *\r\n********************************************************\r\n*/\r\nexport enum LegPaymentStreamLinkStrikePriceType {\r\n  Volatility = 0,\r\n  Variance = 1\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Indicates which price to use to satisfy the boundary *\r\n* condition.                                           *\r\n********************************************************\r\n*/\r\nexport enum LegPaymentStreamRealizedVarianceMethod {\r\n  Previous = 0,\r\n  Last = 1,\r\n  Both = 2\r\n}\r\n\r\n/*\r\n**********************************************\r\n* The stub end date business day convention. *\r\n**********************************************\r\n*/\r\nexport enum LegPaymentStubEndDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative stub end date offset. *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStubEndDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative stub end date offset. *\r\n****************************************************************\r\n*/\r\nexport enum LegPaymentStubEndDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************\r\n* The stub start date business day convention. *\r\n************************************************\r\n*/\r\nexport enum LegPaymentStubStartDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative stub start date *\r\n* offset.                                                *\r\n**********************************************************\r\n*/\r\nexport enum LegPaymentStubStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative stub start date *\r\n* offset.                                                *\r\n**********************************************************\r\n*/\r\nexport enum LegPaymentStubStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************\r\n* Type of fee elected for the break provision. *\r\n************************************************\r\n*/\r\nexport enum LegProvisionBreakFeeElection {\r\n  FlatFee = 0,\r\n  AmortizedFee = 1,\r\n  FundingFee = 2,\r\n  FlatFeeAndFundingFee = 3,\r\n  AmortizedFeeAndFundingFee = 4\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the valuation type applicable to the return rate *\r\n* date.                                                      *\r\n**************************************************************\r\n*/\r\nexport enum LegReturnRateDateMode {\r\n  PriceValuation = 0,\r\n  DividendValuation = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative return rate valuation *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum LegReturnRateValuationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative return rate valuation *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum LegReturnRateValuationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative return rate valuation *\r\n* start date offset.                                           *\r\n****************************************************************\r\n*/\r\nexport enum LegReturnRateValuationStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative return rate valuation *\r\n* start date offset.                                           *\r\n****************************************************************\r\n*/\r\nexport enum LegReturnRateValuationStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative return rate valuation *\r\n* end date offset.                                             *\r\n****************************************************************\r\n*/\r\nexport enum LegReturnRateValuationEndDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative return rate valuation *\r\n* end date offset.                                             *\r\n****************************************************************\r\n*/\r\nexport enum LegReturnRateValuationEndDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency at which return rate *\r\n* valuation dates occur.                                       *\r\n****************************************************************\r\n*/\r\nexport enum LegReturnRateValuationFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The convention for determining the sequence of return rate  *\r\n* valuation dates. It is used in conjunction with a specified *\r\n* frequency.                                                  *\r\n***************************************************************\r\n*/\r\nexport enum LegReturnRateValuationFrequencyRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The return rate valuation dates business day convention. *\r\n************************************************************\r\n*/\r\nexport enum LegReturnRateValuationDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The rate of exchange between the two currencies specified in *\r\n* LegReturnRateFXCurrencySymbol(42531).                        *\r\n****************************************************************\r\n*/\r\nexport enum LegReturnRateFXRateCalc {\r\n  Multiply = 'M',\r\n  Divide = 'D'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of price sequence of the return rate. *\r\n************************************************************\r\n*/\r\nexport enum LegReturnRatePriceSequence {\r\n  Initial = 0,\r\n  Interim = 1,\r\n  Final = 2\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Specifies the basis or unit used to calculate the *\r\n* commission.                                       *\r\n*****************************************************\r\n*/\r\nexport enum LegReturnRateCommissionBasis {\r\n  AmountPerUnit = '1',\r\n  Percent = '2',\r\n  Absolute = '3',\r\n  PercentageWaivedCashDiscountBasis = '4',\r\n  PercentageWaivedEnhancedUnitsBasis = '5',\r\n  PointsPerBondOrContract = '6',\r\n  BasisPoints = '7',\r\n  AmountPerContract = '8'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of quote used to determine the return *\r\n* rate of the swap.                                        *\r\n************************************************************\r\n*/\r\nexport enum LegReturnRateQuoteMethod {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Specifies how or the timing when the quote is to be *\r\n* obtained.                                           *\r\n*******************************************************\r\n*/\r\nexport enum LegReturnRateQuoteTimeType {\r\n  Open = 0,\r\n  OfficialSettlementPriceTime = 1,\r\n  Xetra = 2,\r\n  Close = 3,\r\n  DerivativesClose = 4,\r\n  High = 5,\r\n  Low = 6,\r\n  AsSpecifiedInTheMasterConfirmation = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the timing at which the calculation agent values *\r\n* the underlying.                                            *\r\n**************************************************************\r\n*/\r\nexport enum LegReturnRateValuationTimeType {\r\n  Open = 0,\r\n  OfficialSettlementPriceTime = 1,\r\n  Xetra = 2,\r\n  Close = 3,\r\n  DerivativesClose = 4,\r\n  High = 5,\r\n  Low = 6,\r\n  AsSpecifiedInTheMasterConfirmation = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Indicates whether an ISDA price option applies, and if *\r\n* applicable which type of price.                        *\r\n**********************************************************\r\n*/\r\nexport enum LegReturnRateValuationPriceOption {\r\n  NoneTheDefault = 0,\r\n  FuturesPrice = 1,\r\n  OptionsPrice = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the fallback provision for the hedging party in *\r\n* the determination of the final price.                     *\r\n*************************************************************\r\n*/\r\nexport enum LegReturnRateFinalPriceFallback {\r\n  Close = 0,\r\n  HedgeElection = 1\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Identifies the source of rate information. For FX the *\r\n* references source to be used for the FX spot rate.    *\r\n*********************************************************\r\n*/\r\nexport enum LegReturnRateInformationSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**********************************\r\n* The basis of the return price. *\r\n**********************************\r\n*/\r\nexport enum LegReturnRatePriceBasis {\r\n  Gross = 0,\r\n  Net = 1,\r\n  Accrued = 2,\r\n  CleanNet = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies whether the LegReturnRatePrice(42566) is expressed *\r\n* in absolute or relative terms.                               *\r\n****************************************************************\r\n*/\r\nexport enum LegReturnRatePriceType {\r\n  AbsoluteTerms = 0,\r\n  PercentageOfNotional = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the type of return rate valuation date (e.g. *\r\n* adjusted for holidays).                                *\r\n**********************************************************\r\n*/\r\nexport enum LegReturnRateValuationDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The settlement method election date adjustment business day *\r\n* convention.                                                 *\r\n***************************************************************\r\n*/\r\nexport enum LegSettlMethodElectionDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative settlement method *\r\n* election date offset.                                    *\r\n************************************************************\r\n*/\r\nexport enum LegSettlMethodElectionDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the day type of the relative settlement method *\r\n* election date offset.                                    *\r\n************************************************************\r\n*/\r\nexport enum LegSettlMethodElectionDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* For equity swaps this specifies the conditions that govern *\r\n* the adjustment to the number of units of the swap.         *\r\n**************************************************************\r\n*/\r\nexport enum LegStreamNotionalAdjustments {\r\n  Execution = 0,\r\n  PortfolioRebalancing = 1,\r\n  Standard = 2\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Side value of the party electing the settlement method. *\r\n***********************************************************\r\n*/\r\nexport enum SettlMethodElectingPartySide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The quote side of the benchmark to be used for calculating *\r\n* the \"make whole\" amount.                                   *\r\n**************************************************************\r\n*/\r\nexport enum MakeWholeBenchmarkQuote {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The method used when calculating the \"make whole\" amount. *\r\n* The most common is linear method.                         *\r\n*************************************************************\r\n*/\r\nexport enum MakeWholeInterpolationMethod {\r\n  None = 0,\r\n  LinearZeroYield = 1\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* The method used when calculating the index rate from    *\r\n* multiple points on the curve. The most common is linear *\r\n* method.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum PaymentStreamInterpolationMethod {\r\n  None = 0,\r\n  LinearZeroYield = 1\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Defines applicable periods for interpolation. *\r\n*************************************************\r\n*/\r\nexport enum PaymentStreamInterpolationPeriod {\r\n  Initial = 0,\r\n  InitialAndFinal = 1,\r\n  Final = 2,\r\n  AnyPeriod = 3\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the type of payment compounding date (e.g. *\r\n* adjusted for holidays).                              *\r\n********************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n**************************************************\r\n* The compounding dates business day convention. *\r\n**************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingDatesBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Time unit associated with the relative compounding date *\r\n* offset.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingDatesOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the day type of the relative compounding date *\r\n* offset.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingDatesOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency at which compounding *\r\n* dates occur.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of compounding   *\r\n* dates. It is used in conjunction with a specified frequency. *\r\n****************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the relative compounding end date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingEndDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the day type of the relative compounding end date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingEndDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the payment stream's compounding *\r\n* floating rate index curve period.                          *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingRateIndexCurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the yield calculation treatment for the index. *\r\n************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Reference to the buyer of the compounding cap rate option *\r\n* through its trade side.                                   *\r\n*************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingCapRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Reference to the seller of the compounding cap rate option *\r\n* through its trade side.                                    *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingCapRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the buyer of the compounding floor rate option *\r\n* through its trade side.                                     *\r\n***************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingFloorRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reference to the seller of the floor rate option through its *\r\n* trade side.                                                  *\r\n****************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingFloorRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the rounding direction for the compounding *\r\n* floating rate.                                       *\r\n********************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingFinalRateRoundingDirection {\r\n  RoundToNearest = '0',\r\n  RoundDown = '1',\r\n  RoundUp = '2'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the averaging method when compounding floating    *\r\n* rate averaging is applicable (e.g. weighted or unweighted). *\r\n***************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingAveragingMethod {\r\n  Unweighted = 0,\r\n  Weighted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the method for calculating payment obligations    *\r\n* when a compounding floating rate is negative (either due to *\r\n* a quoted negative floating rate or by operation of a spread *\r\n* that is subtracted from the floating rate).                 *\r\n***************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingNegativeRateTreatment {\r\n  ZeroInterestRateMethod = 0,\r\n  NegativeInterestRateMethod = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative compounding start *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the day type of the relative compounding start *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum PaymentStreamCompoundingStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative final price payment *\r\n* date offset.                                               *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamFinalPricePaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the day type of the relative final price payment *\r\n* date offset.                                               *\r\n**************************************************************\r\n*/\r\nexport enum PaymentStreamFinalPricePaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the type of fixing date (e.g. adjusted for *\r\n* holidays).                                           *\r\n********************************************************\r\n*/\r\nexport enum PaymentStreamFixingDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the initial price observation date *\r\n* offset.                                                      *\r\n****************************************************************\r\n*/\r\nexport enum PaymentStreamFirstObservationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* For a variance swap specifies how                 *\r\n* PaymentStreamLinkStrikePrice(42673) is expressed. *\r\n*****************************************************\r\n*/\r\nexport enum PaymentStreamLinkStrikePriceType {\r\n  Volatility = 0,\r\n  Variance = 1\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Indicates which price to use to satisfy the boundary *\r\n* condition.                                           *\r\n********************************************************\r\n*/\r\nexport enum PaymentStreamRealizedVarianceMethod {\r\n  Previous = 0,\r\n  Last = 1,\r\n  Both = 2\r\n}\r\n\r\n/*\r\n**********************************************\r\n* The stub end date business day convention. *\r\n**********************************************\r\n*/\r\nexport enum PaymentStubEndDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative stub end date offset. *\r\n****************************************************************\r\n*/\r\nexport enum PaymentStubEndDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative stub end date offset. *\r\n****************************************************************\r\n*/\r\nexport enum PaymentStubEndDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************\r\n* The stub start date business day convention. *\r\n************************************************\r\n*/\r\nexport enum PaymentStubStartDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative stub start date *\r\n* offset.                                                *\r\n**********************************************************\r\n*/\r\nexport enum PaymentStubStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative stub start date *\r\n* offset.                                                *\r\n**********************************************************\r\n*/\r\nexport enum PaymentStubStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************\r\n* Type of fee elected for the break provision. *\r\n************************************************\r\n*/\r\nexport enum ProvisionBreakFeeElection {\r\n  FlatFee = 0,\r\n  AmortizedFee = 1,\r\n  FundingFee = 2,\r\n  FlatFeeAndFundingFee = 3,\r\n  AmortizedFeeAndFundingFee = 4\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the valuation type applicable to the return rate *\r\n* date.                                                      *\r\n**************************************************************\r\n*/\r\nexport enum ReturnRateDateMode {\r\n  PriceValuation = 0,\r\n  DividendValuation = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative return rate valuation *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum ReturnRateValuationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative return rate valuation *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum ReturnRateValuationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative return rate valuation *\r\n* start date offset.                                           *\r\n****************************************************************\r\n*/\r\nexport enum ReturnRateValuationStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative return rate valuation *\r\n* start date offset.                                           *\r\n****************************************************************\r\n*/\r\nexport enum ReturnRateValuationStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative return rate valuation *\r\n* end date offset.                                             *\r\n****************************************************************\r\n*/\r\nexport enum ReturnRateValuationEndDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative return rate valuation *\r\n* end date offset.                                             *\r\n****************************************************************\r\n*/\r\nexport enum ReturnRateValuationEndDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency at which return rate *\r\n* valuation dates occur.                                       *\r\n****************************************************************\r\n*/\r\nexport enum ReturnRateValuationFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The convention for determining the sequence of return rate  *\r\n* valuation dates. It is used in conjunction with a specified *\r\n* frequency.                                                  *\r\n***************************************************************\r\n*/\r\nexport enum ReturnRateValuationFrequencyRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The return rate valuation dates business day convention. *\r\n************************************************************\r\n*/\r\nexport enum ReturnRateValuationDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Specifies whether ReturnRateFXRate(42733) should be *\r\n* multiplied or divided.                              *\r\n*******************************************************\r\n*/\r\nexport enum ReturnRateFXRateCalc {\r\n  Multiply = 'M',\r\n  Divide = 'D'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of price sequence of the return rate. *\r\n************************************************************\r\n*/\r\nexport enum ReturnRatePriceSequence {\r\n  Initial = 0,\r\n  Interim = 1,\r\n  Final = 2\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Specifies the basis or unit used to calculate the *\r\n* commission.                                       *\r\n*****************************************************\r\n*/\r\nexport enum ReturnRateCommissionBasis {\r\n  AmountPerUnit = '1',\r\n  Percent = '2',\r\n  Absolute = '3',\r\n  PercentageWaivedCashDiscountBasis = '4',\r\n  PercentageWaivedEnhancedUnitsBasis = '5',\r\n  PointsPerBondOrContract = '6',\r\n  BasisPoints = '7',\r\n  AmountPerContract = '8'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of quote used to determine the return *\r\n* rate of the swap.                                        *\r\n************************************************************\r\n*/\r\nexport enum ReturnRateQuoteMethod {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Specifies how or the timing when the quote is to be *\r\n* obtained.                                           *\r\n*******************************************************\r\n*/\r\nexport enum ReturnRateQuoteTimeType {\r\n  Open = 0,\r\n  OfficialSettlementPriceTime = 1,\r\n  Xetra = 2,\r\n  Close = 3,\r\n  DerivativesClose = 4,\r\n  High = 5,\r\n  Low = 6,\r\n  AsSpecifiedInTheMasterConfirmation = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the timing at which the calculation agent values *\r\n* the underlying.                                            *\r\n**************************************************************\r\n*/\r\nexport enum ReturnRateValuationTimeType {\r\n  Open = 0,\r\n  OfficialSettlementPriceTime = 1,\r\n  Xetra = 2,\r\n  Close = 3,\r\n  DerivativesClose = 4,\r\n  High = 5,\r\n  Low = 6,\r\n  AsSpecifiedInTheMasterConfirmation = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Indicates whether an ISDA price option applies, and if *\r\n* applicable which type of price.                        *\r\n**********************************************************\r\n*/\r\nexport enum ReturnRateValuationPriceOption {\r\n  NoneTheDefault = 0,\r\n  FuturesPrice = 1,\r\n  OptionsPrice = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the fallback provision for the hedging party in *\r\n* the determination of the final price.                     *\r\n*************************************************************\r\n*/\r\nexport enum ReturnRateFinalPriceFallback {\r\n  Close = 0,\r\n  HedgeElection = 1\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Identifies the source of rate information. For FX the *\r\n* references source to be used for the FX spot rate.    *\r\n*********************************************************\r\n*/\r\nexport enum ReturnRateInformationSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**********************************\r\n* The basis of the return price. *\r\n**********************************\r\n*/\r\nexport enum ReturnRatePriceBasis {\r\n  Gross = 0,\r\n  Net = 1,\r\n  Accrued = 2,\r\n  CleanNet = 3\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies whether the ReturnRatePrice(42767) is expressed in *\r\n* absolute or relative terms.                                  *\r\n****************************************************************\r\n*/\r\nexport enum ReturnRatePriceType {\r\n  AbsoluteTerms = 0,\r\n  PercentageOfNotional = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the type of return rate valuation date (e.g. *\r\n* adjusted for holidays).                                *\r\n**********************************************************\r\n*/\r\nexport enum ReturnRateValuationDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The settlement method election date adjustment business day *\r\n* convention.                                                 *\r\n***************************************************************\r\n*/\r\nexport enum SettlMethodElectionDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative settlement method *\r\n* election date offset.                                    *\r\n************************************************************\r\n*/\r\nexport enum SettlMethodElectionDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the day type of the relative settlement method *\r\n* election date offset.                                    *\r\n************************************************************\r\n*/\r\nexport enum SettlMethodElectionDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* For equity swaps this specifies the conditions that govern *\r\n* the adjustment to the number of units of the swap.         *\r\n**************************************************************\r\n*/\r\nexport enum StreamNotionalAdjustments {\r\n  Execution = 0,\r\n  PortfolioRebalancing = 1,\r\n  Standard = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The business day convention used to adjust the cash         *\r\n* settlement provision's date.  Used only to override the     *\r\n* business day convention defined in the UnderlyingInstrument *\r\n* component.                                                  *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingCashSettlDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the relative cash settlement date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingCashSettlDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the day type of the relative cash settlement date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingCashSettlDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* The default election for determining settlement price. *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingCashSettlPriceDefault {\r\n  Close = 0,\r\n  Hedge = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the dividend accrual floating rate *\r\n* index curve period.                                          *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingDividendFloatingRateIndexCurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingDividendFloatingRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the yield calculation treatment for the index. *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingDividendFloatingRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Reference to the buyer of the cap rate option through its *\r\n* trade side.                                               *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingDividendCapRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Reference to the seller of the cap rate option through its *\r\n* trade side.                                                *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingDividendCapRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the buyer of the floor rate option through its *\r\n* trade side.                                                 *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingDividendFloorRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reference to the seller of the floor rate option through its *\r\n* trade side.                                                  *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingDividendFloorRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Specifies the rounding direction of the final rate. *\r\n*******************************************************\r\n*/\r\nexport enum UnderlyingDividendFinalRateRoundingDirection {\r\n  RoundToNearest = '0',\r\n  RoundDown = '1',\r\n  RoundUp = '2'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* When averaging is applicable, used to specify whether a    *\r\n* weighted or unweighted average method of calculation is to *\r\n* be used.                                                   *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingDividendAveragingMethod {\r\n  Unweighted = 0,\r\n  Weighted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The specification of any provisions for calculating payment *\r\n* obligations when a floating rate is negative (either due to *\r\n* a quoted negative floating rate or by operation of a spread *\r\n* that is subtracted from the floating rate).                 *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingDividendNegativeRateTreatment {\r\n  ZeroInterestRateMethod = 0,\r\n  NegativeInterestRateMethod = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the relative accrual payment date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingDividendAccrualPaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the day type of the relative accrual payment date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingDividendAccrualPaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Accrual payment date adjustment business day convention. *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingDividendAccrualPaymentDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Defines the contract event which the receiver of the *\r\n* derivative is entitled to the dividend.              *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingDividendEntitlementEvent {\r\n  ExDate = 0,\r\n  RecordDate = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Indicates how the gross cash dividend amount per share is *\r\n* determined.                                               *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingDividendAmountType {\r\n  RecordAmount = 0,\r\n  ExAmount = 1,\r\n  PaidAmount = 2,\r\n  AsSpecifiedInMasterConfirmation = 3\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the party through its side in the trade who    *\r\n* makes the determination whether dividends are extraordinary *\r\n* in relation to normal levels.                               *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingExtraordinaryDividendPartySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Indicates how the extraordinary gross cash dividend per *\r\n* share is determined.                                    *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingExtraordinaryDividendAmountType {\r\n  RecordAmount = 0,\r\n  ExAmount = 1,\r\n  PaidAmount = 2,\r\n  AsSpecifiedInMasterConfirmation = 3\r\n}\r\n\r\n/*\r\n********************************************************\r\n* The compounding method to be used when more than one *\r\n* dividend period contributes to a single payment.     *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingDividendCompoundingMethod {\r\n  None = 0,\r\n  Flat = 1,\r\n  Straight = 2,\r\n  SpreadExclusive = 3\r\n}\r\n\r\n/*\r\n************************************************\r\n* Defines the treatment of non-cash dividends. *\r\n************************************************\r\n*/\r\nexport enum UnderlyingNonCashDividendTreatment {\r\n  PotentialAdjustmentEvent = 0,\r\n  CashEquivalent = 1\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Defines how the composition of dividends is to be *\r\n* determined.                                       *\r\n*****************************************************\r\n*/\r\nexport enum UnderlyingDividendComposition {\r\n  EquityAmountReceiverElection = 0,\r\n  CalculationAgentElection = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative FX trigger date *\r\n* offset.                                                *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingDividendFXTriggerDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative FX trigger date *\r\n* offset.                                                *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingDividendFXTriggerDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The business day convention used for the FX trigger date *\r\n* adjustment.                                              *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingDividendFXTriggerDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n******************************************************\r\n* The dividend period dates business day convention. *\r\n******************************************************\r\n*/\r\nexport enum UnderlyingDividendPeriodBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative dividend period *\r\n* valuation date offset.                                 *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingDividendPeriodValuationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative dividend period *\r\n* valuation date offset.                                 *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingDividendPeriodValuationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative dividend period *\r\n* payment date offset.                                   *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingDividendPeriodPaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative dividend period *\r\n* payment date offset.                                   *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingDividendPeriodPaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Side value of the party electing the settlement method. *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingSettlMethodElectingPartySide {\r\n  Buy = 1,\r\n  Sell = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* The quote side of the benchmark to be used for calculating *\r\n* the \"make whole\" amount.                                   *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingMakeWholeBenchmarkQuote {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* The method used when calculating the \"make whole\" amount. *\r\n* The most common is linear method.                         *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingMakeWholeInterpolationMethod {\r\n  None = 0,\r\n  LinearZeroYield = 1\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* The method used when calculating the index rate from    *\r\n* multiple points on the curve. The most common is linear *\r\n* method.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamInterpolationMethod {\r\n  None = 0,\r\n  LinearZeroYield = 1\r\n}\r\n\r\n/*\r\n*************************************************\r\n* Defines applicable periods for interpolation. *\r\n*************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamInterpolationPeriod {\r\n  Initial = 0,\r\n  InitialAndFinal = 1,\r\n  Final = 2,\r\n  AnyPeriod = 3\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the type of payment compounding date (e.g. *\r\n* adjusted for holidays).                              *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n**************************************************\r\n* The compounding dates business day convention. *\r\n**************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Time unit associated with the relative compounding date *\r\n* offset.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingDatesOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***********************************************************\r\n* Specifies the day type of the relative compounding date *\r\n* offset.                                                 *\r\n***********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingDatesOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency at which compounding *\r\n* dates occur.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* The convention for determining the sequence of compounding   *\r\n* dates. It is used in conjunction with a specified frequency. *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Time unit associated with the relative compounding end date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingEndDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the day type of the relative compounding end date *\r\n* offset.                                                     *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingEndDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the payment stream's compounding *\r\n* floating rate index curve period.                          *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingRateIndexCurveUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Identifies whether the rate spread is applied to a long or *\r\n* short position.                                            *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingRateSpreadPositionType {\r\n  Short = 0,\r\n  Long = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the yield calculation treatment for the index. *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingRateTreatment {\r\n  BondEquivalentYield = 0,\r\n  MoneyMarketYield = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Reference to the buyer of the compounding cap rate option *\r\n* through its trade side.                                   *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingCapRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Reference to the seller of the compounding cap rate option *\r\n* through its trade side.                                    *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingCapRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Reference to the buyer of the compounding floor rate option *\r\n* through its trade side.                                     *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingFloorRateBuySide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Reference to the seller of the floor rate option through its *\r\n* trade side.                                                  *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingFloorRateSellSide {\r\n  BuyerOfTheTrade = 1,\r\n  SellerOfTheTrade = 2\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the rounding direction for the compounding *\r\n* floating rate.                                       *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection {\r\n  RoundToNearest = '0',\r\n  RoundDown = '1',\r\n  RoundUp = '2'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the averaging method when compounding floating    *\r\n* rate averaging is applicable (e.g. weighted or unweighted). *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingAveragingMethod {\r\n  Unweighted = 0,\r\n  Weighted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* Specifies the method for calculating payment obligations    *\r\n* when a compounding floating rate is negative (either due to *\r\n* a quoted negative floating rate or by operation of a spread *\r\n* that is subtracted from the floating rate).                 *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingNegativeRateTreatment {\r\n  ZeroInterestRateMethod = 0,\r\n  NegativeInterestRateMethod = 1\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative compounding start *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the day type of the relative compounding start *\r\n* date offset.                                             *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamCompoundingStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Time unit associated with the relative final price payment *\r\n* date offset.                                               *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the day type of the relative final price payment *\r\n* date offset.                                               *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Specifies the type of fixing date (e.g. adjusted for *\r\n* holidays).                                           *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamFixingDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the initial price observation date *\r\n* offset.                                                      *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamFirstObservationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* For a variance swap specifies how                           *\r\n* UnderlyingPaymentStreamLinkStrikePrice(42968) is expressed. *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamLinkStrikePriceType {\r\n  Volatility = 0,\r\n  Variance = 1\r\n}\r\n\r\n/*\r\n********************************************************\r\n* Indicates which price to use to satisfy the boundary *\r\n* condition.                                           *\r\n********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStreamRealizedVarianceMethod {\r\n  Previous = 0,\r\n  Last = 1,\r\n  Both = 2\r\n}\r\n\r\n/*\r\n**********************************************\r\n* The stub end date business day convention. *\r\n**********************************************\r\n*/\r\nexport enum UnderlyingPaymentStubEndDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative stub end date offset. *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubEndDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative stub end date offset. *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubEndDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************\r\n* The stub start date business day convention. *\r\n************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubStartDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Time unit associated with the relative stub start date *\r\n* offset.                                                *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the day type of the relative stub start date *\r\n* offset.                                                *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingPaymentStubStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n************************************************\r\n* Type of fee elected for the break provision. *\r\n************************************************\r\n*/\r\nexport enum UnderlyingProvisionBreakFeeElection {\r\n  FlatFee = 0,\r\n  AmortizedFee = 1,\r\n  FundingFee = 2,\r\n  FlatFeeAndFundingFee = 3,\r\n  AmortizedFeeAndFundingFee = 4\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the valuation type applicable to the return rate *\r\n* date.                                                      *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateDateMode {\r\n  PriceValuation = 0,\r\n  DividendValuation = 1\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative return rate valuation *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateValuationDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative return rate valuation *\r\n* date offset.                                                 *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateValuationDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative return rate valuation *\r\n* start date offset.                                           *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateValuationStartDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative return rate valuation *\r\n* start date offset.                                           *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateValuationStartDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the relative return rate valuation *\r\n* end date offset.                                             *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateValuationEndDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Specifies the day type of the relative return rate valuation *\r\n* end date offset.                                             *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateValuationEndDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n****************************************************************\r\n* Time unit associated with the frequency at which return rate *\r\n* valuation dates occur.                                       *\r\n****************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateValuationFrequencyUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr',\r\n  Hour = 'H',\r\n  Minute = 'Min',\r\n  Second = 'S',\r\n  Term = 'T'\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The convention for determining the sequence of return rate  *\r\n* valuation dates. It is used in conjunction with a specified *\r\n* frequency.                                                  *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateValuationFrequencyRollConvention {\r\n  E1stDayOfTheMonth = '1',\r\n  E2ndDayOfTheMonth = '2',\r\n  E3rdDayOfTheMonth = '3',\r\n  E4thDayOfTheMonth = '4',\r\n  E5thDayOfTheMonth = '5',\r\n  E6ThdDayOfTheMonth = '6',\r\n  E7thDayOfTheMonth = '7',\r\n  E8thDayOfTheMonth = '8',\r\n  E9thDayOfTheMonth = '9',\r\n  E10thDayOfTheMonth = '10',\r\n  E11ThDayOfTheMonth = '11',\r\n  E12ThDayOfTheMonth = '12',\r\n  E13ThDayOfTheMonth = '13',\r\n  E14thDayOfTheMonth = '14',\r\n  E15thDayOfTheMonth = '15',\r\n  E16thDayOfTheMonth = '16',\r\n  E17thDayOfTheMonth = '17',\r\n  E18thDayOfTheMonth = '18',\r\n  E19thDayOfTheMonth = '19',\r\n  E20thDayOfTheMonth = '20',\r\n  E21stDayOfTheMonth = '21',\r\n  E22ndDayOfTheMonth = '22',\r\n  E23rdDayOfTheMonth = '23',\r\n  E24thDayOfTheMonth = '24',\r\n  E25thDayOfTheMonth = '25',\r\n  E26thDayOfTheMonth = '26',\r\n  E27thDayOfTheMonth = '27',\r\n  E28thDayOfTheMonth = '28',\r\n  E29thDayOfTheMonth = '29',\r\n  E30thDayOfTheMonth = '30',\r\n  TheEndOfTheMonth = 'EOM',\r\n  TheFloatingRateNoteConventionOrEurodollarConvention = 'FRN',\r\n  TheInternationalMoneyMarketSettlementDateIEThe3rdWednesdayOfTheMonth = 'IMM',\r\n  TheLastTradingDayExpirationDayOfTheCanadianDerivativesExchange = 'IMMCAD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeAustralian90DayBankAcceptedBillFuturesContract = 'IMMAUD',\r\n  TheLastTradingDayOfTheSydneyFuturesExchangeNewZealand90DayBankBillFuturesContract = 'IMMNZD',\r\n  TheSydneyFuturesExchange90DayBankAcceptedBillFuturesSettlementDates = 'SFE',\r\n  NoAdjustment = 'NONE',\r\n  The13WeekAnd26WeekUSTreasuryBillAuctionDates = 'TBILL',\r\n  Monday = 'MON',\r\n  Tuesday = 'TUE',\r\n  Wednesday = 'WED',\r\n  Thursday = 'THU',\r\n  Friday = 'FRI',\r\n  Saturday = 'SAT',\r\n  Sunday = 'SUN'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* The return rate valuation dates business day convention. *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateValuationDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies whether UnderlyingReturnRateFXRate(43032) should *\r\n* be multiplied or divided.                                  *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateFXRateCalc {\r\n  Multiply = 'M',\r\n  Divide = 'D'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of price sequence of the return rate. *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingReturnRatePriceSequence {\r\n  Initial = 0,\r\n  Interim = 1,\r\n  Final = 2\r\n}\r\n\r\n/*\r\n*****************************************************\r\n* Specifies the basis or unit used to calculate the *\r\n* commission.                                       *\r\n*****************************************************\r\n*/\r\nexport enum UnderlyingReturnRateCommissionBasis {\r\n  AmountPerUnit = '1',\r\n  Percent = '2',\r\n  Absolute = '3',\r\n  PercentageWaivedCashDiscountBasis = '4',\r\n  PercentageWaivedEnhancedUnitsBasis = '5',\r\n  PointsPerBondOrContract = '6',\r\n  BasisPoints = '7',\r\n  AmountPerContract = '8'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the type of quote used to determine the return *\r\n* rate of the swap.                                        *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateQuoteMethod {\r\n  Bid = 0,\r\n  Mid = 1,\r\n  Offer = 2\r\n}\r\n\r\n/*\r\n*******************************************************\r\n* Specifies how or the timing when the quote is to be *\r\n* obtained.                                           *\r\n*******************************************************\r\n*/\r\nexport enum UnderlyingReturnRateQuoteTimeType {\r\n  Open = 0,\r\n  OfficialSettlementPriceTime = 1,\r\n  Xetra = 2,\r\n  Close = 3,\r\n  DerivativesClose = 4,\r\n  High = 5,\r\n  Low = 6,\r\n  AsSpecifiedInTheMasterConfirmation = 7\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Specifies the timing at which the calculation agent values *\r\n* the underlying.                                            *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateValuationTimeType {\r\n  Open = 0,\r\n  OfficialSettlementPriceTime = 1,\r\n  Xetra = 2,\r\n  Close = 3,\r\n  DerivativesClose = 4,\r\n  High = 5,\r\n  Low = 6,\r\n  AsSpecifiedInTheMasterConfirmation = 7\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Indicates whether an ISDA price option applies, and if *\r\n* applicable which type of price.                        *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingReturnRateValuationPriceOption {\r\n  NoneTheDefault = 0,\r\n  FuturesPrice = 1,\r\n  OptionsPrice = 2\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies the fallback provision for the hedging party in *\r\n* the determination of the final price.                     *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingReturnRateFinalPriceFallback {\r\n  Close = 0,\r\n  HedgeElection = 1\r\n}\r\n\r\n/*\r\n*********************************************************\r\n* Identifies the source of rate information. For FX the *\r\n* references source to be used for the FX spot rate.    *\r\n*********************************************************\r\n*/\r\nexport enum UnderlyingReturnRateInformationSource {\r\n  Bloomberg = 0,\r\n  Reuters = 1,\r\n  Telerate = 2,\r\n  IsdaSettlementRateOption = 3,\r\n  Other = 99\r\n}\r\n\r\n/*\r\n**********************************\r\n* The basis of the return price. *\r\n**********************************\r\n*/\r\nexport enum UnderlyingReturnRatePriceBasis {\r\n  Gross = 0,\r\n  Net = 1,\r\n  Accrued = 2,\r\n  CleanNet = 3\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Specifies whether the UnderlyingReturnRatePrice(43066) is *\r\n* expressed in absolute or relative terms.                  *\r\n*************************************************************\r\n*/\r\nexport enum UnderlyingReturnRatePriceType {\r\n  AbsoluteTerms = 0,\r\n  PercentageOfNotional = 1\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Specifies the type of return rate valuation date (e.g. *\r\n* adjusted for holidays).                                *\r\n**********************************************************\r\n*/\r\nexport enum UnderlyingReturnRateValuationDateType {\r\n  Unadjusted = 0,\r\n  Adjusted = 1\r\n}\r\n\r\n/*\r\n***************************************************************\r\n* The settlement method election date adjustment business day *\r\n* convention.                                                 *\r\n***************************************************************\r\n*/\r\nexport enum UnderlyingSettlMethodElectionDateBusinessDayConvention {\r\n  NotApplicable = 0,\r\n  NoneCurrentDay = 1,\r\n  FollowingDay = 2,\r\n  FloatingRateNote = 3,\r\n  ModifiedFollowingDay = 4,\r\n  PrecedingDay = 5,\r\n  ModifiedPrecedingDay = 6,\r\n  NearestDay = 7\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Time unit associated with the relative settlement method *\r\n* election date offset.                                    *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingSettlMethodElectionDateOffsetUnit {\r\n  Day = 'D',\r\n  Week = 'Wk',\r\n  Month = 'Mo',\r\n  Year = 'Yr'\r\n}\r\n\r\n/*\r\n************************************************************\r\n* Specifies the day type of the relative settlement method *\r\n* election date offset.                                    *\r\n************************************************************\r\n*/\r\nexport enum UnderlyingSettlMethodElectionDateOffsetDayType {\r\n  Business = 0,\r\n  Calendar = 1,\r\n  CommodityBusiness = 2,\r\n  CurrencyBusiness = 3,\r\n  ExchangeBusiness = 4,\r\n  ScheduledTradingDay = 5\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* For equity swaps this specifies the conditions that govern *\r\n* the adjustment to the number of units of the swap.         *\r\n**************************************************************\r\n*/\r\nexport enum UnderlyingStreamNotionalAdjustments {\r\n  Execution = 0,\r\n  PortfolioRebalancing = 1,\r\n  Standard = 2\r\n}\r\n\r\n/*\r\n**********************************************************\r\n* Indicates the processing mode for a batch of messages. *\r\n**********************************************************\r\n*/\r\nexport enum BatchProcessMode {\r\n  UpdateIncrementalDefaultIfNotSpecified = 0,\r\n  Snapshot = 1\r\n}\r\n\r\n/*\r\n*************************************************************\r\n* Defines the post trade type, e.g. give up, average price, *\r\n* cross exchange give up, etc                               *\r\n*************************************************************\r\n*/\r\nexport enum PostTradeType {\r\n  GiceUp = 0,\r\n  AveragePrice = 1,\r\n  CrossExchangeGiveUp = 2\r\n}\r\n\r\n/*\r\n**************************************************************\r\n* Differentiates between messages sent to the Executing Firm *\r\n* vs. the Claiming Firm.                                     *\r\n**************************************************************\r\n*/\r\nexport enum ExecutingClaimingIndicator {\r\n  ExecutingFirm = 0,\r\n  ClaimingFirm = 1\r\n}\r\n"]}