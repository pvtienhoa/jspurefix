{"version":3,"file":"qf-full-msg.test.js","sourceRoot":"","sources":["../../src/test/qf-full-msg.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path'\r\nimport { AsciiParser, AsciiView, AsciiChars } from '../buffer'\r\nimport { ILooseObject } from '../collections/collection'\r\nimport { FixDefinitions } from '../dictionary'\r\nimport { JsonHelper, getDefinitions } from '../util'\r\nimport { ISessionDescription, SessionMsgFactory, AsciiMsgTransmitter } from '../transport'\r\nimport { JsFixConfig } from '../config'\r\n\r\nlet definitions: FixDefinitions\r\nlet jsonHelper: JsonHelper\r\nlet config: JsFixConfig\r\nconst root: string = path.join(__dirname, '../../data')\r\n\r\nbeforeAll(async () => {\r\n  const sessionDescription: ISessionDescription = require(path.join(root, 'session/qf-fix44.json'))\r\n  definitions = await getDefinitions(sessionDescription.application.dictionary)\r\n  jsonHelper = new JsonHelper(definitions)\r\n  config = new JsFixConfig(new SessionMsgFactory(sessionDescription), definitions, sessionDescription, AsciiChars.Pipe)\r\n}, 45000)\r\n\r\nasync function testEncodeDecode (msgType: string, msg: ILooseObject): Promise<ILooseObject> {\r\n    // encode to FIX format from provided object.\r\n  return new Promise(async (resolve, reject) => {\r\n    let session: AsciiMsgTransmitter = new AsciiMsgTransmitter(config)\r\n    const parser: AsciiParser = new AsciiParser(definitions, session.encodeStream, AsciiChars.Pipe)\r\n    parser.on('msg', (msgType: string, view: AsciiView) => {\r\n      resolve(view.toObject())\r\n    })\r\n    parser.on('error', (e: Error) => {\r\n      reject(e)\r\n    })\r\n    session.send(msgType, msg)\r\n  })\r\n}\r\n\r\ntest('test logon JSON => object => fix => object', async () => {\r\n  const msgType: string = 'A'\r\n  const file: string = path.join(root, 'examples/FIX.4.4/quickfix/logon/object.json')\r\n  const msg: ILooseObject = jsonHelper.fromJson(file, msgType)\r\n  await expect(testEncodeDecode(msgType, msg)).resolves.toEqual(msg)\r\n}, 1000)\r\n\r\ntest('test execution report JSON => object => fix => object', async () => {\r\n  const msgType: string = '8'\r\n  const file: string = path.join(root, 'examples/FIX.4.4/quickfix/execution-report/object.json')\r\n  const msg: ILooseObject = jsonHelper.fromJson(file, msgType)\r\n  await expect(testEncodeDecode(msgType, msg)).resolves.toEqual(msg)\r\n}, 2000)\r\n\r\ntest('test order cxl reject JSON => object => fix => object', async () => {\r\n  const msgType: string = '9'\r\n  const file: string = path.join(root, 'examples/FIX.4.4/quickfix/order-cancel-reject/object.json')\r\n  const msg: ILooseObject = jsonHelper.fromJson(file, msgType)\r\n  await expect(testEncodeDecode(msgType, msg)).resolves.toEqual(msg)\r\n}, 1000)\r\n\r\ntest('test quote request JSON => object => fix => object', async () => {\r\n  const msgType: string = 'R'\r\n  const file: string = path.join(root, 'examples/FIX.4.4/quickfix/quote-request/object.json')\r\n  const msg: ILooseObject = jsonHelper.fromJson(file, msgType)\r\n  await expect(testEncodeDecode(msgType, msg)).resolves.toEqual(msg)\r\n}, 1000)\r\n\r\ntest('test md request JSON => object => fix => object', async () => {\r\n  const msgType: string = 'W'\r\n  const file: string = path.join(root, 'examples/FIX.4.4/quickfix/md-data-snapshot/object.json')\r\n  const msg: ILooseObject = jsonHelper.fromJson(file, msgType)\r\n  await expect(testEncodeDecode(msgType, msg)).resolves.toEqual(msg)\r\n}, 1000)\r\n"]}