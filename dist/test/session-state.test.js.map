{"version":3,"file":"session-state.test.js","sourceRoot":"","sources":["../../src/test/session-state.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { FixSessionState, SessionState, TickAction } from '../transport'\r\n\r\nlet state: FixSessionState\r\nlet now: Date\r\n\r\nbeforeEach(async () => {\r\n  state = new FixSessionState(30)\r\n  state.state = SessionState.PeerLoggedOn\r\n  now = new Date(2018, 0, 1, 20, 0, 0, 0)\r\n  state.LastSentAt = now\r\n  state.lastReceivedAt = now\r\n  state.peerHeartBeatSecs = 30\r\n  state.lastPeerMsgSeqNum = 1\r\n})\r\n\r\ntest('do nothing', () => {\r\n  const action: TickAction = state.calcAction(now)\r\n  expect(action).toEqual(TickAction.Nothing)\r\n})\r\n\r\ntest('heartbeat', () => {\r\n  const next = new Date(now.getTime() + 31 * 1000)\r\n  state.lastReceivedAt = next\r\n  const action: TickAction = state.calcAction(next)\r\n\r\n  expect(state.timeToDie()).toEqual(false)\r\n  expect(state.timeToHeartbeat()).toEqual(true)\r\n  expect(state.timeToTerminate()).toEqual(false)\r\n  expect(state.timeToTestRequest()).toEqual(false)\r\n\r\n  expect(action).toEqual(TickAction.Heartbeat)\r\n})\r\n\r\ntest('testrequest', () => {\r\n  const next = new Date(now.getTime() + 51 * 1000)\r\n  state.LastSentAt = next\r\n  const action: TickAction = state.calcAction(next)\r\n\r\n  expect(state.timeToDie()).toEqual(false)\r\n  expect(state.timeToHeartbeat()).toEqual(false)\r\n  expect(state.timeToTerminate()).toEqual(false)\r\n  expect(state.timeToTestRequest()).toEqual(true)\r\n\r\n  expect(action).toEqual(TickAction.TestRequest)\r\n})\r\n\r\ntest('testrequest - no response', () => {\r\n  const next = new Date(now.getTime() + 55 * 2 * 1000)\r\n  state.LastSentAt = next\r\n  state.lastTestRequestAt = now\r\n  const action: TickAction = state.calcAction(next)\r\n\r\n  expect(state.timeToDie()).toEqual(false)\r\n  expect(state.timeToHeartbeat()).toEqual(false)\r\n  expect(state.timeToTerminate()).toEqual(true)\r\n  expect(state.timeToTestRequest()).toEqual(true)\r\n\r\n  expect(action).toEqual(TickAction.TerminateOnError)\r\n})\r\n\r\ntest('time to die - no logout response', () => {\r\n  const next = new Date(now.getTime() + 20 * 1000)\r\n  state.state = SessionState.WaitingLogoutConfirm\r\n  state.LastSentAt = now\r\n  state.lastReceivedAt = now\r\n  state.logoutSentAt = now\r\n  const action: TickAction = state.calcAction(next)\r\n\r\n  expect(state.timeToDie()).toEqual(true)\r\n  expect(state.timeToHeartbeat()).toEqual(false)\r\n  expect(state.timeToTerminate()).toEqual(false)\r\n  expect(state.timeToTestRequest()).toEqual(false)\r\n\r\n  expect(action).toEqual(TickAction.Stop)\r\n})\r\n"]}