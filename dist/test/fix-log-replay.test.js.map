{"version":3,"file":"fix-log-replay.test.js","sourceRoot":"","sources":["../../src/test/fix-log-replay.test.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6BAA4B;AAE5B,sCAA+C;AAG/C,kCAAuD;AAEvD,MAAM,IAAI,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC,CAAA;AAEvD,IAAI,WAA2B,CAAA;AAC/B,IAAI,KAAgB,CAAA;AACpB,IAAI,QAAsB,CAAA;AAE1B,SAAS,CAAC,GAAS,EAAE;IACnB,MAAM,kBAAkB,GAAwB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC,CAAA;IACvG,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC,CAAA;IAChE,WAAW,GAAG,MAAM,qBAAc,CAAC,kBAAkB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAA;IAC7E,KAAK,GAAG,MAAM,oBAAa,CAAC,WAAW,EAAE,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,0BAA0B,CAAC,EAAE,mBAAU,CAAC,IAAI,CAAC,CAAA;AAC5H,CAAC,CAAA,EAAE,KAAK,CAAC,CAAA;AAET,IAAI,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACrC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;AAClC,CAAC,CAAC,CAAA;AAEF,IAAI,CAAC,6CAA6C,EAAE,GAAG,EAAE;IACvD,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAe,EAAE,MAAe,EAAE,EAAE;QAC/D,MAAM,GAAG,GAAsB,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QAC3E,IAAI,GAAG,EAAE;YACP,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YAC3B,IAAI,CAAC,MAAM,EAAE;gBACX,MAAM,GAAG,CAAC,CAAA;aACX;iBAAM;gBACL,MAAM,EAAE,CAAA;aACT;YACD,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,MAAM,CAAA;SACxB;QACD,OAAO,CAAC,CAAA;IACV,CAAC,EAAE,EAAkB,CAAC,CAAA;IACtB,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;AAClC,CAAC,CAAC,CAAA","sourcesContent":["import * as path from 'path'\r\nimport { FixDefinitions, MessageDefinition } from '../dictionary'\r\nimport { MsgView, AsciiChars } from '../buffer'\r\nimport { ISessionDescription } from '../transport'\r\nimport { ILooseObject } from '../collections/collection'\r\nimport { replayFixFile, getDefinitions } from '../util'\r\n\r\nconst root: string = path.join(__dirname, '../../data')\r\n\r\nlet definitions: FixDefinitions\r\nlet views: MsgView[]\r\nlet expected: ILooseObject\r\n\r\nbeforeAll(async () => {\r\n  const sessionDescription: ISessionDescription = require(path.join(root, 'session/test-initiator.json'))\r\n  expected = require(path.join(root, 'examples/FIX.4.4/fix.json'))\r\n  definitions = await getDefinitions(sessionDescription.application.dictionary)\r\n  views = await replayFixFile(definitions, sessionDescription, path.join(root, 'examples/FIX.4.4/fix.txt'), AsciiChars.Pipe)\r\n}, 45000)\r\n\r\ntest('expect 50 messages in log', () => {\r\n  expect(views.length).toEqual(50)\r\n})\r\n\r\ntest('expect 50 messages of specific types in log', () => {\r\n  const layout = views.reduce((a: ILooseObject, latest: MsgView) => {\r\n    const def: MessageDefinition = definitions.message.get(latest.segment.name)\r\n    if (def) {\r\n      let lookup = a[def.msgType]\r\n      if (!lookup) {\r\n        lookup = 1\r\n      } else {\r\n        lookup++\r\n      }\r\n      a[def.msgType] = lookup\r\n    }\r\n    return a\r\n  }, {} as ILooseObject)\r\n  expect(layout).toEqual(expected)\r\n})\r\n"]}