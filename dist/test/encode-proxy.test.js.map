{"version":3,"file":"encode-proxy.test.js","sourceRoot":"","sources":["../../src/test/encode-proxy.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path'\r\nimport { EncodeProxy, AsciiChars } from '../buffer'\r\nimport { FixDefinitions } from '../dictionary'\r\nimport { ILooseObject } from '../collections/collection'\r\nimport { ISessionDescription, AsciiMsgTransmitter } from '../transport'\r\nimport { JsFixConfig } from '../config'\r\nimport { getDefinitions } from '../util'\r\nconst root: string = path.join(__dirname, '../../data')\r\n\r\nlet definitions: FixDefinitions\r\nlet session: AsciiMsgTransmitter\r\nlet proxyFactory: EncodeProxy\r\n\r\nbeforeAll(async () => {\r\n  const sessionDescription: ISessionDescription = require(path.join(root, 'session/qf-fix44.json'))\r\n  definitions = await getDefinitions(sessionDescription.application.dictionary)\r\n  const config = new JsFixConfig(null, definitions, sessionDescription, AsciiChars.Pipe)\r\n  session = new AsciiMsgTransmitter(config)\r\n  proxyFactory = new EncodeProxy(definitions)\r\n}, 45000)\r\n\r\ntest('check wrapper will reject unknown field', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.Unknown = 999\r\n  }\r\n  expect(run).toThrow(/no field named Unknown/)\r\n})\r\n\r\ntest('check wrapper will accept known field', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.OrderID = 'ipsum'\r\n  }\r\n  run()\r\n  expect(proxy.OrderID).toEqual('ipsum')\r\n})\r\n\r\ntest('check wrapper rejects unknown enum value', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.SettlType = '23'\r\n  }\r\n  expect(run).toThrow(/enum field SettlType does not support \"23\"/)\r\n})\r\n\r\ntest('check wrapper will accept known enum field', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.SettlType = '1'\r\n  }\r\n  run()\r\n  expect(proxy.SettlType).toEqual('1')\r\n})\r\n\r\ntest('check wrapper rejects Date field when not given Date', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.SettlDate = \"I'm not a good date\"\r\n  }\r\n  expect(run).toThrow(/expects Date but receives/)\r\n})\r\n\r\ntest('check wrapper will accept Date field when given Date', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.SettlDate = new Date()\r\n  }\r\n  run()\r\n  expect(proxy.SettlDate).toBeTruthy()\r\n})\r\n\r\ntest('check wrapper rejects boolean field when not given boolean', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.LastRptRequested = \"I'm not a good boolean\"\r\n  }\r\n  expect(run).toThrow(/expects boolean but receives/)\r\n})\r\n\r\ntest('check wrapper will accept boolean field when given boolean', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.LastRptRequested = true\r\n  }\r\n  run()\r\n  expect(proxy.LastRptRequested).toEqual(true)\r\n})\r\n\r\ntest('check wrapper rejects Buffer field when not given Buffer', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.EncodedText = \"I'm not a Buffer, don't accept me!\"\r\n  }\r\n  expect(run).toThrow(/expects Buffer but receives/)\r\n})\r\n\r\ntest('check wrapper will accept Buffer field when given Buffer', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.EncodedText = new Buffer('I am a buffer.', 'utf8')\r\n  }\r\n  run()\r\n  expect(proxy.EncodedText).toBeTruthy()\r\n})\r\n\r\ntest('check wrapper rejects string field when not given string', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.ClOrdID = 123\r\n  }\r\n  expect(run).toThrow(/expects string but receives/)\r\n})\r\n\r\ntest('check wrapper will accept string field when given string', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.ClOrdID = \"I'm a great string\"\r\n  }\r\n  run()\r\n  expect(proxy.ClOrdID).toEqual(\"I'm a great string\")\r\n})\r\n\r\ntest('check wrapper rejects number field when not given number', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.GrossTradeAmt = \"I'm no number\"\r\n  }\r\n  expect(run).toThrow(/expects number but receives/)\r\n})\r\n\r\ntest('check wrapper will accept number field when given number', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.GrossTradeAmt = 12234\r\n  }\r\n  run()\r\n  expect(proxy.GrossTradeAmt).toEqual(12234)\r\n})\r\n\r\ntest('check wrapper rejects non object field when assigning component', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.Parties = 'I should be an object, but I am sadly not'\r\n  }\r\n  expect(run).toThrow(/is a component but/)\r\n})\r\n\r\ntest('check wrapper accepts object field when assigning component', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.Parties = {\r\n    }\r\n  }\r\n  run()\r\n  expect(proxy.Parties).toBeTruthy()\r\n})\r\n\r\ntest('check wrapper when assigned component wraps so it can be checked.', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.YieldData = {\r\n    }\r\n  }\r\n  run()\r\n  function run2 (): void {\r\n    proxy.YieldData.GrossTradeAmt = 999\r\n  }\r\n    // reject this\r\n  expect(run2).toThrow(/no field named GrossTradeAmt/)\r\n  proxy.YieldData.YieldCalcDate = new Date()\r\n    // accept this\r\n  expect(proxy.YieldData).toBeTruthy()\r\n})\r\n\r\ntest('check wrapper when given populated component.', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.YieldData = {\r\n      ClOrdID: \"I don't belong here.\"\r\n    }\r\n  }\r\n    // reject this\r\n  expect(run).toThrow(/no field named ClOrdID/)\r\n})\r\n\r\ntest('check wrapper accepts number for group field and wraps n elements', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.Parties = {\r\n      NoPartyIDs: 2\r\n    }\r\n  }\r\n  run()\r\n  expect(proxy.Parties).toBeTruthy()\r\n  expect(Array.isArray(proxy.Parties.NoPartyIDs)).toEqual(true)\r\n  expect(proxy.Parties.NoPartyIDs.length).toEqual(2)\r\n    // now assign a field, this should also be wrapped\r\n  proxy.Parties.NoPartyIDs[0].PartyID = 'hello'\r\n  expect(proxy.Parties.NoPartyIDs[0].PartyID).toBeTruthy()\r\n  function run2 (): void {\r\n    proxy.Parties.NoPartyIDs[0].GrossTradeAmt = 999\r\n  }\r\n    // reject this\r\n  expect(run2).toThrow(/no field named GrossTradeAmt/)\r\n})\r\n\r\ntest('check wrapper accepts array of objects in group component', () => {\r\n  const proxy: ILooseObject = proxyFactory.wrap('ExecutionReport')\r\n  expect(proxy).toBeTruthy()\r\n  function run (): void {\r\n    proxy.Parties = {\r\n      NoPartyIDs: getParties()\r\n    }\r\n  }\r\n  run()\r\n  function run2 (): void {\r\n    proxy.Parties.NoPartyIDs[0].GrossTradeAmt = 999\r\n  }\r\n    // reject this\r\n  expect(run2).toThrow(/no field named GrossTradeAmt/)\r\n})\r\n\r\nfunction getParties (): ILooseObject {\r\n  return [\r\n    {\r\n      'PartyID': 'magna.',\r\n      'PartyIDSource': '9',\r\n      'PartyRole': 28,\r\n      'PtysSubGrp': {\r\n        'NoPartySubIDs': [\r\n          {\r\n            'PartySubID': 'et',\r\n            'PartySubIDType': 22\r\n          },\r\n          {\r\n            'PartySubID': 'leo,',\r\n            'PartySubIDType': 10\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      'PartyID': 'iaculis',\r\n      'PartyIDSource': 'F',\r\n      'PartyRole': 2,\r\n      'PtysSubGrp': {\r\n        'NoPartySubIDs': [\r\n          {\r\n            'PartySubID': 'Nullam',\r\n            'PartySubIDType': 12\r\n          },\r\n          {\r\n            'PartySubID': 'lectus,',\r\n            'PartySubIDType': 13\r\n          },\r\n          {\r\n            'PartySubID': 'eget',\r\n            'PartySubIDType': 18\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      'PartyID': 'vitae,',\r\n      'PartyIDSource': '9',\r\n      'PartyRole': 5,\r\n      'PtysSubGrp': {\r\n        'NoPartySubIDs': [\r\n          {\r\n            'PartySubID': 'ac',\r\n            'PartySubIDType': 6\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}\r\n"]}