{"version":3,"file":"execution-report.test.js","sourceRoot":"","sources":["../../src/test/execution-report.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path'\r\nimport { SegmentDescription, SegmentType, MsgView, Structure, AsciiChars } from '../buffer'\r\nimport { ILooseObject } from '../collections/collection'\r\nimport { FixDefinitions } from '../dictionary'\r\nimport { ISessionDescription, AsciiMsgTransmitter } from '../transport'\r\nimport { JsFixConfig } from '../config'\r\nimport { IUndInstrmtGrp, IUnderlyingInstrument } from '../types/FIX4.4/quickfix'\r\nimport { replayFixFile, getDefinitions } from '../util'\r\n\r\nconst root: string = path.join(__dirname, '../../data')\r\n\r\nlet definitions: FixDefinitions\r\nlet session: AsciiMsgTransmitter\r\nlet views: MsgView[]\r\nlet structure: Structure\r\n\r\nbeforeAll(async () => {\r\n  const sessionDescription: ISessionDescription = require(path.join(root, 'session/qf-fix44.json'))\r\n  definitions = await getDefinitions(sessionDescription.application.dictionary)\r\n  const config = new JsFixConfig(null, definitions, sessionDescription, AsciiChars.Pipe)\r\n  session = new AsciiMsgTransmitter(config)\r\n  views = await replayFixFile(definitions, sessionDescription, path.join(root, 'examples/FIX.4.4/quickfix/execution-report/fix.txt'), AsciiChars.Pipe)\r\n  if (views && views.length > 0) {\r\n    structure = views[0].structure\r\n  }\r\n}, 45000)\r\n\r\ntest('expect a structure from fix msg', () => {\r\n  expect(structure).toBeTruthy()\r\n})\r\n\r\n/*\r\n[20] 453 (NoPartyIDs) = 3, [21] 448 (PartyID) = magna.\r\n[22] 447 (PartyIDSource) = 9[AUSTRALIAN_BUSINESS_NUMBER], [23] 452 (PartyRole) = 28[CUSTODIAN]\r\n[24] 802 (NoPartySubIDs) = 2, [25] 523 (PartySubID) = et\r\n[26] 803 (PartySubIDType) = 22[SECURITIES_ACCOUNT_NAME], [27] 523 (PartySubID) = leo,\r\n[28] 803 (PartySubIDType) = 10[SECURITIES_ACCOUNT_NUMBER], [29] 448 (PartyID) = iaculis\r\n[30] 447 (PartyIDSource) = F[SETTLEMENT_ENTITY_LOCATION], [31] 452 (PartyRole) = 2[BROKER_OF_CREDIT]\r\n[32] 802 (NoPartySubIDs) = 3, [33] 523 (PartySubID) = Nullam\r\n[34] 803 (PartySubIDType) = 12[REGISTERED_ADDRESS_12], [35] 523 (PartySubID) = lectus,\r\n[36] 803 (PartySubIDType) = 13[REGULATORY_STATUS], [37] 523 (PartySubID) = eget\r\n[38] 803 (PartySubIDType) = 18[REGISTERED_ADDRESS_18], [39] 448 (PartyID) = vitae,\r\n[40] 447 (PartyIDSource) = 9[AUSTRALIAN_BUSINESS_NUMBER], [41] 452 (PartyRole) = 5[INVESTOR_ID]\r\n[42] 802 (NoPartySubIDs) = 1, [43] 523 (PartySubID) = ac\r\n[44] 803 (PartySubIDType) = 6[POSTAL_ADDRESS], [45] 229 (TradeOriginationDate) = 20180528-16:38:03.972\r\n */\r\n\r\ntest('Parties structure', () => {\r\n  const parties: SegmentDescription = structure.layout.Parties\r\n  const noPartyIDs: SegmentDescription = structure.layout.NoPartyIDs\r\n  expect(parties).toBeTruthy()\r\n  expect(parties.startPosition === 20)\r\n  expect(parties.endPosition === 44)\r\n  expect(parties.depth === 1)\r\n  expect(parties.type === SegmentType.Component)\r\n  expect(noPartyIDs.startPosition === 20)\r\n  expect(noPartyIDs.endPosition === 44)\r\n  expect(noPartyIDs.depth === 2)\r\n  expect(parties.type === SegmentType.Group)\r\n})\r\n\r\ntest('Parties PartySubIDType sub-structure', () => {\r\n  const ptysSubGrp: SegmentDescription[] = structure.layout.PtysSubGrp\r\n  expect(ptysSubGrp).toBeTruthy()\r\n  expect(Array.isArray(ptysSubGrp)).toEqual(true)\r\n  expect(ptysSubGrp.length).toEqual(3)\r\n  expect(ptysSubGrp[0].startPosition).toEqual(24)\r\n  expect(ptysSubGrp[0].type).toEqual(SegmentType.Component)\r\n  expect(ptysSubGrp[1].startPosition).toEqual(32)\r\n  expect(ptysSubGrp[1].type).toEqual(SegmentType.Component)\r\n  expect(ptysSubGrp[2].startPosition).toEqual(42)\r\n  expect(ptysSubGrp[2].type).toEqual(SegmentType.Component)\r\n\r\n  const noPartySubIDs: SegmentDescription[] = structure.layout.NoPartySubIDs\r\n  expect(noPartySubIDs).toBeTruthy()\r\n  expect(Array.isArray(noPartySubIDs)).toEqual(true)\r\n  expect(noPartySubIDs.length).toEqual(3)\r\n\r\n  expect(noPartySubIDs[0].delimiterTag).toEqual(523)\r\n  expect(noPartySubIDs[0].type).toEqual(SegmentType.Group)\r\n  expect(noPartySubIDs[0].delimiterPositions).toEqual([25, 27])\r\n  expect(noPartySubIDs[0].depth).toEqual(4)\r\n\r\n  expect(noPartySubIDs[1].delimiterTag).toEqual(523)\r\n  expect(noPartySubIDs[1].type).toEqual(SegmentType.Group)\r\n  expect(noPartySubIDs[1].delimiterPositions).toEqual([33, 35, 37])\r\n  expect(noPartySubIDs[1].depth).toEqual(4)\r\n\r\n  expect(noPartySubIDs[2].delimiterTag).toEqual(523)\r\n  expect(noPartySubIDs[2].type).toEqual(SegmentType.Group)\r\n  expect(noPartySubIDs[2].delimiterPositions).toEqual([43])\r\n  expect(noPartySubIDs[2].depth).toEqual(4)\r\n})\r\n\r\n/*\r\n[46] 382 (NoContraBrokers) = 3, [47] 375 (ContraBroker) = Quisque\r\n[48] 337 (ContraTrader) = tincidunt, [49] 437 (ContraTradeQty) = 18171\r\n[50] 438 (ContraTradeTime) = 20180528-16:38:03.972, [51] 655 (ContraLegRefID) = Class\r\n[52] 375 (ContraBroker) = taciti, [53] 337 (ContraTrader) = ad\r\n[54] 437 (ContraTradeQty) = 91261, [55] 438 (ContraTradeTime) = 20180528-16:38:03.972\r\n[56] 655 (ContraLegRefID) = torquent, [57] 375 (ContraBroker) = conubia\r\n[58] 337 (ContraTrader) = per, [59] 437 (ContraTradeQty) = 97017\r\n[60] 438 (ContraTradeTime) = 20180528-16:38:03.972, [61] 655 (ContraLegRefID) = himenaeos.\r\n */\r\n\r\ntest('ContraGrp structure', () => {\r\n  const contraGrp: SegmentDescription = structure.layout.ContraGrp\r\n  expect(contraGrp).toBeTruthy()\r\n  expect(contraGrp.depth).toEqual(1)\r\n  expect(contraGrp.type).toEqual(SegmentType.Component)\r\n  expect(contraGrp.startPosition).toEqual(46)\r\n  expect(contraGrp.endPosition).toEqual(61)\r\n\r\n  const noContraBrokers: SegmentDescription = structure.layout.NoContraBrokers\r\n  expect(noContraBrokers).toBeTruthy()\r\n  expect(noContraBrokers.depth).toEqual(2)\r\n  expect(noContraBrokers.type).toEqual(SegmentType.Group)\r\n  expect(noContraBrokers.delimiterTag).toEqual(375)\r\n  expect(noContraBrokers.delimiterPositions).toEqual([47, 52, 57])\r\n\r\n})\r\n\r\n/*\r\n[82] 635 (ClearingFeeIndicator) = 5[5TH_YEAR_DELEGATE_TRADING_FOR_HIS_OWN_ACCOUNT], [83] 55 (Symbol) = ac,\r\n[84] 65 (SymbolSfx) = non, [85] 48 (SecurityID) = Pellentesque\r\n[86] 22 (SecurityIDSource) = B[WERTPAPIER], [87] 454 (NoSecurityAltID) = 2\r\n[88] 455 (SecurityAltID) = lorem, [89] 456 (SecurityAltIDSource) = consequat\r\n[90] 455 (SecurityAltID) = sapien, [91] 456 (SecurityAltIDSource) = tempor\r\n[92] 460 (Product) = 2[COMMODITY], [93] 461 (CFICode) = a\r\n[94] 167 (SecurityType) = SECLOAN[SECURITIES_LOAN], [95] 762 (SecuritySubType) = purus\r\n[96] 200 (MaturityMonthYear) = ut, [97] 541 (MaturityDate) = 20180528-16:38:03.972\r\n[98] 201 (PutOrCall) = 1[CALL], [99] 224 (CouponPaymentDate) = 20180528-16:38:03.972\r\n[100] 225 (IssueDate) = 20180528-16:38:03.972, [101] 239 (RepoCollateralSecurityType) = Proin\r\n[102] 226 (RepurchaseTerm) = 62025, [103] 227 (RepurchaseRate) = 27005\r\n[104] 228 (Factor) = 68810, [105] 255 (CreditRating) = justo\r\n[106] 543 (InstrRegistry) = ut, [107] 470 (CountryOfIssue) = nibh\r\n[108] 471 (StateOrProvinceOfIssue) = at., [109] 472 (LocaleOfIssue) = fermentum\r\n[110] 240 (RedemptionDate) = 20180528-16:38:03.972, [111] 202 (StrikePrice) = 52639\r\n[112] 947 (StrikeCurrency) = 50824, [113] 206 (OptAttribute) = risus,\r\n[114] 231 (ContractMultiplier) = 10378, [115] 223 (CouponRate) = 25946\r\n[116] 207 (SecurityExchange) = placerat, [117] 106 (Issuer) = luctus\r\n[118] 348 (EncodedIssuerLen) = 20, [119] 349 (EncodedIssuer) = zqJsegy0CQ8EyKQ1bmLw\r\n[120] 107 (SecurityDesc) = Vivamus, [121] 350 (EncodedSecurityDescLen) = 20\r\n[122] 351 (EncodedSecurityDesc) = A1xB4jDS31E4zM1xAbk5, [123] 691 (Pool) = mi\r\n[124] 667 (ContractSettlMonth) = arcu, [125] 875 (CPProgram) = 2[4]\r\n[126] 876 (CPRegType) = rhoncus, [127] 864 (NoEvents) = 1\r\n[128] 865 (EventType) = 1[PUT], [129] 866 (EventDate) = 20180528-16:38:03.973\r\n[130] 867 (EventPx) = 16817, [131] 868 (EventText) = amet\r\n[132] 873 (DatedDate) = 20180528-16:38:03.973, [133] 874 (InterestAccrualDate) = 20180528-16:38:03.973\r\n */\r\n\r\ntest('Instrument structure', () => {\r\n  const instrument: SegmentDescription = structure.layout.Instrument\r\n  expect(instrument).toBeTruthy()\r\n  expect(instrument.type).toEqual(SegmentType.Component)\r\n  expect(instrument.startPosition).toEqual(83)\r\n  expect(instrument.startTag).toEqual(55)\r\n  expect(instrument.endPosition).toEqual(133)\r\n  expect(instrument.endTag).toEqual(874)\r\n\r\n  const noSecurityAltID: SegmentDescription = structure.layout.NoSecurityAltID\r\n  expect(noSecurityAltID).toBeTruthy()\r\n  expect(noSecurityAltID.type).toEqual(SegmentType.Group)\r\n  expect(noSecurityAltID.delimiterTag).toEqual(455)\r\n  expect(noSecurityAltID.delimiterPositions).toEqual([88, 90])\r\n})\r\n\r\n/*\r\n[134] 913 (AgreementDesc) = sit, [135] 914 (AgreementID) = eleifend\r\n[136] 915 (AgreementDate) = 20180528-16:38:03.973, [137] 918 (AgreementCurrency) = 78552\r\n[138] 788 (TerminationType) = 2[TERM], [139] 916 (StartDate) = 20180528-16:38:03.973\r\n[140] 917 (EndDate) = 20180528-16:38:03.973, [141] 919 (DeliveryType) = 3[HOLD_IN_CUSTODY]\r\n[142] 898 (MarginRatio) = 13625, [143] 711 (NoUnderlyings) = 2\r\n */\r\n\r\ntest('FinancingDetails structure', () => {\r\n  const financingDetails: SegmentDescription = structure.layout.FinancingDetails\r\n  expect(financingDetails).toBeTruthy()\r\n  expect(financingDetails.depth).toEqual(1)\r\n  expect(financingDetails.type).toEqual(SegmentType.Component)\r\n  expect(financingDetails.startPosition).toEqual(134)\r\n  expect(financingDetails.startTag).toEqual(913)\r\n  expect(financingDetails.endPosition).toEqual(142)\r\n  expect(financingDetails.endTag).toEqual(898)\r\n})\r\n\r\n/*\r\n[272] 211 (PegOffsetValue) = 38459, [273] 835 (PegMoveType) = 1[FIXED]\r\n[274] 836 (PegOffsetType) = [undefined], [275] 837 (PegLimitType) = 2\r\n[276] 838 (PegRoundDirection) = 2, [277] 840 (PegScope) = 4[NATIONAL_EXCLUDING_LOCAL]\r\n */\r\n\r\ntest('PegInstructions structure', () => {\r\n  const pegInstructions: SegmentDescription = structure.layout.PegInstructions\r\n  expect(pegInstructions).toBeTruthy()\r\n  expect(pegInstructions.depth).toEqual(1)\r\n  expect(pegInstructions.type).toEqual(SegmentType.Component)\r\n  expect(pegInstructions.startPosition).toEqual(272)\r\n  expect(pegInstructions.startTag).toEqual(211)\r\n  expect(pegInstructions.endPosition).toEqual(277)\r\n  expect(pegInstructions.endTag).toEqual(840)\r\n})\r\n\r\n/*\r\n[278] 388 (DiscretionInst) = 2[RELATED_TO_PRIMARY_PRICE], [279] 389 (DiscretionOffsetValue) = 48430\r\n[280] 841 (DiscretionMoveType) = 1[FIXED], [281] 842 (DiscretionOffsetType) = 3[PRICE_TIER]\r\n[282] 843 (DiscretionLimitType) = 2, [283] 844 (DiscretionRoundDirection) = 2\r\n[284] 846 (DiscretionScope) = 4[NATIONAL_EXCLUDING_LOCAL], [285] 839 (PeggedPrice) = 18644\r\n */\r\n\r\ntest('DiscretionInstructions structure', () => {\r\n  const discretionInstructions: SegmentDescription = structure.layout.DiscretionInstructions\r\n  expect(discretionInstructions).toBeTruthy()\r\n  expect(discretionInstructions.depth).toEqual(1)\r\n  expect(discretionInstructions.type).toEqual(SegmentType.Component)\r\n  expect(discretionInstructions.startPosition).toEqual(278)\r\n  expect(discretionInstructions.startTag).toEqual(388)\r\n  expect(discretionInstructions.endPosition).toEqual(284)\r\n  expect(discretionInstructions.endTag).toEqual(846)\r\n})\r\n\r\n/*\r\n[324] 12 (Commission) = 3339, [325] 13 (CommType) = 1[PER_UNIT]\r\n[326] 479 (CommCurrency) = 25841, [327] 497 (FundRenewWaiv) = N[NO]\r\n */\r\ntest('CommissionData structure', () => {\r\n  const commisionData: SegmentDescription = structure.layout.CommissionData\r\n  expect(commisionData).toBeTruthy()\r\n  expect(commisionData.depth).toEqual(1)\r\n  expect(commisionData.type).toEqual(SegmentType.Component)\r\n  expect(commisionData.startPosition).toEqual(324)\r\n  expect(commisionData.startTag).toEqual(12)\r\n  expect(commisionData.endPosition).toEqual(327)\r\n  expect(commisionData.endTag).toEqual(497)\r\n})\r\n\r\n/*\r\n[328] 218 (Spread) = 72687, [329] 220 (BenchmarkCurveCurrency) = 84249\r\n[330] 221 (BenchmarkCurveName) = Pellentesque, [331] 222 (BenchmarkCurvePoint) = luctus\r\n[332] 662 (BenchmarkPrice) = 90721, [333] 663 (BenchmarkPriceType) = 66615\r\n[334] 699 (BenchmarkSecurityID) = et, [335] 761 (BenchmarkSecurityIDSource) = nunc.\r\n */\r\n\r\ntest('SpreadOrBenchmarkCurveData structure', () => {\r\n  const spreadBenchData: SegmentDescription = structure.layout.SpreadOrBenchmarkCurveData\r\n  expect(spreadBenchData).toBeTruthy()\r\n  expect(spreadBenchData.depth).toEqual(1)\r\n  expect(spreadBenchData.type).toEqual(SegmentType.Component)\r\n  expect(spreadBenchData.startPosition).toEqual(328)\r\n  expect(spreadBenchData.startTag).toEqual(218)\r\n  expect(spreadBenchData.endPosition).toEqual(335)\r\n  expect(spreadBenchData.endTag).toEqual(761)\r\n})\r\n\r\n/*\r\n[336] 235 (YieldType) = INVERSEFLOATER[INVERSE_FLOATER_BOND_YIELD], [337] 236 (Yield) = 34183\r\n[338] 701 (YieldCalcDate) = 20180528-16:38:03.973, [339] 696 (YieldRedemptionDate) = 20180528-16:38:03.973\r\n[340] 697 (YieldRedemptionPrice) = 3652, [341] 698 (YieldRedemptionPriceType) = 10535\r\n */\r\n\r\ntest('YieldData structure', () => {\r\n  const yieldData: SegmentDescription = structure.layout.YieldData\r\n  expect(yieldData).toBeTruthy()\r\n  expect(yieldData.depth).toEqual(1)\r\n  expect(yieldData.type).toEqual(SegmentType.Component)\r\n  expect(yieldData.startPosition).toEqual(336)\r\n  expect(yieldData.startTag).toEqual(235)\r\n  expect(yieldData.endPosition).toEqual(341)\r\n  expect(yieldData.endTag).toEqual(698)\r\n})\r\n\r\n/*\r\n[384] 851 (LastLiquidityInd) = 3[LIQUIDITY_ROUTED_OUT], [385] 518 (NoContAmts) = 3\r\n[386] 519 (ContAmtType) = 5[DISCOUNT_AMOUNT], [387] 520 (ContAmtValue) = 95673\r\n[388] 521 (ContAmtCurr) = 87528, [389] 519 (ContAmtType) = 14[FUND_BASED_RENEWAL_COMMISSION_AMOUNT_14]\r\n[390] 520 (ContAmtValue) = 56344, [391] 521 (ContAmtCurr) = 46066\r\n[392] 519 (ContAmtType) = 11[FUND_BASED_RENEWAL_COMMISSION], [393] 520 (ContAmtValue) = 94762\r\n[394] 521 (ContAmtCurr) = 6779, [395] 555 (NoLegs) = 3\r\n */\r\n\r\ntest('ContAmtGrp structure', () => {\r\n  const contAmtGrp: SegmentDescription = structure.layout.ContAmtGrp\r\n  expect(contAmtGrp).toBeTruthy()\r\n  expect(contAmtGrp.depth).toEqual(1)\r\n  expect(contAmtGrp.type).toEqual(SegmentType.Component)\r\n  expect(contAmtGrp.startPosition).toEqual(385)\r\n  expect(contAmtGrp.startTag).toEqual(518)\r\n  expect(contAmtGrp.endPosition).toEqual(394)\r\n  expect(contAmtGrp.endTag).toEqual(521)\r\n\r\n  const noContAmts: SegmentDescription = structure.layout.NoContAmts\r\n  expect(noContAmts).toBeTruthy()\r\n  expect(noContAmts.depth).toEqual(2)\r\n  expect(noContAmts.type).toEqual(SegmentType.Group)\r\n  expect(noContAmts.startPosition).toEqual(385)\r\n  expect(noContAmts.startTag).toEqual(518)\r\n  expect(noContAmts.endPosition).toEqual(394)\r\n  expect(noContAmts.endTag).toEqual(521)\r\n  expect(noContAmts.delimiterTag).toEqual(519)\r\n  expect(noContAmts.delimiterPositions).toEqual([386, 389, 392])\r\n})\r\n\r\n/*\r\n[636] 136 (NoMiscFees) = 2, [637] 137 (MiscFeeAmt) = 56059\r\n[638] 138 (MiscFeeCurr) = 92115, [639] 139 (MiscFeeType) = 7[OTHER]\r\n[640] 891 (MiscFeeBasis) = [undefined], [641] 137 (MiscFeeAmt) = 93185\r\n[642] 138 (MiscFeeCurr) = 72195, [643] 139 (MiscFeeType) = 12[AGENT]\r\n[644] 891 (MiscFeeBasis) = [undefined], [645] 10 (CheckSum) = 59\r\n */\r\n\r\ntest('MiscFeesGrp structure', () => {\r\n  const miscFees: SegmentDescription = structure.layout.MiscFeesGrp\r\n  expect(miscFees).toBeTruthy()\r\n  expect(miscFees.depth).toEqual(1)\r\n  expect(miscFees.type).toEqual(SegmentType.Component)\r\n  expect(miscFees.startPosition).toEqual(636)\r\n  expect(miscFees.startTag).toEqual(136)\r\n  expect(miscFees.endPosition).toEqual(644)\r\n  expect(miscFees.endTag).toEqual(891)\r\n\r\n  const noMiscfees: SegmentDescription = structure.layout.NoMiscFees\r\n  expect(noMiscfees).toBeTruthy()\r\n  expect(noMiscfees.depth).toEqual(2)\r\n  expect(noMiscfees.type).toEqual(SegmentType.Group)\r\n  expect(noMiscfees.startPosition).toEqual(636)\r\n  expect(noMiscfees.startTag).toEqual(136)\r\n  expect(noMiscfees.endPosition).toEqual(644)\r\n  expect(noMiscfees.endTag).toEqual(891)\r\n  expect(noMiscfees.delimiterTag).toEqual(137)\r\n  expect(noMiscfees.delimiterPositions).toEqual([637, 641])\r\n})\r\n\r\n/*\r\n[142] 898 (MarginRatio) = 13625, [143] 711 (NoUnderlyings) = 2\r\n[144] 311 (UnderlyingSymbol) = massa., [145] 312 (UnderlyingSymbolSfx) = metus\r\n[146] 309 (UnderlyingSecurityID) = maximus, [147] 305 (UnderlyingSecurityIDSource) = facilisis\r\n[148] 457 (NoUnderlyingSecurityAltID) = 3, [149] 458 (UnderlyingSecurityAltID) = ornare\r\n[150] 459 (UnderlyingSecurityAltIDSource) = magna., [151] 458 (UnderlyingSecurityAltID) = non\r\n[152] 459 (UnderlyingSecurityAltIDSource) = at, [153] 458 (UnderlyingSecurityAltID) = hendrerit\r\n[154] 459 (UnderlyingSecurityAltIDSource) = Pellentesque, [155] 462 (UnderlyingProduct) = 89682\r\n[156] 463 (UnderlyingCFICode) = arcu,, [157] 310 (UnderlyingSecurityType) = eu\r\n[158] 763 (UnderlyingSecuritySubType) = vitae,, [159] 313 (UnderlyingMaturityMonthYear) = ut\r\n[160] 542 (UnderlyingMaturityDate) = 20180528-16:38:03.973, [161] 315 (UnderlyingPutOrCall) = 81619\r\n[162] 241 (UnderlyingCouponPaymentDate) = 20180528-16:38:03.973, [163] 242 (UnderlyingIssueDate) = 20180528-16:38:03.973\r\n[164] 243 (UnderlyingRepoCollateralSecurityType) = Aliquam, [165] 244 (UnderlyingRepurchaseTerm) = 1819\r\n[166] 245 (UnderlyingRepurchaseRate) = 12004, [167] 246 (UnderlyingFactor) = 81916\r\n[168] 256 (UnderlyingCreditRating) = erat, [169] 595 (UnderlyingInstrRegistry) = tellus\r\n[170] 592 (UnderlyingCountryOfIssue) = in, [171] 593 (UnderlyingStateOrProvinceOfIssue) = nisi\r\n[172] 594 (UnderlyingLocaleOfIssue) = Interdum, [173] 247 (UnderlyingRedemptionDate) = 20180528-16:38:03.973\r\n[174] 316 (UnderlyingStrikePrice) = 46328, [175] 941 (UnderlyingStrikeCurrency) = 21536\r\n[176] 317 (UnderlyingOptAttribute) = malesuada, [177] 436 (UnderlyingContractMultiplier) = 83404\r\n[178] 435 (UnderlyingCouponRate) = 1709, [179] 308 (UnderlyingSecurityExchange) = ac\r\n[180] 306 (UnderlyingIssuer) = ipsum, [181] 362 (EncodedUnderlyingIssuerLen) = 20\r\n[182] 363 (EncodedUnderlyingIssuer) = gJ40LPqdkNUGQxMisPLk, [183] 307 (UnderlyingSecurityDesc) = in\r\n[184] 364 (EncodedUnderlyingSecurityDescLen) = 20, [185] 365 (EncodedUnderlyingSecurityDesc) = RUQjbmg6gsPoWBsuwDCh\r\n[186] 877 (UnderlyingCPProgram) = Ut, [187] 878 (UnderlyingCPRegType) = massa\r\n[188] 318 (UnderlyingCurrency) = 47704, [189] 879 (UnderlyingQty) = 31703\r\n[190] 810 (UnderlyingPx) = 60977, [191] 882 (UnderlyingDirtyPrice) = 67361\r\n[192] 883 (UnderlyingEndPrice) = 51785, [193] 884 (UnderlyingStartValue) = 80625\r\n[194] 885 (UnderlyingCurrentValue) = 29888, [195] 886 (UnderlyingEndValue) = 49266\r\n[196] 887 (NoUnderlyingStips) = 3, [197] 888 (UnderlyingStipType) = cursus\r\n[198] 889 (UnderlyingStipValue) = Vivamus, [199] 888 (UnderlyingStipType) = convallis\r\n[200] 889 (UnderlyingStipValue) = nec, [201] 888 (UnderlyingStipType) = urna\r\n[202] 889 (UnderlyingStipValue) = vitae., [203] 311 (UnderlyingSymbol) = erat\r\n[204] 312 (UnderlyingSymbolSfx) = In, [205] 309 (UnderlyingSecurityID) = feugiat\r\n[206] 305 (UnderlyingSecurityIDSource) = ut, [207] 457 (NoUnderlyingSecurityAltID) = 1\r\n[208] 458 (UnderlyingSecurityAltID) = Quisque, [209] 459 (UnderlyingSecurityAltIDSource) = tortor\r\n[210] 462 (UnderlyingProduct) = 36068, [211] 463 (UnderlyingCFICode) = est\r\n[212] 310 (UnderlyingSecurityType) = Lorem, [213] 763 (UnderlyingSecuritySubType) = dolor\r\n[214] 313 (UnderlyingMaturityMonthYear) = amet,, [215] 542 (UnderlyingMaturityDate) = 20180528-16:38:03.973\r\n[216] 315 (UnderlyingPutOrCall) = 94032, [217] 241 (UnderlyingCouponPaymentDate) = 20180528-16:38:03.973\r\n[218] 242 (UnderlyingIssueDate) = 20180528-16:38:03.973, [219] 243 (UnderlyingRepoCollateralSecurityType) = adipiscing\r\n[220] 244 (UnderlyingRepurchaseTerm) = 17712, [221] 245 (UnderlyingRepurchaseRate) = 95092\r\n[222] 246 (UnderlyingFactor) = 82914, [223] 256 (UnderlyingCreditRating) = Nunc\r\n[224] 595 (UnderlyingInstrRegistry) = orci,, [225] 592 (UnderlyingCountryOfIssue) = vel\r\n[226] 593 (UnderlyingStateOrProvinceOfIssue) = sed,, [227] 594 (UnderlyingLocaleOfIssue) = cursus\r\n[228] 247 (UnderlyingRedemptionDate) = 20180528-16:38:03.973, [229] 316 (UnderlyingStrikePrice) = 84513\r\n[230] 941 (UnderlyingStrikeCurrency) = 31556, [231] 317 (UnderlyingOptAttribute) = Aenean\r\n[232] 436 (UnderlyingContractMultiplier) = 8879, [233] 435 (UnderlyingCouponRate) = 68005\r\n[234] 308 (UnderlyingSecurityExchange) = diam, [235] 306 (UnderlyingIssuer) = Aenean\r\n[236] 362 (EncodedUnderlyingIssuerLen) = 20, [237] 363 (EncodedUnderlyingIssuer) = VxRjId4eWuuNiBYgjNpp\r\n[238] 307 (UnderlyingSecurityDesc) = viverra, [239] 364 (EncodedUnderlyingSecurityDescLen) = 20\r\n[240] 365 (EncodedUnderlyingSecurityDesc) = fwlY5CmVswvapjFalVLb, [241] 877 (UnderlyingCPProgram) = non\r\n[242] 878 (UnderlyingCPRegType) = neque., [243] 318 (UnderlyingCurrency) = 53806\r\n[244] 879 (UnderlyingQty) = 26390, [245] 810 (UnderlyingPx) = 32442\r\n[246] 882 (UnderlyingDirtyPrice) = 82617, [247] 883 (UnderlyingEndPrice) = 86326\r\n[248] 884 (UnderlyingStartValue) = 34911, [249] 885 (UnderlyingCurrentValue) = 46867\r\n[250] 886 (UnderlyingEndValue) = 94014, [251] 887 (NoUnderlyingStips) = 3\r\n[252] 888 (UnderlyingStipType) = arcu, [253] 889 (UnderlyingStipValue) = dignissim\r\n[254] 888 (UnderlyingStipType) = auctor, [255] 889 (UnderlyingStipValue) = maximus\r\n[256] 888 (UnderlyingStipType) = quam., [257] 889 (UnderlyingStipValue) = varius\r\n */\r\n\r\ntest('UndInstrmtGrp structure', () => {\r\n  const undInstrmtGrp: SegmentDescription = structure.layout.UndInstrmtGrp\r\n  expect(undInstrmtGrp).toBeTruthy()\r\n  expect(undInstrmtGrp.type).toEqual(SegmentType.Component)\r\n  expect(undInstrmtGrp.startPosition).toEqual(143)\r\n  expect(undInstrmtGrp.startTag).toEqual(711)\r\n  expect(undInstrmtGrp.endPosition).toEqual(257)\r\n  expect(undInstrmtGrp.endTag).toEqual(889)\r\n  expect(undInstrmtGrp.depth).toEqual(1)\r\n\r\n  const noUnderlyings: SegmentDescription = structure.layout.NoUnderlyings\r\n  expect(noUnderlyings).toBeTruthy()\r\n  expect(noUnderlyings.delimiterTag).toEqual(311)\r\n  expect(noUnderlyings.delimiterPositions).toEqual([144, 203])\r\n  expect(noUnderlyings.depth).toEqual(2)\r\n  expect(noUnderlyings.type).toEqual(SegmentType.Group)\r\n\r\n  const underlyingInstrument: SegmentDescription[] = structure.layout.UnderlyingInstrument\r\n  expect(underlyingInstrument).toBeTruthy()\r\n  expect(underlyingInstrument.length).toEqual(2)\r\n  expect(underlyingInstrument).toBeTruthy()\r\n\r\n  expect(underlyingInstrument[0].startPosition).toEqual(144)\r\n  expect(underlyingInstrument[0].startTag).toEqual(311)\r\n  expect(underlyingInstrument[0].endPosition).toEqual(202)\r\n  expect(underlyingInstrument[0].endTag).toEqual(889)\r\n  expect(underlyingInstrument[0].depth).toEqual(3)\r\n  expect(underlyingInstrument[0].type).toEqual(SegmentType.Component)\r\n\r\n  expect(underlyingInstrument[1].startPosition).toEqual(203)\r\n  expect(underlyingInstrument[1].startTag).toEqual(311)\r\n  expect(underlyingInstrument[1].endPosition).toEqual(257)\r\n  expect(underlyingInstrument[1].endTag).toEqual(889)\r\n  expect(underlyingInstrument[1].depth).toEqual(3)\r\n  expect(underlyingInstrument[1].type).toEqual(SegmentType.Component)\r\n\r\n  const undSecAltIDGrp: SegmentDescription[] = structure.layout.UndSecAltIDGrp\r\n  expect(undSecAltIDGrp.length).toEqual(2)\r\n  expect(undSecAltIDGrp[0].startPosition).toEqual(148)\r\n  expect(undSecAltIDGrp[0].startTag).toEqual(457)\r\n  expect(undSecAltIDGrp[0].endPosition).toEqual(154)\r\n  expect(undSecAltIDGrp[0].endTag).toEqual(459)\r\n  expect(undSecAltIDGrp[0].depth).toEqual(4)\r\n  expect(undSecAltIDGrp[0].type).toEqual(SegmentType.Component)\r\n\r\n  expect(undSecAltIDGrp[1].startPosition).toEqual(207)\r\n  expect(undSecAltIDGrp[1].startTag).toEqual(457)\r\n  expect(undSecAltIDGrp[1].endPosition).toEqual(209)\r\n  expect(undSecAltIDGrp[1].endTag).toEqual(459)\r\n  expect(undSecAltIDGrp[1].depth).toEqual(4)\r\n  expect(undSecAltIDGrp[1].type).toEqual(SegmentType.Component)\r\n\r\n  const noUnderlyingSecurityAltID: SegmentDescription[] = structure.layout.NoUnderlyingSecurityAltID\r\n  expect(noUnderlyingSecurityAltID.length).toEqual(2)\r\n  expect(noUnderlyingSecurityAltID).toBeTruthy()\r\n\r\n  expect(noUnderlyingSecurityAltID[0].depth).toEqual(5)\r\n  expect(noUnderlyingSecurityAltID[0].delimiterTag).toEqual(458)\r\n  expect(noUnderlyingSecurityAltID[0].type).toEqual(SegmentType.Group)\r\n  expect(noUnderlyingSecurityAltID[0].startPosition).toEqual(148)\r\n  expect(noUnderlyingSecurityAltID[0].endPosition).toEqual(154)\r\n  expect(noUnderlyingSecurityAltID[0].delimiterPositions).toEqual([149, 151, 153])\r\n\r\n  expect(noUnderlyingSecurityAltID[1].depth).toEqual(5)\r\n  expect(noUnderlyingSecurityAltID[1].delimiterTag).toEqual(458)\r\n  expect(noUnderlyingSecurityAltID[1].type).toEqual(SegmentType.Group)\r\n  expect(noUnderlyingSecurityAltID[1].startPosition).toEqual(207)\r\n  expect(noUnderlyingSecurityAltID[1].endPosition).toEqual(209)\r\n  expect(noUnderlyingSecurityAltID[1].delimiterPositions).toEqual([208])\r\n\r\n  const boundNoUnderlyingSecurityAltID: SegmentDescription = structure.firstContainedWithin(\r\n        'NoUnderlyingSecurityAltID',\r\n        underlyingInstrument[1])\r\n  expect(boundNoUnderlyingSecurityAltID).toBeTruthy()\r\n})\r\n\r\n/*\r\n[394] 521 (ContAmtCurr) = 6779, [395] 555 (NoLegs) = 3\r\n[396] 600 (LegSymbol) = posuere, [397] 601 (LegSymbolSfx) = nibh.\r\n[398] 602 (LegSecurityID) = ornare,, [399] 603 (LegSecurityIDSource) = semper\r\n[400] 604 (NoLegSecurityAltID) = 3, [401] 605 (LegSecurityAltID) = laoreet,\r\n[402] 606 (LegSecurityAltIDSource) = odio, [403] 605 (LegSecurityAltID) = velit,\r\n[404] 606 (LegSecurityAltIDSource) = sollicitudin, [405] 605 (LegSecurityAltID) = augue\r\n[406] 606 (LegSecurityAltIDSource) = odio., [407] 607 (LegProduct) = 12438\r\n[408] 608 (LegCFICode) = tempor, [409] 609 (LegSecurityType) = nisi,\r\n[410] 764 (LegSecuritySubType) = euismod, [411] 610 (LegMaturityMonthYear) = convallis\r\n[412] 611 (LegMaturityDate) = 20180528-16:38:03.973, [413] 248 (LegCouponPaymentDate) = 20180528-16:38:03.973\r\n[414] 249 (LegIssueDate) = 20180528-16:38:03.973, [415] 250 (LegRepoCollateralSecurityType) = Donec\r\n[416] 251 (LegRepurchaseTerm) = 50636, [417] 252 (LegRepurchaseRate) = 29567\r\n[418] 253 (LegFactor) = 12603, [419] 257 (LegCreditRating) = erat\r\n[420] 599 (LegInstrRegistry) = vel, [421] 596 (LegCountryOfIssue) = nulla\r\n[422] 597 (LegStateOrProvinceOfIssue) = ac., [423] 598 (LegLocaleOfIssue) = vel\r\n[424] 254 (LegRedemptionDate) = 20180528-16:38:03.973, [425] 612 (LegStrikePrice) = 45964\r\n[426] 942 (LegStrikeCurrency) = 52294, [427] 613 (LegOptAttribute) = eros.\r\n[428] 614 (LegContractMultiplier) = 15566, [429] 615 (LegCouponRate) = 29897\r\n[430] 616 (LegSecurityExchange) = urna,, [431] 617 (LegIssuer) = sit\r\n[432] 618 (EncodedLegIssuerLen) = 20, [433] 619 (EncodedLegIssuer) = bsCdR5NlOBXt99NrTSbA\r\n[434] 620 (LegSecurityDesc) = bibendum, [435] 621 (EncodedLegSecurityDescLen) = 20\r\n[436] 622 (EncodedLegSecurityDesc) = 3Mzh9ClDlcxCLLtgAZ0x, [437] 623 (LegRatioQty) = 47570\r\n[438] 624 (LegSide) = amet,, [439] 556 (LegCurrency) = 18817\r\n[440] 740 (LegPool) = non, [441] 739 (LegDatedDate) = 20180528-16:38:03.973\r\n[442] 955 (LegContractSettlMonth) = Nam, [443] 956 (LegInterestAccrualDate) = 20180528-16:38:03.973\r\n[444] 687 (LegQty) = 38413, [445] 690 (LegSwapType) = 4[RISK]\r\n[446] 683 (NoLegStipulations) = 2, [447] 688 (LegStipulationType) = mi,\r\n[448] 689 (LegStipulationValue) = et, [449] 688 (LegStipulationType) = in,\r\n[450] 689 (LegStipulationValue) = sed, [451] 564 (LegPositionEffect) = Nulla\r\n[452] 565 (LegCoveredOrUncovered) = 45098, [453] 539 (NoNestedPartyIDs) = 1\r\n[454] 524 (NestedPartyID) = leo, [455] 525 (NestedPartyIDSource) = odio\r\n[456] 538 (NestedPartyRole) = 59224, [457] 804 (NoNestedPartySubIDs) = 1\r\n[458] 545 (NestedPartySubID) = placerat., [459] 805 (NestedPartySubIDType) = 83297\r\n[460] 654 (LegRefID) = felis, [461] 566 (LegPrice) = 39429\r\n[462] 587 (LegSettlType) = elementum, [463] 588 (LegSettlDate) = 20180528-16:38:03.973\r\n[464] 637 (LegLastPx) = 75387, [465] 600 (LegSymbol) = mollis\r\n[466] 601 (LegSymbolSfx) = euismod, [467] 602 (LegSecurityID) = diam.\r\n[468] 603 (LegSecurityIDSource) = porttitor, [469] 604 (NoLegSecurityAltID) = 3\r\n[470] 605 (LegSecurityAltID) = eget, [471] 606 (LegSecurityAltIDSource) = cursus,\r\n[472] 605 (LegSecurityAltID) = hendrerit, [473] 606 (LegSecurityAltIDSource) = tempus.\r\n[474] 605 (LegSecurityAltID) = et, [475] 606 (LegSecurityAltIDSource) = fames\r\n[476] 607 (LegProduct) = 6990, [477] 608 (LegCFICode) = ante\r\n[478] 609 (LegSecurityType) = primis, [479] 764 (LegSecuritySubType) = faucibus.\r\n[480] 610 (LegMaturityMonthYear) = egestas, [481] 611 (LegMaturityDate) = 20180528-16:38:03.973\r\n[482] 248 (LegCouponPaymentDate) = 20180528-16:38:03.973, [483] 249 (LegIssueDate) = 20180528-16:38:03.973\r\n[484] 250 (LegRepoCollateralSecurityType) = ac, [485] 251 (LegRepurchaseTerm) = 58397\r\n[486] 252 (LegRepurchaseRate) = 22917, [487] 253 (LegFactor) = 96132\r\n[488] 257 (LegCreditRating) = semper., [489] 599 (LegInstrRegistry) = rhoncus\r\n[490] 596 (LegCountryOfIssue) = nulla,, [491] 597 (LegStateOrProvinceOfIssue) = ornare\r\n[492] 598 (LegLocaleOfIssue) = iaculis, [493] 254 (LegRedemptionDate) = 20180528-16:38:03.973\r\n[494] 612 (LegStrikePrice) = 86522, [495] 942 (LegStrikeCurrency) = 3727\r\n[496] 613 (LegOptAttribute) = Aliquam, [497] 614 (LegContractMultiplier) = 18485\r\n[498] 615 (LegCouponRate) = 36169, [499] 616 (LegSecurityExchange) = volutpat.\r\n[500] 617 (LegIssuer) = condimentum, [501] 618 (EncodedLegIssuerLen) = 20\r\n[502] 619 (EncodedLegIssuer) = P813lip75NKBgG1C8re8, [503] 620 (LegSecurityDesc) = sem\r\n[504] 621 (EncodedLegSecurityDescLen) = 20, [505] 622 (EncodedLegSecurityDesc) = 8qbetIHVFcKFS7EY3XOK\r\n[506] 623 (LegRatioQty) = 42919, [507] 624 (LegSide) = porttitor.\r\n[508] 556 (LegCurrency) = 34832, [509] 740 (LegPool) = pellentesque\r\n[510] 739 (LegDatedDate) = 20180528-16:38:03.973, [511] 955 (LegContractSettlMonth) = eget\r\n[512] 956 (LegInterestAccrualDate) = 20180528-16:38:03.973, [513] 687 (LegQty) = 16560\r\n[514] 690 (LegSwapType) = 1[PAR_FOR_PAR], [515] 683 (NoLegStipulations) = 3\r\n[516] 688 (LegStipulationType) = tincidunt, [517] 689 (LegStipulationValue) = ipsum\r\n[518] 688 (LegStipulationType) = sit, [519] 689 (LegStipulationValue) = consectetur\r\n[520] 688 (LegStipulationType) = elit., [521] 689 (LegStipulationValue) = odio\r\n[522] 564 (LegPositionEffect) = blandit, [523] 565 (LegCoveredOrUncovered) = 61021\r\n[524] 539 (NoNestedPartyIDs) = 3, [525] 524 (NestedPartyID) = semper\r\n[526] 525 (NestedPartyIDSource) = bibendum, [527] 538 (NestedPartyRole) = 33332\r\n[528] 804 (NoNestedPartySubIDs) = 1, [529] 545 (NestedPartySubID) = lectus.\r\n[530] 805 (NestedPartySubIDType) = 78292, [531] 524 (NestedPartyID) = vel\r\n[532] 525 (NestedPartyIDSource) = magna., [533] 538 (NestedPartyRole) = 8563\r\n[534] 804 (NoNestedPartySubIDs) = 3, [535] 545 (NestedPartySubID) = et\r\n[536] 805 (NestedPartySubIDType) = 91784, [537] 545 (NestedPartySubID) = leo,\r\n[538] 805 (NestedPartySubIDType) = 69741, [539] 545 (NestedPartySubID) = iaculis\r\n[540] 805 (NestedPartySubIDType) = 88660, [541] 524 (NestedPartyID) = Nullam\r\n[542] 525 (NestedPartyIDSource) = lectus,, [543] 538 (NestedPartyRole) = 92219\r\n[544] 804 (NoNestedPartySubIDs) = 2, [545] 545 (NestedPartySubID) = eget\r\n[546] 805 (NestedPartySubIDType) = 61048, [547] 545 (NestedPartySubID) = vitae,\r\n[548] 805 (NestedPartySubIDType) = 82229, [549] 654 (LegRefID) = ac\r\n[550] 566 (LegPrice) = 87104, [551] 587 (LegSettlType) = Quisque\r\n[552] 588 (LegSettlDate) = 20180528-16:38:03.974, [553] 637 (LegLastPx) = 56182\r\n[554] 600 (LegSymbol) = tincidunt, [555] 601 (LegSymbolSfx) = Class\r\n[556] 602 (LegSecurityID) = taciti, [557] 603 (LegSecurityIDSource) = ad\r\n[558] 604 (NoLegSecurityAltID) = 3, [559] 605 (LegSecurityAltID) = torquent\r\n[560] 606 (LegSecurityAltIDSource) = conubia, [561] 605 (LegSecurityAltID) = per\r\n[562] 606 (LegSecurityAltIDSource) = himenaeos., [563] 605 (LegSecurityAltID) = eu\r\n[564] 606 (LegSecurityAltIDSource) = risus,, [565] 607 (LegProduct) = 36203\r\n[566] 608 (LegCFICode) = tincidunt, [567] 609 (LegSecurityType) = Morbi\r\n[568] 764 (LegSecuritySubType) = mi,, [569] 610 (LegMaturityMonthYear) = vel\r\n[570] 611 (LegMaturityDate) = 20180528-16:38:03.974, [571] 248 (LegCouponPaymentDate) = 20180528-16:38:03.974\r\n[572] 249 (LegIssueDate) = 20180528-16:38:03.974, [573] 250 (LegRepoCollateralSecurityType) = ac,\r\n[574] 251 (LegRepurchaseTerm) = 89976, [575] 252 (LegRepurchaseRate) = 16951\r\n[576] 253 (LegFactor) = 28912, [577] 257 (LegCreditRating) = non\r\n[578] 599 (LegInstrRegistry) = Pellentesque, [579] 596 (LegCountryOfIssue) = lorem\r\n[580] 597 (LegStateOrProvinceOfIssue) = consequat, [581] 598 (LegLocaleOfIssue) = sapien\r\n[582] 254 (LegRedemptionDate) = 20180528-16:38:03.974, [583] 612 (LegStrikePrice) = 97965\r\n[584] 942 (LegStrikeCurrency) = 62977, [585] 613 (LegOptAttribute) = tempor\r\n[586] 614 (LegContractMultiplier) = 4694, [587] 615 (LegCouponRate) = 20263\r\n[588] 616 (LegSecurityExchange) = a, [589] 617 (LegIssuer) = purus\r\n[590] 618 (EncodedLegIssuerLen) = 20, [591] 619 (EncodedLegIssuer) = Z2GKqFkA713xSVG2nqOx\r\n[592] 620 (LegSecurityDesc) = ut, [593] 621 (EncodedLegSecurityDescLen) = 20\r\n[594] 622 (EncodedLegSecurityDesc) = lyQLPxezPpjDNJnvSnCo, [595] 623 (LegRatioQty) = 24444\r\n[596] 624 (LegSide) = Proin, [597] 556 (LegCurrency) = 86893\r\n[598] 740 (LegPool) = justo, [599] 739 (LegDatedDate) = 20180528-16:38:03.974\r\n[600] 955 (LegContractSettlMonth) = ut, [601] 956 (LegInterestAccrualDate) = 20180528-16:38:03.974\r\n[602] 687 (LegQty) = 33589, [603] 690 (LegSwapType) = 4[RISK]\r\n[604] 683 (NoLegStipulations) = 2, [605] 688 (LegStipulationType) = nibh\r\n[606] 689 (LegStipulationValue) = at., [607] 688 (LegStipulationType) = fermentum\r\n[608] 689 (LegStipulationValue) = risus,, [609] 564 (LegPositionEffect) = placerat\r\n[610] 565 (LegCoveredOrUncovered) = 74238, [611] 539 (NoNestedPartyIDs) = 2\r\n[612] 524 (NestedPartyID) = luctus, [613] 525 (NestedPartyIDSource) = Vivamus\r\n[614] 538 (NestedPartyRole) = 41104, [615] 804 (NoNestedPartySubIDs) = 3\r\n[616] 545 (NestedPartySubID) = mi, [617] 805 (NestedPartySubIDType) = 26305\r\n[618] 545 (NestedPartySubID) = arcu, [619] 805 (NestedPartySubIDType) = 97537\r\n[620] 545 (NestedPartySubID) = rhoncus, [621] 805 (NestedPartySubIDType) = 71231\r\n[622] 524 (NestedPartyID) = amet, [623] 525 (NestedPartyIDSource) = sit\r\n[624] 538 (NestedPartyRole) = 66844, [625] 804 (NoNestedPartySubIDs) = 2\r\n[626] 545 (NestedPartySubID) = eleifend, [627] 805 (NestedPartySubIDType) = 8186\r\n[628] 545 (NestedPartySubID) = massa., [629] 805 (NestedPartySubIDType) = 82689\r\n[630] 654 (LegRefID) = metus, [631] 566 (LegPrice) = 6725\r\n[632] 587 (LegSettlType) = maximus, [633] 588 (LegSettlDate) = 20180528-16:38:03.974\r\n[634] 637 (LegLastPx) = 88665, [635] 797 (CopyMsgIndicator) = Y\r\n */\r\n\r\ntest('InstrmtLegExecGrp structure', () => {\r\n  const instrmtLegExecGrp: SegmentDescription = structure.layout.InstrmtLegExecGrp\r\n  expect(instrmtLegExecGrp).toBeTruthy()\r\n  expect(instrmtLegExecGrp.type).toEqual(SegmentType.Component)\r\n  expect(instrmtLegExecGrp.startPosition).toEqual(395)\r\n  expect(instrmtLegExecGrp.startTag).toEqual(555)\r\n  expect(instrmtLegExecGrp.endTag).toEqual(637)\r\n  expect(instrmtLegExecGrp.endPosition).toEqual(634)\r\n  expect(instrmtLegExecGrp.depth).toEqual(1)\r\n\r\n  const noLegs: SegmentDescription = structure.layout.NoLegs\r\n  expect(noLegs).toBeTruthy()\r\n  expect(noLegs.type).toEqual(SegmentType.Group)\r\n  expect(noLegs.startPosition).toEqual(395)\r\n  expect(noLegs.startTag).toEqual(555)\r\n  expect(noLegs.endTag).toEqual(637)\r\n  expect(noLegs.endPosition).toEqual(634)\r\n  expect(noLegs.depth).toEqual(2)\r\n  expect(noLegs.delimiterTag).toEqual(600)\r\n  expect(noLegs.delimiterPositions).toEqual([396, 465, 554])\r\n})\r\n\r\ntest('instrumentLeg structure', () => {\r\n  const instrumentLeg: SegmentDescription[] = structure.layout.InstrumentLeg\r\n  expect(instrumentLeg).toBeTruthy()\r\n  expect(Array.isArray(instrumentLeg)).toEqual(true)\r\n  expect(instrumentLeg.length).toEqual(3)\r\n\r\n  expect(instrumentLeg[0].type).toEqual(SegmentType.Component)\r\n  expect(instrumentLeg[0].depth).toEqual(3)\r\n  expect(instrumentLeg[0].startTag).toEqual(600)\r\n  expect(instrumentLeg[0].startPosition).toEqual(396)\r\n  expect(instrumentLeg[0].endPosition).toEqual(443)\r\n  expect(instrumentLeg[0].endTag).toEqual(956)\r\n\r\n  expect(instrumentLeg[1].type).toEqual(SegmentType.Component)\r\n  expect(instrumentLeg[1].depth).toEqual(3)\r\n  expect(instrumentLeg[1].startTag).toEqual(600)\r\n  expect(instrumentLeg[1].startPosition).toEqual(465)\r\n  expect(instrumentLeg[1].endPosition).toEqual(512)\r\n  expect(instrumentLeg[1].endTag).toEqual(956)\r\n\r\n  expect(instrumentLeg[2].type).toEqual(SegmentType.Component)\r\n  expect(instrumentLeg[2].depth).toEqual(3)\r\n  expect(instrumentLeg[2].startTag).toEqual(600)\r\n  expect(instrumentLeg[2].startPosition).toEqual(554)\r\n  expect(instrumentLeg[2].endPosition).toEqual(601)\r\n  expect(instrumentLeg[2].endTag).toEqual(956)\r\n})\r\n\r\ntest('LegSecAltIDGrp [0] structure', () => {\r\n  const legSecAltIDGrp: SegmentDescription[] = structure.layout.LegSecAltIDGrp\r\n  expect(legSecAltIDGrp).toBeTruthy()\r\n  expect(Array.isArray(legSecAltIDGrp)).toEqual(true)\r\n  expect(legSecAltIDGrp.length).toEqual(3)\r\n  const index: number = 0\r\n  expect(legSecAltIDGrp[index].type).toEqual(SegmentType.Component)\r\n  expect(legSecAltIDGrp[index].depth).toEqual(4)\r\n  expect(legSecAltIDGrp[index].startTag).toEqual(604)\r\n  expect(legSecAltIDGrp[index].startPosition).toEqual(400)\r\n  expect(legSecAltIDGrp[index].endPosition).toEqual(406)\r\n  expect(legSecAltIDGrp[index].endTag).toEqual(606)\r\n\r\n  const noLegSecurityAltID: SegmentDescription[] = structure.layout.NoLegSecurityAltID\r\n  expect(noLegSecurityAltID).toBeTruthy()\r\n  expect(Array.isArray(noLegSecurityAltID)).toEqual(true)\r\n  expect(noLegSecurityAltID.length).toEqual(3)\r\n\r\n  expect(noLegSecurityAltID[index].type).toEqual(SegmentType.Group)\r\n  expect(noLegSecurityAltID[index].depth).toEqual(5)\r\n  expect(noLegSecurityAltID[index].startTag).toEqual(604)\r\n  expect(noLegSecurityAltID[index].startPosition).toEqual(400)\r\n  expect(noLegSecurityAltID[index].endPosition).toEqual(406)\r\n  expect(noLegSecurityAltID[index].endTag).toEqual(606)\r\n  expect(noLegSecurityAltID[index].delimiterTag).toEqual(605)\r\n  expect(noLegSecurityAltID[index].delimiterPositions).toEqual([401, 403, 405])\r\n})\r\n\r\ntest('LegSecAltIDGrp [1] structure', () => {\r\n  const legSecAltIDGrp: SegmentDescription[] = structure.layout.LegSecAltIDGrp\r\n  expect(legSecAltIDGrp).toBeTruthy()\r\n  expect(Array.isArray(legSecAltIDGrp)).toEqual(true)\r\n  expect(legSecAltIDGrp.length).toEqual(3)\r\n  const index: number = 1\r\n  expect(legSecAltIDGrp[index].type).toEqual(SegmentType.Component)\r\n  expect(legSecAltIDGrp[index].depth).toEqual(4)\r\n  expect(legSecAltIDGrp[index].startTag).toEqual(604)\r\n  expect(legSecAltIDGrp[index].startPosition).toEqual(469)\r\n  expect(legSecAltIDGrp[index].endPosition).toEqual(475)\r\n  expect(legSecAltIDGrp[index].endTag).toEqual(606)\r\n\r\n  const noLegSecurityAltID: SegmentDescription[] = structure.layout.NoLegSecurityAltID\r\n  expect(noLegSecurityAltID).toBeTruthy()\r\n  expect(Array.isArray(noLegSecurityAltID)).toEqual(true)\r\n  expect(noLegSecurityAltID.length).toEqual(3)\r\n\r\n  expect(noLegSecurityAltID[index].type).toEqual(SegmentType.Group)\r\n  expect(noLegSecurityAltID[index].depth).toEqual(5)\r\n  expect(noLegSecurityAltID[index].startTag).toEqual(604)\r\n  expect(noLegSecurityAltID[index].startPosition).toEqual(469)\r\n  expect(noLegSecurityAltID[index].endPosition).toEqual(475)\r\n  expect(noLegSecurityAltID[index].endTag).toEqual(606)\r\n  expect(noLegSecurityAltID[index].delimiterTag).toEqual(605)\r\n  expect(noLegSecurityAltID[index].delimiterPositions).toEqual([470, 472, 474])\r\n})\r\n\r\ntest('LegSecAltIDGrp [2] structure', () => {\r\n  const legSecAltIDGrp: SegmentDescription[] = structure.layout.LegSecAltIDGrp\r\n  expect(legSecAltIDGrp).toBeTruthy()\r\n  expect(Array.isArray(legSecAltIDGrp)).toEqual(true)\r\n  expect(legSecAltIDGrp.length).toEqual(3)\r\n  const index: number = 2\r\n  expect(legSecAltIDGrp[index].type).toEqual(SegmentType.Component)\r\n  expect(legSecAltIDGrp[index].depth).toEqual(4)\r\n  expect(legSecAltIDGrp[index].startTag).toEqual(604)\r\n  expect(legSecAltIDGrp[index].startPosition).toEqual(558)\r\n  expect(legSecAltIDGrp[index].endPosition).toEqual(564)\r\n  expect(legSecAltIDGrp[index].endTag).toEqual(606)\r\n\r\n  const noLegSecurityAltID: SegmentDescription[] = structure.layout.NoLegSecurityAltID\r\n  expect(noLegSecurityAltID).toBeTruthy()\r\n  expect(Array.isArray(noLegSecurityAltID)).toEqual(true)\r\n  expect(noLegSecurityAltID.length).toEqual(3)\r\n\r\n  expect(noLegSecurityAltID[index].type).toEqual(SegmentType.Group)\r\n  expect(noLegSecurityAltID[index].depth).toEqual(5)\r\n  expect(noLegSecurityAltID[index].startTag).toEqual(604)\r\n  expect(noLegSecurityAltID[index].startPosition).toEqual(558)\r\n  expect(noLegSecurityAltID[index].endPosition).toEqual(564)\r\n  expect(noLegSecurityAltID[index].endTag).toEqual(606)\r\n  expect(noLegSecurityAltID[index].delimiterTag).toEqual(605)\r\n  expect(noLegSecurityAltID[index].delimiterPositions).toEqual([559, 561, 563])\r\n})\r\n\r\ntest('expect one message view from one line fix file', () => {\r\n  expect(views).toHaveLength(1)\r\n}, 1000)\r\n\r\ntest('can create object from view', () => {\r\n  const erView: MsgView = views[0]\r\n  const erAsObject: ILooseObject = erView.toObject()\r\n  expect(erAsObject).toBeTruthy()\r\n}, 1000)\r\n\r\ntest('simple tag decoding', () => {\r\n  const erView: MsgView = views[0]\r\n  expect(erView.getString(35)).toEqual('8')\r\n  expect(erView.getString('MsgType')).toEqual('8')\r\n  expect(erView.getString(8)).toEqual('FIX4.4')\r\n  expect(erView.getTyped(9)).toEqual(6542)\r\n  expect(erView.getTyped('TotNumReports')).toEqual(19404)\r\n  expect(erView.getTyped('StrikePrice')).toEqual(52639)\r\n}, 1000)\r\n\r\ntest('simple repeated tag decoding', () => {\r\n  const erView: MsgView = views[0]\r\n  expect(erView.getStrings('PartyID')).toEqual(['magna.', 'iaculis', 'vitae,'])\r\n}, 1000)\r\n\r\ntest('repeated group decoding of Parties', () => {\r\n  const erView: MsgView = views[0]\r\n  const partyView: MsgView = erView.getView('Parties')\r\n  expect(partyView).toBeTruthy()\r\n  const partyViewAsObject: ILooseObject = partyView.toObject()\r\n  expect(partyViewAsObject).toBeTruthy()\r\n  expect(partyViewAsObject.NoPartyIDs.length).toEqual(3)\r\n  expect(partyViewAsObject.NoPartyIDs[0]).toEqual({\r\n    PartyID: 'magna.',\r\n    PartyIDSource: '9',\r\n    PartyRole: 28,\r\n    PtysSubGrp: {\r\n      NoPartySubIDs: [\r\n        {\r\n          PartySubID: 'et',\r\n          PartySubIDType: 22\r\n        },\r\n        {\r\n          PartySubID: 'leo,',\r\n          PartySubIDType: 10\r\n        }\r\n      ]\r\n    }\r\n  })\r\n  const noParties: MsgView = partyView.getView('NoPartyIDs')\r\n  expect(noParties).toBeTruthy()\r\n  expect(noParties.groupCount()).toEqual(3)\r\n  const np0View: MsgView = noParties.getGroupInstance(0)\r\n  expect(np0View).toBeTruthy()\r\n  expect(np0View.getString('PartyID')).toEqual('magna.')\r\n  expect(np0View.getString('PartyIDSource')).toEqual('9')\r\n  const np0ViewPtysSubGrp: MsgView = np0View.getView('PtysSubGrp')\r\n  const np0ViewPtysSubGrpAsObject: ILooseObject = np0ViewPtysSubGrp.toObject()\r\n  expect(np0ViewPtysSubGrpAsObject).toBeTruthy()\r\n  expect(np0ViewPtysSubGrpAsObject).toEqual(partyViewAsObject.NoPartyIDs[0].PtysSubGrp)\r\n}, 1000)\r\n\r\ntest('instrument component decode', () => {\r\n  const erView: MsgView = views[0]\r\n    // check the instrument component\r\n  const instrumentView: MsgView = erView.getView('Instrument')\r\n  expect(instrumentView).toBeTruthy()\r\n  expect(instrumentView.getString('Symbol')).toEqual('ac,')\r\n  const secAltIDGrpAsObject: ILooseObject = instrumentView.getView('SecAltIDGrp').toObject()\r\n  expect(secAltIDGrpAsObject).toBeTruthy()\r\n  expect(secAltIDGrpAsObject.NoSecurityAltID.length).toEqual(2)\r\n}, 1000)\r\n\r\ntest('UndInstrmtGrp component decode', () => {\r\n  const erView: MsgView = views[0]\r\n    // check the instrument component\r\n  const undInstrmtGrpView: MsgView = erView.getView('UndInstrmtGrp')\r\n  expect(undInstrmtGrpView).toBeTruthy()\r\n  const undInstrmtGrpViewAsObject: IUndInstrmtGrp = undInstrmtGrpView.toObject()\r\n  expect(undInstrmtGrpViewAsObject).toBeTruthy()\r\n  expect(undInstrmtGrpViewAsObject.NoUnderlyings.length).toEqual(2)\r\n  const underlying0: IUnderlyingInstrument = undInstrmtGrpViewAsObject.NoUnderlyings[0].UnderlyingInstrument\r\n  expect(underlying0).toBeTruthy()\r\n  expect(underlying0.UnderlyingSymbol).toEqual('massa.')\r\n  expect(underlying0.UndSecAltIDGrp).toEqual(\r\n    {\r\n      NoUnderlyingSecurityAltID: [\r\n        {\r\n          UnderlyingSecurityAltID: 'ornare',\r\n          UnderlyingSecurityAltIDSource: 'magna.'\r\n        },\r\n        {\r\n          UnderlyingSecurityAltID: 'non',\r\n          UnderlyingSecurityAltIDSource: 'at'\r\n        },\r\n        {\r\n          UnderlyingSecurityAltID: 'hendrerit',\r\n          UnderlyingSecurityAltIDSource: 'Pellentesque'\r\n        }]\r\n    })\r\n  const underlying1: ILooseObject = undInstrmtGrpViewAsObject.NoUnderlyings[1].UnderlyingInstrument\r\n  expect(underlying1).toBeTruthy()\r\n  expect(underlying1.UnderlyingSymbol).toEqual('erat')\r\n  expect(underlying1.UndSecAltIDGrp).toEqual(\r\n    {\r\n      NoUnderlyingSecurityAltID: [\r\n        {\r\n          UnderlyingSecurityAltID: 'Quisque',\r\n          UnderlyingSecurityAltIDSource: 'tortor'\r\n        }\r\n      ]\r\n    })\r\n}, 1000)\r\n"]}