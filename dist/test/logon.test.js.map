{"version":3,"file":"logon.test.js","sourceRoot":"","sources":["../../src/test/logon.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path'\r\nimport { SegmentDescription, SegmentType, Structure, AsciiChars, MsgView } from '../buffer'\r\nimport { ILooseObject } from '../collections/collection'\r\nimport { FixDefinitions } from '../dictionary'\r\nimport { ISessionDescription, AsciiMsgTransmitter } from '../transport'\r\nimport { replayFixFile, getDefinitions } from '../util'\r\nimport { JsFixConfig } from '../config'\r\n\r\nconst root: string = path.join(__dirname, '../../data')\r\n\r\nlet definitions: FixDefinitions\r\nlet session: AsciiMsgTransmitter\r\nlet views: MsgView[]\r\nlet structure: Structure\r\n\r\nconst asStrings: string[] = [\r\n  'FIX4.4',\r\n  '0000208',\r\n  'A',\r\n  'sender-10',\r\n  'target-20',\r\n  '1',\r\n  'sub-a',\r\n  '20180610-10:39:01.621',\r\n  '2',\r\n  '62441',\r\n  '20',\r\n  'VgfoSqo56NqSVI1fLdlI',\r\n  'Y',\r\n  '4886',\r\n  '20',\r\n  '1',\r\n  'ipsum',\r\n  'R',\r\n  'N',\r\n  'sit',\r\n  'consectetur',\r\n  '49'\r\n]\r\n\r\nbeforeAll(async () => {\r\n  const sessionDescription: ISessionDescription = require(path.join(root, 'session/qf-fix44.json'))\r\n  definitions = await getDefinitions(sessionDescription.application.dictionary)\r\n  const config = new JsFixConfig(null, definitions, sessionDescription, AsciiChars.Pipe)\r\n  session = new AsciiMsgTransmitter(config)\r\n  views = await replayFixFile(definitions, sessionDescription, path.join(root, 'examples/FIX.4.4/quickfix/logon/fix.txt'), AsciiChars.Pipe)\r\n  if (views && views.length > 0) {\r\n    structure = views[0].structure\r\n  }\r\n}, 45000)\r\n\r\ntest('expect a structure from fix msg', () => {\r\n  expect(structure).toBeTruthy()\r\n})\r\n\r\ntest('Logon structure', () => {\r\n  const logon: SegmentDescription = structure.layout.Logon\r\n  expect(logon).toBeTruthy()\r\n  expect(logon.type).toEqual(SegmentType.Msg)\r\n  expect(logon.startPosition).toEqual(0)\r\n  expect(logon.startTag).toEqual(8)\r\n  expect(logon.endPosition).toEqual(21)\r\n  expect(logon.endTag).toEqual(554)\r\n})\r\n\r\ntest('Logon MsgTypes', () => {\r\n  const msgTypes: SegmentDescription = structure.layout.NoMsgTypes\r\n  expect(msgTypes).toBeTruthy()\r\n  expect(msgTypes.type).toEqual(SegmentType.Group)\r\n  expect(msgTypes.delimiterTag).toEqual(372)\r\n  expect(msgTypes.delimiterPositions.length).toEqual(1)\r\n  expect(msgTypes.delimiterPositions).toEqual([16])\r\n})\r\n\r\ntest('Logon Object', () => {\r\n  const logonAsObject: ILooseObject = views[0].toObject()\r\n  expect(logonAsObject).toBeTruthy()\r\n  expect(logonAsObject.Username).toEqual('sit')\r\n  expect(logonAsObject.Password).toEqual('consectetur')\r\n  expect(logonAsObject.NoMsgTypes).toEqual([\r\n    {\r\n      MsgDirection: 'R',\r\n      RefMsgType: 'ipsum'\r\n    }])\r\n})\r\n\r\ntest('values as strings', () => {\r\n  const view: MsgView = views[0]\r\n  const strings: string[] = view.getStrings()\r\n  expect(strings).toEqual(asStrings)\r\n})\r\n"]}